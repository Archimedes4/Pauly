{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { accessTokenContent } from \"../../App\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Svg, { Polygon, Rect, G, Path } from 'react-native-svg';\nimport Picker from \"./Picker/Picker\";\nimport callMsGraph from \"../Functions/microsoftAssets\";\nimport { useMsal } from '@azure/msal-react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar MicrosoftUploadModeType = function (MicrosoftUploadModeType) {\n  MicrosoftUploadModeType[MicrosoftUploadModeType[\"ShareLink\"] = 0] = \"ShareLink\";\n  MicrosoftUploadModeType[MicrosoftUploadModeType[\"Personal\"] = 1] = \"Personal\";\n  MicrosoftUploadModeType[MicrosoftUploadModeType[\"Site\"] = 2] = \"Site\";\n  return MicrosoftUploadModeType;\n}(MicrosoftUploadModeType || {});\nvar windowDimensions = Dimensions.get('window');\nvar screenDimensions = Dimensions.get('screen');\nexport default function (_ref) {\n  var onSetIsShowingUpload = _ref.onSetIsShowingUpload,\n    onSetIsShowingMicrosoftUpload = _ref.onSetIsShowingMicrosoftUpload,\n    onSelectedFile = _ref.onSelectedFile;\n  var _useMsal = useMsal(),\n    instance = _useMsal.instance,\n    accounts = _useMsal.accounts;\n  var microsoftAccessToken = useContext(accessTokenContent);\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    usersTeams = _useState2[0],\n    setUsersTeams = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    usersFiles = _useState4[0],\n    setUsersFies = _useState4[1];\n  var _useState5 = useState(\"https://graph.microsoft.com/v1.0/me/drive/root/children\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    microsoftPath = _useState6[0],\n    setMicrosoftPath = _useState6[1];\n  var _useState7 = useState(MicrosoftUploadModeType.Personal),\n    _useState8 = _slicedToArray(_useState7, 2),\n    selectedMicrosoftUploadMode = _useState8[0],\n    setSelectedMicrosoftUploadMode = _useState8[1];\n  var _useState9 = useState(false),\n    _useState10 = _slicedToArray(_useState9, 2),\n    fileBackAvaliable = _useState10[0],\n    setFilesBackAvaliable = _useState10[1];\n  var _useState11 = useState(\"\"),\n    _useState12 = _slicedToArray(_useState11, 2),\n    shareLinkString = _useState12[0],\n    setShareLinkString = _useState12[1];\n  var _useState13 = useState({\n      window: windowDimensions,\n      screen: screenDimensions\n    }),\n    _useState14 = _slicedToArray(_useState13, 2),\n    dimensions = _useState14[0],\n    setDimensions = _useState14[1];\n  useEffect(function () {\n    var subscription = Dimensions.addEventListener('change', function (_ref2) {\n      var window = _ref2.window,\n        screen = _ref2.screen;\n      setDimensions({\n        window: window,\n        screen: screen\n      });\n    });\n    return function () {\n      return subscription == null ? void 0 : subscription.remove();\n    };\n  });\n  useEffect(function () {\n    getUserMicrosoftFiles(microsoftPath);\n    getUserTeams();\n  }, []);\n  function getUserMicrosoftFiles(_x) {\n    return _getUserMicrosoftFiles.apply(this, arguments);\n  }\n  function _getUserMicrosoftFiles() {\n    _getUserMicrosoftFiles = _asyncToGenerator(function* (path) {\n      fetch(path, {\n        method: \"Get\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + microsoftAccessToken\n        }\n      }).then(function (response) {\n        return response.json();\n      }).then(function (data) {\n        console.log(data);\n        if (data[\"error\"] === undefined) {\n          var newFiles = [];\n          for (var index = 0; index <= data[\"value\"].length; index++) {\n            if (data['value'][index] !== undefined) {\n              if (\"@microsoft.graph.downloadUrl\" in data[\"value\"][index]) {\n                newFiles.push({\n                  name: data[\"value\"][index][\"name\"],\n                  id: data[\"value\"][index][\"id\"],\n                  lastModified: data[\"value\"][index][\"lastModifiedDateTime\"],\n                  folder: false,\n                  parentDriveId: data[\"value\"][index][\"parentReference\"][\"driveId\"],\n                  parentPath: data[\"value\"][index][\"parentReference\"][\"path\"],\n                  itemGraphPath: path\n                });\n              } else {\n                newFiles.push({\n                  name: data[\"value\"][index][\"name\"],\n                  id: data[\"value\"][index][\"id\"],\n                  lastModified: data[\"value\"][index][\"lastModifiedDateTime\"],\n                  folder: true,\n                  parentDriveId: data[\"value\"][index][\"parentReference\"][\"driveId\"],\n                  parentPath: data[\"value\"][index][\"parentReference\"][\"path\"],\n                  itemGraphPath: \"FOLDER\"\n                });\n              }\n            }\n          }\n          setUsersFies(newFiles);\n        }\n      });\n    });\n    return _getUserMicrosoftFiles.apply(this, arguments);\n  }\n  function getUserTeams() {\n    return _getUserTeams.apply(this, arguments);\n  }\n  function _getUserTeams() {\n    _getUserTeams = _asyncToGenerator(function* () {\n      var result = yield callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/me/joinedTeams\", instance, accounts);\n      if (result.ok) {\n        var data = yield result.json();\n        console.log(\"This is teams data\", data);\n        if (data[\"error\"] === undefined) {\n          var NewData = [];\n          for (var index = 0; index < data[\"value\"].length; index++) {\n            if (data[\"value\"][index] !== undefined) {\n              NewData.push({\n                TeamName: data[\"value\"][index][\"displayName\"],\n                TeamId: data[\"value\"][index][\"id\"],\n                TeamDescription: data[\"value\"][index][\"description\"]\n              });\n            }\n          }\n          console.log(\"This is the new teams\", NewData);\n          setUsersTeams(NewData);\n        }\n      }\n    });\n    return _getUserTeams.apply(this, arguments);\n  }\n  function getShareFile(_x2) {\n    return _getShareFile.apply(this, arguments);\n  }\n  function _getShareFile() {\n    _getShareFile = _asyncToGenerator(function* (ShareLink) {\n      console.log(\"This https://graph.microsoft.com/v1.0/shares/\" + ShareLink + \"/driveItem?$select=content.downloadUrl\");\n      var result = yield callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/shares/\" + ShareLink + \"/driveItem?$select=content.downloadUrl\", instance, accounts);\n      console.log(result);\n      if (result.ok) {\n        var data = yield result.json();\n        console.log(data);\n      }\n    });\n    return _getShareFile.apply(this, arguments);\n  }\n  return _jsxs(View, {\n    children: [_jsxs(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: [_jsx(Text, {\n        style: {\n          textAlign: \"left\"\n        },\n        children: \"Upload File From Microsoft\"\n      }), _jsx(Pressable, {\n        onPress: function onPress() {\n          onSetIsShowingUpload(false);\n          onSetIsShowingMicrosoftUpload(false);\n        },\n        children: _jsx(View, {\n          children: _jsx(Text, {\n            children: \"Back\"\n          })\n        })\n      })]\n    }), _jsxs(View, {\n      children: [_jsx(View, {\n        style: {\n          width: 500\n        },\n        children: _jsxs(Picker, {\n          selectedIndex: selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal ? 0 : selectedMicrosoftUploadMode === MicrosoftUploadModeType.ShareLink ? 1 : 2,\n          onSetSelectedIndex: function onSetSelectedIndex(item) {\n            item === 0 ? setSelectedMicrosoftUploadMode(MicrosoftUploadModeType.Personal) : item === 1 ? setSelectedMicrosoftUploadMode(MicrosoftUploadModeType.ShareLink) : setSelectedMicrosoftUploadMode(MicrosoftUploadModeType.Site);\n          },\n          width: 500,\n          height: 30,\n          children: [_jsx(Text, {\n            style: {\n              margin: 0,\n              padding: 0\n            },\n            children: \"Personal\"\n          }), _jsx(Text, {\n            style: {\n              margin: 0,\n              padding: 0\n            },\n            children: \"Link\"\n          }), _jsx(Text, {\n            style: {\n              margin: 0,\n              padding: 0\n            },\n            children: \"Teams\"\n          })]\n        })\n      }), selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal ? _jsxs(View, {\n        children: [fileBackAvaliable ? _jsx(\"button\", {\n          onClick: function onClick() {\n            var microsftPathArray = microsoftPath.split(\"/\");\n            console.log(microsftPathArray);\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            var outputString = \"\";\n            for (var index = 0; index < microsftPathArray.length; index++) {\n              outputString += microsftPathArray[index] + \"/\";\n            }\n            outputString += \"/items/root/children\";\n            setMicrosoftPath(outputString);\n            getUserMicrosoftFiles(outputString);\n            setFilesBackAvaliable(false);\n          },\n          children: \"Back\"\n        }) : null, usersFiles.map(function (file) {\n          return _jsx(View, {\n            children: file.folder ? _jsx(Pressable, {\n              onPress: function onPress() {\n                setMicrosoftPath(\"https://graph.microsoft.com/v1.0/drives/\" + file.parentDriveId + \"/items/\" + file.id + \"/children\");\n                getUserMicrosoftFiles(\"https://graph.microsoft.com/v1.0/drives/\" + file.parentDriveId + \"/items/\" + file.id + \"/children\");\n                setFilesBackAvaliable(true);\n              },\n              children: _jsxs(View, {\n                style: {\n                  flexDirection: \"row\"\n                },\n                children: [_jsxs(Svg, {\n                  stroke: \"currentColor\",\n                  fill: \"currentColor\",\n                  \"stroke-width\": \"0\",\n                  viewBox: \"0 0 48 48\",\n                  \"enable-background\": \"new 0 0 48 48\",\n                  height: \"1em\",\n                  width: \"1em\",\n                  children: [_jsx(Path, {\n                    fill: \"#FFA000\",\n                    d: \"M40,12H22l-4-4H8c-2.2,0-4,1.8-4,4v8h40v-4C44,13.8,42.2,12,40,12z\"\n                  }), _jsx(Path, {\n                    fill: \"#FFCA28\",\n                    d: \"M40,12H8c-2.2,0-4,1.8-4,4v20c0,2.2,1.8,4,4,4h32c2.2,0,4-1.8,4-4V16C44,13.8,42.2,12,40,12z\"\n                  })]\n                }), _jsx(Text, {\n                  style: {\n                    padding: 0,\n                    margin: 0\n                  },\n                  children: file.name\n                })]\n              })\n            }) : _jsx(Pressable, {\n              onPress: function onPress() {\n                onSelectedFile(file);\n              },\n              children: _jsxs(View, {\n                style: {\n                  flexDirection: \"row\"\n                },\n                children: [_jsxs(Svg, {\n                  stroke: \"currentColor\",\n                  fill: \"currentColor\",\n                  \"stroke-width\": \"0\",\n                  viewBox: \"0 0 48 48\",\n                  \"enable-background\": \"new 0 0 48 48\",\n                  height: \"1em\",\n                  width: \"1em\",\n                  children: [_jsx(Polygon, {\n                    fill: \"#90CAF9\",\n                    points: \"40,45 8,45 8,3 30,3 40,13\"\n                  }), _jsx(Polygon, {\n                    fill: \"#E1F5FE\",\n                    points: \"38.5,14 29,14 29,4.5\"\n                  }), _jsxs(G, {\n                    fill: \"#1976D2\",\n                    children: [_jsx(Rect, {\n                      x: \"16\",\n                      y: \"21\",\n                      width: \"17\",\n                      height: \"2\"\n                    }), _jsx(Rect, {\n                      x: \"16\",\n                      y: \"25\",\n                      width: \"13\",\n                      height: \"2\"\n                    }), _jsx(Rect, {\n                      x: \"16\",\n                      y: \"29\",\n                      width: \"17\",\n                      height: \"2\"\n                    }), _jsx(Rect, {\n                      x: \"16\",\n                      y: \"33\",\n                      width: \"13\",\n                      height: \"2\"\n                    })]\n                  })]\n                }), _jsx(Text, {\n                  style: {\n                    padding: 0,\n                    margin: 0\n                  },\n                  children: file.name\n                })]\n              })\n            })\n          });\n        })]\n      }) : null, selectedMicrosoftUploadMode === MicrosoftUploadModeType.ShareLink ? _jsxs(View, {\n        children: [_jsxs(View, {\n          children: [_jsx(Text, {\n            children: \"Share Link\"\n          }), _jsx(TextInput, {\n            placeholder: \"Disabled input\",\n            value: shareLinkString,\n            onChangeText: function onChangeText(e) {\n              setShareLinkString(e);\n            }\n          })]\n        }), _jsx(Pressable, {\n          onPress: function onPress() {\n            var base64Value = btoa(shareLinkString);\n            base64Value.replace(\"/\", \"_\");\n            base64Value.replace(\"+\", \"-\");\n            base64Value.trimEnd();\n            base64Value = \"u!\" + base64Value;\n            getShareFile(base64Value);\n          },\n          children: _jsx(Text, {\n            children: \"Submit\"\n          })\n        })]\n      }) : null, selectedMicrosoftUploadMode === MicrosoftUploadModeType.Site ? _jsx(View, {\n        style: {\n          height: dimensions.window.height * 0.6,\n          overflow: \"scroll\"\n        },\n        children: usersTeams.map(function (team) {\n          return _jsx(View, {\n            children: team.TeamName !== \"Student Password Policy\" && team.TeamName !== \"St Paul's High School\" && team.TeamName !== \"Adobe_Student\" && team.TeamName !== \"O365 Student A3 License Assignment\" && team.TeamName !== \"Student\" ? _jsx(View, {\n              children: _jsx(Text, {\n                children: team.TeamName\n              })\n            }) : null\n          });\n        })\n      }) : null]\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","accessTokenContent","Pressable","View","Text","TextInput","Dimensions","Svg","Polygon","Rect","G","Path","Picker","callMsGraph","useMsal","jsx","_jsx","jsxs","_jsxs","MicrosoftUploadModeType","windowDimensions","get","screenDimensions","_ref","onSetIsShowingUpload","onSetIsShowingMicrosoftUpload","onSelectedFile","_useMsal","instance","accounts","microsoftAccessToken","_useState","_useState2","_slicedToArray","usersTeams","setUsersTeams","_useState3","_useState4","usersFiles","setUsersFies","_useState5","_useState6","microsoftPath","setMicrosoftPath","_useState7","Personal","_useState8","selectedMicrosoftUploadMode","setSelectedMicrosoftUploadMode","_useState9","_useState10","fileBackAvaliable","setFilesBackAvaliable","_useState11","_useState12","shareLinkString","setShareLinkString","_useState13","window","screen","_useState14","dimensions","setDimensions","subscription","addEventListener","_ref2","remove","getUserMicrosoftFiles","getUserTeams","_x","_getUserMicrosoftFiles","apply","arguments","_asyncToGenerator","path","fetch","method","headers","then","response","json","data","console","log","undefined","newFiles","index","length","push","name","id","lastModified","folder","parentDriveId","parentPath","itemGraphPath","_getUserTeams","result","accessToken","ok","NewData","TeamName","TeamId","TeamDescription","getShareFile","_x2","_getShareFile","ShareLink","children","style","flexDirection","textAlign","onPress","width","selectedIndex","onSetSelectedIndex","item","Site","height","margin","padding","onClick","microsftPathArray","split","pop","outputString","map","file","stroke","fill","viewBox","d","points","x","y","placeholder","value","onChangeText","e","base64Value","btoa","replace","trimEnd","overflow","team"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/UI/microsoftFilePicker.tsx"],"sourcesContent":["import React, { useContext, useEffect, useState } from 'react'\n// import { Card, Stack, Button, Form } from 'react-bootstrap';\nimport { accessTokenContent } from '../../App';\nimport { Button, Pressable, View, Text, TextInput, Dimensions } from 'react-native';\nimport Svg, { Polygon, Rect, G, Path } from 'react-native-svg';\n// import {FcFolder, FcDocument} from \"react-icons/fc\"\nimport Picker from \"./Picker/Picker\"\nimport callMsGraph from '../Functions/microsoftAssets';\nimport { useMsal } from '@azure/msal-react';\n\nenum MicrosoftUploadModeType {\n    ShareLink,\n    Personal,\n    Site\n}\ndeclare global{\n    type TeamsGroupType = {\n        TeamName: string\n        TeamId: string\n        TeamDescription: string\n    }\n    \n    \n    type microsoftFileType = {\n        name: string\n        id: string\n        lastModified: string\n        folder: boolean\n        parentDriveId: string\n        parentPath: string\n        itemGraphPath: string\n    }\n}\n\nconst windowDimensions = Dimensions.get('window');\nconst screenDimensions = Dimensions.get('screen');\n\nexport default function({ onSetIsShowingUpload, onSetIsShowingMicrosoftUpload, onSelectedFile }:{\n    onSetIsShowingUpload: (item: boolean) => void,\n    onSetIsShowingMicrosoftUpload: (item: boolean) => void,\n    onSelectedFile: (item: microsoftFileType) => void\n}) {\n    const { instance, accounts } = useMsal();\n    const microsoftAccessToken = useContext(accessTokenContent);\n    const [usersTeams, setUsersTeams] = useState<TeamsGroupType[]>([])\n    const [usersFiles, setUsersFies] = useState<microsoftFileType[]>([])\n    const [microsoftPath, setMicrosoftPath] = useState<string>(\"https://graph.microsoft.com/v1.0/me/drive/root/children\")\n    const [selectedMicrosoftUploadMode, setSelectedMicrosoftUploadMode] = useState<MicrosoftUploadModeType>(MicrosoftUploadModeType.Personal)\n    const [fileBackAvaliable, setFilesBackAvaliable] = useState<boolean>(false)\n    const [shareLinkString, setShareLinkString] = useState<string>(\"\")\n    const [dimensions, setDimensions] = useState({\n        window: windowDimensions,\n        screen: screenDimensions,\n    });\n\n    useEffect(() => {\n        const subscription = Dimensions.addEventListener(\n            'change',\n            ({window, screen}) => {\n                setDimensions({window, screen});\n            },\n        );\n        return () => subscription?.remove();\n    });\n\n    useEffect(() => {\n        getUserMicrosoftFiles(microsoftPath)\n        getUserTeams()\n    }, [])\n\n    async function getUserMicrosoftFiles(path: string) {\n        fetch(path, {method: \"Get\", headers: {\n          \"Content-Type\": \"application/json\",\n          \"Authorization\": \"Bearer \" + microsoftAccessToken\n        },})\n        .then(response => response.json())\n        .then(data => {\n          console.log(data)\n          if (data[\"error\"] === undefined){\n            var newFiles: microsoftFileType [] = []\n            for(var index = 0; index <= data[\"value\"].length; index++){\n                if (data['value'][index] !== undefined){\n                    if (\"@microsoft.graph.downloadUrl\" in data[\"value\"][index]){\n                        newFiles.push(\n                        {\n                            name: data[\"value\"][index][\"name\"], \n                            id: data[\"value\"][index][\"id\"], \n                            lastModified: data[\"value\"][index][\"lastModifiedDateTime\"], \n                            folder: false, \n                            parentDriveId: data[\"value\"][index][\"parentReference\"][\"driveId\"], \n                            parentPath: data[\"value\"][index][\"parentReference\"][\"path\"],\n                            itemGraphPath: path\n                        })\n                    } else {\n                        newFiles.push(\n                        {\n                            name: data[\"value\"][index][\"name\"], \n                            id: data[\"value\"][index][\"id\"], \n                            lastModified: data[\"value\"][index][\"lastModifiedDateTime\"], \n                            folder: true, \n                            parentDriveId: data[\"value\"][index][\"parentReference\"][\"driveId\"],\n                            parentPath: data[\"value\"][index][\"parentReference\"][\"path\"],\n                            itemGraphPath: \"FOLDER\"\n                        })\n                    }\n                }\n            }\n            setUsersFies(newFiles)\n          }\n        })\n    }\n\n    async function getUserTeams() {\n        const result = await callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/me/joinedTeams\", instance, accounts)//TO DO make sure this works on live tenancy\n        if (result.ok){\n            const data = await result.json()\n            console.log(\"This is teams data\", data)\n            if (data[\"error\"] === undefined){\n                const NewData: TeamsGroupType[] = []\n                for(var index = 0; index < data[\"value\"].length; index++){\n                    if (data[\"value\"][index] !== undefined){\n                        NewData.push({TeamName: data[\"value\"][index][\"displayName\"], TeamId: data[\"value\"][index][\"id\"], TeamDescription: data[\"value\"][index][\"description\"]})\n                    }\n                }\n                console.log(\"This is the new teams\", NewData)\n                setUsersTeams(NewData)\n            }\n        }\n    }\n    \n    async function getShareFile(ShareLink: string) {\n        console.log(\"This https://graph.microsoft.com/v1.0/shares/\" + ShareLink + \"/driveItem?$select=content.downloadUrl\")\n        const result = await callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/shares/\" + ShareLink + \"/driveItem?$select=content.downloadUrl\", instance, accounts)\n        console.log(result)\n        if (result.ok){\n            const data = await result.json()\n            console.log(data)\n        }\n    }\n    return (\n        <View>\n            <View style={{flexDirection: \"row\"}}>\n                <Text style={{textAlign: \"left\"}}>Upload File From Microsoft</Text>\n                <Pressable onPress={() => {onSetIsShowingUpload(false); onSetIsShowingMicrosoftUpload(false)}}><View><Text>Back</Text></View></Pressable>\n            </View>\n            <View>\n            <View style={{width: 500}}>\n                <Picker selectedIndex={(selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal) ? 0:(selectedMicrosoftUploadMode === MicrosoftUploadModeType.ShareLink) ? 1:2} onSetSelectedIndex={(item: number) => {(item === 0) ? setSelectedMicrosoftUploadMode(MicrosoftUploadModeType.Personal):(item === 1) ? setSelectedMicrosoftUploadMode(MicrosoftUploadModeType.ShareLink):setSelectedMicrosoftUploadMode(MicrosoftUploadModeType.Site)}} width={500} height={30} >\n                    <Text style={{margin: 0, padding: 0}}>Personal</Text>\n                    <Text style={{margin: 0, padding: 0}}>Link</Text>\n                    <Text style={{margin: 0, padding: 0}}>Teams</Text>\n                </Picker>\n            </View>\n            { (selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal) ? \n                <View>\n                    { fileBackAvaliable ? <button onClick={() => {\n                        const microsftPathArray = microsoftPath.split(\"/\")\n                        console.log(microsftPathArray)\n                        microsftPathArray.pop()\n                        microsftPathArray.pop()\n                        microsftPathArray.pop()\n                        var outputString = \"\"\n                        for(var index = 0; index < microsftPathArray.length; index++){\n                            outputString += microsftPathArray[index] + \"/\"\n                        }\n                        outputString += \"/items/root/children\"\n                        setMicrosoftPath(outputString)\n                        getUserMicrosoftFiles(outputString)\n                        setFilesBackAvaliable(false)\n                    }}>Back</button>:null\n\n                    }\n                    { usersFiles.map((file) => (\n                        <View>\n                            {file.folder ? \n                                <Pressable onPress={() => {\n                                    setMicrosoftPath(\"https://graph.microsoft.com/v1.0/drives/\" + file.parentDriveId + \"/items/\" + file.id + \"/children\")\n                                    getUserMicrosoftFiles(\"https://graph.microsoft.com/v1.0/drives/\" + file.parentDriveId + \"/items/\" + file.id + \"/children\")\n                                    setFilesBackAvaliable(true)\n                                }}>\n                                    <View style={{flexDirection: \"row\"}}>\n                                        <Svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 48 48\" enable-background=\"new 0 0 48 48\" height=\"1em\" width=\"1em\">\n                                            <Path fill=\"#FFA000\" d=\"M40,12H22l-4-4H8c-2.2,0-4,1.8-4,4v8h40v-4C44,13.8,42.2,12,40,12z\" />\n                                            <Path fill=\"#FFCA28\" d=\"M40,12H8c-2.2,0-4,1.8-4,4v20c0,2.2,1.8,4,4,4h32c2.2,0,4-1.8,4-4V16C44,13.8,42.2,12,40,12z\" />\n                                        </Svg>\n                                        <Text style={{padding: 0, margin: 0}}>{file.name}</Text>\n                                    </View>\n                                </Pressable>:\n                                <Pressable onPress={() => {\n                                    onSelectedFile(file)\n                                }}>\n                                    <View style={{flexDirection: \"row\"}}>\n                                        <Svg stroke=\"currentColor\" fill=\"currentColor\" stroke-width=\"0\" viewBox=\"0 0 48 48\" enable-background=\"new 0 0 48 48\" height=\"1em\" width=\"1em\">\n                                            <Polygon fill=\"#90CAF9\" points=\"40,45 8,45 8,3 30,3 40,13\" />\n                                            <Polygon fill=\"#E1F5FE\" points=\"38.5,14 29,14 29,4.5\"/>\n                                            <G fill=\"#1976D2\">\n                                                <Rect x=\"16\" y=\"21\" width=\"17\" height=\"2\" />\n                                                <Rect x=\"16\" y=\"25\" width=\"13\" height=\"2\" />\n                                                <Rect x=\"16\" y=\"29\" width=\"17\" height=\"2\" />\n                                                <Rect x=\"16\" y=\"33\" width=\"13\" height=\"2\" />\n                                            </G>\n                                        </Svg>\n                                        <Text style={{padding: 0, margin: 0}}>{file.name}</Text>\n                                    </View>\n                                </Pressable>\n                            }\n                        </View>))\n                    }\n                </View>:null\n            }\n            { (selectedMicrosoftUploadMode === MicrosoftUploadModeType.ShareLink) ? \n                <View>\n                    <View>\n                        <Text>Share Link</Text>\n                        <TextInput placeholder='Disabled input' value={shareLinkString} onChangeText={(e) => {setShareLinkString(e)}}/>\n                    </View>\n                    <Pressable onPress={() => {\n                        var base64Value = btoa(shareLinkString)\n                        base64Value.replace(\"/\", \"_\")\n                        base64Value.replace(\"+\", \"-\")\n                        base64Value.trimEnd()\n                        base64Value = \"u!\" + base64Value\n                        getShareFile(base64Value)\n                    }}>\n                        <Text>Submit</Text>\n                    </Pressable>\n                </View>:null\n            }\n            { (selectedMicrosoftUploadMode === MicrosoftUploadModeType.Site) ? \n                <View style={{height: dimensions.window.height * 0.6, overflow: \"scroll\"}}>\n                    { usersTeams.map((team) => (\n                        <View>\n                            { (team.TeamName !== \"Student Password Policy\" && team.TeamName !== \"St Paul's High School\" && team.TeamName !== \"Adobe_Student\" && team.TeamName !== \"O365 Student A3 License Assignment\" && team.TeamName !== \"Student\") ?\n                                <View>\n                                    <Text>{team.TeamName}</Text>\n                                </View>:null\n                            }\n                        </View>\n                    )) \n                    }\n                </View>:null\n            }\n            </View>\n        </View>\n)}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}