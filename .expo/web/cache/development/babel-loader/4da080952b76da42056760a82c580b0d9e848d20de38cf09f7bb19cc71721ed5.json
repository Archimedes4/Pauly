{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useEffect, useState } from 'react';\nimport { GoogleMap, useJsApiLoader, Marker, Circle } from '@react-google-maps/api';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar center = {\n  lat: 49.85663823299096,\n  lng: -97.22659526509193\n};\nexport default function MapWeb(_ref) {\n  var proximity = _ref.proximity,\n    selectedPositionIn = _ref.selectedPositionIn,\n    onSetSelectedPositionIn = _ref.onSetSelectedPositionIn,\n    width = _ref.width,\n    height = _ref.height;\n  var _useJsApiLoader = useJsApiLoader({\n      id: 'google-map-script',\n      googleMapsApiKey: \"AIzaSyAltyD_LL0kbe84kyMRxgRmoH74Spi5rvw\"\n    }),\n    isLoaded = _useJsApiLoader.isLoaded;\n  var _useState = useState(),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedPosition = _useState2[0],\n    setSelectedPosition = _useState2[1];\n  var _useState3 = useState({\n      width: '400px',\n      height: '400px'\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    containerStyle = _useState4[0],\n    setContainerStyle = _useState4[1];\n  useEffect(function () {\n    setContainerStyle({\n      width: width.toString() + \"px\",\n      height: height.toString() + \"px\"\n    });\n  }, [width, height]);\n  return isLoaded ? _jsx(\"div\", {\n    style: {\n      width: width,\n      height: height\n    },\n    children: _jsxs(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 15,\n      onClick: function onClick(ev) {\n        onSetSelectedPositionIn({\n          lat: ev.latLng.lat(),\n          lng: ev.latLng.lng()\n        });\n        setSelectedPosition({\n          lat: ev.latLng.lat(),\n          lng: ev.latLng.lng()\n        });\n      },\n      children: [selectedPosition && _jsx(Marker, {\n        position: selectedPosition\n      }), selectedPosition && _jsx(Circle, {\n        center: selectedPosition,\n        radius: proximity\n      })]\n    })\n  }) : _jsx(_Fragment, {});\n}","map":{"version":3,"names":["React","useEffect","useState","GoogleMap","useJsApiLoader","Marker","Circle","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","center","lat","lng","MapWeb","_ref","proximity","selectedPositionIn","onSetSelectedPositionIn","width","height","_useJsApiLoader","id","googleMapsApiKey","isLoaded","_useState","_useState2","_slicedToArray","selectedPosition","setSelectedPosition","_useState3","_useState4","containerStyle","setContainerStyle","toString","style","children","mapContainerStyle","zoom","onClick","ev","latLng","position","radius"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/UI/Map/Map.web.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { GoogleMap, useJsApiLoader, Marker, Circle } from '@react-google-maps/api';\n\nconst center = {\n  lat: 49.85663823299096,\n  lng: -97.22659526509193\n};\n\ntype LatLngLiteral = google.maps.LatLngLiteral\n\nexport default function MapWeb({proximity, selectedPositionIn, onSetSelectedPositionIn, width, height}:{proximity: number, selectedPositionIn: {lat: number, lng: number}, onSetSelectedPositionIn: (item: {lat: number, lng: number}) => void, width: number, height: number}) {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: \"AIzaSyAltyD_LL0kbe84kyMRxgRmoH74Spi5rvw\" //TO DO put this into a loval env\n  })\n  const [selectedPosition, setSelectedPosition] = useState<LatLngLiteral>()\n  const [containerStyle, setContainerStyle] = useState<{width: string, height: string}>({\n    width: '400px',\n    height: '400px'\n  })\n\n  useEffect(() => {\n    setContainerStyle({\n      width: width.toString() + \"px\",\n      height: height.toString() + \"px\"\n    })\n  }, [width, height])\n\n  // const [map, setMap] = React.useState(null)\n\n  // const onLoad = React.useCallback(function callback(map) {\n  //   // This is just an example of getting and using the map instance!!! don't just blindly copy!\n  //   const bounds = new window.google.maps.LatLngBounds(center);\n  //   map.fitBounds(bounds);\n\n  //   setMap(map)\n  // }, [])\n\n  // const onUnmount = React.useCallback(function callback(map) {\n  //   setMap(null)\n  // }, [])\n\n  return isLoaded ? (\n      <div style={{width: width, height: height}}>\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={center}\n          zoom={15}\n          onClick={ev => {\n            onSetSelectedPositionIn({lat: ev.latLng!.lat(), lng: ev.latLng!.lng()})\n            setSelectedPosition({lat: ev.latLng!.lat(), lng: ev.latLng!.lng()})}}\n        >\n          { /* Child components, such as markers, info windows, etc. */ }\n          {selectedPosition && <Marker position={selectedPosition} />}\n          {selectedPosition && <Circle center={selectedPosition} radius={proximity}/>}\n        </GoogleMap>\n      </div>\n  ) : <></>\n}"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,EAAEC,cAAc,EAAEC,MAAM,EAAEC,MAAM,QAAQ,wBAAwB;AAAC,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEnF,IAAMC,MAAM,GAAG;EACbC,GAAG,EAAE,iBAAiB;EACtBC,GAAG,EAAE,CAAC;AACR,CAAC;AAID,eAAe,SAASC,MAAMA,CAAAC,IAAA,EAAkP;EAAA,IAAhPC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,kBAAkB,GAAAF,IAAA,CAAlBE,kBAAkB;IAAEC,uBAAuB,GAAAH,IAAA,CAAvBG,uBAAuB;IAAEC,KAAK,GAAAJ,IAAA,CAALI,KAAK;IAAEC,MAAM,GAAAL,IAAA,CAANK,MAAM;EACnG,IAAAC,eAAA,GAAqBnB,cAAc,CAAC;MAClCoB,EAAE,EAAE,mBAAmB;MACvBC,gBAAgB,EAAE;IACpB,CAAC,CAAC;IAHMC,QAAQ,GAAAH,eAAA,CAARG,QAAQ;EAIhB,IAAAC,SAAA,GAAgDzB,QAAQ,CAAgB,CAAC;IAAA0B,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAAlEG,gBAAgB,GAAAF,UAAA;IAAEG,mBAAmB,GAAAH,UAAA;EAC5C,IAAAI,UAAA,GAA4C9B,QAAQ,CAAkC;MACpFmB,KAAK,EAAE,OAAO;MACdC,MAAM,EAAE;IACV,CAAC,CAAC;IAAAW,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAHKE,cAAc,GAAAD,UAAA;IAAEE,iBAAiB,GAAAF,UAAA;EAKxChC,SAAS,CAAC,YAAM;IACdkC,iBAAiB,CAAC;MAChBd,KAAK,EAAEA,KAAK,CAACe,QAAQ,CAAC,CAAC,GAAG,IAAI;MAC9Bd,MAAM,EAAEA,MAAM,CAACc,QAAQ,CAAC,CAAC,GAAG;IAC9B,CAAC,CAAC;EACJ,CAAC,EAAE,CAACf,KAAK,EAAEC,MAAM,CAAC,CAAC;EAgBnB,OAAOI,QAAQ,GACXlB,IAAA;IAAK6B,KAAK,EAAE;MAAChB,KAAK,EAAEA,KAAK;MAAEC,MAAM,EAAEA;IAAM,CAAE;IAAAgB,QAAA,EACzC5B,KAAA,CAACP,SAAS;MACRoC,iBAAiB,EAAEL,cAAe;MAClCrB,MAAM,EAAEA,MAAO;MACf2B,IAAI,EAAE,EAAG;MACTC,OAAO,EAAE,SAAAA,QAAAC,EAAE,EAAI;QACbtB,uBAAuB,CAAC;UAACN,GAAG,EAAE4B,EAAE,CAACC,MAAM,CAAE7B,GAAG,CAAC,CAAC;UAAEC,GAAG,EAAE2B,EAAE,CAACC,MAAM,CAAE5B,GAAG,CAAC;QAAC,CAAC,CAAC;QACvEgB,mBAAmB,CAAC;UAACjB,GAAG,EAAE4B,EAAE,CAACC,MAAM,CAAE7B,GAAG,CAAC,CAAC;UAAEC,GAAG,EAAE2B,EAAE,CAACC,MAAM,CAAE5B,GAAG,CAAC;QAAC,CAAC,CAAC;MAAA,CAAE;MAAAuB,QAAA,GAGtER,gBAAgB,IAAItB,IAAA,CAACH,MAAM;QAACuC,QAAQ,EAAEd;MAAiB,CAAE,CAAC,EAC1DA,gBAAgB,IAAItB,IAAA,CAACF,MAAM;QAACO,MAAM,EAAEiB,gBAAiB;QAACe,MAAM,EAAE3B;MAAU,CAAC,CAAC;IAAA,CAClE;EAAC,CACT,CAAC,GACNV,IAAA,CAAAI,SAAA,IAAI,CAAC;AACX"},"metadata":{},"sourceType":"module","externalDependencies":[]}