{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useEffect, useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function TimePicker(_ref) {\n  var selectedHourMilitary = _ref.selectedHourMilitary,\n    selectedMinuteMilitary = _ref.selectedMinuteMilitary,\n    onSetSelectedHourMilitary = _ref.onSetSelectedHourMilitary,\n    onSetSelectedMinuteMilitary = _ref.onSetSelectedMinuteMilitary,\n    dimentions = _ref.dimentions;\n  var _useState = useState(\"00\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedMinute = _useState2[0],\n    setSelectedMinute = _useState2[1];\n  var _useState3 = useState(\"12\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    selectedHour = _useState4[0],\n    setSelectedHour = _useState4[1];\n  var _useState5 = useState(\"AM\"),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedTimeOfDay = _useState6[0],\n    setSelectedTimeOfDay = _useState6[1];\n  useEffect(function () {\n    if (selectedMinuteMilitary <= 9) {\n      setSelectedMinute(\"0\" + selectedMinuteMilitary.toString());\n    } else if (selectedMinuteMilitary) {\n      setSelectedMinute(selectedMinuteMilitary.toString());\n    }\n    if (selectedHourMilitary > 12) {\n      setSelectedTimeOfDay(\"PM\");\n      setSelectedHour(selectedHourMilitary - 12 <= 9 ? \"0\" + (selectedHourMilitary - 12).toString() : (selectedHourMilitary - 12).toString());\n    } else {\n      setSelectedTimeOfDay(\"AM\");\n      setSelectedHour(selectedHourMilitary <= 9 ? \"0\" + selectedHourMilitary.toString() : selectedHourMilitary.toString());\n    }\n  }, [selectedHourMilitary, selectedMinuteMilitary]);\n  function returnHour(selectedHourIn) {\n    if (selectedTimeOfDay === \"AM\") {\n      onSetSelectedHourMilitary(selectedHourIn);\n    } else if (selectedTimeOfDay === \"PM\") {\n      onSetSelectedHourMilitary(selectedHourIn + 12);\n    }\n  }\n  useEffect(function () {\n    returnHour(parseInt(selectedHour));\n  }, [selectedHour, selectedTimeOfDay]);\n  return _jsxs(View, {\n    style: {\n      flexDirection: \"row\"\n    },\n    children: [_jsx(TextInput, {\n      value: selectedHour,\n      onChangeText: function onChangeText(e) {\n        if (e.length == 1) {\n          setSelectedHour(\"00\");\n          returnHour(0);\n        } else if (e.length == 3) {\n          var array = Array.from(e);\n          console.log(array);\n          if (array[2] === \"0\" || array[2] === \"1\" || array[2] === \"2\" || array[2] === \"3\" || array[2] === \"4\" || array[2] === \"5\" || array[2] === \"6\" || array[2] === \"7\" || array[2] === \"8\" || array[2] === \"9\") {\n            if (parseInt(array[1] + array[2]) <= 12 && parseInt(array[1] + array[2]) >= 1) {\n              setSelectedHour(array[1] + array[2]);\n              returnHour(parseInt(array[1] + array[2]));\n            }\n          }\n        }\n      },\n      inputMode: \"numeric\",\n      style: {\n        width: dimentions != null && dimentions.hourWidth ? dimentions.hourWidth : \"100%\",\n        height: dimentions != null && dimentions.hourHeight ? dimentions.hourHeight : \"100%\"\n      }\n    }), _jsx(TextInput, {\n      value: selectedMinute,\n      onChangeText: function onChangeText(e) {\n        if (e.length == 1) {\n          setSelectedMinute(\"00\");\n          onSetSelectedMinuteMilitary(0);\n        } else if (e.length == 3) {\n          var array = Array.from(e);\n          console.log(array);\n          if (array[2] === \"0\" || array[2] === \"1\" || array[2] === \"2\" || array[2] === \"3\" || array[2] === \"4\" || array[2] === \"5\" || array[2] === \"6\" || array[2] === \"7\" || array[2] === \"8\" || array[2] === \"9\") {\n            if (parseInt(array[1] + array[2]) <= 59 && parseInt(array[1] + array[2]) >= 0) {\n              setSelectedMinute(array[1] + array[2]);\n              onSetSelectedMinuteMilitary(parseInt(array[1] + array[2]));\n            }\n          }\n        }\n      },\n      inputMode: \"numeric\",\n      style: {\n        width: dimentions != null && dimentions.minuteWidth ? dimentions.minuteWidth : \"100%\",\n        height: dimentions != null && dimentions.minuteHeight ? dimentions.minuteHeight : \"100%\"\n      }\n    }), _jsx(TextInput, {\n      value: selectedTimeOfDay,\n      onChangeText: function onChangeText(e) {\n        if (e == \"PMa\" || e == \"PMA\") {\n          setSelectedTimeOfDay(\"AM\");\n        } else if (e == \"AMp\" || e == \"AMP\") {\n          setSelectedTimeOfDay(\"PM\");\n        }\n      },\n      style: {\n        width: dimentions != null && dimentions.timeWidth ? dimentions.timeWidth : \"100%\",\n        height: dimentions != null && dimentions.timeHeight ? dimentions.timeHeight : \"100%\"\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","jsx","_jsx","jsxs","_jsxs","TimePicker","_ref","selectedHourMilitary","selectedMinuteMilitary","onSetSelectedHourMilitary","onSetSelectedMinuteMilitary","dimentions","_useState","_useState2","_slicedToArray","selectedMinute","setSelectedMinute","_useState3","_useState4","selectedHour","setSelectedHour","_useState5","_useState6","selectedTimeOfDay","setSelectedTimeOfDay","toString","returnHour","selectedHourIn","parseInt","View","style","flexDirection","children","TextInput","value","onChangeText","e","length","array","Array","from","console","log","inputMode","width","hourWidth","height","hourHeight","minuteWidth","minuteHeight","timeWidth","timeHeight"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/UI/DateTimePicker/TimePicker.tsx"],"sourcesContent":["import { View, Text, TextInput } from 'react-native'\nimport React, { useEffect, useState } from 'react'\n\nexport default function TimePicker(\n    {selectedHourMilitary, selectedMinuteMilitary, onSetSelectedHourMilitary, onSetSelectedMinuteMilitary, dimentions}:{selectedHourMilitary: number, selectedMinuteMilitary: number, onSetSelectedHourMilitary: (item: number) => void, onSetSelectedMinuteMilitary: (item: number) => void, dimentions?: {hourHeight?: number, hourWidth?: number, minuteHeight?: number, minuteWidth?: number, timeWidth?: number, timeHeight?: number}}) {\n    const [selectedMinute, setSelectedMinute] = useState<string>(\"00\")\n    const [selectedHour, setSelectedHour] = useState<string>(\"12\")\n    const [selectedTimeOfDay, setSelectedTimeOfDay] = useState<\"AM\"|\"PM\">(\"AM\")\n    useEffect(() => {\n        if (selectedMinuteMilitary <= 9){\n            setSelectedMinute(\"0\" + selectedMinuteMilitary.toString())\n        } else if (selectedMinuteMilitary) {\n            setSelectedMinute(selectedMinuteMilitary.toString())\n        }\n        if (selectedHourMilitary > 12){\n            //PM\n            setSelectedTimeOfDay(\"PM\")\n            setSelectedHour(((selectedHourMilitary - 12) <= 9) ? \"0\" + (selectedHourMilitary-12).toString():(selectedHourMilitary-12).toString())\n        } else {\n            //AM\n            setSelectedTimeOfDay(\"AM\")\n            setSelectedHour(((selectedHourMilitary) <= 9) ? \"0\" + selectedHourMilitary.toString():selectedHourMilitary.toString())\n        }\n\n    }, [selectedHourMilitary, selectedMinuteMilitary])\n\n    function returnHour(selectedHourIn: number) {\n        if (selectedTimeOfDay === \"AM\") {\n            onSetSelectedHourMilitary(selectedHourIn)\n        } else if (selectedTimeOfDay === \"PM\") {\n            onSetSelectedHourMilitary(selectedHourIn + 12)\n        }\n    }\n\n    useEffect(() => {returnHour(parseInt(selectedHour))}, [selectedHour, selectedTimeOfDay])\n\n  return (\n    <View style={{flexDirection: \"row\"}}>\n        <TextInput value={selectedHour} onChangeText={(e) => {\n            if (e.length == 1){\n                setSelectedHour(\"00\")\n                returnHour(0)\n            } else if (e.length == 3) {\n                const array = Array.from(e)\n                console.log(array)\n                if (array[2] === \"0\" || array[2] === \"1\" || array[2] === \"2\" || array[2] === \"3\" || array[2] === \"4\" || array[2] === \"5\" || array[2] === \"6\" || array[2] === \"7\" || array[2] === \"8\" || array[2] === \"9\") {\n                    if (parseInt(array[1] + array[2]) <= 12 && parseInt(array[1] + array[2]) >= 1) {\n                        setSelectedHour(array[1] + array[2])\n                        returnHour(parseInt(array[1] + array[2]))\n                    }\n                }   \n            }\n        }} inputMode='numeric' style={{width: (dimentions?.hourWidth) ? dimentions.hourWidth:\"100%\", height:  (dimentions?.hourHeight) ? dimentions.hourHeight:\"100%\"}}/>\n        <TextInput value={selectedMinute} onChangeText={(e) => {\n            if (e.length == 1){\n                setSelectedMinute(\"00\")\n                onSetSelectedMinuteMilitary(0)\n            } else if (e.length == 3) {\n                const array = Array.from(e)\n                console.log(array)\n                if (array[2] === \"0\" || array[2] === \"1\" || array[2] === \"2\" || array[2] === \"3\" || array[2] === \"4\" || array[2] === \"5\" || array[2] === \"6\" || array[2] === \"7\" || array[2] === \"8\" || array[2] === \"9\") {\n                    if (parseInt(array[1] + array[2]) <= 59 && parseInt(array[1] + array[2]) >= 0) {\n                        setSelectedMinute(array[1] + array[2])\n                        onSetSelectedMinuteMilitary(parseInt(array[1] + array[2]))\n                    }\n                }   \n            }\n        }} inputMode='numeric' style={{width: (dimentions?.minuteWidth) ? dimentions.minuteWidth:\"100%\", height: (dimentions?.minuteHeight) ? dimentions.minuteHeight:\"100%\"}}/>\n        <TextInput value={selectedTimeOfDay} onChangeText={(e) => {\n            if (e == \"PMa\" || e == \"PMA\"){\n                setSelectedTimeOfDay(\"AM\")\n            } else if (e == \"AMp\" || e == \"AMP\") {\n                setSelectedTimeOfDay(\"PM\")\n            }\n        }} style={{width: (dimentions?.timeWidth) ? dimentions.timeWidth:\"100%\", height:  (dimentions?.timeHeight) ? dimentions.timeHeight:\"100%\"}}/>\n\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}