{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\nimport React, { useEffect, useRef } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport PanResponder from \"react-native-web/dist/exports/PanResponder\";\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nvar Box = function Box(_ref) {\n  var width = _ref.width,\n    height = _ref.height,\n    value = _ref.value,\n    onValueChange = _ref.onValueChange,\n    containerWidth = _ref.containerWidth;\n  var pan = useRef(new Animated.Value(value)).current;\n  var valueRef = useRef({\n    currentValue: value\n  });\n  var containerWidthRef = useRef({\n    currentValue: value\n  });\n  var lastValue = useRef({\n    currentValue: value\n  });\n  useEffect(function () {\n    containerWidthRef.current.currentValue = containerWidth;\n  }, [containerWidth]);\n  useEffect(function () {\n    valueRef.current.currentValue = value;\n  }, [value]);\n  var panResponder = useRef(PanResponder.create({\n    onStartShouldSetPanResponder: function onStartShouldSetPanResponder() {\n      return true;\n    },\n    onMoveShouldSetPanResponder: function onMoveShouldSetPanResponder() {\n      return true;\n    },\n    onPanResponderMove: function onPanResponderMove(evt, gestureState) {\n      var dx = gestureState.dx;\n      var valueRead = valueRef.current.currentValue;\n      var adding = lastValue.current.currentValue > 0 ? dx - lastValue.current.currentValue : dx + lastValue.current.currentValue;\n      adding = adding / (width - height / 2);\n      lastValue.current.currentValue = dx;\n      var newValue = valueRead + adding;\n      console.log(\"ValueRead\", valueRead, \"dx\", dx, \"newValue\", newValue, \"change\", adding);\n      if (newValue <= 1 && newValue >= 0) {\n        valueRef.current.currentValue = newValue;\n        onValueChange(newValue);\n        Animated.event([null, {\n          dx: pan\n        }], {\n          useNativeDriver: false\n        })(evt, _objectSpread(_objectSpread({}, gestureState), {}, {\n          dx: newValue * width\n        }));\n      } else if (newValue < 0) {\n        valueRef.current.currentValue = 0;\n        onValueChange(0);\n        Animated.event([null, {\n          dx: pan\n        }], {\n          useNativeDriver: false\n        })(evt, _objectSpread(_objectSpread({}, gestureState), {}, {\n          dx: 0\n        }));\n      } else if (newValue > 1) {\n        valueRef.current.currentValue = 1;\n        onValueChange(1);\n        Animated.event([null, {\n          dx: pan\n        }], {\n          useNativeDriver: false\n        })(evt, _objectSpread(_objectSpread({}, gestureState), {}, {\n          dx: width - height / 2\n        }));\n      }\n    },\n    onPanResponderRelease: function onPanResponderRelease() {\n      console.log();\n      pan.setValue(valueRef.current.currentValue * width);\n      lastValue.current.currentValue = 0;\n    }\n  })).current;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(Animated.View, _objectSpread({\n      style: [styles.box, {\n        width: height / 2,\n        height: height / 2,\n        transform: [{\n          translateX: pan\n        }]\n      }]\n    }, panResponder.panHandlers))\n  });\n};\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'center'\n  },\n  box: {\n    backgroundColor: 'blue',\n    borderRadius: 5,\n    position: 'absolute'\n  }\n});\nvar Slider = function Slider(_ref2) {\n  var width = _ref2.width,\n    height = _ref2.height,\n    value = _ref2.value,\n    onValueChange = _ref2.onValueChange,\n    containerWidth = _ref2.containerWidth;\n  return _jsx(View, {\n    style: {\n      width: width,\n      height: height,\n      alignItems: 'center',\n      justifyContent: 'center'\n    },\n    children: _jsx(View, {\n      style: {\n        width: width,\n        height: height > 10 ? height : 10,\n        backgroundColor: 'black'\n      },\n      children: _jsx(Box, {\n        width: width,\n        height: height,\n        value: value,\n        onValueChange: onValueChange,\n        containerWidth: containerWidth\n      })\n    })\n  });\n};\nexport default Slider;","map":{"version":3,"names":["React","useEffect","useRef","View","StyleSheet","PanResponder","Animated","jsx","_jsx","Box","_ref","width","height","value","onValueChange","containerWidth","pan","Value","current","valueRef","currentValue","containerWidthRef","lastValue","panResponder","create","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderMove","evt","gestureState","dx","valueRead","adding","newValue","console","log","event","useNativeDriver","_objectSpread","onPanResponderRelease","setValue","style","styles","container","children","box","transform","translateX","panHandlers","flex","alignItems","justifyContent","backgroundColor","borderRadius","position","Slider","_ref2"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/UI/Slider/Slider.tsx"],"sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport {\n  View,\n  StyleSheet,\n  PanResponder,\n  Animated,\n  PanResponderGestureState,\n} from 'react-native';\n\ninterface BoxProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number\n}\n\nconst Box: React.FC<BoxProps> = ({ width, height, value, onValueChange, containerWidth }) => {\n  const pan = useRef(new Animated.Value(value)).current\n  const valueRef = useRef({currentValue: value});\n  const containerWidthRef = useRef({currentValue: value});\n  const lastValue = useRef({currentValue: value});\n  useEffect(() => {\n    containerWidthRef.current.currentValue = containerWidth\n  }, [containerWidth])\n  useEffect(() => {\n    valueRef.current.currentValue = value\n  }, [value])\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderMove: (\n        evt: any,\n        gestureState: PanResponderGestureState\n      ) => {\n        const { dx } = gestureState;\n        const valueRead = valueRef.current.currentValue\n        var adding = (lastValue.current.currentValue > 0) ? dx - lastValue.current.currentValue:dx + lastValue.current.currentValue\n        adding = adding/(width - height/2)\n        lastValue.current.currentValue = dx\n        const newValue = valueRead + adding\n\n        console.log(\"ValueRead\", valueRead, \"dx\", dx, \"newValue\", newValue, \"change\", adding)\n        if (newValue <= 1 && newValue >= 0){\n          valueRef.current.currentValue = newValue\n          onValueChange(newValue)\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: newValue * (width) });\n        } else if (newValue < 0){\n          valueRef.current.currentValue = 0\n          onValueChange(0)\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: 0 })\n        } else if (newValue > 1){\n          valueRef.current.currentValue = 1\n          onValueChange(1)\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: (width - height/2) })\n        }\n      },\n      onPanResponderRelease: () => {\n        console.log()\n        pan.setValue(valueRef.current.currentValue * width)\n        lastValue.current.currentValue = 0\n      },\n    })\n  ).current;\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            width: height/2,\n            height: height/2,\n            transform: [{ translateX: pan }],\n          },\n        ]}\n        {...panResponder.panHandlers}\n      />\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  box: {\n    backgroundColor: 'blue',\n    borderRadius: 5,\n    position: 'absolute',\n  },\n});\n\ninterface SliderProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number //This is the width of the screen\n}\n\nconst Slider: React.FC<SliderProps> = ({\n  width,\n  height,\n  value,\n  onValueChange,\n  containerWidth\n}) => {\n  return (\n    <View\n      style={{\n        width: width,\n        height: height,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          width: width,\n          height: height > 10 ? height: 10,\n          backgroundColor: 'black',\n        }}\n      >\n        <Box width={width} height={height} value={value} onValueChange={onValueChange} containerWidth={containerWidth} />\n      </View>\n    </View>\n  );\n};\n\nexport default Slider;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}