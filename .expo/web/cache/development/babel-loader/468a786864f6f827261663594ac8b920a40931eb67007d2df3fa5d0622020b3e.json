{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport callMsGraph from \"../../../../Functions/microsoftAssets\";\nimport { accessTokenContent } from \"../../../../../App\";\nimport { Link } from 'react-router-native';\nimport create_UUID from \"../../../../Functions/CreateUUID\";\nimport { siteID } from \"../../../../PaulyConfig\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowDimensions = Dimensions.get('window');\nvar screenDimensions = Dimensions.get('screen');\nexport default function GovernmentCreateNewSport() {\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    sportName = _useState2[0],\n    setSportName = _useState2[1];\n  var microsoftAccessToken = useContext(accessTokenContent);\n  function createSport() {\n    return _createSport.apply(this, arguments);\n  }\n  function _createSport() {\n    _createSport = _asyncToGenerator(function* () {\n      var newSportID = create_UUID();\n      var data = {\n        \"fields\": {\n          Title: \"\",\n          SportName: sportName,\n          SportID: newSportID\n        }\n      };\n      var listData = {\n        \"displayName\": newSportID,\n        \"columns\": [{\n          \"name\": \"TeamName\",\n          \"text\": {}\n        }, {\n          \"name\": \"Season\",\n          \"number\": {}\n        }, {\n          \"name\": \"teamID\",\n          \"text\": {}\n        }],\n        \"list\": {\n          \"contentTypesEnabled\": false,\n          \"hidden\": false,\n          \"template\": \" genericList\"\n        }\n      };\n      var resultList = yield callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists\", \"POST\", JSON.stringify(listData));\n      if (resultList.ok) {\n        var result = yield callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/af29f01a-df11-4e9d-85c8-7461ca4dc6e9/items\", \"POST\", JSON.stringify(data));\n      }\n      console.log(resultList);\n    });\n    return _createSport.apply(this, arguments);\n  }\n  var _useState3 = useState({\n      window: windowDimensions,\n      screen: screenDimensions\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dimensions = _useState4[0],\n    setDimensions = _useState4[1];\n  useEffect(function () {\n    var subscription = Dimensions.addEventListener('change', function (_ref) {\n      var window = _ref.window,\n        screen = _ref.screen;\n      setDimensions({\n        window: window,\n        screen: screen\n      });\n    });\n    return function () {\n      return subscription == null ? void 0 : subscription.remove();\n    };\n  });\n  return _jsxs(View, {\n    children: [_jsx(Link, {\n      to: \"/profile/government/sports\",\n      children: _jsx(Text, {\n        children: \"Back\"\n      })\n    }), _jsx(Text, {\n      children: \"GovernmentCreateNewSport\"\n    }), _jsx(Text, {\n      children: \"Sport Name\"\n    }), _jsx(TextInput, {\n      value: sportName,\n      onChangeText: setSportName\n    }), _jsx(Button, {\n      title: \"Create\",\n      onPress: function onPress() {\n        createSport();\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","callMsGraph","accessTokenContent","Link","create_UUID","siteID","jsx","_jsx","jsxs","_jsxs","windowDimensions","Dimensions","get","screenDimensions","GovernmentCreateNewSport","_useState","_useState2","_slicedToArray","sportName","setSportName","microsoftAccessToken","createSport","_createSport","apply","arguments","_asyncToGenerator","newSportID","data","Title","SportName","SportID","listData","resultList","accessToken","JSON","stringify","ok","result","console","log","_useState3","window","screen","_useState4","dimensions","setDimensions","subscription","addEventListener","_ref","remove","View","children","to","Text","TextInput","value","onChangeText","Button","title","onPress"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentCreateNewSport.tsx"],"sourcesContent":["import { View, Text, TextInput, Button, Dimensions } from 'react-native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport callMsGraph from '../../../../Functions/microsoftAssets'\nimport { accessTokenContent } from '../../../../../App';\nimport { Link } from 'react-router-native';\nimport NavBarComponent from '../../../../UI/NavComponent';\nimport create_UUID from '../../../../Functions/CreateUUID';\nimport { siteID } from '../../../../PaulyConfig';\n\nconst windowDimensions = Dimensions.get('window');\nconst screenDimensions = Dimensions.get('screen');\n\nexport default function GovernmentCreateNewSport() {\n  const [sportName, setSportName] = useState<string>(\"\")\n  const microsoftAccessToken = useContext(accessTokenContent);\n  async function createSport() {\n    const newSportID: string = create_UUID()\n    const data = {\n      \"fields\": {\n        Title: \"\",\n        SportName: sportName,\n        SportID: newSportID\n      }\n    }\n    const listData = {\n      \"displayName\":newSportID,\n      \"columns\": [\n        {\n          \"name\": \"TeamName\",\n          \"text\": { }\n        },\n        {\n          \"name\": \"Season\",\n          \"number\": { }\n        },\n        {\n          \"name\": \"teamID\",\n          \"text\": { }\n        }\n      ],\n      \"list\":\n      {\n        \"contentTypesEnabled\": false,\n        \"hidden\": false,\n        \"template\": \" genericList\"\n      }\n    }\n    const resultList = await callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" +siteID + \"/lists\", \"POST\", JSON.stringify(listData))\n    if (resultList.ok){\n      const result = await callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" +siteID + \"/lists/af29f01a-df11-4e9d-85c8-7461ca4dc6e9/items\", \"POST\", JSON.stringify(data))//TO DO fix this id\n    }\n    console.log(resultList)\n  }\n  const [dimensions, setDimensions] = useState({\n    window: windowDimensions,\n    screen: screenDimensions,\n  });\n\n  useEffect(() => {\n      const subscription = Dimensions.addEventListener(\n        'change',\n        ({window, screen}) => {\n          setDimensions({window, screen});\n        },\n      );\n      return () => subscription?.remove();\n  });\n  return (\n    <View>\n      <Link to=\"/profile/government/sports\">\n        <Text>Back</Text>\n      </Link>\n      <Text>GovernmentCreateNewSport</Text>\n      <Text>Sport Name</Text>\n      <TextInput value={sportName} onChangeText={setSportName}/>\n      <Button title='Create' onPress={() => {\n        createSport()\n      }}/>\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}