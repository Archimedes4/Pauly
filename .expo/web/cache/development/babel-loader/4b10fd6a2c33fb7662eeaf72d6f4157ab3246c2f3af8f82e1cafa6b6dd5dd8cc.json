{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport callMsGraph from \"../../../../Functions/microsoftAssets\";\nimport { accessTokenContent } from \"../../../../../App\";\nimport { Link } from 'react-router-native';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar windowDimensions = Dimensions.get('window');\nvar screenDimensions = Dimensions.get('screen');\nexport default function MicrosoftGraphOverview() {\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    lists = _useState2[0],\n    setLists = _useState2[1];\n  var pageData = useContext(accessTokenContent);\n  var _useState3 = useState({\n      window: windowDimensions,\n      screen: screenDimensions\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dimensions = _useState4[0],\n    setDimensions = _useState4[1];\n  useEffect(function () {\n    var subscription = Dimensions.addEventListener('change', function (_ref) {\n      var window = _ref.window,\n        screen = _ref.screen;\n      setDimensions({\n        window: window,\n        screen: screen\n      });\n    });\n    return function () {\n      return subscription == null ? void 0 : subscription.remove();\n    };\n  });\n  function getLists() {\n    return _getLists.apply(this, arguments);\n  }\n  function _getLists() {\n    _getLists = _asyncToGenerator(function* () {\n      var result = yield callMsGraph(pageData.accessToken, \"https://graph.microsoft.com/v1.0/sites/8td1tk.sharepoint.com,b2ef509e-4511-48c3-b607-a8c2cddc0e35,091feb8c-a978-4e3f-a60f-ecdc319b2304/lists\");\n      if (result.ok) {\n        var data = yield result.json();\n        console.log(data);\n        var incomingLists = [];\n        for (var index = 0; index < data[\"value\"].length; index++) {\n          incomingLists.push({\n            displayName: data[\"value\"][index][\"displayName\"],\n            listId: data[\"value\"][index][\"id\"],\n            name: data[\"value\"][index][\"name\"]\n          });\n        }\n        console.log(incomingLists);\n        setLists(incomingLists);\n      } else {}\n    });\n    return _getLists.apply(this, arguments);\n  }\n  useEffect(function () {\n    getLists();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Link, {\n      to: \"/profile/government\",\n      children: _jsx(Text, {\n        children: \"Back\"\n      })\n    }), _jsx(Text, {\n      children: \"Microsoft Graph Overview\"\n    }), _jsx(View, {\n      children: lists.map(function (item) {\n        return _jsx(Link, {\n          to: \"/profile/government/graph/edit/\" + item.listId,\n          children: _jsx(View, {\n            children: item.listId !== \"2b86ba89-0262-4906-9247-bfd1260fb68e\" && item.listId != \"1f4cd053-dd6b-4e40-bb9b-803cbc74e872\" ? _jsxs(View, {\n              style: {\n                marginBottom: 5,\n                borderColor: \"black\",\n                borderWidth: 5\n              },\n              children: [_jsx(Text, {\n                children: item.displayName\n              }), _jsx(Text, {\n                children: item.listId\n              })]\n            }) : null\n          }, item.listId)\n        }, item.listId + \"Link\");\n      })\n    }), _jsx(Link, {\n      to: \"/profile/government/graph/create\",\n      children: _jsx(Text, {\n        children: \"Create List\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","callMsGraph","accessTokenContent","Link","jsx","_jsx","jsxs","_jsxs","windowDimensions","Dimensions","get","screenDimensions","MicrosoftGraphOverview","_useState","_useState2","_slicedToArray","lists","setLists","pageData","_useState3","window","screen","_useState4","dimensions","setDimensions","subscription","addEventListener","_ref","remove","getLists","_getLists","apply","arguments","_asyncToGenerator","result","accessToken","ok","data","json","console","log","incomingLists","index","length","push","displayName","listId","name","View","children","to","Text","map","item","style","marginBottom","borderColor","borderWidth"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphOverview.tsx"],"sourcesContent":["import { View, Text, Button, Dimensions } from 'react-native'\nimport React, {useContext, useEffect, useState} from 'react'\nimport callMsGraph from '../../../../Functions/microsoftAssets'\nimport { accessTokenContent } from '../../../../../App';\nimport { Link } from 'react-router-native';\nimport NavBarComponent from '../../../../UI/NavComponent';\n\ntype ListType = {\n  displayName: string\n  listId: string\n  name: string\n}\n\nconst windowDimensions = Dimensions.get('window');\nconst screenDimensions = Dimensions.get('screen');\n\nexport default function MicrosoftGraphOverview() {\n  const [lists, setLists] = useState<ListType[]>([])\n  const pageData = useContext(accessTokenContent);\n  const [dimensions, setDimensions] = useState({\n    window: windowDimensions,\n    screen: screenDimensions,\n  });\n\n  useEffect(() => {\n      const subscription = Dimensions.addEventListener(\n        'change',\n        ({window, screen}) => {\n          setDimensions({window, screen});\n        },\n      );\n      return () => subscription?.remove();\n  });\n\n  async function getLists(){\n    const result = await callMsGraph(pageData.accessToken, \"https://graph.microsoft.com/v1.0/sites/8td1tk.sharepoint.com,b2ef509e-4511-48c3-b607-a8c2cddc0e35,091feb8c-a978-4e3f-a60f-ecdc319b2304/lists\")//sites/8td1tk.onmicrosoft.com/sites\n    if (result.ok){\n      const data = await result.json()\n      console.log(data)\n      var incomingLists: ListType[] = []\n      for(let index = 0; index < data[\"value\"].length; index++){\n        incomingLists.push({\n          displayName: data[\"value\"][index][\"displayName\"],\n          listId: data[\"value\"][index][\"id\"],\n          name: data[\"value\"][index][\"name\"]\n        })\n      }\n      console.log(incomingLists)\n      setLists(incomingLists)\n    } else {\n      //TO DO handle error\n    }\n  }\n  useEffect(() => {\n    getLists()\n  }, [])\n  return (\n    <View>\n      <Link to=\"/profile/government\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Microsoft Graph Overview</Text>\n      <View>\n        { lists.map((item: ListType) => (\n          <Link key={item.listId + \"Link\"} to={\"/profile/government/graph/edit/\" + item.listId}>\n            <View key={item.listId}>\n              { //TO DO PRODuction fix these ids\n                (item.listId !== \"2b86ba89-0262-4906-9247-bfd1260fb68e\" && item.listId != \"1f4cd053-dd6b-4e40-bb9b-803cbc74e872\") ? \n                <View style={{marginBottom: 5, borderColor: \"black\", borderWidth: 5}}>\n                  <Text>{item.displayName}</Text>\n                  <Text>{item.listId}</Text>\n                </View>:null \n              }\n            </View>\n          </Link>\n        ))}\n      </View>\n      <Link to={\"/profile/government/graph/create\"}>\n          <Text>Create List</Text>\n      </Link>\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}