{"ast":null,"code":"export function getDaysInMonth(input) {\n  var d = new Date();\n  d.setFullYear(input.getFullYear(), input.getMonth() + 1, 0);\n  return d.getDate();\n}\nexport function getDay(value, startdate) {\n  var offset = 0;\n  var var1 = value / 5.0;\n  var var2 = Math.floor(var1);\n  var var4 = var2 * 2;\n  offset += var4;\n  var result = value - startdate + 2 + offset;\n  var month = new Date();\n  var d = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n  var DayInt = d.getDate();\n  if (result >= DayInt + 1) {\n    return undefined;\n  }\n  return result;\n}\nexport function findFirstDayinMonth(currentTime) {\n  var year = currentTime.getFullYear();\n  var month = currentTime.getMonth();\n  var weekDay = new Date(year, month).getDay();\n  return weekDay;\n}\nexport function isDateToday(dateToCheck) {\n  var today = new Date();\n  var isSameDate = dateToCheck.getDate() === today.getDate() && dateToCheck.getMonth() === today.getMonth() && dateToCheck.getFullYear() === today.getFullYear();\n  return isSameDate;\n}\n;\nexport function convertYearToSchoolYear(year) {\n  return year - 1 + \"-\" + year;\n}\nexport function getEventFromJSON(input) {\n  var result = JSON.parse(input);\n  result[\"endTime\"] = new Date(result[\"endTime\"]);\n  result[\"startTime\"] = new Date(result[\"startTime\"]);\n  return result;\n}","map":{"version":3,"names":["getDaysInMonth","input","d","Date","setFullYear","getFullYear","getMonth","getDate","getDay","value","startdate","offset","var1","var2","Math","floor","var4","result","month","DayInt","undefined","findFirstDayinMonth","currentTime","year","weekDay","isDateToday","dateToCheck","today","isSameDate","convertYearToSchoolYear","getEventFromJSON","JSON","parse"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/Functions/calendarFunctions.tsx"],"sourcesContent":["//July 21 2023\n//Andrew Mainella\n//Calendar functions\n\nexport function getDaysInMonth(input: Date): number{\n    var d = new Date();\n    d.setFullYear(input.getFullYear(), input.getMonth() + 1, 0)\n    return d.getDate()\n}\n\nexport function getDay(value: number, startdate: number): number | undefined {\n    var offset: number = 0\n    let var1: number = value/5.0\n    let var2: number = Math.floor(var1)\n    let var4: number = var2 * 2\n    offset += var4\n    let result: number = ((value - startdate) + 2) + offset\n    var month = new Date()\n    var d = new Date(month.getFullYear(), month.getMonth() + 1, 0)\n    let DayInt = d.getDate()\n    if (result >= (DayInt + 1)) {\n        return undefined\n    }\n    return result\n}\n\nexport function findFirstDayinMonth(currentTime: Date): number {\n    var year = currentTime.getFullYear()\n    var month = currentTime.getMonth()\n    const weekDay = new Date(year, month).getDay()  \n    return weekDay\n    //Returns a which weekday day is the first day of the month.\n    //Sunday is 0, Saturday is 6\n}\n\nexport function isDateToday(dateToCheck: Date) {\n    // Get today's date\n    const today = new Date();\n     \n    // Compare the components of the dateToCheck with today's date\n    const isSameDate =\n      dateToCheck.getDate() === today.getDate() &&\n      dateToCheck.getMonth() === today.getMonth() &&\n      dateToCheck.getFullYear() === today.getFullYear();\n     \n    // Return true if the dateToCheck is today, otherwise return false\n    return isSameDate;\n};\n\n//July 17 2023\n//Andrew Mainella\n//\n//Converting a year to a school year.\n//The year converted is the year of the graduating class\n//\n//For example 2024 would return 2023-2024\n\nexport function convertYearToSchoolYear(year: number) {\n    return (year - 1) + \"-\" + year\n}\n\nexport function getEventFromJSON(input: string): eventType {\n  var result = JSON.parse(input)\n  result[\"endTime\"] = new Date(result[\"endTime\"])\n  result[\"startTime\"] = new Date(result[\"startTime\"])\n  return result\n}"],"mappings":"AAIA,OAAO,SAASA,cAAcA,CAACC,KAAW,EAAS;EAC/C,IAAIC,CAAC,GAAG,IAAIC,IAAI,CAAC,CAAC;EAClBD,CAAC,CAACE,WAAW,CAACH,KAAK,CAACI,WAAW,CAAC,CAAC,EAAEJ,KAAK,CAACK,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EAC3D,OAAOJ,CAAC,CAACK,OAAO,CAAC,CAAC;AACtB;AAEA,OAAO,SAASC,MAAMA,CAACC,KAAa,EAAEC,SAAiB,EAAsB;EACzE,IAAIC,MAAc,GAAG,CAAC;EACtB,IAAIC,IAAY,GAAGH,KAAK,GAAC,GAAG;EAC5B,IAAII,IAAY,GAAGC,IAAI,CAACC,KAAK,CAACH,IAAI,CAAC;EACnC,IAAII,IAAY,GAAGH,IAAI,GAAG,CAAC;EAC3BF,MAAM,IAAIK,IAAI;EACd,IAAIC,MAAc,GAAKR,KAAK,GAAGC,SAAS,GAAI,CAAC,GAAIC,MAAM;EACvD,IAAIO,KAAK,GAAG,IAAIf,IAAI,CAAC,CAAC;EACtB,IAAID,CAAC,GAAG,IAAIC,IAAI,CAACe,KAAK,CAACb,WAAW,CAAC,CAAC,EAAEa,KAAK,CAACZ,QAAQ,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,CAAC;EAC9D,IAAIa,MAAM,GAAGjB,CAAC,CAACK,OAAO,CAAC,CAAC;EACxB,IAAIU,MAAM,IAAKE,MAAM,GAAG,CAAE,EAAE;IACxB,OAAOC,SAAS;EACpB;EACA,OAAOH,MAAM;AACjB;AAEA,OAAO,SAASI,mBAAmBA,CAACC,WAAiB,EAAU;EAC3D,IAAIC,IAAI,GAAGD,WAAW,CAACjB,WAAW,CAAC,CAAC;EACpC,IAAIa,KAAK,GAAGI,WAAW,CAAChB,QAAQ,CAAC,CAAC;EAClC,IAAMkB,OAAO,GAAG,IAAIrB,IAAI,CAACoB,IAAI,EAAEL,KAAK,CAAC,CAACV,MAAM,CAAC,CAAC;EAC9C,OAAOgB,OAAO;AAGlB;AAEA,OAAO,SAASC,WAAWA,CAACC,WAAiB,EAAE;EAE3C,IAAMC,KAAK,GAAG,IAAIxB,IAAI,CAAC,CAAC;EAGxB,IAAMyB,UAAU,GACdF,WAAW,CAACnB,OAAO,CAAC,CAAC,KAAKoB,KAAK,CAACpB,OAAO,CAAC,CAAC,IACzCmB,WAAW,CAACpB,QAAQ,CAAC,CAAC,KAAKqB,KAAK,CAACrB,QAAQ,CAAC,CAAC,IAC3CoB,WAAW,CAACrB,WAAW,CAAC,CAAC,KAAKsB,KAAK,CAACtB,WAAW,CAAC,CAAC;EAGnD,OAAOuB,UAAU;AACrB;AAAC;AAUD,OAAO,SAASC,uBAAuBA,CAACN,IAAY,EAAE;EAClD,OAAQA,IAAI,GAAG,CAAC,GAAI,GAAG,GAAGA,IAAI;AAClC;AAEA,OAAO,SAASO,gBAAgBA,CAAC7B,KAAa,EAAa;EACzD,IAAIgB,MAAM,GAAGc,IAAI,CAACC,KAAK,CAAC/B,KAAK,CAAC;EAC9BgB,MAAM,CAAC,SAAS,CAAC,GAAG,IAAId,IAAI,CAACc,MAAM,CAAC,SAAS,CAAC,CAAC;EAC/CA,MAAM,CAAC,WAAW,CAAC,GAAG,IAAId,IAAI,CAACc,MAAM,CAAC,WAAW,CAAC,CAAC;EACnD,OAAOA,MAAM;AACf"},"metadata":{},"sourceType":"module","externalDependencies":[]}