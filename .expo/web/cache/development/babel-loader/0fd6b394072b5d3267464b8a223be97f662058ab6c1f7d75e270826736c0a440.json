{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport callMsGraph from \"../../../../Functions/microsoftAssets\";\nimport { accessTokenContent } from \"../../../../../App\";\nimport { siteID } from \"../../../../PaulyConfig\";\nimport { useMsal } from '@azure/msal-react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar currentDataResult = function (currentDataResult) {\n  currentDataResult[currentDataResult[\"loading\"] = 0] = \"loading\";\n  currentDataResult[currentDataResult[\"success\"] = 1] = \"success\";\n  currentDataResult[currentDataResult[\"error\"] = 2] = \"error\";\n  return currentDataResult;\n}(currentDataResult || {});\nexport default function GovernmentSportsTeams() {\n  var _useParams = useParams(),\n    sport = _useParams.sport,\n    id = _useParams.id;\n  var pageData = useContext(accessTokenContent);\n  var _useMsal = useMsal(),\n    instance = _useMsal.instance,\n    accounts = _useMsal.accounts;\n  var _useState = useState(currentDataResult.loading),\n    _useState2 = _slicedToArray(_useState, 2),\n    dataResult = _useState2[0],\n    setDataResult = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    currentTeams = _useState4[0],\n    setCurrentTeams = _useState4[1];\n  function getTeams() {\n    return _getTeams.apply(this, arguments);\n  }\n  function _getTeams() {\n    _getTeams = _asyncToGenerator(function* () {\n      var result = yield callMsGraph(pageData.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/\" + id + \"/items?expand=fields\", instance, accounts);\n      if (result.ok) {\n        var data = yield result.json();\n        console.log(data);\n        console.log(data);\n        if (data[\"value\"] !== null && data[\"value\"] !== undefined) {\n          var resultData = [];\n          for (var index = 0; index < data[\"value\"].length; index++) {\n            resultData.push({\n              teamName: data[\"value\"][index][\"fields\"][\"TeamName\"],\n              season: data[\"value\"][index][\"fields\"][\"Season\"],\n              teamID: data[\"value\"][index][\"fields\"][\"teamID\"]\n            });\n          }\n          setCurrentTeams(resultData);\n          console.log(\"Team Result\", resultData);\n          setDataResult(currentDataResult.success);\n        } else {\n          setDataResult(currentDataResult.error);\n        }\n      } else {\n        setDataResult(currentDataResult.error);\n      }\n    });\n    return _getTeams.apply(this, arguments);\n  }\n  useEffect(function () {\n    getTeams();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Link, {\n      to: \"/profile/government/sports\",\n      children: _jsx(Text, {\n        children: \"Back\"\n      })\n    }), _jsxs(Text, {\n      children: [sport, \" Teams\"]\n    }), _jsx(View, {\n      children: dataResult === currentDataResult.loading ? _jsx(View, {\n        children: _jsx(Text, {\n          children: \"Loading\"\n        })\n      }) : _jsx(View, {\n        children: dataResult === currentDataResult.success ? _jsx(View, {\n          children: currentTeams.map(function (item, idIn) {\n            return _jsx(Link, {\n              to: \"/profile/government/sports/team/edit/\" + sport + \"/\" + id + \"/\" + item.teamName + \"/\" + item.teamID + \"/\" + item.season,\n              children: _jsx(View, {\n                children: _jsx(Text, {\n                  children: item.teamName\n                })\n              }, idIn)\n            }, idIn);\n          })\n        }) : _jsx(View, {\n          children: _jsx(Text, {\n            children: \"Error\"\n          })\n        })\n      })\n    }), _jsx(Link, {\n      to: \"/profile/government/sports/team/\" + sport + \"/\" + id + \"/create\",\n      children: _jsx(Text, {\n        children: \"Create New Team\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","useParams","callMsGraph","accessTokenContent","siteID","useMsal","jsx","_jsx","jsxs","_jsxs","currentDataResult","GovernmentSportsTeams","_useParams","sport","id","pageData","_useMsal","instance","accounts","_useState","loading","_useState2","_slicedToArray","dataResult","setDataResult","_useState3","_useState4","currentTeams","setCurrentTeams","getTeams","_getTeams","apply","arguments","_asyncToGenerator","result","accessToken","ok","data","json","console","log","undefined","resultData","index","length","push","teamName","season","teamID","success","error","View","children","to","Text","map","item","idIn"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportsTeams.tsx"],"sourcesContent":["import { View, Text } from 'react-native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { Link, useParams } from 'react-router-native'\nimport callMsGraph from '../../../../Functions/microsoftAssets'\nimport { accessTokenContent } from '../../../../../App'\nimport { siteID } from '../../../../PaulyConfig'\nimport { useMsal } from '@azure/msal-react'\n\nenum currentDataResult{\n    loading,\n    success,\n    error\n}\n\ntype sportTeamType = {\n    teamName: string\n    season: number\n    teamID: string\n}\n\nexport default function GovernmentSportsTeams() {\n    const { sport, id } = useParams()\n    const pageData = useContext(accessTokenContent);\n    const { instance, accounts } = useMsal();\n    const [dataResult, setDataResult] = useState<currentDataResult>(currentDataResult.loading)\n    const [currentTeams, setCurrentTeams] = useState<sportTeamType[]>([])\n    async function getTeams(){\n        const result = await callMsGraph(pageData.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/\" + id +\"/items?expand=fields\", instance, accounts)//TO DO list id\n        if (result.ok) {\n          const data = await result.json()\n          console.log(data)\n          console.log(data)\n          if (data[\"value\"] !== null && data[\"value\"] !== undefined){\n            var resultData: sportTeamType[] = []\n            for (let index = 0; index < data[\"value\"].length; index++) {\n              resultData.push({\n                teamName: data[\"value\"][index][\"fields\"][\"TeamName\"],\n                season: data[\"value\"][index][\"fields\"][\"Season\"],\n                teamID: data[\"value\"][index][\"fields\"][\"teamID\"]\n              })\n            }\n            setCurrentTeams(resultData)\n            console.log(\"Team Result\", resultData)\n            setDataResult(currentDataResult.success)\n          } else {\n            setDataResult(currentDataResult.error)\n          }\n        } else {\n          setDataResult(currentDataResult.error)\n        }\n    }\n    useEffect(() => {\n        getTeams()\n    }, [])\n    return (\n        <View>\n            <Link to=\"/profile/government/sports\">\n                <Text>Back</Text>\n            </Link>\n            <Text>{sport} Teams</Text>\n            <View>\n            { (dataResult === currentDataResult.loading) ?\n                <View><Text>Loading</Text></View>:\n                <View>\n                {(dataResult === currentDataResult.success) ?\n                    <View>\n                    {currentTeams.map((item, idIn) => (\n                        <Link key={idIn} to={\"/profile/government/sports/team/edit/\" + sport + \"/\" + id + \"/\" + item.teamName + \"/\" + item.teamID + \"/\" + item.season}>\n                            <View key={idIn}>\n                                <Text>{item.teamName}</Text>\n                            </View>\n                        </Link>\n                    ))}\n                    </View>:<View><Text>Error</Text></View>\n                }\n                </View>\n            }\n            </View>\n            <Link to={\"/profile/government/sports/team/\" + sport + \"/\" + id + \"/create\"}>\n                <Text>Create New Team</Text>\n            </Link>\n        </View>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}