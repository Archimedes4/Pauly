{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { accessTokenContent } from \"../../../../../../App\";\nimport { siteID } from \"../../../../../PaulyConfig\";\nimport callMsGraph from \"../../../../../Functions/microsoftAssets\";\nimport { Link } from 'react-router-native';\nimport { useMsal } from '@azure/msal-react';\nimport { useSelector } from 'react-redux';\nimport { loadingStateEnum } from \"../../../../../types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GovernmentSchedule() {\n  var microsoftAccessToken = useContext(accessTokenContent);\n  var _useMsal = useMsal(),\n    instance = _useMsal.instance,\n    accounts = _useMsal.accounts;\n  var _useSelector = useSelector(function (state) {\n      return state.paulyList;\n    }),\n    scheduleListId = _useSelector.scheduleListId;\n  var _useState = useState(loadingStateEnum.loading),\n    _useState2 = _slicedToArray(_useState, 2),\n    loadingState = _useState2[0],\n    setLoadingState = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loadedSchedules = _useState4[0],\n    setLoadedSchedules = _useState4[1];\n  function getSchedules() {\n    return _getSchedules.apply(this, arguments);\n  }\n  function _getSchedules() {\n    _getSchedules = _asyncToGenerator(function* () {\n      var result = yield callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/\" + scheduleListId + \"/items?expand=fields\", instance, accounts);\n      if (result.ok) {\n        var dataResult = yield result.json();\n        if (dataResult[\"value\"].length !== undefined && dataResult[\"value\"].length !== null) {\n          var newLoadedSchedules = [];\n          for (var index = 0; index < dataResult[\"value\"].length; index++) {\n            try {\n              var scheduleData = JSON.parse(dataResult[\"value\"][index][\"fields\"][\"scheduleData\"]);\n              console.log(scheduleData);\n              newLoadedSchedules.push({\n                properName: dataResult[\"value\"][index][\"fields\"][\"scheduleProperName\"],\n                descriptiveName: dataResult[\"value\"][index][\"fields\"][\"scheduleDescriptiveName\"],\n                id: dataResult[\"value\"][index][\"fields\"][\"scheduleId\"],\n                periods: scheduleData\n              });\n            } catch (_unused) {}\n          }\n          setLoadedSchedules(newLoadedSchedules);\n          setLoadingState(loadingStateEnum.success);\n        }\n      } else {\n        setLoadingState(loadingStateEnum.failed);\n      }\n    });\n    return _getSchedules.apply(this, arguments);\n  }\n  useEffect(function () {\n    getSchedules();\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(Link, {\n      to: \"/\",\n      children: _jsx(Text, {\n        children: \"Back\"\n      })\n    }), _jsx(Text, {\n      children: \"GovernmentSchedule\"\n    }), loadingState === loadingStateEnum.loading ? _jsx(Text, {\n      children: \"Loading\"\n    }) : null, loadingState === loadingStateEnum.success ? _jsx(View, {\n      children: loadedSchedules.map(function (schedule) {\n        return _jsx(Link, {\n          to: \"/profile/government/calendar/schedule/edit/\" + schedule.id,\n          children: _jsx(View, {\n            children: _jsx(Text, {\n              children: schedule.properName\n            })\n          })\n        }, schedule.id);\n      })\n    }) : null, loadingState === loadingStateEnum.failed ? _jsx(Text, {\n      children: \"Failure\"\n    }) : null, _jsx(Link, {\n      to: \"/profile/government/calendar/schedule/create\",\n      children: _jsx(Text, {\n        children: \"Create New\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","accessTokenContent","siteID","callMsGraph","Link","useMsal","useSelector","loadingStateEnum","jsx","_jsx","jsxs","_jsxs","GovernmentSchedule","microsoftAccessToken","_useMsal","instance","accounts","_useSelector","state","paulyList","scheduleListId","_useState","loading","_useState2","_slicedToArray","loadingState","setLoadingState","_useState3","_useState4","loadedSchedules","setLoadedSchedules","getSchedules","_getSchedules","apply","arguments","_asyncToGenerator","result","accessToken","ok","dataResult","json","length","undefined","newLoadedSchedules","index","scheduleData","JSON","parse","console","log","push","properName","descriptiveName","id","periods","_unused","success","failed","View","children","to","Text","map","schedule"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentSchedule.tsx"],"sourcesContent":["import { View, Text } from 'react-native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { accessTokenContent } from '../../../../../../App';\nimport { siteID } from '../../../../../PaulyConfig';\nimport callMsGraph from '../../../../../Functions/microsoftAssets';\nimport { Link } from 'react-router-native';\nimport { useMsal } from '@azure/msal-react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../../Redux/store';\nimport { loadingStateEnum } from '../../../../../types';\n// enum loadingStateEnum {\n//   loading,\n//   success,\n//   failed\n// }\n\nexport default function GovernmentSchedule() {\n  const microsoftAccessToken = useContext(accessTokenContent);\n  const { instance, accounts } = useMsal();\n  const {scheduleListId} = useSelector((state: RootState) => state.paulyList)\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(loadingStateEnum.loading)\n  const [loadedSchedules, setLoadedSchedules] = useState<scheduleType[]>([])\n  async function getSchedules() {\n    const result = await callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/\" + scheduleListId +\"/items?expand=fields\", instance, accounts)\n    if (result.ok){\n      const dataResult = await result.json()\n      if (dataResult[\"value\"].length !== undefined && dataResult[\"value\"].length !== null){\n        var newLoadedSchedules: scheduleType[] = []\n        for (let index = 0; index < dataResult[\"value\"].length; index++) {\n          try {\n            const scheduleData = JSON.parse(dataResult[\"value\"][index][\"fields\"][\"scheduleData\"]) as periodType[]\n            console.log(scheduleData)\n            newLoadedSchedules.push({\n              properName: dataResult[\"value\"][index][\"fields\"][\"scheduleProperName\"],\n              descriptiveName: dataResult[\"value\"][index][\"fields\"][\"scheduleDescriptiveName\"],\n              id: dataResult[\"value\"][index][\"fields\"][\"scheduleId\"],\n              periods: scheduleData\n            })\n          } catch {\n            //TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n          }\n        }\n        setLoadedSchedules(newLoadedSchedules)\n        setLoadingState(loadingStateEnum.success)\n      }\n    } else {\n      setLoadingState(loadingStateEnum.failed)\n    }\n  }\n  useEffect(() => {\n    getSchedules()\n  }, [])\n  return (\n    <View>\n      <Link to=\"/\">\n        <Text>Back</Text>\n      </Link>\n      <Text>GovernmentSchedule</Text>\n      { (loadingState === loadingStateEnum.loading) ?\n        <Text>Loading</Text>:null\n      }\n      { (loadingState === loadingStateEnum.success) ?\n        <View>\n          { loadedSchedules.map((schedule) => (\n            <Link to={\"/profile/government/calendar/schedule/edit/\" + schedule.id} key={schedule.id}>\n              <View>\n                <Text>{schedule.properName}</Text>\n              </View>\n            </Link>\n          ))\n          }\n        </View>:null\n      }\n      { (loadingState === loadingStateEnum.failed) ?\n        <Text>Failure</Text>:null\n      }\n      <Link to=\"/profile/government/calendar/schedule/create\">\n        <Text>Create New</Text>\n      </Link>\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}