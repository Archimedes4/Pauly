{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport React, { useContext, useState } from 'react';\nimport { useMsal } from '@azure/msal-react';\nimport { accessTokenContent } from \"../../../../../App\";\nimport { loadingStateEnum } from \"../../../../types\";\nimport { Link } from 'react-router-native';\nimport initilizePauly from \"../../../../Functions/initilizePauly\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GovernmentAdmin() {\n  var pageData = useContext(accessTokenContent);\n  var _useMsal = useMsal(),\n    instance = _useMsal.instance,\n    accounts = _useMsal.accounts;\n  var _useState = useState(loadingStateEnum.notStarted),\n    _useState2 = _slicedToArray(_useState, 2),\n    initilizePaulyLoadingResult = _useState2[0],\n    setInitilizePaulyLoadingResult = _useState2[1];\n  function InitilizePauly() {\n    setInitilizePaulyLoadingResult(loadingStateEnum.loading);\n    initilizePauly(pageData.accessToken, instance, accounts);\n  }\n  return _jsxs(View, {\n    children: [_jsx(Link, {\n      to: \"/profile/government\",\n      children: _jsx(Text, {\n        children: \"Back\"\n      })\n    }), _jsx(Button, {\n      title: initilizePaulyLoadingResult === loadingStateEnum.notStarted ? \"Initilize Pauly on New Tenant\" : initilizePaulyLoadingResult === loadingStateEnum.loading ? \"Loading\" : initilizePaulyLoadingResult === loadingStateEnum.success ? \"Success\" : \"Failed\",\n      onPress: function onPress() {\n        if (initilizePaulyLoadingResult === loadingStateEnum.notStarted) {\n          InitilizePauly();\n        }\n      }\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useState","useMsal","accessTokenContent","loadingStateEnum","Link","initilizePauly","jsx","_jsx","jsxs","_jsxs","GovernmentAdmin","pageData","_useMsal","instance","accounts","_useState","notStarted","_useState2","_slicedToArray","initilizePaulyLoadingResult","setInitilizePaulyLoadingResult","InitilizePauly","loading","accessToken","View","children","to","Text","Button","title","success","onPress"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/AuthenticatedView/Profile/Government/GovernmentAdminCenter/GovernmentAdmin.tsx"],"sourcesContent":["import { View, Text, Button } from 'react-native'\nimport React, { useContext, useState } from 'react'\nimport callMsGraph from '../../../../Functions/microsoftAssets'\nimport { useMsal } from '@azure/msal-react';\nimport { accessTokenContent } from '../../../../../App';\nimport { siteID } from '../../../../PaulyConfig';\nimport { loadingStateEnum } from '../../../../types';\nimport { Link } from 'react-router-native';\nimport initilizePauly from '../../../../Functions/initilizePauly';\n\nexport default function GovernmentAdmin() {\n  const pageData = useContext(accessTokenContent);\n  const { instance, accounts } = useMsal();\n  const [initilizePaulyLoadingResult, setInitilizePaulyLoadingResult] = useState<loadingStateEnum>(loadingStateEnum.notStarted)\n  function InitilizePauly() {\n    setInitilizePaulyLoadingResult(loadingStateEnum.loading)\n    initilizePauly(pageData.accessToken, instance, accounts)\n  }\n  return (\n    <View>\n      <Link to=\"/profile/government\">\n        <Text>Back</Text>\n      </Link>\n      <Button title={(initilizePaulyLoadingResult === loadingStateEnum.notStarted) ? \"Initilize Pauly on New Tenant\":(initilizePaulyLoadingResult ===  loadingStateEnum.loading) ? \"Loading\":(initilizePaulyLoadingResult === loadingStateEnum.success) ? \"Success\":\"Failed\"} onPress={() => {if (initilizePaulyLoadingResult === loadingStateEnum.notStarted) {InitilizePauly()}}}/>\n    </View>\n  )\n}"],"mappings":";;;;AACA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AAEnD,SAASC,OAAO,QAAQ,mBAAmB;AAC3C,SAASC,kBAAkB;AAE3B,SAASC,gBAAgB;AACzB,SAASC,IAAI,QAAQ,qBAAqB;AAC1C,OAAOC,cAAc;AAA6C,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAElE,eAAe,SAASC,eAAeA,CAAA,EAAG;EACxC,IAAMC,QAAQ,GAAGZ,UAAU,CAACG,kBAAkB,CAAC;EAC/C,IAAAU,QAAA,GAA+BX,OAAO,CAAC,CAAC;IAAhCY,QAAQ,GAAAD,QAAA,CAARC,QAAQ;IAAEC,QAAQ,GAAAF,QAAA,CAARE,QAAQ;EAC1B,IAAAC,SAAA,GAAsEf,QAAQ,CAAmBG,gBAAgB,CAACa,UAAU,CAAC;IAAAC,UAAA,GAAAC,cAAA,CAAAH,SAAA;IAAtHI,2BAA2B,GAAAF,UAAA;IAAEG,8BAA8B,GAAAH,UAAA;EAClE,SAASI,cAAcA,CAAA,EAAG;IACxBD,8BAA8B,CAACjB,gBAAgB,CAACmB,OAAO,CAAC;IACxDjB,cAAc,CAACM,QAAQ,CAACY,WAAW,EAAEV,QAAQ,EAAEC,QAAQ,CAAC;EAC1D;EACA,OACEL,KAAA,CAACe,IAAI;IAAAC,QAAA,GACHlB,IAAA,CAACH,IAAI;MAACsB,EAAE,EAAC,qBAAqB;MAAAD,QAAA,EAC5BlB,IAAA,CAACoB,IAAI;QAAAF,QAAA,EAAC;MAAI,CAAM;IAAC,CACb,CAAC,EACPlB,IAAA,CAACqB,MAAM;MAACC,KAAK,EAAGV,2BAA2B,KAAKhB,gBAAgB,CAACa,UAAU,GAAI,+BAA+B,GAAEG,2BAA2B,KAAMhB,gBAAgB,CAACmB,OAAO,GAAI,SAAS,GAAEH,2BAA2B,KAAKhB,gBAAgB,CAAC2B,OAAO,GAAI,SAAS,GAAC,QAAS;MAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;QAAC,IAAIZ,2BAA2B,KAAKhB,gBAAgB,CAACa,UAAU,EAAE;UAACK,cAAc,CAAC,CAAC;QAAA;MAAC;IAAE,CAAC,CAAC;EAAA,CAC3W,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}