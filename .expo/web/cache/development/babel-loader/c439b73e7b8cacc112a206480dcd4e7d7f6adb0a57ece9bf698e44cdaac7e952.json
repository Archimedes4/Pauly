{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport callMsGraph from \"../../../../Functions/microsoftAssets\";\nimport { accessTokenContent } from \"../../../../../App\";\nimport { siteID } from \"../../../../PaulyConfig\";\nimport { useMsal } from '@azure/msal-react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GovernmentClassesCreate() {\n  var pageData = useContext(accessTokenContent);\n  var _useMsal = useMsal(),\n    instance = _useMsal.instance,\n    accounts = _useMsal.accounts;\n  var _useState = useState(\"\"),\n    _useState2 = _slicedToArray(_useState, 2),\n    teacherNameSearch = _useState2[0],\n    setTeacherNameSearch = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    teachers = _useState4[0],\n    setTeachers = _useState4[1];\n  var _useState5 = useState(undefined),\n    _useState6 = _slicedToArray(_useState5, 2),\n    selectedTeacher = _useState6[0],\n    setSelectedTeacher = _useState6[1];\n  function getUsers() {\n    return _getUsers.apply(this, arguments);\n  }\n  function _getUsers() {\n    _getUsers = _asyncToGenerator(function* () {\n      var result = yield callMsGraph(pageData.accessToken, teacherNameSearch === \"\" ? \"https://graph.microsoft.com/v1.0/users/\" : \"https://graph.microsoft.com/v1.0/users/?$filter=startswith(displayName,'\" + encodeURI(teacherNameSearch) + \"')\", instance, accounts);\n      if (result.ok) {\n        var data = yield result.json();\n        console.log(data);\n        if (data[\"value\"].length !== undefined) {\n          var newTeachers = [];\n          for (var index = 0; index < data[\"value\"].length; index++) {\n            newTeachers.push({\n              id: data[\"value\"][index][\"id\"],\n              displayName: data[\"value\"][index][\"displayName\"]\n            });\n          }\n          setTeachers(newTeachers);\n        } else {}\n      } else {\n        console.log(result);\n      }\n    });\n    return _getUsers.apply(this, arguments);\n  }\n  function getRootClasses() {\n    return _getRootClasses.apply(this, arguments);\n  }\n  function _getRootClasses() {\n    _getRootClasses = _asyncToGenerator(function* () {\n      var result = yield callMsGraph(pageData.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/800202d8-1f51-4df4-ac39-08da7357ca89/items?expand=field\", instance, accounts);\n      if (result.ok) {\n        var data = yield result.json();\n        console.log(data);\n      } else {\n        console.log(\"Failed to get root classes\");\n      }\n    });\n    return _getRootClasses.apply(this, arguments);\n  }\n  useEffect(function () {\n    getUsers();\n  }, [teacherNameSearch]);\n  return _jsxs(View, {\n    children: [_jsx(Text, {\n      children: \"GovernmentClassesCreate\"\n    }), _jsxs(View, {\n      children: [_jsx(Text, {\n        children: \"Teacher Name\"\n      }), _jsxs(Text, {\n        children: [\"Selected Teacher: \", selectedTeacher !== undefined ? selectedTeacher.displayName : \"NO TEACHER HAS BEEN SELECTED!\"]\n      }), _jsx(TextInput, {\n        value: teacherNameSearch,\n        onChangeText: function onChangeText(e) {\n          setTeacherNameSearch(e);\n        }\n      }), teachers.map(function (Teacher) {\n        return _jsx(Pressable, {\n          onPress: function onPress() {\n            setSelectedTeacher(Teacher);\n          },\n          children: _jsx(Text, {\n            children: Teacher.displayName\n          })\n        });\n      })]\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","callMsGraph","accessTokenContent","siteID","useMsal","jsx","_jsx","jsxs","_jsxs","GovernmentClassesCreate","pageData","_useMsal","instance","accounts","_useState","_useState2","_slicedToArray","teacherNameSearch","setTeacherNameSearch","_useState3","_useState4","teachers","setTeachers","_useState5","undefined","_useState6","selectedTeacher","setSelectedTeacher","getUsers","_getUsers","apply","arguments","_asyncToGenerator","result","accessToken","encodeURI","ok","data","json","console","log","length","newTeachers","index","push","id","displayName","getRootClasses","_getRootClasses","View","children","Text","TextInput","value","onChangeText","e","map","Teacher","Pressable","onPress"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClassesCreate.tsx"],"sourcesContent":["import { View, Text, TextInput, Pressable } from 'react-native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport callMsGraph from '../../../../Functions/microsoftAssets'\nimport { accessTokenContent } from '../../../../../App';\nimport { siteID } from '../../../../PaulyConfig';\nimport { useMsal } from '@azure/msal-react';\n\ndeclare global {\n    type microsoftUserType = {\n        id: string\n        displayName: string\n    }\n}\n\nexport default function GovernmentClassesCreate() {\n    const pageData = useContext(accessTokenContent);\n    const { instance, accounts } = useMsal();\n    const [teacherNameSearch, setTeacherNameSearch] = useState<string>(\"\")\n    const [teachers, setTeachers] = useState<microsoftUserType[]>([])\n    const [selectedTeacher, setSelectedTeacher] = useState<microsoftUserType | undefined>(undefined)\n    async function getUsers() {\n        //TO DO on deploy ment make only teachers instead of searching users search group\n        const result = await callMsGraph(pageData.accessToken, (teacherNameSearch === \"\") ? \"https://graph.microsoft.com/v1.0/users/\":\"https://graph.microsoft.com/v1.0/users/?$filter=startswith(displayName,'\" + encodeURI(teacherNameSearch) + \"')\", instance, accounts)\n        if (result.ok){\n            const data = await result.json()\n            console.log(data)\n            //TO DO check if this is safe\n            if (data[\"value\"].length !== undefined){\n                var newTeachers: microsoftUserType[] = []\n                for (let index = 0; index < data[\"value\"].length; index++){\n                    newTeachers.push({\n                        id: data[\"value\"][index][\"id\"],\n                        displayName: data[\"value\"][index][\"displayName\"]\n                    })\n                }\n                setTeachers(newTeachers)\n            }  else {\n                //TO DO handle error this shouldn't be possible and most likly means that pauly is in need of an update\n            }\n        } else {\n            //TO DO handle error\n            console.log(result)\n        }\n    }\n    async function getRootClasses() {\n        const result = await callMsGraph(pageData.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/800202d8-1f51-4df4-ac39-08da7357ca89/items?expand=field\", instance, accounts)\n        if (result.ok){\n            const data = await result.json()\n            console.log(data)\n        } else {\n            //TO DO failed to get root classes\n            console.log(\"Failed to get root classes\")\n        }\n    }\n    useEffect(() => {\n        getUsers()\n    }, [teacherNameSearch])\n    \n  return (\n    <View>\n        <Text>GovernmentClassesCreate</Text>\n        <View>\n            <Text>Teacher Name</Text>\n            <Text>Selected Teacher: {(selectedTeacher !== undefined) ? selectedTeacher.displayName:\"NO TEACHER HAS BEEN SELECTED!\"}</Text>\n            <TextInput value={teacherNameSearch} onChangeText={(e) => {setTeacherNameSearch(e)}}/>\n            {teachers.map((Teacher) => (\n                <Pressable onPress={() => {setSelectedTeacher(Teacher)}}>\n                    <Text>{Teacher.displayName}</Text>\n                </Pressable>\n            ))\n            }\n\n        </View>\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}