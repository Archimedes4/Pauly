{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useState } from 'react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Dropdown(_ref) {\n  var children = _ref.children,\n    onSetSelectedIndex = _ref.onSetSelectedIndex,\n    style = _ref.style,\n    selectedIndex = _ref.selectedIndex,\n    expandedStyle = _ref.expandedStyle;\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isExpanded = _useState2[0],\n    setIsExpanded = _useState2[1];\n  var _useState3 = useState(0),\n    _useState4 = _slicedToArray(_useState3, 2),\n    height = _useState4[0],\n    setheight = _useState4[1];\n  return _jsx(View, {\n    style: {\n      zIndex: 100,\n      position: \"relative\"\n    },\n    children: isExpanded ? _jsxs(View, {\n      children: [_jsx(View, {\n        style: style\n      }), _jsx(View, {\n        style: [expandedStyle, {\n          position: \"absolute\",\n          zIndex: 100\n        }],\n        children: React.Children.map(children, function (child, index) {\n          return _jsx(View, {\n            children: _jsx(Pressable, {\n              onPress: function onPress() {\n                onSetSelectedIndex(index);\n                setIsExpanded(false);\n              },\n              children: _jsx(React.Fragment, {\n                children: child\n              })\n            })\n          });\n        })\n      })]\n    }) : _jsx(Pressable, {\n      onPress: function onPress() {\n        setIsExpanded(true);\n      },\n      style: style,\n      children: _jsx(React.Fragment, {\n        children: children[selectedIndex]\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","Dropdown","_ref","children","onSetSelectedIndex","style","selectedIndex","expandedStyle","_useState","_useState2","_slicedToArray","isExpanded","setIsExpanded","_useState3","_useState4","height","setheight","View","zIndex","position","Children","map","child","index","Pressable","onPress","Fragment"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/UI/Dropdown.tsx"],"sourcesContent":["import { View, Text, Pressable, StyleProp, ViewStyle } from 'react-native'\nimport React, { Children, ReactNode, useState } from 'react'\n\n//On set selected index returns 0 for the first child that is passed down\n\nexport default function Dropdown({children, onSetSelectedIndex, style, selectedIndex, expandedStyle}:{children: ReactNode, selectedIndex: number, onSetSelectedIndex: (item: number) => void, style?: StyleProp<ViewStyle>, expandedStyle?: StyleProp<ViewStyle>}) {\n    const [isExpanded, setIsExpanded] = useState<boolean>(false)\n    const [height, setheight] = useState<number>(0)\n    return (\n    <View style={{zIndex: 100, position: \"relative\"}}>\n        { isExpanded ?\n            <View>\n                <View style={style}/>\n                <View style={[expandedStyle, {position: \"absolute\", zIndex: 100}]}>\n                {\n                    React.Children.map(children, (child, index) =>\n                    <View>\n                        <Pressable onPress={() => {onSetSelectedIndex(index); setIsExpanded(false)}}>\n                            <React.Fragment>\n                                {child}\n                            </React.Fragment>\n                        </Pressable>\n                    </View>\n                    )\n                }\n                </View>\n            </View>:\n            <Pressable onPress={() => {setIsExpanded(true)}} style={style}>\n                <React.Fragment>\n                    {children[selectedIndex]}\n                </React.Fragment>\n            </Pressable>\n        }\n    </View>\n  )\n}"],"mappings":";;;AACA,OAAOA,KAAK,IAAyBC,QAAQ,QAAQ,OAAO;AAAA,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAI5D,eAAe,SAASC,QAAQA,CAAAC,IAAA,EAAmO;EAAA,IAAjOC,QAAQ,GAAAD,IAAA,CAARC,QAAQ;IAAEC,kBAAkB,GAAAF,IAAA,CAAlBE,kBAAkB;IAAEC,KAAK,GAAAH,IAAA,CAALG,KAAK;IAAEC,aAAa,GAAAJ,IAAA,CAAbI,aAAa;IAAEC,aAAa,GAAAL,IAAA,CAAbK,aAAa;EAC/F,IAAAC,SAAA,GAAoCZ,QAAQ,CAAU,KAAK,CAAC;IAAAa,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAArDG,UAAU,GAAAF,UAAA;IAAEG,aAAa,GAAAH,UAAA;EAChC,IAAAI,UAAA,GAA4BjB,QAAQ,CAAS,CAAC,CAAC;IAAAkB,UAAA,GAAAJ,cAAA,CAAAG,UAAA;IAAxCE,MAAM,GAAAD,UAAA;IAAEE,SAAS,GAAAF,UAAA;EACxB,OACAhB,IAAA,CAACmB,IAAI;IAACZ,KAAK,EAAE;MAACa,MAAM,EAAE,GAAG;MAAEC,QAAQ,EAAE;IAAU,CAAE;IAAAhB,QAAA,EAC3CQ,UAAU,GACRX,KAAA,CAACiB,IAAI;MAAAd,QAAA,GACDL,IAAA,CAACmB,IAAI;QAACZ,KAAK,EAAEA;MAAM,CAAC,CAAC,EACrBP,IAAA,CAACmB,IAAI;QAACZ,KAAK,EAAE,CAACE,aAAa,EAAE;UAACY,QAAQ,EAAE,UAAU;UAAED,MAAM,EAAE;QAAG,CAAC,CAAE;QAAAf,QAAA,EAE9DR,KAAK,CAACyB,QAAQ,CAACC,GAAG,CAAClB,QAAQ,EAAE,UAACmB,KAAK,EAAEC,KAAK;UAAA,OAC1CzB,IAAA,CAACmB,IAAI;YAAAd,QAAA,EACDL,IAAA,CAAC0B,SAAS;cAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;gBAACrB,kBAAkB,CAACmB,KAAK,CAAC;gBAAEX,aAAa,CAAC,KAAK,CAAC;cAAA,CAAE;cAAAT,QAAA,EACxEL,IAAA,CAACH,KAAK,CAAC+B,QAAQ;gBAAAvB,QAAA,EACVmB;cAAK,CACM;YAAC,CACV;UAAC,CACV,CAAC;QAAA,CACP;MAAC,CAEC,CAAC;IAAA,CACL,CAAC,GACPxB,IAAA,CAAC0B,SAAS;MAACC,OAAO,EAAE,SAAAA,QAAA,EAAM;QAACb,aAAa,CAAC,IAAI,CAAC;MAAA,CAAE;MAACP,KAAK,EAAEA,KAAM;MAAAF,QAAA,EAC1DL,IAAA,CAACH,KAAK,CAAC+B,QAAQ;QAAAvB,QAAA,EACVA,QAAQ,CAACG,aAAa;MAAC,CACZ;IAAC,CACV;EAAC,CAEd,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}