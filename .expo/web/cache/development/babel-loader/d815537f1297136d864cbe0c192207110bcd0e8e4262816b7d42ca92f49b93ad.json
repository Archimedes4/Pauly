{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { accessTokenContent } from \"../../../App\";\nimport { siteID } from \"../../PaulyConfig\";\nimport callMsGraph from \"../../Functions/microsoftAssets\";\nimport { Link } from 'react-router-native';\nimport { useMsal } from '@azure/msal-react';\nimport { useSelector } from 'react-redux';\nimport { loadingStateEnum } from \"../../types\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function SelectTimetable(_ref) {\n  var governmentMode = _ref.governmentMode,\n    onSelect = _ref.onSelect;\n  var pageData = useContext(accessTokenContent);\n  var _useMsal = useMsal(),\n    instance = _useMsal.instance,\n    accounts = _useMsal.accounts;\n  var _useSelector = useSelector(function (state) {\n      return state.paulyList;\n    }),\n    timetablesListId = _useSelector.timetablesListId;\n  var _useState = useState(loadingStateEnum.loading),\n    _useState2 = _slicedToArray(_useState, 2),\n    loadingState = _useState2[0],\n    setLoadingState = _useState2[1];\n  var _useState3 = useState([]),\n    _useState4 = _slicedToArray(_useState3, 2),\n    loadedTimetables = _useState4[0],\n    setLoadedTimetables = _useState4[1];\n  function getTimetables() {\n    return _getTimetables.apply(this, arguments);\n  }\n  function _getTimetables() {\n    _getTimetables = _asyncToGenerator(function* () {\n      var result = yield callMsGraph(pageData.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/\" + timetablesListId + \"/items?expand=fields\", instance, accounts);\n      if (result.ok) {\n        var dataResult = yield result.json();\n        if (dataResult[\"value\"].length !== undefined && dataResult[\"value\"].length !== null) {\n          var newLoadedTimetables = [];\n          for (var index = 0; index < dataResult[\"value\"].length; index++) {\n            try {\n              newLoadedTimetables.push({\n                name: dataResult[\"value\"][index][\"fields\"][\"timetableName\"],\n                id: dataResult[\"value\"][index][\"fields\"][\"timetableId\"],\n                schedules: JSON.parse(dataResult[\"value\"][index][\"fields\"][\"timetableDataSchedules\"]),\n                days: JSON.parse(dataResult[\"value\"][index][\"fields\"][\"timetableDataDays\"])\n              });\n            } catch (e) {\n              console.log(\"Error\", e);\n            }\n          }\n          setLoadedTimetables(newLoadedTimetables);\n          setLoadingState(loadingStateEnum.success);\n        }\n      } else {\n        setLoadingState(loadingStateEnum.failed);\n      }\n    });\n    return _getTimetables.apply(this, arguments);\n  }\n  useEffect(function () {\n    getTimetables();\n  }, []);\n  return _jsxs(View, {\n    children: [loadingState === loadingStateEnum.loading ? _jsx(Text, {\n      children: \"Loading\"\n    }) : null, loadingState === loadingStateEnum.success ? _jsx(View, {\n      children: loadedTimetables.map(function (timetables) {\n        return _jsx(_Fragment, {\n          children: governmentMode ? _jsx(Link, {\n            to: \"/profile/government/calendar/timetable/edit/\" + timetables.id,\n            children: _jsx(View, {\n              children: _jsx(Text, {\n                children: timetables.name\n              })\n            })\n          }) : _jsx(Pressable, {\n            onPress: function onPress() {\n              onSelect(timetables);\n            },\n            children: _jsx(View, {\n              children: _jsx(Text, {\n                children: timetables.name\n              })\n            })\n          })\n        });\n      })\n    }) : null, loadingState === loadingStateEnum.failed ? _jsx(Text, {\n      children: \"Failure\"\n    }) : null]\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","accessTokenContent","siteID","callMsGraph","Link","useMsal","useSelector","loadingStateEnum","jsx","_jsx","Fragment","_Fragment","jsxs","_jsxs","SelectTimetable","_ref","governmentMode","onSelect","pageData","_useMsal","instance","accounts","_useSelector","state","paulyList","timetablesListId","_useState","loading","_useState2","_slicedToArray","loadingState","setLoadingState","_useState3","_useState4","loadedTimetables","setLoadedTimetables","getTimetables","_getTimetables","apply","arguments","_asyncToGenerator","result","accessToken","ok","dataResult","json","length","undefined","newLoadedTimetables","index","push","name","id","schedules","JSON","parse","days","e","console","log","success","failed","View","children","Text","map","timetables","to","Pressable","onPress"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/AuthenticatedView/Calendar/SelectTimetable.tsx"],"sourcesContent":["import { View, Text, Pressable } from 'react-native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { accessTokenContent } from '../../../App';\nimport { siteID } from '../../PaulyConfig';\nimport callMsGraph from '../../Functions/microsoftAssets';\nimport { Link } from 'react-router-native';\nimport { useMsal } from '@azure/msal-react';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\n\ndeclare global {\n    type timetableStringType = {\n      name: string,\n      id: string,\n      schedules: string[],\n      days: string[]\n    }\n    type timetableType = {\n      name: string,\n      id: string,\n      schedules: scheduleType[],\n      days: schoolDayType[]\n    }\n}  \n\nexport default function SelectTimetable({governmentMode, onSelect}:{governmentMode: boolean, onSelect?: (item: timetableStringType) => void}) {\n  const pageData = useContext(accessTokenContent);\n  const { instance, accounts } = useMsal();\n  const {timetablesListId} = useSelector((state: RootState) => state.paulyList)\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(loadingStateEnum.loading)\n  const [loadedTimetables, setLoadedTimetables] = useState<timetableStringType[]>([])\n  async function getTimetables() {\n    const result = await callMsGraph(pageData.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/\" + timetablesListId + \"/items?expand=fields\", instance, accounts)\n    if (result.ok){\n      const dataResult = await result.json()\n      if (dataResult[\"value\"].length !== undefined && dataResult[\"value\"].length !== null){\n        var newLoadedTimetables: timetableStringType[] = []\n        for (let index = 0; index < dataResult[\"value\"].length; index++) {\n          try {\n            newLoadedTimetables.push({\n              name: dataResult[\"value\"][index][\"fields\"][\"timetableName\"],\n              id: dataResult[\"value\"][index][\"fields\"][\"timetableId\"],\n              schedules: JSON.parse(dataResult[\"value\"][index][\"fields\"][\"timetableDataSchedules\"]),\n              days: JSON.parse(dataResult[\"value\"][index][\"fields\"][\"timetableDataDays\"])\n            })\n          } catch (e) {\n            console.log(\"Error\", e)\n            //TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n          }\n        }\n        setLoadedTimetables(newLoadedTimetables)\n        setLoadingState(loadingStateEnum.success)\n      }\n    } else {\n      setLoadingState(loadingStateEnum.failed)\n    }\n  }\n  useEffect(() => {\n    getTimetables()\n  }, [])\n  return (\n    <View>\n      { (loadingState === loadingStateEnum.loading) ?\n        <Text>Loading</Text>:null\n      }\n      { (loadingState === loadingStateEnum.success) ?\n        <View>\n          { loadedTimetables.map((timetables) => (\n            <>\n                { governmentMode ?\n                    <Link to={\"/profile/government/calendar/timetable/edit/\" + timetables.id}>\n                        <View>\n                            <Text>{timetables.name}</Text>\n                        </View>\n                    </Link>:\n                    <Pressable onPress={() => {onSelect(timetables)}}>\n                        <View>\n                            <Text>{timetables.name}</Text>\n                        </View>\n                    </Pressable>\n                }\n            </>\n          ))\n          }\n        </View>:null\n      }\n      { (loadingState === loadingStateEnum.failed) ?\n        <Text>Failure</Text>:null\n      }\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}