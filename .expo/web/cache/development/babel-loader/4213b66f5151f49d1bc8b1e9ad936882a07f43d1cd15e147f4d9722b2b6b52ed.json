{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useCallback, useContext, useEffect, useState } from 'react';\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Geolocation from '@react-native-community/geolocation';\nimport { Link } from 'react-router-native';\nimport callMsGraph from \"../../Functions/microsoftAssets\";\nimport { accessTokenContent } from \"../../../App\";\nimport { siteID } from \"../../PaulyConfig\";\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useMsal } from '@azure/msal-react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar CommissionMode = function (CommissionMode) {\n  CommissionMode[CommissionMode[\"Before\"] = 0] = \"Before\";\n  CommissionMode[CommissionMode[\"Current\"] = 1] = \"Current\";\n  CommissionMode[CommissionMode[\"Upcoming\"] = 2] = \"Upcoming\";\n  return CommissionMode;\n}(CommissionMode || {});\nvar windowDimensions = Dimensions.get('window');\nvar screenDimensions = Dimensions.get('screen');\nexport default function Commissions() {\n  var microsoftAccessToken = useContext(accessTokenContent);\n  var _useMsal = useMsal(),\n    instance = _useMsal.instance,\n    accounts = _useMsal.accounts;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    currentCommissions = _useState2[0],\n    setCurrentCommissions = _useState2[1];\n  var _useState3 = useState({\n      window: windowDimensions,\n      screen: screenDimensions\n    }),\n    _useState4 = _slicedToArray(_useState3, 2),\n    dimensions = _useState4[0],\n    setDimensions = _useState4[1];\n  useEffect(function () {\n    var subscription = Dimensions.addEventListener('change', function (_ref) {\n      var window = _ref.window,\n        screen = _ref.screen;\n      setDimensions({\n        window: window,\n        screen: screen\n      });\n    });\n    return function () {\n      return subscription == null ? void 0 : subscription.remove();\n    };\n  });\n  useEffect(function () {\n    setDimensions({\n      window: Dimensions.get('window'),\n      screen: Dimensions.get('screen')\n    });\n  }, []);\n  function getUsersLocation() {\n    return _getUsersLocation.apply(this, arguments);\n  }\n  function _getUsersLocation() {\n    _getUsersLocation = _asyncToGenerator(function* () {\n      Geolocation.getCurrentPosition(function (info) {\n        return console.log(info);\n      });\n    });\n    return _getUsersLocation.apply(this, arguments);\n  }\n  function getCommissions() {\n    return _getCommissions.apply(this, arguments);\n  }\n  function _getCommissions() {\n    _getCommissions = _asyncToGenerator(function* () {\n      var result = yield callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/15357035-e94e-4664-b6a4-26e641f0f509/items?expand=fields\", instance, accounts);\n      if (result.ok) {\n        var data = yield result.json();\n        console.log(data);\n        if (data[\"value\"] !== null && data[\"value\"] !== undefined) {\n          var resultCommissions = [];\n          for (var index = 0; index < data[\"value\"].length; index++) {\n            resultCommissions.push({\n              title: data[\"value\"][index][\"fields\"][\"Title\"],\n              startDate: new Date(data[\"value\"][index][\"fields\"][\"StartDate\"]),\n              endDate: new Date(data[\"value\"][index][\"fields\"][\"EndDate\"]),\n              points: data[\"value\"][index][\"fields\"][\"Points\"],\n              proximity: data[\"value\"][index][\"fields\"][\"Proximity\"],\n              commissionId: data[\"value\"][index][\"fields\"][\"CommissionID\"],\n              hidden: data[\"value\"][index][\"fields\"][\"Hidden\"]\n            });\n          }\n          setCurrentCommissions(resultCommissions);\n        }\n      }\n    });\n    return _getCommissions.apply(this, arguments);\n  }\n  useEffect(function () {\n    getCommissions();\n  }, []);\n  var _useFonts = useFonts({\n      'BukhariScript': require(\"../../../../assets/fonts/BukhariScript.ttf\")\n    }),\n    _useFonts2 = _slicedToArray(_useFonts, 1),\n    fontsLoaded = _useFonts2[0];\n  var onLayoutRootView = useCallback(_asyncToGenerator(function* () {\n    if (fontsLoaded) {\n      yield SplashScreen.hideAsync();\n    }\n  }), [fontsLoaded]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return _jsxs(View, {\n    children: [dimensions.window.width > 576 ? _jsx(Link, {\n      to: \"/profile/\",\n      children: _jsx(Text, {\n        children: \"Back\"\n      })\n    }) : null, _jsx(Text, {\n      children: \"Commissions\"\n    }), currentCommissions.map(function (item) {\n      return _jsx(Link, {\n        to: \"/commissions/\" + item.commissionId,\n        children: _jsx(View, {\n          children: _jsx(Text, {\n            children: item.title\n          })\n        }, item.commissionId)\n      });\n    })]\n  });\n}","map":{"version":3,"names":["React","useCallback","useContext","useEffect","useState","Dimensions","Text","View","Geolocation","Link","callMsGraph","accessTokenContent","siteID","useFonts","SplashScreen","useMsal","jsx","_jsx","jsxs","_jsxs","CommissionMode","windowDimensions","get","screenDimensions","Commissions","microsoftAccessToken","_useMsal","instance","accounts","_useState","_useState2","_slicedToArray","currentCommissions","setCurrentCommissions","_useState3","window","screen","_useState4","dimensions","setDimensions","subscription","addEventListener","_ref","remove","getUsersLocation","_getUsersLocation","apply","arguments","_asyncToGenerator","getCurrentPosition","info","console","log","getCommissions","_getCommissions","result","accessToken","ok","data","json","undefined","resultCommissions","index","length","push","title","startDate","Date","endDate","points","proximity","commissionId","hidden","_useFonts","require","_useFonts2","fontsLoaded","onLayoutRootView","hideAsync","children","width","to","map","item"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/AuthenticatedView/Commissions/Commissions.tsx"],"sourcesContent":["import React, { useCallback, useContext, useEffect, useState } from 'react'\nimport { Button, Dimensions, Platform, Text, View } from 'react-native'\nimport Geolocation from '@react-native-community/geolocation';\nimport { Link } from 'react-router-native';\nimport callMsGraph from '../../Functions/microsoftAssets';\nimport { accessTokenContent } from '../../../App';\nimport NavBarComponent from '../../UI/NavComponent';\nimport { siteID } from '../../PaulyConfig';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useMsal } from '@azure/msal-react';\n\nenum CommissionMode{\n  Before,\n  Current,\n  Upcoming\n}\n\n\nconst windowDimensions = Dimensions.get('window');\nconst screenDimensions = Dimensions.get('screen');\n\nexport default function Commissions() {\n  const microsoftAccessToken = useContext(accessTokenContent);\n  const { instance, accounts } = useMsal();\n  const [currentCommissions, setCurrentCommissions] = useState<commissionType[]>([])\n  const [dimensions, setDimensions] = useState({\n    window: windowDimensions,\n    screen: screenDimensions,\n  });\n\n  useEffect(() => {\n      const subscription = Dimensions.addEventListener(\n        'change',\n        ({window, screen}) => {\n          setDimensions({window, screen});\n        },\n      );\n      return () => subscription?.remove();\n  });\n  \n  useEffect(() => {\n    setDimensions({\n        window: Dimensions.get('window'),\n        screen: Dimensions.get('screen')\n    })\n  }, [])\n\n  async function getUsersLocation(){\n    Geolocation.getCurrentPosition(info => console.log(info))\n  }\n  async function getCommissions(){\n    const result = await callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/15357035-e94e-4664-b6a4-26e641f0f509/items?expand=fields\", instance, accounts)//TO DO list id\n    if (result.ok) {\n      const data = await result.json()\n      console.log(data)\n      if (data[\"value\"] !== null && data[\"value\"] !== undefined){\n        var resultCommissions: commissionType[] = []\n        for (let index = 0; index < data[\"value\"].length; index++) {\n          resultCommissions.push({\n            title: data[\"value\"][index][\"fields\"][\"Title\"],\n            startDate: new Date(data[\"value\"][index][\"fields\"][\"StartDate\"]),\n            endDate:  new Date(data[\"value\"][index][\"fields\"][\"EndDate\"]),\n            points:  data[\"value\"][index][\"fields\"][\"Points\"] as number,\n            proximity: data[\"value\"][index][\"fields\"][\"Proximity\"] as number,\n            commissionId: data[\"value\"][index][\"fields\"][\"CommissionID\"] as string,\n            hidden: data[\"value\"][index][\"fields\"][\"Hidden\"]\n          })\n        }\n        setCurrentCommissions(resultCommissions)\n      }\n    }\n  }\n  useEffect(() => {\n    getCommissions()\n  }, [])\n\n  const [fontsLoaded] = useFonts({\n    'BukhariScript': require('../../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n  \n  return (\n    <View>\n      { (dimensions.window.width > 576) ?\n        <Link to=\"/profile/\">\n          <Text>Back</Text>\n        </Link>:null\n      }\n      <Text>Commissions</Text>\n      { currentCommissions.map((item: commissionType) => (\n        <Link to={\"/commissions/\" + item.commissionId}>\n          <View key={item.commissionId}>\n            <Text>{item.title}</Text>\n          </View>\n        </Link>\n      ))}\n    </View>\n  )\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}