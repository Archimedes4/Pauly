{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport React, { useEffect, useState } from 'react';\nimport DayView from \"./DayView\";\nimport create_UUID from \"../../Functions/CreateUUID\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Week(_ref) {\n  var width = _ref.width,\n    height = _ref.height;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    daysOfWeek = _useState2[0],\n    setDaysOfWeek = _useState2[1];\n  function getDOW(selectedDate) {\n    var week = [];\n    selectedDate.setDate(selectedDate.getDate() - selectedDate.getDay());\n    for (var i = 0; i < 7; i++) {\n      week.push(new Date(selectedDate));\n      selectedDate.setDate(selectedDate.getDate() + 1);\n    }\n    console.log(\"Week\", week);\n    return week;\n  }\n  useEffect(function () {\n    setDaysOfWeek(getDOW(new Date()));\n  }, []);\n  return _jsxs(View, {\n    children: [_jsx(View, {\n      children: false ? _jsx(View, {}) : _jsxs(View, {\n        children: [_jsx(Pressable, {\n          onTouchMove: function onTouchMove(e) {\n            e.type;\n          }\n        }), _jsx(View, {\n          style: {\n            flexDirection: \"row\",\n            height: width * 0.142857142857143,\n            width: width\n          },\n          children: daysOfWeek.map(function (day) {\n            return _jsx(View, {\n              style: {\n                width: width * 0.1,\n                height: width * 0.1,\n                borderRadius: 50,\n                backgroundColor: \"#444444\",\n                alignContent: \"center\",\n                alignItems: \"center\",\n                justifyContent: \"center\",\n                margin: width * 0.021428571428571,\n                borderColor: \"#793033\",\n                borderWidth: new Date().getDate() === day.getDate() ? 5 : 0\n              },\n              children: _jsx(Text, {\n                children: day.getDate()\n              })\n            }, day.getDay() + \"_\" + create_UUID());\n          })\n        })]\n      })\n    }), _jsx(View, {\n      style: {\n        height: false ? height : height - width * 0.179,\n        width: width,\n        alignContent: \"center\",\n        alignItems: \"center\"\n      },\n      children: _jsx(DayView, {\n        width: width * 0.95,\n        height: false ? height * 0.757 : height\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useEffect","useState","DayView","create_UUID","jsx","_jsx","jsxs","_jsxs","Week","_ref","width","height","_useState","_useState2","_slicedToArray","daysOfWeek","setDaysOfWeek","getDOW","selectedDate","week","setDate","getDate","getDay","i","push","Date","console","log","View","children","Pressable","onTouchMove","e","type","style","flexDirection","map","day","borderRadius","backgroundColor","alignContent","alignItems","justifyContent","margin","borderColor","borderWidth","Text"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/AuthenticatedView/Calendar/Week.tsx"],"sourcesContent":["import { View, Text, Dimensions, Pressable } from 'react-native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { accessTokenContent } from '../../../App';\nimport DayView from './DayView';\nimport create_UUID from '../../Functions/CreateUUID';\n\nexport default function Week({width, height}:{width: number, height: number}) {\n  //const microsoftAccessToken = useContext(accessTokenContent);\n  const [daysOfWeek, setDaysOfWeek] = useState<Date[]>([])\n  function getDOW(selectedDate: Date) {\n    var week: Date[] = []\n    // Starting Monday not Sunday\n    selectedDate.setDate((selectedDate.getDate() - selectedDate.getDay()));\n    for (var i = 0; i < 7; i++) {\n        week.push(\n          new Date(selectedDate)\n        ); \n        selectedDate.setDate(selectedDate.getDate() +1);\n    }\n    console.log(\"Week\", week)\n    return week; \n  }\n  useEffect(() => {setDaysOfWeek(getDOW(new Date))}, [])\n  return (\n    <View>\n      <View>\n      {/* 768 TO DO get dimentiosn value*/}\n      {(false) ?\n        <View>\n            \n        </View>:\n        <View>\n          <Pressable onTouchMove={(e) => {e.type}}></Pressable>\n          <View style={{flexDirection: \"row\", height: width * 0.142857142857143, width: width}}>\n            {daysOfWeek.map((day) => (\n              <View key={day.getDay() + \"_\" + create_UUID()}style={{width: width * 0.1, height: width * 0.1, borderRadius: 50, backgroundColor: \"#444444\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\", margin: width * 0.021428571428571, borderColor: \"#793033\", borderWidth: (new Date().getDate() === day.getDate()) ? 5:0}}>\n                <Text>{day.getDate()}</Text>\n              </View>\n            ))}\n          </View>\n        </View>\n      }\n      </View>\n      <View style={{height: (false) ? height:(height - width * 0.179), width: width, alignContent: \"center\", alignItems: \"center\"}}>\n        <DayView width={width * 0.95} height={(false) ? height * 0.757:height}/>\n      </View>\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}