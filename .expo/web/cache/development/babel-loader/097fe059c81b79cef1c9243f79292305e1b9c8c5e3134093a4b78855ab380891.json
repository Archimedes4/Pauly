{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-native';\nimport callMsGraph from \"../../../../Functions/microsoftAssets\";\nimport { accessTokenContent } from \"../../../../../App\";\nimport { siteID } from \"../../../../PaulyConfig\";\nimport { useMsal } from '@azure/msal-react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GovernmentCommissions() {\n  var microsoftAccessToken = useContext(accessTokenContent);\n  var _useMsal = useMsal(),\n    instance = _useMsal.instance,\n    accounts = _useMsal.accounts;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    commissions = _useState2[0],\n    setCommissions = _useState2[1];\n  function getCommissions() {\n    return _getCommissions.apply(this, arguments);\n  }\n  function _getCommissions() {\n    _getCommissions = _asyncToGenerator(function* () {\n      var result = yield callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/15357035-e94e-4664-b6a4-26e641f0f509/items?expand=fields\", instance, accounts);\n      if (result.ok) {\n        var data = yield result.json();\n        console.log(data);\n        if (data[\"value\"].length !== undefined) {\n          var newCommissions = [];\n          for (var index = 0; index < data[\"value\"].length; index++) {\n            newCommissions.push({\n              title: data[\"value\"][index][\"fields\"][\"Title\"],\n              startDate: new Date(data[\"value\"][index][\"fields\"][\"StartDate\"]),\n              endDate: new Date(data[\"value\"][index][\"fields\"][\"EndDate\"]),\n              points: data[\"value\"][index][\"fields\"][\"Points\"],\n              hidden: data[\"value\"][index][\"fields\"][\"Hidden\"],\n              commissionId: data[\"value\"][index][\"fields\"][\"CommissionID\"],\n              proximity: data[\"value\"][index][\"fields\"][\"Proximity\"],\n              coordinateLat: data[\"value\"][index][\"fields\"][\"CoordinateLat\"],\n              coordinateLng: data[\"value\"][index][\"fields\"][\"CoordinateLng\"]\n            });\n          }\n          console.log(newCommissions);\n          setCommissions(newCommissions);\n        } else {}\n      } else {}\n    });\n    return _getCommissions.apply(this, arguments);\n  }\n  useEffect(function () {\n    getCommissions();\n  }, []);\n  return _jsx(View, {\n    children: _jsxs(View, {\n      children: [_jsx(Link, {\n        to: \"/profile/government\",\n        children: _jsx(Text, {\n          children: \"Back\"\n        })\n      }), _jsx(Text, {\n        children: \"GovernmentCommissions\"\n      }), commissions.map(function (commission) {\n        return _jsx(View, {\n          children: _jsx(Text, {\n            children: commission.title\n          })\n        }, commission.commissionId);\n      }), _jsx(Link, {\n        to: \"/profile/government/commissions/create\",\n        children: _jsx(Text, {\n          children: \"Create New Commission\"\n        })\n      })]\n    })\n  });\n}","map":{"version":3,"names":["React","useContext","useEffect","useState","Link","callMsGraph","accessTokenContent","siteID","useMsal","jsx","_jsx","jsxs","_jsxs","GovernmentCommissions","microsoftAccessToken","_useMsal","instance","accounts","_useState","_useState2","_slicedToArray","commissions","setCommissions","getCommissions","_getCommissions","apply","arguments","_asyncToGenerator","result","accessToken","ok","data","json","console","log","length","undefined","newCommissions","index","push","title","startDate","Date","endDate","points","hidden","commissionId","proximity","coordinateLat","coordinateLng","View","children","to","Text","map","commission"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/AuthenticatedView/Profile/Government/GovernmentCommissions/GovernmentCommissions.tsx"],"sourcesContent":["import { View, Text } from 'react-native'\nimport React, { useContext, useEffect, useState } from 'react'\nimport { Button } from 'react-native'\nimport { Link } from 'react-router-native'\nimport callMsGraph from '../../../../Functions/microsoftAssets'\nimport { accessTokenContent } from '../../../../../App'\nimport { siteID } from '../../../../PaulyConfig'\nimport { useMsal } from '@azure/msal-react'\n\ndeclare global {\n  type commissionType = {\n    title: string\n    startDate: Date\n    endDate: Date\n    points: number\n    hidden: boolean\n    commissionId: string\n    proximity?: number\n    coordinateLat?: number\n    coordinateLng?: number\n  }\n}\n\nexport default function GovernmentCommissions() {\n  const microsoftAccessToken = useContext(accessTokenContent);\n  const { instance, accounts } = useMsal();\n  const [commissions, setCommissions] = useState<commissionType[]>([])\n  async function getCommissions(){\n    const result = await callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/15357035-e94e-4664-b6a4-26e641f0f509/items?expand=fields\", instance, accounts)\n    if (result.ok){\n      const data = await result.json()\n      console.log(data)\n      if (data[\"value\"].length !== undefined){\n        var newCommissions: commissionType[] = []\n        for (let index = 0; index < data[\"value\"].length; index++){\n          newCommissions.push({\n            title: data[\"value\"][index][\"fields\"][\"Title\"],\n            startDate: new Date(data[\"value\"][index][\"fields\"][\"StartDate\"]),\n            endDate: new Date(data[\"value\"][index][\"fields\"][\"EndDate\"]),\n            points: data[\"value\"][index][\"fields\"][\"Points\"],\n            hidden: data[\"value\"][index][\"fields\"][\"Hidden\"],\n            commissionId: data[\"value\"][index][\"fields\"][\"CommissionID\"],\n            proximity: data[\"value\"][index][\"fields\"][\"Proximity\"],\n            coordinateLat: data[\"value\"][index][\"fields\"][\"CoordinateLat\"],\n            coordinateLng: data[\"value\"][index][\"fields\"][\"CoordinateLng\"]\n          })\n        }\n        console.log(newCommissions)\n        setCommissions(newCommissions)\n      } else {\n        //TO DO this shouldn't happen graph broken\n      }\n    } else {\n      //TO Do handle error\n    }\n  }\n  useEffect(() => {getCommissions()}, [])\n  return (\n    <View>\n      <View>\n        <Link to=\"/profile/government\">\n          <Text>Back</Text>\n        </Link>\n        <Text>GovernmentCommissions</Text>\n        {commissions.map((commission) => (\n          <View key={commission.commissionId}>\n            <Text>{commission.title}</Text>\n          </View>\n        ))\n        }\n        <Link to=\"/profile/government/commissions/create\">\n          <Text>Create New Commission</Text>\n        </Link>\n      </View>\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}