{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport React, { useContext, useState } from 'react';\nimport callMsGraph from \"../../../../Functions/microsoftAssets\";\nimport { accessTokenContent } from \"../../../../../App\";\nimport { siteID } from \"../../../../PaulyConfig\";\nimport create_UUID from \"../../../../Functions/CreateUUID\";\nimport { Link } from 'react-router-native';\nimport { useMsal } from '@azure/msal-react';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function GovernmentClassesCreate() {\n  var microsoftAccessToken = useContext(accessTokenContent);\n  var _useMsal = useMsal(),\n    instance = _useMsal.instance,\n    accounts = _useMsal.accounts;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    selectedGrades = _useState2[0],\n    setSelectedGrades = _useState2[1];\n  var _useState3 = useState(\"\"),\n    _useState4 = _slicedToArray(_useState3, 2),\n    newClassName = _useState4[0],\n    setNewClassName = _useState4[1];\n  function createRootClass() {\n    return _createRootClass.apply(this, arguments);\n  }\n  function _createRootClass() {\n    _createRootClass = _asyncToGenerator(function* () {\n      var newClassId = create_UUID();\n      var data = {\n        \"fields\": {\n          \"Title\": newClassId,\n          \"classId\": newClassId,\n          \"className\": newClassName,\n          \"gradeData\": selectedGrades.toString()\n        }\n      };\n      var result = yield callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/800202d8-1f51-4df4-ac39-08da7357ca89/items\", instance, accounts, \"POST\", false, JSON.stringify(data));\n      if (result.ok) {\n        console.log(\"All Good\");\n      } else {}\n    });\n    return _createRootClass.apply(this, arguments);\n  }\n  function setOnGrades(grade) {\n    if (selectedGrades.includes(grade)) {\n      var newGradesValue = selectedGrades;\n      newGradesValue = newGradesValue.filter(function (e) {\n        return e !== grade;\n      });\n      setSelectedGrades(_toConsumableArray(newGradesValue));\n    } else {\n      setSelectedGrades([].concat(_toConsumableArray(selectedGrades), [grade]));\n    }\n  }\n  return _jsxs(View, {\n    children: [_jsx(Link, {\n      to: \"/profile/government/classes\",\n      children: _jsx(Text, {\n        children: \"Back\"\n      })\n    }), _jsx(Text, {\n      children: \"Government Classes Create\"\n    }), _jsxs(View, {\n      style: {\n        flexDirection: \"row\"\n      },\n      children: [_jsx(Text, {\n        children: \"Class Name\"\n      }), _jsx(TextInput, {\n        value: newClassName,\n        onChangeText: function onChangeText(e) {\n          setNewClassName(e);\n        }\n      })]\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        setOnGrades(9);\n      },\n      children: _jsx(Text, {\n        style: {\n          color: selectedGrades.includes(9) ? \"red\" : \"black\"\n        },\n        children: \"Grade 9\"\n      })\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        setOnGrades(10);\n      },\n      children: _jsx(Text, {\n        style: {\n          color: selectedGrades.includes(10) ? \"red\" : \"black\"\n        },\n        children: \"Grade 10\"\n      })\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        setOnGrades(11);\n      },\n      children: _jsx(Text, {\n        style: {\n          color: selectedGrades.includes(11) ? \"red\" : \"black\"\n        },\n        children: \"Grade 11\"\n      })\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        setOnGrades(12);\n      },\n      children: _jsx(Text, {\n        style: {\n          color: selectedGrades.includes(12) ? \"red\" : \"black\"\n        },\n        children: \"Grade 12\"\n      })\n    }), _jsx(Pressable, {\n      onPress: function onPress() {\n        createRootClass();\n      },\n      children: _jsx(Text, {\n        children: \"Create Class\"\n      })\n    })]\n  });\n}","map":{"version":3,"names":["React","useContext","useState","callMsGraph","accessTokenContent","siteID","create_UUID","Link","useMsal","jsx","_jsx","jsxs","_jsxs","GovernmentClassesCreate","microsoftAccessToken","_useMsal","instance","accounts","_useState","_useState2","_slicedToArray","selectedGrades","setSelectedGrades","_useState3","_useState4","newClassName","setNewClassName","createRootClass","_createRootClass","apply","arguments","_asyncToGenerator","newClassId","data","toString","result","accessToken","JSON","stringify","ok","console","log","setOnGrades","grade","includes","newGradesValue","filter","e","_toConsumableArray","concat","View","children","to","Text","style","flexDirection","TextInput","value","onChangeText","Pressable","onPress","color"],"sources":["/Users/andrewmainella/Desktop/Pauly/src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClassesCreateRoot.tsx"],"sourcesContent":["import { View, Text, Pressable, TextInput } from 'react-native'\nimport React, { useContext, useState } from 'react'\nimport callMsGraph from '../../../../Functions/microsoftAssets'\nimport { accessTokenContent } from '../../../../../App';\nimport { siteID } from '../../../../PaulyConfig';\nimport create_UUID from '../../../../Functions/CreateUUID';\nimport { Link } from 'react-router-native';\nimport { useMsal } from '@azure/msal-react';\n\nexport default function GovernmentClassesCreate() {\n  const microsoftAccessToken = useContext(accessTokenContent);\n  const { instance, accounts } = useMsal();\n  const [selectedGrades, setSelectedGrades] = useState<number[]>([])\n  const [newClassName, setNewClassName] = useState<string>(\"\")\n  async function createRootClass() {\n    const newClassId = create_UUID()\n    const data = {\n      \"fields\": {\n        \"Title\": newClassId,\n        \"classId\": newClassId,\n        \"className\":newClassName,\n        \"gradeData\":selectedGrades.toString()\n      }\n    }\n    const result = await callMsGraph(microsoftAccessToken.accessToken, \"https://graph.microsoft.com/v1.0/sites/\" + siteID + \"/lists/800202d8-1f51-4df4-ac39-08da7357ca89/items\", instance, accounts, \"POST\", false, JSON.stringify(data))\n    if (result.ok){\n      //TO DO add success notifiation\n      console.log(\"All Good\")\n    } else {\n      //TO DO add error notification\n    }\n  }\n  function setOnGrades(grade: 9 | 10 | 11 | 12) {\n    if (selectedGrades.includes(grade)) {\n      var newGradesValue = selectedGrades\n      newGradesValue = newGradesValue.filter((e) => {return e !== grade})\n      setSelectedGrades([...newGradesValue])\n    } else {\n      setSelectedGrades([...selectedGrades, grade])\n    }\n  }\n  return (\n    <View>\n      <Link to=\"/profile/government/classes\">\n        <Text>Back</Text>\n      </Link>\n        <Text>Government Classes Create</Text>\n        <View style={{flexDirection: \"row\"}}>\n          <Text>Class Name</Text>\n          <TextInput value={newClassName} onChangeText={(e) => {setNewClassName(e)}} />\n        </View>\n        <Pressable onPress={() => {setOnGrades(9)}}>\n          <Text style={{color: (selectedGrades.includes(9)) ? \"red\":\"black\"}}>Grade 9</Text>\n        </Pressable>\n        <Pressable onPress={() => {setOnGrades(10)}}>\n          <Text style={{color: (selectedGrades.includes(10)) ? \"red\":\"black\"}}>Grade 10</Text>\n        </Pressable>\n        <Pressable onPress={() => {setOnGrades(11)}}>\n          <Text style={{color: (selectedGrades.includes(11)) ? \"red\":\"black\"}}>Grade 11</Text>\n        </Pressable>\n        <Pressable onPress={() => {setOnGrades(12)}}>\n          <Text style={{color: (selectedGrades.includes(12)) ? \"red\":\"black\"}}>Grade 12</Text>\n        </Pressable>\n        <Pressable onPress={() => {createRootClass()}}>\n          <Text>Create Class</Text>\n        </Pressable>\n    </View>\n  )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}