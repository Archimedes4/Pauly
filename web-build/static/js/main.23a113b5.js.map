{"version":3,"file":"static/js/main.23a113b5.js","mappings":"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","sources":["src/Redux/reducers/monthDataReducer.ts","src/Redux/reducers/resourcesLastCallReducer.ts","src/types.ts","src/Redux/reducers/safeAreaColorsReducer.ts","src/Redux/reducers/microsoftProfileDataReducer.ts","src/Redux/reducers/currentEventReducer.ts","src/Redux/reducers/currentEventLastCalledReducer.ts","src/Redux/reducers/selectedDateReducer.ts","src/Redux/reducers/paulyListReducer.ts","src/Redux/reducers/authenticationTokenReducer.ts","src/Redux/reducers/authenticationRefreshTokenReducer.ts","src/Redux/reducers/dimentionsReducer.ts","src/Redux/reducers/authenticationApiToken.ts","src/Redux/reducers/tasksReducers.ts","src/Redux/reducers/paulyDataReducer.ts","src/Redux/reducers/resourcesReducer.ts","src/Redux/reducers/addEventReducer.ts","src/Redux/reducers/homepageDataReducer.ts","src/Redux/reducers/expandedModeReducer.ts","src/Redux/reducers/isShowingProfileBlockReducer.ts","src/Redux/reducers/isGovernmentModeReducer.ts","src/Redux/reducers/commissionsReducer.ts","src/Redux/reducers/pdfDataReducer.ts","src/Redux/reducers/monthViewReducer.ts","src/Redux/reducers/authenticationCallReducer.ts","src/Redux/reducers/studentSearchReducer.ts","src/Redux/store.ts","src/UI/Icons/Icons.tsx","src/UI/ProgressView.tsx","src/login.tsx","src/Functions/calendar/calendarFunctions.ts","src/PaulyConfig.ts","src/Functions/ultility/microsoftAssets.ts","src/Functions/ultility/batchRequest.ts","src/Functions/ultility/createUUID.ts","src/Functions/homepage/getDressCode.ts","src/Functions/calendar/calendarFunctionsGraph.ts","src/AuthenticatedView/MonthView.tsx","src/Functions/homepage/getCurrentPaulyData.ts","src/UI/ScrollingTextAnimation.tsx","src/AuthenticatedView/HomePage.tsx","src/Functions/commissions/getLocation.ts","src/Functions/commissions/claimCommissionsFunctions.ts","src/AuthenticatedView/Commissions/CommissionClaim.web.tsx","src/Functions/commissions/getCommission.ts","src/UI/WebViewCross.tsx","src/AuthenticatedView/Commissions/CommissionsView.tsx","src/Functions/commissions/getPoints.ts","src/Functions/commissions/getCommissions.ts","src/UI/BackButton.tsx","src/AuthenticatedView/Commissions/Commissions.tsx","src/Functions/homepage/getUsersTasks.ts","src/Functions/homepage/getInsightData.ts","src/UI/CheckMark/AnimatedCheckMarkPath.tsx","src/UI/CheckMark/CustomCheckBox.tsx","src/UI/PDF/PDFView.web.tsx","src/UI/Icons/MimeTypeIcon.tsx","src/Functions/classesFunctions.ts","src/AuthenticatedView/Notifications.tsx","src/Functions/getResources.ts","src/AuthenticatedView/ResourcesNews.tsx","src/AuthenticatedView/Resources.tsx","src/AuthenticatedView/Profile/Settings.tsx","src/AuthenticatedView/Profile/Government/Government.tsx","src/UI/Pickers/Picker.tsx","src/Functions/microsoftGroupsFunctions.ts","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphOverview.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphCreateList.tsx","src/Functions/commissions/getSubmissions.ts","src/AuthenticatedView/Profile/Government/GovernmentCommissions/GovernmentCommissions.tsx","src/UI/Pickers/SegmentedPicker.tsx","src/UI/Map/Map.web.tsx","src/UI/Slider.tsx","src/Functions/ultility/getFileWithShareID.ts","src/Functions/commissions/updateCommission.ts","src/AuthenticatedView/Profile/Government/GovernmentCommissions/GovernmentEditCommission.tsx","src/Functions/sports/sportsFunctions.ts","src/UI/SVGXml/SVGXml.web.tsx","src/UI/youtubeIframeFunction.jsx","src/UI/SportsYoutube.tsx","src/AuthenticatedView/Sports.tsx","src/AuthenticatedView/Calendar/DayView.tsx","src/AuthenticatedView/Calendar/Week.tsx","src/AuthenticatedView/Calendar/SelectTimetable.tsx","src/AuthenticatedView/Calendar/SelectSchoolDayData.tsx","src/Functions/updateEvent.ts","src/AuthenticatedView/Calendar/AddEvent.tsx","src/UI/CalendarTypePicker.tsx","src/Functions/calendar/getEvents.ts","src/AuthenticatedView/Calendar/Calendar.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentHandleFileSubmissions.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSports.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentCreateNewSport.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportsTeams.tsx","src/Functions/microsoftFilePickerFunctions.ts","src/UI/MicrosoftFilePicker.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportTeamEdit.tsx","src/Functions/youtubeFunctions.ts","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportsTeamAddPost.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentReviewFileSubmission.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentCalendar.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentSchedule.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetable.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentScheduleEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClasses.tsx","src/Functions/calendar/getSchoolYears.ts","src/UI/Dropdown.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClassesEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentHomePage.tsx","src/UI/NavComponent.tsx","src/AuthenticatedView/404Page.tsx","src/Functions/initializePauly/initializePaulyData.ts","src/Functions/initializePauly/initializePauly.ts","src/AuthenticatedView/Profile/Government/GovernmentAdminCenter/GovernmentAdmin.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentRooms.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovermentRoomsCreate.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditList.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditGroup.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditExtension.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentResourcesPost/TextEditorHeader.tsx","src/AuthenticatedView/Profile/Government/GovernmentResourcesPost/GovernmentResourcesPost.web.tsx","src/AuthenticatedView/Profile/Government/GovernmentResources.tsx","src/UI/ListItem.tsx","src/Functions/homepage/getDressCodeData.ts","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCode.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/DressCodeBlock.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetableEdit.tsx","src/AuthenticatedView/Profile/ProfileBlock.tsx","src/Functions/studentFunctions.ts","src/AuthenticatedView/Students.tsx","src/Functions/addImage.ts","src/AuthenticatedView/Profile/Government/GovernmentStudents.tsx","src/AuthenticatedView/LoadingScreen.tsx","src/AuthenticatedView/AuthenticatedViewMain.tsx","src/Functions/ultility/getPaulyLists.ts","src/Functions/ultility/getUserProfile.ts","src/Functions/handleGovernmentLogin.ts","AppMain/AppMain.web.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: monthDataType[] = [];\n\nexport const monthDataSlice = createSlice({\n  name: 'monthData',\n  initialState: initalState,\n  reducers: {\n    setMonthData: (_state, action: PayloadAction<monthDataType[]>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default monthDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const resourcesLastCalled = createSlice({\n  name: 'resourcesLastCalled',\n  initialState: initalState,\n  reducers: {\n    setResourcesLastCalled: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default resourcesLastCalled.reducer;\n","// Andrew Mainella\n// Pauly\n// October 3 2023\n\n// types.ts\n// Stores all of paulys types\n\n// From https://getbootstrap.com/docs/5.0/layout/breakpoints/\nexport enum breakPointMode {\n  xSmall, // <576px  ->0\n  small, // ≥576px  ->1\n  medium, // ≥768px  ->2\n  large, // ≥992px  ->3\n  xLarge, // ≥1200px ->4\n}\n\nexport enum loadingStateEnum {\n  loading,\n  success,\n  failed,\n  notStarted,\n  cannotStart,\n  offline,\n}\n\nexport enum postType {\n  microsoftFile,\n  youtubeVideo,\n}\n\nexport enum dataContentTypeOptions {\n  video,\n  image,\n  pdf,\n  unknown,\n}\n\nexport enum taskImportanceEnum {\n  low,\n  normal,\n  high,\n}\n\nexport enum taskStatusEnum {\n  notStarted,\n  inProgress,\n  completed,\n  waitingOnOthers,\n  deferred,\n}\nexport enum resourceResponce {\n  found,\n  notFound,\n  failed,\n}\nexport enum commissionTypeEnum {\n  Issued,\n  Location,\n  Image,\n  ImageLocation,\n  QRCode,\n}\nexport enum paulyEventType {\n  personal,\n  regular,\n  schoolDay,\n  schoolYear,\n  studentCouncil,\n}\n\nexport enum recurringType {\n  daily,\n  weekly,\n  monthly,\n  yearly,\n}\n\nexport enum semesters {\n  semesterOne,\n  semesterTwo,\n}\n\nexport enum submissionTypeEnum {\n  all,\n  unApproved,\n  approved,\n  unReviewed,\n}\n\nexport enum locationStateEnum {\n  success,\n  permissionDenied,\n  notCloseEnough,\n  mockedLocation,\n  notStarted,\n}\n\nexport enum calendarMode {\n  month,\n  week,\n  day,\n}\n\nexport enum resourceMode {\n  home,\n  sports,\n  advancement,\n  schoolEvents,\n  annoucments,\n  fitness,\n  files,\n  news,\n  scholarships,\n}\n\ndeclare global {\n  type addDataType = {\n    data: object;\n    urlOne: string;\n    urlTwo?: string;\n    id: string;\n  };\n  type assignmentTypeQuiz = {\n    id: string;\n    title: string;\n    description: string;\n    assignmentEnum: number;\n    documentRef: string;\n    assignmentDuringClass: boolean;\n    selectedMonth?: number;\n    selectedDay?: number;\n    dueDate?: Date;\n  };\n  type batchResponseType = {\n    method: 'GET' | 'POST';\n    id: string;\n    status: number;\n    headers: object | undefined;\n    body: any | undefined;\n  };\n  type calendarCourseType = {\n    name: string;\n    semester: number;\n    dayA: number;\n    dayB: number;\n    dayC: number;\n    dayD: number;\n    noClass: noClassType[];\n    year: number;\n    assignments: assignmentTypeQuiz[];\n  };\n  type channelType = {\n    id: string;\n    displayName: string;\n    selected: boolean;\n    loading: boolean;\n    error: boolean;\n    description?: string;\n  };\n  type classType = {\n    name: string;\n    id: string;\n    room: roomType;\n    schoolYearId: string;\n    semester: semesters;\n    periods: number[];\n  };\n  type commissionType = {\n    itemId: string;\n    title: string;\n    timed: boolean;\n    points: number;\n    hidden: boolean;\n    maxNumberOfClaims: number;\n    allowMultipleSubmissions: boolean;\n    submissionsCount: number;\n    claimCount: number;\n    reviewedCount: number;\n    commissionId: string;\n    value: commissionTypeEnum;\n    startDate?: string;\n    endDate?: string;\n    proximity?: number;\n    coordinateLat?: number;\n    coordinateLng?: number;\n    postData?: {\n      teamId: string;\n      channelId: string;\n      postId: string;\n    };\n  };\n  type dressCodeIncentiveType = {\n    name: string;\n    description: string;\n    requirementsDescription: string;\n    id: string;\n  };\n  type dressCodeDataType = {\n    name: string;\n    description: string;\n    id: string;\n  };\n  type dressCodeType = {\n    name: string;\n    id: string;\n    listId: string;\n    dressCodeData: dressCodeDataType[];\n    dressCodeIncentives: dressCodeIncentiveType[];\n  };\n  type dateProperty = {\n    Date: number;\n    ColorName?: string;\n    SchoolDay?: string;\n    Value?: number;\n  };\n  type groupType = {\n    name: string;\n    id: string;\n  };\n  type governmentRosterType = {\n    name: string;\n    id: string;\n    imageShareId?: string;\n    listItemId?: string;\n    position?: string;\n    playerNumber?: string;\n    posts?: string[];\n  };\n  type headerType = {\n    key: string;\n    value: string;\n  };\n  type locationCoords = {\n    latCoordinate: number;\n    lngCoordinate: number;\n  };\n  type monthDataType = {\n    id: string;\n    showing: boolean;\n    dayData: number;\n    events: eventType[];\n  };\n  type microsoftUserType = {\n    id: string;\n    displayName: string;\n  };\n  type resourceDataType = {\n    teamId: string;\n    conversationId: string;\n    id: string; // message id\n    body: string;\n    html: boolean; // if false is text\n    attachments?: attachment[];\n  };\n  type resourceFollowType = {\n    teamId: string;\n    channelId: string;\n  };\n  type roomType = {\n    name: string;\n    id: string;\n  };\n  type rosterType = {\n    name: string;\n    id: string;\n    imageShareId?: string;\n    position?: string;\n    playerNumber?: string;\n    posts?: string[];\n  };\n  type scholarship = {\n    title: string;\n    note: string;\n    link: string;\n    cover: string;\n  };\n  type schoolDayDataCompressedType = {\n    schoolDayId: string;\n    scheduleId: string;\n    dressCodeId: string;\n    semester: semesters;\n    dressCodeIncentiveId: string;\n    schoolYearEventId: string;\n  };\n  type schoolDayDataType = {\n    schoolDay: schoolDayType;\n    schedule: scheduleType;\n    dressCode: dressCodeDataType;\n    semester: semesters;\n    dressCodeIncentive?: dressCodeIncentiveType;\n  };\n  type schoolDayType = {\n    name: string;\n    shorthand: string;\n    id: string;\n    order: number;\n  };\n  type submissionType = {\n    userName: string;\n    submissionTime: string;\n    id: string;\n    itemId: string;\n    approved: boolean;\n    reviewed: boolean;\n    submissionImage?: string;\n  };\n  type studentInformationType = {\n    listId: string;\n    driveId: string;\n    selected: boolean;\n    createdTime: string;\n  };\n  type sportType = {\n    name: string;\n    id: string;\n    svgData: string;\n  };\n  type sportTeamType = {\n    teamName: string;\n    season: number;\n    teamId: string;\n  };\n  type schoolUserType = {\n    name: string;\n    id: string;\n    mail: string;\n    role: string;\n    grade?: '9' | '10' | '11' | '12';\n    student: boolean;\n    imageDownloadUrl: string;\n    imageState: loadingStateEnum;\n    imageDataUrl?: string;\n  };\n  type taskType = {\n    name: string;\n    id: string;\n    importance: taskImportanceEnum;\n    status: taskStatusEnum;\n    excess: boolean;\n  };\n  type paulyEventTypes = 'schoolDay' | 'schoolYear';\n  type eventType = {\n    id: string;\n    name: string;\n    startTime: string;\n    endTime: string; // This is held in iso format\n    eventColor: string; // This is held in iso format\n    microsoftEvent: boolean;\n    allDay: boolean;\n    paulyEventType?: paulyEventTypes;\n    paulyEventData?: string;\n    microsoftReference?: string;\n    schoolDayData?: {\n      schoolDayData: schoolDayType;\n      schedule: scheduleType;\n      dressCode: dressCodeDataType;\n      semester: semesters;\n      dressCodeIncentiveId?: string;\n    };\n  };\n  type newsPost = {\n    title: string;\n    excerpt: string;\n    content: string;\n    id: number;\n  };\n  type noClassType = {\n    day: number;\n    Month: number;\n    Year: number;\n  };\n  type scheduleType = {\n    properName: string;\n    descriptiveName: string;\n    periods: periodType[];\n    id: string;\n    color: string;\n  };\n  type periodType = {\n    startHour: number;\n    startMinute: number;\n    endHour: number;\n    endMinute: number;\n    id: string;\n  };\n  type teamsGroupType = {\n    teamName: string;\n    teamId: string;\n    teamDescription: string;\n  };\n  type timetableStringType = {\n    name: string;\n    id: string;\n  };\n  type timetableType = {\n    name: string;\n    id: string;\n    schedules: scheduleType[];\n    days: schoolDayType[];\n    dressCode: dressCodeType;\n  };\n  type microsoftFileType = {\n    name: string;\n    id: string;\n    lastModified: string;\n    folder: boolean;\n    parentDriveId: string;\n    parentPath: string;\n    itemGraphPath: string;\n    callPath: string;\n    type: string;\n  };\n  type paulyDataType = {\n    message: string;\n    animationSpeed: number;\n    powerpointBlob: string;\n    powerpointShare: string;\n    paulyDataState: loadingStateEnum;\n  };\n  type paulyListType = {\n    siteId: string;\n    studentFilesListId: string;\n    commissionListId: string;\n    commissionSubmissionsListId: string;\n    paulyDataListId: string;\n    scheduleListId: string;\n    sportsListId: string;\n    sportsApprovedSubmissionsListId: string;\n    sportsSubmissionsListId: string;\n    timetablesListId: string;\n    resourceListId: string;\n    dressCodeListId: string;\n    roomListId: string;\n    eventTypeExtensionId: string;\n    eventDataExtensionId: string;\n    classExtensionId: string;\n    resourceExtensionId: string;\n  };\n  type sportPost = {\n    caption: string;\n    data:\n      | {\n          fileId: string;\n          postType: postType.microsoftFile;\n          fileType: dataContentTypeOptions;\n        }\n      | {\n          fileId: string;\n          postType: postType.youtubeVideo;\n        };\n  };\n  type attachment = {\n    webUrl: string;\n    id: string;\n    title: string;\n    type: string;\n  };\n  type insightResult = {\n    userState: loadingStateEnum;\n    trendingState: loadingStateEnum;\n    userData: attachment[];\n    trendingData: attachment[];\n  };\n  type listColumnType = {\n    columnGroup: string;\n    description: string;\n    displayName: string;\n    enforceUniqueValues: boolean;\n    hidden: boolean;\n    id: string;\n    indexed: boolean;\n    name: string;\n    readOnly: boolean;\n    required: boolean;\n  };\n  type mediaSubmissionType = {\n    Title: string;\n    user: string;\n    submissionId: string;\n    accepted: boolean;\n    reviewed: boolean;\n    selectedSportId: string;\n    selectedTeamId: string;\n    fileId: string;\n    fileType: postType;\n    itemID: string;\n  };\n  type youtubeVideoType = {\n    thumbnail: string;\n    title: string;\n    videoId: string;\n  };\n}\n\nexport class Colors {\n  static white = '#ffffff';\n\n  static maroon = '#793033';\n\n  static lightGray = '#ededed';\n\n  static darkGray = '#444444';\n\n  static black = '#000000';\n\n  static danger = 'red';\n}\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Colors } from '../../types';\n\nconst initalState: { top: string; bottom: string } = {\n  top: Colors.maroon,\n  bottom: Colors.maroon,\n};\n\nexport const safeAreaColorsSlice = createSlice({\n  name: 'safeAreaColors',\n  initialState: initalState,\n  reducers: {\n    setSafeAreaColors: (\n      state,\n      action: PayloadAction<{ top: string; bottom: string }>,\n    ) => {\n      if (state !== action.payload) {\n        return action.payload;\n      }\n      return state;\n    },\n    setSafeAreaColorTop: (state, action: PayloadAction<string>) => {\n      return { ...state, top: action.payload };\n    },\n    setSafeAreaColorBottom: (state, action: PayloadAction<string>) => {\n      return { ...state, bottom: action.payload };\n    },\n  },\n});\n\nexport default safeAreaColorsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: { uri: string; displayName: string; id: string } = {\n  uri: '',\n  displayName: '',\n  id: '',\n};\n\nexport const microsoftProfileDataSlice = createSlice({\n  name: 'microsoftProfileData',\n  initialState: initalState,\n  reducers: {\n    setMicrosoftProfileData: (\n      _state,\n      action: PayloadAction<{ uri: string; displayName: string; id: string }>,\n    ) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default microsoftProfileDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalCalendarState: eventType[] = [];\n\nexport const currentEventsSlice = createSlice({\n  name: 'currentEvents',\n  initialState: initalCalendarState,\n  reducers: {\n    setCurrentEvents: (_state, action: PayloadAction<eventType[]>) => {\n      return [...action.payload];\n    },\n    pushEvent: (state, action: PayloadAction<eventType>) => {\n      return [...state, action.payload];\n    },\n    removeCurrentEvent: (state, action: PayloadAction<number>) => {\n      state.slice(action.payload, 1);\n    },\n  },\n});\n\nexport default currentEventsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const currentEventsLastCalled = createSlice({\n  name: 'currentEventsLastCalled',\n  initialState: initalState,\n  reducers: {\n    setCurrentEventsLastCalled: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default currentEventsLastCalled.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = new Date().toISOString();\n\nexport const selectedDateSlice = createSlice({\n  name: 'selectedDate',\n  initialState: initalState,\n  reducers: {\n    setSelectedDate: (_state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default selectedDateSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: paulyListType = {\n  siteId: '',\n  studentFilesListId: '',\n  commissionListId: '',\n  commissionSubmissionsListId: '',\n  paulyDataListId: '',\n  scheduleListId: '',\n  sportsListId: '',\n  sportsApprovedSubmissionsListId: '',\n  sportsSubmissionsListId: '',\n  timetablesListId: '',\n  resourceListId: '',\n  eventTypeExtensionId: '',\n  eventDataExtensionId: '',\n  classExtensionId: '',\n  resourceExtensionId: '',\n  dressCodeListId: '',\n  roomListId: '',\n};\n\nexport const paulyListSlice = createSlice({\n  name: 'paulyList',\n  initialState: initalState,\n  reducers: {\n    setPaulyList: (_state, action: PayloadAction<paulyListType>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default paulyListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationTokenSlice = createSlice({\n  name: 'authenticationToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationToken: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationTokenSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationRefreshTokenSlice = createSlice({\n  name: 'authenticationRefreshToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationRefreshToken: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationRefreshTokenSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\n// xSmall,\t <576px  ->0\n// small,    ≥576px  ->1\n// medium,   ≥768px  ->2\n// large,    ≥992px  ->3\n// xLarge    ≥1200px ->4\n\nconst initalState: {\n  width: number;\n  height: number;\n  currentBreakPoint: number;\n} = { width: 0, height: 0, currentBreakPoint: 0 };\n\nexport const dimentionsSlice = createSlice({\n  name: 'dimentions',\n  initialState: initalState,\n  reducers: {\n    setDimentionsWidth: (state, action: PayloadAction<number>) => {\n      return {\n        width: action.payload,\n        height: state.height,\n        currentBreakPoint: state.currentBreakPoint,\n      };\n    },\n    setDimentionsWidthCurrentBreakPoint: (\n      state,\n      action: PayloadAction<{ width: number; currentBreakPoint: number }>,\n    ) => {\n      return {\n        width: action.payload.width,\n        height: state.height,\n        currentBreakPoint: action.payload.currentBreakPoint,\n      };\n    },\n    setDimentionsHeight: (state, action: PayloadAction<number>) => {\n      return {\n        width: state.width,\n        height: action.payload,\n        currentBreakPoint: state.currentBreakPoint,\n      };\n    },\n  },\n});\n\nexport default dimentionsSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationApiTokenSlice = createSlice({\n  name: 'authenticationApiToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationApiToken: (_state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationApiTokenSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalStateTaskDeltaLink: string = '';\n\nexport const taskDeltaSlice = createSlice({\n  name: 'taskDeltaLink',\n  initialState: initalStateTaskDeltaLink,\n  reducers: {\n    setTaskDeltaLink: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport const tasksDeltaReducer = taskDeltaSlice.reducer;\n\nconst initalTasksState: string[] = [];\n\nexport const tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: initalTasksState,\n  reducers: {\n    setCurrentEvents: (state, action: PayloadAction<string[]>) => {\n      return [...action.payload];\n    },\n    pushEvent: (state, action: PayloadAction<string>) => {\n      return [...state, action.payload];\n    },\n  },\n});\n\nexport const tasksReducer = tasksSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\nconst initalState: paulyDataType = {\n  message: '',\n  animationSpeed: 0,\n  powerpointBlob: '',\n  powerpointShare: '',\n  paulyDataState: loadingStateEnum.loading,\n};\n\nexport const paulyDataSlice = createSlice({\n  name: 'paulyData',\n  initialState: initalState,\n  reducers: {\n    setPaulyData: (_state, action: PayloadAction<paulyDataType>) => {\n      return action.payload;\n    },\n    setPaulyDataState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, paulyDataState: action.payload };\n    },\n  },\n});\n\nexport default paulyDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum, resourceMode } from '../../types';\n\ntype resourceStoreState = {\n  resources: resourceDataType[];\n  loadingState: loadingStateEnum;\n  searchValue: string;\n  resourceFollow: resourceFollowType[];\n  selectedResourceMode: resourceMode;\n};\n\nconst initalResourcesState: resourceStoreState = {\n  resources: [],\n  loadingState: loadingStateEnum.loading,\n  searchValue: '',\n  resourceFollow: [],\n  selectedResourceMode: resourceMode.home,\n};\n\nexport const resourcesSlice = createSlice({\n  name: 'resources',\n  initialState: initalResourcesState,\n  reducers: {\n    setResourceData: (state, action: PayloadAction<resourceDataType[]>) => {\n      return { ...state, resources: action.payload };\n    },\n    pushResource: (state, action: PayloadAction<resourceDataType>) => {\n      state.resources.push(action.payload);\n    },\n    setResources: (\n      state,\n      action: PayloadAction<{\n        resources: resourceDataType[];\n        loadingState: loadingStateEnum;\n      }>,\n    ) => {\n      return {\n        ...state,\n        loadingState: action.payload.loadingState,\n        resources: action.payload.resources,\n      };\n    },\n    setResourcesState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, loadingState: action.payload };\n    },\n    setSearchValue: (state, action: PayloadAction<string>) => {\n      return { ...state, searchValue: action.payload };\n    },\n    setResourceFollow: (state, action: PayloadAction<resourceFollowType[]>) => {\n      return { ...state, resourceFollow: action.payload };\n    },\n    setSelectedResourceMode: (state, action: PayloadAction<resourceMode>) => {\n      return { ...state, selectedResourceMode: action.payload };\n    },\n  },\n});\n\nexport default resourcesSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport {\n  calendarMode,\n  paulyEventType,\n  recurringType,\n  loadingStateEnum,\n} from '../../types';\n\ntype addEventStatesType = {\n  eventName: string;\n  createEventState: loadingStateEnum;\n  isPickingStartDate: boolean;\n  isPickingEndDate: boolean;\n  allDay: boolean;\n  isGovernmentEvent: boolean;\n  selectedTimetable: timetableStringType;\n  selectedSchoolDayData: schoolDayDataType | undefined;\n  selectedSchoolYear: eventType | undefined;\n  selectedEventType: paulyEventType;\n  recurringEvent: boolean;\n  selectedRecurringType: recurringType;\n  startDate: string;\n  endDate: string;\n  isShowingAddDate: boolean;\n  isEditing: boolean;\n  selectedCalendarMode: calendarMode;\n  selectedEvent: eventType | undefined;\n};\n\nconst initalState: addEventStatesType = {\n  eventName: '',\n  createEventState: loadingStateEnum.notStarted,\n  isPickingStartDate: false,\n  isPickingEndDate: false,\n  allDay: false,\n  isGovernmentEvent: false,\n  selectedTimetable: {\n    name: '',\n    id: '',\n  },\n  selectedSchoolDayData: undefined,\n  selectedSchoolYear: undefined,\n  selectedEventType: paulyEventType.personal,\n  recurringEvent: false,\n  selectedRecurringType: recurringType.daily,\n  startDate: new Date().toISOString(),\n  endDate: new Date().toISOString(),\n  isShowingAddDate: false,\n  isEditing: false,\n  selectedCalendarMode: calendarMode.month,\n  selectedEvent: undefined,\n};\n\nexport const addEventSlice = createSlice({\n  name: 'addEvent',\n  initialState: initalState,\n  reducers: {\n    setEventName: (state, action: PayloadAction<string>) => {\n      return { ...state, eventName: action.payload };\n    },\n    setCreateEventState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, createEventState: action.payload };\n    },\n    setIsPickingStartDate: (state, action: PayloadAction<boolean>) => {\n      state.isPickingStartDate = action.payload;\n    },\n    setIsPickingEndDate: (state, action: PayloadAction<boolean>) => {\n      state.isPickingEndDate = action.payload;\n    },\n    setAllDay: (state, action: PayloadAction<boolean>) => {\n      return { ...state, allDay: action.payload };\n    },\n    setIsGovernmentEvent: (state, action: PayloadAction<boolean>) => {\n      return { ...state, isGovernmentEvent: action.payload };\n    },\n    setSelectedTimetable: (\n      state,\n      action: PayloadAction<timetableStringType>,\n    ) => {\n      return { ...state, selectedTimetable: action.payload };\n    },\n    setSelectedSchoolDayData: (\n      state,\n      action: PayloadAction<schoolDayDataType | undefined>,\n    ) => {\n      return { ...state, selectedSchoolDayData: action.payload };\n    },\n    setSelectedSchoolYear: (state, action: PayloadAction<eventType>) => {\n      return { ...state, selectedSchoolYear: action.payload };\n    },\n    setSelectedEventType: (state, action: PayloadAction<number>) => {\n      return { ...state, selectedEventType: action.payload };\n    },\n    setRecurringEvent: (state, action: PayloadAction<boolean>) => {\n      return { ...state, recurringEvent: action.payload };\n    },\n    setSelectedRecurringType: (state, action: PayloadAction<recurringType>) => {\n      return { ...state, selectedRecurringType: action.payload };\n    },\n    setStartDate: (state, action: PayloadAction<string | Date>) => {\n      if (typeof action.payload === 'string') {\n        return { ...state, startDate: action.payload };\n      }\n      return { ...state, startDate: action.payload.toISOString() };\n    },\n    setEndDate: (state, action: PayloadAction<string | Date>) => {\n      if (typeof action.payload === 'string') {\n        return { ...state, endDate: action.payload };\n      }\n      return { ...state, endDate: action.payload.toISOString() };\n    },\n    setIsShowingAddDate: (state, action: PayloadAction<boolean>) => {\n      state.isShowingAddDate = action.payload;\n    },\n    setIsEditing: (state, action: PayloadAction<boolean>) => {\n      state.isEditing = action.payload;\n    },\n    setSelectedCalendarMode: (state, action: PayloadAction<calendarMode>) => {\n      state.selectedCalendarMode = action.payload;\n    },\n    setSelectedEvent: (state, action: PayloadAction<eventType | undefined>) => {\n      state.selectedEvent = action.payload;\n    },\n  },\n});\n\nexport default addEventSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport {\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../../types';\n\ntype homepageStatesType = {\n  taskState: loadingStateEnum;\n  userState: loadingStateEnum;\n  trendingState: loadingStateEnum;\n  userData: attachment[];\n  trendingData: attachment[];\n  userTasks: taskType[];\n  schoolDayData: undefined | schoolDayDataType;\n  startTime: string;\n  isShowingCompleteTasks: boolean;\n};\n\nconst initalState: homepageStatesType = {\n  taskState: loadingStateEnum.loading,\n  userState: loadingStateEnum.loading,\n  trendingState: loadingStateEnum.loading,\n  userData: [],\n  trendingData: [],\n  userTasks: [\n    {\n      name: '',\n      importance: taskImportanceEnum.normal,\n      id: '',\n      status: taskStatusEnum.notStarted,\n      excess: true,\n    },\n  ],\n  schoolDayData: undefined,\n  startTime: '',\n  isShowingCompleteTasks: false,\n};\n\nexport const homepageDataSlice = createSlice({\n  name: 'homepage',\n  initialState: initalState,\n  reducers: {\n    setTaskState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, taskState: action.payload };\n    },\n    setUserState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, userState: action.payload };\n    },\n    setTrendingState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, trendingState: action.payload };\n    },\n    setUserData: (state, action: PayloadAction<attachment[]>) => {\n      return { ...state, userData: action.payload };\n    },\n    setTrendingData: (state, action: PayloadAction<attachment[]>) => {\n      return { ...state, trendingData: action.payload };\n    },\n    setUserTasks: (state, action: PayloadAction<taskType[]>) => {\n      return { ...state, userTasks: action.payload };\n    },\n    updateUserTask: (\n      state,\n      action: PayloadAction<{ task: taskType; index: number }>,\n    ) => {\n      if (action.payload.index < state.userTasks.length) {\n        state.userTasks[action.payload.index] = action.payload.task;\n      } else {\n        return state;\n      }\n    },\n    unshiftUserTask: (state, action: PayloadAction<taskType>) => {\n      state.userTasks.unshift(action.payload);\n    },\n    popUserTask: (state, action: PayloadAction<number>) => {\n      state.userTasks.splice(action.payload, 1);\n    },\n    setSchoolDayData: (state, action: PayloadAction<schoolDayDataType>) => {\n      return { ...state, schoolDayData: action.payload };\n    },\n    setStartTime: (state, action: PayloadAction<string>) => {\n      return { ...state, startTime: action.payload };\n    },\n    setIsShowingCompletedTasks: (state, action: PayloadAction<boolean>) => {\n      return { ...state, isShowingCompleteTasks: action.payload };\n    },\n  },\n});\n\nexport default homepageDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const expandedModeSlice = createSlice({\n  name: 'expandedMode',\n  initialState: initalState,\n  reducers: {\n    setExpandedMode: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default expandedModeSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const isShowingProfileBlockSlice = createSlice({\n  name: 'isShowingProfileBlock',\n  initialState: initalState,\n  reducers: {\n    setIsShowingProfileBlock: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default isShowingProfileBlockSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const isGovernmentModeSlice = createSlice({\n  name: 'isGovernmentMode',\n  initialState: initalState,\n  reducers: {\n    setIsGovernmentMode: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default isGovernmentModeSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\ntype commissionsStateType = {\n  commissionsState: loadingStateEnum;\n  points: number;\n  currentCommissions: commissionType[];\n  selectedCommission: string;\n  commissionNextLink: string | undefined;\n};\n\nconst initalState: commissionsStateType = {\n  commissionsState: loadingStateEnum.loading,\n  points: 0,\n  currentCommissions: [],\n  selectedCommission: '',\n  commissionNextLink: undefined,\n};\n\nexport const commissionsSlice = createSlice({\n  name: 'commissions',\n  initialState: initalState,\n  reducers: {\n    setCommissionsState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, commissionsState: action.payload };\n    },\n    setPoints: (state, action: PayloadAction<number>) => {\n      return { ...state, points: action.payload };\n    },\n    setCurrentCommissions: (state, action: PayloadAction<commissionType[]>) => {\n      return { ...state, currentCommissions: action.payload };\n    },\n    setSelectedCommission: (state, action: PayloadAction<string>) => {\n      return { ...state, selectedCommission: action.payload };\n    },\n    setCommissionNextLink: (\n      state,\n      action: PayloadAction<string | undefined>,\n    ) => {\n      return { ...state, commissionNextLink: action.payload };\n    },\n  },\n});\n\nexport default commissionsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\n// page number is an index meaning first page is 0\nconst initalState: { inject: string; images: string[]; pageNumber: number } = {\n  inject: '',\n  images: [],\n  pageNumber: 0,\n};\n\nexport const pdfDataSlice = createSlice({\n  name: 'pdfData',\n  initialState: initalState,\n  reducers: {\n    setInject: (state, action: PayloadAction<string>) => {\n      state.inject = action.payload;\n      return { ...state, commissionsState: action.payload };\n    },\n    addImage: (state, action: PayloadAction<string>) => {\n      state.images.push(action.payload);\n    },\n    setImages: (state, action: PayloadAction<string[]>) => {\n      return { ...state, images: action.payload };\n    },\n    setPageNumber: (state, action: PayloadAction<number>) => {\n      return { ...state, pageNumber: action.payload };\n    },\n    increasePageNumber: state => {\n      state.pageNumber += 1;\n    },\n    decreasePageNumber: state => {\n      state.pageNumber -= 1;\n    },\n  },\n});\n\nexport default pdfDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: eventType[] = [];\n\nexport const monthViewSlice = createSlice({\n  name: 'monthView',\n  initialState: initalState,\n  reducers: {\n    setMonthViewData: (_state, action: PayloadAction<eventType[]>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default monthViewSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: number = 0;\n\nexport const authenticationCallSlice = createSlice({\n  name: 'authenticationCall',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationCallIncrement: state => {\n      return state + 1;\n    },\n  },\n});\n\nexport default authenticationCallSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\nconst initalState: {\n  searchText: string;\n  users: schoolUserType[];\n  usersState: loadingStateEnum;\n  nextLink: string | undefined;\n} = {\n  searchText: '',\n  users: [],\n  usersState: loadingStateEnum.loading,\n  nextLink: undefined,\n};\n\nexport const studentSearchSlice = createSlice({\n  name: 'studentSearch',\n  initialState: initalState,\n  reducers: {\n    setStudentSearch: (state, action: PayloadAction<string>) => {\n      return { ...state, searchText: action.payload };\n    },\n    setStudentUsers: (state, action: PayloadAction<schoolUserType[]>) => {\n      return { ...state, users: action.payload };\n    },\n    setUsersState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, usersState: action.payload };\n    },\n    setNextLink: (state, action: PayloadAction<string | undefined>) => {\n      return { ...state, nextLink: action.payload };\n    },\n    setStudentUserByIndex: (\n      state,\n      action: PayloadAction<{ index: number; user: schoolUserType }>,\n    ) => {\n      if (action.payload.index < state.users.length) {\n        state.users[action.payload.index] = action.payload.user;\n      }\n    },\n    setStudentUserById: (\n      state,\n      action: PayloadAction<{ id: string; user: schoolUserType }>,\n    ) => {\n      const findIndex = state.users.findIndex(e => {\n        return e.id === action.payload.id;\n      });\n      if (findIndex !== -1) {\n        state.users[findIndex] = action.payload.user;\n      }\n    },\n  },\n});\n\nexport default studentSearchSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport monthDataReducer from './reducers/monthDataReducer';\nimport resourcesLastCallReducer, {\n  resourcesLastCalled,\n} from './reducers/resourcesLastCallReducer';\nimport safeAreaColorsReducer from './reducers/safeAreaColorsReducer';\nimport microsoftProfileDataReducer from './reducers/microsoftProfileDataReducer';\nimport currentEventsReducer from './reducers/currentEventReducer';\nimport currentEventsLastCalledReducer from './reducers/currentEventLastCalledReducer';\nimport selectedDateReducer from './reducers/selectedDateReducer';\nimport paulyListReducer from './reducers/paulyListReducer';\nimport authenticationTokenReducer from './reducers/authenticationTokenReducer';\nimport authenticationRefreshTokenReducer from './reducers/authenticationRefreshTokenReducer';\nimport dimentionsReducer from './reducers/dimentionsReducer';\nimport authenticationApiTokenReducer from './reducers/authenticationApiToken';\nimport { tasksDeltaReducer, tasksReducer } from './reducers/tasksReducers';\nimport paulyDataReducer from './reducers/paulyDataReducer';\nimport resourcesReducer from './reducers/resourcesReducer';\nimport addEventReducer from './reducers/addEventReducer';\nimport homepageDataReducer from './reducers/homepageDataReducer';\nimport expandedModeReducer from './reducers/expandedModeReducer';\nimport isShowingProfileBlockReducer from './reducers/isShowingProfileBlockReducer';\nimport isGovernmentModeReducer from './reducers/isGovernmentModeReducer';\nimport commissionsReducer from './reducers/commissionsReducer';\nimport pdfDataReducer from './reducers/pdfDataReducer';\nimport monthViewReducer from './reducers/monthViewReducer';\nimport authenticationCallReducer from './reducers/authenticationCallReducer';\nimport studentSearchReducer from './reducers/studentSearchReducer';\n\nconst store = configureStore({\n  reducer: {\n    addEvent: addEventReducer,\n    authenticationToken: authenticationTokenReducer,\n    authenticationApiToken: authenticationApiTokenReducer,\n    authenticationRefreshToken: authenticationRefreshTokenReducer,\n    authenticationCall: authenticationCallReducer,\n    commissions: commissionsReducer,\n    currentEvents: currentEventsReducer,\n    currentEventsLastCalled: currentEventsLastCalledReducer,\n    dimentions: dimentionsReducer,\n    expandedMode: expandedModeReducer,\n    homepageData: homepageDataReducer,\n    isGovernmentMode: isGovernmentModeReducer,\n    isShowingProfileBlock: isShowingProfileBlockReducer,\n    microsoftProfileData: microsoftProfileDataReducer,\n    monthData: monthDataReducer,\n    monthView: monthViewReducer,\n    paulyData: paulyDataReducer,\n    paulyList: paulyListReducer,\n    pdfData: pdfDataReducer,\n    resources: resourcesReducer,\n    resourcesLastCalled: resourcesLastCallReducer,\n    safeAreaColors: safeAreaColorsReducer,\n    tasks: tasksReducer,\n    tasksDeltaLink: tasksDeltaReducer,\n    selectedDate: selectedDateReducer,\n    studentSearch: studentSearchReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      immutableCheck: false,\n    }),\n});\n\nexport default store;\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { View, StyleProp, ViewStyle } from 'react-native';\nimport React from 'react';\nimport Svg, {\n  Circle,\n  ClipPath,\n  Defs,\n  G,\n  Line,\n  LinearGradient,\n  Path,\n  Polygon,\n  Polyline,\n  Rect,\n  Shape,\n  Stop,\n  SvgProps,\n} from 'react-native-svg';\nimport { Colors } from '../../types';\n\ntype iconProps = {\n  width: number;\n  height: number;\n  style?: StyleProp<ViewStyle> | undefined;\n  props?: Shape<SvgProps> | undefined;\n};\n\ninterface colorIconProps extends iconProps {\n  color?: string | undefined;\n}\n\n// Icons\n// CalendarIcon\n// MedalIcon\n// BookIcon\n// GovernmentIcon\n// HomeIcon\n// UpIcon\n// DownIcon\n// AddIcon\n// CloseIcon\n// ChevronLeft\n// ChevronRight\n// FolderIcon\n// DocumentIcon\n// CopyIcon\n// PersonIcon\n// GearIcon\n// GraduationHatIcon\n// WarningIcon\n// SearchIcon\n\nexport function CalendarIcon({ width, height, style }: iconProps) {\n  return (\n    <View>\n      <Svg\n        width={width}\n        height={height}\n        style={style}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n      >\n        <Path\n          d=\"M7.75 2.5C7.75 2.08579 7.41421 1.75 7 1.75C6.58579 1.75 6.25 2.08579 6.25 2.5V4.07926C4.81067 4.19451 3.86577 4.47737 3.17157 5.17157C2.47737 5.86577 2.19451 6.81067 2.07926 8.25H21.9207C21.8055 6.81067 21.5226 5.86577 20.8284 5.17157C20.1342 4.47737 19.1893 4.19451 17.75 4.07926V2.5C17.75 2.08579 17.4142 1.75 17 1.75C16.5858 1.75 16.25 2.08579 16.25 2.5V4.0129C15.5847 4 14.839 4 14 4H10C9.16097 4 8.41527 4 7.75 4.0129V2.5Z\"\n          fill=\"#000000\"\n        />\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 12C2 11.161 2 10.4153 2.0129 9.75H21.9871C22 10.4153 22 11.161 22 12V14C22 17.7712 22 19.6569 20.8284 20.8284C19.6569 22 17.7712 22 14 22H10C6.22876 22 4.34315 22 3.17157 20.8284C2 19.6569 2 17.7712 2 14V12ZM17 14C17.5523 14 18 13.5523 18 13C18 12.4477 17.5523 12 17 12C16.4477 12 16 12.4477 16 13C16 13.5523 16.4477 14 17 14ZM17 18C17.5523 18 18 17.5523 18 17C18 16.4477 17.5523 16 17 16C16.4477 16 16 16.4477 16 17C16 17.5523 16.4477 18 17 18ZM13 13C13 13.5523 12.5523 14 12 14C11.4477 14 11 13.5523 11 13C11 12.4477 11.4477 12 12 12C12.5523 12 13 12.4477 13 13ZM13 17C13 17.5523 12.5523 18 12 18C11.4477 18 11 17.5523 11 17C11 16.4477 11.4477 16 12 16C12.5523 16 13 16.4477 13 17ZM7 14C7.55228 14 8 13.5523 8 13C8 12.4477 7.55228 12 7 12C6.44772 12 6 12.4477 6 13C6 13.5523 6.44772 14 7 14ZM7 18C7.55228 18 8 17.5523 8 17C8 16.4477 7.55228 16 7 16C6.44772 16 6 16.4477 6 17C6 17.5523 6.44772 18 7 18Z\"\n          fill=\"#000000\"\n        />\n      </Svg>\n    </View>\n  );\n}\n\nexport function MedalIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 297.334 297.334\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <G>\n          <Polygon points=\"172.667,64 206.687,0 90.623,0 124.649,64 \" />\n          <Path d=\"M227.904,8.293c-2.553-4.837-6.726-4.834-9.272,0.006l-55.839,106.095c20.009,2.892,38.11,11.76,52.427,24.735 l36.208-68.682c2.551-4.838,2.549-12.754-0.004-17.591L227.904,8.293z\" />\n          <Path d=\"M134.518,114.35L78.7,8.299c-2.547-4.84-6.72-4.843-9.272-0.006L45.909,52.856c-2.552,4.837-2.554,12.753-0.004,17.591 l36.102,68.48C96.362,125.996,114.491,117.181,134.518,114.35z\" />\n          <Path d=\"M148.502,128.279c-46.685,0-84.529,37.844-84.529,84.528c0,46.682,37.845,84.526,84.529,84.526 c46.682,0,84.526-37.845,84.526-84.526C233.028,166.123,195.184,128.279,148.502,128.279z M148.502,273.125 c-33.262,0-60.32-27.059-60.32-60.317c0-33.261,27.059-60.319,60.32-60.319c33.259,0,60.316,27.059,60.316,60.319 C208.819,246.066,181.761,273.125,148.502,273.125z\" />\n          <Path d=\"M148.502,167.404c-25.038,0-45.404,20.367-45.404,45.403c0,25.033,20.366,45.4,45.404,45.4 c25.033,0,45.399-20.367,45.399-45.4C193.902,187.771,173.535,167.404,148.502,167.404z\" />\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function BookIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg width={width} height={height} style={style} viewBox=\"0 0 512 512\">\n      <Path d=\"m202.24 74c-36.13-17.25-86.63-25.7-154.24-26a31.36 31.36 0 0 0 -17.92 5.33 32 32 0 0 0 -14.08 26.57v286.1c0 19.34 13.76 33.93 32 33.93 71.07 0 142.36 6.64 185.06 47a4.11 4.11 0 0 0 6.94-3v-337.11a15.89 15.89 0 0 0 -5.46-12 143 143 0 0 0 -32.3-20.82z\" />\n      <Path d=\"m481.92 53.3a31.33 31.33 0 0 0 -17.92-5.3c-67.61.3-118.11 8.71-154.24 26a143.31 143.31 0 0 0 -32.31 20.78 15.93 15.93 0 0 0 -5.45 12v337.13a3.93 3.93 0 0 0 6.68 2.81c25.67-25.5 70.72-46.82 185.36-46.81a32 32 0 0 0 32-32v-288a32 32 0 0 0 -14.12-26.61z\" />\n    </Svg>\n  );\n}\n\nexport function GovernmentIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"black\"\n    >\n      <Path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.5528 1.10557C11.8343 0.964809 12.1657 0.964809 12.4472 1.10557L22.4472 6.10557C22.862 6.31298 23.0798 6.77838 22.9732 7.22975C22.8667 7.68112 22.4638 8 22 8H1.99998C1.5362 8 1.13328 7.68112 1.02673 7.22975C0.920172 6.77838 1.13795 6.31298 1.55276 6.10557L11.5528 1.10557ZM6.23604 6H17.7639L12 3.11803L6.23604 6ZM5.99998 9C6.55226 9 6.99998 9.44772 6.99998 10V15C6.99998 15.5523 6.55226 16 5.99998 16C5.44769 16 4.99998 15.5523 4.99998 15V10C4.99998 9.44772 5.44769 9 5.99998 9ZM9.99998 9C10.5523 9 11 9.44772 11 10V15C11 15.5523 10.5523 16 9.99998 16C9.44769 16 8.99998 15.5523 8.99998 15V10C8.99998 9.44772 9.44769 9 9.99998 9ZM14 9C14.5523 9 15 9.44772 15 10V15C15 15.5523 14.5523 16 14 16C13.4477 16 13 15.5523 13 15V10C13 9.44772 13.4477 9 14 9ZM18 9C18.5523 9 19 9.44772 19 10V15C19 15.5523 18.5523 16 18 16C17.4477 16 17 15.5523 17 15V10C17 9.44772 17.4477 9 18 9ZM2.99998 18C2.99998 17.4477 3.44769 17 3.99998 17H20C20.5523 17 21 17.4477 21 18C21 18.5523 20.5523 19 20 19H3.99998C3.44769 19 2.99998 18.5523 2.99998 18ZM0.999976 21C0.999976 20.4477 1.44769 20 1.99998 20H22C22.5523 20 23 20.4477 23 21C23 21.5523 22.5523 22 22 22H1.99998C1.44769 22 0.999976 21.5523 0.999976 21Z\"\n        fill=\"#000000\"\n      />\n    </Svg>\n  );\n}\n\nexport function HomeIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 460.298 460.297\"\n    >\n      <Path\n        d=\"M230.149,120.939L65.986,256.274c0,0.191-0.048,0.472-0.144,0.855c-0.094,0.38-0.144,0.656-0.144,0.852v137.041\n      c0,4.948,1.809,9.236,5.426,12.847c3.616,3.613,7.898,5.431,12.847,5.431h109.63V303.664h73.097v109.64h109.629\n      c4.948,0,9.236-1.814,12.847-5.435c3.617-3.607,5.432-7.898,5.432-12.847V257.981c0-0.76-0.104-1.334-0.288-1.707L230.149,120.939\n      z\"\n      />\n      <Path\n        d=\"M457.122,225.438L394.6,173.476V56.989c0-2.663-0.856-4.853-2.574-6.567c-1.704-1.712-3.894-2.568-6.563-2.568h-54.816\n      c-2.666,0-4.855,0.856-6.57,2.568c-1.711,1.714-2.566,3.905-2.566,6.567v55.673l-69.662-58.245\n      c-6.084-4.949-13.318-7.423-21.694-7.423c-8.375,0-15.608,2.474-21.698,7.423L3.172,225.438c-1.903,1.52-2.946,3.566-3.14,6.136\n      c-0.193,2.568,0.472,4.811,1.997,6.713l17.701,21.128c1.525,1.712,3.521,2.759,5.996,3.142c2.285,0.192,4.57-0.476,6.855-1.998\n      L230.149,95.817l197.57,164.741c1.526,1.328,3.521,1.991,5.996,1.991h0.858c2.471-0.376,4.463-1.43,5.996-3.138l17.703-21.125\n      c1.522-1.906,2.189-4.145,1.991-6.716C460.068,229.007,459.021,226.961,457.122,225.438z\"\n      />\n    </Svg>\n  );\n}\n\nexport function UpIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 330 330\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          id=\"XMLID_224_\"\n          d=\"M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394 l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393 C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function DownIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 330 330\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          id=\"XMLID_225_\"\n          d=\"M325.607,79.393c-5.857-5.857-15.355-5.858-21.213,0.001l-139.39,139.393L25.607,79.393 c-5.857-5.857-15.355-5.858-21.213,0.001c-5.858,5.858-5.858,15.355,0,21.213l150.004,150c2.813,2.813,6.628,4.393,10.606,4.393 s7.794-1.581,10.606-4.394l149.996-150C331.465,94.749,331.465,85.251,325.607,79.393z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function AddIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 309.059 309.059\"\n      fill=\"#000000\"\n    >\n      <G strokeWidth=\"0\" />\n      <G strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <G>\n        <G>\n          <G>\n            <Path\n              fill=\"#010002\"\n              d=\"M280.71,126.181h-97.822V28.338C182.889,12.711,170.172,0,154.529,0S126.17,12.711,126.17,28.338 v97.843H28.359C12.722,126.181,0,138.903,0,154.529c0,15.621,12.717,28.338,28.359,28.338h97.811v97.843 c0,15.632,12.711,28.348,28.359,28.348c15.643,0,28.359-12.717,28.359-28.348v-97.843h97.822 c15.632,0,28.348-12.717,28.348-28.338C309.059,138.903,296.342,126.181,280.71,126.181z\"\n            />\n          </G>\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function CloseIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G strokeWidth=\"0\" />\n      <G strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <G>\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.29289 5.29289C5.68342 4.90237 6.31658 4.90237 6.70711 5.29289L12 10.5858L17.2929 5.29289C17.6834 4.90237 18.3166 4.90237 18.7071 5.29289C19.0976 5.68342 19.0976 6.31658 18.7071 6.70711L13.4142 12L18.7071 17.2929C19.0976 17.6834 19.0976 18.3166 18.7071 18.7071C18.3166 19.0976 17.6834 19.0976 17.2929 18.7071L12 13.4142L6.70711 18.7071C6.31658 19.0976 5.68342 19.0976 5.29289 18.7071C4.90237 18.3166 4.90237 17.6834 5.29289 17.2929L10.5858 12L5.29289 6.70711C4.90237 6.31658 4.90237 5.68342 5.29289 5.29289Z\"\n          fill=\"#0F1729\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ChevronLeft({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 16 16\"\n      {...props}\n    >\n      <Path\n        fillRule=\"evenodd\"\n        d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\n      />\n    </Svg>\n  );\n}\n\nexport function ChevronRight({ width, height, style }: iconProps) {\n  return (\n    <Svg width={width} height={height} style={style} viewBox=\"0 0 16 16\">\n      <Path\n        fillRule=\"evenodd\"\n        d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"\n      />\n    </Svg>\n  );\n}\n\nexport function FolderIcon({ width, height, style }: iconProps) {\n  return (\n    <View>\n      <Svg\n        width={width}\n        height={height}\n        style={style}\n        stroke=\"currentColor\"\n        fill=\"currentColor\"\n        strokeWidth=\"0\"\n        viewBox=\"0 0 48 48\"\n      >\n        <Path\n          fill=\"#FFA000\"\n          d=\"M40,12H22l-4-4H8c-2.2,0-4,1.8-4,4v8h40v-4C44,13.8,42.2,12,40,12z\"\n        />\n        <Path\n          fill=\"#FFCA28\"\n          d=\"M40,12H8c-2.2,0-4,1.8-4,4v20c0,2.2,1.8,4,4,4h32c2.2,0,4-1.8,4-4V16C44,13.8,42.2,12,40,12z\"\n        />\n      </Svg>\n    </View>\n  );\n}\n\nexport function DocumentIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      viewBox=\"0 0 48 48\"\n    >\n      <Polygon fill=\"#90CAF9\" points=\"40,45 8,45 8,3 30,3 40,13\" />\n      <Polygon fill=\"#E1F5FE\" points=\"38.5,14 29,14 29,4.5\" />\n      <G fill=\"#1976D2\">\n        <Rect x=\"16\" y=\"21\" width=\"17\" height=\"2\" />\n        <Rect x=\"16\" y=\"25\" width=\"13\" height=\"2\" />\n        <Rect x=\"16\" y=\"29\" width=\"17\" height=\"2\" />\n        <Rect x=\"16\" y=\"33\" width=\"13\" height=\"2\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function SportsIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n      viewBox=\"0 0 64 64\"\n      aria-hidden\n      preserveAspectRatio=\"xMidYMid meet\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M59.284 4.714C58.27 3.701 55.587 2 49.022 2c-2.741 0-5.859.307-9.27.912a57.369 57.369 0 0 0-9.213 2.413c-6.229 2.221-11.512 5.47-15.698 9.658c-4.19 4.192-7.438 9.474-9.654 15.701c-1.031 2.889-1.843 5.988-2.413 9.211c-2.141 12.084.643 16.993 2.494 18.843C6.486 59.956 9.527 62 16.204 62h.001c2.369 0 5.029-.26 7.904-.769c3.236-.574 6.335-1.387 9.208-2.413c6.231-2.22 11.514-5.469 15.702-9.657c4.188-4.191 7.437-9.475 9.655-15.703c1.025-2.879 1.836-5.979 2.411-9.21c2.478-13.974-.753-18.483-1.801-19.534M33.041 24.832c-.987-.988.544-2.52 1.532-1.532l2.299 2.299c1.133-1.131 2.172-2.17 3.064-3.064l-2.3-2.299c-.988-.988.545-2.52 1.534-1.533l2.298 2.3l1.377-1.377c.986-.989 2.518.543 1.532 1.531l-1.378 1.378l2.296 2.298c.989.987-.543 2.519-1.529 1.532l-2.299-2.298l-3.063 3.064l2.298 2.298c.988.988-.546 2.52-1.531 1.533l-2.299-2.298l-3.064 3.065l2.297 2.297c.987.989-.543 2.519-1.531 1.532l-2.297-2.298l-3.064 3.064c.766.766 1.532 1.531 2.297 2.298c.988.987-.545 2.519-1.532 1.533l-2.297-2.299l-3.064 3.064l2.297 2.299c.988.987-.543 2.519-1.531 1.53l-2.297-2.297c-.655.652-1.136 1.135-1.379 1.377c-.987.987-2.518-.544-1.532-1.533l1.378-1.377c-.767-.767-1.533-1.532-2.297-2.298c-.988-.988.543-2.521 1.529-1.533l2.299 2.3l3.063-3.064l-2.299-2.299c-.986-.988.546-2.521 1.533-1.533l2.299 2.298l3.063-3.064l-2.297-2.297c-.989-.989.544-2.52 1.529-1.533l2.299 2.3l3.066-3.065l-2.299-2.299m-9.276 34.462c-.414.074-.813.131-1.217.193c-3.615-2.093-7.055-4.731-10.176-7.855c-3.122-3.12-5.761-6.563-7.853-10.176c.063-.403.118-.795.193-1.218a55.744 55.744 0 0 1 1.933-7.7c1.94 5.356 5.28 10.557 9.773 15.05c4.49 4.492 9.689 7.833 15.046 9.774a56.191 56.191 0 0 1-7.699 1.932m33.454-27.691c-1.942-5.356-5.282-10.554-9.775-15.046c-4.49-4.493-9.69-7.833-15.048-9.775a56.153 56.153 0 0 1 7.701-1.933c.414-.074.81-.129 1.215-.194c3.614 2.094 7.056 4.732 10.18 7.854c3.122 3.126 5.762 6.57 7.855 10.187c-.063.399-.123.794-.197 1.208a56.411 56.411 0 0 1-1.931 7.699\"\n          fill=\"#000000\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function CopyIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 32 32\"\n      id=\"Layer_1\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path d=\"M27.2,8.22H23.78V5.42A3.42,3.42,0,0,0,20.36,2H5.42A3.42,3.42,0,0,0,2,5.42V20.36a3.43,3.43,0,0,0,3.42,3.42h2.8V27.2A2.81,2.81,0,0,0,11,30H27.2A2.81,2.81,0,0,0,30,27.2V11A2.81,2.81,0,0,0,27.2,8.22ZM5.42,21.91a1.55,1.55,0,0,1-1.55-1.55V5.42A1.54,1.54,0,0,1,5.42,3.87H20.36a1.55,1.55,0,0,1,1.55,1.55v2.8H11A2.81,2.81,0,0,0,8.22,11V21.91ZM28.13,27.2a.93.93,0,0,1-.93.93H11a.93.93,0,0,1-.93-.93V11a.93.93,0,0,1,.93-.93H27.2a.93.93,0,0,1,.93.93Z\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PersonIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 512 512\"\n    >\n      <Path d=\"M258.9,48C141.92,46.42,46.42,141.92,48,258.9,49.56,371.09,140.91,462.44,253.1,464c117,1.6,212.48-93.9,210.88-210.88C462.44,140.91,371.09,49.56,258.9,48ZM385.32,375.25a4,4,0,0,1-6.14-.32,124.27,124.27,0,0,0-32.35-29.59C321.37,329,289.11,320,256,320s-65.37,9-90.83,25.34a124.24,124.24,0,0,0-32.35,29.58,4,4,0,0,1-6.14.32A175.32,175.32,0,0,1,80,259C78.37,161.69,158.22,80.24,255.57,80S432,158.81,432,256A175.32,175.32,0,0,1,385.32,375.25Z\" />\n      <Path d=\"M256,144c-19.72,0-37.55,7.39-50.22,20.82s-19,32-17.57,51.93C191.11,256,221.52,288,256,288s64.83-32,67.79-71.24c1.48-19.74-4.8-38.14-17.68-51.82C293.39,151.44,275.59,144,256,144Z\" />\n    </Svg>\n  );\n}\n\nexport function GearIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Path\n        clipRule=\"evenodd\"\n        d=\"M17.2994 10.4527L19.2267 10.7677C19.3846 10.7935 19.5003 10.9298 19.5 11.0896V12.883C19.5 13.0412 19.3865 13.1768 19.2303 13.2042L17.3004 13.543C17.1885 13.9298 17.0349 14.3022 16.8415 14.6543L17.9823 16.2382C18.0759 16.3679 18.0612 16.5463 17.9483 16.6595L16.6804 17.9283C16.5682 18.0401 16.3921 18.0561 16.2623 17.9645L14.6627 16.8424C14.3099 17.0387 13.9352 17.1952 13.5442 17.3103L13.2034 19.231C13.176 19.3865 13.0406 19.5 12.8825 19.5H11.0888C10.9294 19.5 10.7934 19.3849 10.7676 19.228L10.4493 17.3168C10.059 17.204 9.6823 17.0485 9.32585 16.8525L7.73767 17.9648C7.60821 18.0558 7.43178 18.0401 7.31992 17.9283L6.05198 16.6595C5.93947 16.5463 5.9248 16.3686 6.01741 16.2391L7.13958 14.6697C6.94163 14.3116 6.78444 13.9337 6.67062 13.5414L4.76905 13.2042C4.61349 13.1765 4.5 13.0412 4.5 12.883V11.0896C4.5 10.9304 4.61544 10.7941 4.77263 10.768L6.67421 10.4514C6.78868 10.0582 6.94586 9.68022 7.14316 9.32315L6.0347 7.73739C5.94371 7.60793 5.95937 7.43185 6.07122 7.32L7.33883 6.0525C7.452 5.94 7.62908 5.925 7.7592 6.01793L9.33433 7.14293C9.68817 6.94924 10.0639 6.795 10.4552 6.6825L10.767 4.77359C10.7927 4.61576 10.929 4.5 11.0888 4.5H12.8825C13.041 4.5 13.1763 4.61413 13.2037 4.77L13.5399 6.68935C13.929 6.8025 14.304 6.95837 14.6591 7.15467L16.2385 6.01957C16.3683 5.92598 16.5464 5.94065 16.6595 6.05348L17.9278 7.32098C18.0397 7.43315 18.0553 7.60957 17.9643 7.73902L16.8392 9.34239C17.0323 9.69424 17.1865 10.066 17.2994 10.4527ZM9.71725 12C9.71725 13.2607 10.7393 14.2826 12.0001 14.2826C13.2608 14.2826 14.2829 13.2607 14.2829 12C14.2829 10.7394 13.2608 9.71742 12.0001 9.71742C10.7393 9.71742 9.71725 10.7394 9.71725 12Z\"\n        stroke=\"#000000\"\n      />\n    </Svg>\n  );\n}\n\nexport function GraduationHatIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Path\n        d=\"M7.54004 11.77L12 14L19 10.5M7.54004 11.77V17.77M7.54004 11.77L12 9.54004M7.54004 11.77L5 10.5M7.54004 17.77V21M7.54004 17.77L12 20L19 16.5V10.5M7.54004 17.77L5 16.5V10.5M19 10.5L22 9L12 4L2 9L5 10.5\"\n        stroke=\"#000000\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n}\n\nexport function WarningIcon({\n  width,\n  height,\n  style,\n  outlineColor,\n}: {\n  width: number;\n  height: number;\n  style?: StyleProp<ViewStyle>;\n  outlineColor?: string;\n}) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Circle cx=\"12\" cy=\"17\" r=\"1\" fill=\"#000000\" />\n      <Path\n        d=\"M12 10L12 14\"\n        stroke=\"#000000\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <Path\n        d=\"M3.44722 18.1056L10.2111 4.57771C10.9482 3.10361 13.0518 3.10362 13.7889 4.57771L20.5528 18.1056C21.2177 19.4354 20.2507 21 18.7639 21H5.23607C3.7493 21 2.78231 19.4354 3.44722 18.1056Z\"\n        stroke={outlineColor || '#000000'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n}\n\nexport function SearchIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      id=\"Capa_1\"\n      viewBox=\"0 0 488.4 488.4\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <G>\n          <G>\n            <Path d=\"M0,203.25c0,112.1,91.2,203.2,203.2,203.2c51.6,0,98.8-19.4,134.7-51.2l129.5,129.5c2.4,2.4,5.5,3.6,8.7,3.6 s6.3-1.2,8.7-3.6c4.8-4.8,4.8-12.5,0-17.3l-129.6-129.5c31.8-35.9,51.2-83,51.2-134.7c0-112.1-91.2-203.2-203.2-203.2 S0,91.15,0,203.25z M381.9,203.25c0,98.5-80.2,178.7-178.7,178.7s-178.7-80.2-178.7-178.7s80.2-178.7,178.7-178.7 S381.9,104.65,381.9,203.25z\" />\n          </G>\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function WordIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-1712.086\"\n            x2=\"13.832\"\n            y2=\"-1695.914\"\n            gradientTransform=\"translate(0 1720)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#2368c4\" />\n            <Stop offset=\"0.5\" stopColor=\"#1a5dbe\" />\n            <Stop offset=\"1\" stopColor=\"#1146ac\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M28.806,3H9.705A1.192,1.192,0,0,0,8.512,4.191h0V9.5l11.069,3.25L30,9.5V4.191A1.192,1.192,0,0,0,28.806,3Z\"\n          fill=\"#41a5ee\"\n        />\n        <Path d=\"M30,9.5H8.512V16l11.069,1.95L30,16Z\" fill=\"#2b7cd3\" />\n        <Path d=\"M8.512,16v6.5L18.93,23.8,30,22.5V16Z\" fill=\"#185abd\" />\n        <Path\n          d=\"M9.705,29h19.1A1.192,1.192,0,0,0,30,27.809h0V22.5H8.512v5.309A1.192,1.192,0,0,0,9.705,29Z\"\n          fill=\"#103f91\"\n        />\n        <Path\n          d=\"M16.434,8.2H8.512V24.45h7.922a1.2,1.2,0,0,0,1.194-1.191V9.391A1.2,1.2,0,0,0,16.434,8.2Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V25.1h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V23.8h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.132,8.85H8.512V23.8h6.62a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.132,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"#215091\"\n        />\n        <Path\n          d=\"M6.9,17.988c.023.184.039.344.046.481h.028c.01-.13.032-.287.065-.47s.062-.338.089-.465l1.255-5.407h1.624l1.3,5.326a7.761,7.761,0,0,1,.162,1h.022a7.6,7.6,0,0,1,.135-.975l1.039-5.358h1.477l-1.824,7.748H10.591L9.354,14.742q-.054-.222-.122-.578t-.084-.52H9.127q-.021.189-.084.561c-.042.249-.075.432-.1.552L7.78,19.871H6.024L4.19,12.127h1.5l1.131,5.418A4.469,4.469,0,0,1,6.9,17.988Z\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PowerpointIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-1748.086\"\n            x2=\"13.832\"\n            y2=\"-1731.914\"\n            gradientTransform=\"translate(0 1756)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#ca4c28\" />\n            <Stop offset=\"0.5\" stopColor=\"#c5401e\" />\n            <Stop offset=\"1\" stopColor=\"#b62f14\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M18.93,17.3,16.977,3h-.146A12.9,12.9,0,0,0,3.953,15.854V16Z\"\n          fill=\"#ed6c47\"\n        />\n        <Path\n          d=\"M17.123,3h-.146V16l6.511,2.6L30,16v-.146A12.9,12.9,0,0,0,17.123,3Z\"\n          fill=\"#ff8f6b\"\n        />\n        <Path\n          d=\"M30,16v.143A12.905,12.905,0,0,1,17.12,29h-.287A12.907,12.907,0,0,1,3.953,16.143V16Z\"\n          fill=\"#d35230\"\n        />\n        <Path\n          d=\"M17.628,9.389V23.26a1.2,1.2,0,0,1-.742,1.1,1.16,1.16,0,0,1-.45.091H7.027c-.182-.208-.358-.429-.521-.65a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85c.143-.221.293-.442.456-.65h9.93A1.2,1.2,0,0,1,17.628,9.389Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.977,10.04V23.911a1.15,1.15,0,0,1-.091.448,1.2,1.2,0,0,1-1.1.741H7.62q-.309-.314-.593-.65c-.182-.208-.358-.429-.521-.65a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.735A1.2,1.2,0,0,1,16.977,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.977,10.04V22.611A1.2,1.2,0,0,1,15.785,23.8H6.506a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.735A1.2,1.2,0,0,1,16.977,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.326,10.04V22.611A1.2,1.2,0,0,1,15.134,23.8H6.506a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.084A1.2,1.2,0,0,1,16.326,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"#c5401e\"\n        />\n        <Path\n          d=\"M9.293,12.028a3.287,3.287,0,0,1,2.174.636,2.27,2.27,0,0,1,.756,1.841,2.555,2.555,0,0,1-.373,1.376,2.49,2.49,0,0,1-1.059.935A3.607,3.607,0,0,1,9.2,17.15H7.687v2.8H6.141V12.028ZM7.686,15.94H9.017a1.735,1.735,0,0,0,1.177-.351,1.3,1.3,0,0,0,.4-1.025q0-1.309-1.525-1.31H7.686V15.94Z\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ExcelIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-2092.086\"\n            x2=\"13.832\"\n            y2=\"-2075.914\"\n            gradientTransform=\"translate(0 2100)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#18884f\" />\n            <Stop offset=\"0.5\" stopColor=\"#117e43\" />\n            <Stop offset=\"1\" stopColor=\"#0b6631\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M19.581,15.35,8.512,13.4V27.809A1.192,1.192,0,0,0,9.705,29h19.1A1.192,1.192,0,0,0,30,27.809h0V22.5Z\"\n          fill=\"#185c37\"\n        />\n        <Path\n          d=\"M19.581,3H9.705A1.192,1.192,0,0,0,8.512,4.191h0V9.5L19.581,16l5.861,1.95L30,16V9.5Z\"\n          fill=\"#21a366\"\n        />\n        <Path d=\"M8.512,9.5H19.581V16H8.512Z\" fill=\"#107c41\" />\n        <Path\n          d=\"M16.434,8.2H8.512V24.45h7.922a1.2,1.2,0,0,0,1.194-1.191V9.391A1.2,1.2,0,0,0,16.434,8.2Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V25.1h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V23.8h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.132,8.85H8.512V23.8h6.62a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.132,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"url(#a)\"\n        />\n        <Path\n          d=\"M5.7,19.873l2.511-3.884-2.3-3.862H7.758L9.013,14.6c.116.234.2.408.238.524h.017c.082-.188.169-.369.26-.546l1.342-2.447h1.7l-2.359,3.84,2.419,3.905H10.821l-1.45-2.711A2.355,2.355,0,0,1,9.2,16.8H9.176a1.688,1.688,0,0,1-.168.351L7.515,19.873Z\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M28.806,3H19.581V9.5H30V4.191A1.192,1.192,0,0,0,28.806,3Z\"\n          fill=\"#33c481\"\n        />\n        <Path d=\"M19.581,16H30v6.5H19.581Z\" fill=\"#107c41\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function VideoIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M18 3H6C3.79086 3 2 4.79086 2 7V17C2 19.2091 3.79086 21 6 21H18C20.2091 21 22 19.2091 22 17V7C22 4.79086 20.2091 3 18 3Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M10.28 8.03994C9.19003 8.42994 9 10.5199 9 12.0399C9 13.5599 9.19003 15.5999 10.28 16.0399C11.37 16.4799 16 13.7499 16 12.0399C16 10.3299 11.44 7.61994 10.28 8.03994Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PDFIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M24.1,2.072h0l5.564,5.8V29.928H8.879V30H29.735V7.945L24.1,2.072\"\n          fill=\"#909090\"\n        />\n        <Path d=\"M24.031,2H8.808V29.928H29.664V7.873L24.03,2\" fill=\"#f4f4f4\" />\n        <Path d=\"M8.655,3.5H2.265v6.827h20.1V3.5H8.655\" fill=\"#7a7b7c\" />\n        <Path d=\"M22.472,10.211H2.395V3.379H22.472v6.832\" fill=\"#dd2025\" />\n        <Path\n          d=\"M9.052,4.534h-.03l-.207,0H7.745v4.8H8.773V7.715L9,7.728a2.042,2.042,0,0,0,.647-.117,1.427,1.427,0,0,0,.493-.291,1.224,1.224,0,0,0,.335-.454,2.13,2.13,0,0,0,.105-.908,2.237,2.237,0,0,0-.114-.644,1.173,1.173,0,0,0-.687-.65A2.149,2.149,0,0,0,9.37,4.56a2.232,2.232,0,0,0-.319-.026M8.862,6.828l-.089,0V5.348h.193a.57.57,0,0,1,.459.181.92.92,0,0,1,.183.558c0,.246,0,.469-.222.626a.942.942,0,0,1-.524.114\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M12.533,4.521c-.111,0-.219.008-.295.011L12,4.538h-.78v4.8h.918a2.677,2.677,0,0,0,1.028-.175,1.71,1.71,0,0,0,.68-.491,1.939,1.939,0,0,0,.373-.749,3.728,3.728,0,0,0,.114-.949,4.416,4.416,0,0,0-.087-1.127,1.777,1.777,0,0,0-.4-.733,1.63,1.63,0,0,0-.535-.4,2.413,2.413,0,0,0-.549-.178,1.282,1.282,0,0,0-.228-.017m-.182,3.937-.1,0V5.392h.013a1.062,1.062,0,0,1,.6.107,1.2,1.2,0,0,1,.324.4,1.3,1.3,0,0,1,.142.526c.009.22,0,.4,0,.549a2.926,2.926,0,0,1-.033.513,1.756,1.756,0,0,1-.169.5,1.13,1.13,0,0,1-.363.36.673.673,0,0,1-.416.106\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M17.43,4.538H15v4.8h1.028V7.434h1.3V6.542h-1.3V5.43h1.4V4.538\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M21.781,20.255s3.188-.578,3.188.511S22.994,21.412,21.781,20.255Zm-2.357.083a7.543,7.543,0,0,0-1.473.489l.4-.9c.4-.9.815-2.127.815-2.127a14.216,14.216,0,0,0,1.658,2.252,13.033,13.033,0,0,0-1.4.288Zm-1.262-6.5c0-.949.307-1.208.546-1.208s.508.115.517.939a10.787,10.787,0,0,1-.517,2.434A4.426,4.426,0,0,1,18.161,13.841ZM13.513,24.354c-.978-.585,2.051-2.386,2.6-2.444C16.11,21.911,14.537,24.966,13.513,24.354ZM25.9,20.895c-.01-.1-.1-1.207-2.07-1.16a14.228,14.228,0,0,0-2.453.173,12.542,12.542,0,0,1-2.012-2.655,11.76,11.76,0,0,0,.623-3.1c-.029-1.2-.316-1.888-1.236-1.878s-1.054.815-.933,2.013a9.309,9.309,0,0,0,.665,2.338s-.425,1.323-.987,2.639-.946,2.006-.946,2.006a9.622,9.622,0,0,0-2.725,1.4c-.824.767-1.159,1.356-.725,1.945.374.508,1.683.623,2.853-.91a22.549,22.549,0,0,0,1.7-2.492s1.784-.489,2.339-.623,1.226-.24,1.226-.24,1.629,1.639,3.2,1.581,1.495-.939,1.485-1.035\"\n          fill=\"#dd2025\"\n        />\n        <Path d=\"M23.954,2.077V7.95h5.633L23.954,2.077Z\" fill=\"#909090\" />\n        <Path d=\"M24.031,2V7.873h5.633L24.031,2Z\" fill=\"#f4f4f4\" />\n        <Path\n          d=\"M8.975,4.457h-.03l-.207,0H7.668v4.8H8.7V7.639l.228.013a2.042,2.042,0,0,0,.647-.117,1.428,1.428,0,0,0,.493-.291A1.224,1.224,0,0,0,10.4,6.79a2.13,2.13,0,0,0,.105-.908,2.237,2.237,0,0,0-.114-.644,1.173,1.173,0,0,0-.687-.65,2.149,2.149,0,0,0-.411-.105,2.232,2.232,0,0,0-.319-.026M8.785,6.751l-.089,0V5.271H8.89a.57.57,0,0,1,.459.181.92.92,0,0,1,.183.558c0,.246,0,.469-.222.626a.942.942,0,0,1-.524.114\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M12.456,4.444c-.111,0-.219.008-.295.011l-.235.006h-.78v4.8h.918a2.677,2.677,0,0,0,1.028-.175,1.71,1.71,0,0,0,.68-.491,1.939,1.939,0,0,0,.373-.749,3.728,3.728,0,0,0,.114-.949,4.416,4.416,0,0,0-.087-1.127,1.777,1.777,0,0,0-.4-.733,1.63,1.63,0,0,0-.535-.4,2.413,2.413,0,0,0-.549-.178,1.282,1.282,0,0,0-.228-.017m-.182,3.937-.1,0V5.315h.013a1.062,1.062,0,0,1,.6.107,1.2,1.2,0,0,1,.324.4,1.3,1.3,0,0,1,.142.526c.009.22,0,.4,0,.549a2.926,2.926,0,0,1-.033.513,1.756,1.756,0,0,1-.169.5,1.13,1.13,0,0,1-.363.36.673.673,0,0,1-.416.106\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M17.353,4.461h-2.43v4.8h1.028V7.357h1.3V6.465h-1.3V5.353h1.4V4.461\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ImageIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M14.2639 15.9375L12.5958 14.2834C11.7909 13.4851 11.3884 13.086 10.9266 12.9401C10.5204 12.8118 10.0838 12.8165 9.68048 12.9536C9.22188 13.1095 8.82814 13.5172 8.04068 14.3326L4.04409 18.2801M14.2639 15.9375L14.6053 15.599C15.4112 14.7998 15.8141 14.4002 16.2765 14.2543C16.6831 14.126 17.12 14.1311 17.5236 14.2687C17.9824 14.4251 18.3761 14.8339 19.1634 15.6514L20 16.4934M14.2639 15.9375L18.275 19.9565M18.275 19.9565C17.9176 20 17.4543 20 16.8 20H7.2C6.07989 20 5.51984 20 5.09202 19.782C4.71569 19.5903 4.40973 19.2843 4.21799 18.908C4.12796 18.7313 4.07512 18.5321 4.04409 18.2801M18.275 19.9565C18.5293 19.9256 18.7301 19.8727 18.908 19.782C19.2843 19.5903 19.5903 19.2843 19.782 18.908C20 18.4802 20 17.9201 20 16.8V16.4934M4.04409 18.2801C4 17.9221 4 17.4575 4 16.8V7.2C4 6.0799 4 5.51984 4.21799 5.09202C4.40973 4.71569 4.71569 4.40973 5.09202 4.21799C5.51984 4 6.07989 4 7.2 4H16.8C17.9201 4 18.4802 4 18.908 4.21799C19.2843 4.40973 19.5903 4.71569 19.782 5.09202C20 5.51984 20 6.0799 20 7.2V16.4934M17 8.99989C17 10.1045 16.1046 10.9999 15 10.9999C13.8954 10.9999 13 10.1045 13 8.99989C13 7.89532 13.8954 6.99989 15 6.99989C16.1046 6.99989 17 7.89532 17 8.99989Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function AudioIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M4.15838 13.9306C3.44537 12.7423 3.44537 11.2577 4.15838 10.0694C4.37596 9.70674 4.73641 9.45272 5.1511 9.36978L6.84413 9.03117C6.94499 9.011 7.03591 8.95691 7.10176 8.87788L9.17085 6.39498C10.3534 4.97592 10.9447 4.26638 11.4723 4.45742C12 4.64846 12 5.57207 12 7.41928L12 16.5807C12 18.4279 12 19.3515 11.4723 19.5426C10.9447 19.7336 10.3534 19.0241 9.17085 17.605L7.10176 15.1221C7.03591 15.0431 6.94499 14.989 6.84413 14.9688L5.1511 14.6302C4.73641 14.5473 4.37596 14.2933 4.15838 13.9306Z\"\n          fill=\"#222222\"\n        />\n        <Path\n          d=\"M14.5355 8.46447C15.4684 9.39732 15.9948 10.6611 16 11.9803C16.0052 13.2996 15.4888 14.5674 14.5633 15.5076\"\n          stroke=\"#222222\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <Path\n          d=\"M18.6569 6.34314C20.1494 7.83572 20.9916 9.85769 20.9999 11.9685C21.0083 14.0793 20.182 16.1078 18.7012 17.6121\"\n          stroke=\"#222222\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function OneNoteIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M8 23H32V28C32 29.1046 31.1046 30 30 30H10C8.89543 30 8 29.1046 8 28V23Z\"\n          fill=\"#5D29A1\"\n        />\n        <Rect x=\"8\" y=\"16\" width=\"24\" height=\"7\" fill=\"#7F32CC\" />\n        <Rect x=\"8\" y=\"9\" width=\"24\" height=\"7\" fill=\"#9A40D6\" />\n        <Path\n          d=\"M10 2C8.89543 2 8 2.89543 8 4V28C8 29.1046 8.89543 30 10 30H24V9H32V4C32 2.89543 31.1046 2 30 2H10Z\"\n          fill=\"url(#paint0_linear_87_7733)\"\n        />\n        <Path\n          d=\"M8 12C8 10.3431 9.34315 9 11 9H17C18.6569 9 20 10.3431 20 12V24C20 25.6569 18.6569 27 17 27H8V12Z\"\n          fill=\"#000000\"\n          fillOpacity={0.3}\n        />\n        <Rect\n          y=\"7\"\n          width=\"18\"\n          height=\"18\"\n          rx=\"2\"\n          fill=\"url(#paint1_linear_87_7733)\"\n        />\n        <Path\n          d=\"M13 21V11H10.8893V16.8286L6.9631 11H5V21H7.08118V14.9571L11.155 21H13Z\"\n          fill={Colors.white}\n        />\n        <Defs>\n          <LinearGradient\n            id=\"paint0_linear_87_7733\"\n            x1=\"8\"\n            y1=\"16\"\n            x2=\"24.5\"\n            y2=\"16\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop stop-color=\"#8C42AC\" />\n            <Stop offset=\"1\" stopColor=\"#C36DEF\" />\n          </LinearGradient>\n          <LinearGradient\n            id=\"paint1_linear_87_7733\"\n            x1=\"0\"\n            y1=\"16\"\n            x2=\"19\"\n            y2=\"16\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop stop-color=\"#44176C\" />\n            <Stop offset=\"1\" stopColor=\"#621F9C\" />\n          </LinearGradient>\n        </Defs>\n      </G>\n    </Svg>\n  );\n}\n\nexport function GraphAPILogo({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      id=\"Layer_1\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 48 48\"\n      width={width}\n      height={height}\n      style={style}\n    >\n      <G>\n        <Defs>\n          <ClipPath id=\"SVGID_2_\">\n            <Path\n              id=\"SVGID_1_\"\n              d=\"M34.9,3.2H13.1c-0.7,0-1.4,0.4-1.8,1L0.5,23c-0.4,0.6-0.4,1.4,0,2.1l10.9,18.7c0.4,0.6,1.1,1,1.8,1h21.7c0.7,0,1.4-0.4,1.8-1L47.5,25c0.4-0.6,0.4-1.4,0-2.1L36.7,4.3C36.3,3.6,35.6,3.2,34.9,3.2z\"\n            />\n          </ClipPath>\n        </Defs>\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.3,3.1 15.6,11.1 35.4,3.1\"\n        />\n        <Polygon\n          fill=\"#0078D4\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.3,3.1 15.6,11.1 0.2,23.3 0.2,3.1\"\n        />\n        <Polygon\n          fill=\"#0364B8\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"-0.8,24 15.6,11.1 16.5,37.1\"\n        />\n        <Polygon\n          fill=\"#14447D\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"-0.8,24 16.5,37.1 11.5,44.8 0.2,45.2\"\n        />\n        <Polygon\n          fill=\"#0F335E\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.5,44.8 16.5,37.1 36.2,45.2\"\n        />\n        <Polygon\n          fill=\"#0364B8\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"16.5,37.1 36.7,24 36.2,45.2\"\n        />\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"16.5,37.1 15.6,11.1 36.7,24\"\n        />\n        <Polygon\n          fill=\"#50D9FF\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"15.6,11.1 36.2,2.8 36.7,24\"\n        />\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"36.7,24 36.2,2.8 48.1,3.1 48.1,24\"\n        />\n        <Polygon\n          fill=\"#0078D4\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"36.7,24 36.2,45.9 47.5,45.9 48.1,24\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function StudentSearchIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M18.5 19.5L20 21M11 21H5.6C5.03995 21 4.75992 21 4.54601 20.891C4.35785 20.7951 4.20487 20.6422 4.10899 20.454C4 20.2401 4 19.9601 4 19.4V17.6841C4 17.0485 4 16.7306 4.04798 16.4656C4.27087 15.2344 5.23442 14.2709 6.46558 14.048C6.5425 14.0341 6.6237 14.0242 6.71575 14.0172C6.94079 14 7.05331 13.9914 7.20361 14.0026C7.35983 14.0143 7.4472 14.0297 7.59797 14.0722C7.74302 14.1131 8.00429 14.2315 8.52682 14.4682C9.13692 14.7446 9.8015 14.9218 10.5 14.9795M19 17.5C19 18.8807 17.8807 20 16.5 20C15.1193 20 14 18.8807 14 17.5C14 16.1193 15.1193 15 16.5 15C17.8807 15 19 16.1193 19 17.5ZM15 7C15 9.20914 13.2091 11 11 11C8.79086 11 7 9.20914 7 7C7 4.79086 8.79086 3 11 3C13.2091 3 15 4.79086 15 7Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function TimeIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M12 6V12\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M16.24 16.24L12 12\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function TrashIcon({\n  width,\n  height,\n  style,\n  props,\n  color,\n}: colorIconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M4 6H20L18.4199 20.2209C18.3074 21.2337 17.4512 22 16.4321 22H7.56786C6.54876 22 5.69264 21.2337 5.5801 20.2209L4 6Z\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M7.34491 3.14716C7.67506 2.44685 8.37973 2 9.15396 2H14.846C15.6203 2 16.3249 2.44685 16.6551 3.14716L18 6H6L7.34491 3.14716Z\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M2 6H22\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M10 11V16\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M14 11V16\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function OfflineIcon({\n  width,\n  height,\n  style,\n  props,\n  color,\n}: colorIconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G>\n        <Path\n          d=\"M1.33309 8.07433C0.92156 8.44266 0.886539 9.07485 1.25487 9.48638C1.62319 9.89791 2.25539 9.93293 2.66691 9.5646L1.33309 8.07433ZM21.3331 9.5646C21.7446 9.93293 22.3768 9.89791 22.7451 9.48638C23.1135 9.07485 23.0784 8.44266 22.6669 8.07433L21.3331 9.5646ZM12 19C11.4477 19 11 19.4477 11 20C11 20.5523 11.4477 21 12 21V19ZM12.01 21C12.5623 21 13.01 20.5523 13.01 20C13.01 19.4477 12.5623 19 12.01 19V21ZM14.6905 17.04C15.099 17.4116 15.7315 17.3817 16.1031 16.9732C16.4748 16.5646 16.4448 15.9322 16.0363 15.5605L14.6905 17.04ZM18.0539 13.3403C18.4624 13.7119 19.0949 13.682 19.4665 13.2734C19.8381 12.8649 19.8082 12.2324 19.3997 11.8608L18.0539 13.3403ZM7.96372 15.5605C7.55517 15.9322 7.52524 16.5646 7.89687 16.9732C8.2685 17.3817 8.90095 17.4116 9.3095 17.04L7.96372 15.5605ZM4.60034 11.8608C4.19179 12.2324 4.16185 12.8649 4.53348 13.2734C4.90511 13.682 5.53756 13.7119 5.94611 13.3403L4.60034 11.8608ZM10.5705 4.06305C10.0204 4.1118 9.61391 4.59729 9.66266 5.14741C9.71141 5.69754 10.1969 6.10399 10.747 6.05525L10.5705 4.06305ZM17.3393 10.3798C16.8567 10.1114 16.2478 10.285 15.9794 10.7677C15.711 11.2504 15.8847 11.8593 16.3673 12.1277L17.3393 10.3798ZM3.70711 2.29289C3.31658 1.90237 2.68342 1.90237 2.29289 2.29289C1.90237 2.68342 1.90237 3.31658 2.29289 3.70711L3.70711 2.29289ZM20.2929 21.7071C20.6834 22.0976 21.3166 22.0976 21.7071 21.7071C22.0976 21.3166 22.0976 20.6834 21.7071 20.2929L20.2929 21.7071ZM12 6C15.5863 6 18.8556 7.34716 21.3331 9.5646L22.6669 8.07433C19.8369 5.54138 16.0972 4 12 4V6ZM12 21H12.01V19H12V21ZM12 16C13.0367 16 13.9793 16.3931 14.6905 17.04L16.0363 15.5605C14.9713 14.5918 13.5536 14 12 14V16ZM9.3095 17.04C10.0207 16.3931 10.9633 16 12 16V14C10.4464 14 9.02872 14.5918 7.96372 15.5605L9.3095 17.04ZM10.747 6.05525C11.1596 6.01869 11.5775 6 12 6V4C11.5185 4 11.0417 4.0213 10.5705 4.06305L10.747 6.05525ZM16.3673 12.1277C16.9757 12.466 17.5412 12.874 18.0539 13.3403L19.3997 11.8608C18.7751 11.2927 18.0844 10.7941 17.3393 10.3798L16.3673 12.1277ZM2.29289 3.70711L5.46648 6.8807L6.8807 5.46648L3.70711 2.29289L2.29289 3.70711ZM2.66691 9.5646C3.81213 8.53961 5.12648 7.70074 6.56232 7.09494L5.78486 5.25224C4.14251 5.94517 2.64069 6.904 1.33309 8.07433L2.66691 9.5646ZM5.46648 6.8807L9.46042 10.8746L10.8746 9.46042L6.8807 5.46648L5.46648 6.8807ZM9.46042 10.8746L20.2929 21.7071L21.7071 20.2929L10.8746 9.46042L9.46042 10.8746ZM5.94611 13.3403C7.15939 12.2367 8.67355 11.4612 10.3496 11.1508L9.98543 9.18424C7.93271 9.5644 6.08108 10.5139 4.60034 11.8608L5.94611 13.3403Z\"\n          fill={color || Colors.black}\n        />\n      </G>\n    </Svg>\n  );\n}\n\n// Text Icons https://www.svgrepo.com/collection/ui-and-text-editing-icons/\nexport function BoldIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          d=\"M16.5,14H11V9h5.5c1.4,0,2.5,1.1,2.5,2.5v0C19,12.9,17.9,14,16.5,14z\"\n        />\n        <Path\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          d=\"M18.5,23H11v-5h7.5c1.4,0,2.5,1.1,2.5,2.5v0C21,21.9,19.9,23,18.5,23z\"\n        />\n        <Path\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          d=\"M22,15c0.7-1,1-2.2,1-3.5C23,7.9,20.1,5,16.5,5h-1h-1H7v22h7.5h1h3c3.6,0,6.5-2.9,6.5-6.5 C25,18.2,23.8,16.2,22,15z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ItalicIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Italic_Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"10\"\n          y1=\"27\"\n          x2=\"18\"\n          y2=\"27\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"14\"\n          y1=\"5\"\n          x2=\"22\"\n          y2=\"5\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"14\"\n          y1=\"27\"\n          x2=\"18\"\n          y2=\"5\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function StrikeThroughIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"7\"\n          y1=\"16\"\n          x2=\"26\"\n          y2=\"16\"\n        />\n        <Path\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          d=\"M11,21.5c0,3,2.5,5.5,5.5,5.5s5.5-2.5,5.5-5.5S19.5,16,16.5,16S11,13.5,11,10.5S13.5,5,16.5,5S22,7.5,22,10.5\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function UnderlineIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"28\"\n          x2=\"29\"\n          y2=\"28\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"5\"\n          y1=\"23\"\n          x2=\"9\"\n          y2=\"23\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"23\"\n          y1=\"23\"\n          x2=\"27\"\n          y2=\"23\"\n        />\n        <Polyline\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          points=\"7,23 16,4 25,23 \"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"10\"\n          y1=\"17\"\n          x2=\"22\"\n          y2=\"17\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function RightAlignmentIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"29\"\n          y1=\"4\"\n          x2=\"13\"\n          y2=\"4\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"29\"\n          y1=\"10\"\n          x2=\"3\"\n          y2=\"10\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"29\"\n          y1=\"16\"\n          x2=\"13\"\n          y2=\"16\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"29\"\n          y1=\"22\"\n          x2=\"3\"\n          y2=\"22\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"29\"\n          y1=\"28\"\n          x2=\"13\"\n          y2=\"28\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function LeftAlignmentIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"4\"\n          x2=\"19\"\n          y2=\"4\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"10\"\n          x2=\"29\"\n          y2=\"10\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"16\"\n          x2=\"19\"\n          y2=\"16\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"22\"\n          x2=\"29\"\n          y2=\"22\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"28\"\n          x2=\"19\"\n          y2=\"28\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function CenterAlignmentIcon({\n  width,\n  height,\n  style,\n  props,\n}: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"8\"\n          y1=\"4\"\n          x2=\"24\"\n          y2=\"4\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"10\"\n          x2=\"29\"\n          y2=\"10\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"8\"\n          y1=\"16\"\n          x2=\"24\"\n          y2=\"16\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"22\"\n          x2=\"29\"\n          y2=\"22\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"8\"\n          y1=\"28\"\n          x2=\"24\"\n          y2=\"28\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\n// function MessagingIcon() {\n//     return (\n//         <Svg  viewBox=\"0 0 498.000000 268.000000\"preserveAspectRatio=\"xMidYMid meet\">\n//             <G transform=\"translate(0.000000,268.000000) scale(0.100000,-0.100000)\" fill=\"#000000\" stroke=\"none\">\n//                 <Path d=\"M1140 2481 c-50 -16 -89 -41 -128 -86 -74 -84 -72 -67 -72 -730 l0\n//                 -591 -30 -45 c-16 -24 -54 -73 -84 -109 -64 -75 -116 -196 -116 -266 0 -104\n//                 50 -147 187 -160 95 -9 158 8 246 66 115 76 187 148 232 234 l40 76 438 0 437\n//                 0 0 -95 c0 -150 47 -241 154 -298 41 -22 45 -22 791 -27 l750 -5 100 -69 c55\n//                 -37 108 -75 117 -83 25 -22 144 -53 205 -53 47 0 58 4 92 36 44 39 66 91 57\n//                 130 -8 29 -67 124 -89 143 -9 7 -30 35 -48 63 l-32 50 2 466 c2 537 2 540 -76\n//                 623 -82 87 -92 89 -533 89 l-380 0 0 210 c0 250 -9 289 -89 363 -87 81 -23 77\n//                 -1150 76 -548 0 -1007 -4 -1021 -8z m2051 -164 c18 -12 39 -34 46 -47 18 -36\n//                 18 -1144 0 -1180 -7 -13 -28 -35 -46 -47 l-34 -23 -857 0 -857 0 -63 -32 c-34\n//                 -18 -70 -44 -78 -58 -59 -96 -89 -134 -150 -191 -73 -70 -158 -119 -204 -119\n//                 -40 0 -94 25 -107 48 -17 31 -13 81 8 116 11 17 55 63 98 102 55 50 87 89 108\n//                 130 l30 59 5 596 c5 651 2 612 65 651 29 17 77 18 1016 18 l986 0 34 -23z\n//                 m986 -647 c64 -38 63 -33 63 -527 0 -518 -11 -463 118 -598 63 -65 72 -80 72\n//                 -112 0 -50 -32 -83 -79 -83 -45 0 -104 38 -161 105 -59 69 -104 102 -164 122\n//                 -46 16 -125 18 -782 23 -714 5 -732 5 -754 25 -39 36 -50 69 -50 160 l0 86 62\n//                 -3 61 -3 1 -55 1 -55 738 -3 737 -2 0 75 0 75 -390 0 -389 0 49 46 c85 80 90\n//                 103 90 449 l0 295 373 0 c351 0 374 -1 404 -20z\"/>\n//                 <Path d=\"M1470 1945 l0 -75 715 0 715 0 0 75 0 75 -715 0 -715 0 0 -75z\"/>\n//                 <Path d=\"M1460 1605 l0 -75 430 0 430 0 0 75 0 75 -430 0 -430 0 0 -75z\"/>\n//                 <Path d=\"M2580 1605 l0 -75 160 0 160 0 0 75 0 75 -160 0 -160 0 0 -75z\"/>\n//                 <Path d=\"M1720 1285 l0 -75 650 0 650 0 0 75 0 75 -650 0 -650 0 0 -75z\"/>\n//                 <Path d=\"M3460 1495 l0 -75 290 0 290 0 0 75 0 75 -290 0 -290 0 0 -75z\"/>\n//                 <Path d=\"M3510 1155 l0 -75 155 0 155 0 0 75 0 75 -155 0 -155 0 0 -75z\"/>\n//                 <Path d=\"M3900 1155 l0 -75 65 0 65 0 0 75 0 75 -65 0 -65 0 0 -75z\"/>\n//             </G>\n//         </Svg>\n//     )\n// }\n","import { StyleSheet, ViewStyle } from 'react-native';\nimport React, { useEffect } from 'react';\nimport Svg, { G, Path } from 'react-native-svg';\nimport Animated, {\n  interpolateColor,\n  useAnimatedProps,\n  useSharedValue,\n  withDelay,\n  withRepeat,\n  withTiming,\n} from 'react-native-reanimated';\n\n// \"M7.706 0.290 C 7.484 0.362,7.356 0.490,7.294 0.699 C 7.259 0.816,7.253 1.088,7.253 2.508 C 7.253 4.389,7.251 4.365,7.443 4.557 C 7.700 4.813,8.300 4.813,8.557 4.557 C 8.749 4.365,8.747 4.389,8.747 2.508 C 8.747 0.688,8.744 0.656,8.596 0.480 C 8.472 0.333,8.339 0.284,8.040 0.276 C 7.893 0.272,7.743 0.278,7.706 0.290\"\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\n\nfunction ChipView({ d, index }: { d: string; index: number }) {\n  const progress = useSharedValue(0);\n  useEffect(() => {\n    progress.value = withDelay(\n      ((index + 1) / 8) * 1000,\n      withRepeat(withTiming(1, { duration: 500 }), 0, true),\n    );\n  }, []);\n  const animatedProp = useAnimatedProps(() => {\n    return {\n      fill: interpolateColor(progress.value, [0, 1], ['white', '#69717d']),\n    };\n  });\n\n  return (\n    <AnimatedPath\n      key={`Chip_Key_${index}`}\n      id={`Chip_${index}`}\n      d={d}\n      stroke=\"none\"\n      translate={[0]}\n      fillRule=\"evenodd\"\n      animatedProps={animatedProp}\n    />\n  );\n}\n\nexport default function ProgressView({\n  width,\n  height,\n  style,\n}: {\n  width: number;\n  height: number;\n  style?: ViewStyle;\n}) {\n  const paths = [\n    'M7.706 0.290 C 7.484 0.362,7.356 0.490,7.294 0.699 C 7.259 0.816,7.253 1.088,7.253 2.508 C 7.253 4.389,7.251 4.365,7.443 4.557 C 7.700 4.813,8.300 4.813,8.557 4.557 C 8.749 4.365,8.747 4.389,8.747 2.508 C 8.747 0.688,8.744 0.656,8.596 0.480 C 8.472 0.333,8.339 0.284,8.040 0.276 C 7.893 0.272,7.743 0.278,7.706 0.290',\n    'M2.753 2.266 C 2.595 2.338,2.362 2.566,2.281 2.728 C 2.197 2.897,2.193 3.085,2.269 3.253 C 2.343 3.418,4.667 5.750,4.850 5.843 C 5.109 5.976,5.375 5.911,5.643 5.649 C 5.907 5.391,5.977 5.111,5.843 4.850 C 5.750 4.667,3.418 2.343,3.253 2.269 C 3.101 2.200,2.901 2.199,2.753 2.266',\n    'M0.699 7.292 C 0.404 7.385,0.258 7.620,0.258 7.999 C 0.259 8.386,0.403 8.618,0.698 8.706 C 0.816 8.741,1.079 8.747,2.508 8.747 C 3.997 8.747,4.196 8.742,4.318 8.702 C 4.498 8.644,4.644 8.498,4.702 8.318 C 4.788 8.053,4.745 7.677,4.608 7.491 C 4.578 7.451,4.492 7.384,4.417 7.343 L 4.280 7.267 2.547 7.261 C 1.152 7.257,0.791 7.263,0.699 7.292',\n    'M4.853 10.282 C 4.730 10.339,4.520 10.536,3.518 11.541 C 2.597 12.464,2.316 12.762,2.271 12.860 C 2.195 13.025,2.196 13.216,2.272 13.378 C 2.342 13.528,2.572 13.764,2.727 13.845 C 2.884 13.927,3.117 13.926,3.280 13.843 C 3.447 13.757,5.757 11.447,5.843 11.280 C 5.926 11.118,5.927 10.884,5.846 10.729 C 5.764 10.572,5.552 10.364,5.392 10.283 C 5.213 10.192,5.048 10.192,4.853 10.282',\n    'M7.745 11.277 C 7.620 11.309,7.451 11.412,7.392 11.492 C 7.254 11.678,7.253 11.691,7.253 13.489 C 7.253 14.921,7.259 15.184,7.294 15.302 C 7.382 15.597,7.615 15.741,8.000 15.741 C 8.385 15.741,8.618 15.597,8.706 15.302 C 8.768 15.090,8.767 11.875,8.704 11.690 C 8.644 11.514,8.575 11.430,8.420 11.346 C 8.310 11.286,8.246 11.271,8.057 11.264 C 7.930 11.259,7.790 11.265,7.745 11.277',\n    'M10.753 10.266 C 10.595 10.338,10.362 10.566,10.281 10.728 C 10.197 10.897,10.193 11.085,10.269 11.253 C 10.343 11.418,12.667 13.750,12.850 13.843 C 13.109 13.976,13.375 13.911,13.643 13.649 C 13.907 13.391,13.977 13.111,13.843 12.850 C 13.750 12.667,11.418 10.343,11.253 10.269 C 11.101 10.200,10.901 10.199,10.753 10.266',\n    'M11.745 7.278 C 11.622 7.308,11.452 7.411,11.392 7.492 C 11.255 7.677,11.212 8.053,11.298 8.318 C 11.356 8.498,11.502 8.644,11.682 8.702 C 11.804 8.742,12.003 8.747,13.492 8.747 C 14.921 8.747,15.184 8.741,15.302 8.706 C 15.597 8.618,15.741 8.386,15.742 7.999 C 15.742 7.614,15.595 7.383,15.290 7.291 C 15.187 7.260,14.864 7.254,13.496 7.256 C 12.578 7.258,11.790 7.268,11.745 7.278',\n    'M12.853 2.282 C 12.730 2.339,12.520 2.536,11.518 3.541 C 10.597 4.464,10.316 4.762,10.271 4.860 C 10.195 5.025,10.196 5.216,10.272 5.378 C 10.342 5.528,10.572 5.764,10.727 5.845 C 10.884 5.927,11.117 5.926,11.280 5.843 C 11.447 5.757,13.757 3.447,13.843 3.280 C 13.926 3.118,13.927 2.884,13.846 2.729 C 13.764 2.572,13.552 2.364,13.392 2.283 C 13.213 2.192,13.048 2.192,12.853 2.282',\n  ];\n\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        {paths.map((path, index) => (\n          <ChipView key={`Chip_Key_Holder_${index}`} d={path} index={index} />\n        ))}\n      </G>\n    </Svg>\n  );\n}","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { View, Text, Pressable, Image } from 'react-native';\nimport React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { RootState } from './Redux/store';\nimport { safeAreaColorsSlice } from './Redux/reducers/safeAreaColorsReducer';\nimport { GearIcon } from './UI/Icons/Icons';\nimport { Colors } from './types';\nimport ProgressView from './UI/ProgressView';\n\nexport default function Login({\n  onGetAuthToken,\n  onGetGovernmentAuthToken,\n  width,\n  isLoading,\n}: {\n  onGetAuthToken: () => void;\n  onGetGovernmentAuthToken: () => void;\n  width: number;\n  isLoading: boolean;\n}) {\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const [isBottonHover, setIsButtonHover] = useState<boolean>(false);\n  const [isGovernmentHover, setIsGovernmentHover] = useState<boolean>(false);\n  const [fontSize, setFontSize] = useState<number>(0);\n  const [isShowingGovernmentLogin, setIsShowingGovernmentLogin] =\n    useState<boolean>(false);\n  const insets = useSafeAreaInsets();\n  const dispatch = useDispatch();\n\n  const safeArea = useCallback(\n    async function setSafeAreaColors() {\n      dispatch(safeAreaColorsSlice.actions.setSafeAreaColorTop(Colors.maroon));\n      dispatch(\n        safeAreaColorsSlice.actions.setSafeAreaColorBottom(Colors.maroon),\n      );\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    safeArea();\n  }, [safeArea]);\n\n  useEffect(() => {\n    const heightIsGreater: boolean = width < height;\n    if (heightIsGreater) {\n      setFontSize(width / 4);\n    } else {\n      setFontSize(height / 3);\n    }\n  }, [height, width]);\n  // Font\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../assets/fonts/BukhariScript.ttf'),\n    'Gochi Hand': require('../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      style={{\n        backgroundColor: Colors.maroon,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height,\n        width,\n        overflow: 'hidden',\n        top: -insets.top,\n      }}\n      onLongPress={() => {\n        setIsShowingGovernmentLogin(true);\n      }}\n      delayLongPress={5000}\n    >\n      <View\n        id=\"Content_Area\"\n        style={{\n          width: width < height ? width : height,\n          height: width < height ? width : height,\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}\n      >\n        <View\n          style={{\n            width: fontSize * 1.65,\n            height: fontSize,\n            flexDirection: 'row',\n          }}\n          id=\"Text_Container\"\n        >\n          <Image\n            source={require('../assets/images/PaulyLogo.png')}\n            resizeMode=\"contain\"\n            style={{\n              width: fontSize,\n              height: fontSize,\n              position: 'absolute',\n              left: -fontSize * 0.2,\n            }}\n          />\n          <Text\n            style={{\n              position: 'absolute',\n              left: fontSize * 0.5,\n              top: fontSize * 0.22,\n              fontFamily: 'Gochi Hand',\n              fontSize: fontSize - fontSize / 3,\n              textShadowColor: 'rgba(0, 0, 0, 1)',\n              textShadowOffset: { width: 4, height: 5 },\n              textShadowRadius: 0,\n              color: Colors.white,\n            }}\n            selectable={false}\n          >\n            auly\n          </Text>\n        </View>\n        <Text\n          style={{ color: 'white', marginTop: 25, fontFamily: 'BukhariScript' }}\n        >\n          23/24 Saint Paul's High School Student Council\n        </Text>\n        <Pressable\n          onPress={async () => {\n            onGetAuthToken();\n          }}\n          onHoverIn={() => {\n            setIsButtonHover(true);\n          }}\n          onHoverOut={() => {\n            setIsButtonHover(false);\n          }}\n          style={{\n            height: height * 0.09,\n            width: width * 0.5,\n            borderRadius: 50,\n            backgroundColor: isBottonHover ? Colors.darkGray : Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            shadowColor: isBottonHover ? Colors.white : 'black',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n            marginTop: width < height ? width * 0.05 : height * 0.05,\n          }}\n        >\n          {isLoading ? (\n            <ProgressView width={14} height={14} />\n          ) : (\n            <Text\n              style={{\n                textAlign: 'center',\n                color: isBottonHover ? Colors.white : 'black',\n                fontWeight: 'bold',\n              }}\n            >\n              LOGIN\n            </Text>\n          )}\n        </Pressable>\n        {isShowingGovernmentLogin ? (\n          <Pressable\n            onPress={async () => {\n              onGetGovernmentAuthToken();\n            }}\n            onHoverIn={() => {\n              setIsGovernmentHover(true);\n            }}\n            onHoverOut={() => {\n              setIsGovernmentHover(false);\n            }}\n            style={{\n              height: height * 0.09,\n              width: width * 0.5,\n              borderRadius: 50,\n              backgroundColor: isGovernmentHover\n                ? Colors.darkGray\n                : Colors.white,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              shadowColor: isBottonHover ? Colors.white : 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              marginTop: width < height ? width * 0.1 : height * 0.1,\n              flexDirection: 'row',\n            }}\n          >\n            <GearIcon width={18} height={18} />\n            <Text\n              style={{\n                textAlign: 'center',\n                color: isBottonHover ? Colors.white : 'black',\n                fontWeight: 'bold',\n              }}\n            >\n              LOGIN AS ADMIN\n            </Text>\n          </Pressable>\n        ) : null}\n      </View>\n      <Text\n        style={{\n          position: 'absolute',\n          bottom: 4,\n          fontSize: height * 0.02,\n          fontFamily: 'Roboto',\n          color: Colors.white,\n        }}\n      >\n        A.M.D.G\n      </Text>\n    </Pressable>\n  );\n}\n","// July 21 2023\n// Andrew Mainella\n// Calendar functions\n\nexport function getDaysInMonth(input: Date): number {\n  const d = new Date();\n  d.setFullYear(input.getFullYear(), input.getMonth() + 1, 0);\n  return d.getDate();\n}\n\nexport function getDay(value: number, startdate: number): number | undefined {\n  let offset: number = 0;\n  const let1: number = value / 5.0;\n  const let2: number = Math.floor(let1);\n  const let4: number = let2 * 2;\n  offset += let4;\n  const result: number = value - startdate + 2 + offset;\n  const month = new Date();\n  const d = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n  const DayInt = d.getDate();\n  if (result >= DayInt + 1) {\n    return undefined;\n  }\n  return result;\n}\n\nexport function findFirstDayinMonth(currentTime: Date): number {\n  const year = currentTime.getFullYear();\n  const month = currentTime.getMonth();\n  const weekDay = new Date(year, month).getDay();\n  return weekDay;\n  // Returns a which weekday day is the first day of the month.\n  // Sunday is 0, Saturday is 6\n}\n\nexport function isDateToday(dateToCheck: Date) {\n  // Get today's date\n  const today = new Date();\n\n  // Compare the components of the dateToCheck with today's date\n  const isSameDate =\n    dateToCheck.getDate() === today.getDate() &&\n    dateToCheck.getMonth() === today.getMonth() &&\n    dateToCheck.getFullYear() === today.getFullYear();\n\n  // Return true if the dateToCheck is today, otherwise return false\n  return isSameDate;\n}\n\n// July 17 2023\n// Andrew Mainella\n//\n// Converting a year to a school year.\n// The year converted is the year of the graduating class\n//\n// For example 2024 would return 2023-2024\n\nexport function convertYearToSchoolYear(year: number) {\n  return `${year - 1}-${year}`;\n}\n\nexport function calculateIfShowing(value: string, Time: Date): boolean {\n  // TO DO shorten\n  if (isDateToday(Time)) {\n    const hourInt = Time.getHours();\n    const minuiteInt = Time.getMinutes();\n    if (minuiteInt + 15 >= 60) {\n      let resepctiveTime: string = `${hourInt > 12}`\n        ? (hourInt - 12).toString()\n        : hourInt.toString();\n      resepctiveTime += hourInt > 12 ? 'PM' : 'AM';\n      if (resepctiveTime === value) {\n        return false;\n      }\n      return true;\n    }\n    if (minuiteInt - 15 <= 0) {\n      let resepctiveTime: string = `${hourInt > 12}`\n        ? (hourInt - 12).toString()\n        : hourInt.toString();\n      resepctiveTime += hourInt > 12 ? 'PM' : 'AM';\n      if (resepctiveTime === value) {\n        return false;\n      }\n      return true;\n    }\n    return true;\n  }\n  return true;\n}\n\nexport function findTimeOffset(time: Date, height: number): number {\n  const hourWidth = height * 0.1;\n  const minutieWidth = (height * 0.1) / 60;\n  const hourInt = time.getHours();\n  const minuiteInt = time.getMinutes();\n  const returnOffset = hourWidth * hourInt + minutieWidth * minuiteInt;\n  return returnOffset;\n}\n\n// Ryan was here April 13, 2023\n// Andrew was here April 13, 2023\n\nexport function computeEventHeight(\n  fromDate: Date,\n  toDate: Date,\n  height: number,\n): number {\n  let delta = toDate.getTime() - fromDate.getTime();\n  if (delta >= 86400000) {\n    delta = 86400000;\n  }\n\n  const deltaHours = delta / 3600000;\n  const deltaRemaining = delta % 3600000;\n  const deltaMinutes = deltaRemaining / 60;\n\n  const HourHeight = height * 0.1;\n  const MinuteHeight = (height * 0.1) / 60;\n\n  const ReturnOffset = HourHeight * deltaHours + MinuteHeight * deltaMinutes;\n  return ReturnOffset;\n}\n\nfunction getHorizontalOffset() {}\n","/*\n  Andrew Mainella\n  21 October 2023\n  Pauly\n  See README.md for more information about the setup process and what to put in each of these values\n*/\n// The org wide group id is the id of a group (teams) that every user is apart of.\n// This allows pauly to access calendar information that is common (an event that is set out by admin) among users.\n\nexport const orgWideGroupID: string = 'd2c0dd90-a426-4539-882c-aa87e5787a92';\n\nexport const tenantId: string = '551df04d-543a-4d61-955e-e4294c4cf950';\nexport const clientId: string = '08624b03-1aa6-40c4-8fb3-149c39026dff';\n\nexport const domainName: string = '@8td1tk.onmicrosoft.com';\nexport const paulyDomain: string =\n  'https://polite-plant-0871d590f.4.azurestaticapps.net';\n\n// DO NOT CHANGE SCOPES\n// See README.md for more imformation about the scopes.\nexport const scopes = [\n  'User.Read',\n  'User.ReadBasic.All',\n  'Sites.Read.All',\n  'Sites.Manage.All',\n  'ChannelMessage.Read.All',\n  'Chat.ReadWrite',\n  'Calendars.ReadWrite',\n  'Team.ReadBasic.All',\n  'Group.ReadWrite.All',\n  'Tasks.ReadWrite',\n  'Channel.ReadBasic.All',\n  'Application.ReadWrite.All',\n  'TeamMember.Read.All',\n];\n\nexport const youtubeDataKey = 'AIzaSyCO1po5qtWDKRQ7koQd07Xo6u13Yp-hPEE';\n\nexport const youtubeUploadsId = 'UU8HbRWjbR0xjOeE6OlQ1sLA';\n\nexport const raindropToken = '8ea167d6-0792-4b10-a3a1-e8571743c3e6';\n","import { Platform } from 'react-native';\nimport store from '../../Redux/store';\nimport { authenticationCallSlice } from '../../Redux/reducers/authenticationCallReducer';\n\nexport default async function callMsGraph(\n  url: string,\n  method?: 'GET' | 'POST' | 'PATCH' | 'DELETE' | 'PUT',\n  body?: string | Blob,\n  headersIn?: { key: string; value: string }[],\n  secondAuth?: boolean,\n): Promise<Response> {\n  const headers: Headers = new Headers();\n  const bearer = `Bearer ${store.getState().authenticationToken}`;\n\n  headers.append('Authorization', bearer);\n  headers.append('Content-Type', 'application/json');\n\n  if (headersIn !== undefined) {\n    for (\n      let headerIndex = 0;\n      headerIndex < headersIn.length;\n      headerIndex += 1\n    ) {\n      headers.append(headersIn[headerIndex].key, headersIn[headerIndex].value);\n    }\n  }\n\n  const options = {\n    method: method || 'GET',\n    headers,\n    body,\n  };\n\n  let outUrl = url;\n\n  if (Platform.OS !== 'web') {\n    const urlArray = url.split('%20');\n    outUrl = '';\n    for (let index = 0; index < urlArray.length; index += 1) {\n      if (index !== 0) {\n        outUrl += ` ${urlArray[index]}`;\n      } else {\n        outUrl += urlArray[index];\n      }\n    }\n  }\n\n  const response = await fetch(outUrl, options);\n  if (response.status === 401) {\n    if (secondAuth === undefined) {\n      store.dispatch(\n        authenticationCallSlice.actions.setAuthenticationCallIncrement(),\n      );\n      const previousValue: string = store.getState().authenticationToken;\n      return new Promise(resolve => {\n        const unsubscribe = store.subscribe(async () => {\n          const newValue = store.getState().authenticationToken;\n          if (newValue !== previousValue) {\n            const result = await callMsGraph(\n              url,\n              method,\n              body,\n              headersIn,\n              true,\n            );\n            resolve(result);\n            unsubscribe(); // Unsubscribe after getting the new result\n          }\n        });\n      });\n    }\n    return response;\n  }\n  return response;\n}\n","import { loadingStateEnum } from '../../types';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function largeBatch(\n  defaultBatchData?: { id: string; method: 'GET' | 'POST'; url: string }[][],\n  createData?: {\n    firstUrl: string;\n    secondUrl: string;\n    keys: { array?: string[]; map?: Map<string, unknown> };\n    method: 'GET' | 'POST';\n  },\n): Promise<{ result: loadingStateEnum; data?: batchResponseType[] }> {\n  let data: { id: string; method: 'GET' | 'POST'; url: string }[][] = [];\n  if (defaultBatchData) {\n    data = defaultBatchData;\n  } else if (createData) {\n    let batchIndex = 0;\n    if (createData.keys.array !== undefined) {\n      for (\n        let createDataIndex = 0;\n        createDataIndex < createData.keys.array.length;\n        createDataIndex += 1\n      ) {\n        if (batchIndex >= data.length) {\n          data.push([]);\n        }\n        data[batchIndex].push({\n          id: (createDataIndex + 1).toString(),\n          method: createData.method,\n          url: `${createData.firstUrl}${createData.keys.array[createDataIndex]}${createData.secondUrl}`,\n        });\n        if (createDataIndex % 19 === 0) {\n          batchIndex += 1;\n        }\n      }\n    } else if (createData.keys.map !== undefined) {\n      const createDataIndexMap = 0;\n      createData.keys.map.forEach((value, key) => {\n        if (batchIndex >= data.length) {\n          data.push([]);\n        }\n        data[batchIndex].push({\n          id: (createDataIndexMap + 1).toString(),\n          method: createData.method,\n          url: `${createData.firstUrl}${key}${createData.secondUrl}`,\n        });\n        if (createDataIndexMap % 19 === 0) {\n          batchIndex += 1;\n        }\n      });\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const output: batchResponseType[] = [];\n  for (let index = 0; index < data.length; index += 1) {\n    const batchData = {\n      requests: data[index],\n    };\n    const result = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/$batch',\n      'POST',\n      JSON.stringify(batchData),\n      [{ key: 'Accept', value: 'application/json' }],\n    );\n    if (result.ok) {\n      const batchResultData = await result.json();\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultData.responses.length;\n        batchIndex += 1\n      ) {\n        output.push({\n          method: 'GET',\n          id: batchResultData.responses[batchIndex].id,\n          headers: batchResultData.responses[batchIndex].headers,\n          body: batchResultData.responses[batchIndex].body,\n          status: batchResultData.responses[batchIndex].status,\n        });\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: output };\n}\n","import { loadingStateEnum } from '../../types';\n\nexport default function createUUID() {\n  // let dt = new Date().getTime();\n  // const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n  //   const r = (dt + Math.random() * 16) % 16;\n  //   dt = Math.floor(dt / 16);\n  //   return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  // });\n  return crypto.randomUUID();\n}\n\n// Get text from a loadingStateEnum\nexport function getTextState(\n  state: loadingStateEnum,\n  labels?: {\n    cannotStart?: string;\n    notStarted?: string;\n    failed?: string;\n    loading?: string;\n    offline?: string;\n    success?: string;\n  },\n): string {\n  if (state === loadingStateEnum.cannotStart) {\n    return labels?.cannotStart ? labels.cannotStart : 'Cannot Start';\n  }\n  if (state === loadingStateEnum.notStarted) {\n    return labels?.notStarted ? labels.notStarted : 'Start';\n  }\n  if (state === loadingStateEnum.failed) {\n    return labels?.failed ? labels.failed : 'Failed';\n  }\n  if (state === loadingStateEnum.loading) {\n    return labels?.loading ? labels.loading : 'Loading';\n  }\n  if (state === loadingStateEnum.offline) {\n    return labels?.offline ? labels.offline : 'Offline';\n  }\n  if (state === loadingStateEnum.success) {\n    return labels?.success ? labels.success : 'Success';\n  }\n  return 'Something Went Wrong';\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getDressCode(\n  dressCodeId: string,\n): Promise<{ result: loadingStateEnum; data?: dressCodeType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeData,dressCodeIncentivesData,dressCodeName,dressCodeId)&$select=id&$filter=fields/dressCodeId%20eq%20'${dressCodeId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== 1) {\n      return { result: loadingStateEnum.failed };\n    }\n    try {\n      const dressCodeData: dressCodeDataType[] = JSON.parse(\n        data.value[0].fields.dressCodeData,\n      );\n      const dressCodeIncentivesData: dressCodeIncentiveType[] = JSON.parse(\n        data.value[0].fields.dressCodeIncentivesData,\n      );\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.dressCodeName,\n          id: data.value[0].fields.dressCodeId,\n          listId: data.value[0].id,\n          dressCodeData,\n          dressCodeIncentives: dressCodeIncentivesData,\n        },\n      };\n    } catch (e) {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n}\n","// Andrew Mainella\n// Pauly\n\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport { Colors, loadingStateEnum, semesters } from '../../types';\nimport store from '../../Redux/store';\nimport batchRequest from '../ultility/batchRequest';\nimport createUUID from '../ultility/createUUID';\nimport getDressCode from '../homepage/getDressCode';\n\n// Defaults to org wide events\nexport async function getGraphEvents(\n  url?: string,\n  referenceUrl?: string,\n): Promise<{\n  result: loadingStateEnum;\n  events?: eventType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    url !== undefined\n      ? url\n      : `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties&$select=id,subject,start,end,isAllDay,singleValueExtendedProperties`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newEvents: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      const { singleValueExtendedProperties } = data.value[index];\n      const eventType: string | undefined =\n        data.value[index].singleValueExtendedProperties !== undefined\n          ? singleValueExtendedProperties.find(\n              (e: { id: string; value: string }) => {\n                return e.id === eventTypeExtensionID;\n              },\n            )?.value\n          : undefined;\n      const eventData: string | undefined =\n        data.value[index].singleValueExtendedProperties !== undefined\n          ? singleValueExtendedProperties.find(\n              (e: { id: string; value: string }) => {\n                return e.id === eventDataExtensionID;\n              },\n            )?.value\n          : undefined;\n      newEvents.push({\n        id: data.value[index].id,\n        name: data.value[index].subject,\n        startTime: data.value[index].start.dateTime,\n        endTime: data.value[index].end.dateTime,\n        allDay: data.value[index].isAllDay,\n        eventColor: Colors.white,\n        paulyEventType:\n          eventType === 'schoolYear'\n            ? 'schoolYear'\n            : eventType === 'schoolDay'\n            ? 'schoolDay'\n            : undefined,\n        paulyEventData: eventData,\n        microsoftEvent: true,\n        microsoftReference:\n          referenceUrl !== undefined\n            ? referenceUrl + data.value[index].id\n            : `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      events: newEvents,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// Gets an event from paulys team\nexport async function getEvent(\n  id: string,\n): Promise<{ result: loadingStateEnum; data?: eventType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${id}?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${store.getState().paulyList.eventDataExtensionId}')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const event: eventType = {\n      id: data.id,\n      name: data.subject,\n      startTime: data.start.dateTime,\n      endTime: data.end.dateTime,\n      allDay: data.isAllDay,\n      eventColor: Colors.white,\n      microsoftEvent: true,\n      microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.id}`,\n    };\n    if (data.singleValueExtendedProperties !== undefined) {\n      const eventData: { id: string; value: string }[] =\n        data.singleValueExtendedProperties;\n      const eventType = eventData.find(e => {\n        return e.id === store.getState().paulyList.eventTypeExtensionId;\n      })?.value;\n      event.paulyEventType =\n        eventType === 'schoolDay'\n          ? 'schoolDay'\n          : eventType === 'schoolYear'\n          ? 'schoolYear'\n          : undefined;\n      event.paulyEventData = eventData.find(e => {\n        return e.id === store.getState().paulyList.eventDataExtensionId;\n      })?.value;\n    }\n    return { result: loadingStateEnum.success, data: event };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSchedule(id: string): Promise<{\n  result: loadingStateEnum;\n  schedule?: scheduleType;\n  listItemId?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.scheduleListId\n    }/items?expand=fields($select=scheduleProperName,scheduleDescriptiveName,scheduleData,scheduleId,scheduleColor)&$filter=fields/scheduleId%20eq%20'${id}'&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== undefined) {\n      if (data.value.length === 1) {\n        const resultSchedule: scheduleType = {\n          properName: data.value[0].fields.scheduleProperName,\n          descriptiveName: data.value[0].fields.scheduleDescriptiveName,\n          periods: JSON.parse(\n            data.value[0].fields.scheduleData,\n          ) as periodType[],\n          id: data.value[0].fields.scheduleId,\n          color: data.value[0].fields.scheduleColor,\n        };\n        return {\n          result: loadingStateEnum.success,\n          schedule: resultSchedule,\n          listItemId: data.value[0].id,\n        };\n      }\n      return { result: loadingStateEnum.failed, schedule: undefined };\n    }\n    return { result: loadingStateEnum.failed, schedule: undefined };\n  }\n  return { result: loadingStateEnum.failed, schedule: undefined };\n}\n\nexport async function getSchedules(): Promise<{\n  result: loadingStateEnum;\n  data?: scheduleType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.scheduleListId}/items?expand=fields`,\n  );\n  if (result.ok) {\n    const dataResult = await result.json();\n    if (\n      dataResult.value.length !== undefined &&\n      dataResult.value.length !== null\n    ) {\n      const newLoadedSchedules: scheduleType[] = [];\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        try {\n          const scheduleData = JSON.parse(\n            dataResult.value[index].fields.scheduleData,\n          ) as periodType[];\n          newLoadedSchedules.push({\n            properName: dataResult.value[index].fields.scheduleProperName,\n            descriptiveName:\n              dataResult.value[index].fields.scheduleDescriptiveName,\n            id: dataResult.value[index].fields.scheduleId,\n            periods: scheduleData,\n            color: dataResult.value[index].fields.scheduleColor,\n          });\n        } catch {\n          return { result: loadingStateEnum.failed };\n          // TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n        }\n      }\n      return {\n        result: loadingStateEnum.success,\n        data: newLoadedSchedules,\n        nextLink: dataResult['@odata.nextLink'],\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getTimetable(\n  timetableId: string,\n): Promise<{ result: loadingStateEnum; timetable?: timetableType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.timetablesListId\n    }/items?expand=fields&$filter=fields/timetableId%20eq%20'${timetableId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== undefined) {\n      if (data.value.length === 1) {\n        try {\n          const scheduleData: string[] = JSON.parse(\n            data.value[0].fields.timetableDataSchedules,\n          );\n          const newSchedules: scheduleType[] = [];\n          for (let index = 0; index < scheduleData.length; index += 1) {\n            const result = await getSchedule(scheduleData[index]);\n            if (\n              result.result === loadingStateEnum.success &&\n              result.schedule !== undefined\n            ) {\n              newSchedules.push(result.schedule);\n            } else {\n              return { result: loadingStateEnum.failed };\n            }\n          }\n          const dressCodeResult = await getDressCode(\n            data.value[0].fields.timetableDressCodeId,\n          );\n          if (\n            dressCodeResult.result === loadingStateEnum.success &&\n            dressCodeResult.data !== undefined\n          ) {\n            const resultingTimetable: timetableType = {\n              name: data.value[0].fields.timetableName,\n              id: data.value[0].fields.timetableId,\n              schedules: newSchedules,\n              days: JSON.parse(data.value[0].fields.timetableDataDays),\n              dressCode: dressCodeResult.data,\n            };\n            return {\n              result: loadingStateEnum.success,\n              timetable: resultingTimetable,\n            };\n          }\n          return { result: loadingStateEnum.failed };\n        } catch (e) {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n}\n\nexport async function getSchoolDay(\n  selectedDate: Date,\n): Promise<{ result: loadingStateEnum; event?: eventType }> {\n  const startDate: string = `${new Date(\n    Date.UTC(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth(),\n      selectedDate.getDate(),\n      0,\n    ),\n  )\n    .toISOString()\n    .slice(0, -1)}0000`;\n  const endDate: string = `${new Date(\n    Date.UTC(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth(),\n      selectedDate.getDate() + 1,\n      0,\n    ),\n  )\n    .toISOString()\n    .slice(0, -1)}0000`;\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${\n      store.getState().paulyList.eventDataExtensionId\n    }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20and%20ep/value%20eq%20'schoolDay')%20and%20start/dateTime%20eq%20'${startDate}'%20and%20end/dateTime%20eq%20'${endDate}'`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      if (data.value[index].singleValueExtendedProperties !== undefined) {\n        const eventData: { id: string; value: string }[] =\n          data.value[index].singleValueExtendedProperties;\n        if (eventData !== undefined) {\n          if (\n            eventData.find(e => {\n              return e.id === eventTypeExtensionID;\n            })?.value === 'schoolDay'\n          ) {\n            const event: eventType = {\n              id: data.value[index].id,\n              name: data.value[index].subject,\n              startTime: data.value[index].start.dateTime,\n              endTime: data.value[index].end.dateTime,\n              allDay: data.value[index].isAllDay,\n              eventColor: Colors.white,\n              microsoftEvent: true,\n              microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n              paulyEventType:\n                eventData.find(e => {\n                  return e.id === eventTypeExtensionID;\n                })?.value === 'schoolDay'\n                  ? 'schoolDay'\n                  : undefined,\n              paulyEventData: eventData.find(e => {\n                return e.id === eventDataExtensionID;\n              })?.value,\n            };\n            return { result: loadingStateEnum.success, event };\n          }\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSchoolDays(date: Date): Promise<{\n  result: loadingStateEnum;\n  data?: eventType[];\n  nextLink?: string;\n}> {\n  const firstDay = `${\n    new Date(date.getFullYear(), date.getMonth(), 1)\n      .toISOString()\n      .replace(/.\\d+Z$/g, 'Z')\n      .split(/[T ]/i, 1)[0]\n  }T00:00:00.0000000`;\n  const lastDay = `${\n    new Date(date.getFullYear(), date.getMonth() + 1, 1)\n      .toISOString()\n      .replace(/.\\d+Z$/g, 'Z')\n      .split(/[T ]/i, 1)[0]\n  }T00:00:00.0000000`;\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendarView?startDateTime=${firstDay}&endDateTime=${lastDay}&$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${\n      store.getState().paulyList.eventDataExtensionId\n    }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20and%20ep/value%20eq%20'schoolDay')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const scheduleIds = new Map<string, number>();\n    const schoolYearIds = new Map<string, number>();\n    for (let index = 0; index < data.value.length; index += 1) {\n      const outputIds: schoolDayDataCompressedType = JSON.parse(\n        data.value[index].singleValueExtendedProperties.find(\n          (e: { id: string; value: string }) => {\n            return e.id === store.getState().paulyList.eventDataExtensionId;\n          },\n        ).value,\n      );\n      scheduleIds.set(outputIds.scheduleId, 0);\n      schoolYearIds.set(outputIds.schoolYearEventId, 0);\n    }\n    // Get batch data\n\n    const batchRequestResultSchedule = await batchRequest(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.scheduleListId\n      }/items?expand=fields($select=scheduleProperName,scheduleDescriptiveName,scheduleColor,scheduleData,scheduleId)&$filter=fields/scheduleId%20eq%20'`,\n      secondUrl: `'&$select=id`,\n      method: 'GET',\n      keys: {\n        map: scheduleIds,\n      },\n    });\n\n    if (\n      batchRequestResultSchedule.result !== loadingStateEnum.success ||\n      batchRequestResultSchedule.data === undefined\n    ) {\n      return { result: loadingStateEnum.failed };\n    }\n    const schedules = new Map<string, scheduleType>();\n    for (\n      let scheudleIndex = 0;\n      scheudleIndex < batchRequestResultSchedule.data.length;\n      scheudleIndex += 1\n    ) {\n      const resultScheduleData =\n        batchRequestResultSchedule.data[scheudleIndex].body;\n      if (\n        batchRequestResultSchedule.data[scheudleIndex].status === 200 &&\n        resultScheduleData !== undefined\n      ) {\n        // TO DO fix status code\n        if (resultScheduleData.value.length === 1) {\n          const scheduleResponseData = resultScheduleData.value[0].fields;\n          try {\n            schedules.set(scheduleResponseData.scheduleId, {\n              properName: scheduleResponseData.scheduleProperName,\n              descriptiveName: scheduleResponseData.scheduleDescriptiveName,\n              periods: JSON.parse(scheduleResponseData.scheduleData),\n              id: scheduleResponseData.scheduleId,\n              color: scheduleResponseData.scheduleColor,\n            });\n          } catch {\n            return { result: loadingStateEnum.failed };\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n\n    const timetableResult = await getTimetablesFromSchoolYears(\n      schoolYearIds,\n      schedules,\n    );\n    if (\n      timetableResult.result !== loadingStateEnum.success ||\n      timetableResult.data === undefined\n    ) {\n      return { result: loadingStateEnum.failed };\n    }\n\n    const schoolDaysResult: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const outputIds: schoolDayDataCompressedType = JSON.parse(\n        data.value[index].singleValueExtendedProperties.find(\n          (e: { id: string; value: string }) => {\n            return e.id === store.getState().paulyList.eventDataExtensionId;\n          },\n        ).value,\n      );\n      const schedule = schedules.get(outputIds.scheduleId);\n      const timetable = timetableResult.data.get(outputIds.schoolYearEventId);\n      const dressCode = timetable?.dressCode.dressCodeData.find(e => {\n        return e.id === outputIds.dressCodeId;\n      });\n      const schoolDay = timetable?.days.find(e => {\n        return e.id === outputIds.schoolDayId;\n      });\n      if (\n        schedule !== undefined &&\n        timetable !== undefined &&\n        dressCode !== undefined &&\n        schoolDay !== undefined\n      ) {\n        schoolDaysResult.push({\n          id: data.value[index].id,\n          name: data.value[index].subject,\n          startTime: data.value[index].start.dateTime,\n          endTime: data.value[index].end.dateTime,\n          eventColor: schedule.color,\n          microsoftEvent: true,\n          allDay: !!data.value[index].isAllDay,\n          schoolDayData: {\n            schoolDayData: schoolDay,\n            schedule,\n            dressCode,\n            semester: outputIds.semester,\n            dressCodeIncentiveId: outputIds.dressCodeIncentiveId,\n          },\n        });\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: schoolDaysResult,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// This function gets both school years and their timetable data\nasync function getTimetablesFromSchoolYears(\n  schoolYearIds: Map<string, number>,\n  schedules: Map<string, scheduleType>,\n): Promise<{ result: loadingStateEnum; data?: Map<string, timetableType> }> {\n  // Get School Years\n  const batchRequestResultSchoolYear = await batchRequest(undefined, {\n    firstUrl: `/groups/${orgWideGroupID}/calendar/events/`,\n    secondUrl: `?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${store.getState().paulyList.eventDataExtensionId}')`,\n    method: 'GET',\n    keys: {\n      map: schoolYearIds,\n    },\n  });\n\n  if (\n    batchRequestResultSchoolYear.data === undefined ||\n    batchRequestResultSchoolYear.result !== loadingStateEnum.success\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const timetableIds = new Map<string, string[]>();\n  for (\n    let schoolYearIndex = 0;\n    schoolYearIndex < batchRequestResultSchoolYear.data.length;\n    schoolYearIndex += 1\n  ) {\n    if (batchRequestResultSchoolYear.data[schoolYearIndex].status === 200) {\n      // TO DO fix status code\n      const schoolYearResponseData: { id: string; value: string }[] =\n        batchRequestResultSchoolYear.data[schoolYearIndex].body\n          .singleValueExtendedProperties;\n      const schoolYearData = schoolYearResponseData.find(e => {\n        return e.id === store.getState().paulyList.eventDataExtensionId;\n      });\n      if (schoolYearData !== undefined) {\n        try {\n          const perviousTimetable = timetableIds.get(schoolYearData.value);\n          if (perviousTimetable !== undefined) {\n            timetableIds.set(schoolYearData.value, [\n              ...perviousTimetable,\n              batchRequestResultSchoolYear.data[schoolYearIndex].body.id,\n            ]);\n          } else {\n            timetableIds.set(schoolYearData.value, [\n              batchRequestResultSchoolYear.data[schoolYearIndex].body.id,\n            ]);\n          }\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  // Get timetables\n  const batchRequestResultTimetable = await batchRequest(undefined, {\n    firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n      store.getState().paulyList.timetablesListId\n    }/items?expand=fields($select=timetableName,timetableId,timetableDataDays,timetableDataSchedules,timetableDefaultScheduleId,timetableDressCodeId)&$filter=fields/timetableId%20eq%20'`,\n    secondUrl: `'&$select=id`,\n    method: 'GET',\n    keys: {\n      map: timetableIds,\n    },\n  });\n\n  if (\n    batchRequestResultTimetable.result !== loadingStateEnum.success ||\n    batchRequestResultTimetable.data === undefined\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const dressCodeIds = new Map<string, number>();\n  for (\n    let responseIndex = 0;\n    responseIndex < batchRequestResultTimetable.data.length;\n    responseIndex += 1\n  ) {\n    if (\n      batchRequestResultTimetable.data[responseIndex].status === 200 &&\n      batchRequestResultTimetable.data[responseIndex] !== undefined\n    ) {\n      // TO DO fix status code\n      if (\n        batchRequestResultTimetable.data[responseIndex].body.value.length === 1\n      ) {\n        try {\n          dressCodeIds.set(\n            batchRequestResultTimetable.data[responseIndex].body.value[0].fields\n              .timetableDressCodeId,\n            0,\n          );\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  // Get dress code data\n  const batchRequestResultDressCode = await batchRequest(undefined, {\n    firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeData,dressCodeIncentivesData,dressCodeName,dressCodeId)&$select=id&$filter=fields/dressCodeId%20eq%20'`,\n    secondUrl: `'&$top=1`,\n    method: 'GET',\n    keys: {\n      map: dressCodeIds,\n    },\n  });\n\n  if (\n    batchRequestResultDressCode.data === undefined ||\n    batchRequestResultDressCode.result !== loadingStateEnum.success\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const dressCodes = new Map<string, dressCodeType>();\n  for (\n    let dressCodeIndex = 0;\n    dressCodeIndex < batchRequestResultDressCode.data.length;\n    dressCodeIndex += 1\n  ) {\n    if (\n      batchRequestResultDressCode.data[dressCodeIndex].status === 200 &&\n      batchRequestResultDressCode.data[dressCodeIndex].body !== undefined\n    ) {\n      batchRequestResultDressCode.data[dressCodeIndex].body;\n      if (\n        batchRequestResultDressCode.data[dressCodeIndex].body?.value.length ===\n        1\n      ) {\n        try {\n          dressCodes.set(\n            batchRequestResultDressCode.data[dressCodeIndex].body?.value[0]\n              .fields.dressCodeId,\n            {\n              name: batchRequestResultDressCode.data[dressCodeIndex].body\n                .value[0].fields.dressCodeName,\n              id: batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                .fields.dressCodeId,\n              dressCodeData: JSON.parse(\n                batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                  .fields.dressCodeData,\n              ),\n              dressCodeIncentives:\n                batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                  .fields.dressCodeIncentivesData,\n            },\n          );\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  const timetables = new Map<string, timetableType>();\n  for (\n    let timetableIndex = 0;\n    timetableIndex < batchRequestResultTimetable.data.length;\n    timetableIndex += 1\n  ) {\n    const resultTimetableData =\n      batchRequestResultTimetable.data[timetableIndex].body;\n    if (\n      batchRequestResultTimetable.data[timetableIndex].status === 200 &&\n      resultTimetableData !== undefined\n    ) {\n      if (resultTimetableData.value.length === 1) {\n        const timetableData = resultTimetableData.value[0].fields;\n        const dressCode = dressCodes.get(timetableData.timetableDressCodeId);\n        const timetableSchedules: scheduleType[] = [];\n        const scheduleIds: string[] = JSON.parse(\n          timetableData.timetableDataSchedules,\n        );\n\n        for (\n          let scheduleIndex = 0;\n          scheduleIndex < scheduleIds.length;\n          scheduleIndex += 1\n        ) {\n          const newSchedule = schedules.get(scheduleIds[scheduleIndex]);\n          if (newSchedule !== undefined) {\n            timetableSchedules.push(newSchedule);\n          }\n        }\n        if (dressCode !== undefined) {\n          timetables.set(timetableData.timetableId, {\n            name: timetableData.timetableName,\n            id: timetableData.timetableId,\n            schedules: timetableSchedules,\n            days: JSON.parse(timetableData.timetableDataDays),\n            dressCode,\n          });\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  const outputTimetables = new Map<string, timetableType>();\n  timetables.forEach((value, key) => {\n    const timetablesArray = timetableIds.get(key);\n    if (timetablesArray) {\n      timetablesArray.forEach(item => {\n        outputTimetables.set(item, value);\n      });\n    }\n  });\n\n  return { result: loadingStateEnum.success, data: outputTimetables };\n}\n\nexport async function createDressCode(\n  dressCodeName: string,\n  dressCodeData: dressCodeDataType[],\n): Promise<loadingStateEnum> {\n  const dressCodeId = createUUID();\n  const data = {\n    fields: {\n      Title: dressCodeId,\n      dressCodeId,\n      dressCodeName,\n      dressCodeData: JSON.stringify(dressCodeData),\n      dressCodeIncentivesData: '[]',\n    },\n  };\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.dressCodeListId}/items`,\n    'POST',\n    JSON.stringify(data),\n  );\n  if (result.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  MonthView.tsx\n  This is the componet used on the home page of the app\n*/\nimport React, { useEffect, useState } from 'react';\nimport { View, Text } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  findFirstDayinMonth,\n  getDay,\n  getDaysInMonth,\n} from '../Functions/calendar/calendarFunctions';\nimport { getSchoolDays } from '../Functions/calendar/calendarFunctionsGraph';\nimport { RootState } from '../Redux/store';\nimport { monthViewSlice } from '../Redux/reducers/monthViewReducer';\nimport { Colors, loadingStateEnum } from '../types';\n\nfunction MonthBlock({\n  value,\n  width,\n  height,\n  startDate,\n  daySelected,\n}: {\n  value: number;\n  width: number;\n  height: number;\n  startDate: number;\n  daySelected: number;\n}) {\n  const textval: number = getDay(value, startDate) ?? 0;\n  const day = new Date().getDate();\n  const monthViewData = useSelector((state: RootState) => state.monthView).find(\n    e => {\n      return new Date(e.startTime).getDate() === textval;\n    },\n  );\n  return (\n    <View\n      style={{\n        width,\n        height,\n        borderColor: 'black',\n        borderWidth: 2,\n      }}\n      id=\"This\"\n    >\n      {value >= startDate - 1 && value <= daySelected && textval !== 0 ? (\n        <View\n          style={{\n            width,\n            position: 'absolute',\n            height,\n            borderColor: 'black',\n            backgroundColor:\n              day == textval\n                ? 'red'\n                : day >= textval + 1\n                ? 'gray'\n                : monthViewData !== undefined\n                ? monthViewData.eventColor\n                : Colors.white,\n          }}\n        />\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.white,\n            width,\n            height,\n          }}\n        />\n      )}\n      {textval >= 1 ? (\n        <View\n          id=\"Text\"\n          style={{\n            width,\n            height,\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            position: 'absolute',\n          }}\n        >\n          {monthViewData !== undefined ? (\n            <>\n              {monthViewData.schoolDayData !== undefined ? (\n                <>\n                  <Text\n                    style={{\n                      color: 'black',\n                      fontSize: 10,\n                      fontWeight: 'bold',\n                      position: 'absolute',\n                      top: 1,\n                      right: 3,\n                    }}\n                  >\n                    {monthViewData.schoolDayData.schoolDayData.shorthand}\n                  </Text>\n                  <Text style={{ color: 'black' }}>{textval}</Text>\n                </>\n              ) : (\n                <Text style={{ color: 'black', zIndex: 2 }}>{textval}</Text>\n              )}\n            </>\n          ) : (\n            <Text id=\"This is text\" style={{ color: 'black', zIndex: 2 }}>\n              {textval}\n            </Text>\n          )}\n        </View>\n      ) : null}\n    </View>\n  );\n}\n\nexport default function MonthView({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const Count = getDaysInMonth(new Date());\n  const StartDate = findFirstDayinMonth(new Date());\n  const [daySelected, setDaySelected] = useState<number>(\n    Count + StartDate - 2 - (Count / 7) * 2,\n  );\n  const thirtyValue = [...Array(30).keys()];\n  const monthViewData = useSelector((state: RootState) => state.monthView);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    if (monthViewData.length <= 0) {\n      const result = await getSchoolDays(new Date());\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        dispatch(monthViewSlice.actions.setMonthViewData(result.data));\n      }\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        width,\n        height,\n      }}\n    >\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Monday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Tuesday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Wednesday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Thursday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Friday\n        </Text>\n      </View>\n      {thirtyValue.map((value: number) => (\n        <View\n          style={{\n            width: width * 0.2,\n            height: height * 0.145,\n            overflow: 'hidden',\n          }}\n          key={value}\n        >\n          <MonthBlock\n            value={value}\n            width={width * 0.2}\n            height={height * 0.145}\n            startDate={StartDate}\n            daySelected={daySelected}\n          />\n        </View>\n      ))}\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport { loadingStateEnum } from '../../types';\nimport { paulyDataSlice } from '../../Redux/reducers/paulyDataReducer';\n\nexport default async function getCurrentPaulyData() {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.paulyDataListId}/items/1/fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (\n      data.animationSpeed !== undefined &&\n      data.message !== undefined &&\n      data.powerpointId !== undefined\n    ) {\n      const fileResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/shares/${data.powerpointId}/driveItem/content?format=pdf`,\n        'GET',\n        undefined,\n        [{ key: 'Prefer', value: 'redeemSharingLink' }],\n      ); // `https://graph.microsoft.com/v1.0/shares/${data[\"powerpointId\"]}/root?$select=@microsoft.graph.downloadUrl`\n      if (fileResult.ok) {\n        const dataBlob = await fileResult.blob();\n        const urlOut = URL.createObjectURL(dataBlob);\n        const outputResult = {\n          powerpointBlob: urlOut,\n          powerpointShare: data.powerpointId,\n          message: data.message,\n          animationSpeed: data.animationSpeed,\n          paulyDataState: loadingStateEnum.success,\n        };\n        store.dispatch(paulyDataSlice.actions.setPaulyData(outputResult));\n      } else {\n        store.dispatch(\n          paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n        );\n      }\n    } else {\n      store.dispatch(\n        paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    store.dispatch(\n      paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n    );\n  }\n}\n","import { View, Text, Animated, Easing, Platform } from 'react-native';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Colors } from '../types';\n\nexport default function ScrollingTextAnimation({\n  text,\n  width,\n  height,\n}: {\n  text: string;\n  width: number;\n  height: number;\n}) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [childWidth, setChildWidth] = useState<number>(0);\n  const mainLoop = (childWidthLoop: number) => {\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(pan, {\n          toValue: -childWidthLoop,\n          duration: 5000,\n          delay: 0,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        }),\n        Animated.timing(pan, {\n          toValue: 0,\n          duration: 0,\n          delay: 0,\n          useNativeDriver: false,\n        }),\n      ]),\n    ).start();\n  };\n\n  useEffect(() => {\n    if (childWidth !== 0) {\n      mainLoop(childWidth);\n    }\n  }, [childWidth, mainLoop]);\n\n  // Font\n  const [fontsLoaded] = useFonts({\n    GochiHand: require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View style={{ width, height, overflow: 'hidden' }}>\n      {childWidth !== 0 ? (\n        <Animated.View style={{ transform: [{ translateX: pan }] }}>\n          <View\n            style={{\n              width: childWidth + childWidth * 0.01,\n              height,\n              overflow: 'hidden',\n              position: 'absolute',\n              left: childWidth + childWidth * 0.01,\n            }}\n          >\n            <Text\n              style={{\n                fontFamily: 'GochiHand',\n                color: Colors.white,\n                fontSize: height,\n                height,\n              }}\n            >\n              {text}\n            </Text>\n          </View>\n          <View\n            style={{\n              width: childWidth + childWidth * 0.01,\n              height,\n              position: 'absolute',\n              left: 0,\n            }}\n          >\n            <Text\n              style={{\n                fontFamily: 'GochiHand',\n                color: Colors.white,\n                fontSize: height,\n                height,\n                position: 'absolute',\n              }}\n            >\n              {text}\n            </Text>\n          </View>\n        </Animated.View>\n      ) : (\n        <ScrollView style={{ width: 99999999 }} horizontal>\n          <Text\n            numberOfLines={1}\n            onLayout={e => {\n              setChildWidth(e.nativeEvent.layout.width);\n            }}\n            adjustsFontSizeToFit={!(Platform.OS === 'ios')}\n            style={{\n              fontFamily: 'GochiHand',\n              color: Colors.white,\n              fontSize: height,\n              height,\n            }}\n          >\n            {text}\n          </Text>\n        </ScrollView>\n      )}\n    </View>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useEffect, useCallback } from 'react';\nimport { View, Text, Image, Pressable } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useNavigate } from 'react-router-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MonthView from './MonthView';\nimport store, { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport getCurrentPaulyData from '../Functions/homepage/getCurrentPaulyData';\nimport ProgressView from '../UI/ProgressView';\nimport { BookIcon, MedalIcon, PersonIcon } from '../UI/Icons/Icons';\nimport ScrollingTextAnimation from '../UI/ScrollingTextAnimation';\nimport { Colors, loadingStateEnum } from '../types';\n\nexport default function HomePage() {\n  const navigate = useNavigate();\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const authenticationToken = useSelector(\n    (state: RootState) => state.authenticationToken,\n  );\n  const { message, paulyDataState } = useSelector(\n    (state: RootState) => state.paulyData,\n  );\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const dispatch = useDispatch();\n  const insets = useSafeAreaInsets();\n\n  async function loadData() {\n    await getCurrentPaulyData();\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.maroon,\n        bottom: Colors.maroon,\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    if (\n      store.getState().authenticationToken !== '' &&\n      store.getState().paulyList.siteId !== ''\n    ) {\n      loadData();\n    }\n  }, [authenticationToken, siteId]);\n\n  useEffect(() => {\n    if (currentBreakPoint > 0) {\n      navigate('/notifications');\n    }\n  }, [currentBreakPoint]);\n\n  // Font\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n    GochiHand: require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ backgroundColor: Colors.maroon, overflow: 'hidden' }}>\n        <Pressable\n          style={{ width: width * 1.0, height: height * 0.08 }}\n          onPress={() => {\n            navigate('/notifications');\n          }}\n        >\n          {paulyDataState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width: width * 1.0,\n                height: height * 0.08,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={width < height * 0.08 ? width * 0.1 : height * 0.07}\n                height={width < height * 0.08 ? width * 0.1 : height * 0.07}\n              />\n            </View>\n          ) : (\n            <>\n              {paulyDataState === loadingStateEnum.success ? (\n                <>\n                  {message !== '' ? (\n                    <ScrollingTextAnimation\n                      width={width * 1.0}\n                      height={height * 0.08}\n                      text={message}\n                    />\n                  ) : null}\n                </>\n              ) : (\n                <Text>Failed</Text>\n              )}\n            </>\n          )}\n        </Pressable>\n        <Pressable\n          onPress={() => {\n            navigate('/calendar');\n          }}\n          style={{ width: width * 0.999, height: height * 0.42 }}\n        >\n          <View>\n            <View\n              style={{\n                width: width * 1.0,\n                height: height * 0.05,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n                borderTopColor: 'black',\n                borderTopWidth: 2,\n                borderBottomColor: 'black',\n                borderBottomWidth: 2,\n              }}\n            >\n              <Text style={{ margin: 'auto', color: Colors.white }}>\n                Calendar\n              </Text>\n            </View>\n            <MonthView width={width * 1.0} height={height * 0.37} />\n          </View>\n        </Pressable>\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 1.0,\n            height: height * 0.25,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/commissions');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                  zIndex: 1,\n                }}\n              />\n              <MedalIcon\n                width={width * 0.5}\n                height={height * 0.23}\n                style={{ position: 'absolute', top: height * 0.01, zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              navigate('/sports');\n            }}\n            style={{ borderColor: 'black', borderWidth: 2 }}\n          >\n            <View\n              style={{\n                backgroundColor: Colors.maroon,\n                width: width * 0.5,\n                height: height * 0.25,\n                borderTopWidth: 1,\n                borderTopColor: 'black',\n                zIndex: 1,\n              }}\n            />\n            <Image\n              source={require('../../assets/images/Football.png')}\n              resizeMode=\"contain\"\n              width={width * 0.3}\n              height={height * 0.25}\n              style={{\n                zIndex: 2,\n                height: height * 0.25,\n                width: width * 0.5,\n                position: 'absolute',\n                aspectRatio: '1/1',\n              }}\n            />\n          </Pressable>\n        </View>\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 1.0,\n            height: height * 0.25,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/resources');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                  zIndex: 1,\n                }}\n              />\n              <BookIcon\n                width={width * 0.5}\n                height={height * 0.25}\n                style={{ position: 'absolute', zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              navigate('/profile');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                }}\n              />\n              <PersonIcon\n                width={width * 0.5}\n                height={height * 0.25}\n                style={{ position: 'absolute', zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n        </View>\n      </View>\n      <View\n        style={{\n          position: 'absolute',\n          backgroundColor: 'black',\n          width: 4,\n          left: width / 2 + 2,\n          bottom: -insets.bottom,\n          height: insets.bottom,\n        }}\n      />\n    </>\n  );\n}\n","import * as Location from 'expo-location';\nimport { getDistance } from 'geolib';\nimport { locationStateEnum } from '../../types';\n\nexport default async function getUsersLocation(\n  commission: commissionType,\n): Promise<{ result: locationStateEnum; data?: locationCoords }> {\n  const { status } = await Location.requestForegroundPermissionsAsync();\n  if (status !== 'granted') {\n    return { result: locationStateEnum.permissionDenied };\n  }\n\n  const location = await Location.getCurrentPositionAsync();\n  if (!location.mocked) {\n    if (\n      commission.coordinateLat !== undefined &&\n      commission.coordinateLng !== undefined &&\n      commission.proximity !== undefined\n    ) {\n      const prox = getDistance(\n        { lat: location.coords.latitude, lng: location.coords.longitude },\n        {\n          latitude: commission?.coordinateLat,\n          longitude: commission?.coordinateLng,\n        },\n      );\n      if (prox <= commission.proximity) {\n        return {\n          result: locationStateEnum.success,\n          data: {\n            latCoordinate: location.coords.latitude,\n            lngCoordinate: location.coords.longitude,\n          },\n        };\n      }\n      return { result: locationStateEnum.notCloseEnough };\n    }\n  } else {\n    return { result: locationStateEnum.mockedLocation };\n  }\n  return { result: locationStateEnum.notStarted };\n}\n","import { orgWideGroupID, paulyDomain } from '../../PaulyConfig';\nimport { loadingStateEnum } from '../../types';\nimport createUUID from '../ultility/createUUID';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nasync function b64toBlob(\n  b64Data: string,\n  contentType = '',\n  sliceSize = 512,\n): Promise<Blob | undefined> {\n  const result = await fetch(b64Data);\n  if (result.ok) {\n    return await result.blob();\n  }\n  return undefined;\n}\n\nexport async function addImage(\n  base64: string,\n): Promise<{ result: loadingStateEnum; data?: string }> {\n  const fileBlob = await b64toBlob(base64);\n  if (fileBlob !== undefined) {\n    const types: any = {\n      'image/bmp': '.bmp',\n      'image/gif': '.gif',\n      'image/jpeg': '.jpg',\n      'image/png': '.png',\n      'image/webp': '.webp',\n    };\n    if (types[fileBlob.type] !== undefined) {\n      const rootIdResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/me/drive/root?$select=id',\n      );\n      if (rootIdResult.ok) {\n        const rootIdData = await rootIdResult.json();\n        const imageUUID = createUUID();\n        const resumableSessionData = {\n          item: {\n            '@microsoft.graph.conflictBehavior': 'rename',\n            name: `Pauly_Image_${imageUUID}_Submission${types[fileBlob.type]}`,\n          },\n          deferCommit: true,\n        };\n        const resumableSessionResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/me/drive/items/${\n            rootIdData.id\n          }:/Pauly_Image_${imageUUID}_Submission${\n            types[fileBlob.type]\n          }:/createUploadSession`,\n          'POST',\n          JSON.stringify(resumableSessionData),\n        );\n        if (resumableSessionResult.ok) {\n          const resumableSessionResultData =\n            await resumableSessionResult.json();\n          const { uploadUrl } = resumableSessionResultData;\n          if (resumableSessionResultData.nextExpectedRanges.length === 1) {\n            const nextExpectedRange: string =\n              resumableSessionResultData.nextExpectedRanges[0];\n            let remaining: number = fileBlob.size;\n            let uploaded: number = 0;\n            if (nextExpectedRange === `${uploaded}-`) {\n              while (remaining > 0) {\n                // TO DO Check that this works\n                const uploadBlob = fileBlob.slice(\n                  uploaded,\n                  remaining >= 5242880 ? 5242880 : remaining,\n                );\n                uploaded += remaining >= 5242880 ? 5242880 : remaining;\n\n                const uploadResult = await fetch(uploadUrl, {\n                  headers: {\n                    'Content-Length': uploadBlob.size.toString(),\n                    'Content-Range': `bytes ${\n                      uploaded - (remaining >= 5242880 ? 5242880 : remaining)\n                    }-${remaining >= 5242880 ? uploaded : uploaded - 1}/${\n                      fileBlob.size\n                    }`,\n                  },\n                  method: 'PUT',\n                  body: uploadBlob,\n                });\n                remaining -= remaining >= 5242880 ? 5242880 : remaining;\n                if (uploadResult.ok) {\n                } else {\n                  return { result: loadingStateEnum.failed };\n                }\n              }\n              const uploadCompleteResult = await fetch(uploadUrl, {\n                headers: {\n                  'Content-Length': '0',\n                },\n                method: 'POST',\n              });\n              if (uploadCompleteResult.ok) {\n                const uploadCompleteResultData =\n                  await uploadCompleteResult.json();\n                const createLinkMainData = {\n                  type: 'view',\n                  scope: 'organization',\n                };\n                const createLinkResult = await callMsGraph(\n                  `https://graph.microsoft.com/v1.0/me/drive/items/${uploadCompleteResultData.id}/createLink`,\n                  'POST',\n                  JSON.stringify(createLinkMainData),\n                );\n                if (createLinkResult.ok) {\n                  const createLinkData = await createLinkResult.json();\n                  return {\n                    result: loadingStateEnum.success,\n                    data: createLinkData.shareId,\n                  };\n                }\n                return { result: loadingStateEnum.failed };\n              }\n              return { result: loadingStateEnum.failed };\n            }\n            return { result: loadingStateEnum.failed };\n          }\n          return { result: loadingStateEnum.failed };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function claimCommissionPost(\n  auth: string,\n  commissionId: string,\n  imageShare?: string,\n  location?: locationCoords,\n): Promise<loadingStateEnum> {\n  let outResult: string = '';\n  if (location) {\n    outResult += `&latCoordinate=${location.latCoordinate}&lngCoordinate=${location.lngCoordinate}`;\n  }\n  if (imageShare) {\n    outResult += `&imageShare=${imageShare}`;\n  }\n  const bearer = `Bearer ${auth}`;\n  try {\n    const result = await fetch(\n      `${paulyDomain}/api/SubmitCommission?orgWideGroupId=${orgWideGroupID}&commissionId=${commissionId}${outResult}`,\n      {\n        headers: {\n          Authorization: bearer,\n        },\n      },\n    );\n    if (result.ok) {\n      return loadingStateEnum.success;\n    }\n    return loadingStateEnum.failed;\n  } catch {\n    return loadingStateEnum.failed;\n  }\n}\n","import { useMsal } from '@azure/msal-react';\nimport React, { useState } from 'react';\nimport { Pressable, View, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport { clientId } from '../../PaulyConfig';\nimport getUsersLocation from '../../Functions/commissions/getLocation';\nimport {\n  addImage,\n  claimCommissionPost,\n} from '../../Functions/commissions/claimCommissionsFunctions';\nimport {\n  commissionTypeEnum,\n  loadingStateEnum,\n  locationStateEnum,\n} from '../../types';\nimport ProgressView from '../../UI/ProgressView';\n\nexport default function CommissionClaim({\n  commission,\n  imageData,\n}: {\n  commission: commissionType;\n  imageData?: string;\n}) {\n  const [claimCommissionState, setClaimCommissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const { instance } = useMsal();\n\n  async function claimCommission() {\n    setClaimCommissionState(loadingStateEnum.loading);\n    const apiResult = await instance.acquireTokenSilent({\n      scopes: [`api://${clientId}/api/Test`],\n    });\n    let outImageUrl: string = '';\n    if (\n      (commission.value === commissionTypeEnum.Image ||\n        commission.value === commissionTypeEnum.ImageLocation) &&\n      imageData !== undefined\n    ) {\n      const outImage = await addImage(imageData);\n      if (\n        outImage.result === loadingStateEnum.success &&\n        outImage.data !== undefined\n      ) {\n        outImageUrl = outImage.data;\n      } else {\n        setClaimCommissionState(loadingStateEnum.failed);\n        return;\n      }\n    }\n    if (\n      commission.value === commissionTypeEnum.ImageLocation ||\n      commission.value === commissionTypeEnum.Location\n    ) {\n      const locationResult = await getUsersLocation(commission);\n      if (\n        locationResult.result === locationStateEnum.success &&\n        locationResult.data !== undefined\n      ) {\n        const result = await claimCommissionPost(\n          apiResult.accessToken,\n          commission.commissionId,\n          outImageUrl !== '' ? outImageUrl : undefined,\n          locationResult.data,\n        );\n        setClaimCommissionState(result);\n      } else {\n        setClaimCommissionState(loadingStateEnum.failed);\n      }\n    } else {\n      const result = await claimCommissionPost(\n        apiResult.accessToken,\n        commission.commissionId,\n        outImageUrl !== '' ? outImageUrl : undefined,\n        undefined,\n      );\n      setClaimCommissionState(result);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => {\n        claimCommission();\n      }}\n      style={{\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: '#ededed',\n        width: width * 0.7,\n        borderRadius: 15,\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {claimCommissionState === loadingStateEnum.loading ? (\n        <View style={{ margin: 10 }}>\n          <ProgressView width={24} height={24} />\n        </View>\n      ) : (\n        <Text style={{ margin: 10, fontWeight: 'bold' }}>\n          {claimCommissionState === loadingStateEnum.notStarted\n            ? 'CLAIM COMMISSION'\n            : claimCommissionState === loadingStateEnum.success\n            ? 'SUBMISSION SENT'\n            : 'FAILED TO SEND SUBMISSION'}\n        </Text>\n      )}\n    </Pressable>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getCommission(\n  commissionId: string,\n): Promise<{ result: loadingStateEnum; data?: commissionType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.commissionListId\n    }/items?expand=fields&$filter=fields/commissionID%20eq%20'${commissionId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== 1) {\n      // Not found\n      return { result: loadingStateEnum.failed };\n    }\n    const dataResult: commissionType = {\n      itemId: data.value[0].id,\n      title: data.value[0].fields.Title,\n      startDate: data.value[0].fields.startDate,\n      endDate: data.value[0].fields.endDate,\n      points: data.value[0].fields.points,\n      hidden: data.value[0].fields.hidden,\n      commissionId: data.value[0].fields.commissionID,\n      proximity: data.value[0].fields.proximity,\n      coordinateLat: data.value[0].fields.coordinateLat,\n      coordinateLng: data.value[0].fields.coordinateLng,\n      postData: {\n        teamId: data.value[0].fields.postTeamId,\n        channelId: data.value[0].fields.postChannelId,\n        postId: data.value[0].fields.postId,\n      },\n      timed: false,\n      maxNumberOfClaims: 0,\n      allowMultipleSubmissions: false,\n      value: data.value[0].fields.value - 1,\n      submissionsCount: 0,\n      claimCount: 0,\n      reviewedCount: 0,\n    };\n    return { result: loadingStateEnum.success, data: dataResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Platform, ViewStyle } from 'react-native';\nimport React, { useState } from 'react';\nimport WebView from 'react-native-webview';\n\nexport default function WebViewCross({\n  html,\n  height,\n  rawHtml,\n  style,\n  width,\n}:\n  | {\n      html: string | undefined;\n      width: number;\n      rawHtml?: undefined;\n      height?: undefined;\n      style?: ViewStyle | undefined;\n    }\n  | {\n      rawHtml: string | undefined;\n      width: number;\n      height: number;\n      html?: undefined;\n      style?: ViewStyle | undefined;\n    }) {\n  const jsCode = `\n      window.ReactNativeWebView.postMessage(\"\" + document.getElementById('pauly-main').offsetHeight);\n    `;\n  // document.getElementById('pauly-main').innerHTML\n  const [adaptHeight, setAdaptHeight] = useState<number>(0);\n  if (html === undefined && rawHtml === undefined) {\n    return null;\n  }\n\n  if (Platform.OS !== 'web') {\n    return (\n      <WebView\n        source={{\n          html:\n            rawHtml ||\n            `<!DOCTYPE html>\n            <html>\n            <head>\n              <meta name=\"viewport\" content=\"width=${width - 20}px\"/>\n              <style>\n                body {font-weight: normal; font-family: Arial; width: 100%}\n                div {font-weight: normal; font-family: Arial; width: 100%; padding: 0; margin: 0; font-size: 15px}\n                .main {\n                  padding: 0;\n                  margin: 0;\n                  position: absolute;\n                }\n              </style>\n            </head>\n            <body>\n              <div id=\"pauly-main\" class=\"main\">\n                ${html}\n              </div>\n            </body>\n            </html>`,\n        }}\n        style={[\n          {\n            margin: 10,\n            height: height || adaptHeight + 10,\n            width,\n          },\n          style,\n        ]}\n        javaScriptEnabled\n        injectedJavaScript={jsCode}\n        onMessage={event => {\n          setAdaptHeight(parseFloat(event.nativeEvent.data));\n        }}\n        scalesPageToFit={false}\n      />\n    );\n  }\n  if (html !== undefined) {\n    return (\n      <View style={[{ margin: 10 }, style]}>\n        <div dangerouslySetInnerHTML={{ __html: html }} />\n      </View>\n    );\n  }\n  return (\n    <View style={[{ margin: 10 }, style]}>\n      {rawHtml !== undefined ? { rawHtml } : null}\n    </View>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { View, Text, Pressable, Image } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport CommissionClaim from './CommissionClaim';\nimport getCommission from '../../Functions/commissions/getCommission';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport ProgressView from '../../UI/ProgressView';\nimport { CloseIcon } from '../../UI/Icons/Icons';\nimport WebViewCross from '../../UI/WebViewCross';\nimport { Colors, commissionTypeEnum, loadingStateEnum } from '../../types';\n\nenum CameraResult {\n  notStarted,\n  loading,\n  success,\n  permissionDenied,\n  goToSettings,\n  failed,\n}\n\nexport default function CommissionsView({\n  id,\n  onClose,\n}: {\n  id: string;\n  onClose: () => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [commissionData, setCommissionData] = useState<\n    commissionType | undefined\n  >(undefined);\n  const [commissionState, setCommissionState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [messageState, setMessageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [messageData, setMessageData] = useState<string>('');\n  const [imageUri, setImageUri] = useState<string>('');\n  const [takeImageState, setTakeImageState] = useState<CameraResult>(\n    CameraResult.notStarted,\n  );\n  const [pickImageState, setPickerImageState] = useState<CameraResult>(\n    CameraResult.notStarted,\n  );\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const [evaluatedOverflow, setEvaluatedOverflow] = useState<boolean>(false);\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function getPost(teamId: string, channelId: string, messageId: string) {\n    setMessageState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages/${messageId}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      setMessageData(data.body.content);\n      setMessageState(loadingStateEnum.success);\n    } else {\n      setMessageState(loadingStateEnum.failed);\n    }\n  }\n\n  async function getCommissionInformation() {\n    const result = await getCommission(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCommissionData(result.data);\n      if (result.data?.postData !== undefined) {\n        getPost(\n          result.data.postData.teamId,\n          result.data.postData.channelId,\n          result.data.postData.postId,\n        );\n      }\n    }\n    setCommissionState(result.result);\n  }\n\n  async function pickImage() {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsMultipleSelection: false,\n      allowsEditing: false,\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n    });\n    if (!result.canceled) {\n      if (result.assets.length === 1) {\n        setImageUri(result.assets[0].uri);\n        Image.getSize(\n          result.assets[0].uri,\n          (imageMeasureWidth, imageMeasureHeight) => {\n            const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n            setImageHeight(width * 0.7 * heightPerWidth);\n          },\n        );\n        setPickerImageState(CameraResult.success);\n      } else {\n        setPickerImageState(CameraResult.failed);\n      }\n    } else {\n      setPickerImageState(CameraResult.notStarted);\n    }\n  }\n  const [status, requestPermission] = ImagePicker.useCameraPermissions();\n\n  async function takeImage() {\n    setTakeImageState(CameraResult.loading);\n    if (status?.status === ImagePicker.PermissionStatus.GRANTED) {\n      const result = await ImagePicker.launchCameraAsync({\n        allowsEditing: false,\n        allowsMultipleSelection: false,\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      });\n      if (!result.canceled) {\n        if (result.assets.length === 1) {\n          setImageUri(result.assets[0].uri);\n          Image.getSize(\n            result.assets[0].uri,\n            (imageMeasureWidth, imageMeasureHeight) => {\n              const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n              setImageHeight(width * 0.7 * heightPerWidth);\n            },\n          );\n          setTakeImageState(CameraResult.success);\n        } else {\n          setTakeImageState(CameraResult.failed);\n        }\n      } else {\n        setTakeImageState(CameraResult.notStarted);\n      }\n    } else if (status?.canAskAgain) {\n      const permissionResult = await requestPermission();\n      if (permissionResult.granted) {\n        takeImage();\n      } else {\n        setTakeImageState(CameraResult.permissionDenied);\n      }\n    } else {\n      setTakeImageState(CameraResult.goToSettings);\n    }\n  }\n\n  useEffect(() => {\n    getCommissionInformation();\n  }, [id]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        width: width * 0.9,\n        height: height * 0.8,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n      }}\n    >\n      {commissionState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            height: height * 0.8,\n            width: width * 0.9,\n            alignItems: 'center',\n            justifyContent: 'center',\n            alignContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width * 0.8 < height * 0.7 ? width * 0.4 : height * 0.35}\n            height={width * 0.8 < height * 0.7 ? width * 0.4 : height * 0.35}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (commissionState === loadingStateEnum.success && commissionData !== undefined) ?\n      (\n        <View>\n              <View style={{ height: height * 0.1, overflow: 'hidden' }}>\n                <Pressable\n                  onPress={() => onClose()}\n                  style={{ marginTop: 10, marginLeft: 10 }}\n                >\n                  <CloseIcon\n                    width={width < height ? width * 0.05 : height * 0.05}\n                    height={width < height ? width * 0.05 : height * 0.05}\n                  />\n                </Pressable>\n                <View\n                  style={{\n                    width: width * 0.9,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Text style={{ fontSize: height * 0.03 }}>\n                    Commission: {commissionData.title}\n                  </Text>\n                </View>\n              </View>\n              <ScrollView\n                style={{ height: isOverflowing ? height * 0.6 : height * 0.7 }}\n              >\n                <View\n                  onLayout={e => {\n                    if (e.nativeEvent.layout.height >= height * 0.6) {\n                      setIsOverflowing(true);\n                      setEvaluatedOverflow(true);\n                    } else if (!evaluatedOverflow) {\n                      setIsOverflowing(false);\n                    }\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: 'row',\n                      margin: 10,\n                      backgroundColor: Colors.maroon,\n                      borderRadius: 15,\n                      shadowOffset: { width: 2, height: 3 },\n                    }}\n                  >\n                    <View style={{ margin: 10, flexDirection: 'row' }}>\n                      <Image\n                        source={require('../../../assets/images/PaulyLogo.png')}\n                        resizeMode=\"contain\"\n                        style={{ width: 50, height: 50 }}\n                      />\n                      <Text\n                        style={{\n                          fontSize: 45,\n                          color: Colors.white,\n                          fontFamily: 'BukhariScript',\n                          width: 100,\n                          paddingLeft: 10,\n                        }}\n                      >\n                        {commissionData.points}\n                      </Text>\n                    </View>\n                  </View>\n                  <View style={{ marginLeft: width * 0.05 }}>\n                    <WebViewCross html={messageData} width={width * 0.7} />\n                  </View>\n                  {commissionData.value === commissionTypeEnum.Image ||\n                  commissionData.value === commissionTypeEnum.ImageLocation ? (\n                    <>\n                      {imageUri !== '' ? (\n                        <Image\n                          source={{ uri: imageUri }}\n                          width={width * 0.7}\n                          resizeMode=\"center\"\n                          style={{\n                            width: width * 0.7,\n                            height: imageHeight,\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: '#FFFFFF',\n                            shadowOffset: { width: 0, height: 1 },\n                            shadowOpacity: 0.8,\n                            shadowRadius: 10,\n                            borderRadius: 15,\n                          }}\n                        />\n                      ) : (\n                        <View\n                          style={{\n                            width: width * 0.7,\n                            height: height * 0.3,\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: '#FFFFFF',\n                            shadowOffset: { width: 0, height: 1 },\n                            shadowOpacity: 0.8,\n                            shadowRadius: 10,\n                            borderRadius: 15,\n                          }}\n                        >\n                          <Text>No Photo Selected</Text>\n                        </View>\n                      )}\n                      <Pressable\n                        onPress={() => takeImage()}\n                        style={{\n                          marginLeft: 'auto',\n                          marginRight: 'auto',\n                          marginTop: 15,\n                          backgroundColor: '#ededed',\n                          width: width * 0.7,\n                          borderRadius: 15,\n                          alignItems: 'center',\n                          alignContent: 'center',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        {takeImageState === CameraResult.loading ? (\n                          <ProgressView\n                            width={14}\n                            height={14}\n                            style={{ margin: 10 }}\n                          />\n                        ) : (\n                          <Text style={{ margin: 10, fontWeight: 'bold' }}>\n                            {takeImageState === CameraResult.notStarted\n                              ? 'TAKE PHOTO'\n                              : takeImageState === CameraResult.goToSettings\n                              ? 'Go To Settings And Give Camera Permissions'\n                              : takeImageState === CameraResult.permissionDenied\n                              ? 'Permission Denied'\n                              : takeImageState === CameraResult.success\n                              ? 'TAKE DIFFERENT PHOTO'\n                              : 'AN ERROR OCCURED'}\n                          </Text>\n                        )}\n                      </Pressable>\n                      <Pressable\n                        onPress={() => pickImage()}\n                        style={{\n                          marginLeft: 'auto',\n                          marginRight: 'auto',\n                          marginTop: 10,\n                          backgroundColor: '#ededed',\n                          width: width * 0.7,\n                          borderRadius: 15,\n                          alignItems: 'center',\n                          alignContent: 'center',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        {pickImageState === CameraResult.loading ? (\n                          <ProgressView\n                            width={14}\n                            height={14}\n                            style={{ margin: 10 }}\n                          />\n                        ) : (\n                          <Text style={{ margin: 10, fontWeight: 'bold' }}>\n                            {pickImageState === CameraResult.notStarted\n                              ? 'CHOOSE PHOTO'\n                              : pickImageState === CameraResult.permissionDenied\n                              ? 'Permission Denied'\n                              : pickImageState === CameraResult.success\n                              ? 'USE A DIFFERENT PHOTO'\n                              : 'AN ERROR OCCURED'}\n                          </Text>\n                        )}\n                      </Pressable>\n                    </>\n                  ) : null}\n                  {isOverflowing ? null : (\n                    <View style={{ marginTop: 10, marginBottom: 10 }}>\n                      <CommissionClaim commission={commissionData} />\n                    </View>\n                  )}\n                </View>\n              </ScrollView>\n              {isOverflowing ? (\n                <View\n                  style={{\n                    height: height * 0.1,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <CommissionClaim\n                    commission={commissionData}\n                    imageData={imageUri !== '' ? imageUri : undefined}\n                  />\n                </View>\n              ) : null}\n        </View> \n      ):(\n        <View>\n          <Text>Something Went Wrong</Text>\n        </View>\n      )\n      }\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\n// Gets points when given an array of commission ids\nasync function getPointsBatch(\n  commissions: string[],\n): Promise<{ result: loadingStateEnum; points: number }> {\n  const outputRequests: { id: string; method: string; url: string }[] = [];\n  for (let index = 0; index < commissions.length; index += 1) {\n    outputRequests.push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?$expand=fields&$filter=fields/commissionID%20eq%20'${\n        commissions[index]\n      }' `,\n      // ?$expand=fields&$filter=fields/commissionID%20eq%20'${commissions[index]}'\n    });\n  }\n  const batchData = {\n    requests: outputRequests,\n  };\n\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/$batch',\n    'POST',\n    JSON.stringify(batchData),\n    [{ key: 'Accept', value: 'application/json' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    let pointsResult = 0;\n    for (\n      let requestIndex = 0;\n      requestIndex < data.responses.length;\n      requestIndex += 1\n    ) {\n      if (data.responses[requestIndex].status === 200) {\n        for (\n          let index = 0;\n          index < data.responses[requestIndex].body.value.length;\n          index += 1\n        ) {\n          pointsResult +=\n            data.responses[requestIndex].body.value[index].fields.points;\n        }\n      } else {\n        return { result: loadingStateEnum.failed, points: 0 };\n      }\n    }\n    return { result: loadingStateEnum.success, points: pointsResult };\n  }\n  return { result: loadingStateEnum.failed, points: 0 };\n}\n\nexport default async function getPoints(): Promise<{\n  result: loadingStateEnum;\n  data?: number;\n}> {\n  let nextUrl = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.commissionSubmissionsListId\n  }/items?expand=fields&$filter=fields/userId%20eq%20'${\n    store.getState().microsoftProfileData.id\n  }'%20and%20fields/submissionApproved%20ne%20false`;\n  let points: number = 0;\n  let commissions: string[] = [];\n  while (nextUrl !== '') {\n    const submissionResultClaimed = await callMsGraph(nextUrl);\n    if (!submissionResultClaimed.ok) {\n      return { result: loadingStateEnum.failed };\n    }\n    const submissionResultClaimedData = await submissionResultClaimed.json();\n    for (\n      let index = 0;\n      index < submissionResultClaimedData.value.length;\n      index += 1\n    ) {\n      if (\n        submissionResultClaimedData.value[0].fields.submissionApproved === true\n      ) {\n        commissions.push(\n          submissionResultClaimedData.value[0].fields.commissionId,\n        );\n        if (commissions.length >= 20) {\n          const batchResult = await getPointsBatch(commissions);\n          if (batchResult.result !== loadingStateEnum.success) {\n            return { result: loadingStateEnum.failed };\n          }\n          points += batchResult.points;\n          commissions = [];\n        }\n      }\n    }\n    if (submissionResultClaimedData['@odata.nextLink'] !== undefined) {\n      nextUrl = submissionResultClaimedData['@odata.nextLink'];\n    } else {\n      nextUrl = '';\n      if (commissions.length !== 0) {\n        const batchResult = await getPointsBatch(commissions);\n        if (batchResult.result !== loadingStateEnum.success) {\n          return { result: loadingStateEnum.failed };\n        }\n        points += batchResult.points;\n      }\n    }\n  }\n  return { result: loadingStateEnum.success, data: points };\n}\n","import { commissionsSlice } from '../../Redux/reducers/commissionsReducer';\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction getFilter(\n  startDate?: { date: Date; filter: 'ge' | 'le' },\n  endDate?: { date: Date; filter: 'ge' | 'le' },\n) {\n  const startDateString = startDate?.date.toISOString().replace(/.\\d+Z$/g, 'Z');\n  const endDateString = endDate?.date.toISOString().replace(/.\\d+Z$/g, 'Z');\n  if (startDate || endDate) {\n    let filter = '&$filter=';\n    if (startDate) {\n      filter += `fields/startDate%20${startDate.filter}%20${startDateString}`;\n    }\n    if (endDate) {\n      filter += startDate\n        ? `&fields/endDate%20le%20${endDateString}`\n        : `fields/endDate%20${endDate.filter}%20${endDateString}`;\n    }\n  } else {\n    return '';\n  }\n}\n\nasync function getSubmissions(commissionIds: string[]): Promise<{\n  result: loadingStateEnum;\n  data?: Map<\n    string,\n    { claimCount: number; submissionsCount: number; reviewedCount: number }\n  >;\n}> {\n  const outputRequests: { id: string; method: string; url: string }[][] = [[]];\n  for (let index = 0; index < commissionIds.length; index += 1) {\n    outputRequests[Math.floor(index / 20)].push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionSubmissionsListId\n      }/items?expand=fields(select=commissionId,submissions)`,\n    });\n    if (index % 20 === 0) {\n      outputRequests.push([]);\n    }\n  }\n  const outputMap = new Map<\n    string,\n    { claimCount: number; submissionsCount: number; reviewedCount: number }\n  >();\n  for (let index = 0; outputRequests.length < index; index += 1) {\n    const requestData = {\n      requests: outputRequests[index],\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.commissionListId}/items`,\n      'POST',\n      JSON.stringify(requestData),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      for (\n        let responseIndex = 0;\n        responseIndex < data.responses.length;\n        responseIndex += 1\n      ) {\n        if (data.responses[responseIndex].status === 200) {\n          for (\n            let dataIndex = 0;\n            dataIndex < data.respone[index].body.length;\n            dataIndex += 1\n          ) {\n            if (data.respone[index].body['@odata.nextLink'] !== undefined) {\n              if (outputRequests[outputRequests.length - 1].length < 20) {\n                outputRequests[outputRequests.length - 1].push({\n                  id: outputRequests[\n                    outputRequests.length - 1\n                  ].length.toString(),\n                  method: 'GET',\n                  url: data.respone[index].body['@odata.nextLink'],\n                });\n              } else {\n                outputRequests.push([]);\n                outputRequests[outputRequests.length - 1].push({\n                  id: outputRequests[\n                    outputRequests.length - 1\n                  ].length.toString(),\n                  method: 'GET',\n                  url: data.respone[index].body['@odata.nextLink'],\n                });\n              }\n            }\n            for (\n              let valueIndex = 0;\n              valueIndex < data.respone[index].body.value.length;\n              valueIndex += 1\n            ) {\n              if (\n                outputMap.has(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                )\n              ) {\n                const mapData = outputMap.get(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                );\n                if (mapData !== undefined) {\n                  const subApproved =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionApproved;\n                  const subReviewed =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionReviewed;\n                  outputMap.set(\n                    data.respone[index].body.value[valueIndex].commissionId,\n                    {\n                      submissionsCount: (mapData.submissionsCount += 1),\n                      claimCount: subApproved\n                        ? (mapData.claimCount += 1)\n                        : mapData.claimCount,\n                      reviewedCount: subReviewed\n                        ? (mapData.reviewedCount += 1)\n                        : mapData.reviewedCount,\n                    },\n                  );\n                } else {\n                  const subApproved =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionApproved;\n                  const subReviewed =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionReviewed;\n                  outputMap.set(\n                    data.respone[index].body.value[valueIndex].commissionId,\n                    {\n                      submissionsCount: 1,\n                      claimCount: subApproved ? 1 : 0,\n                      reviewedCount: subReviewed ? 1 : 0,\n                    },\n                  );\n                }\n              } else {\n                const subApproved =\n                  data.respone[index].body.value[valueIndex].submissionApproved;\n                const subReviewed =\n                  data.respone[index].body.value[valueIndex].submissionReviewed;\n                outputMap.set(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                  {\n                    submissionsCount: 1,\n                    claimCount: subApproved ? 1 : 0,\n                    reviewedCount: subReviewed ? 1 : 0,\n                  },\n                );\n              }\n            }\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  return { result: loadingStateEnum.success, data: outputMap };\n}\n\nexport default async function getCommissions(\n  nextLink?: string,\n  startDate?: { date: Date; filter: 'ge' | 'le' },\n  endDate?: { date: Date; filter: 'ge' | 'le' },\n  claimed?: boolean,\n): Promise<{\n  result: loadingStateEnum;\n  data?: commissionType[];\n  nextLink?: string;\n}> {\n  if (nextLink === undefined) {\n    store.dispatch(commissionsSlice.actions.setCommissionNextLink(undefined));\n  }\n  if (claimed === true) {\n    const result = await getUnclaimedCommissions();\n    return { result: result.result, data: result.data };\n  }\n  const filter = getFilter(startDate, endDate);\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?expand=fields${filter}`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const commissionsIds: string[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        commissionsIds.push(data.value[index].fields.commissionId);\n      }\n      const submissions = await getSubmissions(commissionsIds);\n      if (\n        submissions.result === loadingStateEnum.success &&\n        submissions.data !== undefined\n      ) {\n        const resultCommissions: commissionType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          const submissionData = submissions.data.get(\n            data.value[index].fields.commissionID as string,\n          );\n          resultCommissions.push({\n            itemId: data.value[index].id,\n            title: data.value[index].fields.Title,\n            startDate: data.value[index].fields.startDate,\n            endDate: data.value[index].fields.endDate,\n            claimCount: submissionData ? submissionData.claimCount : 0,\n            submissionsCount: submissionData\n              ? submissionData.submissionsCount\n              : 0,\n            reviewedCount: submissionData ? submissionData.reviewedCount : 0,\n            points: data.value[index].fields.points as number,\n            proximity: data.value[index].fields.proximity as number,\n            commissionId: data.value[index].fields.commissionID as string,\n            hidden: data.value[index].fields.hidden,\n            timed: data.value[index].fields.timed,\n            maxNumberOfClaims: data.value[index].fields.maxNumberOfClaims,\n            allowMultipleSubmissions:\n              data.value[index].fields.allowMultipleSubmissions,\n            value: data.value[index].fields.hidden - 1,\n          });\n        }\n        return {\n          result: loadingStateEnum.success,\n          data: resultCommissions,\n          nextLink: data['@odata.nextLink'],\n        };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\ntype unclaimedCommissionSubmissionType = {\n  commissionId: string;\n  submissions: number;\n};\n\n// Get Claimed Commmissions\n\n// Gets points when given an array of commission ids\nasync function getCommissionsBatch(\n  commissions: unclaimedCommissionSubmissionType[],\n): Promise<{ result: loadingStateEnum; data?: commissionType[] }> {\n  const outputRequests: { id: string; method: string; url: string }[] = [];\n  for (let index = 0; index < commissions.length; index += 1) {\n    outputRequests.push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?$expand=fields&$filter=fields/commissionID%20eq%20'${\n        commissions[index]\n      }' `,\n    });\n  }\n  const batchData = {\n    requests: outputRequests,\n  };\n\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/$batch',\n    'POST',\n    JSON.stringify(batchData),\n    [{ key: 'Accept', value: 'application/json' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const commissionsResult: commissionType[] = [];\n    for (\n      let requestIndex = 0;\n      requestIndex < data.responses.length;\n      requestIndex += 1\n    ) {\n      if (data.responses[requestIndex].status === 200) {\n        for (\n          let index = 0;\n          index < data.responses[requestIndex].body.value.length;\n          index += 1\n        ) {\n          commissionsResult.push({\n            itemId: data.responses[requestIndex].body.value[index].id,\n            title: data.responses[requestIndex].body.value[index].fields.Title,\n            startDate:\n              data.responses[requestIndex].body.value[index].fields.startDate,\n            endDate:\n              data.responses[requestIndex].body.value[index].fields.endDate,\n            submissionsCount:\n              commissions[parseInt(data.responses[requestIndex].id) - 1]\n                .submissions,\n            claimCount: 0,\n            reviewedCount: 0, // TO DO fix\n            points: data.responses[requestIndex].body.value[index].fields\n              .points as number,\n            proximity: data.responses[requestIndex].body.value[index].fields\n              .proximity as number,\n            commissionId: data.responses[requestIndex].body.value[index].fields\n              .commissionID as string,\n            hidden:\n              data.responses[requestIndex].body.value[index].fields.hidden,\n            timed: data.responses[requestIndex].body.value[index].fields.timed,\n            maxNumberOfClaims:\n              data.responses[requestIndex].body.value[index].fields\n                .maxNumberOfClaims,\n            allowMultipleSubmissions:\n              data.responses[requestIndex].body.value[index].fields\n                .allowMultipleSubmissions,\n            value:\n              data.responses[requestIndex].body.value[index].fields.hidden - 1,\n          });\n        }\n      } else {\n        return { result: loadingStateEnum.failed, data: commissionsResult };\n      }\n    }\n    return { result: loadingStateEnum.success, data: commissionsResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getUnclaimedCommissions(): Promise<{\n  result: loadingStateEnum;\n  data?: commissionType[];\n}> {\n  let nextUrl = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.commissionSubmissionsListId\n  }/items?expand=fields&$filter=fields/userId%20eq%20'${\n    store.getState().microsoftProfileData.id\n  }'%20and%20fields/submissionApproved%20ne%20false`;\n  // The first value in the map is the commission id and the second is the submissions count b/c all are unclaimed\n  const commissionsMap = new Map<string, number>();\n  while (nextUrl !== '') {\n    const submissionResultClaimed = await callMsGraph(nextUrl);\n    if (!submissionResultClaimed.ok) {\n      return { result: loadingStateEnum.failed };\n    }\n    const submissionResultClaimedData = await submissionResultClaimed.json();\n    for (\n      let index = 0;\n      index < submissionResultClaimedData.value.length;\n      index += 1\n    ) {\n      if (\n        submissionResultClaimedData.value[index].fields.submissionApproved ===\n        false\n      ) {\n        if (\n          commissionsMap.has(\n            submissionResultClaimedData.value[index].fields.commissionId,\n          )\n        ) {\n          const count = commissionsMap.get(\n            submissionResultClaimedData.value[index].fields.commissionId,\n          );\n          if (count !== undefined) {\n            commissionsMap.set(\n              submissionResultClaimedData.value[index].fields.commissionId,\n              count + 1,\n            );\n          }\n        } else {\n          commissionsMap.set(\n            submissionResultClaimedData.value[index].fields.commissionId,\n            1,\n          );\n        }\n      }\n    }\n    if (submissionResultClaimedData['@odata.nextLink'] !== undefined) {\n      nextUrl = submissionResultClaimedData['@odata.nextLink'];\n    } else {\n      nextUrl = '';\n    }\n  }\n  const commissionsBatchData: unclaimedCommissionSubmissionType[][] = [[]];\n  let batchIndex = 0;\n  commissionsMap.forEach((value, key) => {\n    commissionsBatchData[batchIndex].push({\n      commissionId: key,\n      submissions: value,\n    });\n    if (commissionsBatchData[batchIndex].length >= 20) {\n      commissionsBatchData.push([]);\n      batchIndex += 1;\n    }\n  });\n\n  let outCommissions: commissionType[] = [];\n  for (let index = 0; index < commissionsBatchData.length; index += 1) {\n    const result = await getCommissionsBatch(commissionsBatchData[index]);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      outCommissions = [...outCommissions, ...result.data];\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: outCommissions };\n}\n","import { View, Text, Pressable, ViewStyle } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { ChevronLeft } from './Icons/Icons';\n\nexport default function BackButton({\n  to,\n  style,\n}: {\n  to: string;\n  style?: ViewStyle;\n}) {\n  const navigate = useNavigate();\n  return (\n    <Pressable\n      style={[\n        {\n          position: 'absolute',\n          flexDirection: 'row',\n          top: 0,\n          left: 5,\n          zIndex: 100,\n        },\n        style,\n      ]}\n      onPress={() => navigate(to)}\n    >\n      <ChevronLeft width={14} height={14} />\n      <Text>Back</Text>\n    </Pressable>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  FlatList,\n  Pressable,\n  ScrollView,\n  Text,\n  View,\n  Image,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CommissionsView from './CommissionsView';\nimport { commissionsSlice } from '../../Redux/reducers/commissionsReducer';\nimport { RootState } from '../../Redux/store';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport getPoints from '../../Functions/commissions/getPoints';\nimport getCommissions from '../../Functions/commissions/getCommissions';\nimport ProgressView from '../../UI/ProgressView';\nimport BackButton from '../../UI/BackButton';\nimport { Colors, loadingStateEnum } from '../../types';\n\nexport default function Commissions() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const { commissionNextLink } = useSelector(\n    (state: RootState) => state.commissions,\n  );\n  const { currentCommissions, selectedCommission, commissionsState, points } =\n    useSelector((state: RootState) => state.commissions);\n\n  const [isHoverPicker, setIsHoverPicker] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  // Loading States\n\n  async function loadData() {\n    const pointResult = await getPoints();\n    if (\n      pointResult.result === loadingStateEnum.success &&\n      pointResult.data !== undefined\n    ) {\n      dispatch(commissionsSlice.actions.setPoints(pointResult.data));\n      const commissionsResult = await getCommissions();\n      if (\n        (commissionsResult.result === loadingStateEnum.success,\n        commissionsResult.data !== undefined)\n      ) {\n        dispatch(\n          commissionsSlice.actions.setCurrentCommissions(\n            commissionsResult.data,\n          ),\n        );\n      }\n      dispatch(\n        commissionsSlice.actions.setCommissionNextLink(\n          commissionsResult.nextLink,\n        ),\n      );\n      dispatch(\n        commissionsSlice.actions.setCommissionsState(commissionsResult.result),\n      );\n    } else {\n      dispatch(\n        commissionsSlice.actions.setCommissionsState(pointResult.result),\n      );\n    }\n    // TO DO pagination\n  }\n\n  async function loadCommissionData(\n    startDate?: { date: Date; filter: 'ge' | 'le' },\n    endDate?: { date: Date; filter: 'ge' | 'le' },\n    claimed?: boolean,\n    nextLink?: string,\n  ) {\n    dispatch(\n      commissionsSlice.actions.setCommissionsState(loadingStateEnum.loading),\n    );\n    const result = await getCommissions(nextLink, startDate, endDate, claimed);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      dispatch(commissionsSlice.actions.setCurrentCommissions(result.data));\n    }\n    dispatch(commissionsSlice.actions.setCommissionsState(result.result));\n    dispatch(commissionsSlice.actions.setCommissionNextLink(result.nextLink));\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (siteId !== '') {\n      loadData();\n    }\n  }, [siteId]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ width, height, backgroundColor: Colors.white }}>\n        <View\n          style={{\n            width,\n            height: height * 0.1,\n            backgroundColor: Colors.darkGray,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n          <Text\n            style={{\n              fontFamily: 'BukhariScript',\n              fontSize: 25,\n              color: Colors.white,\n            }}\n          >\n            Commissions\n          </Text>\n        </View>\n        <View style={{ height: isHoverPicker ? height * 0.8 : height * 0.85 }}>\n          {commissionsState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height: height * 0.9,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={width < height ? width * 0.1 : height * 0.1}\n                height={width < height ? width * 0.1 : height * 0.1}\n              />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              {commissionsState === loadingStateEnum.success ? (\n                <FlatList\n                  style={{ height: height * 0.9 }}\n                  data={[undefined, ...currentCommissions]}\n                  renderItem={({ item, index }) => (\n                    <>\n                      {index === 0 ? (\n                        <View\n                          style={{\n                            flexDirection: 'row',\n                            margin: 10,\n                            backgroundColor: Colors.maroon,\n                            borderRadius: 15,\n                            shadowOffset: { width: 2, height: 3 },\n                          }}\n                        >\n                          <View style={{ margin: 10, flexDirection: 'row' }}>\n                            <Image\n                              source={require('../../../assets/images/PaulyLogo.png')}\n                              resizeMode=\"contain\"\n                              style={{ width: 50, height: 50 }}\n                            />\n                            <Text\n                              numberOfLines={1}\n                              adjustsFontSizeToFit\n                              style={{\n                                fontSize: 45,\n                                color: Colors.white,\n                                fontFamily: 'BukhariScript',\n                                width: 100,\n                                paddingLeft: 10,\n                              }}\n                            >\n                              {points}\n                            </Text>\n                          </View>\n                        </View>\n                      ) : (\n                        <>\n                          {item !== undefined ? (\n                            <Pressable\n                              onPress={() => {\n                                dispatch(\n                                  commissionsSlice.actions.setSelectedCommission(\n                                    item.commissionId,\n                                  ),\n                                );\n                              }}\n                              key={`Link_${item.commissionId}`}\n                              style={{ backgroundColor: 'transparent' }}\n                            >\n                              <View\n                                key={item.commissionId}\n                                style={{\n                                  borderRadius: 15,\n                                  marginLeft: width * 0.025,\n                                  elevation: 2,\n                                  marginRight: width * 0.025,\n                                  marginTop: height * 0.02,\n                                  backgroundColor: Colors.white,\n                                  shadowColor: 'black',\n                                  shadowOffset: { width: 1, height: 1 },\n                                  shadowOpacity: 1,\n                                  shadowRadius: 5,\n                                }}\n                              >\n                                <View style={{ margin: 10 }}>\n                                  <Text>{item.title}</Text>\n                                  {item.timed &&\n                                  item.startDate !== undefined ? (\n                                    <Text>\n                                      {new Date(\n                                        item.startDate,\n                                      ).toLocaleDateString('en-US', {\n                                        month: 'long',\n                                        day: 'numeric',\n                                        minute: 'numeric',\n                                      })}\n                                    </Text>\n                                  ) : null}\n                                </View>\n                              </View>\n                            </Pressable>\n                          ) : null}\n                        </>\n                      )}\n                    </>\n                  )}\n                  keyExtractor={item => `${item?.commissionId}_${createUUID()}`}\n                  onEndReachedThreshold={1}\n                  onEndReached={() => {\n                    if (commissionNextLink !== undefined) {\n                      loadCommissionData(\n                        undefined,\n                        undefined,\n                        undefined,\n                        commissionNextLink,\n                      );\n                    }\n                  }}\n                  initialNumToRender={currentCommissions.length}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </View>\n          )}\n        </View>\n        <Pressable\n          style={{ height: isHoverPicker ? height * 0.1 : height * 0.05 }}\n          onHoverIn={() => {\n            setIsHoverPicker(true);\n          }}\n          onHoverOut={() => {\n            setIsHoverPicker(false);\n          }}\n        >\n          <ScrollView\n            horizontal\n            style={{\n              height: isHoverPicker ? height * 0.1 : height * 0.05,\n              width,\n              backgroundColor: Colors.white,\n            }}\n            showsHorizontalScrollIndicator={false}\n          >\n            <PickerPiece\n              text=\"All\"\n              onPress={() => {\n                loadCommissionData();\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Current\"\n              onPress={() => {\n                loadCommissionData(\n                  { date: new Date(), filter: 'ge' },\n                  { date: new Date(), filter: 'le' },\n                );\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Past\"\n              onPress={() => {\n                loadCommissionData(\n                  { date: new Date(), filter: 'le' },\n                  { date: new Date(), filter: 'le' },\n                );\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Claimed\"\n              onPress={() => {\n                loadCommissionData(undefined, undefined, true);\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Future\"\n              onPress={() => {\n                loadCommissionData(undefined, {\n                  date: new Date(),\n                  filter: 'ge',\n                });\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n          </ScrollView>\n        </Pressable>\n      </View>\n      <View\n        style={{\n          position: 'absolute',\n          zIndex: 2,\n          top: height * 0.1,\n          left: width * 0.05,\n        }}\n      >\n        {selectedCommission !== '' ? (\n          <CommissionsView\n            id={selectedCommission}\n            onClose={() =>\n              dispatch(commissionsSlice.actions.setSelectedCommission(''))\n            }\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nfunction PickerPiece({\n  text,\n  isHoverPicker,\n  setIsHoverPicker,\n  onPress,\n}: {\n  text: string;\n  onPress: () => void;\n  isHoverPicker: boolean;\n  setIsHoverPicker: (item: boolean) => void;\n}) {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      onPress={() => {\n        onPress();\n      }}\n      onHoverIn={() => {\n        setIsHoverPicker(true);\n        setIsSelected(true);\n      }}\n      onHoverOut={() => setIsSelected(false)}\n      style={{\n        height: isHoverPicker ? height * 0.1 : height * 0.05,\n        width: isSelected\n          ? currentBreakPoint >= 2\n            ? width * 0.3\n            : width * 0.6\n          : currentBreakPoint >= 2\n          ? width * 0.2\n          : width * 0.4,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          height: isHoverPicker ? height * 0.06 : height * 0.03,\n          width: isSelected\n            ? currentBreakPoint >= 2\n              ? width * 0.28\n              : width * 0.46\n            : currentBreakPoint >= 2\n            ? width * 0.18\n            : width * 0.36,\n          marginLeft: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          marginRight: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          backgroundColor: Colors.darkGray,\n          borderRadius: 15,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white }}>{text}</Text>\n      </View>\n    </Pressable>\n  );\n}\n","import { taskDeltaSlice } from '../../Redux/reducers/tasksReducers';\nimport store from '../../Redux/store';\nimport {\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction convertStringToTaskStatus(status: string): taskStatusEnum {\n  if (status === 'notStarted') {\n    return taskStatusEnum.notStarted;\n  }\n  if (status === 'inProgress') {\n    return taskStatusEnum.inProgress;\n  }\n  if (status === 'completed') {\n    return taskStatusEnum.completed;\n  }\n  if (status === 'waitingOnOthers') {\n    return taskStatusEnum.waitingOnOthers;\n  }\n  return taskStatusEnum.deferred;\n}\n\nfunction convertStringToImportance(importance: string): taskImportanceEnum {\n  if (importance === 'high') {\n    return taskImportanceEnum.high;\n  }\n  if (importance === 'low') {\n    return taskImportanceEnum.low;\n  }\n  return taskImportanceEnum.normal;\n}\n\n// deltaRunAgain is send if the delta link has failed or the responce 410 meaning syncronization is needed.\nexport default async function getUsersTasks(\n  deltaRunAgain?: boolean,\n): Promise<{ result: loadingStateEnum; data?: taskType[] }> {\n  let deltaMode = false;\n  if (store.getState().tasksDeltaLink !== '' && deltaRunAgain !== true) {\n    deltaMode = true;\n  }\n  const url = deltaMode\n    ? store.getState().tasksDeltaLink\n    : 'https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/delta';\n  const tasksResult = await callMsGraph(url);\n  if (tasksResult.ok) {\n    const taskData = await tasksResult.json();\n    if (taskData['@odata.deltaLink'] !== undefined) {\n      store.dispatch(\n        taskDeltaSlice.actions.setTaskDeltaLink(taskData['@odata.deltaLink']),\n      );\n    }\n    const resultTasks: taskType[] = [];\n    for (let index = 0; index < taskData.value.length; index += 1) {\n      resultTasks.push({\n        name: taskData.value[index].title,\n        id: taskData.value[index].id,\n        importance: convertStringToImportance(taskData.value[index].importance),\n        status: convertStringToTaskStatus(taskData.value[index].status),\n        excess: false,\n      });\n    }\n    resultTasks.unshift({\n      name: '',\n      importance: taskImportanceEnum.normal,\n      id: '',\n      status: taskStatusEnum.notStarted,\n      excess: true,\n    });\n    return { result: loadingStateEnum.success, data: resultTasks };\n  }\n  if (deltaMode) {\n    const secondAttempt = await getUsersTasks(true);\n    return secondAttempt;\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  getInsightData.ts\n\n  used to get insight files that are used on the notification page.\n*/\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getInsightData(): Promise<insightResult> {\n  // Get used https://learn.microsoft.com/en-us/graph/api/insights-list-used?view=graph-rest-1.0&tabs=http\n  const usedResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/insights/used?$select=resourceReference,resourceVisualization',\n  );\n  const userOutData: attachment[] = [];\n  let userState: loadingStateEnum = loadingStateEnum.loading; // State of getting users data\n  if (usedResult.ok) {\n    // Check if result success\n    const userData = await usedResult.json();\n    for (let index = 0; index < userData.value.length; index += 1) {\n      userOutData.push({\n        webUrl: userData.value[index].resourceReference.webUrl,\n        id: userData.value[index].resourceReference.id,\n        title: userData.value[index].resourceVisualization.title,\n        type: userData.value[index].resourceVisualization.type,\n      });\n    }\n    userState = loadingStateEnum.success;\n  } else {\n    userState = loadingStateEnum.failed;\n  }\n\n  // Get trending https://learn.microsoft.com/en-us/graph/api/insights-list-trending?view=graph-rest-1.0&tabs=http\n  const trendingResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/insights/trending?$select=resourceReference,resourceVisualization',\n  );\n  const trendingOutData: attachment[] = [];\n  let trendingState = loadingStateEnum.loading; // state of getting trendings data\n  if (trendingResult.ok) {\n    const trendingData = await trendingResult.json();\n    for (let index = 0; index < trendingData.value.length; index += 1) {\n      trendingOutData.push({\n        webUrl: trendingData.value[index].resourceReference.webUrl,\n        id: trendingData.value[index].resourceReference.id,\n        title: trendingData.value[index].resourceVisualization.title,\n        type: trendingData.value[index].resourceVisualization.type,\n      });\n    }\n    trendingState = loadingStateEnum.success;\n  } else {\n    trendingState = loadingStateEnum.failed;\n  }\n  return {\n    userState,\n    trendingState,\n    userData: userOutData,\n    trendingData: trendingOutData,\n  };\n}\n","import React from 'react';\nimport Animated, {\n  SharedValue,\n  useAnimatedProps,\n} from 'react-native-reanimated';\nimport { Path } from 'react-native-svg';\n\nexport default function AnimatedCheckMarkPath({\n  progress,\n  checkMarkColor,\n  checked,\n}: {\n  progress: SharedValue<number>;\n  checkMarkColor: any;\n  checked: boolean;\n}) {\n  const AnimatedPath = Animated.createAnimatedComponent(Path);\n  const checkMarkAnimation = useAnimatedProps(() => {\n    const strokeDashoffset = 1000 * progress.value;\n    return { strokeDashoffset };\n  });\n  return (\n    <AnimatedPath\n      animatedProps={checkMarkAnimation}\n      d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\n      stroke={checkMarkColor}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n      strokeWidth={5}\n      strokeDasharray={1000}\n      strokeMiterlimit={10}\n    />\n  );\n}\n","// Original Code from https://github.com/Rakha112/react-native-custom-checkbox/blob/main/src/components/CustomCheckBox.js\n\nimport React from 'react';\nimport Svg, { Circle } from 'react-native-svg';\nimport { Easing, useDerivedValue, withTiming } from 'react-native-reanimated';\nimport { View } from 'react-native';\nimport AnimatedCheckMarkPath from './AnimatedCheckMarkPath';\n\nexport default function CustomCheckBox({\n  checked,\n  checkMarkColor,\n  height,\n  width,\n  strokeDasharray,\n}: {\n  checked: boolean;\n  checkMarkColor: string;\n  height: number;\n  width: number;\n  strokeDasharray?: number;\n}) {\n  const progress = useDerivedValue(() => {\n    return withTiming(checked ? 0 : 1, {\n      duration: 1500,\n      easing: Easing.inOut(Easing.bezierFn(0.5, -0.02, 0.92, 0.37)),\n    });\n  });\n\n  return (\n    <View>\n      <Svg width={width} height={height} viewBox=\"0 0 52 52\">\n        <AnimatedCheckMarkPath\n          progress={progress}\n          checkMarkColor={checkMarkColor}\n          checked={checked}\n        />\n        <Circle\n          cx=\"26\"\n          cy=\"26\"\n          r=\"20\"\n          stroke=\"black\"\n          strokeDasharray={strokeDasharray}\n          strokeWidth=\"2\"\n          fill=\"none\"\n        />\n      </Svg>\n    </View>\n  );\n}\n","import { Image } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport * as PDFJS from 'pdfjs-dist';\nimport { useSelector } from 'react-redux';\nimport { DocumentInitParameters } from 'pdfjs-dist/types/src/display/api';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport store, { RootState } from '../../Redux/store';\nimport { pdfDataSlice } from '../../Redux/reducers/pdfDataReducer';\n\nPDFJS.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${PDFJS.version}/legacy/build/pdf.worker.min.js`;\n\nexport default function PDFView({ width }: { width: number }) {\n  const { powerpointBlob } = useSelector((state: RootState) => state.paulyData);\n  const { images, pageNumber } = useSelector(\n    (state: RootState) => state.pdfData,\n  );\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function convertPdfToImages(url: string) {\n    const imagesArray: string[] = [];\n    const dataResult = await fetch(url);\n    if (dataResult.ok) {\n      const blob = await dataResult.blob();\n      const file = new Blob([blob], { type: 'application/pdf' });\n      const fileURL = URL.createObjectURL(file);\n      const docInitParams: DocumentInitParameters = { url: fileURL };\n\n      const pdf = await PDFJS.getDocument(docInitParams).promise;\n      const canvas = document.createElement('canvas'); // Fail\n      for (let i = 0; i < pdf.numPages; i += 1) {\n        const page = await pdf.getPage(i + 1);\n        const viewport = page.getViewport({ scale: 1 });\n        const context = canvas.getContext('2d'); // Fail\n        canvas.height = viewport.height; // Fail\n        canvas.width = viewport.width; // Fail\n        if (context !== null) {\n          await page.render({ canvasContext: context, viewport }).promise;\n          imagesArray.push(canvas.toDataURL());\n        }\n      }\n      canvas.remove();\n      store.dispatch(pdfDataSlice.actions.setImages(imagesArray));\n    }\n  }\n\n  useEffect(() => {\n    convertPdfToImages(powerpointBlob);\n  }, [powerpointBlob]);\n\n  const singleTap = Gesture.Tap().onEnd((_event, success) => {\n    if (success) {\n      if (pageNumber + 1 < images.length) {\n        store.dispatch(pdfDataSlice.actions.increasePageNumber());\n      } else {\n        store.dispatch(pdfDataSlice.actions.setPageNumber(0));\n      }\n    }\n  });\n  const doubleTap = Gesture.Tap()\n    .numberOfTaps(2)\n    .onEnd((_event, success) => {\n      if (success) {\n        if (pageNumber - 1 >= 1) {\n          store.dispatch(pdfDataSlice.actions.decreasePageNumber());\n        } else if (images.length >= 1) {\n          store.dispatch(pdfDataSlice.actions.setPageNumber(images.length - 1));\n        }\n      }\n    });\n\n  const taps = Gesture.Exclusive(doubleTap, singleTap);\n\n  const fling = Gesture.Fling().onEnd(() => {\n    if (pageNumber + 1 < images.length) {\n      store.dispatch(pdfDataSlice.actions.increasePageNumber());\n    } else {\n      store.dispatch(pdfDataSlice.actions.setPageNumber(pageNumber - 1));\n    }\n  });\n\n  const compound = Gesture.Simultaneous(fling, taps);\n\n  useEffect(() => {\n    if (pageNumber < images.length) {\n      Image.getSize(\n        images[pageNumber],\n        (imageMeasureWidth, imageMeasureHeight) => {\n          const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n          setImageHeight(width * heightPerWidth);\n        },\n      );\n    }\n  }, [pageNumber, images, width]);\n\n  return (\n    <>\n      {pageNumber < images.length ? (\n        <GestureDetector gesture={compound}>\n          <Image\n            source={{ uri: images[pageNumber], width }}\n            style={{ borderRadius: 15, width, height: imageHeight }}\n            height={imageHeight}\n            width={width}\n          />\n        </GestureDetector>\n      ) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { Shape, SvgProps } from 'react-native-svg';\nimport {\n  AudioIcon,\n  DocumentIcon,\n  ExcelIcon,\n  FolderIcon,\n  ImageIcon,\n  OneNoteIcon,\n  PDFIcon,\n  PowerpointIcon,\n  VideoIcon,\n  WordIcon,\n} from './Icons';\n\ninterface iconProps {\n  width: number;\n  height: number;\n  mimeType: string;\n  style?: StyleProp<ViewStyle> | undefined;\n  props?: Shape<SvgProps> | undefined;\n}\n\nconst wordTypes = [\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n];\nconst excelTypes = [\n  'application/ms-excel',\n  'application/msexcel',\n  'application/vnd.ms-excel',\n];\nconst powerpointTypes = [\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'application/vnd.ms-powerpoint',\n  'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n  'application/vnd.openxmlformats-officedocument.presentationml.template',\n];\n\nexport default function MimeTypeIcon({\n  width,\n  height,\n  style,\n  props,\n  mimeType,\n}: iconProps) {\n  return (\n    <>\n      {mimeType.split('/')[0] === 'image' ? (\n        <ImageIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] === 'application' ? (\n        <>\n          {wordTypes.includes(mimeType) ? (\n            <WordIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {excelTypes.includes(mimeType) ? (\n            <ExcelIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'application/pdf' ? (\n            <PDFIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {powerpointTypes.includes(mimeType) ? (\n            <PowerpointIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {wordTypes.includes(mimeType) &&\n          excelTypes.includes(mimeType) &&\n          mimeType !== 'application/pdf' &&\n          mimeType !== 'application/vnd.ms-powerpoint' ? (\n            <DocumentIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n        </>\n      ) : null}\n      {mimeType.split('/')[0] === 'audio' ? (\n        <AudioIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] === 'video' ? (\n        <VideoIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType === 'folder' ? (\n        <FolderIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] !== 'image' &&\n      mimeType.split('/')[0] !== 'application' &&\n      mimeType.split('/')[0] !== 'audio' &&\n      mimeType.split('/')[0] !== 'video' &&\n      mimeType !== 'folder' ? (\n        <>\n          {mimeType === 'PowerPoint' ? (\n            <PowerpointIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Word' ? (\n            <WordIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Excel' ? (\n            <ExcelIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Pdf' ? (\n            <PDFIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'OneNote' || mimeType === 'OneNotePage' ? (\n            <OneNoteIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Audio' ? (\n            <AudioIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Video' ? (\n            <VideoIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Image' ? (\n            <ImageIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Folder' ? (\n            <FolderIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType !== 'PowerPoint' &&\n          mimeType !== 'Word' &&\n          mimeType !== 'OneNote' &&\n          mimeType !== 'OneNotePage' &&\n          mimeType !== 'Audio' &&\n          mimeType !== 'Video' &&\n          mimeType !== 'Image' &&\n          mimeType !== 'Folder' ? (\n            <DocumentIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n        </>\n      ) : null}\n    </>\n  );\n}\n","import store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { homepageDataSlice } from '../Redux/reducers/homepageDataReducer';\nimport {\n  getEvent,\n  getSchoolDay,\n  getTimetable,\n  getSchedule,\n} from './calendar/calendarFunctionsGraph';\nimport { Colors, loadingStateEnum, semesters } from '../types';\n\nexport async function getRooms(\n  nextLink?: string,\n  search?: string,\n): Promise<{ result: loadingStateEnum; data?: roomType[]; nextLink?: string }> {\n  const searchFilter = search\n    ? `&$filter=fields/roomName%20eq%20${search}`\n    : ''; // TODO deal with search filter\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.roomListId\n      }/items?expand=fields${searchFilter}`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultArray: roomType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultArray.push({\n        name: data.value[index].fields.roomName,\n        id: data.value[index].fields.roomId,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: resultArray,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getRoom(\n  roomId: string,\n): Promise<{ result: loadingStateEnum; data?: roomType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.roomListId\n    }/items?expand=fields&fields/roomId%20eq%20'${roomId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length === 0) {\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.roomName,\n          id: data.value[0].feilds.ro0mId,\n        },\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getClasses(): Promise<{\n  result: loadingStateEnum;\n  data?: classType[];\n}> {\n  let classQuery: string = `https://graph.microsoft.com/v1.0/me/joinedTeams?$select=id`;\n  const batchDataRequests: { id: string; method: string; url: string }[][] = [\n    [],\n  ];\n  while (classQuery !== undefined) {\n    const classResult = await callMsGraph(classQuery);\n    if (classResult.ok) {\n      const classData = await classResult.json();\n      classQuery = classData['@odata.nextLink'];\n\n      // Batch Request perfroming a get request on each class group\n\n      // Format Data\n      for (let index = 0; index < classData.value.length; index += 1) {\n        batchDataRequests[Math.floor(index / 20)].push({\n          id: (index + 1).toString(),\n          method: 'GET',\n          url: `/groups/${classData.value[index].id}?$select=displayName,id,${\n            store.getState().paulyList.classExtensionId\n          }`,\n        });\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  // Run Queries\n  const batchHeaders = new Headers();\n  batchHeaders.append('Accept', 'application/json');\n  const classes: classType[] = [];\n  for (let index = 0; index < batchDataRequests.length; index += 1) {\n    const batchData = {\n      requests: batchDataRequests[index],\n    };\n    const batchResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/$batch',\n      'POST',\n      JSON.stringify(batchData),\n    );\n    if (batchResult.ok) {\n      const batchResultData = await batchResult.json();\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultData.responses.length;\n        batchIndex += 1\n      ) {\n        if (batchResultData.responses[batchIndex].status === 200) {\n          if (\n            batchResultData.responses[batchIndex].body[\n              store.getState().paulyList.classExtensionId\n            ] !== undefined\n          ) {\n            classes.push({\n              name: batchResultData.responses[batchIndex].body.displayName,\n              id: batchResultData.responses[batchIndex].body.id,\n              periods: JSON.parse(\n                batchResultData.responses[batchIndex].body[\n                  store.getState().paulyList.classExtensionId\n                ].periodData,\n              ),\n              room: {\n                name: '',\n                id: '',\n              },\n              schoolYearId: '',\n              semester: semesters.semesterOne,\n            });\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: classes };\n}\n\nexport async function getClassEvents(\n  scheduleId: string,\n  semester: semesters,\n  schoolYearEventId: string,\n  schoolDay: schoolDayType,\n  date: Date,\n): Promise<{ result: loadingStateEnum; data?: eventType[] }> {\n  const scheduleResult = await getSchedule(scheduleId);\n  const classResult = await getClasses();\n  if (\n    scheduleResult.result === loadingStateEnum.success &&\n    classResult.result === loadingStateEnum.success &&\n    classResult.data !== undefined &&\n    scheduleResult.schedule !== undefined\n  ) {\n    const outputEvents: eventType[] = [];\n    for (let index = 0; index < classResult.data.length; index += 1) {\n      if (\n        classResult.data[index].schoolYearId === schoolYearEventId &&\n        classResult.data[index].semester === semester\n      ) {\n        // This check should never fail\n        if (classResult.data[index].periods.length > schoolDay.order) {\n          // Find Time\n          const period: number =\n            classResult.data[index].periods[schoolDay.order];\n          const periodData = scheduleResult.schedule.periods[period];\n          const startDate: Date = new Date(date.toISOString());\n          startDate.setHours(periodData.startHour);\n          startDate.setMinutes(periodData.startMinute);\n          startDate.setSeconds(0);\n          const endDate: Date = date;\n          endDate.setHours(periodData.endHour);\n          endDate.setMinutes(periodData.endMinute);\n          endDate.setSeconds(0);\n          outputEvents.push({\n            id: classResult.data[index].id,\n            name: classResult.data[index].name,\n            startTime: startDate.toISOString(),\n            endTime: endDate.toISOString(),\n            eventColor: Colors.white,\n            microsoftEvent: false,\n            allDay: false,\n          });\n        }\n      }\n    }\n    outputEvents.sort((a, b) => {\n      return new Date(a.startTime).getTime() - new Date(b.startTime).getTime();\n    });\n    return { result: loadingStateEnum.success, data: outputEvents };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getClassEventsFromDay(\n  date?: Date,\n): Promise<{ result: loadingStateEnum; data?: eventType[] }> {\n  const result = await getSchoolDay(date || new Date());\n  if (\n    result.result === loadingStateEnum.success &&\n    result.event !== undefined &&\n    result.event.paulyEventData !== undefined\n  ) {\n    const outputIds: schoolDayDataCompressedType = JSON.parse(\n      result.event.paulyEventData,\n    );\n    const eventResult = await getEvent(outputIds.schoolYearEventId);\n    if (\n      eventResult.result === loadingStateEnum.success &&\n      eventResult.data !== undefined &&\n      eventResult.data?.paulyEventData !== undefined\n    ) {\n      const timetableResult = await getTimetable(\n        eventResult.data.paulyEventData,\n      );\n      if (\n        timetableResult.result === loadingStateEnum.success &&\n        timetableResult.timetable !== undefined\n      ) {\n        const schoolDay = timetableResult.timetable.days.find(\n          (e: { id: string }) => {\n            return e.id === outputIds.schoolDayId;\n          },\n        );\n        const schedule = timetableResult.timetable.schedules.find(\n          (e: { id: string }) => {\n            return e.id === outputIds.scheduleId;\n          },\n        );\n        const dressCode =\n          timetableResult.timetable.dressCode.dressCodeData.find(\n            (e: { id: string }) => {\n              return e.id === outputIds.dressCodeId;\n            },\n          );\n        const dressCodeIncentive =\n          timetableResult.timetable.dressCode.dressCodeIncentives.find(\n            (e: { id: string }) => {\n              return e.id === outputIds?.dressCodeIncentiveId;\n            },\n          );\n        if (\n          schoolDay !== undefined &&\n          schedule !== undefined &&\n          dressCode !== undefined\n        ) {\n          store.dispatch(\n            homepageDataSlice.actions.setSchoolDayData({\n              schoolDay,\n              schedule,\n              dressCode,\n              semester: outputIds.semester,\n              dressCodeIncentive,\n            }),\n          );\n          if (schedule !== undefined) {\n            const classResult = await getClassEvents(\n              schedule.id,\n              outputIds.semester,\n              outputIds.schoolYearEventId,\n              schoolDay,\n              new Date(result.event.startTime),\n            );\n            if (\n              classResult.result === loadingStateEnum.success &&\n              classResult.data !== undefined\n            ) {\n              if (classResult.data.length >= 1) {\n                const startTimeDate = new Date(classResult.data[0].startTime);\n                const hourTime =\n                  (startTimeDate.getHours() % 12) + 1 <= 9\n                    ? `0${(startTimeDate.getHours() % 12) + 1}`\n                    : (startTimeDate.getHours() % 12) + 1;\n                const monthTime =\n                  startTimeDate.getMinutes() <= 9\n                    ? `0${startTimeDate.getMinutes()}`\n                    : startTimeDate.getMinutes().toString();\n                store.dispatch(\n                  homepageDataSlice.actions.setStartTime(\n                    `${hourTime}:${monthTime}`,\n                  ),\n                );\n              }\n              return {\n                result: loadingStateEnum.success,\n                data: classResult.data,\n              };\n            }\n            return { result: loadingStateEnum.failed };\n          }\n          return { result: loadingStateEnum.failed };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  18 October 2023\n  Pauly\n*/\n\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  Linking,\n  ScrollView,\n  ListRenderItemInfo,\n  Switch,\n  Animated,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport { FlatList } from 'react-native-gesture-handler';\nimport store, { RootState } from '../Redux/store';\nimport getCurrentPaulyData from '../Functions/homepage/getCurrentPaulyData';\nimport {\n  Colors,\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../types';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport getUsersTasks from '../Functions/homepage/getUsersTasks';\nimport ProgressView from '../UI/ProgressView';\nimport getInsightData from '../Functions/homepage/getInsightData';\nimport CustomCheckBox from '../UI/CheckMark/CustomCheckBox';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport { homepageDataSlice } from '../Redux/reducers/homepageDataReducer';\nimport PDFView from '../UI/PDF/PDFView';\nimport BackButton from '../UI/BackButton';\nimport MimeTypeIcon from '../UI/Icons/MimeTypeIcon';\nimport { getClassEventsFromDay } from '../Functions/classesFunctions';\nimport { TrashIcon, WarningIcon } from '../UI/Icons/Icons';\n\n// Get Messages\n// Last Chat Message Channels Included\n\n// Pauly\n// Overview Message\n// Powerpoint\n\n// Insights\n// Quick Access To files\n\n// Calendar\n// Calendar Overview\n// Calendar Widget\n// Dress Code\n\n// Tasks\n\n// Wants\n// Assignments (problem is hard to test)\n\nexport default function Notifications() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const { message } = useSelector((state: RootState) => state.paulyData);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    if (siteId !== '') {\n      // Calendar Data\n      getClassEventsFromDay();\n\n      // Insights\n      const insightResult = await getInsightData();\n      dispatch(\n        homepageDataSlice.actions.setTrendingData(insightResult.trendingData),\n      );\n      dispatch(\n        homepageDataSlice.actions.setTrendingState(insightResult.trendingState),\n      );\n      dispatch(homepageDataSlice.actions.setUserData(insightResult.userData));\n      dispatch(homepageDataSlice.actions.setUserState(insightResult.userState));\n\n      // Pauly Data\n      await getCurrentPaulyData();\n\n      // List Data\n      const taskResult = await getUsersTasks();\n      if (\n        taskResult.result === loadingStateEnum.success &&\n        taskResult.data !== undefined\n      ) {\n        dispatch(homepageDataSlice.actions.setUserTasks(taskResult.data));\n      }\n      dispatch(homepageDataSlice.actions.setTaskState(taskResult.result));\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, [siteId]);\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.white,\n        bottom: Colors.white,\n      }),\n    );\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    'Comfortaa-Regular': require('../../assets/fonts/Comfortaa-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      {currentBreakPoint === 0 ? <BackButton to=\"/\" /> : null}\n      <View\n        style={{\n          width,\n          height: height * 0.1,\n          marginTop: currentBreakPoint === 0 ? 10 : 0,\n        }}\n      >\n        <View\n          style={{\n            width: width * 0.9,\n            height: height * 0.07,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 15,\n            backgroundColor: Colors.darkGray,\n            marginLeft: width * 0.05,\n            marginRight: width * 0.05,\n            marginTop: height * 0.015,\n            marginBottom: height * 0.015,\n          }}\n        >\n          <Text\n            style={{ color: Colors.white, fontFamily: 'Comfortaa-Regular' }}\n          >\n            {message}\n          </Text>\n        </View>\n      </View>\n      {currentBreakPoint === 0 ? (\n        <>\n          <WidgetView width={width * 0.9} height={height * 0.3} />\n          <BoardBlock />\n        </>\n      ) : (\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 0.9,\n            marginLeft: width * 0.05,\n          }}\n        >\n          <BoardBlock />\n          <View style={{ marginTop: height * 0.03 }}>\n            <WidgetView width={width * 0.2} height={height * 0.2} />\n          </View>\n        </View>\n      )}\n      <TaskBlock />\n      <InsightsBlock />\n    </ScrollView>\n  );\n}\n\nfunction WidgetView({ width, height }: { width: number; height: number }) {\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { schoolDayData, startTime } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  const dow: string[] = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  return (\n    <View\n      style={{\n        backgroundColor: Colors.maroon,\n        width,\n        height,\n        borderRadius: 15,\n        marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n      }}\n    >\n      <View\n        style={{\n          width,\n          height: height / 3,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white, fontSize: height / 6 }}>\n          {dow[new Date().getDay()]}\n        </Text>\n      </View>\n      {schoolDayData !== undefined ? (\n        <>\n          <View\n            style={{\n              backgroundColor: Colors.darkGray,\n              alignItems: 'center',\n              alignContent: 'center',\n              justifyContent: 'center',\n              width,\n              height: height / 6,\n            }}\n          >\n            <Text style={{ color: Colors.white }}>\n              {schoolDayData?.schedule.descriptiveName}\n            </Text>\n          </View>\n          <View style={{ flexDirection: 'row', height: height / 2 }}>\n            <View\n              style={{\n                height: height * 0.5,\n                width: width * 0.3,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Text\n                style={{\n                  color: Colors.white,\n                  fontWeight: 'bold',\n                  fontSize: height * 0.4,\n                }}\n              >\n                {schoolDayData?.schoolDay.shorthand}\n              </Text>\n            </View>\n            <View\n              style={{\n                height: height * 0.5,\n                width: width * 0.7,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Text style={{ color: Colors.white, fontSize: height / 3 }}>\n                {startTime}\n              </Text>\n            </View>\n          </View>\n        </>\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.darkGray,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            width,\n            height: height / 2,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>No School</Text>\n        </View>\n      )}\n    </View>\n  );\n}\n\nfunction TaskBlock() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { taskState, userTasks, isShowingCompleteTasks } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <View style={{ width }}>\n      <Text\n        style={{\n          fontSize: 24,\n          marginLeft: width * 0.05,\n          marginTop: height * 0.03,\n          marginBottom: height * 0.02,\n        }}\n      >\n        Tasks\n      </Text>\n      <View\n        style={{\n          shadowColor: 'black',\n          width: width * 0.9,\n          marginLeft: width * 0.05,\n          backgroundColor: Colors.white,\n          marginRight: width * 0.05,\n          height: height * 0.5,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ flexDirection: 'row', marginLeft: 10, marginTop: 5 }}>\n          <Text>Show Completed:</Text>\n          <Switch\n            trackColor={{ false: Colors.lightGray, true: Colors.darkGray }}\n            thumbColor={\n              isShowingCompleteTasks ? Colors.maroon : Colors.darkGray\n            }\n            ios_backgroundColor={Colors.lightGray}\n            onValueChange={e => {\n              store.dispatch(\n                homepageDataSlice.actions.setIsShowingCompletedTasks(e),\n              );\n            }}\n            value={isShowingCompleteTasks}\n            style={{ marginLeft: 5 }}\n          />\n        </View>\n        {taskState === loadingStateEnum.loading ? (\n          <View\n            style={{\n              width: width * 0.9,\n              height: height * 0.5 - 20,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView\n              width={\n                width * 0.9 < height * 0.5 - 20\n                  ? width * 0.45\n                  : height * 0.25 - 20\n              }\n              height={\n                width * 0.9 < height * 0.5 - 20\n                  ? width * 0.45\n                  : height * 0.25 - 20\n              }\n            />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {taskState === loadingStateEnum.success ? (\n              <FlatList\n                data={userTasks}\n                renderItem={task => (\n                  <TaskItem task={task} key={`User_Task_${task.item.id}`} />\n                )}\n              />\n            ) : (\n              <View>\n                <Text>Failed</Text>\n              </View>\n            )}\n          </>\n        )}\n      </View>\n    </View>\n  );\n}\n\nfunction DeleteTask({\n  onDelete,\n}: {\n  onDelete: () => void;\n  e: Animated.AnimatedInterpolation<string | number>;\n}) {\n  return (\n    <Pressable\n      onPress={() => onDelete()}\n      style={{\n        paddingLeft: 10,\n        paddingRight: 10,\n        backgroundColor: Colors.danger,\n      }}\n    >\n      <TrashIcon width={14} height={14} style={{ margin: 'auto' }} />\n    </Pressable>\n  );\n}\n\nfunction TaskItem({ task }: { task: ListRenderItemInfo<taskType> }) {\n  const [checked, setChecked] = useState<boolean>(\n    task.item.status === taskStatusEnum.completed,\n  );\n  const [updateTaskState, setUpdateTaskState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const { userTasks, isShowingCompleteTasks } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  const [currentText, setCurrentText] = useState(task.item.name);\n  const [mounted, setMounted] = useState(false);\n  const dispatch = useDispatch();\n\n  async function updateTaskStatus(status: taskStatusEnum) {\n    setUpdateTaskState(loadingStateEnum.loading);\n    const data = {\n      status:\n        status === taskStatusEnum.notStarted\n          ? 'notStarted'\n          : status === taskStatusEnum.inProgress\n          ? 'inProgress'\n          : status === taskStatusEnum.completed\n          ? 'completed'\n          : status === taskStatusEnum.waitingOnOthers\n          ? 'waitingOnOthers'\n          : 'deferred',\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const newItem: any = {};\n      Object.assign(newItem, task.item);\n      newItem.status = status;\n      dispatch(\n        homepageDataSlice.actions.updateUserTask({\n          index: task.index,\n          task: newItem,\n        }),\n      );\n      setUpdateTaskState(loadingStateEnum.success);\n    } else {\n      setUpdateTaskState(loadingStateEnum.failed);\n    }\n  }\n\n  async function updateText() {\n    setUpdateTaskState(loadingStateEnum.loading);\n    const data = {\n      title: userTasks[task.index].name,\n    };\n    if (task.item.excess === false) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setUpdateTaskState(loadingStateEnum.success);\n      } else {\n        setUpdateTaskState(loadingStateEnum.failed);\n      }\n    } else {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        const newTaskData = await result.json();\n        dispatch(\n          homepageDataSlice.actions.updateUserTask({\n            task: {\n              name: task.item.name,\n              id: newTaskData.id,\n              importance:\n                newTaskData.importance === 'high'\n                  ? taskImportanceEnum.high\n                  : data.importance === 'low'\n                  ? taskImportanceEnum.low\n                  : taskImportanceEnum.normal,\n              status:\n                newTaskData.status === 'notStarted'\n                  ? taskStatusEnum.notStarted\n                  : data.status === 'inProgress'\n                  ? taskStatusEnum.inProgress\n                  : data.status === 'completed'\n                  ? taskStatusEnum.completed\n                  : data.status === 'waitingOnOthers'\n                  ? taskStatusEnum.waitingOnOthers\n                  : taskStatusEnum.deferred,\n              excess: false,\n            },\n            index: task.index,\n          }),\n        );\n        dispatch(\n          homepageDataSlice.actions.unshiftUserTask({\n            name: '',\n            importance: taskImportanceEnum.normal,\n            id: '',\n            status: taskStatusEnum.notStarted,\n            excess: true,\n          }),\n        );\n        setUpdateTaskState(loadingStateEnum.success);\n      } else {\n        setUpdateTaskState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function deleteTask() {\n    if (task !== undefined) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        const index = store\n          .getState()\n          .homepageData.userTasks.findIndex(e => e.id === task.item.id);\n        if (index !== -1) {\n          dispatch(homepageDataSlice.actions.popUserTask(index));\n        }\n      }\n    }\n  }\n\n  async function checkUpdateText() {\n    setUpdateTaskState(loadingStateEnum.loading);\n    const taskNameSave =\n      store.getState().homepageData.userTasks[task.index].name;\n    setTimeout(() => {\n      if (\n        store.getState().homepageData.userTasks[task.index].name ===\n        taskNameSave\n      ) {\n        updateText();\n      }\n    }, 1500);\n  }\n\n  useEffect(() => {\n    if (mounted) {\n      checkUpdateText();\n    } else {\n      setMounted(true);\n    }\n  }, [currentText]);\n\n\n  if (isShowingCompleteTasks || task.item.status !== taskStatusEnum.completed) {\n    <Swipeable\n      renderRightActions={e => {\n        if (task.item.excess) {\n          return null;\n        }\n        return <DeleteTask e={e} onDelete={() => deleteTask()} />;\n      }}\n    >\n      <View\n        style={{\n          flexDirection: 'row',\n          width: width * 0.9,\n          paddingTop: 5,\n          paddingBottom: 5,\n        }}\n      >\n        <Pressable\n          onPress={() => {\n            setChecked(!checked);\n            if (!checked) {\n              updateTaskStatus(taskStatusEnum.completed);\n            } else {\n              updateTaskStatus(taskStatusEnum.notStarted);\n            }\n          }}\n        >\n          <View style={{ margin: 'auto' }}>\n            {\n              updateTaskState === loadingStateEnum.notStarted ||\n            updateTaskState === loadingStateEnum.success ? (\n              <CustomCheckBox\n                checked={checked}\n                checkMarkColor=\"blue\"\n                strokeDasharray={task.item.excess ? 5 : undefined}\n                height={20}\n                width={20}\n              />\n            ) : (\n              updateTaskState === loadingStateEnum.loading ? (\n                <ProgressView width={14} height={14} />\n              ) : (\n                <WarningIcon width={14} height={14} outlineColor={Colors.danger} />\n              )\n            )}\n          </View>\n        </Pressable>\n        <View\n          style={{\n            justifyContent: 'center',\n            alignItems: 'center',\n            alignContent: 'center',\n          }}\n        >\n          <TextInput\n            value={task.item.name}\n            onChangeText={e => {\n              const newTask: taskType = {\n                name: task.item.name,\n                id: task.item.id,\n                importance: task.item.importance,\n                status: task.item.status,\n                excess: task.item.excess,\n              };\n              newTask.name = e;\n              dispatch(\n                homepageDataSlice.actions.updateUserTask({\n                  task: newTask,\n                  index: task.index,\n                }),\n              );\n              setCurrentText(e);\n            }}\n            multiline\n            numberOfLines={1}\n            style={{ width: width * 0.9 - 40 }}\n          />\n        </View>\n      </View>\n    </Swipeable>;\n  }\n  return null;\n}\n\nfunction BoardBlock() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { powerpointBlob, paulyDataState } = useSelector(\n    (state: RootState) => state.paulyData,\n  );\n  if (paulyDataState === loadingStateEnum.loading || powerpointBlob === '') {\n    <View\n      style={{\n        width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n        height: height * 0.3,\n        borderRadius: 15,\n        marginTop: height * 0.03,\n        marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n        marginRight: width * 0.05,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.white,\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n      }}\n    >\n      <ProgressView width={100} height={100} />\n      <Text>Loading</Text>\n    </View>\n  }\n\n  if (paulyDataState === loadingStateEnum.success) {\n    return (\n      <View\n        style={{\n          width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n          borderRadius: 15,\n          marginTop: height * 0.03,\n          marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n          marginRight: currentBreakPoint === 0 ? width * 0.05 : width * 0.03,\n          backgroundColor: Colors.white,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n        }}\n      >\n        <PDFView width={currentBreakPoint === 0 ? width * 0.9 : width * 0.7} />\n      </View>\n    );\n  }\n\n  return (\n    <View\n      style={{\n        width: width * 0.9,\n        height: height * 0.3,\n        marginTop: height * 0.03,\n        marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n        backgroundColor: '#FFFFFF',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n      }}\n    >\n      <Text>Failed</Text>\n    </View>\n  );\n}\n\nfunction InsightsBlock() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n\n  if (currentBreakPoint <= 0) {\n    <>\n      <Text\n        style={{\n          fontSize: 24,\n          marginLeft: width * 0.05,\n          marginTop: height * 0.03,\n          marginBottom: height * 0.02,\n        }}\n      >\n        Recent Files\n      </Text>\n      <View\n        style={{\n          marginLeft: width * 0.05,\n          marginRight: width * 0.05,\n          width: width * 0.9,\n          height: height * 0.3,\n          backgroundColor: Colors.white,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n        }}\n      >\n        <TrendingFiles width={width * 0.9} />\n      </View>\n      <Text\n        style={{\n          fontSize: 24,\n          marginLeft: width * 0.05,\n          marginTop: height * 0.03,\n          marginBottom: height * 0.02,\n        }}\n      >\n        Popular Files\n      </Text>\n      <View\n        style={{\n          marginLeft: width * 0.05,\n          marginRight: width * 0.05,\n          width: width * 0.9,\n          height: height * 0.3,\n          backgroundColor: Colors.white,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n          marginBottom: height * 0.05,\n        }}\n      >\n        <PopularFiles width={width * 0.9} />\n      </View>\n    </>;\n  }\n\n  return (\n    <>\n      <Text\n        style={{\n          fontSize: 24,\n          marginLeft: width * 0.05,\n          marginTop: height * 0.03,\n          marginBottom: height * 0.02,\n        }}\n      >\n        Files\n      </Text>\n      <View\n        style={{\n          width: width * 0.9,\n          flexDirection: 'row',\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          marginTop: height * 0.025,\n          marginBottom: height * 0.025,\n          backgroundColor: Colors.white,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ width: width * 0.45, overflow: 'scroll' }}>\n          <TrendingFiles width={width * 0.45} />\n        </View>\n        <View style={{ width: width * 0.45, overflow: 'visible' }}>\n          <PopularFiles width={width * 0.45} />\n        </View>\n      </View>\n    </>\n  );\n}\n\nfunction PopularFiles({ width }: { width: number }) {\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const { trendingData, trendingState } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  if (trendingState === loadingStateEnum.loading) {\n    return (\n      <View\n        style={{\n          width,\n          height,\n          overflow: 'hidden',\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <ProgressView width={14} height={14}/>\n        <Text>Loading</Text>\n      </View>\n    );\n  }\n\n  if (trendingState === loadingStateEnum.success) {\n    return (\n      <>\n        {trendingData.map(data => (\n          <Pressable\n            key={`User_Insight_${data.id}`}\n            style={{ flexDirection: 'row' }}\n            onPress={() => {\n              Linking.openURL(data.webUrl);\n            }}\n          >\n            <View style={{ margin: 10, flexDirection: 'row' }}>\n              <MimeTypeIcon width={14} height={14} mimeType={data.type} />\n              <Text>{data.title}</Text>\n            </View>\n          </Pressable>\n        ))}\n      </>\n    );\n  }\n\n  return <Text>Failed To Load</Text>;\n}\n\nfunction TrendingFiles({ width }: { width: number }) {\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const { userState, userData } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <ScrollView style={{ height: height * 0.3, width }}>\n      {userState === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : (\n        <View>\n          {userState === loadingStateEnum.success ? (\n            <View>\n              {userData.map(data => (\n                <Pressable\n                  key={`User_Insight_${data.id}`}\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(data.webUrl);\n                  }}\n                >\n                  <View style={{ margin: 10, flexDirection: 'row' }}>\n                    <MimeTypeIcon width={14} height={14} mimeType={data.type} />\n                    <Text>{data.title}</Text>\n                  </View>\n                </Pressable>\n              ))}\n            </View>\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </View>\n      )}\n    </ScrollView>\n  );\n}\n","import { loadingStateEnum, resourceMode, resourceResponce } from '../types';\nimport store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { resourcesSlice } from '../Redux/reducers/resourcesReducer';\nimport { raindropToken } from '../PaulyConfig';\n\nexport function convertResourceModeString(convert?: resourceMode): string {\n  if (convert === resourceMode.sports) {\n    return 'sports';\n  }\n  if (convert === resourceMode.advancement) {\n    return 'advancement';\n  }\n  if (convert === resourceMode.schoolEvents) {\n    return 'schoolEvents';\n  }\n  if (convert === resourceMode.annoucments) {\n    return 'annoucments';\n  }\n  if (convert === resourceMode.fitness) {\n    return 'fitness';\n  }\n  return 'files';\n}\n\nasync function getResourceFollows() {\n  let nextLink = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.resourceListId\n  }/items?expand=fields($select=resourceGroupId,resourceConversationId)&$select=id`;\n  while (nextLink !== '') {\n    const result = await callMsGraph(nextLink);\n    if (result.ok) {\n      const data = await result.json();\n      if (data['@odata.nextLink'] !== undefined) {\n        nextLink = data['@odata.nextLink'];\n      } else {\n        nextLink = '';\n      }\n      const output: resourceFollowType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        output.push({\n          teamId: data.value[index].fields.resourceGroupId,\n          channelId: data.value[index].fields.resourceConversationId,\n        });\n      }\n      store.dispatch(resourcesSlice.actions.setResourceFollow(output));\n    } else {\n      store.dispatch(\n        resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n      );\n      return;\n    }\n  }\n}\n\nasync function getAttachments(\n  teamId: string,\n  channelId: string,\n  attachments: any[],\n): Promise<attachment[]> {\n  const attachmentsOut: attachment[] = [];\n  for (\n    let attachmentIndex = 0;\n    attachmentIndex < attachments.length;\n    attachmentIndex += 1\n  ) {\n    if (attachments[attachmentIndex].contentType === 'reference') {\n      const attachmentResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/filesFolder`,\n      );\n      if (attachmentResult.ok) {\n        const attachmentData = await attachmentResult.json();\n        const attachmentGetResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/drives/${attachmentData.parentReference.driveId}/items/${attachments[attachmentIndex].id}`,\n        );\n        if (attachmentGetResult.ok) {\n          const attachmentGetResultData = await attachmentGetResult.json();\n          attachments.push({\n            webUrl: attachmentGetResultData.webUrl,\n            id: attachmentGetResultData.id,\n            title: attachmentGetResultData.name,\n            type: attachmentGetResultData.file.mimeType,\n          });\n        }\n      }\n    }\n  }\n  return attachmentsOut;\n}\n\nexport async function getResources(category?: resourceMode) {\n  store.dispatch(\n    resourcesSlice.actions.setResourcesState(loadingStateEnum.loading),\n  );\n  await getResourceFollows();\n  const categoryString = convertResourceModeString(category);\n  const categoryFilter = category\n    ? `&$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.resourceExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.resourceExtensionId\n      }'%20and%20ep/value%20eq%20'${categoryString}')`\n    : '';\n  const output: resourceDataType[] = [];\n  const batchDataRequests: { id: string; method: string; url: string }[][] = [\n    [],\n  ];\n  let batchCount = 0;\n  for (\n    let index = 0;\n    index < store.getState().resources.resourceFollow.length;\n    index += 1\n  ) {\n    // resourceGroupId\n    batchDataRequests[batchCount].push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/teams/${\n        store.getState().resources.resourceFollow[index].teamId\n      }/channels/${\n        store.getState().resources.resourceFollow[index].channelId\n      }/messages${categoryFilter}`,\n    });\n    if (store.getState().resources.resourceFollow.length % 20 === 0) {\n      batchDataRequests.push([]);\n      batchCount += 1;\n    }\n  }\n  for (let index = 0; index < batchDataRequests.length; index += 1) {\n    const batchData = {\n      requests: batchDataRequests[index],\n    };\n    if (batchDataRequests[index].length !== 0) {\n      const resourceRsp = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (resourceRsp.ok) {\n        const resourceResponceData = await resourceRsp.json();\n        for (\n          let responceIndex = 0;\n          responceIndex < resourceResponceData.responses.length;\n          responceIndex += 1\n        ) {\n          if (resourceResponceData.responses[responceIndex].status === 200) {\n            const resourceResponceDataBody =\n              resourceResponceData.responses[responceIndex].body;\n            for (\n              let dataIndex = 0;\n              dataIndex < resourceResponceDataBody.value.length;\n              dataIndex += 1\n            ) {\n              if (\n                resourceResponceData.responses[responceIndex].body.value[\n                  dataIndex\n                ].body.content !== '<systemEventMessage/>'\n              ) {\n                const attachments = await getAttachments(\n                  resourceResponceDataBody.value[dataIndex].channelIdentity\n                    .teamId,\n                  resourceResponceDataBody.value[dataIndex].channelIdentity\n                    .channelId,\n                  resourceResponceDataBody.value[dataIndex].attachments,\n                );\n                const outputData: resourceDataType = {\n                  teamId:\n                    store.getState().resources.resourceFollow[\n                      parseInt(\n                        resourceResponceData.responses[responceIndex].id,\n                      ) - 1\n                    ].teamId,\n                  conversationId:\n                    store.getState().resources.resourceFollow[\n                      parseInt(\n                        resourceResponceData.responses[responceIndex].id,\n                      ) - 1\n                    ].channelId,\n                  id: resourceResponceData.responses[responceIndex].body.value[\n                    dataIndex\n                  ].id,\n                  body: resourceResponceData.responses[responceIndex].body\n                    .value[dataIndex].body.content,\n                  html:\n                    resourceResponceData.responses[responceIndex].body.value[\n                      dataIndex\n                    ].body.contentType === 'html',\n                  attachments:\n                    attachments.length >= 1 ? attachments : undefined,\n                };\n                output.push(outputData);\n              }\n            }\n          }\n        }\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n        return;\n      }\n    }\n  }\n  store.dispatch(\n    resourcesSlice.actions.setResources({\n      resources: output,\n      loadingState: loadingStateEnum.success,\n    }),\n  );\n}\n\nexport async function getResourcesSearch(search: string) {\n  store.dispatch(\n    resourcesSlice.actions.setResourcesState(loadingStateEnum.loading),\n  );\n  const searchPayload = {\n    requests: [\n      {\n        entityTypes: ['chatMessage'],\n        query: {\n          queryString: search,\n        },\n        from: 0,\n        size: 15,\n        enableTopResults: true,\n      },\n    ],\n  };\n  const searchResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/search/query',\n    'POST',\n    JSON.stringify(searchPayload),\n  );\n  if (searchResult.ok) {\n    const searchData = await searchResult.json();\n    const batchDataRequests: { id: string; method: string; url: string }[] = [];\n    if (searchData.value.length === 1) {\n      if (searchData.value[0].hitsContainers.length === 1) {\n        for (\n          let index = 0;\n          index < searchData.value[0].hitsContainers[0].hits.length;\n          index += 1\n        ) {\n          if (\n            searchData.value[0].hitsContainers[0].hits[index].resource\n              .channelIdentity !== undefined\n          ) {\n            const resourceIndex = store\n              .getState()\n              .resources.resourceFollow.findIndex(e => {\n                return (\n                  e.channelId ===\n                  searchData.value[0].hitsContainers[0].hits[index].resource\n                    .channelIdentity.channelId\n                );\n              });\n            if (resourceIndex !== -1) {\n              batchDataRequests.push({\n                id: batchDataRequests.length.toString() + 1,\n                method: 'GET',\n                url: `/teams/${searchData.value[0].hitsContainers[0].hits[index].resource.channelIdentity.teamId}/channels/${searchData.value[0].hitsContainers[0].hits[index].resource.channelIdentity.channelId}/messages/${searchData.value[0].hitsContainers[0].hits[index].resource.id}`,\n              });\n            } else {\n              store.dispatch(\n                resourcesSlice.actions.setResourcesState(\n                  loadingStateEnum.failed,\n                ),\n              );\n              return;\n            }\n          }\n        }\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n        return;\n      }\n\n      const batchData = {\n        requests: batchDataRequests,\n      };\n      const batchResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (batchResult.ok) {\n        const batchResultData = await batchResult.json();\n        const outputData: resourceDataType[] = [];\n        for (\n          let batchIndex = 0;\n          batchIndex < batchResultData.responses.length;\n          batchIndex += 1\n        ) {\n          if (batchResultData.responses[batchIndex].status === 200) {\n            // TO DO fix ok code\n            outputData.push({\n              teamId:\n                batchResultData.responses[batchIndex].body.channelIdentity\n                  .teamId,\n              conversationId:\n                batchResultData.responses[batchIndex].body.channelIdentity\n                  .channelId,\n              id: batchResultData.responses[batchIndex].body.id,\n              body: batchResultData.responses[batchIndex].body.body.content,\n              html:\n                batchResultData.responses[batchIndex].body.body.contentType ===\n                'html',\n            });\n          } else {\n            store.dispatch(\n              resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n            );\n            return;\n          }\n        }\n        store.dispatch(\n          resourcesSlice.actions.setResources({\n            resources: outputData,\n            loadingState: loadingStateEnum.success,\n          }),\n        );\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n      }\n    } else {\n      store.dispatch(\n        resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    store.dispatch(\n      resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n    );\n  }\n}\n\nexport default async function getResource(\n  groupId: string,\n  conversationId: string,\n): Promise<{ result: resourceResponce; itemId?: string }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.resourceListId\n    }/items?expand=fields&$filter=fields/resourceGroupId%20eq%20'${groupId}'%20and%20fields/resourceConversationId%20eq%20'${conversationId}'`,\n  );\n  if (!result.ok) {\n    return { result: resourceResponce.failed };\n  }\n  const data = await result.json();\n  if (data.value.length === 1) {\n    return { result: resourceResponce.found, itemId: data.value[0].id };\n  }\n  if (data.value.length === 0) {\n    return { result: resourceResponce.notFound };\n  }\n  return { result: resourceResponce.failed };\n}\n\nexport async function getScholarships(): Promise<\n  | { result: loadingStateEnum.failed }\n  | { result: loadingStateEnum.success; data: scholarship[] }\n> {\n  // https://developer.raindrop.io/v1/authentication/token\n  // https://developer.raindrop.io/v1/raindrops/multiple\n  const result = await fetch(\n    'https://api.raindrop.io/rest/v1/raindrops/37695900',\n    {\n      headers: {\n        Authorization: `Bearer ${raindropToken}`,\n      },\n    },\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const scholarships: scholarship[] = [];\n    for (let index = 0; index < data.items.length; index += 1) {\n      scholarships.push({\n        title: data.items[index].title,\n        note: data.items[index].note,\n        link: data.items[index].link,\n        cover: data.items[index].cover,\n      });\n    }\n    return { result: loadingStateEnum.success, data: scholarships };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getNewsPosts(nextLink?: string | undefined): Promise<\n  | { result: loadingStateEnum.failed }\n  | {\n      result: loadingStateEnum.success;\n      data: newsPost[];\n      nextLink?: string | undefined;\n    }\n> {\n  const result = await fetch(\n    `https://public-api.wordpress.com/rest/v1.1/sites/thecrusadernews.ca/posts${\n      nextLink !== undefined ? `?${nextLink}` : ''\n    }`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const outputPosts: newsPost[] = [];\n    for (let index = 0; index < data.posts.length; index += 1) {\n      outputPosts.push({\n        title: data.posts[index].title,\n        excerpt: data.posts[index].excerpt,\n        content: data.posts[index].content,\n        id: data.posts[index].id,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: outputPosts,\n      nextLink: data.meta.next_page,\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, FlatList, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Colors, loadingStateEnum } from '../types';\nimport ProgressView from '../UI/ProgressView';\nimport WebViewCross from '../UI/WebViewCross';\nimport { RootState } from '../Redux/store';\nimport { CloseIcon } from '../UI/Icons/Icons';\nimport { getNewsPosts } from '../Functions/getResources';\n\nexport default function ResourcesNews({\n  isHoverPicker,\n}: {\n  isHoverPicker: boolean;\n}) {\n  const [posts, setPosts] = useState<newsPost[]>([]);\n  const [postState, setPostState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedPost, setSelectedPost] = useState<newsPost | undefined>(\n    undefined,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [nextLink, setNextLink] = useState<undefined | string>(undefined);\n\n  async function loadArticles() {\n    const result = await getNewsPosts(nextLink);\n    if (result.result === loadingStateEnum.success) {\n      setPosts([...posts, ...result.data]);\n      setNextLink(result.nextLink);\n      setPostState(loadingStateEnum.success);\n    } else {\n      setPostState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadArticles();\n  }, []);\n\n  if (selectedPost !== undefined) {\n    return (\n      <ScrollView\n        style={{\n          width,\n          height: isHoverPicker ? height * 0.75 : height * 0.8,\n          backgroundColor: Colors.lightGray,\n        }}\n      >\n        <Pressable\n          onPress={() => {\n            setSelectedPost(undefined);\n          }}\n        >\n          <CloseIcon width={14} height={14} />\n        </Pressable>\n        <Text>{selectedPost.title}</Text>\n        <WebViewCross\n          rawHtml={`\n          <!DOCTYPE html>\n          <html>\n          <head>\n            <link crossorigin=\"anonymous\" rel=\"stylesheet\" id=\"all-css-8-1\" href=\"https://s0.wp.com/wp-content/themes/pub/baskerville-2/style.css?m=1645133114i&amp;cssminify=yes\" type=\"text/css\" media=\"all\">\n            <meta name=\"viewport\" content=\"width=${width - 20}px\"/>\n            <style>\n              body {font-weight: normal; font-family: Arial; width: 100%}\n              div {font-weight: normal; font-family: Arial; width: 100%; padding: 0; margin: 0; font-size: 15px}\n              .main {\n                padding: 0;\n                margin: 0;\n                position: absolute;\n              }\n            </style>\n          </head>\n          <body>\n            <div id=\"pauly-main\" class=\"main\">\n              ${selectedPost.content}\n            </div>\n          </body>\n          </html>`}\n          width={width * 0.9}\n          height={isHoverPicker ? height * 0.75 : height * 0.8}\n        />\n      </ScrollView>\n    );\n  }\n\n  if (postState === loadingStateEnum.loading) {\n    return (\n      <View\n        style={{\n          width,\n          height: isHoverPicker ? height * 0.75 : height * 0.8,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n          backgroundColor: Colors.lightGray,\n        }}\n      >\n        <ProgressView width={14} height={14} />\n        <Text>Loading</Text>\n      </View>\n    );\n  }\n\n  if (postState === loadingStateEnum.success) {\n    return (\n      <FlatList\n        data={posts}\n        renderItem={post => (\n          <Pressable\n            onPress={() => {\n              setSelectedPost(post.item);\n            }}\n            style={{\n              backgroundColor: Colors.white,\n              borderRadius: 15,\n              marginLeft: 10,\n              marginRight: 10,\n              margin: 5,\n            }}\n          >\n            <Text style={{ marginLeft: 10, marginTop: 5 }}>\n              {post.item.title}\n            </Text>\n            <WebViewCross\n              style={{ marginTop: 2 }}\n              width={width * 0.6}\n              html={post.item.excerpt}\n            />\n          </Pressable>\n        )}\n        onEndReached={() => {\n          if (nextLink !== undefined) {\n            loadArticles();\n          }\n        }}\n        style={{\n          width,\n          height: isHoverPicker ? height * 0.75 : height * 0.8,\n          backgroundColor: Colors.lightGray,\n        }}\n      />\n    );\n  }\n\n  return (\n    <View\n      style={{\n        width,\n        height: isHoverPicker ? height * 0.75 : height * 0.8,\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Text>Failed to load</Text>\n    </View>\n  );\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  Resources.tsx\n  This is the main component for the resources section of pauly.\n  See README.md for more information about the resources section.\n*/\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts } from 'expo-font';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  TextInput,\n  Platform,\n  Pressable,\n  Linking,\n  FlatList,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport store, { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport { resourcesSlice } from '../Redux/reducers/resourcesReducer';\nimport createUUID, { getTextState } from '../Functions/ultility/createUUID';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport {\n  convertResourceModeString,\n  getResources,\n  getResourcesSearch,\n  getScholarships,\n} from '../Functions/getResources';\nimport { CloseIcon, SearchIcon } from '../UI/Icons/Icons';\nimport WebViewCross from '../UI/WebViewCross';\nimport BackButton from '../UI/BackButton';\nimport ProgressView from '../UI/ProgressView';\nimport MimeTypeIcon from '../UI/Icons/MimeTypeIcon';\nimport { Colors, loadingStateEnum, resourceMode } from '../types';\nimport ResourcesNews from './ResourcesNews';\n\n// Resources\n// -> Sports\n// -> Advancement Board\n// -> Schedule Annoucments\n// -> School Events\n// -> Annoucments\n// -> News (special from crusader news weebly)\n\nfunction PickerPiece({\n  text,\n  item,\n  isHoverPicker,\n  setIsHoverPicker,\n}: {\n  text: string;\n  item: resourceMode;\n  isHoverPicker: boolean;\n  setIsHoverPicker: (item: boolean) => void;\n}) {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { selectedResourceMode } = useSelector(\n    (state: RootState) => state.resources,\n  );\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  return (\n    <Pressable\n      onPress={() => {\n        dispatch(resourcesSlice.actions.setSelectedResourceMode(item));\n      }}\n      onHoverIn={() => {\n        setIsHoverPicker(true);\n        setIsSelected(true);\n      }}\n      onHoverOut={() => setIsSelected(false)}\n      style={{\n        height: isHoverPicker ? height * 0.1 : height * 0.05,\n        width: isSelected\n          ? currentBreakPoint >= 2\n            ? width * 0.3\n            : width * 0.6\n          : currentBreakPoint >= 2\n          ? width * 0.2\n          : width * 0.4,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.white,\n      }}\n    >\n      <View\n        style={{\n          height: isHoverPicker ? height * 0.06 : height * 0.03,\n          width: isSelected\n            ? currentBreakPoint >= 2\n              ? width * 0.28\n              : width * 0.46\n            : currentBreakPoint >= 2\n            ? width * 0.18\n            : width * 0.36,\n          marginLeft: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          marginRight: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          backgroundColor: Colors.darkGray,\n          borderWidth: item !== selectedResourceMode ? 0 : 2,\n          borderColor: 'black',\n          borderRadius: 15,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white }}>{text}</Text>\n      </View>\n    </Pressable>\n  );\n}\n\nfunction checkIfResourceDataJustAttachment(body: string): boolean {\n  if (body.length === 67) {\n    const start = body.slice(0, 15);\n    const end = body.slice(53, 67);\n    if (start === '<attachment id=' && end === '></attachment>') {\n      return false;\n    }\n    return true;\n  }\n  return true;\n}\n\nfunction ResourceBlock({\n  resource,\n  setIsShowingCategoryView,\n  setSelectedPost,\n}: {\n  resource: ListRenderItemInfo<resourceDataType>;\n  setIsShowingCategoryView: (item: boolean) => void;\n  setSelectedPost: (item: {\n    teamId: string;\n    conversationId: string;\n    messageId: string;\n  }) => void;\n}) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  return (\n    <View>\n      {isGovernmentMode ? (\n        <Pressable\n          onPress={() => {\n            setIsShowingCategoryView(true);\n            setSelectedPost({\n              teamId: resource.item.teamId,\n              conversationId: resource.item.conversationId,\n              messageId: resource.item.id,\n            });\n          }}\n          style={{\n            width: width * 0.8,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            backgroundColor: Colors.white,\n            borderRadius: 15,\n            marginBottom: height * 0.01,\n          }}\n        >\n          {resource.item.body !== '' &&\n          checkIfResourceDataJustAttachment(resource.item.body) ? (\n            <WebViewCross\n              width={width * 0.8 - 20}\n              html={\n                resource.item.html\n                  ? resource.item.body\n                  : `<div><div>${resource.item.body}</div></div>`\n              }\n            />\n          ) : null}\n          {resource.item.attachments !== undefined ? (\n            <View\n              style={{\n                marginLeft: 10,\n                marginBottom: 10,\n                marginRight: 10,\n                marginTop:\n                  resource.item.body === '' ||\n                  !checkIfResourceDataJustAttachment(resource.item.body)\n                    ? 10\n                    : 0,\n                overflow: 'scroll',\n              }}\n            >\n              {resource.item.attachments?.map(attachment => (\n                <Pressable\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(attachment.webUrl);\n                  }}\n                >\n                  <MimeTypeIcon\n                    width={14}\n                    height={14}\n                    mimeType={attachment.type}\n                  />\n                  <Text>{attachment.title}</Text>\n                </Pressable>\n              ))}\n            </View>\n          ) : null}\n        </Pressable>\n      ) : (\n        <View\n          style={{\n            width: width * 0.8,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            backgroundColor: Colors.white,\n            borderRadius: 15,\n            marginBottom: height * 0.01,\n          }}\n        >\n          {resource.item.body !== '' &&\n          checkIfResourceDataJustAttachment(resource.item.body) ? (\n            <WebViewCross\n              width={width * 0.8 - 20}\n              html={\n                resource.item.html\n                  ? resource.item.body\n                  : `<div><div>${resource.item.body}</div></div>`\n              }\n            />\n          ) : null}\n          {resource.item.attachments !== undefined ? (\n            <View\n              style={{\n                marginLeft: 10,\n                marginBottom: 10,\n                marginRight: 10,\n                marginTop:\n                  resource.item.body === '' ||\n                  !checkIfResourceDataJustAttachment(resource.item.body)\n                    ? 10\n                    : 0,\n                overflow: 'scroll',\n              }}\n            >\n              {resource.item.attachments.map(attachment => (\n                <Pressable\n                  key={attachment.id}\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(attachment.webUrl);\n                  }}\n                >\n                  <MimeTypeIcon\n                    width={14}\n                    height={14}\n                    mimeType={attachment.type}\n                  />\n                  <Text>{attachment.title}</Text>\n                </Pressable>\n              ))}\n            </View>\n          ) : null}\n        </View>\n      )}\n    </View>\n  );\n}\n\nfunction ScholarshipBlock({ item }: { item: ListRenderItemInfo<scholarship> }) {\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const [height, setHeight] = useState<number>(0);\n  useEffect(() => {\n    Image.getSize(item.item.cover, (imgWidth, imgHeight) => {\n      const aspect = imgWidth / imgHeight;\n      setHeight((width - 10) / aspect);\n    });\n  }, [item.item.cover, width]);\n  return (\n    <Pressable\n      onPress={() => {\n        Linking.openURL(item.item.link);\n      }}\n      style={{\n        margin: 5,\n        borderRadius: 15,\n        overflow: 'hidden',\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Image\n        source={{ uri: item.item.cover }}\n        style={{ width: width - 10, height }}\n      />\n      <Text style={{ fontSize: 16, margin: 5, marginLeft: 10 }}>\n        {item.item.title}\n      </Text>\n      <Text style={{ marginBottom: 10, margin: 10 }}>{item.item.note}</Text>\n    </Pressable>\n  );\n}\n\nfunction ResourceScholarships({ isHoverPicker }: { isHoverPicker: boolean }) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [scholarState, setScholarState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [scholarships, setScholarships] = useState<scholarship[]>([]);\n\n  async function loadData() {\n    const result = await getScholarships();\n    if (result.result === loadingStateEnum.success) {\n      setScholarships(result.data);\n      setScholarState(loadingStateEnum.success);\n    } else {\n      setScholarState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  if (scholarState === loadingStateEnum.loading) {\n    return (\n      <View\n        style={{\n          height: isHoverPicker ? height * 0.75 : height * 0.8,\n          width,\n          backgroundColor: Colors.lightGray,\n        }}\n      >\n        <ProgressView width={14} height={14} />\n        <Text>Loading</Text>\n      </View>\n    );\n  }\n\n  if (scholarState === loadingStateEnum.success) {\n    return (\n      <FlatList\n        data={scholarships}\n        renderItem={item => <ScholarshipBlock item={item} />}\n        style={{\n          height: isHoverPicker ? height * 0.75 : height * 0.8,\n          width,\n          backgroundColor: Colors.lightGray,\n        }}\n      />\n    );\n  }\n\n  return (\n    <View\n      style={{\n        height: isHoverPicker ? height * 0.75 : height * 0.8,\n        width,\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Text>Failed</Text>\n    </View>\n  );\n}\n\nexport default function Resources() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { resources, loadingState, selectedResourceMode } = useSelector(\n    (state: RootState) => state.resources,\n  );\n  const [isHoverPicker, setIsHoverPicker] = useState<boolean>(false);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const [isShowingCategoryView, setIsShowingCategoryView] =\n    useState<boolean>(false);\n  const [selectedPost, setSelectedPost] = useState<\n    undefined | { teamId: string; conversationId: string; messageId: string }\n  >(undefined);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    getResources(selectedResourceMode);\n  }, [selectedResourceMode]);\n\n  // Fonts\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ height, width }}>\n        <View\n          style={{\n            height: height * 0.1,\n            width,\n            backgroundColor: Colors.darkGray,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n          <Text style={{ fontFamily: 'BukhariScript', color: Colors.white }}>\n            Resources\n          </Text>\n        </View>\n        <SearchBox />\n        <View\n          style={{\n            width,\n            height: height * 0.05,\n            backgroundColor: Colors.lightGray,\n          }}\n        />\n        {selectedResourceMode === resourceMode.news ? (\n          <ResourcesNews isHoverPicker={isHoverPicker} />\n        ) : (\n          <>\n            {selectedResourceMode === resourceMode.scholarships ? (\n              <ResourceScholarships isHoverPicker={isHoverPicker} />\n            ) : (\n              <View\n                style={{\n                  height: isHoverPicker ? height * 0.75 : height * 0.8,\n                  width,\n                  backgroundColor: Colors.lightGray,\n                }}\n              >\n                <>\n                  {loadingState === loadingStateEnum.loading ? (\n                    <View\n                      style={{\n                        width,\n                        height: isHoverPicker ? height * 0.75 : height * 0.8,\n                        alignContent: 'center',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                      }}\n                    >\n                      <ProgressView\n                        width={width < height ? width * 0.05 : height * 0.05}\n                        height={width < height ? width * 0.05 : height * 0.05}\n                      />\n                      <Text>Loading</Text>\n                    </View>\n                  ) : (\n                    <>\n                      {loadingState === loadingStateEnum.success ? (\n                        <FlatList\n                          data={resources}\n                          renderItem={resource => (\n                            <ResourceBlock\n                              resource={resource}\n                              key={resource.item.id}\n                              setIsShowingCategoryView={\n                                setIsShowingCategoryView\n                              }\n                              setSelectedPost={setSelectedPost}\n                            />\n                          )}\n                        />\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </>\n                  )}\n                </>\n              </View>\n            )}\n          </>\n        )}\n        <Pressable\n          style={{ height: isHoverPicker ? height * 0.1 : height * 0.05 }}\n          onHoverIn={() => {\n            setIsHoverPicker(true);\n          }}\n          onHoverOut={() => {\n            setIsHoverPicker(false);\n          }}\n        >\n          <ScrollView\n            horizontal\n            style={{\n              height: isHoverPicker ? height * 0.1 : height * 0.05,\n              width,\n              backgroundColor: Colors.white,\n            }}\n            showsHorizontalScrollIndicator={false}\n          >\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Home\"\n              item={resourceMode.home}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Sports\"\n              item={resourceMode.sports}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Advancement\"\n              item={resourceMode.advancement}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"School Events\"\n              item={resourceMode.schoolEvents}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Annoucments\"\n              item={resourceMode.annoucments}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Fitness\"\n              item={resourceMode.fitness}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Files\"\n              item={resourceMode.files}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Crusader News\"\n              item={resourceMode.news}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Scholarships\"\n              item={resourceMode.scholarships}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n          </ScrollView>\n        </Pressable>\n      </View>\n      {isGovernmentMode &&\n      isShowingCategoryView &&\n      selectedPost !== undefined ? (\n        <GovernmentCategoryView\n          teamId={selectedPost.teamId}\n          channelId={selectedPost.conversationId}\n          messageId={selectedPost.messageId}\n          onClose={() => setIsShowingCategoryView(false)}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction GovernmentCategoryView({\n  teamId,\n  channelId,\n  messageId,\n  onClose,\n}: {\n  teamId: string;\n  channelId: string;\n  messageId: string;\n  onClose: () => void;\n}) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [categoryState, setCategoryState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [selectedCategory, setSelectedCategory] = useState<resourceMode>(\n    resourceMode.home,\n  );\n  async function addCategory() {\n    setCategoryState(loadingStateEnum.loading);\n    const data = {\n      singleValueExtendedProperties: [\n        {\n          id: store.getState().paulyList.resourceExtensionId,\n          value: convertResourceModeString(selectedCategory),\n        },\n      ],\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages/${messageId}`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      setCategoryState(loadingStateEnum.success);\n    } else {\n      setCategoryState(loadingStateEnum.failed);\n    }\n  }\n  return (\n    <View\n      style={{\n        height: height * 0.9,\n        width: width * 0.8,\n        position: 'absolute',\n        top: height * 0.05,\n        left: width * 0.1,\n        backgroundColor: Colors.white,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n      }}\n    >\n      <Pressable\n        onPress={() => onClose()}\n        style={{ position: 'absolute', left: 20, top: 20 }}\n      >\n        <CloseIcon width={12} height={12} />\n      </Pressable>\n      <View\n        style={{\n          width: width * 0.8,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <Text>Categories</Text>\n      </View>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.sports)}\n        style={{\n          marginLeft: width * 0.05,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.sports\n              ? Colors.lightGray\n              : Colors.white,\n        }}\n      >\n        <Text>Sports</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.advancement)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.advancement\n              ? Colors.lightGray\n              : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Advancement</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.schoolEvents)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.schoolEvents\n              ? Colors.lightGray\n              : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>School Events</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.annoucments)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.annoucments\n              ? Colors.lightGray\n              : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Annoucments</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.fitness)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.fitness\n              ? Colors.lightGray\n              : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Fitness</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.files)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.files\n              ? Colors.lightGray\n              : Colors.white,\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Files</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          addCategory();\n        }}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>{getTextState(categoryState, { notStarted: 'Confirm' })}</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nfunction SearchBox() {\n  // Dimentsions\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [mounted, setMounted] = useState<boolean>(false);\n  const { searchValue } = useSelector((state: RootState) => state.resources);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false); // Boolean true if text overflowing. This is telling the search icon to show or not.\n  const style = Platform.OS === 'web' ? { outlineStyle: 'none' } : undefined; // Style to remove ourline around textbox on web\n  const dispatch = useDispatch();\n\n  // Getting search results on value chage\n  useEffect(() => {\n    if (mounted) {\n      // Checking so that this isn't called on start\n      const searchValueSave = searchValue; // saving value to check if change in 1.5 s\n      setTimeout(() => {\n        // Waiting 1.5s\n        if (store.getState().resources.searchValue === searchValueSave) {\n          // Checking if value changed\n          getResourcesSearch(searchValue); // getting search data\n        }\n      }, 1500);\n    } else {\n      setMounted(true); // Setting that it has been called on start\n    }\n  }, [searchValue]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.1 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchValue}\n            onChangeText={e => {\n              dispatch(resourcesSlice.actions.setSearchValue(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchValue}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { useMsal } from '@azure/msal-react';\nimport {\n  DiscoveryDocument,\n  revokeAsync,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts } from 'expo-font';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { View, Text, Pressable, Platform, Image } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { tenantId } from '../../PaulyConfig';\nimport store, { RootState } from '../../Redux/store';\nimport { authenticationTokenSlice } from '../../Redux/reducers/authenticationTokenReducer';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport {\n  GearIcon,\n  GovernmentIcon,\n  PersonIcon,\n  StudentSearchIcon,\n} from '../../UI/Icons/Icons';\nimport BackButton from '../../UI/BackButton';\nimport { Colors, loadingStateEnum } from '../../types';\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n\nexport default function Settings() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { uri, displayName } = useSelector(\n    (state: RootState) => state.microsoftProfileData,\n  );\n  const [imageLoadState, setImageLoadState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.maroon,\n        bottom: Colors.maroon,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentBreakPoint >= 1) {\n      navigate('/');\n    }\n  }, [currentBreakPoint]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View>\n      <BackButton to=\"/\" />\n      <View\n        style={{\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: height * 0.2,\n          marginTop: height * 0.025,\n          marginBottom: height * 0.02,\n        }}\n      >\n        <GearIcon\n          width={width < height ? width * 0.3 : height * 0.2}\n          height={width < height ? width * 0.3 : height * 0.2}\n          style={{ position: 'absolute', left: width * 0.2 }}\n        />\n        <Text\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: 45,\n            color: Colors.white,\n          }}\n        >\n          Settings\n        </Text>\n      </View>\n      <View\n        style={{\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {uri !== '' && imageLoadState !== loadingStateEnum.failed ? (\n          <Image\n            source={{ uri }}\n            onError={e => {\n              setImageLoadState(loadingStateEnum.failed);\n            }}\n            style={{\n              width: width * 0.3,\n              height: width * 0.3,\n              borderRadius: width * 0.25,\n            }}\n          />\n        ) : (\n          <PersonIcon width={width * 0.4} height={width * 0.4} />\n        )}\n        <Text\n          style={{\n            color: Colors.white,\n            fontWeight: 'bold',\n            fontSize: 24,\n            marginTop: height * 0.05,\n          }}\n        >\n          {displayName}\n        </Text>\n      </View>\n      <Pressable\n        onPress={() => {\n          signOut();\n        }}\n        style={{\n          width: width * 0.8,\n          height: height * 0.08,\n          borderRadius: 15,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 2, height: 4 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <Text style={{ fontWeight: 'bold' }}>SIGN OUT</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          navigate('/students');\n        }}\n        style={{\n          width: width * 0.8,\n          height: height * 0.08,\n          borderRadius: 15,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 2, height: 4 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n          alignItems: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <StudentSearchIcon\n          width={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n          height={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n          style={{ marginLeft: width * 0.025 }}\n        />\n        <Text>Students</Text>\n      </Pressable>\n      {isGovernmentMode ? (\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government');\n          }}\n          style={{\n            width: width * 0.8,\n            height: height * 0.08,\n            borderRadius: 15,\n            shadowColor: Colors.black,\n            shadowOffset: { width: 2, height: 4 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            flexDirection: 'row',\n            backgroundColor: Colors.white,\n            alignItems: 'center',\n            marginTop: height * 0.05,\n          }}\n        >\n          <GovernmentIcon\n            width={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n            height={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n            style={{ marginLeft: width * 0.025 }}\n          />\n          <Text>Government</Text>\n        </Pressable>\n      ) : null}\n    </View>\n  );\n}\n","import {\n  View,\n  Text,\n  Image,\n  ImageSourcePropType,\n  Pressable,\n} from 'react-native';\nimport React, { ReactNode, useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useSelector } from 'react-redux';\nimport {\n  BookIcon,\n  CalendarIcon,\n  GearIcon,\n  GraduationHatIcon,\n  GraphAPILogo,\n  HomeIcon,\n  MedalIcon,\n  StudentSearchIcon,\n} from '../../../UI/Icons/Icons';\nimport { RootState } from '../../../Redux/store';\nimport { Colors } from '../../../types';\n\nfunction Block({\n  height,\n  width,\n  text,\n  imageSource,\n  children,\n  onPress,\n}: {\n  height: number;\n  width: number;\n  text: string;\n  imageSource?: ImageSourcePropType;\n  children?: ReactNode;\n  onPress: () => void;\n}) {\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      style={{\n        height,\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: isSelected ? Colors.lightGray : Colors.darkGray,\n        borderRadius: 5,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 5,\n      }}\n      onHoverIn={() => {\n        setIsSelected(true);\n      }}\n      onHoverOut={() => {\n        setIsSelected(false);\n      }}\n      onPress={() => onPress()}\n    >\n      {imageSource !== undefined && (\n        <Image\n          source={imageSource}\n          style={{ width: width * 0.5, height: height * 0.5 }}\n          resizeMode=\"center\"\n        />\n      )}\n      {imageSource === undefined && children !== undefined && (\n        <View style={{ width: width * 0.5, height: height * 0.5 }}>\n          <>{children}</>\n        </View>\n      )}\n      <Text style={{ color: isSelected ? Colors.black : Colors.white }}>\n        {text}\n      </Text>\n    </Pressable>\n  );\n}\n\nexport default function Government() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isGovernmentMode) {\n      navigate('/');\n    }\n  }, []);\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../../assets/fonts/BukhariScript.ttf'),\n  });\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  const [mainWidth, setMainWidth] = useState<number>(0);\n  useEffect(() => {\n    const fivePercent = width * 0.05;\n    const remainder = (width * 0.8) % (100 + fivePercent);\n    setMainWidth(width * 0.8 - remainder - fivePercent);\n  }, [width]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      {currentBreakPoint <= 0 ? (\n        <Pressable onPress={() => navigate('/profile/')}>\n          <Text>Back</Text>\n        </Pressable>\n      ) : null}\n      <View\n        style={{\n          height: height * 0.2,\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={1}\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: height * 0.09,\n            height: height * 0.13,\n            width: width * 0.8,\n            textAlign: 'center',\n            textAlignVertical: 'center',\n            verticalAlign: 'middle',\n          }}\n        >\n          Government\n        </Text>\n      </View>\n      <View\n        style={{\n          height: height * 0.75,\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <View\n          style={{\n            height: height * 0.75,\n            width: mainWidth,\n            flexDirection: 'row',\n            alignContent: 'flex-start',\n            flexWrap: 'wrap',\n            rowGap: height * 0.05,\n            columnGap: width * 0.05,\n          }}\n        >\n          <Block\n            onPress={() => navigate('/profile/government/graph/list')}\n            width={100}\n            height={100}\n            text=\"Graph\"\n          >\n            <GraphAPILogo width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/commissions')}\n            width={100}\n            height={100}\n            text=\"Commissions\"\n          >\n            <MedalIcon width={50} height={50} />\n          </Block>\n          <Block\n            width={100}\n            height={100}\n            text=\"Sports\"\n            imageSource={require('../../../../assets/images/Football.png')}\n            onPress={() => navigate('/profile/government/sports')}\n          />\n          <Block\n            onPress={() => navigate('/profile/government/homepage')}\n            width={100}\n            height={100}\n            text=\"Homepage\"\n          >\n            <HomeIcon width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/calendar')}\n            width={100}\n            height={100}\n            text=\"Calendar\"\n          >\n            <CalendarIcon width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/classes')}\n            width={100}\n            height={100}\n            text=\"Classes\"\n          >\n            <GraduationHatIcon width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/admin')}\n            width={100}\n            height={100}\n            text=\"Admin\"\n          >\n            <GearIcon width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/resources')}\n            width={100}\n            height={100}\n            text=\"Resources\"\n          >\n            <BookIcon width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/students')}\n            width={100}\n            height={100}\n            text=\"Students\"\n          >\n            <StudentSearchIcon width={50} height={50} />\n          </Block>\n        </View>\n      </View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// June 19 2023\n// Picker with animated black line\n\nimport React, { ReactNode, useRef, useEffect, Children } from 'react';\nimport { View, Pressable, Animated } from 'react-native';\n// import styles from './Picker.module.css'\n\ninterface PickerWrapperProps {\n  selectedIndex: number;\n  onSetSelectedIndex: (item: number) => void;\n  children: ReactNode;\n  width: number;\n  height: number;\n}\n\nconst PickerWrapper: React.FC<PickerWrapperProps> = ({\n  selectedIndex,\n  onSetSelectedIndex,\n  children,\n  width,\n  height,\n}) => {\n  const pan = useRef(new Animated.Value(0)).current;\n  const compoentWidth = width / Children.count(children);\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedIndex * compoentWidth);\n  }, []);\n\n  return (\n    <View style={{ flexDirection: 'row', height: height * 0.8, width }}>\n      {React.Children.map(children, (child, index) => (\n        <View\n          style={{\n            position: 'absolute',\n            transform: [{ translateX: index * compoentWidth }],\n            width: compoentWidth,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              onSetSelectedIndex(index);\n              fadeIn(index);\n            }}\n          >\n            {child}\n          </Pressable>\n        </View>\n      ))}\n      <Animated.View\n        style={{\n          transform: [{ translateX: pan }],\n        }}\n      >\n        <View\n          style={{\n            height: height * 0.2,\n            width: compoentWidth,\n            backgroundColor: 'black',\n            top: height * 0.6,\n            borderRadius: 5,\n            position: 'absolute',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default PickerWrapper;\n","import { loadingStateEnum, resourceResponce } from '../types';\nimport getResource from './getResources';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function getTeams(nextLink?: string): Promise<{\n  result: loadingStateEnum;\n  data?: groupType[];\n  nextLink?: string;\n}> {\n  const groupResult = await callMsGraph(\n    nextLink || 'https://graph.microsoft.com/v1.0/me/joinedTeams',\n  );\n  if (groupResult.ok) {\n    const groupResultData = await groupResult.json();\n    if (groupResultData.value !== undefined) {\n      const outputData: groupType[] = [];\n      for (let index = 0; index < groupResultData.value.length; index += 1) {\n        outputData.push({\n          name: groupResultData.value[index].displayName,\n          id: groupResultData.value[index].id,\n        });\n      }\n      return {\n        result: loadingStateEnum.success,\n        data: outputData,\n        nextLink: groupResultData['@odata.nextLink'],\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getChannels(\n  teamId: string,\n  nextLink?: string,\n): Promise<{\n  result: loadingStateEnum;\n  data?: channelType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${teamId}/allChannels`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const output: channelType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      output.push({\n        id: data.value[index].id,\n        displayName: data.value[index].displayName,\n        selected: false,\n        loading: false,\n        error: false,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getPosts(\n  teamId: string,\n  channelId: string,\n): Promise<{\n  result: loadingStateEnum;\n  data?: resourceDataType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const output: resourceDataType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      output.push({\n        id: data.value[index].id,\n        body: data.value[index].body.content,\n        teamId: data.value[index].channelIdentity.teamId,\n        conversationId: data.value[index].channelIdentity.channelId,\n        html: false,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// Id group id\nexport async function getResourceChannels(\n  id: string,\n): Promise<\n  | { result: loadingStateEnum.success; data: channelType[] }\n  | { result: loadingStateEnum.failed }\n> {\n  const getResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${id}/allChannels`,\n  );\n  const channelResult: channelType[] = [];\n  if (getResult.ok) {\n    const getResultData = await getResult.json();\n    const channelGetResultsAwait: Promise<{\n      result: resourceResponce;\n      itemId?: string | undefined;\n    }>[] = [];\n    for (\n      let indexResult = 0;\n      indexResult < getResultData.value.length;\n      indexResult += 1\n    ) {\n      channelGetResultsAwait.push(\n        getResource(id, getResultData.value[indexResult].id),\n      );\n    }\n    const channelGetResults: {\n      result: resourceResponce;\n      itemId?: string | undefined;\n    }[] = await Promise.all(channelGetResultsAwait);\n    for (let index = 0; index < channelGetResults.length; index += 1) {\n      channelResult.push({\n        id: getResultData.value[index].id,\n        selected: channelGetResults[index].result === resourceResponce.found,\n        loading: false,\n        displayName: getResultData.value[index].displayName,\n        error: channelGetResults[index].result === resourceResponce.failed,\n      });\n    }\n    return { result: loadingStateEnum.success, data: channelResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport PickerWrapper from '../../../../UI/Pickers/Picker';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { clientId } from '../../../../PaulyConfig';\nimport { getTeams } from '../../../../Functions/microsoftGroupsFunctions';\n\ntype listType = {\n  displayName: string;\n  listId: string;\n  name: string;\n};\n\ntype extensionType = {\n  description: string;\n  id: string;\n};\n\nenum graphMode {\n  list,\n  group,\n  extension,\n}\n\nexport default function MicrosoftGraphOverview() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [lists, setLists] = useState<listType[]>([]);\n  const [groups, setGroups] = useState<groupType[]>([]);\n  const [extensions, setExtensions] = useState<extensionType[]>([]);\n  const [applicationExtensions, setApplicationExtensions] = useState<\n    extensionType[]\n  >([]);\n  const [selectedGraphMode, setSelectedGraphMode] = useState<graphMode>(\n    graphMode.list,\n  );\n  const { mode } = useParams();\n\n  // loading states\n  const [groupLoadingState, setGroupLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [listLoadingState, setListLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [schemaLoadingState, setSchemaLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n\n  async function getLists() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n    ); // sites/8td1tk.onmicrosoft.com/sites\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value !== undefined) {\n        const incomingLists: listType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          incomingLists.push({\n            displayName: data.value[index].displayName,\n            listId: data.value[index].id,\n            name: data.value[index].name,\n          });\n        }\n        setLists(incomingLists);\n        setListLoadingState(loadingStateEnum.success);\n      } else {\n        setListLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setListLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  // async function searchGroups(search: string) {\n  //   const groupResult = await callMsGraph(\n  //     `https://graph.microsoft.com/v1.0/groups?$filter=startswith(displayName,'${search}')`,\n  //   );\n  // }\n\n  async function loadData() {\n    const groupResult = await getTeams(\n      'https://graph.microsoft.com/v1.0/groups',\n    );\n    if (\n      groupResult.result === loadingStateEnum.success &&\n      groupResult.data !== undefined\n    ) {\n      setGroups(groupResult.data);\n    }\n    setGroupLoadingState(groupResult.result);\n  }\n\n  async function getExtensions() {\n    let schemaExtensionsUrl = `https://graph.microsoft.com/v1.0/schemaExtensions?$filter=owner%20eq%20'${clientId}'`;\n    const resultData: extensionType[] = [];\n    while (schemaExtensionsUrl !== '') {\n      const result = await callMsGraph(schemaExtensionsUrl);\n      if (!result.ok) {\n        setSchemaLoadingState(loadingStateEnum.failed);\n        return;\n      }\n      const data = await result.json();\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          description: data.value[index].description,\n          id: data.value[index].id,\n        });\n      }\n      if (data['@odata.nextLink'] !== undefined) {\n        schemaExtensionsUrl = data['@odata.nextLink'];\n      } else {\n        schemaExtensionsUrl = '';\n      }\n    }\n    setApplicationExtensions(resultData);\n\n    const applicationResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/schemaExtensions',\n    );\n    if (applicationResult.ok) {\n      const applicationData = await applicationResult.json();\n      const resultData: extensionType[] = [];\n      for (let index = 0; index < applicationData.value.length; index += 1) {\n        resultData.push({\n          description: applicationData.value[index].description,\n          id: applicationData.value[index].id,\n        });\n      }\n      setExtensions(resultData);\n      setSchemaLoadingState(loadingStateEnum.success);\n    } else {\n      setSchemaLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (mode === 'list') {\n      setSelectedGraphMode(graphMode.list);\n    } else if (mode === 'group') {\n      setSelectedGraphMode(graphMode.group);\n    } else if (mode === 'extension') {\n      setSelectedGraphMode(graphMode.extension);\n    }\n  }, [mode]);\n\n  useEffect(() => {\n    getLists();\n    loadData();\n    getExtensions();\n  }, []);\n\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <Link to=\"/profile/government\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Microsoft Graph Overview</Text>\n      <PickerWrapper\n        selectedIndex={selectedGraphMode}\n        onSetSelectedIndex={setSelectedGraphMode}\n        width={width}\n        height={30}\n      >\n        <Text>Lists</Text>\n        <Text>Groups</Text>\n        <Text>Extensions</Text>\n      </PickerWrapper>\n      <ScrollView style={{ height: height * 0.6 }}>\n        {selectedGraphMode === graphMode.list ? (\n          <View>\n            {listLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {listLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    {lists.map((item: listType) => (\n                      <Link\n                        key={`${item.listId}Link`}\n                        to={`/profile/government/graph/list/edit/${item.listId}`}\n                      >\n                        <View key={item.listId}>\n                          {\n                            // TO DO PRODuction fix these ids\n                            item.listId !==\n                              '2b86ba89-0262-4906-9247-bfd1260fb68e' &&\n                            item.listId !==\n                              '1f4cd053-dd6b-4e40-bb9b-803cbc74e872' ? (\n                              <View\n                                style={{\n                                  marginBottom: 5,\n                                  borderColor: 'black',\n                                  borderWidth: 5,\n                                }}\n                              >\n                                <Text>{item.displayName}</Text>\n                                <Text>{item.listId}</Text>\n                              </View>\n                            ) : null\n                          }\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n        {selectedGraphMode === graphMode.group ? (\n          <View>\n            {groupLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {groupLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    {groups.map(group => (\n                      <Link\n                        to={`/profile/government/graph/group/edit/${group.id}`}\n                        key={`group_${group.id}`}\n                      >\n                        <View>\n                          <Text>{group.name}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n        {selectedGraphMode === graphMode.extension ? (\n          <View>\n            {schemaLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {schemaLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    <View style={{ margin: 10 }}>\n                      <Text>Application Extensions</Text>\n                    </View>\n                    {applicationExtensions.map(extension => (\n                      <Link\n                        to={`/profile/government/graph/extension/edit/${extension.id}`}\n                        key={`extension_${extension.id}`}\n                        style={{ borderWidth: 2, borderColor: 'black' }}\n                      >\n                        <View>\n                          <Text>{extension.id}</Text>\n                          <Text>{extension.description}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                    <View style={{ margin: 10 }}>\n                      <Text>Tenant Extensions</Text>\n                    </View>\n                    {extensions.map(extension => (\n                      <Link\n                        to={`/profile/government/graph/extension/edit/${extension.id}`}\n                        key={`extension_${extension.id}`}\n                        style={{ borderWidth: 2, borderColor: 'black' }}\n                      >\n                        <View>\n                          <Text>{extension.id}</Text>\n                          <Text>{extension.description}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n      </ScrollView>\n      <Link to=\"/profile/government/graph/list/create\">\n        <Text>Create List</Text>\n      </Link>\n    </View>\n  );\n}\n","import { View, Text, Button, TextInput, Pressable } from 'react-native';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { RootState } from '../../../../Redux/store';\n\ntype MicrosoftGraphColumnDefinitions =\n  | 'text'\n  | 'number'\n  | 'boolean'\n  | 'calculated'\n  | 'choice'\n  | 'columnGroup'\n  | 'contentApprovalStatus'\n  | 'currency'\n  | 'dateTime'\n  | 'defaultValue'\n  | 'description'\n  | 'displayName'\n  | 'enforceUniqueValues'\n  | 'geolocation'\n  | 'hidden';\n\ntype ColumnItem = {\n  name: string;\n  key: MicrosoftGraphColumnDefinitions;\n  data: any;\n};\n\nexport default function MicrosoftGraphCreateList() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n\n  const [columns, setColumns] = useState<ColumnItem[]>([]);\n\n  const [listName, setListName] = useState<string>('');\n  const [isListHidden, setIsListHidden] = useState<boolean>(false);\n  const [isShowingTypeWindow, setIsShowingTypeWindow] =\n    useState<boolean>(false);\n\n  // Colum Properties\n  const [selectedColumnType, setSelectedColumnType] =\n    useState<MicrosoftGraphColumnDefinitions>('text');\n  const [enforceUniqueValues, setEnforceUniqueValues] =\n    useState<boolean>(false);\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n  const [columnDescription, setColumnDescription] = useState<string>('');\n  const [newColumnName, setNewColumnName] = useState<string>('');\n\n  async function createList() {\n    const columnData: object[] = [];\n\n    for (let index = 0; index < columns.length; index += 1) {\n      const { key } = columns[index];\n      const newData: object = {\n        name: columns[index].name,\n        text: {},\n      };\n      columnData.push(newData);\n    }\n\n    const listData = {\n      displayName: listName,\n      columns: columnData,\n      list: {\n        contentTypesEnabled: false,\n        hidden: false,\n        template: ' genericList',\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n      'POST',\n      JSON.stringify(listData),\n    );\n\n    const data = await result.json();\n  }\n  return (\n    <View style={{ width }}>\n      <Link to=\"/profile/government/graph\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Microsoft Graph Create</Text>\n      <Text>List Name</Text>\n      <TextInput value={listName} onChangeText={text => setListName(text)} />\n      <View style={{ height: height * 0.75 }}>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Name</Text>\n          <Text>Type</Text>\n        </View>\n        {columns.map((item: ColumnItem) => (\n          <View style={{ flexDirection: 'row' }}>\n            <Text>{item.name} </Text>\n            <Text>{item.key}</Text>\n          </View>\n        ))}\n      </View>\n      {isShowingTypeWindow ? (\n        <View style={{ height: 100, position: 'absolute', zIndex: 2 }}>\n          <Button\n            title=\"Text\"\n            onPress={() => {\n              setSelectedColumnType('text');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Number\"\n            onPress={() => {\n              setSelectedColumnType('number');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Boolean\"\n            onPress={() => {\n              setSelectedColumnType('boolean');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Calculated\"\n            onPress={() => {\n              setSelectedColumnType('calculated');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Location\"\n            onPress={() => {\n              setSelectedColumnType('geolocation');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Choice\"\n            onPress={() => {\n              setSelectedColumnType('choice');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Column Group\"\n            onPress={() => {\n              setSelectedColumnType('columnGroup');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Content Approval Status\"\n            onPress={() => {\n              setSelectedColumnType('contentApprovalStatus');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Currency\"\n            onPress={() => {\n              setSelectedColumnType('currency');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Date\"\n            onPress={() => {\n              setSelectedColumnType('dateTime');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n        </View>\n      ) : null}\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Hidden: </Text>\n        <Pressable\n          onPress={() => {\n            setIsHidden(!isHidden);\n          }}\n        >\n          <Text>{isHidden ? 'X' : 'O'}</Text>\n        </Pressable>\n        <TextInput\n          value={newColumnName}\n          onChangeText={text => setNewColumnName(text)}\n        />\n      </View>\n      <Button\n        title={selectedColumnType}\n        onPress={() => {\n          setIsShowingTypeWindow(!isShowingTypeWindow);\n        }}\n      />\n      <Button\n        title=\"Add Column\"\n        onPress={() => {\n          let columnData = {};\n          if (selectedColumnType === 'text') {\n            columnData = {\n              allowMultipleLines: true,\n              appendChangesToExistingText: false,\n              linesForEditing: 6,\n              maxLength: 300,\n              textType: 'richText',\n            };\n          }\n          const newColumn = {\n            name: newColumnName,\n            key: selectedColumnType,\n            data: columnData,\n          };\n          setNewColumnName('');\n          setColumns([...columns, newColumn]);\n        }}\n      />\n      <Button\n        title=\"Create List\"\n        onPress={() => {\n          createList();\n        }}\n      />\n      <View style={{ flexDirection: 'row' }}>\n        <Text>List Hidden: </Text>\n        <Pressable\n          onPress={() => {\n            setIsListHidden(!isListHidden);\n          }}\n        >\n          <Text>{isListHidden ? 'X' : 'O'}</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum, submissionTypeEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction convertSubmissionTypeToFilter(\n  submissionType: submissionTypeEnum,\n): string {\n  if (submissionType === submissionTypeEnum.approved) {\n    return '%20and%20fields/submissionApproved%20ne%20false';\n  }\n  if (submissionType === submissionTypeEnum.unApproved) {\n    return '%20and%20fields/submissionApproved%20eq%20false';\n  }\n  if (submissionType === submissionTypeEnum.unReviewed) {\n    return '%20and%20fields/submissionReviewed%20eq%20false';\n  }\n  return '';\n}\n\nexport default async function getSubmissions(\n  commissionId: string,\n  submissionType: submissionTypeEnum,\n): Promise<{\n  result: loadingStateEnum;\n  data?: submissionType[];\n  nextLink?: string;\n  count?: number;\n}> {\n  const filter: string = convertSubmissionTypeToFilter(submissionType);\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.commissionSubmissionsListId\n    }/items?expand=fields&$select=id&$filter=fields/commissionId%20eq%20'${commissionId}'${filter}`,\n    'GET',\n  );\n  if (result.ok) {\n    const data = await result.json();\n\n    // Get Users\n    const batchRequests: { id: string; method: string; url: string }[][] = [];\n    const users: any = {};\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (index % 20 === 0) {\n        batchRequests.push([]);\n      }\n      batchRequests[Math.floor(index / 20)].push({\n        id: (index + 1).toString(),\n        method: 'GET',\n        url: `/users/${data.value[index].fields.userId}?$select=id,displayName`,\n      });\n    }\n    for (let index = 0; index < batchRequests.length; index += 1) {\n      const batchData = {\n        requests: batchRequests[index],\n      };\n      const batchHeaders = new Headers();\n      batchHeaders.append('Accept', 'application/json');\n      const batchResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n      );\n      if (result.ok) {\n        const batchResultData = await batchResult.json();\n        for (\n          let batchIndex = 0;\n          batchIndex < batchResultData.responses.length;\n          batchIndex += 1\n        ) {\n          if (batchResultData.responses[batchIndex].status === 200) {\n            Object.defineProperty(\n              users,\n              batchResultData.responses[batchIndex].body.id,\n              {\n                value: batchResultData.responses[batchIndex].body.displayName,\n              },\n            );\n          } else {\n            return { result: loadingStateEnum.failed };\n          }\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n\n    // Return Output\n    const output: submissionType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const name = users[data.value[index].fields.userId];\n      if (name !== undefined) {\n        output.push({\n          userName: name,\n          submissionTime: data.value[index].fields.submittedTime,\n          id: data.value[index].fields.submissionId,\n          itemId: data.value[index].id,\n          approved: data.value[index].fields.submissionApproved,\n          reviewed: data.value[index].fields.submissionReviewed,\n          submissionImage:\n            data.value[index].fields.submissionData !== undefined\n              ? JSON.parse(data.value[index].fields.submissionData).imageShare\n              : undefined,\n        });\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n      count: data.value.length,\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport getCommissions from '../../../../Functions/commissions/getCommissions';\nimport getSubmissions from '../../../../Functions/commissions/getSubmissions';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  loadingStateEnum,\n  submissionTypeEnum,\n} from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentCommissions() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [commissions, setCommissions] = useState<commissionType[]>([]);\n  const [commissionsState, setCommissionsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getCommissions();\n    if (result.result === loadingStateEnum.success) {\n      if (result.data !== undefined) {\n        setCommissions(result.data);\n      }\n      // TO DO pagination\n    }\n    setCommissionsState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government');\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n        <View\n          style={{\n            width,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Commissions</Text>\n        </View>\n      </View>\n      <View style={{ height: height * 0.85 }}>\n        {commissionsState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <>\n            {commissionsState === loadingStateEnum.success ? (\n              <ScrollView style={{ height: height * 0.85 }}>\n                {commissions.map(commission => (\n                  <CommissionBlock\n                    key={`Commission_${\n                      commission.commissionId\n                    }_${createUUID()}`}\n                    commission={commission}\n                  />\n                ))}\n              </ScrollView>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ height: height * 0.05 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government/commissions/create');\n          }}\n        >\n          <Text>Create New Commission</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction CommissionBlock({ commission }: { commission: commissionType }) {\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [unclaimedState, setUnclaimedState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [unclaimedCount, setUnclaimedCount] = useState<string>('0');\n\n  async function loadData() {\n    const result = await getSubmissions(\n      commission.commissionId,\n      submissionTypeEnum.unReviewed,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.count !== undefined\n    ) {\n      if (result.count >= 50) {\n        setUnclaimedCount(`${result.count.toString()}+`);\n      } else {\n        setUnclaimedCount(result.count.toString());\n      }\n    }\n    setUnclaimedState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <Pressable\n      onPress={() =>\n        navigate(`/profile/government/commissions/${commission.commissionId}`)\n      }\n      key={`Commission_${commission.commissionId}_${createUUID()}`}\n      style={{\n        margin: 10,\n        borderRadius: 15,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n      }}\n    >\n      <View style={{ margin: 10 }}>\n        <Text selectable={false}>{commission.title}</Text>\n      </View>\n      {unclaimedCount !== '0' ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: 'red',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>{unclaimedCount}</Text>\n        </View>\n      ) : null}\n      {unclaimedState === loadingStateEnum.loading ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: '#FF6700',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <ProgressView width={10} height={10} />\n        </View>\n      ) : null}\n      {unclaimedState === loadingStateEnum.failed ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: 'red',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>!</Text>\n        </View>\n      ) : null}\n    </Pressable>\n  );\n}\n","import { View, Text, Animated, Pressable } from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Colors } from '../../types';\n\ntype PickerWrapperProps = {\n  selectedIndex: number;\n  setSelectedIndex: (item: number) => void;\n  options: string[];\n  width: number;\n  height: number;\n};\n\nexport default function SegmentedPicker({\n  width,\n  height,\n  selectedIndex,\n  setSelectedIndex,\n  options,\n}: PickerWrapperProps) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [compoentWidth, setComponentWidth] = useState(width / 3);\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth + compoentWidth * 0.005,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedIndex * compoentWidth + compoentWidth * 0.005);\n  }, []);\n\n  useEffect(() => {\n    setComponentWidth(width / options.length);\n    pan.setValue(selectedIndex * compoentWidth + compoentWidth * 0.005);\n  }, [width]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        height,\n        width,\n        backgroundColor: '#7d7d7d',\n        borderRadius: 20,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n      }}\n    >\n      {options.map((option, index) => (\n        <Pressable\n          onPress={() => {\n            setSelectedIndex(index);\n            fadeIn(index);\n          }}\n          style={{\n            position: 'absolute',\n            width: compoentWidth,\n            height,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            transform: [{ translateX: index * compoentWidth }],\n          }}\n        >\n          <Text\n            adjustsFontSizeToFit\n            style={{\n              textAlignVertical: 'center',\n              textAlign: 'center',\n              width: compoentWidth,\n            }}\n          >\n            {option}\n          </Text>\n        </Pressable>\n      ))}\n      <Animated.View style={{ transform: [{ translateX: pan }], zIndex: -1 }}>\n        <View\n          style={{\n            height: height * 0.95,\n            width: compoentWidth - compoentWidth * 0.01,\n            backgroundColor: Colors.white,\n            top: height * 0.025,\n            borderRadius: 20,\n            position: 'absolute',\n            zIndex: -1,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  Marker,\n  Circle,\n} from '@react-google-maps/api';\nimport { Text } from 'react-native';\n\nconst center = {\n  lat: 49.85663823299096,\n  lng: -97.22659526509193,\n};\n\ntype LatLngLiteral = google.maps.LatLngLiteral;\n\nexport default function MapWeb({\n  proximity,\n  onSetSelectedPositionIn,\n  width,\n  height,\n}: {\n  proximity: number;\n  onSetSelectedPositionIn: (item: { lat: number; lng: number }) => void;\n  width: number;\n  height: number;\n}) {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyAltyD_LL0kbe84kyMRxgRmoH74Spi5rvw', // TO DO put this into a loval env\n  });\n  const [selectedPosition, setSelectedPosition] = useState<LatLngLiteral>();\n  const [containerStyle, setContainerStyle] = useState<{\n    width: string;\n    height: string;\n  }>({\n    width: '400px',\n    height: '400px',\n  });\n\n  useEffect(() => {\n    setContainerStyle({\n      width: `${width.toString()}px`,\n      height: `${height.toString()}px`,\n    });\n  }, [width, height]);\n\n  // const [map, setMap] = React.useState(null)\n\n  // const onLoad = React.useCallback(function callback(map) {\n  //   // This is just an example of getting and using the map instance!!! don't just blindly copy!\n  //   const bounds = new window.google.maps.LatLngBounds(center);\n  //   map.fitBounds(bounds);\n\n  //   setMap(map)\n  // }, [])\n\n  // const onUnmount = React.useCallback(function callback(map) {\n  //   setMap(null)\n  // }, [])\n\n  return isLoaded ? (\n    <div style={{ width, height }}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={15}\n        onClick={ev => {\n          onSetSelectedPositionIn({\n            lat: ev.latLng!.lat(),\n            lng: ev.latLng!.lng(),\n          });\n          setSelectedPosition({ lat: ev.latLng!.lat(), lng: ev.latLng!.lng() });\n        }}\n      >\n        {/* Child components, such as markers, info windows, etc. */}\n        {selectedPosition && <Marker position={selectedPosition} />}\n        {selectedPosition && (\n          <Circle center={selectedPosition} radius={proximity} />\n        )}\n      </GoogleMap>\n    </div>\n  ) : (\n    <Text>Loading</Text>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  PanResponder,\n  Animated,\n  PanResponderGestureState,\n} from 'react-native';\n\ninterface BoxProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  box: {\n    backgroundColor: 'blue',\n    borderRadius: 5,\n    position: 'absolute',\n  },\n});\n\nfunction Box({\n  width,\n  height,\n  value,\n  onValueChange,\n  containerWidth,\n}: BoxProps): React.JSX.Element {\n  const pan = useRef(new Animated.Value(value)).current;\n  const valueRef = useRef({ currentValue: value });\n  const containerWidthRef = useRef({ currentValue: value });\n  const lastValue = useRef({ currentValue: value });\n  useEffect(() => {\n    containerWidthRef.current.currentValue = containerWidth;\n  }, [containerWidth]);\n  useEffect(() => {\n    valueRef.current.currentValue = value;\n  }, [value]);\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderMove: (\n        evt: unknown,\n        gestureState: PanResponderGestureState,\n      ) => {\n        const { dx } = gestureState;\n        const valueRead = valueRef.current.currentValue;\n        let adding =\n          lastValue.current.currentValue > 0\n            ? dx - lastValue.current.currentValue\n            : dx + lastValue.current.currentValue;\n        adding /= width - height / 2;\n        lastValue.current.currentValue = dx;\n        const newValue = valueRead + adding;\n\n        if (newValue <= 1 && newValue >= 0) {\n          valueRef.current.currentValue = newValue;\n          onValueChange(newValue);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: newValue * width });\n        } else if (newValue < 0) {\n          valueRef.current.currentValue = 0;\n          onValueChange(0);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: 0 });\n        } else if (newValue > 1) {\n          valueRef.current.currentValue = 1;\n          onValueChange(1);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: width - height / 2 });\n        }\n      },\n      onPanResponderRelease: () => {\n        pan.setValue(valueRef.current.currentValue * width);\n        lastValue.current.currentValue = 0;\n      },\n    }),\n  ).current;\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            width: height / 2,\n            height: height / 2,\n            transform: [{ translateX: pan }],\n          },\n        ]}\n        {...panResponder.panHandlers}\n      />\n    </View>\n  );\n};\n\ninterface SliderProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number; // This is the width of the screen\n}\n\nexport default function Slider({\n  width,\n  height,\n  value,\n  onValueChange,\n  containerWidth,\n}: SliderProps) {\n  return (\n    <View\n      style={{\n        width,\n        height,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          width,\n          height: height > 10 ? height : 10,\n          backgroundColor: 'black',\n        }}\n      >\n        <Box\n          width={width}\n          height={height}\n          value={value}\n          onValueChange={onValueChange}\n          containerWidth={containerWidth}\n        />\n      </View>\n    </View>\n  );\n}\n","import { loadingStateEnum, dataContentTypeOptions } from '../../types';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function getFileWithShareID(\n  shareID: string,\n  index: number,\n): Promise<\n  | {\n      result: loadingStateEnum.failed;\n    }\n  | {\n      result: loadingStateEnum.success;\n      index: number;\n      url?: string;\n      contentType?: dataContentTypeOptions;\n    }\n> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/shares/${shareID}/driveItem`,\n    'GET',\n    undefined,\n    [{ key: 'Prefer', value: 'redeemSharingLink' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (\n      data['@microsoft.graph.downloadUrl'] !== undefined &&\n      data['@microsoft.graph.downloadUrl'] !== null\n    ) {\n      if (data.file.mimeType.slice(0, 5) === 'image') {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.image,\n          index,\n        };\n      }\n      if (data.file.mimeType === 'video/mp4') {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.video,\n          index,\n        };\n      }\n      if (\n        data.file.mimeType ===\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n      ) {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.pdf,\n          index,\n        };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import store from '../../Redux/store';\nimport { commissionTypeEnum, loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function updateCommission(\n  isCreating: boolean,\n  commissionName: string,\n  isTimed: boolean,\n  points: number,\n  isHidden: boolean,\n  maxNumberOfClaims: number,\n  allowMultipleSubmissions: boolean,\n  selectedCommissionType: number,\n  selectedPostId: string,\n  selectedTeamId: string,\n  selectedChannelId: string,\n  startDate: Date,\n  endDate: Date,\n  commissionId: string,\n  proximity: number,\n  selectedPositionIn: { lat: number; lng: number },\n  commissionItemId: string,\n): Promise<loadingStateEnum> {\n  const data: any = {\n    fields: {\n      // All Commissions\n      Title: commissionName,\n      timed: isTimed,\n      points,\n      hidden: isHidden,\n      maxNumberOfClaims,\n      allowMultipleSubmissions,\n      commissionID: commissionId,\n      value: selectedCommissionType + 1,\n    },\n  };\n  if (selectedPostId !== '') {\n    data.fields.postTeamId = selectedTeamId;\n    data.fields.postChannelId = selectedChannelId;\n    data.fields.postId = selectedPostId;\n  }\n  if (isTimed) {\n    data.fields.startDate = startDate.toISOString().replace(/.\\d+Z$/g, 'Z');\n    data.fields.endDate = endDate.toISOString().replace(/.\\d+Z$/g, 'Z');\n  }\n  if (\n    selectedCommissionType === commissionTypeEnum.Location ||\n    selectedCommissionType === commissionTypeEnum.ImageLocation\n  ) {\n    data.fields.proximity = proximity;\n    data.fields.coordinateLat = selectedPositionIn.lat;\n    data.fields.coordinateLng = selectedPositionIn.lng;\n  }\n  if (selectedCommissionType === commissionTypeEnum.QRCode) {\n    data.fields.qrCodeData = '[]';\n  }\n\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.commissionListId}/items${\n      !isCreating ? `/${commissionItemId}` : ''\n    }`,\n    isCreating ? 'POST' : 'PATCH',\n    JSON.stringify(data),\n  );\n  if (result.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  ScrollView,\n  Pressable,\n  Switch,\n  Image,\n} from 'react-native';\nimport { useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { DatePickerModal, TimePickerModal } from 'react-native-paper-dates';\nimport store, { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  commissionTypeEnum,\n  loadingStateEnum,\n  submissionTypeEnum,\n} from '../../../../types';\nimport SegmentedPicker from '../../../../UI/Pickers/SegmentedPicker';\nimport ProgressView from '../../../../UI/ProgressView';\nimport WebViewCross from '../../../../UI/WebViewCross';\nimport { CloseIcon } from '../../../../UI/Icons/Icons';\nimport MapWeb from '../../../../UI/Map/Map';\nimport Slider from '../../../../UI/Slider';\nimport BackButton from '../../../../UI/BackButton';\nimport {\n  getChannels,\n  getPosts,\n  getTeams,\n} from '../../../../Functions/microsoftGroupsFunctions';\nimport getCommission from '../../../../Functions/commissions/getCommission';\nimport getSubmissions from '../../../../Functions/commissions/getSubmissions';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID, {\n  getTextState,\n} from '../../../../Functions/ultility/createUUID';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\nimport updateCommission from '../../../../Functions/commissions/updateCommission';\n\nenum datePickingMode {\n  none,\n  startTime,\n  endTime,\n  startDate,\n  endDate,\n}\n\nexport default function GovernmentEditCommission() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { commissionListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n\n  const [submitCommissionState, setSubmitCommissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const [selectedCommissionType, setSelectedCommissionType] =\n    useState<commissionTypeEnum>(commissionTypeEnum.Issued);\n\n  const [commissionName, setCommissionName] = useState<string>('');\n  const [proximity, setProximity] = useState<number>(0);\n  const [points, setPoints] = useState<number>(0);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n\n  const [currentDatePickingMode, setCurrentDatePickingMode] =\n    useState<datePickingMode>(datePickingMode.none);\n\n  const [selectedPositionIn, setSelectedPositionIn] = useState<{\n    lat: number;\n    lng: number;\n  }>({ lat: 49.85663823299096, lng: -97.22659526509193 });\n  const [maxNumberOfClaims, setMaxNumberOfClaims] = useState<number>(1);\n  const [allowMultipleSubmissions, setAllowMultipleSubmissions] =\n    useState<boolean>(false);\n  const [isTimed, setIsTimed] = useState<boolean>(true);\n\n  const [commissionItemId, setCommissionItemId] = useState<string>('');\n\n  const [getCommissionResult, setGetCommissionResult] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [deleteCommissionResult, setDeleteCommissionResult] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [selectedTeamId, setSelectedTeamId] = useState<string>('');\n  const [selectedChannelId, setSelectedChannelId] = useState<string>('');\n  const [selectedPostId, setSelectedPostId] = useState<string>('');\n\n  const [isCreating, setIsCreating] = useState<boolean>(false);\n\n  const { id } = useParams();\n\n  async function loadData() {\n    if (id !== undefined) {\n      const result = await getCommission(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        // TO DO add all values\n        setCommissionItemId(result.data.itemId);\n        setCommissionName(result.data.title);\n        setAllowMultipleSubmissions(result.data.allowMultipleSubmissions);\n        setIsHidden(result.data.hidden);\n        setMaxNumberOfClaims(result.data.maxNumberOfClaims);\n        setIsTimed(result.data.timed);\n        setPoints(result.data.points);\n      }\n      setGetCommissionResult(result.result);\n    }\n  }\n  async function deleteCommission() {\n    if (\n      commissionItemId === '' ||\n      deleteCommissionResult === loadingStateEnum.loading ||\n      deleteCommissionResult === loadingStateEnum.success\n    ) {\n      return;\n    }\n    setDeleteCommissionResult(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${commissionListId}/items/${commissionItemId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n      const deleteList = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}`,\n        'DELETE',\n      );\n      if (deleteList.ok) {\n        setDeleteCommissionResult(loadingStateEnum.success);\n      } else {\n        setDeleteCommissionResult(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteCommissionResult(loadingStateEnum.failed);\n    }\n  }\n  useEffect(() => {\n    if (id !== 'create') {\n      loadData();\n    } else {\n      setIsCreating(true);\n    }\n  }, []);\n\n  async function loadUpdateCommission() {\n    if (\n      (submitCommissionState === loadingStateEnum.failed ||\n        submitCommissionState === loadingStateEnum.notStarted) &&\n      id !== undefined\n    ) {\n      setSubmitCommissionState(loadingStateEnum.loading);\n      const result = await updateCommission(\n        isCreating,\n        commissionName,\n        isTimed,\n        points,\n        isHidden,\n        maxNumberOfClaims,\n        allowMultipleSubmissions,\n        selectedCommissionType,\n        selectedPostId,\n        selectedTeamId,\n        selectedChannelId,\n        startDate,\n        endDate,\n        id !== 'create' ? id : createUUID(),\n        proximity,\n        selectedPositionIn,\n        commissionItemId,\n      );\n      setSubmitCommissionState(result);\n    }\n  }\n\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        width,\n        height,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <ScrollView style={{ height, width, zIndex: 1 }}>\n        <BackButton to=\"/profile/government/commissions\" />\n        <View\n          style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>{isCreating ? 'Create New' : 'Edit'} Commission</Text>\n        </View>\n        <View\n          style={{\n            width,\n            height: height * 0.15,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <SegmentedPicker\n            selectedIndex={selectedCommissionType}\n            setSelectedIndex={setSelectedCommissionType}\n            options={[\n              'Issued',\n              'Location',\n              'Image',\n              'Image and Location',\n              'QRCode',\n            ]}\n            width={width * 0.8}\n            height={height * 0.1}\n          />\n        </View>\n        <Text>Commission Name</Text>\n        <TextInput\n          value={commissionName}\n          onChangeText={text => setCommissionName(text)}\n          placeholder=\"Commission Name\"\n        />\n        {selectedCommissionType === commissionTypeEnum.ImageLocation ||\n        selectedCommissionType === commissionTypeEnum.Location ? (\n          <View>\n            <View\n              style={{\n                width,\n                height: height * 0.3,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <MapWeb\n                proximity={proximity}\n                selectedPositionIn={selectedPositionIn}\n                onSetSelectedPositionIn={setSelectedPositionIn}\n                width={width * 0.8}\n                height={height * 0.3}\n              />\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Proximity</Text>\n              <TextInput\n                keyboardType=\"numeric\"\n                onChangeText={text => setProximity(parseFloat(text))}\n                value={proximity.toString()}\n                maxLength={10} // setting limit of input\n              />\n            </View>\n            <View\n              style={{\n                width,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Slider\n                width={width * 0.9}\n                height={50}\n                value={proximity / 1000}\n                onValueChange={value => {\n                  setProximity(value * 1000);\n                }}\n                containerWidth={width}\n              />\n            </View>\n          </View>\n        ) : null}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Timed: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isTimed ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setIsTimed(e);\n            }}\n            value={isTimed}\n          />\n        </View>\n        {isTimed ? (\n          <View>\n            <View\n              style={{\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width,\n              }}\n            >\n              <Text>Start Date</Text>\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.startDate);\n                }}\n              >\n                <Text>Pick Start Time</Text>\n              </Pressable>\n              <TimePickerModal\n                hours={new Date(startDate).getHours()}\n                minutes={new Date(startDate).getMinutes()}\n                visible={currentDatePickingMode === datePickingMode.startDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                onConfirm={e => {\n                  const newDate = new Date(startDate);\n                  newDate.setHours(e.hours);\n                  newDate.setMinutes(e.minutes);\n                  setStartDate(newDate);\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.startDate);\n                }}\n              >\n                <Text>Pick Start Date</Text>\n              </Pressable>\n              <DatePickerModal\n                locale=\"en\"\n                mode=\"single\"\n                label=\"Select Date\"\n                visible={currentDatePickingMode === datePickingMode.startDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                date={new Date(endDate)}\n                onConfirm={e => {\n                  if (e.date !== undefined) {\n                    const oldDate = new Date(endDate);\n                    const newDate = new Date(\n                      e.date.getFullYear(),\n                      e.date.getMonth(),\n                      e.date.getDate(),\n                      oldDate.getHours(),\n                      oldDate.getMinutes(),\n                    );\n                    setStartDate(newDate);\n                  }\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n            </View>\n            <View\n              style={{\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width,\n              }}\n            >\n              <Text>End Date</Text>\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.endDate);\n                }}\n              >\n                <Text>Pick End Time</Text>\n              </Pressable>\n              <TimePickerModal\n                hours={new Date(endDate).getHours()}\n                minutes={new Date(endDate).getMinutes()}\n                visible={currentDatePickingMode === datePickingMode.endTime}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                onConfirm={e => {\n                  const newDate = new Date(startDate);\n                  newDate.setHours(e.hours);\n                  newDate.setMinutes(e.minutes);\n                  setEndDate(newDate);\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.endDate);\n                }}\n              >\n                <Text>Pick End Date</Text>\n              </Pressable>\n              <DatePickerModal\n                locale=\"en\"\n                mode=\"single\"\n                label=\"Select Date\"\n                visible={currentDatePickingMode === datePickingMode.endDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                date={new Date(endDate)}\n                onConfirm={e => {\n                  if (e.date !== undefined) {\n                    const oldDate = new Date(endDate);\n                    const newDate = new Date(\n                      e.date.getFullYear(),\n                      e.date.getMonth(),\n                      e.date.getDate(),\n                      oldDate.getHours(),\n                      oldDate.getMinutes(),\n                    );\n                    setEndDate(newDate);\n                  }\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n            </View>\n          </View>\n        ) : null}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Points: </Text>\n          <TextInput\n            keyboardType=\"numeric\"\n            onChangeText={text => {\n              if (text === '') {\n                setPoints(0);\n              } else {\n                setPoints(parseFloat(text));\n              }\n            }}\n            value={points.toString()}\n            maxLength={10} // setting limit of input\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Allow Multiple Submissions: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={allowMultipleSubmissions ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setAllowMultipleSubmissions(e);\n            }}\n            value={allowMultipleSubmissions}\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Is Hidden: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isHidden ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setIsHidden(e);\n            }}\n            value={isHidden}\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Max number of claims: </Text>\n          <TextInput\n            value={maxNumberOfClaims.toString()}\n            onChangeText={e => {\n              if (e !== '') {\n                setMaxNumberOfClaims(parseFloat(e));\n              } else {\n                setMaxNumberOfClaims(0);\n              }\n            }}\n            inputMode=\"numeric\"\n          />\n        </View>\n        <Text>Post</Text>\n        <PostSelectionContainer\n          width={width}\n          height={height * 0.4}\n          selectedTeamId={selectedTeamId}\n          selectedPostId={selectedPostId}\n          setSelectedTeamId={setSelectedTeamId}\n          selectedChannelId={selectedChannelId}\n          setSelectedChannelId={setSelectedChannelId}\n          setSelectedPostId={setSelectedPostId}\n        />\n        {!isCreating && id !== undefined ? (\n          <View\n            style={{ marginTop: 10, marginBottom: 10, height: height * 0.5 }}\n          >\n            <CommissionSubmissions\n              commissionId={id}\n              width={width}\n              height={height * 0.5}\n            />\n          </View>\n        ) : null}\n        <Pressable\n          onPress={() => {\n            loadUpdateCommission();\n          }}\n        >\n          <Text>\n            {submitCommissionState === loadingStateEnum.notStarted\n              ? isCreating\n                ? 'Create Commission'\n                : 'Save Changes'\n              : submitCommissionState === loadingStateEnum.loading\n              ? 'Loading'\n              : submitCommissionState === loadingStateEnum.success\n              ? 'Success'\n              : 'Failed'}\n          </Text>\n        </Pressable>\n        {!isCreating ? (\n          <Pressable\n            onPress={() => {\n              deleteCommission();\n            }}\n          >\n            <Text>\n              {getTextState(deleteCommissionResult, {\n                notStarted: 'Delete Commission',\n                success: 'Deleted Commission',\n                failed: 'Failed To Delete Commission',\n              })}\n            </Text>\n          </Pressable>\n        ) : null}\n      </ScrollView>\n\n      {/* <View style={{height: height * 0.8, width: width * 0.8, position: \"absolute\", left: width * 0.1, top: height * 0.1, zIndex: 2, backgroundColor: (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? Colors.white:\"transparent\", borderRadius: 15, shadowColor: (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? \"black\":\"transparent\", shadowOffset: { width: 0, height: 1 }, shadowOpacity: 0.8, shadowRadius: 10, alignItems: \"center\", justifyContent: \"center\", alignContent: \"center\"}} pointerEvents={(currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? 'auto':'none'}>\n        { (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ?\n          <DatePicker \n            selectedDate={(currentDatePickingMode === datePickingMode.start) ? startDate:endDate} \n            onSetSelectedDate={(date) => {if (currentDatePickingMode === datePickingMode.end) {setEndDate(date)} else if (currentDatePickingMode === datePickingMode.start) {setStartDate(date)}}}\n            width={width * 0.7} height={height * 0.7} onCancel={() => {setCurrentDatePickingMode(datePickingMode.none)}}\n          />:null\n        }\n      </View> */}\n    </View>\n  );\n}\n\nenum postPickingMode {\n  team,\n  channel,\n  post,\n}\n\nfunction PostSelectionContainer({\n  width,\n  height,\n  selectedChannelId,\n  selectedTeamId,\n  selectedPostId,\n  setSelectedChannelId,\n  setSelectedPostId,\n  setSelectedTeamId,\n}: {\n  width: number;\n  height: number;\n  selectedTeamId: string;\n  selectedPostId: string;\n  setSelectedTeamId: (item: string) => void;\n  selectedChannelId: string;\n  setSelectedChannelId: (item: string) => void;\n  setSelectedPostId: (item: string) => void;\n}) {\n  const [currentPostPickingMode, setCurrentPostPickingMode] =\n    useState<postPickingMode>(postPickingMode.team);\n  return (\n    <>\n      {currentPostPickingMode === postPickingMode.team ? (\n        <GroupSelection\n          width={width}\n          height={height}\n          onSelect={e => {\n            setSelectedTeamId(e);\n            setCurrentPostPickingMode(postPickingMode.channel);\n          }}\n        />\n      ) : null}\n      {currentPostPickingMode === postPickingMode.channel ? (\n        <ChannelSelection\n          width={width}\n          height={height}\n          teamId={selectedTeamId}\n          onSelect={e => {\n            setSelectedChannelId(e);\n            setCurrentPostPickingMode(postPickingMode.post);\n          }}\n          onBack={() => {\n            setSelectedChannelId('');\n            setSelectedTeamId('');\n            setCurrentPostPickingMode(postPickingMode.team);\n          }}\n        />\n      ) : null}\n      {currentPostPickingMode === postPickingMode.post ? (\n        <PostSelection\n          width={width}\n          height={height}\n          teamId={selectedTeamId}\n          channelId={selectedChannelId}\n          selectedPostId={selectedPostId}\n          onSelect={setSelectedPostId}\n          onBack={() => {\n            setSelectedPostId('');\n            setSelectedChannelId('');\n            setCurrentPostPickingMode(postPickingMode.channel);\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction GroupSelection({\n  width,\n  height,\n  onSelect,\n}: {\n  width: number;\n  height: number;\n  onSelect: (item: string) => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [groupsState, setGroupsState] = useState(loadingStateEnum.loading);\n  const [groups, setGroups] = useState<groupType[]>([]);\n  async function loadData() {\n    const result = await getTeams();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setGroups(result.data);\n    }\n    setGroupsState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  if (groupsState === loadingStateEnum.loading) {\n    return (\n      <View\n        style={{\n          width,\n          height,\n          backgroundColor: Colors.white,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <ProgressView\n          width={width < height ? width * 0.3 : height * 0.3}\n          height={width < height ? width * 0.3 : height * 0.3}\n        />\n        <Text>Loading</Text>\n      </View>\n    );\n  }\n\n  if (groupsState === loadingStateEnum.success) {\n    return (\n      <ScrollView style={{ width, height }}>\n        {groups.map(group => (\n          <Pressable\n            key={`Group_${group.id}`}\n            onPress={() => {\n              onSelect(group.id);\n            }}\n          >\n            <Text>{group.name}</Text>\n          </Pressable>\n        ))}\n      </ScrollView>\n    );\n  }\n\n  return (\n    <View style={{ width, height }}>\n      <Text>Failed To Get Groups</Text>\n    </View>\n  );\n}\n\nfunction ChannelSelection({\n  width,\n  height,\n  teamId,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  teamId: string;\n  onSelect: (item: string) => void;\n  onBack: () => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [channelState, setChannelState] = useState(loadingStateEnum.loading);\n  const [channels, setChannels] = useState<channelType[]>([]);\n  async function loadData() {\n    const result = await getChannels(teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setChannels(result.data);\n    }\n    setChannelState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {channelState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {channelState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              <Pressable onPress={() => onBack()}>\n                <Text>Back</Text>\n              </Pressable>\n              {channels.map(channel => (\n                <Pressable\n                  key={`Channel_${channel.id}`}\n                  onPress={() => {\n                    onSelect(channel.id);\n                  }}\n                  style={{ width, alignItems: 'center' }}\n                >\n                  <Text>{channel.displayName}</Text>\n                </Pressable>\n              ))}\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Channels</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PostSelection({\n  width,\n  height,\n  teamId,\n  channelId,\n  selectedPostId,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  teamId: string;\n  channelId: string;\n  selectedPostId: string;\n  onSelect: (item: string) => void;\n  onBack: () => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [postsState, setPostsState] = useState(loadingStateEnum.loading);\n  const [posts, setPosts] = useState<resourceDataType[]>([]);\n  async function loadData() {\n    const result = await getPosts(teamId, channelId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setPosts(result.data);\n    }\n    setPostsState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  if (postsState === loadingStateEnum.loading) {\n    return (\n      <View\n        style={{\n          width,\n          height,\n          backgroundColor: Colors.white,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <ProgressView\n          width={width < height ? width * 0.3 : height * 0.3}\n          height={width < height ? width * 0.3 : height * 0.3}\n        />\n        <Text>Loading</Text>\n      </View>\n    );\n  }\n\n  if (postsState === loadingStateEnum.success) {\n    return (\n      <ScrollView style={{ width, height }}>\n        <Pressable onPress={() => onBack()}>\n          <Text>Back</Text>\n        </Pressable>\n        <FlatList\n          data={posts}\n          renderItem={post => (\n            <>\n              {post.item.body !== '<systemEventMessage/>' ? (\n                <Pressable\n                  key={`Post_${post.item.id}`}\n                  onPress={() => {\n                    onSelect(post.item.id);\n                  }}\n                  style={{\n                    padding: 5,\n                    margin: 5,\n                    backgroundColor:\n                      selectedPostId === post.item.id\n                        ? Colors.lightGray\n                        : Colors.white,\n                  }}\n                >\n                  <WebViewCross\n                    html={post.item.body}\n                    width={width * 0.9}\n                  />\n                </Pressable>\n              ) : null}\n            </>\n          )}\n        />\n      </ScrollView>\n    )\n  }\n\n  return (\n    <View style={{ width, height }}>\n      <Text>Failed To Get Posts</Text>\n    </View>\n  );\n}\n\nfunction CommissionSubmissions({\n  commissionId,\n  width,\n  height,\n}: {\n  commissionId: string;\n  width: number;\n  height: number;\n}) {\n  // Loading State\n  const [submissiosState, setSubmissionsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const [submissions, setSubmissions] = useState<submissionType[]>([]);\n  const [selectedSubmissionMode, setSelectedSubmissionMode] =\n    useState<submissionTypeEnum>(submissionTypeEnum.unApproved);\n\n  const [selectedSubmission, setSelectedSubmisson] = useState<\n    submissionType | undefined\n  >(undefined);\n\n  async function loadData() {\n    setSubmissionsState(loadingStateEnum.loading);\n    const result = await getSubmissions(commissionId, selectedSubmissionMode);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSubmissions(result.data);\n      setSubmissionsState(result.result);\n      if (result.count === 0) {\n        const secondResult = await getSubmissions(\n          commissionId,\n          submissionTypeEnum.unApproved,\n        );\n        if (\n          secondResult.result === loadingStateEnum.success &&\n          secondResult.data !== undefined\n        ) {\n          setSubmissions(result.data);\n          setSubmissionsState(secondResult.result);\n        }\n      }\n    } else {\n      setSubmissionsState(result.result);\n    }\n  }\n  useEffect(() => {\n    loadData();\n  }, [selectedSubmissionMode]);\n  return (\n    <>\n      {submissiosState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {submissiosState === loadingStateEnum.success ? (\n            <View style={{ width, height }}>\n              <View style={{ flexDirection: 'row' }}>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.all)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>All</Text>\n                </Pressable>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.unApproved)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>Unapproved</Text>\n                </Pressable>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.approved)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>Approved</Text>\n                </Pressable>\n              </View>\n              <FlatList\n                data={submissions}\n                renderItem={submission => (\n                  <Pressable\n                    style={{ margin: 10 }}\n                    onPress={() => setSelectedSubmisson(submission.item)}\n                  >\n                    <Text>{submission.item.userName}</Text>\n                    <Text>\n                      {new Date(\n                        submission.item.submissionTime,\n                      ).toLocaleDateString('en-US', {\n                        weekday: 'long',\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                        hour: 'numeric',\n                        minute: 'numeric',\n                        second: 'numeric',\n                      })}\n                    </Text>\n                  </Pressable>\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Failed To Load Submissions</Text>\n            </View>\n          )}\n        </>\n      )}\n      {selectedSubmission !== undefined ? (\n        <SubmissionView\n          width={width}\n          height={height}\n          submissionData={selectedSubmission}\n          onClose={() => setSelectedSubmisson(undefined)}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction SubmissionView({\n  width,\n  height,\n  submissionData,\n  onClose,\n}: {\n  width: number;\n  height: number;\n  submissionData: submissionType;\n  onClose: () => void;\n}) {\n  const [changeState, setChangeState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [imageState, setImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [imageUri, setImageUri] = useState<string>('');\n  const [imgHeight, setImgHeight] = useState<number>(0);\n\n  async function changeSubmissionApproved() {\n    setChangeState(loadingStateEnum.loading);\n    const data = {\n      fields: {\n        submissionApproved: !submissionData.approved,\n        submissionReviewed: true,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.commissionSubmissionsListId}/items/${\n        submissionData.itemId\n      }`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      setChangeState(loadingStateEnum.success);\n    } else {\n      setChangeState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadImage() {\n    if (submissionData.submissionImage !== undefined) {\n      setImageState(loadingStateEnum.loading);\n      const shareResult = await getFileWithShareID(\n        submissionData.submissionImage,\n        0,\n      );\n      if (\n        shareResult.result === loadingStateEnum.success &&\n        shareResult.url !== undefined\n      ) {\n        setImageUri(shareResult.url);\n        setImageState(shareResult.result);\n        Image.getSize(\n          shareResult.url,\n          (imageMeasureWidth, imageMeasureHeight) => {\n            const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n            setImgHeight(width * 0.7 * heightPerWidth);\n          },\n        );\n      }\n      setImageState(shareResult.result);\n    }\n  }\n\n  useEffect(() => {\n    loadImage();\n  }, []);\n\n  return (\n    <View\n      style={{\n        width: width * 0.8,\n        height: height * 0.8,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n        position: 'absolute',\n        left: width * 0.1,\n        top: height * 0.1,\n        zIndex: 2,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Pressable onPress={() => onClose()} style={{ margin: 10 }}>\n        <CloseIcon width={12} height={12} />\n      </Pressable>\n      <View\n        style={{\n          width: width * 0.8,\n          alignContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text>Submission</Text>\n        <Text>By: {submissionData.userName}</Text>\n        <Text>\n          Time:{' '}\n          {new Date(submissionData.submissionTime).toLocaleDateString('en-US', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n          })}\n        </Text>\n        <Text>Approved: {submissionData.approved ? 'TURE' : 'FALSE'}</Text>\n        <Text>Reviewed: {submissionData.reviewed ? 'TRUE' : 'FALSE'}</Text>\n        <Text>Id: {submissionData.id}</Text>\n        {submissionData.submissionImage ? (\n          <>\n            {imageState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width: width * 0.8,\n                  height: height * 0.8,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={\n                    width * 0.8 < height * 0.8 ? width * 0.3 : height * 0.3\n                  }\n                  height={\n                    width * 0.8 < height * 0.8 ? width * 0.3 : height * 0.3\n                  }\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {imageState === loadingStateEnum.success ? (\n                  <Image\n                    source={{ uri: imageUri }}\n                    width={width * 0.7}\n                    resizeMode=\"center\"\n                    style={{\n                      width: width * 0.7,\n                      height: imgHeight,\n                      marginLeft: 'auto',\n                      marginRight: 'auto',\n                      alignContent: 'center',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      backgroundColor: '#FFFFFF',\n                      shadowOffset: { width: 0, height: 1 },\n                      shadowOpacity: 0.8,\n                      shadowRadius: 10,\n                      borderRadius: 15,\n                    }}\n                  />\n                ) : (\n                  <Text>Failed to load image</Text>\n                )}\n              </>\n            )}\n          </>\n        ) : null}\n      </View>\n      <Pressable onPress={() => changeSubmissionApproved()}>\n        <Text>\n          {changeState === loadingStateEnum.notStarted\n            ? submissionData.approved\n              ? 'REMOVE APPROVAL'\n              : 'APPROVE'\n            : changeState === loadingStateEnum.loading\n            ? 'Loading'\n            : changeState === loadingStateEnum.success\n            ? 'Success'\n            : 'Failed'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport {\n  dataContentTypeOptions,\n  loadingStateEnum,\n  postType,\n} from '../../types';\nimport batchRequest from '../ultility/batchRequest';\nimport getFileWithShareID from '../ultility/getFileWithShareID';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport async function getSports(): Promise<{\n  result: loadingStateEnum;\n  data?: sportType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsListId\n    }/items?expand=fields($select=sportName,sportId,sportSvg)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const resultData: sportType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          name: data.value[index].fields.sportName,\n          id: data.value[index].fields.sportId,\n          svgData: data.value[index].fields.sportSvg,\n        });\n      }\n      return { result: loadingStateEnum.success, data: resultData };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSportsTeams(\n  sportId: string,\n): Promise<{ result: loadingStateEnum; data?: sportTeamType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${sportId}/items?expand=fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const resultData: sportTeamType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          teamName: data.value[index].fields.teamName,\n          season: data.value[index].fields.season,\n          teamId: data.value[index].fields.teamId,\n        });\n      }\n      return { result: loadingStateEnum.success, data: resultData };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSport(\n  id: string,\n): Promise<{ result: loadingStateEnum; data?: sportType; listId?: string }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsListId\n    }/items?$expand=fields&$filter=fields/sportId%20eq%20'${id}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length === 1) {\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.sportName,\n          id: data.value[0].fields.sportId,\n          svgData: data.value[0].fields.sportSvg,\n        },\n        listId: data.value[0].fields.id,\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// Andrew Mainella\n// October 7 2023\n// Pauly get submissions for sports\nexport default async function getSubmissions(): Promise<{\n  result: loadingStateEnum;\n  data?: mediaSubmissionType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsSubmissionsListId\n    }/items?expand=fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newMediaSubmissions: mediaSubmissionType[] = [];\n    if (data.value !== undefined) {\n      for (let index = 0; index < data.value.length; index += 1) {\n        newMediaSubmissions.push({\n          Title: data.value[index].fields.Title,\n          user: data.value[index].fields.User,\n          submissionId: data.value[index].fields.submissionId,\n          accepted: data.value[index].fields.accepted,\n          fileId: data.value[index].fields.fileId,\n          itemID: data.value[index].id,\n          selectedSportId: data.value[index].fields.selectedSportId,\n          selectedTeamId: data.value[index].fields.selectedTeamId,\n          reviewed: data.value[index].fields.reviewed,\n          fileType: data.value[index].fields.fileType,\n        });\n      }\n      return { result: loadingStateEnum.success, data: newMediaSubmissions };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSportsContent(\n  team?: string,\n): Promise<{ result: loadingStateEnum; sports?: sportPost[] }> {\n  const filter = team ? `&$filter=fields/selectedTeamId%20eq%20'${team}'` : '';\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsApprovedSubmissionsListId\n    }/items?expand=fields($select=fileId,caption,selectedSportId,selectedTeamId,fileType)${filter}&$select=id`,\n  );\n  if (result.ok) {\n    const dataResult = await result.json();\n    if (dataResult.value.length !== undefined) {\n      const newSportsPosts: sportPost[] = [];\n      const shareResultsPromise: Promise<\n        | {\n            result: loadingStateEnum.success;\n            index: number;\n            url?: string | undefined;\n            contentType?: dataContentTypeOptions | undefined;\n          }\n        | { result: loadingStateEnum.failed }\n      >[] = [];\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        if (\n          dataResult.value[index].fields.fileType === postType.microsoftFile\n        ) {\n          shareResultsPromise.push(\n            getFileWithShareID(dataResult.value[index].fields.fileId, index),\n          );\n        }\n      }\n      const shareResults: (\n        | {\n            result: loadingStateEnum.success;\n            index: number;\n            url?: string | undefined;\n            contentType?: dataContentTypeOptions | undefined;\n          }\n        | { result: loadingStateEnum.failed }\n      )[] = await Promise.all(shareResultsPromise);\n\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        const item = shareResults.find(e => {\n          if (e.result === loadingStateEnum.success) {\n            return e.index === index;\n          }\n          return false;\n        });\n        if (item !== undefined) {\n          if (item.result === loadingStateEnum.success) {\n            const fileType = item.contentType;\n            if (\n              item.result === loadingStateEnum.success &&\n              fileType !== undefined &&\n              item.url !== undefined\n            ) {\n              newSportsPosts.push({\n                caption: dataResult.value[index].fields.caption,\n                data: {\n                  fileId: item.url,\n                  fileType,\n                  postType: postType.microsoftFile,\n                },\n              });\n            } else {\n              return { result: loadingStateEnum.failed };\n            }\n          }\n        } else if (\n          dataResult.value[index].fields.fileType === postType.youtubeVideo\n        ) {\n          newSportsPosts.push({\n            caption: dataResult.value[index].fields.caption,\n            data: {\n              fileId: dataResult.value[index].fields.fileId,\n              postType: postType.youtubeVideo,\n            },\n          });\n        }\n      }\n      return { result: loadingStateEnum.success, sports: newSportsPosts };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  const data = await result.json();\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getRoster(\n  teamId: string,\n): Promise<{ result: loadingStateEnum; data?: rosterType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${teamId}/items?$expand=fields($select=playerId,position,playerNumber,posts,imageShareId)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const batchData: { id: string; method: 'GET' | 'POST'; url: string }[][] =\n      [];\n    let batchIndex = -1;\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (index % 20 === 0) {\n        batchIndex += 1;\n        batchData.push([]);\n      }\n      batchData[batchIndex].push({\n        id: (index + 1 - 20 * batchIndex).toString(),\n        method: 'GET',\n        url: `/users/${data.value[index].fields.playerId}`,\n      });\n    }\n    const batchResult = await batchRequest(batchData);\n    if (\n      batchResult.result === loadingStateEnum.success &&\n      batchResult.data !== undefined\n    ) {\n      const outUsers: microsoftUserType[] = [];\n      for (let index = 0; index < batchResult.data.length; index += 1) {\n        if (batchResult.data[index].status === 200) {\n          // TO DO check okay response code\n          outUsers.push({\n            id: batchResult.data[index].body?.id,\n            displayName: batchResult.data[index].body?.displayName,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      const outputRosters: rosterType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        const userData = outUsers.find(e => {\n          return e.id === data.value[index].fields.playerId;\n        });\n        if (userData !== undefined) {\n          outputRosters.push({\n            name: userData.displayName,\n            id: data.value[index].fields.playerId,\n            imageShareId: data.value[index].fields.imageShareId,\n            position: data.value[index].fields.position,\n            playerNumber: data.value[index].fields.playerNumber,\n            posts:\n              data.value[index].fields.posts !== undefined\n                ? JSON.parse(data.value[index].fields.posts)\n                : undefined,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      return { result: loadingStateEnum.success, data: outputRosters };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View } from 'react-native';\nimport React from 'react';\n\nexport default function SVGXml({\n  xml,\n  height,\n  width,\n}: {\n  xml: string;\n  width: number;\n  height: number;\n}) {\n  return (\n    <View style={{ height, width }}>\n      <div dangerouslySetInnerHTML={{ __html: xml }} />\n    </View>\n  );\n}\n","//https://stackoverflow.com/questions/54017100/how-to-integrate-youtube-iframe-api-in-reactjs-solution\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nclass YouTubeVideo extends React.PureComponent {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  };\n\n  componentDidMount = () => {\n    // On mount, check to see if the API script is already loaded\n\n    if (!window.YT) { // If not, load the script asynchronously\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\n      window.onYouTubeIframeAPIReady = this.loadVideo;\n\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n    } else { // If script is already there, load the video directly\n      this.loadVideo();\n    }\n  };\n\n  loadVideo = () => {\n    const { id } = this.props;\n\n    // the Player object is created uniquely based on the id in props\n    this.player = new window.YT.Player(`youtube-player-${id}`, {\n      videoId: id,\n      height: `100%`,\n      width: `100%`,\n      playerVars: {\n        'playsinline': 1,\n        'loop': 1,\n        'rel':0\n      },\n      events: {\n        onReady: this.onPlayerReady,\n      },\n    });\n  };\n\n  onPlayerReady = event => {\n    event.target.playVideo();\n  };\n\n  render = () => {\n    const { id } = this.props;\n    return (\n      <div id={`youtube-player-${id}`} />\n    );\n  };\n}\n\nexport default YouTubeVideo;","import { View, Platform } from 'react-native';\nimport React from 'react';\nimport WebView from 'react-native-webview';\nimport YoutubeWeb from './youtubeIframeFunction';\n\nexport default function SportsYoutube({\n  videoId,\n  width,\n  height,\n}: {\n  videoId: string;\n  width: number;\n  height?: number | undefined;\n}) {\n  if (Platform.OS === 'web') {\n    return (\n      <View style={{ width, height: height || (width / 16) * 9 }}>\n        <YoutubeWeb\n          id={videoId}\n          width={width}\n          height={height || (width / 16) * 9}\n        />\n      </View>\n    )\n  } else {\n    return (\n      <WebView\n        source={{\n          html: `\n          <!DOCTYPE html>\n          <html>\n            <head>\n              <meta name=\"viewport\" content=\"width=device-width\">\n              <style>\n                body {\n                  margin: 0px;\n                  height: ${height || (width / 16) * 9}px;\n                }\n              </style>\n            </head>\n            <body>\n              <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->\n              <div id=\"player\" className=\"player\"></div>\n          \n              <script>\n                // 2. This code loads the IFrame Player API code asynchronously.\n                var tag = document.createElement('script');\n          \n                tag.src = \"https://www.youtube.com/iframe_api\";\n                var firstScriptTag = document.getElementsByTagName('script')[0];\n                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n          \n                // 3. This function creates an <iframe> (and YouTube player)\n                //    after the API code downloads.\n                var player;\n                function onYouTubeIframeAPIReady() {\n                  player = new YT.Player('player', {\n                    height: '${height || (width / 16) * 9}',\n                    width: '${width}',\n                    videoId: '${videoId}',\n                    playerVars: {\n                      'playsinline': 1,\n                      'loop': 1,\n                      'rel':0,\n                      'playsinline':1\n                    },\n                    events: {\n                      'onReady': onPlayerReady,\n                      'onStateChange': onPlayerStateChange\n                    }\n                  });\n                }\n          \n                // 4. The API will call this function when the video player is ready.\n                function onPlayerReady(event) {\n                  event.target.playVideo();\n                }\n          \n                // 5. The API calls this function when the player's state changes.\n                //    The function indicates that when playing a video (state=1),\n                //    the player should play for six seconds and then stop.\n                var done = false;\n                function onPlayerStateChange(event) {\n                  if (event.data == YT.PlayerState.PLAYING && !done) {\n                    setTimeout(stopVideo, 6000);\n                    done = true;\n                  }\n                }\n                function stopVideo() {\n                  player.stopVideo();\n                }\n              </script>\n            </body>\n          </html>\n        `,\n        }}\n        style={{\n          width,\n          height: height || (width / 16) * 9,\n          position: 'absolute',\n        }}\n        automaticallyAdjustContentInsets={false}\n        scrollEnabled={false}\n        scalesPageToFit={false}\n        allowsInlineMediaPlayback\n      />\n    )\n  }\n}\n","import { ResizeMode, Video } from 'expo-av';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  ScrollView,\n  Pressable,\n  FlatList,\n  ListRenderItemInfo,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport {\n  getRoster,\n  getSports,\n  getSportsContent,\n  getSportsTeams,\n} from '../Functions/sports/sportsFunctions';\nimport getFileWithShareID from '../Functions/ultility/getFileWithShareID';\nimport SegmentedPicker from '../UI/Pickers/SegmentedPicker';\nimport SVGXml from '../UI/SVGXml/SVGXml';\nimport BackButton from '../UI/BackButton';\nimport ProgressView from '../UI/ProgressView';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n  postType,\n} from '../types';\nimport SportsYoutube from '../UI/SportsYoutube';\n\nexport default function Sports() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [sportsPosts, setSportsPosts] = useState<sportPost[]>([]);\n  const [loadingResult, setLoadingResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [sportsState, setSportsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [teamsState, setTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedSport, setSelectedSport] = useState<sportType | undefined>(\n    undefined,\n  );\n  const [selectedTeam, setSelectedTeam] = useState<sportTeamType | undefined>(\n    undefined,\n  );\n  const [isShowingTeams, setIsShowingTeams] = useState<boolean>(false);\n  const [sports, setSports] = useState<sportType[]>([]);\n  const [isShowingRoster, setIsShowingRoster] = useState<boolean>(false);\n  const [sportsTeams, setSportsTeams] = useState<sportTeamType[]>([]);\n  const dispatch = useDispatch();\n\n  async function loadSports() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSports(result.data);\n    }\n    setSportsState(result.result);\n  }\n\n  async function loadTeams(sport: sportType) {\n    const result = await getSportsTeams(sport.id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSportsTeams(result.data);\n    }\n    setTeamsState(result.result);\n  }\n\n  async function loadSportsContent() {\n    const result = await getSportsContent(selectedTeam?.teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.sports !== undefined\n    ) {\n      setSportsPosts(result.sports);\n    }\n    setLoadingResult(result.result);\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n    loadSports();\n  }, []);\n\n  useEffect(() => {\n    loadSportsContent();\n  }, [selectedTeam]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        backgroundColor: Colors.white,\n        overflow: 'hidden',\n      }}\n    >\n      <View\n        style={{\n          height: height * 0.1,\n          width,\n          backgroundColor: Colors.darkGray,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n        <Text\n          style={{\n            fontFamily: 'BukhariScript',\n            color: 'white',\n            fontSize: height * 0.06,\n          }}\n        >\n          Sports\n        </Text>\n      </View>\n      <ScrollView\n        style={{\n          height: isShowingTeams ? height * 0.1 : 24,\n          width,\n        }}\n        horizontal\n      >\n        <View>\n          {sportsState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height: isShowingTeams ? height * 0.05 : height * 0.1,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView width={15} height={15} />\n            </View>\n          ) : (\n            <>\n              {sportsState === loadingStateEnum.success ? (\n                <View\n                  style={{\n                    flexDirection: 'row',\n                    height: isShowingTeams ? height * 0.05 : 32,\n                  }}\n                >\n                  <Pressable\n                    style={{\n                      backgroundColor: Colors.darkGray,\n                      borderWidth: selectedSport === undefined ? 3 : 0,\n                      borderColor: 'black',\n                      borderRadius: 15,\n                      alignContent: 'center',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      marginLeft: 3,\n                      marginTop: 3,\n                      padding: isShowingTeams ? 5 : 10,\n                      height: isShowingTeams ? 32 : 42,\n                    }}\n                    onPress={() => {\n                      setSelectedTeam(undefined);\n                      setSportsTeams([]);\n                      setSelectedSport(undefined);\n                      setIsShowingRoster(false);\n                      setIsShowingTeams(false);\n                    }}\n                  >\n                    <Text\n                      style={{\n                        color: Colors.white,\n                      }}\n                    >\n                      Highlights\n                    </Text>\n                  </Pressable>\n                  {sports.map(sport => (\n                    <Pressable\n                      key={`SportButton_${sport.id}`}\n                      onPress={() => {\n                        setSelectedSport(sport);\n                        loadTeams(sport);\n                        setIsShowingTeams(true);\n                        setIsShowingRoster(false);\n                      }}\n                      style={{\n                        backgroundColor: Colors.darkGray,\n                        borderWidth: selectedSport?.id === sport.id ? 3 : 0,\n                        borderColor: 'black',\n                        borderRadius: 15,\n                        alignContent: 'center',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        marginLeft: 3,\n                        marginTop: 3,\n                        height: isShowingTeams ? 32 : 42,\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: 'row',\n                          alignContent: 'center',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          marginLeft: 10,\n                        }}\n                      >\n                        <SVGXml xml={sport.svgData} width={20} height={20} />\n                        <Text\n                          style={{\n                            margin: isShowingTeams ? 5 : 10,\n                            color: Colors.white,\n                            marginBottom:\n                              sport.id === selectedSport?.id &&\n                              selectedTeam !== undefined &&\n                              !isShowingTeams\n                                ? 0\n                                : isShowingTeams\n                                ? 5\n                                : 10,\n                          }}\n                        >\n                          {sport.name}\n                        </Text>\n                        {sport.id === selectedSport?.id &&\n                        selectedTeam !== undefined &&\n                        !isShowingTeams ? (\n                          <View>\n                            <Text\n                              style={{\n                                color: Colors.white,\n                                marginBottom: 5,\n                                marginLeft: 2,\n                                marginRight: 10,\n                              }}\n                            >\n                              {selectedTeam?.teamName}\n                            </Text>\n                          </View>\n                        ) : null}\n                      </View>\n                    </Pressable>\n                  ))}\n                </View>\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n          {isShowingTeams ? (\n            <View style={{ flexDirection: 'row' }}>\n              {sportsState === loadingStateEnum.loading ? (\n                <View\n                  style={{\n                    width,\n                    height: height * 0.05,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <ProgressView width={15} height={15} />\n                </View>\n              ) : (\n                <>\n                  {sportsState === loadingStateEnum.success ? (\n                    <>\n                      {sportsTeams.map(team => (\n                        <Pressable\n                          key={`SportTeam_${team.teamId}`}\n                          onPress={() => {\n                            setSelectedTeam(team);\n                            setIsShowingTeams(false);\n                            setIsShowingRoster(false);\n                          }}\n                          style={{\n                            backgroundColor: Colors.darkGray,\n                            borderRadius: 15,\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            marginLeft: 3,\n                            marginTop: 3,\n                          }}\n                        >\n                          <Text style={{ margin: 5, color: Colors.white }}>\n                            {team.teamName}\n                          </Text>\n                        </Pressable>\n                      ))}\n                    </>\n                  ) : (\n                    <Text>Failed to load Sports</Text>\n                  )}\n                </>\n              )}\n            </View>\n          ) : null}\n        </View>\n      </ScrollView>\n      {loadingResult === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height: height * 0.8 + (isShowingTeams ? 0 : height * 0.1 - 34),\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.25 : height * 0.25}\n            height={width < height ? width * 0.5 : height * 0.5}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingResult === loadingStateEnum.success ? (\n            <View style={{ height: height * 0.8 }}>\n              {selectedTeam !== undefined ? (\n                <View style={{ marginLeft: 5, marginRight: 10, marginTop: 10 }}>\n                  <SegmentedPicker\n                    selectedIndex={isShowingRoster ? 1 : 0}\n                    setSelectedIndex={e => {\n                      if (e === 0) {\n                        setIsShowingRoster(false);\n                      } else if (e === 1) {\n                        setIsShowingRoster(true);\n                      }\n                    }}\n                    options={['Highlights', 'Roster']}\n                    width={width - 16}\n                    height={25}\n                  />\n                </View>\n              ) : null}\n              {isShowingRoster && selectedTeam !== undefined ? (\n                <RosterView\n                  teamId={selectedTeam.teamId}\n                  width={width}\n                  height={height * 0.7}\n                />\n              ) : (\n                <FlatList\n                  data={sportsPosts}\n                  renderItem={post => <SportsPostBlock post={post} />}\n                />\n              )}\n            </View>\n          ) : (\n            <View>\n              <Text>Something went wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n\nfunction SportsPostBlock({ post }: { post: ListRenderItemInfo<sportPost> }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <View\n      key={`Sport_${post.item.data.fileId}`}\n      style={{\n        width: width * 0.9,\n        height:\n          post.item.data.postType === postType.youtubeVideo\n            ? ((width * 0.9) / 16) * 9\n            : height * 0.4,\n        backgroundColor: Colors.white,\n        elevation: 2,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 10,\n        marginLeft: width * 0.05,\n        marginRight: width * 0.05,\n        marginTop: height * 0.05,\n        marginBottom: height * 0.05,\n        borderRadius: 15,\n      }}\n    >\n      <View\n        style={{\n          overflow: 'hidden',\n          width: width * 0.9,\n          height:\n            post.item.data.postType === postType.youtubeVideo\n              ? ((width * 0.9) / 16) * 9\n              : height * 0.4,\n          borderRadius: 15,\n        }}\n      >\n        {post.item.data.postType === postType.microsoftFile ? (\n          <>\n            {post.item.data.fileType === dataContentTypeOptions.image ? (\n              <View>\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: 5,\n                    bottom: 5,\n                    zIndex: 100,\n                  }}\n                >\n                  {post.item.caption}\n                </Text>\n                <Image\n                  style={{\n                    width: width * 0.9,\n                    height: height * 0.4,\n                    marginLeft: width * 0.05,\n                    marginRight: width * 0.05,\n                    borderRadius: 15,\n                  }}\n                  source={{ uri: post.item.data.fileId }}\n                />\n              </View>\n            ) : null}\n            {post.item.data.fileType === dataContentTypeOptions.video ? (\n              <View>\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: 5,\n                    bottom: 5,\n                    zIndex: 100,\n                  }}\n                >\n                  {post.item.caption}\n                </Text>\n                <Video\n                  useNativeControls\n                  source={{ uri: post.item.data.fileId }}\n                  resizeMode={ResizeMode.COVER}\n                  style={{\n                    width: width * 0.9,\n                    height: height * 0.4,\n                    alignSelf: 'stretch',\n                    borderRadius: 15,\n                  }}\n                  videoStyle={{\n                    width: width * 0.9,\n                    height: height * 0.4,\n                    borderRadius: 15,\n                  }}\n                />\n              </View>\n            ) : null}\n          </>\n        ) : null}\n        {post.item.data.postType === postType.youtubeVideo ? (\n          <SportsYoutube width={width * 0.9} videoId={post.item.data.fileId} />\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nfunction RosterView({\n  teamId,\n  width,\n  height,\n}: {\n  teamId: string;\n  width: number;\n  height: number;\n}) {\n  const [rosterLoadingState, setRosterLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [roster, setRoster] = useState<rosterType[]>([]);\n\n  async function loadRoster() {\n    const result = await getRoster(teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRoster(result.data);\n    }\n    setRosterLoadingState(result.result);\n  }\n\n  useEffect(() => {\n    loadRoster();\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  if (rosterLoadingState === loadingStateEnum.loading) {\n    return (\n      <View\n        style={{\n          width,\n          height,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <ProgressView width={width * 0.1} height={height * 0.1} />\n        <Text>Loading</Text>\n      </View>\n    );\n  }\n\n  if (rosterLoadingState === loadingStateEnum.success) {\n    return (\n      <View>\n        <View style={{ flexDirection: 'row', marginTop: 10, marginBottom: 5 }}>\n          <Text style={{ marginLeft: 35, width: width * 0.4 }}>Player</Text>\n          <Text style={{ width: width * 0.3 }}>Player Number</Text>\n          <Text>Position</Text>\n        </View>\n        <FlatList\n          data={roster}\n          renderItem={item => (\n            <View\n              style={{\n                backgroundColor:\n                  item.index % 2 === 0 ? Colors.white : Colors.lightGray,\n              }}\n            >\n              <View style={{ flexDirection: 'row', margin: 10 }}>\n                <RosterImage id={item.item.imageShareId} />\n                <Text style={{ marginLeft: 5, width: width * 0.4 }}>\n                  {item.item.name}\n                </Text>\n                {item.item.playerNumber !== undefined ? (\n                  <Text style={{ width: width * 0.3 }}>\n                    {item.item.playerNumber}\n                  </Text>\n                ) : null}\n                {item.item.position !== undefined ? (\n                  <Text>{item.item.position}</Text>\n                ) : null}\n              </View>\n            </View>\n          )}\n        />\n      </View>\n    )\n  }\n\n  return (\n    <View>\n      <Text>Something went wrong loading the roster</Text>\n    </View>\n  );\n}\n\nfunction RosterImage({ id }: { id?: string }) {\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const [imageState, setImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  async function loadData(imageId: string) {\n    setImageState(loadingStateEnum.loading);\n    const result = await getFileWithShareID(imageId, 0);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.url !== undefined\n    ) {\n      setImageUrl(result.url);\n      setImageState(loadingStateEnum.success);\n    } else {\n      setImageState(loadingStateEnum.failed);\n    }\n  }\n  useEffect(() => {\n    if (id !== undefined) {\n      loadData(id);\n    }\n  }, [id]);\n\n  if (imageState === loadingStateEnum.loading) {\n    return (\n      <View\n        style={{\n          width: 20,\n          height: 20,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <ProgressView width={14} height={14} />\n      </View>\n    );\n  }\n\n  if (imageState === loadingStateEnum.success) {\n    return (\n      <View>\n        <Image\n          source={{ uri: imageUrl }}\n          style={{ width: 20, height: 20, borderRadius: 10 }}\n        />\n      </View>\n    );\n  }\n\n  if (imageState === loadingStateEnum.notStarted) {\n    return <View style={{ width: 20, height: 20 }} />;\n  }\n\n  return (\n    <View>\n      <Text>Failed</Text>\n    </View>\n  );\n}\n","//\n//  DayView.tsx\n//  Pauly\n//\n//  Created by Andrew Mainella on 2023-07-21.\n//\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { View, ScrollView, useColorScheme, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport {\n  calculateIfShowing,\n  computeEventHeight,\n  findTimeOffset,\n  isDateToday,\n} from '../../Functions/calendar/calendarFunctions';\nimport { RootState } from '../../Redux/store';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum } from '../../types';\nimport { getClassEventsFromDay } from '../../Functions/classesFunctions';\n\nexport default function DayView({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const colorScheme = useColorScheme();\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const [heightOffsetTop, setHeightOffsetTop] = useState<number>(0);\n  const [currentMinuteInt, setCurrentMinuteInt] = useState<number>(0);\n  const [currentTime, setCurrentTime] = useState<string>('12:00');\n  const [isShowingTime, setIsShowingTime] = useState<boolean>(true);\n  const [hourLength, setHourLength] = useState<number>(0);\n  const hoursText: string[] = [\n    '12AM',\n    '1AM',\n    '2AM',\n    '3AM',\n    '4AM',\n    '5AM',\n    '6AM',\n    '7AM',\n    '8AM',\n    '9AM',\n    '10AM',\n    '11AM',\n    '12PM',\n    '1PM',\n    '2PM',\n    '3PM',\n    '4PM',\n    '5PM',\n    '6PM',\n    '7PM',\n    '8PM',\n    '9PM',\n    '10PM',\n    '11PM',\n  ];\n  const mainScrollRef = useRef<ScrollView>(null);\n  const [eventsPane, setEventsPane] = useState<number[][]>([[]]); // This is a sorted 2d array for calculating the horizintal shift of an event\n  const [schoolEvents, setSchoolEvents] = useState<eventType[]>();\n\n  function setCurrentTimeFunction(hour: number, minuite: number) {\n    if (minuite.toString().length === 1) {\n      if (hour === 12) {\n        setCurrentTime(`12:0${minuite.toString()}`);\n      } else {\n        setCurrentTime(`${(hour % 12).toString()}:0${minuite.toString()}`);\n      }\n    } else if (hour === 12) {\n      setCurrentTime(`12:${minuite}`);\n    } else {\n      setCurrentTime(`${(hour % 12).toString()}:${minuite.toString()}`);\n    }\n  }\n\n  function loadCalendarContent() {\n    const currentDate = new Date();\n    const resultHeightTopOffset = findTimeOffset(currentDate, height);\n    setHeightOffsetTop(resultHeightTopOffset);\n    const minuiteInt: number = currentDate.getMinutes();\n    setCurrentMinuteInt(minuiteInt);\n    const hourInt = currentDate.getHours();\n    setCurrentTimeFunction(hourInt, minuiteInt);\n    mainScrollRef.current?.scrollTo({\n      x: 0,\n      y: resultHeightTopOffset,\n      animated: false,\n    });\n  }\n\n  function updateOnTimeChange() {\n    const minuiteInt = new Date().getMinutes();\n    if (currentMinuteInt !== minuiteInt!) {\n      setCurrentMinuteInt(minuiteInt);\n\n      const hourInt = new Date().getHours();\n      if (minuiteInt.toString().length === 1) {\n        setCurrentTimeFunction(hourInt, minuiteInt);\n      } else {\n        setCurrentTimeFunction(hourInt, minuiteInt);\n      }\n      setHeightOffsetTop(findTimeOffset(new Date(), height));\n    }\n  }\n\n  // https://stackoverflow.com/questions/65049812/how-to-call-a-function-every-minute-in-a-react-component\n  // Upadtes every second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updateOnTimeChange();\n    }, 1000);\n\n    return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\n  }, []);\n\n  useEffect(() => {\n    setHourLength(height * 0.1);\n    loadCalendarContent();\n  }, []);\n\n  async function getClassesEvents() {\n    const result = await getClassEventsFromDay();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSchoolEvents(result.data);\n    }\n  }\n\n  useEffect(() => {\n    getClassesEvents();\n  }, [selectedDate]);\n\n  return (\n    <ScrollView\n      style={{ height, width, backgroundColor: Colors.white }}\n      ref={mainScrollRef}\n    >\n      <>\n        {isShowingTime ? (\n          <>\n            {hoursText.map(value => (\n              <View\n                key={`${value}_${createUUID()}`}\n                style={{ flexDirection: 'row', height: hourLength }}\n              >\n                {calculateIfShowing(value, new Date(selectedDate)) ? (\n                  <Text\n                    style={{\n                      color: colorScheme == 'dark' ? Colors.white : 'black',\n                    }}\n                  >\n                    {value}\n                  </Text>\n                ) : null}\n                <View\n                  style={{\n                    backgroundColor: 'black',\n                    width: width * 0.9,\n                    height: 6,\n                    position: 'absolute',\n                    right: 0,\n                    borderRadius: 25,\n                  }}\n                />\n              </View>\n            ))}\n          </>\n        ) : null}\n      </>\n      {currentEvents.map(event => (\n        <>\n          {event.allDay ||\n          new Date(event.endTime).getFullYear() !==\n            new Date(selectedDate).getFullYear() ||\n          new Date(event.endTime).getMonth() !==\n            new Date(selectedDate).getMonth() ||\n          new Date(event.endTime).getDate() !==\n            new Date(selectedDate).getDate() ? null : (\n            <EventBlock\n              event={event}\n              width={width}\n              height={height}\n              eventPane={eventsPane}\n              setEventPane={setEventsPane}\n            />\n          )}\n        </>\n      ))}\n      {schoolEvents?.map(event => (\n        <EventBlock\n          event={event}\n          width={width}\n          height={height}\n          eventPane={eventsPane}\n          setEventPane={setEventsPane}\n        />\n      ))}\n      {new Date(selectedDate).getDate() === new Date().getDate() &&\n      new Date(selectedDate).getMonth() === new Date().getMonth() &&\n      new Date(selectedDate).getFullYear() === new Date().getFullYear() ? (\n        <View\n          style={{\n            position: 'absolute',\n            top: heightOffsetTop,\n            height: height * 0.005,\n            width,\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}\n        >\n          <Text style={{ color: 'red', zIndex: 2 }}>{currentTime}</Text>\n          <View\n            style={{\n              backgroundColor: 'red',\n              width: width * 0.914,\n              height: 6,\n              position: 'absolute',\n              right: 0,\n            }}\n          />\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nfunction EventBlock({\n  event,\n  width,\n  height,\n  eventPane,\n  setEventPane,\n}: {\n  event: eventType;\n  width: number;\n  height: number;\n  eventPane: number[][];\n  setEventPane: (item: number[][]) => void;\n}) {\n  const EventHeight = computeEventHeight(\n    new Date(event.startTime),\n    new Date(event.endTime),\n    height,\n  );\n  const Offset = findTimeOffset(new Date(event.startTime), height);\n  const [horizontalShift, setHorizontalShift] = useState<number>(0);\n  function calculateHorizontalShift() {\n    let handeled = false;\n    for (\n      let horizontalCheck = 0;\n      horizontalCheck < eventPane.length;\n      horizontalCheck += 1\n    ) {\n      const beforeIndex = eventPane[horizontalCheck].findIndex(\n        e => e >= Offset,\n      );\n      if (beforeIndex !== -1) {\n        if (beforeIndex - 1 < eventPane[horizontalCheck].length) {\n          if (eventPane[horizontalCheck][beforeIndex - 1] <= Offset) {\n            // Fail Check Next Hoizontal Array\n            continue;\n          } else {\n            // Everything Checks Out\n            const afterIndex = eventPane[horizontalCheck].findIndex(\n              e => e >= Offset + EventHeight,\n            );\n            if (afterIndex !== -1) {\n              if (afterIndex - 1 < eventPane[horizontalCheck].length) {\n                if (\n                  eventPane[horizontalCheck][afterIndex - 1] <=\n                  Offset + EventHeight\n                ) {\n                  // Fails check next horizontal array\n                  continue;\n                } else {\n                  // All Good\n                  eventPane[horizontalCheck].push(Offset);\n                  eventPane[horizontalCheck].push(Offset + EventHeight);\n                  eventPane[horizontalCheck].sort();\n                  handeled = true;\n                  break;\n                }\n              } else {\n                // Error\n                continue;\n              }\n            } else {\n              // All Good\n              const newEvents: number[][] = eventPane;\n              newEvents[horizontalCheck].push(Offset);\n              newEvents[horizontalCheck].push(Offset + EventHeight);\n              // [...eventPane[horizontalCheck], Offset, Offset + EventHeight])\n              eventPane[horizontalCheck].sort();\n              handeled = true;\n              break;\n            }\n          }\n        } else {\n          // Error\n          continue;\n        }\n      } else {\n        eventPane[horizontalCheck].push(Offset);\n        eventPane[horizontalCheck].push(Offset + EventHeight);\n        eventPane[horizontalCheck].sort();\n        handeled = true;\n        break;\n      }\n    }\n\n    if (!handeled) {\n      eventPane.push([]);\n      eventPane[eventPane.length - 1].push(Offset);\n      eventPane[eventPane.length - 1].push(Offset + EventHeight);\n    }\n    setHorizontalShift(width * horizontalCheck);\n  }\n\n  useEffect(() => {\n    calculateHorizontalShift();\n  }, []);\n\n  return (\n    <View\n      key={`Event_${createUUID()}`}\n      style={{\n        width: width * 0.9,\n        height: EventHeight,\n        top: Offset,\n        position: 'absolute',\n        right: 0,\n        borderColor: Colors.maroon,\n        borderLeftWidth: 3,\n      }}\n    >\n      <View\n        style={{\n          width: width * 0.9,\n          height: EventHeight,\n          position: 'absolute',\n          backgroundColor: event.eventColor,\n          opacity: 0.3,\n          zIndex: -1,\n        }}\n      />\n      <Text style={{ opacity: 1 }}>{event.name}</Text>\n      <Text>\n        {new Date(event.startTime).toLocaleString('en-us', {\n          hour: 'numeric',\n          minute: 'numeric',\n        })}{' '}\n        to{' '}\n        {new Date(event.endTime).toLocaleString('en-us', {\n          hour: 'numeric',\n          minute: 'numeric',\n        })}\n      </Text>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DayView from './DayView';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport { RootState } from '../../Redux/store';\nimport { selectedDateSlice } from '../../Redux/reducers/selectedDateReducer';\nimport { Colors } from '../../types';\nimport { ChevronLeft, ChevronRight } from '../../UI/Icons/Icons';\n\nexport default function Week({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const selectedDateRedux: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  const [daysOfWeek, setDaysOfWeek] = useState<Date[]>([]);\n  const dispatch = useDispatch();\n  function getDOW(selectedDate: Date) {\n    const week: Date[] = [];\n    // Starting Monday not Sunday\n    selectedDate.setDate(selectedDate.getDate() - selectedDate.getDay());\n    for (let i = 0; i < 7; i += 1) {\n      week.push(new Date(selectedDate));\n      selectedDate.setDate(selectedDate.getDate() + 1);\n    }\n    return week;\n  }\n  useEffect(() => {\n    setDaysOfWeek(getDOW(new Date(selectedDateRedux)));\n  }, [selectedDateRedux]);\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View>\n        {/* 768 TO DO get dimentiosn value */}\n        {false ? (\n          <View />\n        ) : (\n          <View>\n            <View\n              style={{\n                flexDirection: 'row',\n                height: width * 0.142857142857143,\n                width,\n              }}\n            >\n              <Pressable\n                style={{ margin: width * 0.01111111111111111 }}\n                onPress={() => {\n                  const d = new Date(selectedDateRedux);\n                  d.setDate(d.getDate() - 7);\n                  dispatch(\n                    selectedDateSlice.actions.setSelectedDate(d.toISOString()),\n                  );\n                }}\n              >\n                <ChevronLeft\n                  width={width * 0.08888888888888889}\n                  height={width * 0.08888888888888889}\n                />\n              </Pressable>\n              {daysOfWeek.map(day => (\n                <Pressable\n                  onPress={() => {\n                    dispatch(\n                      selectedDateSlice.actions.setSelectedDate(\n                        day.toISOString(),\n                      ),\n                    );\n                  }}\n                  key={`${day.getDay()}_${createUUID()}`}\n                  style={{\n                    width: width * 0.08888888888888889,\n                    height: width * 0.08888888888888889,\n                    margin: width * 0.01111111111111111,\n                    borderRadius: 50,\n                    backgroundColor: Colors.darkGray,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    borderColor:\n                      day.getDate() === new Date(selectedDateRedux).getDate()\n                        ? 'black'\n                        : Colors.maroon,\n                    borderWidth:\n                      new Date().getDate() === day.getDate() ||\n                      day.getDate() === new Date(selectedDateRedux).getDate()\n                        ? 5\n                        : 0,\n                  }}\n                >\n                  <Text style={{ color: Colors.white }}>{day.getDate()}</Text>\n                </Pressable>\n              ))}\n              <Pressable\n                style={{ margin: width * 0.01111111111111111 }}\n                onPress={() => {\n                  const d = new Date(selectedDateRedux);\n                  d.setDate(d.getDate() + 7);\n                  dispatch(\n                    selectedDateSlice.actions.setSelectedDate(d.toISOString()),\n                  );\n                }}\n              >\n                <ChevronRight\n                  width={width * 0.08888888888888889}\n                  height={width * 0.08888888888888889}\n                />\n              </Pressable>\n            </View>\n          </View>\n        )}\n      </View>\n      <View\n        style={{\n          height: false ? height : height - width * 0.179,\n          width,\n          alignContent: 'center',\n          alignItems: 'center',\n          backgroundColor: Colors.white,\n        }}\n      >\n        <DayView\n          width={width * 0.95}\n          height={false ? height * 0.757 : height}\n        />\n      </View>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport { RootState } from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\n\nexport default function SelectTimetable({\n  governmentMode,\n  onSelect,\n}: {\n  governmentMode: boolean;\n  onSelect?: (item: timetableStringType) => void;\n}) {\n  const { timetablesListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [loadedTimetables, setLoadedTimetables] = useState<\n    timetableStringType[]\n  >([]);\n  const navigate = useNavigate();\n\n  async function getTimetables() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${timetablesListId}/items?expand=fields`,\n    );\n    if (result.ok) {\n      const dataResult = await result.json();\n      if (\n        dataResult.value.length !== undefined &&\n        dataResult.value.length !== null\n      ) {\n        const newLoadedTimetables: timetableStringType[] = [];\n        for (let index = 0; index < dataResult.value.length; index += 1) {\n          try {\n            newLoadedTimetables.push({\n              name: dataResult.value[index].fields.timetableName,\n              id: dataResult.value[index].fields.timetableId,\n            });\n          } catch (e) {\n            // TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n          }\n        }\n        setLoadedTimetables(newLoadedTimetables);\n        setLoadingState(loadingStateEnum.success);\n      }\n    } else {\n      setLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getTimetables();\n  }, []);\n\n  return (\n    <View>\n      {loadingState === loadingStateEnum.loading ? <Text>Loading</Text> : null}\n      {loadingState === loadingStateEnum.success ? (\n        <View>\n          {loadedTimetables.map(timetable => (\n            <Pressable\n              key={`Timetable_${timetable.id}`}\n              onPress={() => {\n                if (governmentMode) {\n                  navigate(\n                    `/profile/government/calendar/timetable/${timetable.id}`,\n                  );\n                } else if (onSelect !== undefined) {\n                  onSelect(timetable);\n                }\n              }}\n            >\n              <View>\n                <Text>{timetable.name}</Text>\n              </View>\n            </Pressable>\n          ))}\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.failed ? <Text>Failure</Text> : null}\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, ScrollView } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport {\n  getGraphEvents,\n  getTimetable,\n} from '../../Functions/calendar/calendarFunctionsGraph';\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport store, { RootState } from '../../Redux/store';\nimport { loadingStateEnum, semesters } from '../../types';\n\nenum pickSchoolDayMode {\n  schoolYear,\n  schoolDay,\n  schedule,\n  dressCode,\n  semester,\n  dressCodeIncentives,\n}\n\nexport default function SelectSchoolDayData({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const [schoolDayMode, setSchoolDayMode] = useState<pickSchoolDayMode>(\n    pickSchoolDayMode.schoolYear,\n  );\n  const [timetableState, setTimetableState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [timetable, setTimetable] = useState<timetableType | undefined>(\n    undefined,\n  );\n  const { selectedSchoolDayData, selectedSchoolYear } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const dispatch = useDispatch();\n\n  async function loadData(id: string) {\n    setTimetableState(loadingStateEnum.loading);\n    const result = await getTimetable(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.timetable !== undefined\n    ) {\n      setTimetable(result.timetable);\n      setTimetableState(loadingStateEnum.success);\n    } else {\n      setTimetableState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (\n      selectedSchoolYear !== undefined &&\n      timetable === undefined &&\n      selectedSchoolYear.paulyEventData !== undefined\n    ) {\n      loadData(selectedSchoolYear.paulyEventData);\n    }\n  }, [schoolDayMode, selectedSchoolYear]);\n\n  return (\n    <View style={{ width, height }}>\n      {schoolDayMode === pickSchoolDayMode.schoolYear ? (\n        <SchoolYearsSelect\n          onSelect={() => setSchoolDayMode(pickSchoolDayMode.schoolDay)}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.schoolDay ? (\n        <SchoolDaySelect\n          width={width}\n          height={height}\n          timetable={timetable}\n          loadingState={timetableState}\n          onSelect={() => {\n            setSchoolDayMode(pickSchoolDayMode.schedule);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schoolYear);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.schedule &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <ScheduleSelect\n          schedules={timetable.schedules}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: e,\n                dressCode: selectedSchoolDayData.dressCode,\n                semester: selectedSchoolDayData.semester,\n              }),\n            );\n            setSchoolDayMode(pickSchoolDayMode.dressCode);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schoolDay);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.dressCode &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <DressCodeSelect\n          dressCodeData={timetable.dressCode.dressCodeData}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: selectedSchoolDayData.schedule,\n                dressCode: e,\n                semester: selectedSchoolDayData.semester,\n              }),\n            );\n            setSchoolDayMode(pickSchoolDayMode.semester);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schedule);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.semester &&\n      selectedSchoolDayData !== undefined ? (\n        <View>\n          <Pressable\n            onPress={() => {\n              setSchoolDayMode(pickSchoolDayMode.dressCode);\n            }}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setSelectedSchoolDayData({\n                  schoolDay: selectedSchoolDayData.schoolDay,\n                  schedule: selectedSchoolDayData.schedule,\n                  dressCode: selectedSchoolDayData.dressCode,\n                  semester: semesters.semesterOne,\n                }),\n              );\n              setSchoolDayMode(pickSchoolDayMode.dressCodeIncentives);\n            }}\n          >\n            <Text>Semester One</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setSelectedSchoolDayData({\n                  schoolDay: selectedSchoolDayData.schoolDay,\n                  schedule: selectedSchoolDayData.schedule,\n                  dressCode: selectedSchoolDayData.dressCode,\n                  semester: semesters.semesterTwo,\n                }),\n              );\n              setSchoolDayMode(pickSchoolDayMode.dressCodeIncentives);\n            }}\n          >\n            <Text>Semester Two</Text>\n          </Pressable>\n        </View>\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.dressCodeIncentives &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <DressCodeIncentivesSelect\n          dressCodeIncentivesData={timetable.dressCode.dressCodeIncentives}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: selectedSchoolDayData.schedule,\n                dressCode: selectedSchoolDayData.dressCode,\n                semester: selectedSchoolDayData.semester,\n                dressCodeIncentive: e,\n              }),\n            );\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.semester);\n          }}\n        />\n      ) : null}\n    </View>\n  );\n}\n\nfunction SchoolYearsSelect({ onSelect }: { onSelect: () => void }) {\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [currentEventsSchoolYear, setCurrentEventsSchoolYear] = useState<\n    eventType[]\n  >([]);\n  const dispatch = useDispatch();\n\n  async function getData() {\n    const result = await getGraphEvents(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20or%20id%20eq%20'${\n        store.getState().paulyList.eventDataExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20and%20ep/value%20eq%20'schoolYear')`,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.events !== undefined\n    ) {\n      let outputEvents: eventType[] = result.events;\n      let url: string = result.nextLink !== undefined ? result.nextLink : '';\n      let notFound: boolean = result.nextLink !== undefined;\n      while (notFound) {\n        const furtherResult = await getGraphEvents(url);\n        if (\n          furtherResult.result === loadingStateEnum.success &&\n          furtherResult.events !== undefined\n        ) {\n          outputEvents = [...outputEvents, ...furtherResult.events];\n          url =\n            furtherResult.nextLink !== undefined ? furtherResult.nextLink : '';\n          notFound = furtherResult.nextLink !== undefined;\n        } else {\n          notFound = false;\n        }\n      }\n      setCurrentEventsSchoolYear(outputEvents);\n      setLoadingState(loadingStateEnum.success);\n    } else {\n      setLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <View>\n      <ScrollView>\n        {loadingState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {loadingState === loadingStateEnum.success ? (\n              <View>\n                {currentEventsSchoolYear.map(event => (\n                  <Pressable\n                    key={`School_Year_${createUUID()}`}\n                    onPress={() => {\n                      dispatch(\n                        addEventSlice.actions.setSelectedSchoolYear(event),\n                      );\n                      onSelect();\n                    }}\n                  >\n                    <View>\n                      <Text style={{ margin: 10 }}>{event.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction SchoolDaySelect({\n  width,\n  height,\n  timetable,\n  loadingState,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  timetable: timetableType | undefined;\n  loadingState: loadingStateEnum;\n  onSelect: () => void;\n  onBack: () => void;\n}) {\n  const dispatch = useDispatch();\n  return (\n    <View>\n      <Pressable\n        onPress={() => {\n          onBack();\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <ScrollView style={{ width, height }}>\n        {loadingState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <>\n            {loadingState === loadingStateEnum.success &&\n            timetable !== undefined ? (\n              <>\n                {timetable.days.map(day => (\n                  <Pressable\n                    key={`Day_${day.id}`}\n                    onPress={() => {\n                      onSelect();\n                      dispatch(\n                        addEventSlice.actions.setSelectedSchoolDayData({\n                          schoolDay: day,\n                          schedule: {\n                            properName: '',\n                            descriptiveName: '',\n                            periods: [],\n                            id: '',\n                            color: '',\n                          },\n                          dressCode: {\n                            name: '',\n                            description: '',\n                            id: '',\n                          },\n                          semester: semesters.semesterOne,\n                        }),\n                      );\n                    }}\n                  >\n                    <View>\n                      <Text>{day.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction ScheduleSelect({\n  schedules,\n  onSelect,\n}: {\n  schedules: scheduleType[];\n  onSelect: (item: scheduleType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      {schedules.map(schedule => (\n        <Pressable\n          key={`Schedule_${schedule.id}`}\n          onPress={() => {\n            onSelect(schedule);\n          }}\n        >\n          <View>\n            <Text>{schedule.properName}</Text>\n          </View>\n        </Pressable>\n      ))}\n    </View>\n  );\n}\n\nfunction DressCodeSelect({\n  dressCodeData,\n  onSelect,\n  onBack,\n}: {\n  dressCodeData: dressCodeDataType[];\n  onSelect: (item: dressCodeDataType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      <Pressable\n        onPress={() => {\n          onBack();\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      {dressCodeData.map(data => (\n        <Pressable\n          onPress={() => {\n            onSelect(data);\n          }}\n        >\n          <Text>{data.name}</Text>\n        </Pressable>\n      ))}\n    </View>\n  );\n}\n\nfunction DressCodeIncentivesSelect({\n  dressCodeIncentivesData,\n}: {\n  dressCodeIncentivesData: dressCodeIncentiveType[];\n  onSelect: (item: dressCodeIncentiveType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      {dressCodeIncentivesData.map(incentive => (\n        <View>\n          <Text>{incentive.name}</Text>\n        </View>\n      ))}\n      <Text>None</Text>\n    </View>\n  );\n}\n","import { orgWideGroupID } from '../PaulyConfig';\nimport { addEventSlice } from '../Redux/reducers/addEventReducer';\nimport { currentEventsSlice } from '../Redux/reducers/currentEventReducer';\nimport store from '../Redux/store';\nimport { Colors, loadingStateEnum, paulyEventType } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport default async function createEvent(): Promise<undefined> {\n  if (store.getState().addEvent.selectedEventType === paulyEventType.personal) {\n    const data: any = {\n      subject: store.getState().addEvent.eventName,\n      start: {\n        dateTime: store.getState().addEvent.startDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n      end: {\n        dateTime: store.getState().addEvent.endDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n    };\n    if (store.getState().addEvent.allDay) {\n      data.start.dateTime = `${\n        store\n          .getState()\n          .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.end.dateTime = `${\n        store\n          .getState()\n          .addEvent.endDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.isAllDay = true;\n    }\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/me/events`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const dataOut = await result.json();\n      const resultEvent: eventType = {\n        id: dataOut.id,\n        name: dataOut.subject,\n        startTime: dataOut.start.dateTime,\n        endTime: dataOut.end.dateTime,\n        eventColor: Colors.white,\n        microsoftEvent: true,\n        microsoftReference: `https://graph.microsoft.com/v1.0/me/events/${dataOut.id}`,\n        allDay: false,\n      };\n      store.dispatch(currentEventsSlice.actions.pushEvent(resultEvent));\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.success),\n      );\n    } else {\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    const data: any = {\n      subject: store.getState().addEvent.eventName,\n      start: {\n        dateTime: store.getState().addEvent.startDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n      end: {\n        dateTime: store.getState().addEvent.endDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n    };\n    const schoolDay = store.getState().addEvent.selectedSchoolDayData;\n    const schoolYearId = store.getState().addEvent.selectedSchoolYear?.id;\n    if (\n      store.getState().addEvent.selectedEventType === paulyEventType.schoolDay\n    ) {\n      if (schoolDay !== undefined) {\n        if (store.getState().addEvent.selectedSchoolDayData === undefined) {\n          store.dispatch(\n            addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n          );\n          return;\n        }\n        data.start.dateTime = `${\n          store\n            .getState()\n            .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n            .split(/[T ]/i, 1)[0]\n        }T00:00:00.0000000`;\n        const newEndDate = new Date(store.getState().addEvent.startDate);\n        newEndDate.setDate(\n          new Date(store.getState().addEvent.startDate).getDate() + 1,\n        );\n        data.end.dateTime = `${\n          newEndDate\n            .toISOString()\n            .replace(/.\\d+Z$/g, 'Z')\n            .split(/[T ]/i, 1)[0]\n        }T00:00:00.0000000`;\n        data.isAllDay = true;\n        data.subject = `${schoolDay.schoolDay.name} ${schoolDay.schedule.properName}`;\n      } else {\n        store.dispatch(\n          addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n        );\n      }\n    } else if (store.getState().addEvent.allDay) {\n      data.start.dateTime = `${\n        store\n          .getState()\n          .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.end.dateTime = `${\n        store\n          .getState()\n          .addEvent.endDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.isAllDay = true;\n    }\n    if (\n      store.getState().addEvent.selectedEventType === paulyEventType.schoolYear\n    ) {\n      data.singleValueExtendedProperties = [\n        {\n          id: store.getState().paulyList.eventTypeExtensionId,\n          value: 'schoolYear',\n        },\n        {\n          id: store.getState().paulyList.eventDataExtensionId,\n          value: store.getState().addEvent.selectedTimetable.id,\n        },\n      ];\n    } else if (\n      store.getState().addEvent.selectedEventType ===\n        paulyEventType.schoolDay &&\n      schoolDay !== undefined &&\n      schoolYearId !== undefined\n    ) {\n      const selectedSchoolDayDataCompressed: schoolDayDataCompressedType = {\n        schoolDayId: schoolDay.schoolDay.id,\n        scheduleId: schoolDay.schedule.id,\n        dressCodeId: schoolDay.dressCode.id,\n        semester: schoolDay.semester,\n        dressCodeIncentiveId:\n          schoolDay.dressCodeIncentive?.id === undefined\n            ? ''\n            : schoolDay.dressCodeIncentive?.id,\n        schoolYearEventId: schoolYearId,\n      };\n      data.singleValueExtendedProperties = [\n        {\n          id: store.getState().paulyList.eventTypeExtensionId,\n          value: 'schoolDay',\n        },\n        {\n          id: store.getState().paulyList.eventDataExtensionId,\n          value: JSON.stringify(selectedSchoolDayDataCompressed),\n        },\n      ];\n    }\n    if (store.getState().addEvent.recurringEvent) {\n    }\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const dataOut = await result.json();\n      const resultEvent: eventType = {\n        id: dataOut.id,\n        name: dataOut.subject,\n        startTime: dataOut.start.dateTime,\n        endTime: dataOut.end.dateTime,\n        eventColor: Colors.white,\n        paulyEventType:\n          store.getState().addEvent.selectedEventType ===\n          paulyEventType.schoolDay\n            ? 'schoolDay'\n            : store.getState().addEvent.selectedEventType ===\n              paulyEventType.schoolYear\n            ? 'schoolYear'\n            : undefined,\n        paulyEventData:\n          store.getState().addEvent.selectedEventType ===\n          paulyEventType.schoolDay\n            ? JSON.stringify(store.getState().addEvent.selectedSchoolDayData)\n            : store.getState().addEvent.selectedEventType ===\n              paulyEventType.schoolYear\n            ? store.getState().addEvent.selectedTimetable.id\n            : undefined,\n        microsoftEvent: true,\n        microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${dataOut.id}`,\n        allDay: false,\n      };\n      store.dispatch(currentEventsSlice.actions.pushEvent(resultEvent));\n      store.dispatch(addEventSlice.actions.setSelectedSchoolDayData(undefined));\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.success),\n      );\n    } else {\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n      );\n    }\n  }\n}\n","/*\n  Andrew Mainella\n  October 18 2023\n  Pauly\n  AddEvent.tsx\n*/\n\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Pressable, View, Text, Switch, TextInput } from 'react-native';\nimport { TimePickerModal, DatePickerModal } from 'react-native-paper-dates';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport { currentEventsSlice } from '../../Redux/reducers/currentEventReducer';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport SelectTimetable from './SelectTimetable';\nimport SelectSchoolDayData from './SelectSchoolDayData';\nimport { Colors, loadingStateEnum, paulyEventType } from '../../types';\nimport PickerWrapper from '../../UI/Pickers/Picker';\nimport { CalendarIcon, CloseIcon, TimeIcon } from '../../UI/Icons/Icons';\nimport updateEvent from '../../Functions/updateEvent';\nimport { getTextState } from '../../Functions/ultility/createUUID';\n\nconst BukhariScript = require('../../../assets/fonts/BukhariScript.ttf');\n\nfunction GovernmentCalendarOptions({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const { selectedEventType, selectedTimetable, selectedSchoolYear } =\n    useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <View>\n        <PickerWrapper\n          selectedIndex={selectedEventType}\n          onSetSelectedIndex={e => {\n            dispatch(addEventSlice.actions.setSelectedEventType(e));\n          }}\n          width={width}\n          height={height * 0.05}\n        >\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Personal\">\n            Personal\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Regular\">\n            Regular\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Day\">\n            School Day{' '}\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Year\">\n            School Year\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Council\">\n            Student Council\n          </Text>\n        </PickerWrapper>\n      </View>\n      {selectedEventType === paulyEventType.schoolDay ? (\n        <View style={{ width, height: 100 }}>\n          <Text>\n            Selected School Year:{' '}\n            {selectedSchoolYear ? selectedSchoolYear.name : 'None selected'}\n          </Text>\n          <SelectSchoolDayData width={width} height={100} />\n        </View>\n      ) : null}\n      {selectedEventType === paulyEventType.schoolYear ? (\n        <View>\n          <Text>\n            Selected Timetable:{' '}\n            {selectedTimetable ? selectedTimetable.name : 'Unselected'}\n          </Text>\n          <SelectTimetable\n            governmentMode={false}\n            onSelect={e => {\n              dispatch(addEventSlice.actions.setSelectedTimetable(e));\n            }}\n          />\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nfunction DateAndTimeSection({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const {\n    selectedEventType,\n    eventName,\n    allDay,\n    startDate,\n    endDate,\n    isPickingStartDate,\n    isPickingEndDate,\n  } = useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n  const [endDatePickerVisable, setEndDatePickerVisable] =\n    useState<boolean>(false);\n  const [startDatePickerVisable, setStartDatePickerVisable] =\n    useState<boolean>(false);\n  return (\n    <View>\n      <DatePickerModal\n        locale=\"en\"\n        mode=\"single\"\n        label=\"Select Date\"\n        visible={isPickingStartDate}\n        onDismiss={() =>\n          dispatch(addEventSlice.actions.setIsPickingStartDate(false))\n        }\n        date={new Date(startDate)}\n        onConfirm={e => {\n          if (e.date !== undefined) {\n            const oldDate = new Date(startDate);\n            dispatch(\n              addEventSlice.actions.setStartDate(\n                new Date(\n                  e.date.getFullYear(),\n                  e.date.getMonth(),\n                  e.date.getDate(),\n                  oldDate.getHours(),\n                  oldDate.getMinutes(),\n                ).toISOString(),\n              ),\n            );\n          }\n          dispatch(addEventSlice.actions.setIsPickingStartDate(false));\n        }}\n      />\n      <DatePickerModal\n        locale=\"\"\n        mode=\"single\"\n        label=\"Select Date\"\n        visible={isPickingEndDate}\n        onDismiss={() =>\n          dispatch(addEventSlice.actions.setIsPickingEndDate(false))\n        }\n        date={new Date(endDate)}\n        onConfirm={e => {\n          if (e.date !== undefined) {\n            const oldDate = new Date(endDate);\n            const newDate = new Date(\n              e.date.getFullYear(),\n              e.date.getMonth(),\n              e.date.getDate(),\n              oldDate.getHours(),\n              oldDate.getMinutes(),\n            ).toISOString();\n            dispatch(addEventSlice.actions.setEndDate(newDate));\n          }\n          dispatch(addEventSlice.actions.setIsPickingEndDate(false));\n        }}\n      />\n      {selectedEventType === paulyEventType.schoolDay ? null : (\n        <View>\n          <TextInput\n            value={eventName}\n            onChangeText={e => {\n              dispatch(addEventSlice.actions.setEventName(e));\n            }}\n            placeholder=\"Event Name\"\n            style={{\n              width: width * 0.8,\n              height: height * 0.05,\n              borderBottomColor: '#000000',\n              borderBottomWidth: 1,\n              marginLeft: width * 0.01,\n            }}\n          />\n          {selectedEventType !== paulyEventType.schoolYear ? (\n            <View\n              style={{ flexDirection: 'row', marginTop: 7, marginBottom: 7 }}\n            >\n              <Text>All Day</Text>\n              <Switch\n                trackColor={{ false: '#767577', true: '#81b0ff' }}\n                thumbColor={allDay ? '#f5dd4b' : '#f4f3f4'}\n                ios_backgroundColor=\"#3e3e3e\"\n                onValueChange={e => {\n                  dispatch(addEventSlice.actions.setAllDay(e));\n                }}\n                value={allDay}\n                style={{ marginLeft: 10 }}\n              />\n            </View>\n          ) : null}\n        </View>\n      )}\n      <Text>\n        {selectedEventType === paulyEventType.schoolDay ? '' : 'Start '}Date\n      </Text>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={{ flexDirection: 'row', margin: 10 }}>\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsPickingStartDate(true));\n            }}\n          >\n            <Text>\n              {new Date(startDate).toLocaleString('en-us', { month: 'long' })}{' '}\n              {new Date(startDate).getDate()}{' '}\n              {new Date(startDate).getFullYear()}{' '}\n            </Text>\n          </Pressable>\n          {!allDay ? (\n            <Pressable\n              onPress={() => {\n                setStartDatePickerVisable(true);\n              }}\n            >\n              <Text>\n                {new Date(startDate).getHours() % 12 || 12}:\n                {new Date(startDate).getMinutes().toString().length === 1\n                  ? `0${new Date(startDate).getMinutes()}`\n                  : new Date(startDate).getMinutes()}{' '}\n                {new Date(startDate).getHours() >= 12 ? 'pm' : 'am'}\n              </Text>\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsPickingStartDate(true));\n            }}\n          >\n            <CalendarIcon width={24} height={15} />\n          </Pressable>\n        </View>\n        {allDay ? null : (\n          <View style={{ margin: 5 }}>\n            <Pressable\n              onPress={() => {\n                setStartDatePickerVisable(true);\n              }}\n              style={{\n                height: 26.4,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <TimeIcon width={15} height={15} />\n            </Pressable>\n            <TimePickerModal\n              hours={new Date(startDate).getHours()}\n              minutes={new Date(startDate).getMinutes()}\n              visible={startDatePickerVisable}\n              onDismiss={() => setStartDatePickerVisable(false)}\n              onConfirm={e => {\n                const newDate = new Date(startDate);\n                newDate.setHours(e.hours);\n                newDate.setMinutes(e.minutes);\n                dispatch(\n                  addEventSlice.actions.setStartDate(newDate.toISOString()),\n                );\n                setStartDatePickerVisable(false);\n              }}\n            />\n          </View>\n        )}\n      </View>\n      {selectedEventType === paulyEventType.schoolDay ? null : (\n        <View>\n          <Text>End Date</Text>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flexDirection: 'row', margin: 10 }}>\n              <Pressable\n                onPress={() => {\n                  dispatch(addEventSlice.actions.setIsPickingEndDate(true));\n                }}\n              >\n                <Text>\n                  {new Date(endDate).toLocaleString('en-us', { month: 'long' })}{' '}\n                  {new Date(endDate).getDate()}{' '}\n                  {new Date(endDate).getFullYear()}{' '}\n                </Text>\n              </Pressable>\n              {!allDay ? (\n                <Pressable\n                  onPress={() => {\n                    setEndDatePickerVisable(true);\n                  }}\n                >\n                  <Text>\n                    {new Date(endDate).getHours() % 12 || 12}:\n                    {new Date(endDate).getMinutes().toString().length === 1\n                      ? `0${new Date(endDate).getMinutes()}`\n                      : new Date(endDate).getMinutes()}{' '}\n                    {new Date(endDate).getHours() >= 12 ? 'pm' : 'am'}\n                  </Text>\n                </Pressable>\n              ) : null}\n              <Pressable\n                onPress={() => {\n                  dispatch(addEventSlice.actions.setIsPickingEndDate(true));\n                }}\n              >\n                <CalendarIcon width={24} height={15} />\n              </Pressable>\n            </View>\n            {allDay ? null : (\n              <View style={{ margin: 5 }}>\n                <Pressable\n                  onPress={() => {\n                    setEndDatePickerVisable(true);\n                  }}\n                  style={{\n                    height: 26.4,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <TimeIcon width={15} height={15} />\n                </Pressable>\n                <TimePickerModal\n                  hours={new Date(endDate).getHours()}\n                  minutes={new Date(endDate).getMinutes()}\n                  visible={endDatePickerVisable}\n                  onDismiss={() => setEndDatePickerVisable(false)}\n                  onConfirm={e => {\n                    const newDate = new Date(endDate);\n                    newDate.setHours(e.hours);\n                    newDate.setMinutes(e.minutes);\n                    dispatch(\n                      addEventSlice.actions.setEndDate(newDate.toISOString()),\n                    );\n                    setEndDatePickerVisable(false);\n                  }}\n                />\n              </View>\n            )}\n          </View>\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default function AddEvent({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { selectedEventType, isEditing, selectedEvent, createEventState } =\n    useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (\n      selectedEventType === paulyEventType.schoolDay ||\n      selectedEventType === paulyEventType.schoolYear\n    ) {\n      dispatch(addEventSlice.actions.setAllDay(true));\n    }\n  }, [dispatch, selectedEventType]);\n\n  async function deleteEvent() {\n    if (\n      selectedEvent !== undefined &&\n      selectedEvent.microsoftEvent &&\n      selectedEvent.microsoftReference !== undefined\n    ) {\n      const deleteEventResult = await callMsGraph(\n        selectedEvent.microsoftReference,\n        'DELETE',\n      );\n      if (deleteEventResult.ok) {\n        const index = currentEvents.findIndex(e => {\n          return e.id === selectedEvent.id;\n        });\n        dispatch(currentEventsSlice.actions.removeCurrentEvent(index));\n        dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n      } else {\n        // TO DO throw error\n      }\n    }\n  }\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript,\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        backgroundColor: Colors.white,\n        width: width + 30,\n        height,\n        borderRadius: 5,\n        borderWidth: 5,\n      }}\n    >\n      <View style={{ margin: 10, width }}>\n        <Pressable\n          onPress={() => {\n            dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n            dispatch(\n              addEventSlice.actions.setCreateEventState(\n                loadingStateEnum.notStarted,\n              ),\n            );\n          }}\n        >\n          <CloseIcon width={10} height={10} />\n        </Pressable>\n        <Text style={{ fontFamily: 'BukhariScript' }}>Add Event</Text>\n        <DateAndTimeSection width={width} height={height} />\n        {isGovernmentMode ? (\n          <GovernmentCalendarOptions width={width} height={height} />\n        ) : null}\n        <View\n          style={{\n            width,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setCreateEventState(\n                  loadingStateEnum.loading,\n                ),\n              );\n              updateEvent();\n            }}\n            style={{\n              width: 100,\n              height: 50,\n              backgroundColor: '#00a4db',\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 15,\n              shadowColor: '#000',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 2,\n            }}\n          >\n            <Text style={{ zIndex: -1 }}>\n              {getTextState(createEventState, {\n                notStarted: isEditing ? 'Save' : 'Create',\n              })}\n            </Text>\n          </Pressable>\n        </View>\n        {isEditing ? (\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n              deleteEvent();\n            }}\n            style={{\n              width: 100,\n              height: 50,\n              backgroundColor: '#00a4db',\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 15,\n              shadowColor: '#000',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 2,\n            }}\n          >\n            <Text style={{ zIndex: -1 }}>Delete</Text>\n          </Pressable>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Animated, Pressable } from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addEventSlice } from '../Redux/reducers/addEventReducer';\nimport { RootState } from '../Redux/store';\nimport { Colors } from '../types';\n\ninterface PickerWrapperProps {\n  width: number;\n  height: number;\n}\n\nenum calendarMode {\n  month,\n  week,\n  day,\n}\n\nexport default function CalendarTypePicker({\n  width,\n  height,\n}: PickerWrapperProps) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [compoentWidth, setComponentWidth] = useState(width / 3);\n  const { selectedCalendarMode } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const dispatch = useDispatch();\n\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth + compoentWidth * 0.005,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedCalendarMode * compoentWidth + compoentWidth * 0.005);\n  }, []);\n\n  useEffect(() => {\n    setComponentWidth(width / 3);\n    pan.setValue(selectedCalendarMode * compoentWidth + compoentWidth * 0.005);\n  }, [width]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        height,\n        width,\n        backgroundColor: '#7d7d7d',\n        borderRadius: 20,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.month),\n          );\n          fadeIn(0);\n        }}\n        style={{\n          position: 'absolute',\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Month\n        </Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.week),\n          );\n          fadeIn(1);\n        }}\n        style={{\n          position: 'absolute',\n          transform: [{ translateX: 1 * compoentWidth }],\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Week\n        </Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.day),\n          );\n          fadeIn(2);\n        }}\n        style={{\n          position: 'absolute',\n          transform: [{ translateX: 2 * compoentWidth }],\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Day\n        </Text>\n      </Pressable>\n      <Animated.View style={{ transform: [{ translateX: pan }], zIndex: -1 }}>\n        <View\n          style={{\n            height: height * 0.95,\n            width: compoentWidth - compoentWidth * 0.01,\n            backgroundColor: Colors.white,\n            top: height * 0.025,\n            borderRadius: 20,\n            position: 'absolute',\n            zIndex: -1,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// Pauly\n// October 2 2023\n\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport { currentEventsSlice } from '../../Redux/reducers/currentEventReducer';\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport { getGraphEvents } from './calendarFunctionsGraph';\n\nexport default async function getEvents() {\n  // date the user picks\n  const selectedDate = new Date(store.getState().selectedDate);\n  // Start of month that the selected date is in\n  const startDate = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth(),\n    1,\n  );\n  // End of month that the selected date is in\n  const endDate = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth() + 1,\n    1,\n  );\n\n  // Personal Calendar\n  let outputEvents: eventType[] = [];\n  // This code is pulled from add events School Years Select\n  let nextUrl: string = `https://graph.microsoft.com/v1.0/me/calendarView?startDateTime=${startDate.toISOString()}&endDateTime=${endDate.toISOString()}`;\n  while (nextUrl !== '') {\n    const furtherResult = await getGraphEvents(\n      nextUrl,\n      'https://graph.microsoft.com/v1.0/me/events/',\n    );\n    if (\n      furtherResult.result === loadingStateEnum.success &&\n      furtherResult.events !== undefined\n    ) {\n      outputEvents = [...outputEvents, ...furtherResult.events];\n      if (furtherResult.nextLink === undefined) {\n        nextUrl = '';\n        break;\n      } else {\n        nextUrl = furtherResult.nextLink;\n      }\n    } else {\n      nextUrl = '';\n      break;\n    }\n  }\n\n  // OrgWideEvents\n  // This code is pulled from add events School Years Select\n  let url: string = `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$filter=start/dateTime%20ge%20'${startDate.toISOString()}'%20and%20end/dateTime%20le%20'${endDate.toISOString()}'`;\n  while (url !== '') {\n    const furtherResult = await getGraphEvents(\n      url,\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/`,\n    );\n    if (\n      furtherResult.result === loadingStateEnum.success &&\n      furtherResult.events !== undefined\n    ) {\n      outputEvents = [...outputEvents, ...furtherResult.events];\n      url = furtherResult.nextLink !== undefined ? furtherResult.nextLink : '';\n    } else {\n      url = '';\n    }\n  }\n\n  store.dispatch(currentEventsSlice.actions.setCurrentEvents(outputEvents));\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  ScrollView,\n  useWindowDimensions,\n  FlatList,\n  ListRenderItemInfo,\n} from 'react-native';\nimport React, { useCallback, useEffect } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findFirstDayinMonth } from '../../Functions/calendar/calendarFunctions';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport DayView from './DayView';\nimport Week from './Week';\nimport AddEvent from './AddEvent';\nimport CalendarTypePicker from '../../UI/CalendarTypePicker';\nimport { AddIcon, ChevronLeft, ChevronRight } from '../../UI/Icons/Icons';\nimport { RootState } from '../../Redux/store';\nimport { selectedDateSlice } from '../../Redux/reducers/selectedDateReducer';\nimport { Colors, calendarMode } from '../../types';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport BackButton from '../../UI/BackButton';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport { monthDataSlice } from '../../Redux/reducers/monthDataReducer';\nimport { getClasses } from '../../Functions/classesFunctions';\nimport getEvents from '../../Functions/calendar/getEvents';\n\nfunction getBackgroundColor(selectedDate: string, dayData: number): string {\n  if (dayData === new Date(selectedDate).getDate()) {\n    return Colors.lightGray;\n  }\n  if (\n    dayData === new Date().getDate() &&\n    new Date(selectedDate).getMonth() === new Date().getMonth() &&\n    new Date(selectedDate).getFullYear() === new Date().getFullYear()\n  ) {\n    return Colors.darkGray;\n  }\n  return Colors.white;\n}\n\nfunction getTextBackgroundColor(selectedDate: string, dayData: number): string {\n  if (\n    dayData === new Date().getDate() &&\n    new Date(selectedDate).getMonth() === new Date().getMonth() &&\n    new Date(selectedDate).getFullYear() === new Date().getFullYear() &&\n    new Date(selectedDate).getDate() !== dayData\n  ) {\n    return Colors.white;\n  }\n  return Colors.black;\n}\n\nfunction isCalendarTextColor(selectedDate: string, day: number): boolean {\n  const date = new Date(selectedDate);\n  date.setDate(day);\n  if (new Date().toDateString() === date.toDateString()) {\n    return true;\n  }\n  return false;\n}\n\nfunction CalendarCardView({\n  value,\n  width,\n  height,\n  calendarWidth,\n}: {\n  value: ListRenderItemInfo<monthDataType>;\n  width: number;\n  height: number;\n  calendarWidth: number;\n}) {\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const dispatch = useDispatch();\n  function pressCalendar() {\n    const d = new Date();\n    d.setFullYear(\n      new Date(selectedDate).getFullYear(),\n      new Date(selectedDate).getMonth(),\n      value.item.dayData,\n    );\n    dispatch(selectedDateSlice.actions.setSelectedDate(d.toISOString()));\n  }\n  if (calendarWidth <= 519 && value.item.showing) {\n    return (\n      <Pressable\n        style={{\n          width,\n          height,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderRadius: height / 2,\n          backgroundColor: getBackgroundColor(selectedDate, value.item.dayData),\n        }}\n        onPress={() => pressCalendar()}\n      >\n        <Text\n          style={{\n            color: getTextBackgroundColor(selectedDate, value.item.dayData),\n          }}\n        >\n          {value.item.dayData}\n        </Text>\n        {value.item.events.length >= 1 ? (\n          <View\n            style={{\n              backgroundColor: 'black',\n              borderRadius: 50,\n              width: width < height ? width * 0.25 : height * 0.25,\n              height: width < height ? width * 0.25 : height * 0.25,\n            }}\n          />\n        ) : (\n          <View\n            style={{\n              backgroundColor: 'transparent',\n              borderRadius: 50,\n              width: width < height ? width * 0.25 : height * 0.25,\n              height: width < height ? width * 0.25 : height * 0.25,\n            }}\n          />\n        )}\n      </Pressable>\n    );\n  }\n  if (calendarWidth <= 519) {\n    return <View style={{ width, height }} />;\n  }\n  if (value.item.showing) {\n    return (\n      <Pressable\n        style={{\n          width,\n          height,\n          borderWidth: 1,\n          borderTopWidth: value.index < 7 ? 2 : 1,\n          borderColor: Colors.lightGray,\n          padding: 2,\n        }}\n        onPress={() => {\n          pressCalendar();\n          dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n          const startDate = new Date(selectedDate);\n          startDate.setDate(value.item.dayData);\n          const endDate = new Date(selectedDate);\n          endDate.setDate(value.item.dayData);\n          endDate.setHours(endDate.getHours() + 1);\n          dispatch(addEventSlice.actions.setStartDate(startDate));\n          dispatch(addEventSlice.actions.setEndDate(endDate));\n        }}\n      >\n        <View\n          style={{\n            borderRadius: 50,\n            width: 16,\n            height: 16,\n            backgroundColor: isCalendarTextColor(\n              selectedDate,\n              value.item.dayData,\n            )\n              ? 'red'\n              : 'transparent',\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Text\n            style={{\n              color: isCalendarTextColor(selectedDate, value.item.dayData)\n                ? Colors.white\n                : Colors.black,\n              fontWeight: isCalendarTextColor(selectedDate, value.item.dayData)\n                ? 'bold'\n                : 'normal',\n            }}\n          >\n            {value.item.dayData}\n          </Text>\n        </View>\n        <ScrollView style={{ width, height: height * 0.8 }}>\n          {value.item.events.map((event: eventType) => (\n            <Pressable\n              key={`Calendar_Event_${event.id}`}\n              onPress={() => {\n                dispatch(addEventSlice.actions.setIsEditing(true));\n                dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n                dispatch(addEventSlice.actions.setSelectedEvent(event));\n              }}\n            >\n              <Text style={{ fontSize: 10 }}>{event.name}</Text>\n            </Pressable>\n          ))}\n        </ScrollView>\n      </Pressable>\n    );\n  }\n  return (\n    <View\n      style={{\n        width,\n        height,\n        borderWidth: 1,\n        borderTopWidth: value.index < 7 ? 2 : 1,\n        borderColor: Colors.lightGray,\n      }}\n    />\n  );\n}\n\nfunction MonthView({ width, height }: { width: number; height: number }) {\n  const daysInWeek: { DOW: string; id: string }[] = [\n    { DOW: 'Sun', id: createUUID() },\n    { DOW: 'Mon', id: createUUID() },\n    { DOW: 'Tue', id: createUUID() },\n    { DOW: 'Wen', id: createUUID() },\n    { DOW: 'Thu', id: createUUID() },\n    { DOW: 'Fri', id: createUUID() },\n    { DOW: 'Sat', id: createUUID() },\n  ];\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const selectedDate: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  const monthData = useSelector((state: RootState) => state.monthData);\n  const { fontScale } = useWindowDimensions();\n\n  const dispatch = useDispatch();\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  function getMonthData(selectedDate: Date) {\n    // Check if this month\n    const lastDay = new Date(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth() + 1,\n      0,\n    );\n    const firstDayWeek = findFirstDayinMonth(selectedDate);\n    const monthDataResult: monthDataType[] = [];\n    for (let index = 0; index < 42; index += 1) {\n      if (index >= firstDayWeek && index - firstDayWeek < lastDay.getDate()) {\n        // In the current month\n        const events: eventType[] = []; // The result events of that day\n\n        // Check is the current date\n        const checkStart: Date = new Date(\n          selectedDate.getFullYear(),\n          selectedDate.getMonth(),\n          index - firstDayWeek + 1,\n          0,\n          0,\n        );\n        const checkEnd: Date = new Date(\n          selectedDate.getFullYear(),\n          selectedDate.getMonth(),\n          index - firstDayWeek + 2,\n          0,\n          0,\n        );\n        for (\n          let indexEvent = 0;\n          indexEvent < currentEvents.length;\n          indexEvent += 1\n        ) {\n          const event: eventType = currentEvents[indexEvent]; // Event to be checked\n\n          const startTimeDate = new Date(event.startTime); // String to date\n          const endTimeDate = new Date(event.endTime); // String to date\n\n          // First check if starts before date and ends after or on day\n          if (startTimeDate <= checkStart && endTimeDate > checkStart) {\n            events.push(event);\n          } else if (startTimeDate > checkStart && startTimeDate < checkEnd) {\n            // Second check if starts on day\n            events.push(event);\n          }\n        }\n        monthDataResult.push({\n          showing: true,\n          dayData: index - firstDayWeek + 1,\n          id: createUUID(),\n          events,\n        });\n      } else {\n        monthDataResult.push({\n          showing: false,\n          dayData: 0,\n          id: createUUID(),\n          events: [],\n        });\n      }\n    }\n    dispatch(monthDataSlice.actions.setMonthData(monthDataResult));\n  }\n\n  useEffect(() => {\n    getMonthData(new Date(selectedDate));\n  }, [selectedDate, currentEvents]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View\n        style={{\n          height: (height - 20) / 7,\n          width,\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}\n        key=\"Calendar_Header\"\n      >\n        <View\n          style={{\n            flexDirection: 'row',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            width: width * 0.9,\n          }}\n        >\n          <View\n            style={{\n              width: width * 0.9 * 0.6,\n              flexDirection: 'row',\n              marginRight: 'auto',\n            }}\n          >\n            <Text\n              numberOfLines={1}\n              adjustsFontSizeToFit\n              style={{ fontSize: 30 }}\n            >\n              {new Date(selectedDate).toLocaleString('en-us', {\n                month: 'long',\n              })}{' '}\n              {new Date(selectedDate).getFullYear()}\n            </Text>\n          </View>\n          {new Date(selectedDate).toDateString() !==\n          new Date().toDateString() ? (\n            <Pressable\n              style={{\n                width: width * 0.9 * 0.2,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n              onPress={() => {\n                dispatch(\n                  selectedDateSlice.actions.setSelectedDate(\n                    new Date().toISOString(),\n                  ),\n                );\n              }}\n            >\n              <Text style={{ color: 'black', fontSize: 12 / fontScale }}>\n                Today\n              </Text>\n            </Pressable>\n          ) : (\n            <View style={{ width: width * 0.9 * 0.2 }} />\n          )}\n          {/* This is left chevron */}\n          <Pressable\n            onPress={() => {\n              const d = new Date();\n              d.setFullYear(\n                new Date(selectedDate).getMonth() === 1\n                  ? new Date(selectedDate).getFullYear() - 1\n                  : new Date(selectedDate).getFullYear(),\n                new Date(selectedDate).getMonth() === 1\n                  ? 12\n                  : new Date(selectedDate).getMonth() - 1,\n                new Date(selectedDate).getDay(),\n              );\n              dispatch(\n                selectedDateSlice.actions.setSelectedDate(d.toISOString()),\n              );\n            }}\n            style={{ marginTop: 'auto', marginBottom: 'auto' }}\n          >\n            <ChevronLeft width={14} height={14} />\n          </Pressable>\n          {/* This is right chevron */}\n          <Pressable\n            onPress={() => {\n              const d = new Date();\n              d.setFullYear(\n                new Date(selectedDate).getMonth() === 12\n                  ? new Date(selectedDate).getFullYear() + 1\n                  : new Date(selectedDate).getFullYear(),\n                new Date(selectedDate).getMonth() === 12\n                  ? 1\n                  : new Date(selectedDate).getMonth() + 1,\n                new Date(selectedDate).getDay(),\n              );\n              dispatch(\n                selectedDateSlice.actions.setSelectedDate(d.toISOString()),\n              );\n            }}\n            style={{ marginTop: 'auto', marginBottom: 'auto' }}\n          >\n            <ChevronRight width={14} height={14} />\n          </Pressable>\n        </View>\n      </View>\n      <View style={{ width }} key=\"Calendar_Body\">\n        <View style={{ flexDirection: 'row' }}>\n          {daysInWeek.map(DOW => (\n            <View\n              key={`DOW_${DOW.id})}`}\n              style={{\n                width: width / 7,\n                height: 20,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Text style={{ color: 'black' }} selectable={false}>\n                {DOW.DOW}\n              </Text>\n            </View>\n          ))}\n        </View>\n        <FlatList\n          data={monthData}\n          renderItem={value => (\n            <CalendarCardView\n              width={width / 7}\n              height={(height - 20) / 7}\n              value={value}\n              calendarWidth={width}\n              key={`CalendarButton_${value.item.id}`}\n            />\n          )}\n          numColumns={7}\n          scrollEnabled={false}\n        />\n      </View>\n    </>\n  );\n}\n\nfunction TopView({ width, height }: { width: number; height: number }) {\n  const dispatch = useDispatch();\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        height,\n        width,\n      }}\n    >\n      <View\n        style={{\n          width:\n            width * 0.45 -\n            (width * 0.1 < height ? width * 0.15 : height + width * 0.025),\n          height,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={1}\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: currentBreakPoint === 0 ? height * 0.35 : height * 0.7,\n            width: width * 0.4,\n            height: currentBreakPoint === 0 ? height * 0.5 : height * 0.9,\n            color: Colors.white,\n            textAlign: 'center',\n            verticalAlign: 'middle',\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          Calendar\n        </Text>\n      </View>\n      <View style={{ width: width * 0.55 }}>\n        <View style={{ marginLeft: width * 0.05 }}>\n          <CalendarTypePicker\n            width={width * 0.5}\n            height={width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6}\n          />\n        </View>\n      </View>\n      <View\n        style={{ width: width * 0.1 < height * 0.6 ? width * 0.15 : height }}\n      >\n        <Pressable\n          onPress={() => {\n            dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n            dispatch(addEventSlice.actions.setIsEditing(false));\n            dispatch(addEventSlice.actions.setSelectedEvent(undefined));\n          }}\n          style={{\n            height: width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6,\n            width: width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            borderRadius: 50,\n            backgroundColor: '#7d7d7d',\n            shadowColor: '#000',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 1,\n            marginLeft: width * 0.025,\n            marginRight: width * 0.025,\n          }}\n        >\n          <AddIcon\n            width={width * 0.1 < height * 0.6 ? width * 0.05 : height * 0.4}\n            height={width * 0.1 < height * 0.6 ? width * 0.05 : height * 0.4}\n          />\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction MonthViewMain({ width, height }: { width: number; height: number }) {\n  const monthData = useSelector((state: RootState) => state.monthData);\n  const selectedDate: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  return (\n    <>\n      {/* Chosing between large mode with each day having expanded calendars and reduced mode with list of events on each day. */}\n      {width <= 519 ? (\n        <ScrollView\n          style={{\n            backgroundColor: Colors.white,\n            height,\n            width,\n          }}\n        >\n          <MonthView width={width} height={height * 0.8} />\n          {new Date(selectedDate).getDate() <= monthData.length ? (\n            <>\n              {monthData[new Date(selectedDate).getDate() - 1].events.map(\n                event => (\n                  <View key={event.id}>\n                    <Text>{event.name}</Text>\n                  </View>\n                ),\n              )}\n            </>\n          ) : null}\n        </ScrollView>\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.white,\n            height,\n            width,\n          }}\n        >\n          <MonthView width={width} height={height} />\n        </View>\n      )}\n    </>\n  );\n}\n\nexport default function Calendar() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { selectedCalendarMode, isShowingAddDate } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, [dispatch]);\n\n  // This is the main (only) process that updates the events\n  // In the month view month data is calculate but the events come from this hook and the month view is a decendant of this view.\n  useEffect(() => {\n    getEvents();\n    getClasses();\n  }, [selectedDate]);\n\n  // Fonts\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View>\n      <View style={{ height: height * 0.1, backgroundColor: Colors.darkGray }}>\n        {currentBreakPoint >= 1 ? null : (\n          <BackButton to=\"/\" style={{ zIndex: 100 }} />\n        )}\n        <TopView width={width} height={height * 0.1} />\n      </View>\n      <View style={{ height: height * 0.9 }}>\n        {selectedCalendarMode === calendarMode.month ? (\n          <View\n            style={{\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              backgroundColor: Colors.white,\n            }}\n          >\n            <MonthViewMain width={width} height={height * 0.9} />\n          </View>\n        ) : null}\n        {selectedCalendarMode === calendarMode.week ? (\n          <Week width={width * 1.0} height={height * 0.9} />\n        ) : null}\n        {selectedCalendarMode === calendarMode.day ? (\n          <View\n            style={{\n              width,\n              height: height * 0.9,\n              alignItems: 'center',\n              alignContent: 'center',\n              justifyContent: 'center',\n              backgroundColor: Colors.white,\n            }}\n          >\n            <DayView width={width * 0.9} height={height * 0.9} />\n          </View>\n        ) : null}\n      </View>\n      {isShowingAddDate ? (\n        <View\n          style={{\n            zIndex: 2,\n            position: 'absolute',\n            left: width * 0.05 + (width >= 576 ? width * 0.3 : 0) / 2,\n            top: height * 0.1,\n          }}\n        >\n          <AddEvent\n            width={width * 0.9 - (width >= 576 ? width * 0.3 : 0)}\n            height={height * 0.8}\n          />\n        </View>\n      ) : null}\n    </View>\n  );\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  GovernmentHandleFileSubmissions.tsx\n*/\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useNavigate } from 'react-router-native';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport { loadingStateEnum } from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\nimport getSubmissions from '../../../../Functions/sports/sportsFunctions';\n\nexport default function GovernmentHandleFileSubmissions({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const [currentMediaSubmissions, setCurrentMediaSubmissions] = useState<\n    mediaSubmissionType[]\n  >([]);\n  const [loadingSubmissionsState, setLoadingSubmissionsState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const navigate = useNavigate();\n\n  async function loadData() {\n    // sports functions\n    const result = await getSubmissions();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentMediaSubmissions(result.data);\n    }\n    setLoadingSubmissionsState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {loadingSubmissionsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <ProgressView width={0} height={0} />\n          <Text>loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingSubmissionsState === loadingStateEnum.success ? (\n            <View style={{ width, height, overflow: 'hidden' }}>\n              <Text>HandleFileSubmissions</Text>\n              <FlatList\n                data={currentMediaSubmissions}\n                renderItem={item => (\n                  <Pressable\n                    key={`Submission_${item.item.submissionId}_${createUUID()}`}\n                    onPress={() =>\n                      navigate(\n                        `/profile/government/sports/post/review/${item.item.submissionId}`,\n                      )\n                    }\n                    style={{ borderColor: 'black', borderWidth: 2 }}\n                  >\n                    <Text>{item.item.Title}</Text>\n                    <Text>Accepted: {item.item.accepted ? 'Yes' : 'No'}</Text>\n                    <Text>Reviewed: {item.item.reviewed ? 'Yes' : 'No'}</Text>\n                    <Text>{item.item.user}</Text>\n                  </Pressable>\n                )}\n              />\n            </View>\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'react-native-paper';\nimport GovernmentHandleFileSubmissions from './GovernmentHandleFileSubmissions';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getSports } from '../../../../Functions/sports/sportsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentSports() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [currentSports, setCurrentSports] = useState<sportType[]>([]);\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentSports(result.data);\n    }\n    setDataResult(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government/');\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n        <Text style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n          Government Sports\n        </Text>\n      </View>\n      <View style={{ height: height * 0.4 }}>\n        {dataResult === loadingStateEnum.loading ? (\n          <View\n            style={{\n              height: height * 0.4,\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView\n              width={height * 0.4 < width ? height * 0.1 : width * 0.4}\n              height={height * 0.4 < width ? height * 0.1 : width * 0.4}\n            />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {dataResult === loadingStateEnum.success ? (\n              <View>\n                {currentSports.map(item => (\n                  <Pressable\n                    onPress={() => {\n                      navigate(\n                        `/profile/government/sports/team/${item.name}/${item.id}`,\n                      );\n                    }}\n                    key={item.id}\n                  >\n                    <View>\n                      <Text>{item.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <View>\n                <Text>Error</Text>\n              </View>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ height: height * 0.1, overflow: 'hidden' }}>\n        <Button onPress={() => navigate('/profile/government/sports/create')}>\n          Create Sport\n        </Button>\n        <Button\n          onPress={() => navigate('/profile/government/sports/post/create')}\n        >\n          Create Post\n        </Button>\n      </View>\n      <GovernmentHandleFileSubmissions width={width} height={height * 0.4} />\n    </View>\n  );\n}\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, Pressable } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../../../../Redux/store';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport SVGXml from '../../../../UI/SVGXml/SVGXml';\n\nexport default function GovernmentCreateNewSport() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [sportName, setSportName] = useState<string>('');\n  const { siteId, sportsListId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const [svgData, setSvgData] = useState<string>('');\n  const [createSportLoadingState, setCreateSportLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const navigate = useNavigate();\n\n  async function createSport() {\n    setCreateSportLoadingState(loadingStateEnum.loading);\n    const newSportID: string = createUUID();\n    const data = {\n      fields: {\n        Title: '',\n        sportName,\n        sportId: newSportID,\n        sportSvg: svgData,\n      },\n    };\n    const listData = {\n      displayName: newSportID,\n      columns: [\n        {\n          name: 'teamName',\n          text: {},\n          required: true,\n        },\n        {\n          name: 'season',\n          number: {},\n          required: true,\n        },\n        {\n          name: 'teamId',\n          text: {},\n          required: true,\n          indexed: true,\n          enforceUniqueValues: true,\n        },\n        {\n          name: 'microsoftTeamId',\n          text: {},\n        },\n      ],\n      list: {\n        template: ' genericList',\n      },\n    };\n    const resultList = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n      'POST',\n      JSON.stringify(listData),\n    );\n    if (resultList.ok) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${sportsListId}/items`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateSportLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateSportLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setCreateSportLoadingState(loadingStateEnum.failed);\n    }\n  }\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/sports');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Create New Sport</Text>\n      <Text>Sport Name</Text>\n      <TextInput value={sportName} onChangeText={setSportName} />\n      <TextInput\n        value={svgData}\n        onChangeText={e => {\n          setSvgData(e);\n        }}\n        multiline\n        numberOfLines={25}\n      />\n      <SVGXml xml={svgData} width={100} height={100} />\n      <Pressable\n        onPress={() => {\n          if (sportName !== '' && svgData !== '') {\n            createSport();\n          }\n        }}\n      >\n        <Text>\n          {createSportLoadingState === loadingStateEnum.notStarted\n            ? 'Create'\n            : createSportLoadingState === loadingStateEnum.loading\n            ? 'Loading'\n            : createSportLoadingState === loadingStateEnum.success\n            ? 'Created Sport!'\n            : 'Failed to create sport.'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, Modal, TextInput } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport {\n  getSport,\n  getSportsTeams,\n} from '../../../../Functions/sports/sportsFunctions';\nimport { WarningIcon } from '../../../../UI/Icons/Icons';\nimport SVGXml from '../../../../UI/SVGXml/SVGXml';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nfunction SportsUpdateModel({\n  isPickingSvg,\n  setIsPickingSvg,\n  id,\n}: {\n  isPickingSvg: boolean;\n  setIsPickingSvg: (item: boolean) => void;\n  id: string;\n}) {\n  const [svgData, setSvgData] = useState<string>('');\n  const [listId, setListId] = useState<string>('');\n  const [getSportState, setGetSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [updateSportState, setUpdateSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  async function updateSport() {\n    setUpdateSportState(loadingStateEnum.loading);\n    const updateData = {\n      fields: {\n        sportSvg: svgData,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.sportsListId}/items/${listId}`,\n      'PATCH',\n      JSON.stringify(updateData),\n    );\n    if (result.ok) {\n      setUpdateSportState(loadingStateEnum.success);\n    } else {\n      const data = await result.json();\n      setUpdateSportState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadSport() {\n    const result = await getSport(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined &&\n      result.listId !== undefined\n    ) {\n      setListId(result.listId);\n      setSvgData(result.data.svgData);\n      setGetSportState(loadingStateEnum.success);\n    } else {\n      setGetSportState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadSport();\n  }, []);\n\n  return (\n    <Modal\n      visible={isPickingSvg}\n      animationType=\"slide\"\n      style={{ backgroundColor: Colors.white }}\n    >\n      {getSportState === loadingStateEnum.loading ? (\n        <View>\n          <Text>Loading</Text>\n          <Pressable onPress={() => setIsPickingSvg(false)}>\n            <Text>Dismiss</Text>\n          </Pressable>\n        </View>\n      ) : (\n        <>\n          {getSportState === loadingStateEnum.success ? (\n            <View>\n              <Text>Svg</Text>\n              <View style={{ width: 100, height: 100, overflow: 'hidden' }}>\n                <SVGXml xml={svgData} width={100} height={100} />\n              </View>\n              <TextInput\n                value={svgData}\n                onChangeText={e => {\n                  setSvgData(e);\n                }}\n                multiline\n                numberOfLines={25}\n              />\n              <Pressable onPress={() => updateSport()}>\n                <Text>\n                  {getTextState(updateSportState, { notStarted: 'Confirm' })}\n                </Text>\n              </Pressable>\n              <Pressable onPress={() => setIsPickingSvg(false)}>\n                <Text>Dismiss</Text>\n              </Pressable>\n            </View>\n          ) : (\n            <View>\n              <Text>Failed</Text>\n              <Pressable onPress={() => setIsPickingSvg(false)}>\n                <Text>Dismiss</Text>\n              </Pressable>\n            </View>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n}\n\nexport default function GovernmentSportsTeams() {\n  const { sport, id } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [currentTeams, setCurrentTeams] = useState<sportTeamType[]>([]);\n  const [deleteSportState, setDeleteSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const [isPickingSvg, setIsPickingSvg] = useState<boolean>(false);\n\n  async function deleteSport() {\n    setDeleteSportState(loadingStateEnum.loading);\n    const listResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${id}`,\n      'DELETE',\n    );\n    if (listResult.ok) {\n      const getSportResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.sportsListId\n        }/items?$expand=fields&$filter=fields/sportId%20eq%20'${id}'&$select=id`,\n      );\n      if (getSportResult.ok) {\n        const getSportData = await getSportResult.json();\n        if (getSportData.value.length === 1) {\n          const itemDeleteResult = await callMsGraph(\n            `https://graph.microsoft.com/v1.0/sites/${\n              store.getState().paulyList.siteId\n            }/lists/${store.getState().paulyList.sportsListId}/items/${\n              getSportData.value[0].id\n            }`,\n            'DELETE',\n          );\n          if (itemDeleteResult.ok) {\n            setDeleteSportState(loadingStateEnum.success);\n          } else {\n            setDeleteSportState(loadingStateEnum.failed);\n          }\n        } else {\n          setDeleteSportState(loadingStateEnum.failed);\n        }\n      } else {\n        setDeleteSportState(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteSportState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadData() {\n    if (id !== undefined) {\n      const result = await getSportsTeams(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setCurrentTeams(result.data);\n      }\n      setDataResult(result.result);\n    } else {\n      setDataResult(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government/sports')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>{sport} Teams</Text>\n      <Pressable\n        style={{ borderRadius: 15, backgroundColor: 'red' }}\n        onPress={() => {\n          if (\n            deleteSportState === loadingStateEnum.notStarted ||\n            deleteSportState === loadingStateEnum.failed\n          ) {\n            deleteSport();\n          }\n        }}\n      >\n        <View style={{ flexDirection: 'row', margin: 10 }}>\n          <WarningIcon width={14} height={14} />\n          <Text>\n            {deleteSportState === loadingStateEnum.loading\n              ? 'Loading'\n              : deleteSportState === loadingStateEnum.notStarted\n              ? 'Delete Sport'\n              : deleteSportState === loadingStateEnum.success\n              ? 'Sport Deleted'\n              : 'Failed To Delete Sport'}\n          </Text>\n        </View>\n      </Pressable>\n      <Pressable onPress={() => setIsPickingSvg(true)}>\n        <Text>Pick Svg</Text>\n      </Pressable>\n      {id !== undefined ? (\n        <SportsUpdateModel\n          isPickingSvg={isPickingSvg}\n          setIsPickingSvg={setIsPickingSvg}\n          id={id}\n        />\n      ) : null}\n      <View>\n        {dataResult === loadingStateEnum.loading ? (\n          <View>\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {dataResult === loadingStateEnum.success ? (\n              <FlatList\n                data={currentTeams}\n                renderItem={item => (\n                  <Pressable\n                    key={`TeamBlock_${item.item.teamId}`}\n                    onPress={() =>\n                      navigate(\n                        `/profile/government/sports/team/${sport}/${id}/${item.item.teamId}`,\n                      )\n                    }\n                  >\n                    <Text style={{ margin: 10 }}>{item.item.teamName}</Text>\n                  </Pressable>\n                )}\n              />\n            ) : (\n              <View>\n                <Text>Error</Text>\n              </View>\n            )}\n          </>\n        )}\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate(`/profile/government/sports/team/${sport}/${id}/create`)\n        }\n      >\n        <Text>Create New Team</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { loadingStateEnum } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function getUserMicrosoftFiles(\n  path: string,\n): Promise<{ result: loadingStateEnum; data?: microsoftFileType[] }> {\n  const result = await callMsGraph(path);\n  if (result.ok) {\n    const data = await result.json();\n    const newFiles: microsoftFileType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      newFiles.push({\n        name: data.value[index].name,\n        id: data.value[index].id,\n        lastModified: data.value[index].lastModifiedDateTime,\n        folder: data.value[index].folder !== undefined,\n        parentDriveId: data.value[index].parentReference.driveId,\n        parentPath: data.value[index].parentReference.path,\n        itemGraphPath: data.value[index].folder === undefined ? path : 'FOLDER',\n        callPath: `https://graph.microsoft.com/v1.0/me/drives/${data.value[index].parentReference.driveId}/items/${data.value[index].id}`,\n        type:\n          data.value[index].folder === undefined\n            ? data.value[index].file.mimeType\n            : 'folder',\n      });\n    }\n    return { result: loadingStateEnum.success, data: newFiles };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getUserTeams(): Promise<\n  | { result: loadingStateEnum.success; data: teamsGroupType[] }\n  | { result: loadingStateEnum.failed }\n> {\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/joinedTeams',\n  ); // TODO make sure this works on live tenancy\n  if (result.ok) {\n    const data = await result.json();\n    const newData: teamsGroupType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (data.value[index] !== undefined) {\n        newData.push({\n          teamName: data.value[index].displayName,\n          teamId: data.value[index].id,\n          teamDescription: data.value[index].description,\n        });\n      }\n    }\n    return { result: loadingStateEnum.success, data: newData };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Pressable,\n  View,\n  Text,\n  TextInput,\n  ScrollView,\n  FlatList,\n} from 'react-native';\nimport Picker from './Pickers/Picker';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport MimeTypeIcon from './Icons/MimeTypeIcon';\nimport createUUID from '../Functions/ultility/createUUID';\nimport {\n  getUserMicrosoftFiles,\n  getUserTeams,\n} from '../Functions/microsoftFilePickerFunctions';\nimport { Colors, loadingStateEnum } from '../types';\nimport ProgressView from './ProgressView';\n\nenum MicrosoftUploadModeType {\n  ShareLink,\n  Personal,\n  Site,\n}\n\nexport default function ({\n  onSetIsShowingUpload,\n  onSetIsShowingMicrosoftUpload,\n  onSelectedFile,\n  height,\n  width,\n}: {\n  height: number;\n  width: number;\n  onSetIsShowingUpload?: (item: boolean) => void | undefined;\n  onSetIsShowingMicrosoftUpload?: (item: boolean) => void | undefined;\n  onSelectedFile: (item: microsoftFileType) => void;\n}) {\n  const [usersTeams, setUsersTeams] = useState<teamsGroupType[]>([]);\n  const [selectedMicrosoftUploadMode, setSelectedMicrosoftUploadMode] =\n    useState<MicrosoftUploadModeType>(MicrosoftUploadModeType.Personal);\n  const [shareLinkString, setShareLinkString] = useState<string>('');\n\n  async function loadUserTeams() {\n    const result = await getUserTeams();\n    if (result.result === loadingStateEnum.success) {\n      setUsersTeams(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadUserTeams();\n  }, []);\n\n  async function getShareFile(shareLink: string) {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/shares/${shareLink}/driveItem?$select=content.downloadUrl`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      onSelectedFile({\n        name: '',\n        id: '',\n        lastModified: '',\n        folder: false,\n        parentDriveId: '',\n        parentPath: '',\n        itemGraphPath: '',\n        callPath: '',\n        type: '',\n      });\n    }\n  }\n\n  return (\n    <View style={{ height, width }}>\n      <View style={{ flexDirection: 'row' }}>\n        <Text style={{ textAlign: 'left' }}>Upload File From Microsoft</Text>\n        {onSetIsShowingMicrosoftUpload === undefined ||\n        onSetIsShowingUpload === undefined ? null : (\n          <Pressable\n            onPress={() => {\n              onSetIsShowingUpload(false);\n              onSetIsShowingMicrosoftUpload(false);\n            }}\n          >\n            <View>\n              <Text>Back</Text>\n            </View>\n          </Pressable>\n        )}\n      </View>\n      <View>\n        <View style={{ width }}>\n          <Picker\n            selectedIndex={\n              selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal\n                ? 0\n                : selectedMicrosoftUploadMode ===\n                  MicrosoftUploadModeType.ShareLink\n                ? 1\n                : 2\n            }\n            onSetSelectedIndex={(item: number) => {\n              item === 0\n                ? setSelectedMicrosoftUploadMode(\n                    MicrosoftUploadModeType.Personal,\n                  )\n                : item === 1\n                ? setSelectedMicrosoftUploadMode(\n                    MicrosoftUploadModeType.ShareLink,\n                  )\n                : setSelectedMicrosoftUploadMode(MicrosoftUploadModeType.Site);\n            }}\n            width={width}\n            height={30}\n          >\n            <Text style={{ margin: 0, padding: 0 }}>Personal</Text>\n            <Text style={{ margin: 0, padding: 0 }}>Link</Text>\n            <Text style={{ margin: 0, padding: 0 }}>Teams</Text>\n          </Picker>\n        </View>\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal ? (\n          <PersonalBlock\n            height={height}\n            width={width}\n            onSelectedFile={onSelectedFile}\n          />\n        ) : null}\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.ShareLink ? (\n          <View>\n            <View>\n              <Text>Share Link</Text>\n              <TextInput\n                placeholder=\"Share Link\"\n                value={shareLinkString}\n                onChangeText={e => {\n                  setShareLinkString(e);\n                }}\n              />\n            </View>\n            <Pressable\n              onPress={() => {\n                // TO DO make this work\n                let base64Value = btoa(shareLinkString);\n                base64Value.replace('/', '_');\n                base64Value.replace('+', '-');\n                base64Value.trimEnd();\n                base64Value = `u!${base64Value}`;\n                getShareFile(base64Value);\n              }}\n            >\n              <Text>Submit</Text>\n            </Pressable>\n          </View>\n        ) : null}\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.Site ? (\n          <TeamsBlock userTeams={usersTeams} height={height} />\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nenum teamFileMode {\n  team,\n  channel,\n  file,\n}\n\nfunction TeamsBlock({\n  userTeams,\n  height,\n}: {\n  userTeams: teamsGroupType[];\n  height: number;\n}) {\n  const [selectedTeamFileMode, setSelectedTeamFileMode] =\n    useState<teamFileMode>(teamFileMode.team);\n  return (\n    <FlatList\n      data={userTeams}\n      renderItem={team => (\n        <View>\n          {team.item.teamName !== 'Student Password Policy' &&\n          team.item.teamName !== \"St Paul's High School\" &&\n          team.item.teamName !== 'Adobe_Student' &&\n          team.item.teamName !== 'O365 Student A3 License Assignment' &&\n          team.item.teamName !== 'Student' ? (\n            <View>\n              <Text>{team.item.teamName}</Text>\n            </View>\n          ) : null}\n        </View>\n      )}\n      style={{ height: height * 0.8 }}\n    />\n  );\n}\n\nfunction PersonalBlock({\n  height,\n  width,\n  onSelectedFile,\n}: {\n  height: number;\n  width: number;\n  onSelectedFile: (item: microsoftFileType) => void;\n}) {\n  const [usersFiles, setUsersFies] = useState<microsoftFileType[]>([]);\n  const [microsoftPath, setMicrosoftPath] = useState<string>(\n    'https://graph.microsoft.com/v1.0/me/drive/root/children',\n  );\n  const [fileBackAvaliable, setFilesBackAvaliable] = useState<boolean>(false);\n  const [getFilesState, setGetFilesState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadGetUserMicrosoftFiles(path: string) {\n    setGetFilesState(loadingStateEnum.loading);\n    const result = await getUserMicrosoftFiles(path);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setUsersFies(result.data);\n      setGetFilesState(loadingStateEnum.success);\n    } else {\n      setGetFilesState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadGetUserMicrosoftFiles(microsoftPath);\n  }, []);\n\n  return (\n    <ScrollView style={{ height: height - 20 }}>\n      {fileBackAvaliable ? (\n        <Pressable\n          onPress={() => {\n            const microsftPathArray = microsoftPath.split('/');\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            let outputString = '';\n            for (let index = 0; index < microsftPathArray.length; index += 11) {\n              outputString += `${microsftPathArray[index]}/`;\n            }\n            outputString += '/items/root/children';\n            setMicrosoftPath(outputString);\n            loadGetUserMicrosoftFiles(outputString);\n            setFilesBackAvaliable(false);\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n      ) : null}\n      <>\n        {getFilesState === loadingStateEnum.loading ? (\n          <View\n            style={{\n              width,\n              height,\n              backgroundColor: Colors.white,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView width={14} height={14} />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {getFilesState === loadingStateEnum.success ? (\n              <FlatList\n                data={usersFiles}\n                renderItem={file => (\n                  <Pressable\n                    onPress={() => {\n                      if (file.item.folder) {\n                        setMicrosoftPath(\n                          `https://graph.microsoft.com/v1.0/drives/${file.item.parentDriveId}/items/${file.item.id}/children`,\n                        );\n                        loadGetUserMicrosoftFiles(\n                          `https://graph.microsoft.com/v1.0/drives/${file.item.parentDriveId}/items/${file.item.id}/children`,\n                        );\n                        setFilesBackAvaliable(true);\n                      } else {\n                        onSelectedFile(file.item);\n                      }\n                    }}\n                    key={`Users_${file.item.id}_${createUUID()}`}\n                  >\n                    <View style={{ flexDirection: 'row', margin: 5 }}>\n                      <MimeTypeIcon\n                        width={20}\n                        height={20}\n                        mimeType={file.item.type}\n                      />\n                      <Text style={{ padding: 0, margin: 0 }}>\n                        {file.item.name}\n                      </Text>\n                    </View>\n                  </Pressable>\n                )}\n              />\n            ) : (\n              <Text>Failed to load</Text>\n            )}\n          </>\n        )}\n      </>\n    </ScrollView>\n  );\n}\n","import {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { convertYearToSchoolYear } from '../../../../Functions/calendar/calendarFunctions';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n} from '../../../../types';\nimport store, { RootState } from '../../../../Redux/store';\nimport { getTeams } from '../../../../Functions/microsoftGroupsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\nimport MicrosoftFilePicker from '../../../../UI/MicrosoftFilePicker';\nimport { CloseIcon } from '../../../../UI/Icons/Icons';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\n\nexport default function GovernmentCreateNewTeam() {\n  const { sport, id, teamId } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const navigate = useNavigate();\n\n  const [createTeamLoadingState, setCreateTeamLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [teamDataState, setTeamDataState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [isCreatingTeam, setIsCreatingTeam] = useState<boolean>(true);\n\n  // Team Data\n  const [teamName, setTeamName] = useState<string>('');\n  const [season, setSeason] = useState<number>(new Date().getFullYear());\n  const [teamListItemId, setTeamListItemId] = useState<string>('');\n\n  const [teamsState, setTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [teams, setTeams] = useState<groupType[]>([]);\n  const [teamsNextLink, setTeamsNextLink] = useState<undefined | string>(\n    undefined,\n  );\n  const [selectedMicrosoftTeam, setSelectedMicrosoftTeam] = useState<\n    groupType | undefined\n  >(undefined);\n  const [isSelectingFile, setIsSelectingFile] = useState<boolean>(false);\n  const [selectedFile, setSelectedFile] = useState<string>('');\n\n  async function loadMicrosftTeams() {\n    const result = await getTeams(\n      \"https://graph.microsoft.com/v1.0/groups?$filter=resourceProvisioningOptions/Any(x:x%20eq%20'Team')\",\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setTeams(result.data);\n      setTeamsNextLink(result.nextLink);\n    }\n    setTeamsState(result.result);\n  }\n\n  async function updateTeam() {\n    // This function will also create a team\n    setCreateTeamLoadingState(loadingStateEnum.loading);\n    if (!isCreatingTeam) {\n      let data: object = {\n        fields: {\n          teamName,\n          season,\n        },\n      };\n      if (selectedMicrosoftTeam !== undefined) {\n        data = {\n          fields: {\n            teamName,\n            season,\n            microsoftTeamId: selectedMicrosoftTeam.id,\n          },\n        };\n      }\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items/${teamListItemId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateTeamLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTeamLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      const newTeamId = createUUID();\n      let data: object = {\n        fields: {\n          Title: '',\n          teamName,\n          season,\n          teamId: newTeamId,\n        },\n      };\n      if (selectedMicrosoftTeam !== undefined) {\n        data = {\n          fields: {\n            teamName,\n            season,\n            teamId: newTeamId,\n            microsoftTeamId: selectedMicrosoftTeam.id,\n          },\n        };\n      }\n      const listData = {\n        displayName: newTeamId,\n        columns: [\n          {\n            name: 'playerId', // This is any member of the rester\n            text: {},\n            required: true,\n            indexed: true,\n            enforceUniqueValues: true,\n          },\n          {\n            name: 'position',\n            text: {},\n          },\n          {\n            name: 'playerNumber',\n            text: {},\n          },\n          {\n            name: 'posts',\n            text: { allowMultipleLines: true },\n          },\n          {\n            name: 'imageShareId',\n            text: {},\n          },\n        ],\n        list: {\n          template: ' genericList',\n        },\n      };\n\n      const batchData = {\n        requests: [\n          {\n            id: '1',\n            method: 'POST',\n            url: `/sites/${siteId}/lists/${id}/items`,\n            body: data,\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n          {\n            id: '2',\n            method: 'POST',\n            dependsOn: ['1'],\n            url: `/sites/${siteId}/lists`,\n            body: listData,\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        ],\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/$batch`,\n        'POST',\n        JSON.stringify(batchData),\n      );\n      if (result.ok) {\n        setCreateTeamLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTeamLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function deleteTeam() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items/${teamListItemId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n    } else {\n    }\n  }\n\n  async function getMicrosoftTeam(\n    getMicrosoftTeamId: string,\n  ): Promise<{ result: loadingStateEnum; data?: groupType }> {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${getMicrosoftTeamId}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.displayName,\n          id: data.id,\n        },\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n\n  async function getTeamData() {\n    setTeamDataState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items?expand=fields($select=teamId,teamName,season,microsoftTeamId)&$filter=fields/teamId%20eq%20'${teamId}'&$select=id`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length === 1) {\n        setTeamName(data.value[0].fields.teamName);\n        setSeason(data.value[0].fields.season);\n        setTeamListItemId(data.value[0].id);\n        if (data.value[0].fields.microsoftTeamId !== undefined) {\n          const teamResult = await getMicrosoftTeam(\n            data.value[0].fields.microsoftTeamId,\n          );\n          if (\n            teamResult.result === loadingStateEnum.success &&\n            teamResult.data !== undefined\n          ) {\n            setSelectedMicrosoftTeam(teamResult.data);\n            setTeamDataState(loadingStateEnum.success);\n          } else {\n            setTeamDataState(loadingStateEnum.failed);\n          }\n        } else {\n          setTeamDataState(loadingStateEnum.success);\n        }\n      } else {\n        setTeamDataState(loadingStateEnum.failed);\n      }\n    } else {\n      setTeamDataState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadMicrosftTeams();\n  }, []);\n\n  useEffect(() => {\n    if (teamId === 'create') {\n      setIsCreatingTeam(true);\n    } else {\n      setIsCreatingTeam(false);\n      getTeamData();\n    }\n  }, [teamId]);\n\n  return (\n    <>\n      {isCreatingTeam || teamDataState === loadingStateEnum.success ? (\n        <ScrollView\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() =>\n              navigate(`/profile/government/sports/team/${sport}/${id}`)\n            }\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <View>\n            <Text>\n              {isCreatingTeam\n                ? `Create a new ${sport} team`\n                : `Edit the ${teamName} ${sport} Team`}\n            </Text>\n          </View>\n          <View\n            style={{\n              margin: 10,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: '#FFFFFF',\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 5 }}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text>Team Name:</Text>\n                <TextInput\n                  value={teamName}\n                  onChangeText={text => setTeamName(text)}\n                  placeholder=\"Team Name\"\n                />\n              </View>\n              <View>\n                <Text>Season</Text>\n                <Text>{convertYearToSchoolYear(season)}</Text>\n                <TextInput\n                  keyboardType=\"numeric\"\n                  onChangeText={text => {\n                    if (text === '') {\n                      setSeason(0);\n                    } else {\n                      setSeason(parseFloat(text));\n                    }\n                  }}\n                  value={season.toString()}\n                  maxLength={10} // setting limit of input\n                />\n              </View>\n            </View>\n          </View>\n          <View\n            style={{\n              height: height * 0.5,\n              margin: 10,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: '#FFFFFF',\n              borderRadius: 15,\n            }}\n          >\n            <View\n              style={{\n                margin: 10,\n                shadowColor: 'black',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.8,\n                shadowRadius: 10,\n                backgroundColor: '#FFFFFF',\n                borderRadius: 15,\n              }}\n            >\n              <View style={{ margin: 5 }}>\n                <Text>Selected Team</Text>\n                {selectedMicrosoftTeam !== undefined ? (\n                  <Pressable\n                    onPress={() => {\n                      setSelectedMicrosoftTeam(undefined);\n                    }}\n                  >\n                    <Text>{selectedMicrosoftTeam.name}</Text>\n                  </Pressable>\n                ) : (\n                  <Text>NO TEAM SELECTED</Text>\n                )}\n              </View>\n            </View>\n            <View style={{ marginLeft: 5, marginRight: 5 }}>\n              <FlatList\n                data={teams}\n                renderItem={team => (\n                  <>\n                    {team.item.id !== selectedMicrosoftTeam?.id ? (\n                      <Pressable\n                        key={`Team_${team.item.id}_${createUUID()}`}\n                        onPress={() => {\n                          setSelectedMicrosoftTeam(team.item);\n                        }}\n                      >\n                        <Text>{team.item.name}</Text>\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              />\n            </View>\n          </View>\n          {selectedMicrosoftTeam === undefined ? (\n            <View>\n              <Text>Select a team in order to get a roster</Text>\n            </View>\n          ) : (\n            <>\n              {isCreatingTeam || teamId === undefined ? (\n                <View>\n                  <Text>\n                    Please Create the team and return later to finish the roster\n                  </Text>\n                </View>\n              ) : (\n                <View>\n                  <Text>Roster</Text>\n                  <RosterBlock\n                    microsoftTeamId={selectedMicrosoftTeam.id}\n                    width={100}\n                    height={100}\n                    teamId={teamId}\n                    selectedFile={selectedFile}\n                    setIsSelectingFile={setIsSelectingFile}\n                    setSelectedFile={setSelectedFile}\n                    isSelectingFile={isSelectingFile}\n                  />\n                </View>\n              )}\n            </>\n          )}\n\n          <Pressable\n            style={{\n              margin: 10,\n              backgroundColor: 'red',\n              borderRadius: 15,\n              zIndex: -100,\n            }}\n            onPress={() => deleteTeam()}\n          >\n            <Text style={{ margin: 10 }}>Delete Team</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              if (createTeamLoadingState === loadingStateEnum.notStarted) {\n                updateTeam();\n              } else if (createTeamLoadingState === loadingStateEnum.failed) {\n                setCreateTeamLoadingState(loadingStateEnum.notStarted);\n              }\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {createTeamLoadingState === loadingStateEnum.notStarted\n                ? isCreatingTeam\n                  ? 'CREATE TEAM'\n                  : 'UPDATE TEAM'\n                : createTeamLoadingState === loadingStateEnum.loading\n                ? 'LOADING'\n                : createTeamLoadingState === loadingStateEnum.success\n                ? 'SUCCESS'\n                : 'FAILED'}\n            </Text>\n          </Pressable>\n        </ScrollView>\n      ) : (\n        <>\n          {teamDataState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView width={width * 0.1} height={height * 0.1} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              <Pressable\n                onPress={() => {\n                  navigate(`/profile/government/sports/team/${sport}/${id}`);\n                }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n      {isSelectingFile ? (\n        <RosterSelectFile\n          setIsSelectingFile={setIsSelectingFile}\n          setSelectedFile={setSelectedFile}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction RosterBlock({\n  microsoftTeamId,\n  width,\n  height,\n  teamId,\n  setIsSelectingFile,\n  selectedFile,\n  isSelectingFile,\n  setSelectedFile,\n}: {\n  microsoftTeamId: string;\n  width: number;\n  height: number;\n  teamId: string;\n  selectedFile: string;\n  setSelectedFile: (item: string) => void;\n  isSelectingFile: boolean;\n  setIsSelectingFile: (item: boolean) => void;\n}) {\n  const [membersState, setMembersState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [members, setMembers] = useState<governmentRosterType[]>([]);\n\n  async function getMembers() {\n    const teamResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${teamId}/items?$expand=fields($select=playerId,position,playerNumber,posts,imageShareId)&$select=id`,\n    );\n    if (teamResult.ok) {\n      const teamResultData = await teamResult.json();\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/teams/${microsoftTeamId}/members`,\n      );\n      if (result.ok) {\n        const data = await result.json();\n        const users: microsoftUserType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          users.push({\n            id: data.value[index].userId,\n            displayName: data.value[index].displayName,\n          });\n        }\n        const rosters: governmentRosterType[] = [];\n        for (\n          let teamIndex = 0;\n          teamIndex < teamResultData.value.length;\n          teamIndex += 1\n        ) {\n          const userData = users.findIndex(e => {\n            return e.id === teamResultData.value[teamIndex].fields.playerId;\n          });\n          if (userData !== -1) {\n            rosters.push({\n              name: users[userData].displayName,\n              id: teamResultData.value[teamIndex].fields.playerId,\n              listItemId: teamResultData.value[teamIndex].id,\n              imageShareId: teamResultData.value[teamIndex].fields.imageShareId,\n              position: teamResultData.value[teamIndex].fields.position,\n              playerNumber: teamResultData.value[teamIndex].fields.playerNumber,\n              posts:\n                teamResultData.value[teamIndex].fields.posts !== undefined\n                  ? JSON.parse(\n                      teamResultData.value[teamIndex].fields.playerNumber,\n                    )\n                  : undefined,\n            });\n            const save = users[0];\n            users[0] = users[userData];\n            users[userData] = save;\n            users.shift();\n          }\n        }\n\n        for (let index = 0; index < users.length; index += 1) {\n          rosters.push({\n            name: users[index].displayName,\n            id: users[index].id,\n          });\n        }\n        setMembers(rosters);\n        setMembersState(loadingStateEnum.success);\n      } else {\n        setMembersState(loadingStateEnum.failed);\n      }\n    } else {\n      setMembersState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getMembers();\n  }, []);\n\n  return (\n    <>\n      {membersState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={width * 0.1} height={height * 0.1} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {membersState === loadingStateEnum.success ? (\n            <View>\n              <FlatList\n                data={members}\n                renderItem={member => (\n                  <RosterBlockItem\n                    members={members}\n                    setMembers={setMembers}\n                    member={member}\n                    teamId={teamId}\n                    selectedFile={selectedFile}\n                    setIsSelectingFile={setIsSelectingFile}\n                    setSelectedFile={setSelectedFile}\n                    isSelectingFile={isSelectingFile}\n                  />\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction RosterBlockItem({\n  member,\n  members,\n  setMembers,\n  teamId,\n  setIsSelectingFile,\n  isSelectingFile,\n  selectedFile,\n  setSelectedFile,\n}: {\n  members: governmentRosterType[];\n  setMembers: (item: governmentRosterType[]) => void;\n  member: ListRenderItemInfo<governmentRosterType>;\n  teamId: string;\n  selectedFile: string;\n  setSelectedFile: (item: string) => void;\n  isSelectingFile: boolean;\n  setIsSelectingFile: (item: boolean) => void;\n}) {\n  const [rosterState, setRosterState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [callingSelectedFile, setIsCallingSelectedFile] =\n    useState<boolean>(false);\n  const [imageUrl, setImageUrl] = useState<string>('');\n\n  async function createMemberItem(member: governmentRosterType) {\n    const index = members.findIndex(e => {\n      return e.id === member.id;\n    });\n    if (index === -1) {\n      setRosterState(loadingStateEnum.failed);\n      return;\n    }\n    setRosterState(loadingStateEnum.loading);\n    const data = {\n      fields: {\n        playerNumber: member.playerNumber,\n        position: member.position,\n        playerId: member.id,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${teamId}/items`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      const save = members;\n      save[index].listItemId = data.id;\n      setMembers(save);\n      setRosterState(loadingStateEnum.success);\n    } else {\n      setRosterState(loadingStateEnum.failed);\n    }\n  }\n\n  async function updatePlayerData(member: governmentRosterType) {\n    if (member.listItemId !== undefined) {\n      setRosterState(loadingStateEnum.loading);\n      const data = {\n        fields: {\n          playerNumber: member.playerNumber,\n          position: member.position,\n          imageShareId: member.imageShareId,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${teamId}/items/${member.listItemId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setRosterState(loadingStateEnum.success);\n      } else {\n        setRosterState(loadingStateEnum.failed);\n      }\n    } else {\n      createMemberItem(member);\n    }\n  }\n\n  useEffect(() => {\n    if (callingSelectedFile) {\n      const save = members;\n      save[member.index].imageShareId = selectedFile;\n      setSelectedFile('');\n      setMembers(save);\n      updatePlayerData(save[member.index]);\n    }\n    if (isSelectingFile === false) {\n      setIsCallingSelectedFile(false);\n    }\n  }, [isSelectingFile, selectedFile]);\n\n  async function loadImage() {\n    if (member.item.imageShareId !== undefined) {\n      const result = await getFileWithShareID(member.item.imageShareId, 0);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.url &&\n        result.contentType === dataContentTypeOptions.image\n      ) {\n        setImageUrl(result.url);\n      } else {\n        setImageUrl('');\n      }\n    } else {\n      setImageUrl('');\n    }\n  }\n\n  useEffect(() => {\n    loadImage();\n  }, [member.item.imageShareId]);\n\n  return (\n    <View\n      key={`Member_${member.item.id}_${createUUID()}`}\n      style={{ margin: 5 }}\n    >\n      <View>\n        {rosterState === loadingStateEnum.loading ? (\n          <ProgressView width={14} height={14} />\n        ) : (\n          <>\n            {rosterState === loadingStateEnum.success ||\n            rosterState === loadingStateEnum.notStarted ? (\n              <View\n                style={{\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                  backgroundColor: 'green',\n                }}\n              />\n            ) : (\n              <View\n                style={{\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                  backgroundColor: 'red',\n                }}\n              />\n            )}\n          </>\n        )}\n      </View>\n      <Text>{member.item.name}</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Player Number:</Text>\n        <TextInput\n          value={member.item.playerNumber}\n          onChangeText={e => {\n            const save = members;\n            save[member.index].playerNumber = e;\n            setMembers([...save]);\n          }}\n          onFocus={() => {}}\n          onBlur={() => {\n            updatePlayerData(member.item);\n          }}\n        />\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Position:</Text>\n        <TextInput\n          value={member.item.position}\n          onChangeText={e => {\n            const save = members;\n            save[member.index].position = e;\n            setMembers([...save]);\n          }}\n          onBlur={() => {\n            updatePlayerData(member.item);\n          }}\n        />\n      </View>\n      {imageUrl !== '' ? (\n        <Image source={{ uri: imageUrl }} style={{ width: 100, height: 100 }} />\n      ) : null}\n      <Pressable\n        onPress={() => {\n          setIsSelectingFile(true);\n          setIsCallingSelectedFile(true);\n        }}\n      >\n        <Text>Choose Player Image</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nfunction RosterSelectFile({\n  setIsSelectingFile,\n  setSelectedFile,\n}: {\n  setIsSelectingFile: (item: boolean) => void;\n  setSelectedFile: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#ededed',\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setIsSelectingFile(false);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <View\n        style={{\n          height: height * 0.8,\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          backgroundColor: Colors.white,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          <MicrosoftFilePicker\n            height={height * 0.8 - 5}\n            width={width * 0.8 - 5}\n            onSelectedFile={async file => {\n              const data = {\n                type: 'view',\n                scope: 'organization',\n              };\n              const result = await callMsGraph(\n                `${file.callPath}/createLink`,\n                'POST',\n                JSON.stringify(data),\n              );\n              if (result.ok) {\n                const data = await result.json();\n                if (data.shareId !== undefined) {\n                  setSelectedFile(data.shareId);\n                  setIsSelectingFile(false);\n                } else {\n                  setIsSelectingFile(false);\n                }\n              } else {\n                setIsSelectingFile(false);\n              }\n            }}\n          />\n        </View>\n      </View>\n    </View>\n  );\n}\n","import { loadingStateEnum } from '../types';\n\nexport async function getYoutubeVideos(pageToken?: string | undefined): Promise<\n  | {\n      result: loadingStateEnum.success;\n      data: youtubeVideoType[];\n      nextPageToken?: undefined | string;\n    }\n  | { result: loadingStateEnum.failed }\n> {\n  const result = await fetch(\n    `https://www.googleapis.com/youtube/v3/playlistItems?playlistId=UU8HbRWjbR0xjOeE6OlQ1sLA&part=contentDetails,id,snippet${\n      pageToken ? `&pageToken=${pageToken}` : ''\n    }&key=AIzaSyAeyX34-ADpLxnfUIJk_osy5pgCvO3MtTY`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultData: youtubeVideoType[] = [];\n    for (let index = 0; index < data.items.length; index += 1) {\n      resultData.push({\n        thumbnail: data.items[index].snippet.thumbnails.high.url,\n        title: data.items[index].snippet.title,\n        videoId: data.items[index].contentDetails.videoId,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: resultData,\n      nextPageToken: data.nextPageToken,\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  FlatList,\n  Image,\n} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { SegmentedButtons } from 'react-native-paper';\nimport MicrosoftFilePicker from '../../../../UI/MicrosoftFilePicker';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum, postType } from '../../../../types';\nimport {\n  getSports,\n  getSportsTeams,\n} from '../../../../Functions/sports/sportsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\nimport { getYoutubeVideos } from '../../../../Functions/youtubeFunctions';\n\nfunction YoutubeVideosSelector({\n  onSelect,\n}: {\n  onSelect: (item: string) => void;\n}) {\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const [ytVideos, setytVideos] = useState<youtubeVideoType[]>([]);\n  const [ytState, setytState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [nextPage, setNextPage] = useState<string | undefined>(undefined);\n\n  async function loadData() {\n    const result = await getYoutubeVideos(nextPage);\n    if (result.result == loadingStateEnum.success) {\n      setytVideos([...ytVideos, ...result.data]);\n      setNextPage(result.nextPageToken);\n      setytState(loadingStateEnum.success);\n    } else {\n      setytState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  if (ytState === loadingStateEnum.loading) {\n    return (\n      <View>\n        <ProgressView width={14} height={14} />\n        <Text>Loading</Text>\n      </View>\n    );\n  }\n\n  if (ytState === loadingStateEnum.success) {\n    return (\n      <FlatList\n        data={ytVideos}\n        renderItem={video => (\n          <Pressable\n            onPress={() => {\n              onSelect(video.item.videoId);\n            }}\n          >\n            <Image\n              source={{ uri: video.item.thumbnail }}\n              style={{ width, height: (width / 16) * 9 }}\n            />\n            <Text>{video.item.title}</Text>\n          </Pressable>\n        )}\n        style={{ width, height: 500 }}\n        onEndReached={() => loadData()}\n      />\n    );\n  }\n\n  return (\n    <View style={{ width, height: 500 }}>\n      <Text>Something Went Wrong</Text>\n    </View>\n  );\n}\n\nexport default function GovernmentSportsTeamAddPost() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [fileId, setFileId] = useState<string>('');\n  const [postName, setPostName] = useState<string>('');\n  const [postSubmissionState, setPostSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const navigate = useNavigate();\n  const [selectedSportId, setSelectedSportId] = useState<string>('');\n  const [selectedTeamId, setSelectedTeamId] = useState<string>('');\n  const [postMode, setPostMode] = useState(postType.microsoftFile);\n\n  async function getShareLink(item: microsoftFileType) {\n    const itemPathArray = item.itemGraphPath.split('/');\n    if (itemPathArray[itemPathArray.length - 1] === 'children') {\n      const data = {\n        type: 'view',\n        scope: 'organization',\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/drives/${item.parentDriveId}/items/${item.id}/createLink`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        const dataOut = await result.json();\n        setFileId(dataOut.shareId);\n      } else {\n      }\n    }\n  }\n  async function createFileSubmission() {\n    if (fileId !== '' && selectedTeamId !== '') {\n      setPostSubmissionState(loadingStateEnum.loading);\n      const userIdResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/me',\n      );\n      if (userIdResult.ok) {\n        const userData = await userIdResult.json();\n        const submissionID = createUUID();\n        const data = {\n          fields: {\n            Title: postName,\n            fileId,\n            fileType: postMode, // This is the post mode Type\n            accepted: false,\n            user: userData.id,\n            timeCreated: new Date().toISOString(),\n            submissionId: submissionID,\n            reviewed: false,\n            selectedSportId,\n            selectedTeamId,\n          },\n        };\n        const result = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${\n            store.getState().paulyList.sportsSubmissionsListId\n          }/items`,\n          'POST',\n          JSON.stringify(data),\n        );\n        if (result.ok) {\n          setPostSubmissionState(loadingStateEnum.success);\n        } else {\n          const data = await result.json();\n          setPostSubmissionState(loadingStateEnum.failed);\n        }\n      } else {\n        setPostSubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/sports');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Add Sports Team Post</Text>\n      <TextInput\n        value={postName}\n        onChangeText={e => {\n          setPostName(e);\n        }}\n      />\n      <PickSportTeam\n        height={400}\n        width={width}\n        onSelect={e => {\n          setSelectedSportId(e.sportId);\n          setSelectedTeamId(e.teamId);\n        }}\n        onBack={() => {\n          setSelectedSportId('');\n          setSelectedTeamId('');\n        }}\n      />\n      <SegmentedButtons\n        value={postMode.toString()}\n        onValueChange={e => setPostMode(parseInt(e))}\n        buttons={[\n          {\n            value: postType.microsoftFile.toString(),\n            label: 'Microsoft File',\n          },\n          {\n            value: postType.youtubeVideo.toString(),\n            label: 'Youtube Video',\n          },\n        ]}\n      />\n      {postMode === postType.microsoftFile ? (\n        <MicrosoftFilePicker\n          onSelectedFile={(item: microsoftFileType) => {\n            getShareLink(item);\n          }}\n          height={500}\n          width={width}\n        />\n      ) : null}\n      {postMode === postType.youtubeVideo ? (\n        <YoutubeVideosSelector onSelect={setFileId} />\n      ) : null}\n      {fileId !== '' ? (\n        <Pressable\n          onPress={() => {\n            if (\n              postSubmissionState === loadingStateEnum.notStarted &&\n              fileId !== '' &&\n              selectedTeamId !== ''\n            ) {\n              createFileSubmission();\n            }\n          }}\n        >\n          <Text>\n            {fileId !== '' && selectedTeamId !== '' ? 'Submit' : 'Select Team'}\n          </Text>\n        </Pressable>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.failed ? (\n        <Text>Failure</Text>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.success ? (\n        <Text>Success</Text>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nfunction PickSportTeam({\n  width,\n  height,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  onSelect: (item: { sportId: string; teamId: string }) => void;\n  onBack: () => void;\n}) {\n  const [currentSports, setCurrentSports] = useState<sportType[]>([]);\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedSport, setSelectedSport] = useState<sportType | undefined>(\n    undefined,\n  );\n  const [sportsTeams, setSportTeams] = useState<sportTeamType[]>([]);\n  const [sportTeamState, setSportTeamState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadData() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentSports(result.data);\n    }\n    setDataResult(result.result);\n  }\n\n  async function loadTeams() {\n    if (selectedSport !== undefined) {\n      setSportTeamState(loadingStateEnum.loading);\n      const result = await getSportsTeams(selectedSport.id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setSportTeams(result.data);\n      }\n      setSportTeamState(result.result);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    loadTeams();\n  }, [selectedSport]);\n\n  return (\n    <View style={{ width, height }}>\n      <>\n        {sportsTeams === undefined ||\n        sportTeamState === loadingStateEnum.notStarted ? (\n          <>\n            {dataResult === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.1 : height * 0.1}\n                  height={width < height ? width * 0.1 : height * 0.1}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {dataResult === loadingStateEnum.success ? (\n                  <>\n                    {currentSports.map((item, id) => (\n                      <Pressable\n                        key={id}\n                        onPress={() => setSelectedSport(item)}\n                      >\n                        <View>\n                          <Text>{item.name}</Text>\n                        </View>\n                      </Pressable>\n                    ))}\n                  </>\n                ) : (\n                  <View>\n                    <Text>Error</Text>\n                  </View>\n                )}\n              </>\n            )}\n          </>\n        ) : (\n          <>\n            {sportTeamState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.1 : height * 0.1}\n                  height={width < height ? width * 0.1 : height * 0.1}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {sportTeamState === loadingStateEnum.success &&\n                selectedSport !== undefined ? (\n                  <View>\n                    <Pressable\n                      onPress={() => {\n                        setSelectedSport(undefined);\n                        setSportTeamState(loadingStateEnum.notStarted);\n                        setSportTeams([]);\n                        onBack();\n                      }}\n                    >\n                      <Text>Back</Text>\n                    </Pressable>\n                    {sportsTeams.map((item, id) => (\n                      <Pressable\n                        key={id}\n                        onPress={() =>\n                          onSelect({\n                            sportId: selectedSport.id,\n                            teamId: item.teamId,\n                          })\n                        }\n                      >\n                        <View>\n                          <Text>{item.teamName}</Text>\n                        </View>\n                      </Pressable>\n                    ))}\n                  </View>\n                ) : (\n                  <View>\n                    <Text>Error</Text>\n                  </View>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </>\n    </View>\n  );\n}\n","import { View, Text, Image, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ResizeMode, Video } from 'expo-av';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\nimport store, { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n  postType,\n} from '../../../../types';\nimport SportsYoutube from '../../../../UI/SportsYoutube';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nfunction getDenyText(reviewed: boolean, accepted: boolean) {\n  if (!reviewed && !accepted) {\n    ('SubmissionDenied');\n  } else {\n    return 'Deny';\n  }\n}\n\nexport default function GovernmentReviewFileSubmission() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const { submissionID } = useParams();\n  const [dataURL, setDataURL] = useState<string>('');\n  const [dataContentType, setDataContentType] =\n    useState<dataContentTypeOptions>(dataContentTypeOptions.unknown);\n  const [currentSubmissionInfomration, setCurrentSubmissionInformation] =\n    useState<mediaSubmissionType | undefined>(undefined);\n  const navigate = useNavigate();\n\n  // Loading States\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [approveSubmissionState, setApproveSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [denySubmissionState, setDenySubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [deleteState, setDeleteState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function deleteSubmission(itemID: string) {\n    setDeleteState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.sportsSubmissionsListId\n      }/items/${itemID}`,\n      'DELETE',\n    ); // TO DO fix list ids\n    if (result.ok) {\n      // TO DO Check if submission has been approved before\n      // Remove from approved submissions\n      setDeleteState(loadingStateEnum.success);\n    } else {\n      setDeleteState(loadingStateEnum.failed);\n    }\n  }\n\n  async function getSubmissionInformation() {\n    if (submissionID !== undefined) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.sportsSubmissionsListId\n        }/items?expand=fields&filter=fields/submissionId%20eq%20'${submissionID}'`,\n      );\n      if (result.ok) {\n        const data = await result.json();\n        if (data.value !== undefined) {\n          if (data.value.length === 1) {\n            // All things are working\n            setCurrentSubmissionInformation({\n              Title: data.value[0].fields.Title,\n              user: data.value[0].fields.user,\n              submissionId: data.value[0].fields.submissionId,\n              accepted: data.value[0].fields.accepted,\n              fileId: data.value[0].fields.fileId,\n              fileType: data.value[0].fields.fileType,\n              itemID: data.value[0].id,\n              selectedSportId: data.value[0].fields.selectedSportId,\n              selectedTeamId: data.value[0].fields.selectedTeamId,\n              reviewed: data.value[0].fields.reviewed,\n            });\n            setLoadingState(loadingStateEnum.success);\n          } else {\n            setLoadingState(loadingStateEnum.failed);\n          }\n        } else {\n          setLoadingState(loadingStateEnum.failed);\n        }\n      } else {\n        setLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function approveSubmission() {\n    if (currentSubmissionInfomration) {\n      setApproveSubmissionState(loadingStateEnum.loading);\n      const data = {\n        requests: [\n          {\n            id: '1',\n            method: 'POST',\n            url: `/sites/${store.getState().paulyList.siteId}/lists/${\n              store.getState().paulyList.sportsApprovedSubmissionsListId\n            }/items`,\n            body: {\n              fields: {\n                Title: currentSubmissionInfomration.Title,\n                fileId: currentSubmissionInfomration.fileId,\n                fileType: currentSubmissionInfomration.fileType,\n                caption: currentSubmissionInfomration.Title,\n                submissionId: currentSubmissionInfomration.submissionId,\n                selectedSportId: currentSubmissionInfomration.selectedSportId,\n                selectedTeamId: currentSubmissionInfomration.selectedTeamId,\n              },\n            },\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n          {\n            id: '2',\n            method: 'PATCH',\n            url: `/sites/${store.getState().paulyList.siteId}/lists/${\n              store.getState().paulyList.sportsSubmissionsListId\n            }/items/${currentSubmissionInfomration.itemID}`,\n            body: {\n              fields: { accepted: true, reviewed: true },\n            },\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        ],\n      };\n      const result = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(data),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (result.ok) {\n        const newInformation = currentSubmissionInfomration;\n        newInformation.accepted = true;\n        newInformation.reviewed = true;\n        setCurrentSubmissionInformation(currentSubmissionInfomration);\n        setApproveSubmissionState(loadingStateEnum.success);\n      } else {\n        setApproveSubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function denySubmission() {\n    if (currentSubmissionInfomration) {\n      const data = {\n        fields: {\n          accepted: false,\n          reviewed: true,\n        },\n      };\n      setDenySubmissionState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `/sites/${store.getState().paulyList.siteId}/lists/${\n          store.getState().paulyList.sportsSubmissionsListId\n        }/items/${currentSubmissionInfomration.itemID}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setDenySubmissionState(loadingStateEnum.success);\n      } else {\n        setDenySubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function loadFile() {\n    if (currentSubmissionInfomration !== undefined) {\n      if (currentSubmissionInfomration.fileType === postType.microsoftFile) {\n        const result = await getFileWithShareID(\n          currentSubmissionInfomration.fileId,\n          0,\n        );\n        if (\n          result.result === loadingStateEnum.success &&\n          result.url !== undefined &&\n          result.contentType !== undefined\n        ) {\n          setDataURL(result.url);\n          setDataContentType(result.contentType);\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (submissionID !== undefined) {\n      getSubmissionInformation();\n    }\n  }, [submissionID]);\n\n  useEffect(() => {\n    loadFile();\n  }, [currentSubmissionInfomration]);\n\n  return (\n    <>\n      {loadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingState === loadingStateEnum.success &&\n          currentSubmissionInfomration !== undefined ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n              }}\n            >\n              <Pressable onPress={() => navigate('/profile/government/sports')}>\n                <Text>Back</Text>\n              </Pressable>\n              <Text>GovernmentReviewFileSubmission</Text>\n              {dataURL !== '' && (\n                <View>\n                  {dataContentType === dataContentTypeOptions.image ? (\n                    <Image\n                      height={100}\n                      style={{ height: 100 }}\n                      source={{ uri: dataURL }}\n                    />\n                  ) : null}\n                  {dataContentType === dataContentTypeOptions.video ? (\n                    <Video\n                      useNativeControls\n                      source={{ uri: dataURL }}\n                      resizeMode={ResizeMode.COVER}\n                      style={{\n                        width: width * 0.9,\n                        height: height * 0.4,\n                        alignSelf: 'stretch',\n                        marginLeft: width * 0.05,\n                        marginRight: width * 0.05,\n                      }}\n                      videoStyle={{ width: width * 0.9, height: height * 0.4 }}\n                    />\n                  ) : null}\n                </View>\n              )}\n              {currentSubmissionInfomration.fileType ===\n              postType.youtubeVideo ? (\n                <View style={{ height: ((width * 0.9) / 16) * 9 }}>\n                  <SportsYoutube\n                    videoId={currentSubmissionInfomration.fileId}\n                    width={width * 0.9}\n                  />\n                </View>\n              ) : null}\n              <Pressable\n                onPress={() => {\n                  if (currentSubmissionInfomration) {\n                    deleteSubmission(currentSubmissionInfomration.itemID);\n                  }\n                }}\n              >\n                <Text>Remove File Submission</Text>\n              </Pressable>\n              <Pressable\n                onPress={() => {\n                  approveSubmission();\n                }}\n              >\n                <Text>\n                  {approveSubmissionState === loadingStateEnum.loading\n                    ? 'Loading'\n                    : approveSubmissionState === loadingStateEnum.success ||\n                      approveSubmissionState === loadingStateEnum.notStarted\n                    ? currentSubmissionInfomration.reviewed\n                      ? currentSubmissionInfomration.accepted\n                        ? 'Submission Approved'\n                        : 'Approve'\n                      : 'Approve'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n              <Pressable onPress={() => denySubmission()}>\n                <Text>\n                  {getTextState(denySubmissionState, {\n                    success: getDenyText(\n                      currentSubmissionInfomration.reviewed,\n                      currentSubmissionInfomration.accepted,\n                    ),\n                    notStarted: getDenyText(\n                      currentSubmissionInfomration.reviewed,\n                      currentSubmissionInfomration.accepted,\n                    ),\n                  })}\n                </Text>\n              </Pressable>\n            </View>\n          ) : (\n            <View style={{ width, height }}>\n              <Pressable onPress={() => navigate('/profile/government/sports')}>\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../Redux/store';\nimport { Colors } from '../../../../types';\n\nexport default function GovernmentCalendar() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  return (\n    <View\n      style={{\n        width,\n        height,\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable onPress={() => navigate('/profile/government/')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Government Calendar</Text>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/schedule')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Schedule</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/timetable')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Timetables</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/dresscode')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Dress Code</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport { getSchedules } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\nexport default function GovernmentSchedule() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [loadedSchedules, setLoadedSchedules] = useState<scheduleType[]>([]);\n  const navigate = useNavigate();\n\n  async function loadSchedules() {\n    const result = await getSchedules();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setLoadedSchedules(result.data);\n    }\n    setLoadingState(result.result);\n  }\n\n  useEffect(() => {\n    loadSchedules();\n  }, []);\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government/calendar')}>\n          <Text>Back</Text>\n        </Pressable>\n        <View\n          style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Schedules</Text>\n        </View>\n      </View>\n      {loadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height: height * 0.8,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={15} height={15} />\n          <Text>Loading</Text>\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.success ? (\n        <View style={{ height: height * 0.8 }}>\n          {loadedSchedules.length >= 1 ? (\n            <FlatList\n              data={loadedSchedules}\n              renderItem={schedule => (\n                <Pressable\n                  style={{\n                    backgroundColor: Colors.white,\n                    shadowColor: 'black',\n                    shadowOffset: { width: 1, height: 1 },\n                    shadowOpacity: 1,\n                    shadowRadius: 5,\n                    margin: 10,\n                    marginBottom: 0,\n                    borderRadius: 15,\n                  }}\n                  onPress={() =>\n                    navigate(\n                      `/profile/government/calendar/schedule/${schedule.item.id}`,\n                    )\n                  }\n                  key={schedule.item.id}\n                >\n                  <Text style={{ margin: 10 }}>{schedule.item.properName}</Text>\n                </Pressable>\n              )}\n            />\n          ) : (\n            <Text>No Schedule</Text>\n          )}\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.failed ? <Text>Failure</Text> : null}\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/schedule/create')}\n        style={{\n          backgroundColor: Colors.white,\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n          marginLeft: 5,\n          marginRight: 5,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Create New</Text>\n      </Pressable>\n    </ScrollView>\n  );\n}\n","// Andrew Mainella\n// October 14 2023\n// Pauly\n// GovernmentTimetable.tsx\n//\n// An timetable selector that direcets to creating a new timetable or editing one.\n//\n\nimport { View, Text, Pressable } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport SelectTimetable from '../../../../Calendar/SelectTimetable';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors } from '../../../../../types';\n\nexport default function GovernmentTimetable() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government/calendar/')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Timetables</Text>\n      </View>\n      <View style={{ height: height * 0.85 }}>\n        <SelectTimetable governmentMode />\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate('/profile/government/calendar/timetable/create')\n        }\n      >\n        <Text>Create New</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, TextInput, Button, Pressable, Modal } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { TimePickerModal, he } from 'react-native-paper-dates';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Animated, {\n  interpolateColor,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\nimport ColorPicker, {\n  Preview,\n  Panel1,\n  HueSlider,\n  OpacitySlider,\n  Swatches,\n  RenderThumbProps,\n  InputWidget,\n} from 'reanimated-color-picker';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport store, { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport { CloseIcon, WarningIcon } from '../../../../../UI/Icons/Icons';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport { getSchedule } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\nfunction isValidHexaCode(input: string) {\n  // Define the regular expression pattern for a valid hexadecimal color code\n  // It matches either a 6-character or 3-character code, preceded by a #\n  const hexaPattern = /^#(?:[0-9a-fA-F]{3,4}){1,2}$/;\n\n  // Test the input against the pattern using the test() method\n  return hexaPattern.test(input);\n}\n\n// NOTE: period length cannot be longer than 20\nexport default function GovernmentSchedule() {\n  const { id } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [scheduleListId, setScheduleListId] = useState<string | undefined>(\n    undefined,\n  );\n\n  const [scheduleProperName, setScheduleProperName] = useState<string>('');\n  const [scheduleDescriptiveName, setScheduleDescriptiveName] =\n    useState<string>('');\n  const [newPeriods, setNewPeriods] = useState<periodType[]>([]);\n  const [color, setColor] = useState<string>('#ffffff');\n\n  const [isPickingColor, setIsPickingColor] = useState<boolean>(false);\n  const [isCreatingSchedule, setIsCreatingSchedule] = useState<boolean>(false);\n\n  const [createScheduleLoadingState, setCreateScheduleLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [loadScheduleState, setLoadScheduleState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [deleteState, setDeleteState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const navigate = useNavigate();\n  async function submitSchedule() {\n    setCreateScheduleLoadingState(loadingStateEnum.loading);\n    if (isCreatingSchedule) {\n      const data = {\n        fields: {\n          Title: scheduleProperName,\n          scheduleId: createUUID(),\n          scheduleProperName,\n          scheduleDescriptiveName,\n          scheduleColor: color,\n          scheduleData: JSON.stringify(newPeriods),\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.scheduleListId}/items`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateScheduleLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateScheduleLoadingState(loadingStateEnum.failed);\n      }\n    } else if (scheduleListId !== undefined) {\n      const data = {\n        fields: {\n          Title: scheduleProperName,\n          scheduleProperName,\n          scheduleDescriptiveName,\n          scheduleColor: color,\n          scheduleData: JSON.stringify(newPeriods),\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.scheduleListId\n        }/items/${scheduleListId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateScheduleLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateScheduleLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setCreateScheduleLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  async function deleteFunction() {\n    if (scheduleListId !== undefined) {\n      setDeleteState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.scheduleListId\n        }/items/${scheduleListId}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        setDeleteState(loadingStateEnum.success);\n      } else {\n        setDeleteState(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadFunction() {\n    if (id !== undefined) {\n      const result = await getSchedule(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.schedule !== undefined\n      ) {\n        setScheduleProperName(result.schedule.properName);\n        setScheduleDescriptiveName(result.schedule.descriptiveName);\n        setColor(result.schedule.color);\n        setNewPeriods(result.schedule.periods);\n        setScheduleListId(result.listItemId);\n      }\n      setLoadScheduleState(result.result);\n    } else {\n      setLoadScheduleState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (id === 'create') {\n      setIsCreatingSchedule(true);\n    } else {\n      loadFunction();\n    }\n  }, []);\n\n  return (\n    <>\n      {(isCreatingSchedule || loadScheduleState === loadingStateEnum.success) &&\n      deleteState !== loadingStateEnum.success ? (\n        <ScrollView\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/profile/government/calendar/schedule');\n            }}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <View\n            style={{\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Text>{isCreatingSchedule ? 'Create' : 'Edit'} Schedule</Text>\n          </View>\n          <View style={{ height: height * 0.2 }}>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Proper Name:</Text>\n              <TextInput\n                style={{ width }}\n                value={scheduleProperName}\n                onChangeText={setScheduleProperName}\n                placeholder=\"Proper Name ex. Schedule One\"\n              />\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Descriptive Name:</Text>\n              <TextInput\n                style={{ width }}\n                value={scheduleDescriptiveName}\n                onChangeText={setScheduleDescriptiveName}\n                placeholder=\"Descriptive Name ex. Regular Schedule\"\n              />\n            </View>\n            <View\n              style={{ margin: 5, borderRadius: 5, backgroundColor: '#FF6700' }}\n            >\n              <View style={{ margin: 10, flexDirection: 'row' }}>\n                <WarningIcon width={14} height={14} />\n                <Text>\n                  Keep descriptive name short as it is used in the calendar\n                  widget\n                </Text>\n              </View>\n            </View>\n          </View>\n          <Text>New Periods</Text>\n          <ScrollView style={{ height: height * 0.5 }}>\n            {newPeriods.map(period => (\n              <PeriodBlock\n                period={period}\n                periods={newPeriods}\n                onSetNewPeriods={out => {\n                  setNewPeriods([...out]);\n                }}\n              />\n            ))}\n          </ScrollView>\n          {newPeriods.length < 20 ? (\n            <Pressable\n              onPress={() => {\n                setNewPeriods([\n                  ...newPeriods,\n                  {\n                    startHour: new Date().getHours(),\n                    startMinute: new Date().getMinutes(),\n                    endHour: new Date().getHours(),\n                    endMinute: new Date().getMinutes(),\n                    id: createUUID(),\n                  },\n                ]);\n              }}\n            >\n              <Text>Add Period</Text>\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => setIsPickingColor(true)}\n            style={{\n              margin: 10,\n              backgroundColor: '#FFFFFF',\n              shadowColor: 'black',\n              shadowOffset: { width: 1, height: 1 },\n              shadowOpacity: 1,\n              shadowRadius: 5,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              <Text>Color</Text>\n              <View style={{ flexDirection: 'row', marginTop: 10 }}>\n                <View\n                  style={{\n                    width: 32.4,\n                    height: 32.4,\n                    backgroundColor: color,\n                    borderRadius: 7,\n                    borderWidth: 2,\n                    borderColor: Colors.black,\n                  }}\n                />\n                <Pressable style={{ marginLeft: 5 }}>\n                  <ColorPicker\n                    style={{ width: width - 77.4, height: 16.5 }}\n                    value={color}\n                    onComplete={e => setColor(e.hex)}\n                  >\n                    <InputWidget\n                      disableAlphaChannel\n                      defaultFormat=\"HEX\"\n                      formats={['HEX']}\n                      inputTitleStyle={{ display: 'none' }}\n                    />\n                  </ColorPicker>\n                </Pressable>\n                <Modal visible={isPickingColor} animationType=\"slide\">\n                  <View\n                    style={{\n                      alignContent: 'center',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      width,\n                      height,\n                    }}\n                  >\n                    <Pressable\n                      onPress={() => setIsPickingColor(false)}\n                      style={{\n                        position: 'absolute',\n                        top: height * 0.1,\n                        left: width * 0.1,\n                      }}\n                    >\n                      <CloseIcon width={14} height={14} />\n                    </Pressable>\n                    <ColorPicker\n                      style={{ width: width * 0.7 }}\n                      value={color}\n                      onComplete={e => setColor(e.hex)}\n                    >\n                      <View style={{ flexDirection: 'row' }}>\n                        <Preview\n                          hideText\n                          hideInitialColor\n                          style={{\n                            width: width * 0.1,\n                            height: height * 0.5,\n                            borderTopRightRadius: 0,\n                            borderBottomRightRadius: 0,\n                          }}\n                        />\n                        <View\n                          style={{\n                            borderTopRightRadius: 5,\n                            borderBottomRightRadius: 5,\n                            overflow: 'hidden',\n                          }}\n                        >\n                          <Panel1\n                            style={{\n                              width: width * 0.6,\n                              height: height * 0.5,\n                              borderRadius: 0,\n                            }}\n                            renderThumb={e => (\n                              <CustomColorThumb e={e} diameter={15} />\n                            )}\n                          />\n                        </View>\n                      </View>\n                      <HueSlider\n                        renderThumb={e => <CustomColorThumb e={e} />}\n                        style={{ height: 30, marginTop: 10 }}\n                      />\n                    </ColorPicker>\n                    <Pressable\n                      style={{\n                        marginTop: 10,\n                        backgroundColor: Colors.darkGray,\n                        borderRadius: 15,\n                        width: width * 0.5,\n                        alignContent: 'center',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                      }}\n                      onPress={() => setIsPickingColor(false)}\n                    >\n                      <Text style={{ margin: 10, color: Colors.white }}>\n                        OK\n                      </Text>\n                    </Pressable>\n                  </View>\n                </Modal>\n              </View>\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              if (\n                createScheduleLoadingState === loadingStateEnum.notStarted &&\n                isValidHexaCode(color)\n              ) {\n                submitSchedule();\n              }\n            }}\n            style={{\n              margin: 10,\n              backgroundColor: Colors.white,\n              shadowColor: 'black',\n              shadowOffset: { width: 1, height: 1 },\n              shadowOpacity: 1,\n              shadowRadius: 5,\n              borderRadius: 15,\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {!isValidHexaCode(color)\n                ? 'Cannot Start'\n                : createScheduleLoadingState === loadingStateEnum.notStarted\n                ? `${isCreatingSchedule ? 'Create' : 'Save'} Schedule`\n                : createScheduleLoadingState === loadingStateEnum.loading\n                ? 'Loading'\n                : createScheduleLoadingState === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {!isCreatingSchedule ? (\n            <Pressable\n              onPress={() => deleteFunction()}\n              style={{\n                margin: 10,\n                backgroundColor: Colors.danger,\n                borderRadius: 15,\n              }}\n            >\n              <Text style={{ margin: 10 }}>\n                {deleteState == loadingStateEnum.notStarted\n                  ? 'DELETE'\n                  : deleteState === loadingStateEnum.loading\n                  ? 'LOADING'\n                  : 'FAILED'}\n              </Text>\n            </Pressable>\n          ) : null}\n        </ScrollView>\n      ) : (\n        <>\n          {loadScheduleState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Pressable\n                onPress={() => {\n                  navigate('/profile/government/calendar/schedule');\n                }}\n                style={{ position: 'absolute', top: 0, left: 0 }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <ProgressView width={width * 0.1} height={height * 0.1} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {deleteState === loadingStateEnum.success ? (\n                <View\n                  style={{\n                    width,\n                    height,\n                    backgroundColor: Colors.white,\n                  }}\n                >\n                  <Pressable\n                    onPress={() => {\n                      navigate('/profile/government/calendar/schedule');\n                    }}\n                  >\n                    <Text>Back</Text>\n                  </Pressable>\n                  <Text>Schedule Deleted</Text>\n                </View>\n              ) : (\n                <View\n                  style={{\n                    width,\n                    height,\n                    backgroundColor: Colors.white,\n                  }}\n                >\n                  <Pressable\n                    onPress={() => {\n                      navigate('/profile/government/calendar/schedule');\n                    }}\n                  >\n                    <Text>Back</Text>\n                  </Pressable>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PeriodBlock({\n  period,\n  periods,\n  onSetNewPeriods,\n}: {\n  period: periodType;\n  periods: periodType[];\n  onSetNewPeriods: (item: periodType[]) => void;\n}) {\n  const [isSelectingStartTime, setIsSelectingStartTime] =\n    useState<boolean>(false);\n  const [isSelectingEndTime, setIsSelectingEndTime] = useState<boolean>(false);\n\n  function deleteItem(period: periodType) {\n    const newNewPeriodsArray: periodType[] = periods;\n    if (newNewPeriodsArray.length === 1) {\n      newNewPeriodsArray.pop();\n      onSetNewPeriods(newNewPeriodsArray);\n    } else {\n      const indexToRemove = newNewPeriodsArray.findIndex(e => {\n        return e.id === period.id;\n      });\n      if (indexToRemove !== -1) {\n        newNewPeriodsArray.splice(indexToRemove, indexToRemove);\n      } else {\n        // TO DO something went wrong this should not be possible though\n      }\n      onSetNewPeriods(newNewPeriodsArray);\n    }\n  }\n  return (\n    <View\n      key={`Period_${period.id}_${createUUID()}`}\n      style={{\n        margin: 10,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n        marginLeft: 5,\n        marginRight: 5,\n      }}\n    >\n      <View style={{ margin: 10 }}>\n        <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n          <Text>\n            {period.startHour}:{period.startMinute}\n          </Text>\n          <Pressable onPress={() => setIsSelectingStartTime(true)}>\n            <Text>Pick start time</Text>\n          </Pressable>\n        </View>\n        <TimePickerModal\n          hours={period.startHour}\n          minutes={period.startMinute}\n          visible={isSelectingStartTime}\n          onDismiss={() => setIsSelectingStartTime(false)}\n          onConfirm={e => {\n            const newPeriods: periodType[] = periods;\n            const update = newPeriods.findIndex(e => {\n              return e.id === period.id;\n            });\n            if (update !== -1) {\n              newPeriods[update].startHour = e.hours;\n              newPeriods[update].startMinute = e.minutes;\n              onSetNewPeriods([...newPeriods]);\n              setIsSelectingStartTime(false);\n            } else {\n              // TO DO failed\n              setIsSelectingStartTime(false);\n            }\n          }}\n        />\n        <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n          <Text>\n            {period.endHour}:{period.endMinute}\n          </Text>\n          <Pressable onPress={() => setIsSelectingEndTime(true)}>\n            <Text>Pick end time</Text>\n          </Pressable>\n        </View>\n        <TimePickerModal\n          hours={period.endHour}\n          minutes={period.endMinute}\n          visible={isSelectingEndTime}\n          onDismiss={() => setIsSelectingEndTime(false)}\n          onConfirm={e => {\n            const newPeriods: periodType[] = periods;\n            const update = newPeriods.findIndex(e => {\n              return e.id === period.id;\n            });\n            if (update !== -1) {\n              newPeriods[update].endHour = e.hours;\n              newPeriods[update].endMinute = e.minutes;\n              onSetNewPeriods([...newPeriods]);\n              setIsSelectingEndTime(false);\n            } else {\n              // TO DO failed\n              setIsSelectingEndTime(false);\n            }\n          }}\n        />\n        <Pressable\n          onPress={() => deleteItem(period)}\n          style={{ backgroundColor: 'red', borderRadius: 15 }}\n        >\n          <Text style={{ margin: 10 }}>Remove</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction CustomColorThumb({\n  e,\n  diameter,\n}: {\n  e: RenderThumbProps;\n  diameter?: number;\n}) {\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: e.currentColor.value,\n    };\n  });\n\n  return (\n    <Animated.View\n      style={[\n        {\n          width: diameter || 35,\n          height: diameter || 35,\n          borderRadius: diameter ? diameter / 2 : 20,\n          borderWidth: 2,\n          borderColor: 'white',\n        },\n        animatedStyle,\n        e.positionStyle,\n      ]}\n    />\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, ScrollView, FlatList } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../../../../Redux/store';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum, semesters } from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentClasses() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [classState, setClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [classes, setClasses] = useState<classType[]>([]);\n\n  async function getClasses() {\n    const groupResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/groups',\n    );\n    if (groupResult.ok) {\n      const groupResultData = await groupResult.json();\n      if (groupResultData.value !== undefined) {\n        const outputData: classType[] = [];\n        for (let index = 0; index < groupResultData.value.length; index += 1) {\n          outputData.push({\n            name: groupResultData.value[index].displayName,\n            id: groupResultData.value[index].id,\n            periods: [],\n            room: {\n              name: '',\n              id: '',\n            },\n            schoolYearId: '',\n            semester: semesters.semesterOne,\n          });\n        }\n        setClasses(outputData);\n        setClassState(loadingStateEnum.success);\n      } else {\n        setClassState(loadingStateEnum.failed);\n      }\n    } else {\n      setClassState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getClasses();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View>\n        <Pressable onPress={() => navigate('/profile/government/')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Classes</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.85 }}>\n        <>\n          {classState === loadingStateEnum.loading ? (\n            <View>\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {classState === loadingStateEnum.success ? (\n                <FlatList\n                  data={classes}\n                  renderItem={classMap => (\n                    <Pressable\n                      key={`Class_${classMap.item.id}_${createUUID()}`}\n                      onPress={() => {\n                        navigate(\n                          `/profile/government/classes/edit/${classMap.item.id}`,\n                        );\n                      }}\n                      style={{\n                        backgroundColor: '#FFFFFF',\n                        shadowColor: 'black',\n                        shadowOffset: { width: 1, height: 1 },\n                        shadowOpacity: 1,\n                        shadowRadius: 5,\n                        borderRadius: 15,\n                        margin: 10,\n                      }}\n                    >\n                      <Text style={{ margin: 10 }}>{classMap.item.name}</Text>\n                    </Pressable>\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      </ScrollView>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room');\n        }}\n      >\n        <Text>Rooms</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { orgWideGroupID } from '../../PaulyConfig';\nimport store from '../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getSchoolYears(nextLink?: string): Promise<{\n  result: loadingStateEnum;\n  events?: eventType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20or%20id%20eq%20'${\n        store.getState().paulyList.eventDataExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20and%20ep/value%20eq%20'schoolDay')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newEvents: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      if (data.value[index].singleValueExtendedProperties !== undefined) {\n        const eventData: { id: string; value: string }[] =\n          data.value[index].singleValueExtendedProperties;\n        if (\n          eventData.find(e => {\n            return e.id === eventTypeExtensionID;\n          })?.value === 'schoolYear'\n        ) {\n          newEvents.push({\n            id: data.value[index].id,\n            name: data.value[index].subject,\n            startTime: data.value[index].start.dateTime,\n            endTime: data.value[index].end.dateTime,\n            allDay: data.value[index].isAllDay,\n            eventColor: Colors.white,\n            paulyEventType:\n              eventData.find(e => {\n                return e.id === eventTypeExtensionID;\n              })?.value === 'schoolYear'\n                ? 'schoolYear'\n                : undefined,\n            paulyEventData: eventData.find(e => {\n              return e.id === eventDataExtensionID;\n            })?.value,\n            microsoftEvent: true,\n            microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n          });\n        }\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      events: newEvents,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable, StyleProp, ViewStyle } from 'react-native';\nimport React, { ReactNode, useEffect, useState } from 'react';\n\n// On set selected index returns 0 for the first child that is passed down\n\nexport default function Dropdown({\n  children,\n  onSetSelectedIndex,\n  style,\n  selectedIndex,\n  expandedStyle,\n  options,\n  setExpanded,\n  expanded,\n}: {\n  children: ReactNode;\n  selectedIndex: number;\n  onSetSelectedIndex: (item: number) => void;\n  style?: StyleProp<ViewStyle>;\n  expandedStyle?: StyleProp<ViewStyle>;\n  options?: string[];\n  setExpanded?: (item: boolean) => void;\n  expanded?: boolean;\n}) {\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  useEffect(() => {\n    if (expanded !== undefined) {\n      setIsExpanded(expanded);\n    }\n  }, [expanded]);\n  return (\n    <>\n      {isExpanded ? (\n        <View style={[expandedStyle, { position: 'absolute' }]}>\n          {options ? (\n            <>\n              {options.map((option, index) => (\n                <Pressable\n                  key={`Option_${index}`}\n                  onPress={() => {\n                    onSetSelectedIndex(index);\n                    setIsExpanded(false);\n                    if (setExpanded) {\n                      setExpanded(false);\n                    }\n                  }}\n                >\n                  <Text>{option}</Text>\n                </Pressable>\n              ))}\n            </>\n          ) : (\n            <>\n              {React.Children.map(children, (child, index) => (\n                <Pressable\n                  key={`Option_${index}`}\n                  onPress={() => {\n                    onSetSelectedIndex(index);\n                    setIsExpanded(false);\n                    if (setExpanded) {\n                      setExpanded(true);\n                    }\n                  }}\n                >\n                  <>{child}</>\n                </Pressable>\n              ))}\n            </>\n          )}\n        </View>\n      ) : (\n        <Pressable\n          onPress={() => {\n            setIsExpanded(true);\n            if (setExpanded) {\n              setExpanded(true);\n            }\n          }}\n          style={style}\n        >\n          {options ? (\n            <Text>{options[selectedIndex]}</Text>\n          ) : (\n            <>{children[selectedIndex]}</>\n          )}\n        </Pressable>\n      )}\n    </>\n  );\n}\n","import { View, Text, TextInput, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-native';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum, semesters } from '../../../../types';\nimport getSchoolYears from '../../../../Functions/calendar/getSchoolYears';\nimport SegmentedPicker from '../../../../UI/Pickers/SegmentedPicker';\nimport {\n  getEvent,\n  getTimetable,\n} from '../../../../Functions/calendar/calendarFunctionsGraph';\nimport { CloseIcon, WarningIcon } from '../../../../UI/Icons/Icons';\nimport Dropdown from '../../../../UI/Dropdown';\nimport { getRoom, getRooms } from '../../../../Functions/classesFunctions';\n\nexport default function GovernmentClassesEdit() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [selectedSemester, setSelectedSemester] = useState<semesters>(\n    semesters.semesterOne,\n  );\n\n  const [className, setClassName] = useState<string>('');\n\n  // Rooms States\n  const [roomSearchText, setRoomSearchText] = useState<string>('');\n  const [roomsNextLink, setRoomsNextLink] = useState<string | undefined>(\n    undefined,\n  );\n  const [rooms, setRooms] = useState<roomType[]>([]);\n  const [roomsState, setRoomsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedRoom, setSelectedRoom] = useState<roomType | undefined>(\n    undefined,\n  );\n\n  // School Years State\n  const [schoolYearState, setSchoolYearState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [schoolYearNextLink, setSchoolYearNextLink] = useState<\n    string | undefined\n  >(undefined);\n  const [schoolYears, setSchoolYears] = useState<eventType[]>([]);\n  const [selectedSchoolYear, setSelectedSchoolYear] = useState<\n    eventType | undefined\n  >(undefined);\n\n  const [timetableState, setTimetableState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [selectedTimetable, setSelectedTimetable] = useState<\n    timetableType | undefined\n  >(undefined);\n\n  const [classState, setClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const [updateClassState, setUpdateClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [isShowingClassConfirmMenu, setIsShowingClassConfirmMenu] =\n    useState<boolean>(false);\n\n  const [periods, setPeriods] = useState<number[]>([]);\n\n  async function getClass() {\n    setClassState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}?$select=${\n        store.getState().paulyList.classExtensionId\n      },displayName`,\n    ); // TO DO change to class\n    if (result.ok) {\n      const data = await result.json();\n      const extensionData = data[store.getState().paulyList.classExtensionId];\n      if (extensionData !== undefined) {\n        setClassName(extensionData.className);\n        setSelectedSemester(parseInt(extensionData.semesterId));\n        setPeriods(JSON.parse(extensionData.periodData));\n        const eventResult = await getEvent(extensionData.schoolYearEventId);\n        const roomResult = await getRoom(extensionData.roomId);\n        if (\n          eventResult.result === loadingStateEnum.success &&\n          roomResult.result === loadingStateEnum.success &&\n          eventResult.data !== undefined &&\n          roomResult.data !== undefined\n        ) {\n          setSelectedRoom(roomResult.data);\n          setSelectedSchoolYear(eventResult.data);\n        } else {\n          setClassState(loadingStateEnum.failed);\n        }\n      } else {\n        setClassName(data.displayName);\n      }\n      setClassState(loadingStateEnum.success);\n    } else {\n      setClassState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadRooms() {\n    // TO DO figure out if there will be performance issuses in continually getting next page\n    const result = await getRooms(\n      roomsNextLink,\n      roomSearchText !== '' ? roomSearchText : undefined,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRooms(result.data);\n    }\n    setRoomsState(result.result);\n    setRoomsNextLink(result.nextLink);\n  }\n\n  async function loadSchoolYears() {\n    const result = await getSchoolYears(schoolYearNextLink);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.events !== undefined\n    ) {\n      setSchoolYears(result.events);\n    }\n    setSchoolYearState(result.result);\n    setSchoolYearNextLink(result.nextLink);\n  }\n\n  async function loadTimetable() {\n    if (\n      selectedSchoolYear !== undefined &&\n      selectedSchoolYear.paulyEventData !== undefined\n    ) {\n      setTimetableState(loadingStateEnum.loading);\n      const result = await getTimetable(selectedSchoolYear.paulyEventData);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.timetable !== undefined\n      ) {\n        if (result.timetable.days.length !== periods.length) {\n          const newArray = Array.from(Array(result.timetable.days.length));\n          newArray.fill(0, 0, newArray.length);\n          setPeriods(newArray);\n        }\n        setSelectedTimetable(result.timetable);\n      }\n      setTimetableState(result.result);\n    }\n  }\n\n  useEffect(() => {\n    loadTimetable();\n  }, [selectedSchoolYear]);\n\n  useEffect(() => {\n    getClass();\n  }, []);\n\n  async function updateClass() {\n    if (selectedRoom !== undefined && selectedSchoolYear !== undefined) {\n      setUpdateClassState(loadingStateEnum.loading);\n      const data = {};\n      Object.defineProperty(data, store.getState().paulyList.classExtensionId, {\n        value: {\n          className,\n          schoolYearEventId: selectedSchoolYear.id,\n          semesterId: selectedSemester.toString(),\n          roomId: selectedRoom.id,\n          periodData: JSON.stringify(periods),\n        },\n      });\n\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/groups/${id}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setUpdateClassState(loadingStateEnum.success);\n      } else {\n        setUpdateClassState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  useEffect(() => {\n    loadRooms();\n  }, [roomSearchText]);\n\n  useEffect(() => {\n    loadSchoolYears();\n  }, []);\n\n  return (\n    <>\n      <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n        {classState === loadingStateEnum.loading ? (\n          <View>\n            <Pressable\n              onPress={() => {\n                navigate('/profile/government/classes');\n              }}\n            >\n              <Text>Back</Text>\n            </Pressable>\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <View>\n            {classState === loadingStateEnum.success ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  backgroundColor: Colors.white,\n                }}\n              >\n                <Pressable\n                  onPress={() => {\n                    navigate('/profile/government/classes');\n                  }}\n                >\n                  <Text>Back</Text>\n                </Pressable>\n                <Text>Add Class Data</Text>\n                <View>\n                  <Text>Name:</Text>\n                  <TextInput value={className} onChangeText={setClassName} />\n                </View>\n                <Text>School Years</Text>\n                <View style={{ height: height * 0.3 }}>\n                  {schoolYearState === loadingStateEnum.loading ? (\n                    <Text>Loading</Text>\n                  ) : (\n                    <View>\n                      {schoolYearState === loadingStateEnum.success ? (\n                        <ScrollView style={{ height: height * 0.3 }}>\n                          {schoolYears.map(year => (\n                            <Pressable\n                              onPress={() => {\n                                setSelectedSchoolYear(year);\n                              }}\n                            >\n                              <Text>{year.name}</Text>\n                            </Pressable>\n                          ))}\n                        </ScrollView>\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <View\n                  style={{ height: height * 0.3, marginBottom: height * 0.1 }}\n                >\n                  <Text>Periods</Text>\n                  <Text>{periods.toString()}</Text>\n                  {timetableState === loadingStateEnum.notStarted ? (\n                    <Text>Please pick a school year</Text>\n                  ) : (\n                    <View>\n                      {timetableState === loadingStateEnum.loading ? (\n                        <Text>Loading</Text>\n                      ) : (\n                        <View style={{ zIndex: 100 }}>\n                          {timetableState === loadingStateEnum.success &&\n                          selectedTimetable?.days.length === periods.length ? (\n                            <ScrollView\n                              style={{ height: height * 0.3, zIndex: 100 }}\n                            >\n                              <>\n                                {selectedTimetable.days.map((day, dayIndex) => (\n                                  <DayBlock\n                                    day={day}\n                                    dayIndex={dayIndex}\n                                    periods={periods}\n                                    setPeriods={setPeriods}\n                                    selectedTimetable={selectedTimetable}\n                                  />\n                                ))}\n                              </>\n                            </ScrollView>\n                          ) : (\n                            <Text>Failed</Text>\n                          )}\n                        </View>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <SegmentedPicker\n                  selectedIndex={selectedSemester}\n                  setSelectedIndex={setSelectedSemester}\n                  options={['Semester One', 'Semester Two']}\n                  width={width * 0.85}\n                  height={height * 0.1}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                  {selectedRoom === undefined ? (\n                    <WarningIcon width={12} height={12} outlineColor=\"red\" />\n                  ) : null}\n                  <Text>Select Room</Text>\n                </View>\n                <View style={{ height: height * 0.3 }}>\n                  {roomsState === loadingStateEnum.loading ? (\n                    <Text>Loading</Text>\n                  ) : (\n                    <View>\n                      {roomsState === loadingStateEnum.success ? (\n                        <ScrollView style={{ height: height * 0.3 }}>\n                          {rooms.map(room => (\n                            <Pressable\n                              onPress={() => {\n                                setSelectedRoom(room);\n                              }}\n                            >\n                              <Text>{room.name}</Text>\n                            </Pressable>\n                          ))}\n                        </ScrollView>\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <Pressable\n                  onPress={() => {\n                    setIsShowingClassConfirmMenu(true);\n                  }}\n                >\n                  <Text>Create Class</Text>\n                </Pressable>\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n      {isShowingClassConfirmMenu ? (\n        <View\n          style={{\n            width: width * 0.8,\n            height: height * 0.8,\n            top: height * 0.1,\n            left: width * 0.1,\n            borderRadius: 15,\n            backgroundColor: Colors.white,\n            position: 'absolute',\n            shadowColor: 'black',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              setIsShowingClassConfirmMenu(false);\n            }}\n          >\n            <CloseIcon width={14} height={14} />\n          </Pressable>\n          <Text>Create Class</Text>\n          <Text>Name: {className}</Text>\n          <Text>Room: {selectedRoom?.name}</Text>\n          <Text>School Year: {selectedSchoolYear?.name}</Text>\n          <Text>\n            Semester:{' '}\n            {selectedSemester === semesters.semesterOne ? 'One' : 'Two'}\n          </Text>\n          <Pressable\n            onPress={() => {\n              updateClass();\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {updateClassState === loadingStateEnum.cannotStart\n                ? 'Cannot Update Class'\n                : updateClassState === loadingStateEnum.notStarted\n                ? 'Update Class'\n                : updateClassState === loadingStateEnum.loading\n                ? 'Loading'\n                : updateClassState === loadingStateEnum.success\n                ? 'Updated Class'\n                : 'Failed To Update Class'}\n            </Text>\n          </Pressable>\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nfunction DayBlock({\n  day,\n  periods,\n  dayIndex,\n  setPeriods,\n  selectedTimetable,\n}: {\n  day: schoolDayType;\n  dayIndex: number;\n  periods: number[];\n  setPeriods: (item: number[]) => void;\n  selectedTimetable: timetableType;\n}) {\n  const [selected, setSelected] = useState<boolean>(false);\n  return (\n    <View\n      key={`Day_${day.id}`}\n      style={{ flexDirection: 'row', margin: 10, zIndex: selected ? 200 : 100 }}\n    >\n      <Text>{day.name}</Text>\n      <View>\n        {selectedTimetable?.schedules.length >= 1 &&\n        periods.length >= dayIndex ? (\n          <Dropdown\n            selectedIndex={periods[dayIndex]}\n            onSetSelectedIndex={index => {\n              if (periods.length >= dayIndex) {\n                const newPeriods = periods;\n                newPeriods[dayIndex] = index;\n                setPeriods([...newPeriods]);\n              }\n            }}\n            expanded={selected}\n            setExpanded={e => {\n              setSelected(e);\n            }}\n            style={{ backgroundColor: Colors.white, zIndex: -2 }}\n            expandedStyle={{\n              backgroundColor: 'blue',\n              zIndex: 101,\n              position: 'absolute',\n            }}\n            options={[\n              'unchosen',\n              ...Array.from(selectedTimetable.schedules[0].periods).flatMap(\n                (_item, index) => (index + 1).toString(),\n              ),\n            ]}\n            children=\"\"\n          />\n        ) : (\n          <Text>Something went wrong please reload the page.</Text>\n        )}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput, Button, Switch } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../Functions/ultility/microsoftAssets';\nimport MicrosoftFilePicker from '../../../UI/MicrosoftFilePicker';\nimport store, { RootState } from '../../../Redux/store';\nimport getCurrentPaulyData from '../../../Functions/homepage/getCurrentPaulyData';\nimport { Colors, loadingStateEnum } from '../../../types';\n\nexport default function GovernmentHomePage() {\n  const { paulyDataListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n\n  // Loading States\n  const [loadContentLoadingState, setLoadContentLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [newMessageState, setNewMessageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  // New Data\n  const [newMessageText, setNewMessageText] = useState(\n    store.getState().paulyData.message,\n  );\n  const [newAnimationSpeed, setNewAnnimationSpeed] = useState(\n    store.getState().paulyData.animationSpeed,\n  );\n  const [selectedPowerpoint, setSelectedPowerpoint] = useState<\n    microsoftFileType | undefined\n  >(undefined);\n  const [isAutoUpdatingText, setIsAutoUpdatingText] = useState<boolean>(false);\n\n  async function loadCurrentPaulyData() {\n    await getCurrentPaulyData();\n    setLoadContentLoadingState(loadingStateEnum.success);\n  }\n  async function createShareId(\n    item: microsoftFileType,\n  ): Promise<string | undefined> {\n    const data = {\n      type: 'view',\n      scope: 'organization',\n    };\n    const result = await callMsGraph(\n      `${item.callPath}/createLink`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      return data.shareId;\n    }\n    return undefined;\n  }\n  async function updatePaulyData(key: string, data: string) {\n    const dataOut: any = {};\n    dataOut[key] = data;\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${paulyDataListId}/items/1/fields`,\n      'PATCH',\n      JSON.stringify(dataOut),\n    );\n    if (result.ok) {\n      setNewMessageState(loadingStateEnum.success);\n    } else {\n      setNewMessageState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    const storeText = newMessageText;\n    setTimeout(() => {\n      if (isAutoUpdatingText && newMessageText === storeText) {\n        updatePaulyData('message', newMessageText);\n      }\n    }, 2000);\n  }, [newMessageText]);\n\n  useEffect(() => {\n    loadCurrentPaulyData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text style={{ marginLeft: 'auto', marginRight: 'auto' }}>Home Page</Text>\n      <View>\n        <View style={{ flexDirection: 'row' }}>\n          <TextInput\n            value={newMessageText}\n            onChangeText={e => {\n              setNewMessageText(e);\n            }}\n          />\n        </View>\n        {isAutoUpdatingText ? (\n          <View style={{ height: 14 }} />\n        ) : (\n          <Pressable\n            onPress={() => {\n              updatePaulyData('message', newMessageText);\n            }}\n          >\n            <Text>Update Text</Text>\n          </Pressable>\n        )}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Is auto updating text: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isAutoUpdatingText ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={setIsAutoUpdatingText}\n            value={isAutoUpdatingText}\n          />\n        </View>\n      </View>\n      <View style={{ marginBottom: 20 }}>\n        <View>\n          <Text style={{ margin: 5 }}>\n            Select Powerpoint: {selectedPowerpoint?.name}\n          </Text>\n        </View>\n        <MicrosoftFilePicker\n          height={height * 0.6 - 15}\n          width={width}\n          onSelectedFile={selectedFile => {\n            setSelectedPowerpoint(selectedFile);\n          }}\n        />\n      </View>\n      <Pressable\n        onPress={async () => {\n          if (selectedPowerpoint !== undefined) {\n            const shareId = await createShareId(selectedPowerpoint);\n            if (shareId !== undefined) {\n              updatePaulyData('powerpointId', shareId);\n            }\n          }\n        }}\n      >\n        <Text>Save Changes</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import React, { ReactNode, useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { Image, StyleSheet, View, Pressable, Text } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport store, { RootState } from '../Redux/store';\nimport {\n  BookIcon,\n  CalendarIcon,\n  GovernmentIcon,\n  HomeIcon,\n  MedalIcon,\n  PersonIcon,\n  SportsIcon,\n  StudentSearchIcon,\n} from './Icons/Icons';\nimport { expandedModeSlice } from '../Redux/reducers/expandedModeReducer';\nimport { isShowingProfileBlockSlice } from '../Redux/reducers/isShowingProfileBlockReducer';\nimport { Colors } from '../types';\n\nfunction NavBarBlock({\n  des,\n  expandedMode,\n  blockLength,\n  children,\n  text,\n  width,\n  setIsExpandedMode,\n}: {\n  des: string;\n  expandedMode: boolean;\n  blockLength: number;\n  text: string;\n  children: ReactNode;\n  width: number;\n  setIsExpandedMode: () => void;\n}) {\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const navigation = useNavigate();\n  return (\n    <Pressable\n      style={{\n        height: blockLength,\n        width: expandedMode ? width * 2.5 : width,\n        backgroundColor: isHover ? Colors.darkGray : 'transparent',\n        alignItems: 'center',\n      }}\n      onPress={() => {\n        navigation(des);\n      }}\n      onHoverIn={() => {\n        setIsHover(true);\n        setIsExpandedMode();\n      }}\n      onHoverOut={() => {\n        setIsHover(false);\n      }}\n    >\n      <View\n        style={[\n          styles.LinkStyle,\n          {\n            height: blockLength,\n            width: expandedMode ? blockLength * 2.5 : blockLength,\n            margin: 0,\n            position: expandedMode ? 'absolute' : 'relative',\n            left: expandedMode ? (width - blockLength) / 2 : undefined,\n            alignItems: 'center',\n          },\n        ]}\n      >\n        <View\n          id=\"ViewHigh\"\n          style={{\n            width: expandedMode ? blockLength * 2.5 : blockLength,\n            flexDirection: 'row',\n            margin: 'auto',\n            padding: 0,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View\n            style={[\n              {\n                height: blockLength,\n                width: blockLength,\n                position: expandedMode ? 'absolute' : 'relative',\n                left: expandedMode ? 0 : undefined,\n                alignItems: 'center',\n                justifyContent: 'center',\n              },\n            ]}\n          >\n            <>{children}</>\n          </View>\n          {expandedMode ? (\n            <Text\n              style={{\n                position: 'absolute',\n                left: blockLength,\n                color: Colors.white,\n                marginLeft: 8,\n              }}\n            >\n              {text}\n            </Text>\n          ) : null}\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nexport default function NavBarComponent({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const { uri, displayName } = useSelector(\n    (state: RootState) => state.microsoftProfileData,\n  );\n  const expandedMode = useSelector((state: RootState) => state.expandedMode);\n  const [blockLength, setBlockLength] = useState<number>(0);\n  const [iconLength, setIconLength] = useState<number>(0);\n  const navigation = useNavigate();\n  const dispatch = useDispatch();\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n\n  useEffect(() => {\n    // checking to see if the width or the height is going to be the limiting factor.\n    if (width * 0.6 > (height * 0.6) / 8) {\n      setBlockLength((height * 0.6) / 8);\n    } else {\n      setBlockLength(width * 0.6);\n    }\n    if (width * 0.7 > (height * 0.7) / 8) {\n      setIconLength((height * 0.6) / 8);\n    } else {\n      setIconLength(width * 0.5);\n    }\n  }, [width, height]);\n\n  const [fontsLoaded] = useFonts({\n    'Gochi Hand': require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      id=\"Pressable\"\n      onHoverIn={() => {\n        dispatch(expandedModeSlice.actions.setExpandedMode(true));\n      }}\n      onHoverOut={() => {\n        dispatch(expandedModeSlice.actions.setExpandedMode(false));\n      }}\n    >\n      <View\n        id=\"Main\"\n        style={{\n          backgroundColor: Colors.maroon,\n          height,\n          overflow: 'hidden',\n          width: expandedMode ? width * 2.5 : width,\n          alignItems: 'center',\n        }}\n      >\n        <Pressable\n          style={[\n            styles.LinkStyle,\n            {\n              height: blockLength,\n              width: expandedMode ? width * 2.5 : width,\n              margin: 0,\n              marginTop: blockLength * 0.4,\n              marginBottom: blockLength * 0.4,\n            },\n          ]}\n          onPress={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(!expandedMode));\n          }}\n          onHoverIn={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              height: blockLength,\n              position: expandedMode ? 'absolute' : 'relative',\n              left: expandedMode ? (width - blockLength) / 2 : undefined,\n            }}\n            pointerEvents=\"none\"\n          >\n            <View\n              style={{\n                position: expandedMode ? 'absolute' : 'relative',\n                left: expandedMode ? 0 : undefined,\n              }}\n            >\n              <Image\n                source={require('../../assets/images/PaulyLogo.png')}\n                resizeMode=\"contain\"\n                style={{ width: blockLength, height: blockLength }}\n              />\n            </View>\n            {expandedMode ? (\n              <Text\n                style={{\n                  fontFamily: 'Gochi Hand',\n                  color: Colors.white,\n                  position: 'absolute',\n                  top: blockLength * 0.3,\n                  left: blockLength * 0.65,\n                  fontSize: blockLength * 0.7,\n                  textShadowColor: 'rgba(0, 0, 0, 1)',\n                  textShadowOffset: { width: 4, height: 2 },\n                  textShadowRadius: 0,\n                }}\n                selectable={false}\n              >\n                auly\n              </Text>\n            ) : null}\n          </View>\n        </Pressable>\n        <NavBarBlock\n          des=\"/notifications\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Notifications\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <HomeIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/resources\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Resources\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <BookIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/commissions\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Commissions\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <MedalIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/calendar\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Calendar\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <CalendarIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/sports\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Sports\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <Image\n            source={require('../../assets/images/Football.png')}\n            resizeMode=\"contain\"\n            style={{ width: iconLength, height: iconLength }}\n          />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/students\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Students\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <StudentSearchIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        {isGovernmentMode ? (\n          <NavBarBlock\n            des=\"/profile/government\"\n            expandedMode={expandedMode}\n            blockLength={blockLength}\n            text=\"Government\"\n            width={width}\n            setIsExpandedMode={() => {\n              dispatch(expandedModeSlice.actions.setExpandedMode(true));\n            }}\n          >\n            <GovernmentIcon width={iconLength} height={iconLength} />\n          </NavBarBlock>\n        ) : null}\n        <Pressable\n          onHoverIn={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n          onPress={() => {\n            dispatch(\n              isShowingProfileBlockSlice.actions.setIsShowingProfileBlock(\n                !store.getState().isShowingProfileBlock,\n              ),\n            );\n          }}\n          style={[\n            styles.LinkStyle,\n            {\n              height: blockLength,\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              margin: 0,\n              position: 'absolute',\n              left: expandedMode ? (width - blockLength) / 2 : undefined,\n              bottom: height * 0.05,\n            },\n          ]}\n        >\n          <View\n            style={{\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              height: iconLength,\n              position: expandedMode ? 'absolute' : 'relative',\n              left: expandedMode ? 0 : undefined,\n              flexDirection: 'row',\n            }}\n          >\n            {uri !== '' ? (\n              <Image\n                source={{ uri }}\n                style={{\n                  width: iconLength,\n                  height: iconLength,\n                  borderRadius: iconLength / 2,\n                }}\n              />\n            ) : (\n              <PersonIcon width={iconLength} height={iconLength} />\n            )}\n            <View\n              style={{\n                height: iconLength,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                marginLeft: blockLength - iconLength,\n              }}\n            >\n              {expandedMode ? (\n                <Text\n                  adjustsFontSizeToFit\n                  numberOfLines={1}\n                  style={{\n                    color: Colors.white,\n                    marginLeft: 8,\n                    width: blockLength * 2.5,\n                  }}\n                  selectable={false}\n                >\n                  {displayName}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n        </Pressable>\n      </View>\n    </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  LinkStyle: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 'auto',\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../Redux/store';\nimport { Colors } from '../types';\n\nexport default function PageNotFound() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [isBottonHover, setIsButtonHover] = useState<boolean>(false);\n  const navigate = useNavigate();\n  return (\n    <View\n      style={{\n        width,\n        height,\n        backgroundColor: Colors.white,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Text>Page Not Found</Text>\n      <Pressable\n        onPress={() => {\n          navigate('/');\n        }}\n        onHoverIn={() => {\n          setIsButtonHover(true);\n        }}\n        onHoverOut={() => {\n          setIsButtonHover(false);\n        }}\n        style={{\n          height: height * 0.09,\n          width: width * 0.5,\n          borderRadius: 50,\n          backgroundColor: isBottonHover ? Colors.darkGray : Colors.white,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          shadowColor: isBottonHover ? Colors.white : 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginTop: width < height ? width * 0.1 : height * 0.1,\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            color: isBottonHover ? Colors.white : 'black',\n            fontWeight: 'bold',\n          }}\n        >\n          RETURN HOME\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { clientId } from '../../PaulyConfig';\n\nexport const paulyListData = {\n  displayName: 'PaulyList',\n  // \"name\":\"PaulyList\",\n  columns: [\n    {\n      name: 'studentFilesListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'commissionListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'commissionSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'paulyDataListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsApprovedSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetablesListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'resourceListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'dressCodeListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'roomListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'classExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'eventTypeExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'eventDataExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'resourceExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'userExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'noClassListId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const studentFilesData = {\n  displayName: 'StudentFiles',\n  columns: [\n    {\n      name: 'createdTime',\n      text: {},\n    },\n    {\n      name: 'itemId', // This is the item id not drive item id\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selected',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'userId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const commissionsData = {\n  displayName: 'Commissions',\n  columns: [\n    {\n      name: 'startDate',\n      text: {},\n    },\n    {\n      name: 'endDate',\n      text: {},\n    },\n    {\n      name: 'timed',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'points',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'hidden',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'maxNumberOfClaims',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'allowMultipleSubmissions',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'commissionID',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'value',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'coordinateLat',\n      number: {},\n    },\n    {\n      name: 'coordinateLng',\n      number: {},\n    },\n    {\n      name: 'proximity',\n      number: {},\n    },\n    {\n      name: 'qrCodeData',\n      text: { allowMultipleLines: true },\n    },\n    {\n      name: 'postTeamId',\n      text: {},\n    },\n    {\n      name: 'postChannelId',\n      text: {},\n    },\n    {\n      name: 'postId',\n      text: {},\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const commissionsSubmissionsData = {\n  displayName: 'CommissionsSubmissions',\n  columns: [\n    {\n      name: 'userId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submittedTime',\n      required: true,\n      text: {},\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'submissionApproved',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionReviewed',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'commissionId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionData',\n      text: { allowMultipleLines: true },\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const paulyDataData = {\n  displayName: 'PaulyData',\n  columns: [\n    {\n      name: 'animationSpeed',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'message',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'powerpointId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const scheduleData = {\n  displayName: 'Schedule',\n  columns: [\n    {\n      name: 'scheduleId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'scheduleProperName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleDescriptiveName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleColor',\n      text: { maxLength: 9 },\n      required: true,\n    },\n    {\n      name: 'scheduleData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsData = {\n  displayName: 'Sports',\n  columns: [\n    {\n      name: 'sportName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportSvg',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'sportId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsApprovedSubmissionsData = {\n  displayName: 'SportsApprovedSubmissions',\n  columns: [\n    {\n      name: 'fileId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'fileType',\n      number: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'caption',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedSportId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedTeamId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsSubmissionsData = {\n  displayName: 'SportsSubmissions',\n  columns: [\n    {\n      name: 'accepted',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'reviewed',\n      boolean: {},\n      indexed: true,\n      required: true,\n    },\n    {\n      name: 'user',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timeCreated',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'fileId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'fileType',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'selectedSportId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n    {\n      name: 'selectedTeamId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const timetablesData = {\n  displayName: 'Timetables',\n  columns: [\n    {\n      name: 'timetableName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetableId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'timetableDataDays',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'timetableDataSchedules',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'timetableDefaultScheduleId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetableDressCodeId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const resourceData = {\n  displayName: 'Resources',\n  columns: [\n    {\n      name: 'resourceGroupId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'resourceConversationId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const dressCodeData = {\n  displayName: 'DressCode',\n  columns: [\n    {\n      name: 'dressCodeId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'dressCodeName',\n      text: {},\n    },\n    {\n      name: 'dressCodeData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'dressCodeIncentivesData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const roomData = {\n  displayName: 'Rooms',\n  columns: [\n    {\n      name: 'roomId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'roomName',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const noClassData = {\n  displayName: 'No Class',\n  columns: [\n    {\n      name: 'classGroupId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'classDate',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\n\n// Extensions\nexport const paulyClassExtensionData = {\n  id: 'paulyClass',\n  description: 'Pauly Class Data',\n  targetTypes: ['Group'],\n  owner: clientId,\n  properties: [\n    {\n      name: 'className', // This property will be optional in the future\n      type: 'String',\n    },\n    {\n      name: 'schoolYearEventId',\n      type: 'String',\n    },\n    {\n      name: 'semesterId',\n      type: 'String',\n    },\n    {\n      name: 'roomId',\n      type: 'String',\n    },\n    {\n      name: 'periodData',\n      type: 'String', // An Array as long as the number of days in the cycle\n    },\n  ],\n};\n\n// Add data array\nexport const addDataArray: addDataType[] = [\n  {\n    data: paulyClassExtensionData,\n    urlOne: 'https://graph.microsoft.com/v1.0/schemaExtensions',\n    id: 'classExtensionId',\n  },\n  {\n    data: studentFilesData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'studentFilesListId',\n  },\n  {\n    data: commissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'commissionListId',\n  },\n  {\n    data: commissionsSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'commissionSubmissionsListId',\n  },\n  {\n    data: scheduleData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'scheduleListId',\n  },\n  {\n    data: sportsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsListId',\n  },\n  {\n    data: sportsApprovedSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsApprovedSubmissionsListId',\n  },\n  {\n    data: sportsSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsSubmissionsListId',\n  },\n  {\n    data: timetablesData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'timetablesListId',\n  },\n  {\n    data: resourceData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'resourceListId',\n  },\n  {\n    data: dressCodeData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'dressCodeListId',\n  },\n  {\n    data: roomData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'roomListId',\n  },\n  {\n    data: noClassData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'noClassListId',\n  },\n];\n","import { loadingStateEnum } from '../../types';\nimport createUUID from '../ultility/createUUID';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport {\n  paulyListData,\n  paulyDataData,\n  addDataArray,\n} from './initializePaulyData';\n\nexport async function initializePaulyPartOne(\n  secondUserId: string,\n): Promise<{ result: loadingStateEnum; groupId?: string }> {\n  const currentUsersIdResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me',\n    'GET',\n  );\n  if (currentUsersIdResult.ok) {\n    const currentUsersIdResultData = await currentUsersIdResult.json();\n    const createGroupData = {\n      description: \"Pauly's Team Containing all it's data\",\n      displayName: 'Pauly',\n      groupTypes: ['Unified', 'DynamicMembership'],\n      mailEnabled: true,\n      mailNickname: 'pauly',\n      visibility: 'HiddenMembership',\n      membershipRule: '(user.accountEnabled -eq true)',\n      membershipRuleProcessingState: 'on',\n      'owners@odata.bind': [\n        `https://graph.microsoft.com/v1.0/users/${currentUsersIdResultData.id}`,\n        `https://graph.microsoft.com/v1.0/users/${secondUserId}`,\n      ],\n      securityEnabled: false,\n    };\n    const createGroupResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/groups',\n      'POST',\n      JSON.stringify(createGroupData),\n    );\n    if (createGroupResult.ok) {\n      const createGroupResultData = await createGroupResult.json();\n      return {\n        result: loadingStateEnum.success,\n        groupId: createGroupResultData.id,\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function initializePaulyPartTwo(\n  groupId: string,\n): Promise<loadingStateEnum> {\n  const teamsData = {\n    'template@odata.bind':\n      \"https://graph.microsoft.com/v1.0/teamsTemplates('standard')\",\n    'group@odata.bind': `https://graph.microsoft.com/v1.0/groups('${groupId}')`,\n  };\n  const createTeamResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/teams',\n    'POST',\n    JSON.stringify(teamsData),\n  );\n  if (createTeamResult.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n\nexport async function initializePaulyPartThree(\n  groupId: string,\n  update?: string[],\n): Promise<loadingStateEnum> {\n  const getTeam = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${groupId}`,\n  );\n  if (!getTeam.ok) {\n    return loadingStateEnum.failed;\n  }\n  const getTeamData = await getTeam.json();\n\n  const getRootSiteIdResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${getTeamData.id}/sites/root`,\n  );\n  if (!getRootSiteIdResult.ok) {\n    return loadingStateEnum.failed;\n  }\n  const getRootSiteIdResultData = await getRootSiteIdResult.json();\n\n  const paulyListNewData: { fields: any } = { fields: { Title: 'Main' } };\n\n  // Check if already data\n  let secondRun: boolean = false;\n  const getPaulyListResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items/1?expand=fields`,\n  );\n  if (!getPaulyListResult.ok && getPaulyListResult.status !== 404) {\n    return loadingStateEnum.failed;\n  }\n  const getPaulyListResultData = await getPaulyListResult.json();\n  if (getPaulyListResult.status !== 404) {\n    if (getPaulyListResultData.fields !== undefined) {\n      secondRun = true;\n      if (getPaulyListResultData.fields !== undefined) {\n        if (getPaulyListResultData.fields.paulyDataListId !== undefined) {\n          paulyListNewData.fields.paulyDataListId =\n            getPaulyListResultData.fields.paulyDataListId;\n        }\n      }\n    }\n  }\n\n  // TO DO think about 409 if only half  of list where created and then interuption\n  for (let index = 0; index < addDataArray.length; index += 1) {\n    const callData = addDataArray[index];\n    if (getPaulyListResultData.fields !== undefined) {\n      if (getPaulyListResultData.fields[callData.id] !== undefined) {\n        paulyListNewData.fields[callData.id] =\n          getPaulyListResultData.fields[callData.id];\n      }\n    }\n    if (\n      paulyListNewData.fields[callData.id] === undefined ||\n      update?.includes(callData.id)\n    ) {\n      const result = await callMsGraph(\n        callData.urlTwo !== undefined\n          ? callData.urlOne + getRootSiteIdResultData.id + callData.urlTwo\n          : callData.urlOne,\n        'POST',\n        JSON.stringify(callData.data),\n      );\n      if (!result.ok) {\n        return loadingStateEnum.failed;\n      }\n      const data = await result.json();\n      paulyListNewData.fields[callData.id] = data.id;\n    }\n  }\n  if (getPaulyListResultData.fields !== undefined) {\n    if (getPaulyListResultData.fields.eventTypeExtensionId !== undefined) {\n      paulyListNewData.fields.eventTypeExtensionId =\n        getPaulyListResultData.fields.eventTypeExtensionId;\n    } else {\n      paulyListNewData.fields.eventTypeExtensionId = `String {${createUUID()}} Name eventType`;\n    }\n  } else {\n    paulyListNewData.fields.eventTypeExtensionId = `String {${createUUID()}} Name eventType`;\n  }\n\n  if (getPaulyListResultData.fields !== undefined) {\n    if (getPaulyListResultData.fields.eventDataExtensionId !== undefined) {\n      paulyListNewData.fields.eventDataExtensionId =\n        getPaulyListResultData.fields.eventDataExtensionId;\n    } else {\n      paulyListNewData.fields.eventDataExtensionId = `String {${createUUID()}} Name eventData`;\n    }\n    if (getPaulyListResultData.fields.resourceExtensionId !== undefined) {\n      paulyListNewData.fields.resourceExtensionId =\n        getPaulyListResultData.fields.resourceExtensionId;\n    } else {\n      paulyListNewData.fields.resourceExtensionId = `String {${createUUID()}} Name resourceData`;\n    }\n  } else {\n    paulyListNewData.fields.eventDataExtensionId = `String {${createUUID()}} Name eventData`;\n    paulyListNewData.fields.resourceExtensionId = `String {${createUUID()}} Name resourceData`;\n  }\n\n  if (paulyListNewData.fields.paulyDataListId === undefined) {\n    const paulyDataResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists`,\n      'POST',\n      JSON.stringify(paulyDataData),\n    );\n    if (!paulyDataResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    const paulyDataResultData = await paulyDataResult.json();\n    const paulyDataNewData = {\n      fields: {\n        Title: 'Main',\n        animationSpeed: 10,\n        message: 'Pauly',\n        powerpointId: 'unset',\n      },\n    };\n    const setPaulyDataNewDataResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/${paulyDataResultData.id}/items`,\n      'POST',\n      JSON.stringify(paulyDataNewData),\n    );\n    if (!setPaulyDataNewDataResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    paulyListNewData.fields.paulyDataListId = paulyDataResultData.id;\n  }\n  if (secondRun === false) {\n    const paulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists`,\n      'POST',\n      JSON.stringify(paulyListData),\n    );\n    if (!paulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    const addPaulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items`,\n      'POST',\n      JSON.stringify(paulyListNewData),\n    );\n    if (!addPaulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n  } else {\n    const addPaulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items/1`,\n      'PATCH',\n      JSON.stringify(paulyListNewData),\n    );\n    const ourData = await addPaulyListResult.json();\n    if (!addPaulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n  }\n  return loadingStateEnum.success;\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, TextInput, FlatList } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport {\n  initializePaulyPartOne,\n  initializePaulyPartThree,\n  initializePaulyPartTwo,\n} from '../../../../Functions/initializePauly/initializePauly';\nimport { RootState } from '../../../../Redux/store';\nimport { addDataArray } from '../../../../Functions/initializePauly/initializePaulyData';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\n\nenum initStage {\n  notStarted,\n  partOne,\n  partTwoLoad,\n  partTwo,\n  partThreeLoad,\n  partThree,\n  done,\n}\n\nexport default function GovernmentAdmin() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [selectedUser, setSelectedUser] = useState<\n    microsoftUserType | undefined\n  >(undefined);\n  const [timeLeft, setTimeLeft] = useState<string>('');\n  const [timeElapsed, setTimeElapsed] = useState<string>('Not Started');\n  const [createdGroupId, setCreatedGroupId] = useState<string>('');\n  const [selectedUpdates, setSelectedUpdates] = useState<string[]>([]);\n  const navigate = useNavigate();\n\n  // Start Times\n  const [startTime, setStartTime] = useState<Date>(new Date());\n  const [partOneStartTime, setPartOneStartTime] = useState<Date>(new Date());\n  const [partTwoStartTime, setPartTwoStartTime] = useState<Date>(new Date());\n\n  // Result\n  const [initResult, setInitResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [initTwoResult, setInitTwoResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [initThreeResult, setInitThreeResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [currentInitStage, setCurrentInitStage] = useState<initStage>(\n    initStage.notStarted,\n  );\n\n  async function initializePauly() {\n    if (selectedUser !== undefined) {\n      setStartTime(new Date());\n      setCurrentInitStage(initStage.partOne);\n      setInitResult(loadingStateEnum.loading);\n      const partOneResult = await initializePaulyPartOne(selectedUser.id);\n      if (\n        partOneResult.result === loadingStateEnum.success &&\n        partOneResult.groupId !== undefined\n      ) {\n        setCreatedGroupId(partOneResult.groupId);\n        setCurrentInitStage(initStage.partTwoLoad);\n        setPartOneStartTime(new Date());\n        const partTwoResult = await new Promise<loadingStateEnum>(\n          (resolve, reject) => {\n            setTimeout(async () => {\n              if (partOneResult.groupId !== undefined) {\n                setCurrentInitStage(initStage.partTwo);\n                const secondResult = await initializePaulyPartTwo(\n                  partOneResult.groupId,\n                );\n                resolve(secondResult);\n              } else {\n                setCurrentInitStage(initStage.done);\n                setInitResult(loadingStateEnum.failed);\n                reject();\n              }\n            }, 900000);\n          },\n        );\n        if (partTwoResult === loadingStateEnum.success) {\n          setCurrentInitStage(initStage.partThreeLoad);\n          setPartTwoStartTime(new Date());\n          const partThreeResult = await new Promise<loadingStateEnum>(\n            (resolve, reject) => {\n              setTimeout(async () => {\n                if (partOneResult.groupId !== undefined) {\n                  setCurrentInitStage(initStage.partThree);\n                  const thirdResult = await initializePaulyPartThree(\n                    partOneResult.groupId,\n                  );\n                  resolve(thirdResult);\n                } else {\n                  setCurrentInitStage(initStage.done);\n                  setInitResult(loadingStateEnum.failed);\n                  reject();\n                }\n              }, 900000);\n            },\n          );\n          if (partThreeResult === loadingStateEnum.success) {\n            setInitResult(loadingStateEnum.success);\n            setCurrentInitStage(initStage.done);\n          } else {\n            setCurrentInitStage(initStage.done);\n            setInitResult(loadingStateEnum.failed);\n          }\n        } else {\n          setCurrentInitStage(initStage.done);\n          setInitResult(loadingStateEnum.failed);\n        }\n      } else {\n        setCurrentInitStage(initStage.done);\n        setInitResult(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function initializePaulyFromPartTwo() {\n    if (\n      createdGroupId !== '' &&\n      initTwoResult === loadingStateEnum.notStarted\n    ) {\n      setInitTwoResult(loadingStateEnum.loading);\n      const secondResult = await initializePaulyPartTwo(createdGroupId);\n      if (secondResult === loadingStateEnum.success) {\n        setInitTwoResult(loadingStateEnum.success);\n      } else {\n        setInitTwoResult(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function initializePaulyFromPartThree() {\n    if (\n      createdGroupId !== '' &&\n      initThreeResult === loadingStateEnum.notStarted\n    ) {\n      setStartTime(new Date());\n      setCurrentInitStage(initStage.partThree);\n      setInitThreeResult(loadingStateEnum.loading);\n      const result = await initializePaulyPartThree(\n        createdGroupId,\n        selectedUpdates,\n      );\n      if (result === loadingStateEnum.success) {\n        setInitThreeResult(loadingStateEnum.success);\n        setCurrentInitStage(initStage.done);\n      } else {\n        setInitThreeResult(loadingStateEnum.failed);\n        setCurrentInitStage(initStage.done);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (\n      currentInitStage === initStage.partTwoLoad ||\n      currentInitStage === initStage.partThreeLoad\n    ) {\n      const interval: ReturnType<typeof setInterval> = setInterval(() => {\n        let miliSecondsPassed = new Date().getTime() - startTime.getTime();\n        if (currentInitStage === initStage.partTwoLoad) {\n          miliSecondsPassed = new Date().getTime() - partOneStartTime.getTime();\n        } else if (currentInitStage === initStage.partThreeLoad) {\n          miliSecondsPassed = new Date().getTime() - partTwoStartTime.getTime();\n        }\n\n        const miliSecondsLeft = 900000 - miliSecondsPassed;\n        const totalSecondsLeft = miliSecondsLeft / 1000;\n        let minutesLeft: number = Math.floor(totalSecondsLeft / 60);\n        let secondsLeft: number = Math.ceil(totalSecondsLeft % 60);\n        if (secondsLeft === 60) {\n          minutesLeft += 1;\n          secondsLeft = 0;\n        }\n        let minutesLeftString: string = minutesLeft.toString();\n        let secondsLeftString: string = secondsLeft.toString();\n        if (minutesLeft <= 9) {\n          minutesLeftString = `0${minutesLeftString}`;\n        }\n        if (secondsLeft <= 9) {\n          secondsLeftString = `0${secondsLeft}`;\n        }\n        setTimeLeft(`${minutesLeftString}:${secondsLeftString}`);\n        if (minutesLeft <= -1) {\n          setTimeLeft('0:0');\n          return clearInterval(interval);\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [currentInitStage]);\n\n  useEffect(() => {\n    if (currentInitStage !== initStage.notStarted) {\n      const interval = setInterval(() => {\n        const miliSecondsPast = new Date().getTime() - startTime.getTime();\n\n        const totalSecondsLeft = miliSecondsPast / 1000;\n        const totalMinutesPast: number = Math.floor(totalSecondsLeft / 60);\n        let minutesPast: number = Math.ceil(totalMinutesPast % 60);\n        const hoursPast: number = Math.floor(totalMinutesPast / 60);\n        let secondsPast: number = Math.ceil(totalSecondsLeft % 60);\n        if (secondsPast === 60) {\n          minutesPast += 1;\n          secondsPast = 0;\n        }\n        let hoursLeftString: string = hoursPast.toString();\n        let minutesLeftString: string = minutesPast.toString();\n        let secondsLeftString: string = secondsPast.toString();\n        if (minutesPast <= 9) {\n          minutesLeftString = `0${minutesLeftString}`;\n        }\n        if (secondsPast <= 9) {\n          secondsLeftString = `0${secondsPast}`;\n        }\n        if (hoursPast <= 9) {\n          hoursLeftString = `0${hoursLeftString}`;\n        }\n        setTimeElapsed(\n          `${hoursLeftString}:${minutesLeftString}:${secondsLeftString}`,\n        );\n      }, 1000);\n      if (currentInitStage === initStage.done) {\n        return clearInterval(interval);\n      }\n      return () => clearInterval(interval);\n    }\n  }, [currentInitStage]);\n\n  useEffect(() => {\n    if (\n      createdGroupId !== '' &&\n      (initResult === loadingStateEnum.notStarted ||\n        initResult === loadingStateEnum.cannotStart ||\n        initResult === loadingStateEnum.failed)\n    ) {\n      setInitTwoResult(loadingStateEnum.notStarted);\n      setInitThreeResult(loadingStateEnum.notStarted);\n    }\n  }, [createdGroupId, initResult]);\n\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <View>\n        <Pressable onPress={() => navigate('/profile/government')}>\n          <Text>Back</Text>\n        </Pressable>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <View>\n          <View\n            style={{\n              height: height * 0.25,\n              width: height * 0.1,\n              alignContent: 'center',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partOne ? 'blue' : 'black',\n                borderRadius: 50,\n              }}\n            />\n            <View\n              style={{\n                height: height * 0.025,\n                width: height * 0.05,\n                alignItems: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.025,\n                  width: height * 0.005,\n                  backgroundColor:\n                    currentInitStage === initStage.partTwoLoad\n                      ? 'blue'\n                      : 'black',\n                }}\n              />\n              {currentInitStage === initStage.partTwoLoad ? (\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: height * 0.03,\n                    top: height * 0.01,\n                  }}\n                >\n                  {timeLeft}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partTwo\n                    ? 'blue'\n                    : Colors.black,\n                borderRadius: 50,\n              }}\n            />\n            <View\n              style={{\n                height: height * 0.025,\n                width: height * 0.05,\n                alignItems: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.025,\n                  width: height * 0.005,\n                  backgroundColor:\n                    currentInitStage === initStage.partThreeLoad\n                      ? 'blue'\n                      : Colors.black,\n                }}\n              />\n              {currentInitStage === initStage.partThreeLoad ? (\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: height * 0.03,\n                    top: height * 0.01,\n                  }}\n                >\n                  {timeLeft}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partThree\n                    ? 'blue'\n                    : Colors.black,\n                borderRadius: 50,\n              }}\n            />\n          </View>\n        </View>\n        <View>\n          <UserBlock\n            setSelectedUser={setSelectedUser}\n            setInitResult={setInitResult}\n          />\n          <TextInput\n            value={createdGroupId}\n            onChangeText={setCreatedGroupId}\n            placeholder=\"Group Id\"\n          />\n          <Text>Time Elapsed: {timeElapsed}</Text>\n          <Pressable\n            onPress={() => {\n              if (initResult === loadingStateEnum.notStarted) {\n                initializePauly();\n              }\n            }}\n          >\n            <Text>\n              {initResult === loadingStateEnum.cannotStart\n                ? 'Please Pick a User'\n                : initResult === loadingStateEnum.notStarted\n                ? 'initialize Pauly on New Tenant'\n                : initResult === loadingStateEnum.loading\n                ? `Loading ${timeLeft}`\n                : initResult === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {initTwoResult !== loadingStateEnum.cannotStart ? (\n            <Pressable\n              onPress={() => {\n                initializePaulyFromPartTwo();\n              }}\n            >\n              <Text>\n                {initTwoResult === loadingStateEnum.notStarted\n                  ? 'Start From Part Two'\n                  : initTwoResult === loadingStateEnum.loading\n                  ? 'Loading'\n                  : initTwoResult === loadingStateEnum.success\n                  ? 'Success'\n                  : 'Failed'}\n              </Text>\n            </Pressable>\n          ) : null}\n          {initThreeResult !== loadingStateEnum.cannotStart ? (\n            <View>\n              {addDataArray.map(addData => (\n                <View key={`Add_Data_${addData.id}`}>\n                  {selectedUpdates.includes(addData.id) ? (\n                    <Pressable\n                      style={{\n                        width: width * 0.7,\n                        backgroundColor: Colors.lightGray,\n                      }}\n                      onPress={() => {\n                        const newSelectedUpdates = selectedUpdates;\n                        newSelectedUpdates.filter(e => {\n                          return e !== addData.id;\n                        });\n                        setSelectedUpdates([...newSelectedUpdates]);\n                      }}\n                    >\n                      <View style={{ margin: 5 }}>\n                        <Text>{addData.id}</Text>\n                      </View>\n                    </Pressable>\n                  ) : (\n                    <Pressable\n                      style={{\n                        width: width * 0.7,\n                        backgroundColor: Colors.white,\n                      }}\n                      onPress={() => {\n                        setSelectedUpdates([...selectedUpdates, addData.id]);\n                      }}\n                    >\n                      <View style={{ margin: 5 }}>\n                        <Text>{addData.id}</Text>\n                      </View>\n                    </Pressable>\n                  )}\n                </View>\n              ))}\n              <Pressable\n                onPress={() => {\n                  initializePaulyFromPartThree();\n                }}\n              >\n                <Text>\n                  {initThreeResult === loadingStateEnum.notStarted\n                    ? 'Start From Part Three'\n                    : initThreeResult === loadingStateEnum.loading\n                    ? 'Loading'\n                    : initThreeResult === loadingStateEnum.success\n                    ? 'Success'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n            </View>\n          ) : null}\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction UserBlock({\n  setSelectedUser,\n  setInitResult,\n}: {\n  setSelectedUser: (item: microsoftUserType) => void;\n  setInitResult: (item: loadingStateEnum) => void;\n}) {\n  const [currentUserId, setCurrentUserId] = useState<string>('');\n  const [loadedUsers, setLoadedUsers] = useState<microsoftUserType[]>([]);\n  const [loadUsersResult, setLoadUsersResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [nextLink, setNextLink] = useState<string | undefined>(undefined);\n  const { height } = useSelector((state: RootState) => state.dimentions);\n\n  async function getUserId() {\n    const result = await callMsGraph('https://graph.microsoft.com/v1.0/me');\n    if (result.ok) {\n      const data = await result.json();\n      setCurrentUserId(data.id);\n    }\n  }\n\n  async function getUsers(nextLink?: string) {\n    const result = await callMsGraph(\n      nextLink ||\n        'https://graph.microsoft.com/v1.0/users?$top=10&$select,id,displayName',\n    );\n    if (result.ok) {\n      const data = await result.json();\n      const newUsers: microsoftUserType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        newUsers.push({\n          id: data.value[index].id,\n          displayName: data.value[index].displayName,\n        });\n      }\n      setNextLink(data['@odata.nextLink']);\n      if (nextLink) {\n        setLoadedUsers([...loadedUsers, ...newUsers]);\n      } else {\n        setLoadedUsers(newUsers);\n      }\n      setLoadUsersResult(loadingStateEnum.success);\n    } else {\n      setLoadUsersResult(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getUserId();\n    getUsers();\n  }, []);\n\n  return (\n    <View style={{ height: height * 0.6 }}>\n      {loadUsersResult === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : (\n        <>\n          {loadUsersResult === loadingStateEnum.success ? (\n            <FlatList\n              data={loadedUsers}\n              renderItem={user => (\n                <View key={`User_${user.item.id}`}>\n                  {user.item.id !== currentUserId ? (\n                    <Pressable\n                      onPress={() => {\n                        setSelectedUser(user.item);\n                        setInitResult(loadingStateEnum.notStarted);\n                      }}\n                    >\n                      <View>\n                        <Text>{user.item.displayName}</Text>\n                      </View>\n                    </Pressable>\n                  ) : null}\n                </View>\n              )}\n              onEndReached={() => {\n                if (nextLink !== undefined) {\n                  getUsers(nextLink);\n                }\n              }}\n            />\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { getRooms } from '../../../../Functions/classesFunctions';\n\nexport default function GovernmentRooms() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [roomState, setRoomState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [rooms, setRooms] = useState<roomType[]>([]);\n\n  async function loadData() {\n    const result = await getRooms();\n    setRoomState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRooms(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Rooms</Text>\n      <View>\n        {roomState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {roomState === loadingStateEnum.success ? (\n              <View>\n                {rooms.map(room => (\n                  <View key={`Room_${room.id}`}>\n                    <Text>{room.name}</Text>\n                  </View>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room/create');\n        }}\n      >\n        <Text>Create Room</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput } from 'react-native';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { WarningIcon } from '../../../../UI/Icons/Icons';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID, {\n  getTextState,\n} from '../../../../Functions/ultility/createUUID';\n\nexport default function GovermentRoomsCreate() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [createRoomState, setCreateRoomState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const navigate = useNavigate();\n  const [roomName, setRoomName] = useState<string>('');\n\n  async function createRoom() {\n    if (\n      roomName !== '' &&\n      (createRoomState === loadingStateEnum.notStarted ||\n        createRoomState === loadingStateEnum.failed ||\n        createRoomState === loadingStateEnum.success)\n    ) {\n      setCreateRoomState(loadingStateEnum.loading);\n      const id = createUUID();\n      const items = {\n        fields: {\n          Title: id,\n          roomId: id,\n          roomName,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.roomListId}/items?expand=fields`,\n        'POST',\n        JSON.stringify(items),\n      );\n      if (result.ok) {\n        setCreateRoomState(loadingStateEnum.success);\n      } else {\n        setCreateRoomState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <View\n        style={{\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text>Create Room</Text>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        {roomName === '' ? (\n          <WarningIcon width={14} height={14} outlineColor=\"red\" />\n        ) : null}\n        <TextInput\n          value={roomName}\n          onChangeText={e => {\n            setRoomName(e);\n          }}\n          placeholder=\"Room Name\"\n        />\n      </View>\n      <Pressable\n        onPress={() => {\n          createRoom();\n        }}\n      >\n        <Text>\n          {getTextState(createRoomState, {\n            notStarted: 'Create Room',\n            success: 'Room Created',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Button, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport * as Clipboard from 'expo-clipboard';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { CopyIcon } from '../../../../UI/Icons/Icons';\nimport { RootState } from '../../../../Redux/store';\nimport { Colors } from '../../../../types';\n\nexport default function MicrosoftGraphEditList() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [currentColumns, setCurrentColumns] = useState<listColumnType[]>([]);\n  const { id } = useParams();\n  const [isCoppiedToClipboard, setIsCoppiedToClipboard] =\n    useState<boolean>(false);\n\n  const navigate = useNavigate();\n\n  async function getListItems() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items?expand=fields`,\n    );\n    if (result.ok) {\n      // const data = await result.json();\n    } else {\n    }\n  }\n  async function indexColumn(columnId: string) {\n    const data = {\n      indexed: 'true',\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/columns/${columnId}`,\n      'PATCH',\n      JSON.stringify(data),\n    ); // TO DO fix ids\n    if (result.ok) {\n      const data = await result.json();\n      const newColumnData: listColumnType[] = currentColumns;\n      const index = newColumnData.findIndex(e => {\n        e.id === columnId;\n      });\n      if (index !== -1) {\n        newColumnData[index].indexed = true;\n        setCurrentColumns(newColumnData);\n      } else {\n        // TO DO failed\n      }\n    }\n  }\n  async function getColumns() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/columns`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length !== undefined) {\n        const newCurrentColumns: listColumnType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          newCurrentColumns.push({\n            columnGroup: data.value[index].columnGroup,\n            description: data.value[index].description,\n            displayName: data.value[index].displayName,\n            enforceUniqueValues: data.value[index].enforceUniqueValues,\n            hidden: data.value[index].hidden,\n            id: data.value[index].id,\n            indexed: data.value[index].indexed,\n            name: data.value[index].name,\n            readOnly: data.value[index].readOnly,\n            required: data.value[index].required,\n          });\n        }\n        setCurrentColumns(newCurrentColumns);\n      }\n    } else {\n    }\n  }\n  useEffect(() => {\n    getListItems();\n    getColumns();\n  }, []);\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        width,\n        height,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Pressable onPress={() => navigate('/profile/government/graph/list')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Microsoft Graph Edit List</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>{id}</Text>\n        {isCoppiedToClipboard ? (\n          <Pressable\n            onPress={async () => {\n              await Clipboard.setStringAsync(id);\n            }}\n          >\n            <Text>Copied To Clipboard!</Text>\n          </Pressable>\n        ) : (\n          <Pressable\n            onPress={async () => {\n              await Clipboard.setStringAsync(id);\n              setIsCoppiedToClipboard(true);\n            }}\n          >\n            <CopyIcon width={14} height={14} />\n          </Pressable>\n        )}\n      </View>\n      <View\n        style={{\n          flexDirection: 'row',\n          overflow: 'scroll',\n          height: height * 0.4,\n        }}\n      >\n        {currentColumns.map(item => (\n          <View\n            style={{\n              width: width * 0.3,\n              height: height * 0.4,\n              borderColor: 'black',\n              borderWidth: 2,\n            }}\n          >\n            <Text>{item.displayName}</Text>\n            {item.indexed === false ? (\n              <Button\n                title=\"Index This Propertie\"\n                onPress={() => {\n                  indexColumn(item.id);\n                }}\n              />\n            ) : (\n              <Text>Already Indexed</Text>\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport * as Clipboard from 'expo-clipboard';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { CopyIcon } from '../../../../UI/Icons/Icons';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nexport default function MicrosoftGraphEditGroup() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n\n  const { id } = useParams();\n\n  const [isCoppiedToClipboard, setIsCoppiedToClipboard] =\n    useState<boolean>(false);\n  const [groupLoadingState, setGroupLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const [deleteGroupLoadingState, setDeleteGroupLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function getListItems() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      setGroupLoadingState(loadingStateEnum.success);\n    } else {\n      setGroupLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  async function deleteGroup() {\n    setDeleteGroupLoadingState(loadingStateEnum.loading);\n    const deleteGroupResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}`,\n      'DELETE',\n    );\n    if (deleteGroupResult.ok) {\n      setDeleteGroupLoadingState(loadingStateEnum.success);\n    } else {\n      setDeleteGroupLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getListItems();\n  }, []);\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        height,\n        width,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to=\"/profile/government/graph/group\">\n        <Text>Back</Text>\n      </Link>\n      <Text>MicrosoftGraphEditList</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>{id}</Text>\n        {id !== undefined ? (\n          <>\n            {isCoppiedToClipboard ? (\n              <Pressable\n                onPress={async () => {\n                  await Clipboard.setStringAsync(id);\n                }}\n              >\n                <Text>Copied To Clipboard!</Text>\n              </Pressable>\n            ) : (\n              <Pressable\n                onPress={async () => {\n                  await Clipboard.setStringAsync(id);\n                  setIsCoppiedToClipboard(true);\n                }}\n              >\n                <CopyIcon width={14} height={14} />\n              </Pressable>\n            )}\n          </>\n        ) : null}\n      </View>\n      <Pressable\n        onPress={() => {\n          deleteGroup();\n        }}\n      >\n        <Text>\n          {getTextState(deleteGroupLoadingState, {\n            notStarted: 'Delete Group',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nexport default function MicrosoftGraphEditExtension() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { mode, id } = useParams();\n\n  const [extensionLoadingState, setExtensionLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [deleteExtensionLoadingState, setDeleteExtensionLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const [extensionDescription, setExtensionDescription] = useState<string>('');\n\n  async function getExtension() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/schemaExtensions?$filter=id%20eq%20'${id}'`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length === 1) {\n        setExtensionDescription(data.value[0].description);\n        setExtensionLoadingState(loadingStateEnum.success);\n      } else {\n        setExtensionLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setExtensionLoadingState(loadingStateEnum.failed);\n    }\n  }\n  async function deleteExtension() {\n    if (\n      deleteExtensionLoadingState === loadingStateEnum.notStarted ||\n      deleteExtensionLoadingState === loadingStateEnum.failed\n    ) {\n      setDeleteExtensionLoadingState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/schemaExtensions/${id}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        setDeleteExtensionLoadingState(loadingStateEnum.success);\n      } else {\n        setDeleteExtensionLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        height,\n        width,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to={`/profile/government/graph/${mode}`}>\n        <Text>Back</Text>\n      </Link>\n      <Text>MicrosoftGraphEditExtension</Text>\n      <View />\n      <Pressable\n        onPress={() => {\n          deleteExtension();\n        }}\n      >\n        <Text>\n          {getTextState(deleteExtensionLoadingState, {\n            notStarted: 'Delete Extension',\n            success: 'Successfully Deleted Extension',\n            failed: 'Failed To Delete Extension',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View } from 'react-native';\nimport React from 'react';\nimport { useParams } from 'react-router-native';\nimport MicrosoftGraphEditList from './MicrosoftGraphEditList';\nimport MicrosoftGraphEditGroup from './MicrosoftGraphEditGroup';\nimport MicrosoftGraphEditExtension from './MicrosoftGraphEditExtension';\n\nexport default function MicrosoftGraphEdit() {\n  const { mode } = useParams();\n  return (\n    <View>\n      {mode === 'list' ? <MicrosoftGraphEditList /> : null}\n      {mode === 'group' ? <MicrosoftGraphEditGroup /> : null}\n      {mode === 'extension' ? <MicrosoftGraphEditExtension /> : null}\n    </View>\n  );\n}\n","import { View, Text } from 'react-native';\nimport React from 'react';\nimport {\n  BoldIcon,\n  CenterAlignmentIcon,\n  ItalicIcon,\n  LeftAlignmentIcon,\n  RightAlignmentIcon,\n  StrikeThroughIcon,\n  UnderlineIcon,\n} from '../../../../UI/Icons/Icons';\n\nexport default function TextEditorHeader() {\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <BoldIcon width={14} height={14} style={{ margin: 5 }} />\n      <ItalicIcon width={14} height={14} style={{ margin: 5 }} />\n      <UnderlineIcon width={14} height={14} style={{ margin: 5 }} />\n      <StrikeThroughIcon width={14} height={14} style={{ margin: 5 }} />\n      <LeftAlignmentIcon width={14} height={14} style={{ margin: 5 }} />\n      <CenterAlignmentIcon width={14} height={14} style={{ margin: 5 }} />\n      <RightAlignmentIcon width={14} height={14} style={{ margin: 5 }} />\n    </View>\n  );\n}\n","import { View, Text } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport TextEditorHeader from './TextEditorHeader';\n\nexport default function GovernmentResourcesPost() {\n  const [postData, setPostData] = useState<string>('');\n  return (\n    <View>\n      <Text>Government Resources Post</Text>\n      <TextEditorHeader />\n    </View>\n  );\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  Switch,\n  ScrollView,\n  FlatList,\n  ListRenderItemInfo,\n  Modal,\n} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport store, { RootState } from '../../../Redux/store';\nimport callMsGraph from '../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum, resourceResponce } from '../../../types';\nimport ProgressView from '../../../UI/ProgressView';\nimport getResource from '../../../Functions/getResources';\nimport GovernmentResourcesPost from './GovernmentResourcesPost/GovernmentResourcesPost';\nimport { getChannels } from '../../../Functions/microsoftGroupsFunctions';\n\ntype resourceGroupType = {\n  name: string;\n  id: string;\n};\n\nfunction ChannelBlock({\n  channel,\n  groupId,\n  onUpdate,\n  selectedGroup,\n}: {\n  channel: ListRenderItemInfo<channelType>;\n  groupId: string;\n  onUpdate: (item: channelType) => void;\n  selectedGroup: string;\n}) {\n  const [isSelected, setIsSelected] = useState<boolean>(channel.item.selected);\n  const [isLoading, setIsLoading] = useState<boolean>(channel.item.loading);\n\n  async function addChannel() {\n    const data = {\n      fields: {\n        resourceGroupId: groupId,\n        resourceConversationId: channel.item.id,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.resourceListId}/items`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      onUpdate({\n        ...channel.item,\n        selected: true,\n        loading: false,\n      });\n      setIsSelected(true);\n      setIsLoading(false);\n    } else {\n      onUpdate({\n        ...channel.item,\n        loading: false,\n      });\n      setIsLoading(false);\n    }\n  }\n\n  async function removeChannel() {\n    const itemResult = await getResource(groupId, channel.item.id);\n    if (\n      itemResult.result === resourceResponce.found &&\n      itemResult.itemId !== undefined\n    ) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.resourceListId}/items/${\n          itemResult.itemId\n        }`,\n        'DELETE',\n      );\n      if (result.ok) {\n        onUpdate({\n          ...channel.item,\n          selected: false,\n          loading: false,\n        });\n        setIsSelected(false);\n        setIsLoading(false);\n      } else {\n        onUpdate({\n          ...channel.item,\n          loading: false,\n        });\n        setIsLoading(false);\n      }\n    } else {\n      onUpdate({\n        ...channel.item,\n        loading: false,\n      });\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <View\n      key={`Team_Channel_${channel.item.id}`}\n      style={{ flexDirection: 'row' }}\n    >\n      {isLoading ? (\n        <ProgressView width={12} height={12} />\n      ) : (\n        <View>\n          {selectedGroup === groupId ? (\n            <Switch\n              trackColor={{ false: '#767577', true: '#81b0ff' }}\n              thumbColor={isSelected ? '#f5dd4b' : '#f4f3f4'}\n              ios_backgroundColor=\"#3e3e3e\"\n              onValueChange={e => {\n                onUpdate({\n                  ...channel.item,\n                  loading: true,\n                });\n                setIsLoading(true);\n                if (e === true) {\n                  addChannel();\n                } else {\n                  removeChannel();\n                }\n              }}\n              value={isSelected}\n            />\n          ) : (\n            <View\n              style={{\n                height: 12,\n                width: 12,\n                borderRadius: 50,\n                backgroundColor: channel.item.selected ? 'green' : 'blue',\n              }}\n            />\n          )}\n        </View>\n      )}\n      <Text>{channel.item.displayName}</Text>\n    </View>\n  );\n}\n\nfunction GroupBlock({\n  group,\n  selectedGroup,\n  setSelectedGroup,\n}: {\n  group: resourceGroupType;\n  selectedGroup: string;\n  setSelectedGroup: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [channels, setChannels] = useState<channelType[]>([]);\n  const [channelState, setChannelState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  async function loadChannels() {\n    const result = await getChannels(group.id);\n    if (result.result === loadingStateEnum.success) {\n      setChannels(result.data);\n      setChannelState(loadingStateEnum.success);\n    } else {\n      setChannelState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadChannels();\n  }, []);\n  return (\n    <Pressable\n      key={`Team_${group.id}`}\n      onPress={() => {\n        setSelectedGroup(group.id);\n      }}\n    >\n      <View\n        style={{\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n          marginLeft: width * 0.03,\n          marginRight: width * 0.03,\n          marginTop: height * 0.02,\n          marginBottom: height * 0.02,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          <Text>{group.name}</Text>\n          <Text>Channels</Text>\n          {channelState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.2,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {channelState === loadingStateEnum.success ? (\n                <FlatList\n                  data={channels}\n                  renderItem={channel => (\n                    <ChannelBlock\n                      key={channel.item.id}\n                      channel={channel}\n                      groupId={group.id}\n                      onUpdate={item => {\n                        const newChannels = [...channels];\n                        newChannels[channel.index] = item;\n                        setChannels([...newChannels]);\n                      }}\n                      selectedGroup={selectedGroup}\n                    />\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nexport default function GovernmentResources() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [groups, setGroups] = useState<resourceGroupType[]>([]);\n  const [selectedGroup, setSelectedGroup] = useState<string>('');\n  const [getTeamsState, setGetTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [isShowingEditor, setIsShowingEditor] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  async function getTeams() {\n    const result = await callMsGraph(\n      \"https://graph.microsoft.com/v1.0/groups?$filter=resourceProvisioningOptions/Any(x:x eq 'Team')\",\n    );\n    if (!result.ok) {\n      setGetTeamsState(loadingStateEnum.failed);\n      return;\n    }\n    const data = await result.json();\n    const resultGroups: resourceGroupType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultGroups.push({\n        name: data.value[index].displayName,\n        id: data.value[index].id,\n      });\n    }\n    setGetTeamsState(loadingStateEnum.success);\n    setGroups(resultGroups);\n  }\n\n  useEffect(() => {\n    getTeams();\n  }, []);\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Government Resources</Text>\n        <Pressable onPress={() => setIsShowingEditor(true)}>\n          <Text>Show</Text>\n        </Pressable>\n        <Modal\n          animationType=\"slide\"\n          visible={isShowingEditor}\n          onRequestClose={() => setIsShowingEditor(false)}\n        >\n          <GovernmentResourcesPost />\n        </Modal>\n      </View>\n      <ScrollView style={{ height: height * 0.9 }}>\n        {getTeamsState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {getTeamsState === loadingStateEnum.success ? (\n              <View>\n                {groups.map(group => (\n                  <GroupBlock\n                    key={group.id}\n                    group={group}\n                    selectedGroup={selectedGroup}\n                    setSelectedGroup={setSelectedGroup}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n","import { View, Text, Pressable, ViewStyle } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport createUUID from '../Functions/ultility/createUUID';\nimport { Colors } from '../types';\n\nexport default function ListItem({\n  to,\n  title,\n  width,\n  caption,\n  onPress,\n  style,\n}: {\n  title: string;\n  width: number;\n  caption?: string | undefined;\n  to?: string | undefined;\n  onPress?: () => void | undefined;\n  style?: ViewStyle | undefined;\n}) {\n  const navigate = useNavigate();\n  return (\n    <Pressable\n      onPress={() => {\n        if (to !== undefined) {\n          navigate(to);\n        }\n        if (onPress !== undefined) {\n          onPress();\n        }\n      }}\n      key={createUUID()}\n      style={[\n        {\n          shadowColor: Colors.black,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n          marginLeft: width * 0.03,\n          marginRight: width * 0.03,\n        },\n        style,\n      ]}\n    >\n      <View style={{ margin: 10 }}>\n        <Text style={{ fontSize: 16 }}>{title}</Text>\n        {caption !== undefined ? (\n          <Text style={{ fontSize: 12 }}>{caption}</Text>\n        ) : null}\n      </View>\n    </Pressable>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getDressCodeData(): Promise<{\n  result: loadingStateEnum;\n  data?: dressCodeType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeName,dressCodeId,dressCodeData)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newDressCodes: dressCodeType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      try {\n        newDressCodes.push({\n          name: data.value[index].fields.dressCodeName,\n          id: data.value[index].fields.dressCodeId,\n          listId: data.value[index].id,\n          dressCodeData: JSON.parse(data.value[index].fields.dressCodeData),\n          dressCodeIncentives: [],\n        });\n      } catch {\n        continue;\n      }\n    }\n    return { result: loadingStateEnum.success, data: newDressCodes };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport ListItem from '../../../../../UI/ListItem';\nimport getDressCodeData from '../../../../../Functions/homepage/getDressCodeData';\n\nexport default function GovernmentDressCode() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [getDressCodeState, setGetDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [dressCodes, setDressCodes] = useState<dressCodeType[]>([]);\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getDressCodeData();\n    setGetDressCodeState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setDressCodes(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government/calendar')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n        Dress Codes\n      </Text>\n      <View>\n        {getDressCodeState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {getDressCodeState === loadingStateEnum.success ? (\n              <View>\n                {dressCodes.map(dressCode => (\n                  <ListItem\n                    key={dressCode.id}\n                    to={`/profile/government/calendar/dresscode/${dressCode.id}`}\n                    title={dressCode.name}\n                    width={width}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate('/profile/government/calendar/dresscode/create')\n        }\n      >\n        <Text>Create Dress Code</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Pressable, View, Text, TextInput } from 'react-native';\nimport React from 'react';\nimport { RootState } from '../../../../../Redux/store';\nimport {\n  CloseIcon,\n  DownIcon,\n  UpIcon,\n  WarningIcon,\n} from '../../../../../UI/Icons/Icons';\n\nexport default function DressCodeBlock({\n  dressCode,\n  index,\n  dressCodeData,\n  setDressCodeData,\n  selectedDressCodeId,\n  setSelectedDressCodeId,\n}: {\n  dressCode: dressCodeDataType;\n  index: number;\n  dressCodeData: dressCodeDataType[];\n  setDressCodeData: (item: dressCodeDataType[]) => void;\n  selectedDressCodeId: string;\n  setSelectedDressCodeId: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <Pressable\n      onPress={() => {\n        setSelectedDressCodeId(dressCode.id);\n      }}\n      style={{\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n        marginLeft: width * 0.03,\n        marginRight: width * 0.03,\n        marginTop: height * 0.02,\n        marginBottom: height * 0.02,\n      }}\n    >\n      <View style={{ margin: 10, flexDirection: 'row' }}>\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            {dressCode.name === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>\n              Name: {selectedDressCodeId === dressCode.id ? '' : dressCode.name}\n            </Text>\n            {selectedDressCodeId === dressCode.id ? (\n              <TextInput\n                placeholder=\"Dress Code Name\"\n                value={dressCode.name}\n                onChangeText={e => {\n                  const newDressCodeData = dressCodeData;\n                  newDressCodeData[index].name = e;\n                  setDressCodeData([...newDressCodeData]);\n                }}\n              />\n            ) : null}\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {dressCode.description === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>\n              Description:{' '}\n              {selectedDressCodeId === dressCode.id\n                ? ''\n                : dressCode.description}\n            </Text>\n            {selectedDressCodeId === dressCode.id ? (\n              <TextInput\n                placeholder=\"Dress Code Description\"\n                value={dressCode.description}\n                onChangeText={e => {\n                  const newDressCodeData = dressCodeData;\n                  newDressCodeData[index].description = e;\n                  setDressCodeData([...newDressCodeData]);\n                }}\n              />\n            ) : null}\n          </View>\n        </View>\n        <View>\n          <UpIcon width={14} height={14} />\n          <DownIcon width={14} height={14} />\n          <CloseIcon width={14} height={14} />\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n","import { View, Text, TextInput, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-native';\nimport store, { RootState } from '../../../../../Redux/store';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport DressCodeBlock from './DressCodeBlock';\nimport { createDressCode } from '../../../../../Functions/calendar/calendarFunctionsGraph';\nimport getDressCode from '../../../../../Functions/homepage/getDressCode';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\n\nexport default function GovernmentDressCodeEdit() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [dressCodeName, setDressCodeName] = useState<string>('');\n  const [dressCodeData, setDressCodeData] = useState<dressCodeDataType[]>([\n    { name: '', description: '', id: createUUID() },\n  ]);\n  const [selectedDressCodeId, setSelectedDressCodeId] = useState<string>('');\n  const [dressCodeListId, setDressCodeListId] = useState<string>('');\n\n  const [createDressCodeState, setCreateDressCodeState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const navigate = useNavigate();\n\n  async function loadCreateDressCode() {\n    const result = await createDressCode(dressCodeName, dressCodeData);\n    setCreateDressCodeState(result);\n  }\n\n  const { id } = useParams();\n\n  const [getDressCodeState, setDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [isCreatingDressCode, setIsCreatingDressCode] =\n    useState<boolean>(false);\n  const [deleteDressCodeState, setDeleteDressCodeState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function deleteDressCode() {\n    setDeleteDressCodeState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.dressCodeListId\n      }/items/${dressCodeListId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n      setDeleteDressCodeState(loadingStateEnum.success);\n    } else {\n      setDeleteDressCodeState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadData() {\n    if (id !== undefined && id !== 'create') {\n      const result = await getDressCode(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setDressCodeListId(result.data.listId);\n        setDressCodeName(result.data.name);\n        setDressCodeData(result.data.dressCodeData);\n        setIsCreatingDressCode(false);\n        setDressCodeState(loadingStateEnum.success);\n      } else {\n        setDressCodeState(loadingStateEnum.failed);\n      }\n    } else if (id === 'create') {\n      setIsCreatingDressCode(true);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, [id]);\n\n  return (\n    <>\n      {isCreatingDressCode || getDressCodeState === loadingStateEnum.success ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() => navigate('/profile/government/calendar/dresscode')}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <Text>Create Dress Code</Text>\n          <Text>Dress Code Name:</Text>\n          <TextInput\n            value={dressCodeName}\n            onChangeText={setDressCodeName}\n            placeholder=\"Dress Code Name\"\n          />\n          <ScrollView style={{ height: height * 0.7 }}>\n            {dressCodeData.map((dressCode, index) => (\n              <DressCodeBlock\n                dressCode={dressCode}\n                dressCodeData={dressCodeData}\n                index={index}\n                setDressCodeData={setDressCodeData}\n                selectedDressCodeId={selectedDressCodeId}\n                setSelectedDressCodeId={setSelectedDressCodeId}\n              />\n            ))}\n          </ScrollView>\n          <Pressable\n            onPress={() => {\n              setDressCodeData([\n                ...dressCodeData,\n                { name: '', description: '', id: createUUID() },\n              ]);\n            }}\n          >\n            <Text>Add</Text>\n          </Pressable>\n          <Pressable onPress={() => loadCreateDressCode()}>\n            <Text>\n              {createDressCodeState === loadingStateEnum.notStarted\n                ? 'Create Dress Code'\n                : createDressCodeState === loadingStateEnum.loading\n                ? 'Loading'\n                : createDressCodeState === loadingStateEnum.success\n                ? 'Created Dress Code'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {!isCreatingDressCode ? (\n            <Pressable style={{ margin: 10 }} onPress={() => deleteDressCode()}>\n              <Text>\n                {deleteDressCodeState === loadingStateEnum.notStarted\n                  ? 'Delete'\n                  : deleteDressCodeState === loadingStateEnum.loading\n                  ? 'Loading'\n                  : deleteDressCodeState === loadingStateEnum.success\n                  ? 'Success'\n                  : 'Failed'}\n              </Text>\n            </Pressable>\n          ) : null}\n        </View>\n      ) : (\n        <>\n          {getDressCodeState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Pressable\n                onPress={() =>\n                  navigate('/profile/government/calendar/dresscode')\n                }\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              <Pressable\n                onPress={() =>\n                  navigate('/profile/government/calendar/dresscode')\n                }\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import {\n  View,\n  Text,\n  TextInput,\n  Button,\n  Pressable,\n  ScrollView,\n} from 'react-native';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport { DownIcon, UpIcon, WarningIcon } from '../../../../../UI/Icons/Icons';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport { RootState } from '../../../../../Redux/store';\nimport getDressCodeData from '../../../../../Functions/homepage/getDressCodeData';\nimport ListItem from '../../../../../UI/ListItem';\nimport { getSchedules } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\n// TO DO longest amount of school days is 20 make sure this is enforced\nexport default function GovernmentTimetableEdit() {\n  const { timetablesListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n\n  // Loading States\n  const [dressCodeState, setDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [createTimetableLoadingState, setCreateTimetableLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  // New Table Data\n  const [timetableName, setTimetableName] = useState<string>('');\n  const [selectedSchedules, setSelectedSchedules] = useState<scheduleType[]>(\n    [],\n  );\n  const [dressCodes, setDressCodes] = useState<dressCodeType[]>([]);\n  const [selectedDressCode, setSelectedDressCode] = useState<\n    dressCodeType | undefined\n  >(undefined);\n  const [schoolDays, setSchoolDays] = useState<schoolDayType[]>([]);\n  const [selectedDefaultSchedule, setSelectedDefaultSchedule] = useState<\n    scheduleType | undefined\n  >(undefined);\n\n  async function createTimetable() {\n    if (\n      selectedDefaultSchedule !== undefined &&\n      selectedDressCode !== undefined\n    ) {\n      // Check to make sure all have the same number of periods\n      for (let index = 0; index < selectedSchedules.length; index += 1) {\n        if (\n          selectedSchedules[index].periods.length !==\n          selectedDefaultSchedule.periods.length\n        ) {\n          setCreateTimetableLoadingState(loadingStateEnum.failed);\n          return;\n        }\n      }\n\n      // Create Timetable\n      setCreateTimetableLoadingState(loadingStateEnum.loading);\n      const scheduals = [];\n      for (let index = 0; index < selectedSchedules.length; index += 1) {\n        scheduals.push(selectedSchedules[index].id);\n      }\n      const data = {\n        fields: {\n          Title: timetableName,\n          timetableName,\n          timetableId: createUUID(),\n          timetableDataSchedules: JSON.stringify(scheduals),\n          timetableDataDays: JSON.stringify(schoolDays),\n          timetableDefaultScheduleId: selectedDefaultSchedule.id,\n          timetableDressCodeId: selectedDressCode.id,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${timetablesListId}/items?expand=fields`,\n        'POST',\n        JSON.stringify(data),\n      ); // TO DO fix site id\n      if (result.ok) {\n        setCreateTimetableLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTimetableLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function getDressCodes() {\n    const result = await getDressCodeData();\n    setDressCodeState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setDressCodes(result.data);\n    }\n  }\n\n  useEffect(() => {\n    getDressCodes();\n  }, []);\n  return (\n    <View\n      style={{\n        height,\n        width,\n        overflow: 'scroll',\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to=\"/profile/government/calendar/timetable/\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Create Timetable</Text>\n      <View style={{ backgroundColor: '#FF6700', borderRadius: 15, margin: 5 }}>\n        <View style={{ margin: 10 }}>\n          <Text>\n            Warning: because of the way that timetables work some properties\n            cannot be edited.\n          </Text>\n          <Text>The dress code you pick cannot change</Text>\n          <Text>\n            Schedules can be added but they have to have the same number of\n            periods\n          </Text>\n          <Text>\n            The number of days in a schedule cannot go up or down only the order\n            and the name can be changed\n          </Text>\n        </View>\n      </View>\n      <View>\n        <TextInput\n          value={timetableName}\n          onChangeText={e => {\n            setTimetableName(e);\n          }}\n          placeholder=\"Timetable Name\"\n        />\n      </View>\n      <ScheduleBlock\n        selectedSchedules={selectedSchedules}\n        setSelectedSchedules={setSelectedSchedules}\n        selectedDefaultSchedule={selectedDefaultSchedule}\n        setSelectedDefaultSchedule={setSelectedDefaultSchedule}\n      />\n      <SchoolDays\n        height={height}\n        schoolDays={schoolDays}\n        setSchoolDays={setSchoolDays}\n      />\n      <Text>Dress Codes</Text>\n      <View>\n        {dressCodeState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {dressCodeState === loadingStateEnum.success ? (\n              <View>\n                {dressCodes.map(dressCode => (\n                  <ListItem\n                    title={dressCode.name}\n                    width={width * 0.8}\n                    onPress={() => {\n                      setSelectedDressCode(dressCode);\n                    }}\n                    style={{\n                      backgroundColor:\n                        selectedDressCode?.id === dressCode.id\n                          ? 'blue'\n                          : Colors.white,\n                    }}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Button\n        title={\n          createTimetableLoadingState === loadingStateEnum.notStarted\n            ? 'Create Timetable'\n            : createTimetableLoadingState === loadingStateEnum.loading\n            ? 'Loading'\n            : createTimetableLoadingState === loadingStateEnum.success\n            ? 'Success'\n            : 'Failed'\n        }\n        onPress={() => {\n          if (createTimetableLoadingState === loadingStateEnum.notStarted) {\n            createTimetable();\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nfunction SchoolDays({\n  height,\n  schoolDays,\n  setSchoolDays,\n}: {\n  height: number;\n  schoolDays: schoolDayType[];\n  setSchoolDays: (item: schoolDayType[]) => void;\n}) {\n  return (\n    <View>\n      <Text>School Days</Text>\n      <ScrollView style={{ height: height * 0.2 }}>\n        {schoolDays.map((item, index) => (\n          <SchoolDayItem\n            item={item}\n            index={index}\n            schoolDays={schoolDays}\n            setSchoolDays={setSchoolDays}\n          />\n        ))}\n      </ScrollView>\n      <Button\n        title=\"Add\"\n        onPress={() => {\n          setSchoolDays([\n            ...schoolDays,\n            {\n              name: '',\n              shorthand: '',\n              id: createUUID(),\n              order:\n                schoolDays.length === 0\n                  ? 0\n                  : schoolDays[schoolDays.length - 1].order + 1,\n            },\n          ]);\n        }}\n      />\n    </View>\n  );\n}\n\nfunction SchoolDayItem({\n  item,\n  index,\n  schoolDays,\n  setSchoolDays,\n}: {\n  item: schoolDayType;\n  index: number;\n  schoolDays: schoolDayType[];\n  setSchoolDays: (item: schoolDayType[]) => void;\n}) {\n  const [selected, setSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      style={{ flexDirection: 'row' }}\n      onHoverIn={() => {\n        setSelected(true);\n      }}\n      onHoverOut={() => {\n        setSelected(false);\n      }}\n    >\n      <View style={{ margin: 10, flexDirection: 'row' }}>\n        <View style={{ marginRight: 'auto' }}>\n          <View style={{ flexDirection: 'row' }}>\n            {item.name === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>Name: </Text>\n            {selected ? (\n              <TextInput\n                value={item.name}\n                onChangeText={e => {\n                  const newSchoolDays = schoolDays;\n                  newSchoolDays[index].name = e;\n                  setSchoolDays([...newSchoolDays]);\n                }}\n              />\n            ) : (\n              <Text>{item.name}</Text>\n            )}\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {item.shorthand === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>Shorthand: </Text>\n            {selected ? (\n              <TextInput\n                maxLength={1}\n                value={item.shorthand}\n                onChangeText={e => {\n                  const newSchoolDays = schoolDays;\n                  newSchoolDays[index].shorthand = e;\n                  setSchoolDays([...newSchoolDays]);\n                }}\n              />\n            ) : (\n              <Text>{item.shorthand}</Text>\n            )}\n          </View>\n        </View>\n        <View>\n          {item.order !== 0 ? (\n            <Pressable\n              onPress={() => {\n                const newSchoolDays = schoolDays;\n                newSchoolDays[index].order = newSchoolDays[index].order - 1;\n                newSchoolDays[index - 1].order =\n                  newSchoolDays[index - 1].order + 1;\n                const saveCurrent = newSchoolDays[index];\n                newSchoolDays[index] = newSchoolDays[index - 1];\n                newSchoolDays[index - 1] = saveCurrent;\n                setSchoolDays([...newSchoolDays]);\n              }}\n            >\n              <UpIcon width={10} height={10} />\n            </Pressable>\n          ) : null}\n          {item.order + 1 < schoolDays.length ? (\n            <Pressable\n              onPress={() => {\n                const newSchoolDays = schoolDays;\n                newSchoolDays[index].order = newSchoolDays[index].order + 1;\n                newSchoolDays[index + 1].order =\n                  newSchoolDays[index + 1].order - 1;\n                const saveCurrent = newSchoolDays[index];\n                newSchoolDays[index] = newSchoolDays[index + 1];\n                newSchoolDays[index + 1] = saveCurrent;\n                setSchoolDays([...newSchoolDays]);\n              }}\n            >\n              <DownIcon width={10} height={10} />\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => {\n              const newSchoolDays = schoolDays;\n              newSchoolDays.splice(index, 1);\n              setSchoolDays([...newSchoolDays]);\n            }}\n          >\n            <Text>X</Text>\n          </Pressable>\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nfunction ScheduleBlock({\n  selectedSchedules,\n  setSelectedSchedules,\n  selectedDefaultSchedule,\n  setSelectedDefaultSchedule,\n}: {\n  selectedSchedules: scheduleType[];\n  setSelectedSchedules: (item: scheduleType[]) => void;\n  selectedDefaultSchedule: scheduleType | undefined;\n  setSelectedDefaultSchedule: (item: scheduleType) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [loadedSchedules, setLoadedSchedules] = useState<scheduleType[]>([]);\n  const [scheduleState, setScheduleState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  async function loadSchedules() {\n    const result = await getSchedules();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setLoadedSchedules(result.data);\n    }\n    setScheduleState(result.result);\n  }\n  useEffect(() => {\n    loadSchedules();\n  }, []);\n  return (\n    <View>\n      <Text>Scheduals</Text>\n      <Text>Selected Schedules</Text>\n      <ScrollView style={{ height: height * 0.4 }}>\n        {selectedSchedules.map(item => (\n          <View\n            style={{ height: height * 0.03 + 16 }}\n            key={`SelectedSchedule_${item.id}`}\n          >\n            <Text>{item.properName}</Text>\n            {selectedDefaultSchedule?.id !== item.id ? (\n              <Pressable\n                onPress={() => {\n                  setSelectedDefaultSchedule(item);\n                }}\n                style={{ backgroundColor: 'blue', height: 16 }}\n              >\n                <Text>Select As Default</Text>\n              </Pressable>\n            ) : null}\n          </View>\n        ))}\n      </ScrollView>\n      <View style={{ alignItems: 'center' }}>\n        <Text>Other Schedules</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.4 }}>\n        {scheduleState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : null}\n        {scheduleState === loadingStateEnum.failed ? <Text>Failed</Text> : null}\n        {scheduleState === loadingStateEnum.success ? (\n          <>\n            {loadedSchedules.map((item, index) => (\n              <>\n                {selectedSchedules.length <= 0 ? (\n                  <Pressable\n                    key={`Timetable_${item.id}_${createUUID()}`}\n                    onPress={() => {\n                      setSelectedSchedules([...selectedSchedules, item]);\n                      const newLoadedSchedules = loadedSchedules.filter(e => {\n                        return e.id !== item.id;\n                      });\n                      setLoadedSchedules([...newLoadedSchedules]);\n                      if (selectedDefaultSchedule === undefined) {\n                        setSelectedDefaultSchedule(item);\n                      }\n                    }}\n                  >\n                    <Text>{item.properName}</Text>\n                  </Pressable>\n                ) : (\n                  <>\n                    {selectedSchedules[0].periods.length ===\n                    item.periods.length ? (\n                      <Pressable\n                        key={`Timetable_${item.id}_${createUUID()}`}\n                        onPress={() => {\n                          setSelectedSchedules([...selectedSchedules, item]);\n                          const newLoadedSchedules = loadedSchedules.filter(\n                            e => {\n                              return e.id !== item.id;\n                            },\n                          );\n                          setLoadedSchedules([...newLoadedSchedules]);\n                          if (selectedDefaultSchedule === undefined) {\n                            setSelectedDefaultSchedule(item);\n                          }\n                        }}\n                      >\n                        <Text>{item.properName}</Text>\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              </>\n            ))}\n          </>\n        ) : null}\n      </ScrollView>\n    </View>\n  );\n}\n","import { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { useMsal } from '@azure/msal-react';\nimport {\n  revokeAsync,\n  DiscoveryDocument,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport React from 'react';\nimport { Text, Platform, Pressable } from 'react-native';\nimport store from '../../Redux/store';\nimport { authenticationTokenSlice } from '../../Redux/reducers/authenticationTokenReducer';\nimport { tenantId } from '../../PaulyConfig';\nimport { Colors } from '../../types';\n\nexport default function ProfileBlock() {\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => signOut()}\n      style={{\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        margin: 5,\n        borderRadius: 15,\n      }}\n    >\n      <Text numberOfLines={1} style={{ fontSize: 20, margin: 10 }}>\n        Sign Out\n      </Text>\n    </Pressable>\n  );\n}\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n","import { loadingStateEnum } from '../types';\nimport { studentSearchSlice } from '../Redux/reducers/studentSearchReducer';\nimport store from '../Redux/store';\nimport largeBatch from './ultility/batchRequest';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { domainName } from '../PaulyConfig';\n\nfunction checkIfStudent(role: string): {\n  result: boolean;\n  grade?: '9' | '10' | '11' | '12';\n} {\n  if (role.length >= 20) {\n    const reversed = role.split('').reverse().join('');\n    const slice = reversed.slice(0, domainName.length);\n    if (slice === domainName.split('').reverse().join('')) {\n      const getMonth = new Date().getMonth();\n      let schoolYear = new Date().getFullYear();\n      if (schoolYear.toString().length >= 4) {\n        if (getMonth > 6) {\n          schoolYear += 1;\n        }\n        const reverseYearTwelve = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearEleven = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearTen = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearNine = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        if (reversed.slice(16, 17) === reverseYearTwelve) {\n          return { result: true, grade: '12' };\n        }\n        if (reversed.slice(16, 17) === reverseYearEleven) {\n          return { result: true, grade: '11' };\n        }\n        if (reversed.slice(16, 17) === reverseYearTen) {\n          return { result: true, grade: '10' };\n        }\n        if (reversed.slice(16, 17) === reverseYearNine) {\n          return { result: true, grade: '9' };\n        }\n        return { result: false };\n      }\n      return { result: false };\n    }\n    return { result: false };\n  }\n  return { result: false };\n}\n\nexport async function getUsers(url?: string, search?: string) {\n  const filter = search ? `&$search=\"displayName:${search}\"` : '';\n\n  const result = await callMsGraph(\n    url ||\n      `https://graph.microsoft.com/v1.0/users?$select=displayName,id,mail${filter}`,\n    'GET',\n    undefined,\n    search ? [{ key: 'ConsistencyLevel', value: 'eventual' }] : undefined,\n  );\n  if (result.ok) {\n    // Getting user Ids from result\n    const data = await result.json();\n    const userIds: string[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      userIds.push(data.value[index].id);\n    }\n\n    // Getting selected user images from student files list in a batch request.\n    const batchResult = await largeBatch(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.studentFilesListId\n      }/items?$expand=fields&$filter=fields/userId%20eq%20'`,\n      secondUrl: \"'%20and%20fields/selected%20eq%20true\",\n      method: 'GET',\n      keys: { array: userIds },\n    });\n    const imagesIdsMap = new Map<string, string>(); // Key is userId, value is image data id\n    const imageIdsArray: string[] = [];\n    if (\n      batchResult.result === loadingStateEnum.success &&\n      batchResult.data !== undefined\n    ) {\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResult.data.length;\n        batchIndex += 1\n      ) {\n        if (batchResult.data[batchIndex].status === 200) {\n          // TO DO OK\n          if (batchResult.data[batchIndex].body.value.length === 1) {\n            // Checking to make suare only one item is selected\n            imagesIdsMap.set(\n              batchResult.data[batchIndex].body.value[0].fields.userId,\n              batchResult.data[batchIndex].body.value[0].fields.itemId,\n            );\n            imageIdsArray.push(\n              batchResult.data[batchIndex].body.value[0].fields.itemId,\n            );\n          }\n        } else {\n          // Batch Response Failed\n          store.dispatch(\n            studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n          );\n          return;\n        }\n      }\n    } else {\n      // Batch Failed\n      store.dispatch(\n        studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n      );\n      return;\n    }\n\n    // Getting downloadUrls for images\n    const batchResultDownloadUrls = await largeBatch(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/drive/items/`,\n      secondUrl: '?$expand=thumbnails($select=c300x400_crop)&$select=id', // ?select=id,content.downloadUrl\n      method: 'GET',\n      keys: { array: imageIdsArray },\n    });\n    const imagesDownloadUrls = new Map<string, string>(); // Key is the item id on the sharepoint and value is the downlad url\n    if (\n      batchResultDownloadUrls.result === loadingStateEnum.success &&\n      batchResultDownloadUrls.data !== undefined\n    ) {\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultDownloadUrls.data.length;\n        batchIndex += 1\n      ) {\n        if (batchResultDownloadUrls.data[batchIndex].status === 200) {\n          // TO DO OK\n          imagesDownloadUrls.set(\n            batchResultDownloadUrls.data[batchIndex].body.id,\n            batchResultDownloadUrls.data[batchIndex].body.thumbnails[0]\n              .c300x400_crop.url,\n          );\n        } else {\n          // Get Image failed\n          store.dispatch(\n            studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n          );\n          return;\n        }\n      }\n    } else {\n      // Getting images batch failed\n      store.dispatch(\n        studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n      );\n      return;\n    }\n\n    const outputUsers: schoolUserType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const imageId = imagesIdsMap.get(data.value[index].id);\n      if (imageId !== undefined) {\n        const imageDownloadUrl = imagesDownloadUrls.get(imageId);\n        if (imageDownloadUrl !== undefined) {\n          outputUsers.push({\n            name: data.value[index].displayName,\n            id: data.value[index].id,\n            mail: data.value[index].mail,\n            role: data.value[index].mail,\n            grade: checkIfStudent(data.value[index].mail).grade,\n            student: checkIfStudent(data.value[index].mail).result,\n            imageDownloadUrl,\n            imageState: loadingStateEnum.notStarted,\n          });\n        } else {\n          outputUsers.push({\n            name: data.value[index].displayName,\n            id: data.value[index].id,\n            mail: data.value[index].mail,\n            role: data.value[index].mail,\n            grade: checkIfStudent(data.value[index].mail).grade,\n            student: checkIfStudent(data.value[index].mail).result,\n            imageDownloadUrl: 'noImage',\n            imageState: loadingStateEnum.cannotStart,\n          });\n        }\n      } else {\n        outputUsers.push({\n          name: data.value[index].displayName,\n          id: data.value[index].id,\n          mail: data.value[index].mail,\n          role: data.value[index].mail,\n          grade: checkIfStudent(data.value[index].mail).grade,\n          student: checkIfStudent(data.value[index].mail).result,\n          imageDownloadUrl: 'noImage',\n          imageState: loadingStateEnum.cannotStart,\n        });\n      }\n    }\n    store.dispatch(studentSearchSlice.actions.setStudentUsers(outputUsers));\n    store.dispatch(\n      studentSearchSlice.actions.setNextLink(data['@odata.nextLink']),\n    );\n    store.dispatch(\n      studentSearchSlice.actions.setUsersState(loadingStateEnum.success),\n    );\n  } else {\n    // Getting users failed\n    store.dispatch(\n      studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n    );\n  }\n}\n\nexport async function getStudentData(\n  userId: string,\n): Promise<{ result: loadingStateEnum; data?: studentInformationType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items?$expand=fields&$filter=fields/userId%20eq%20'${userId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultData: studentInformationType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultData.push({\n        listId: data.value[index].fields.id,\n        driveId: data.value[index].fields.itemId,\n        selected: data.value[index].fields.selected,\n        createdTime: data.value[index].fields.createdTime,\n      });\n    }\n    return { result: loadingStateEnum.success, data: resultData };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function changeStudentSelection(\n  listItemId: string,\n  selectedFileListId: string,\n  fileData: studentInformationType[],\n  fileIndex: number,\n): Promise<{ result: loadingStateEnum; fileData?: studentInformationType[] }> {\n  if (selectedFileListId !== '') {\n    const unselectedIndex = fileData.findIndex(e => {\n      return e.listId === selectedFileListId;\n    });\n    if (unselectedIndex !== -1) {\n      const newFileData = fileData;\n      newFileData[fileIndex].selected = false;\n      const unselectListData = {\n        fields: {\n          selected: false,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.studentFilesListId\n        }/items/${selectedFileListId}`,\n        'PATCH',\n        JSON.stringify(unselectListData),\n      );\n      if (result.ok) {\n        const selectListData = {\n          fields: {\n            selected: true,\n          },\n        };\n        const secondResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${\n            store.getState().paulyList.siteId\n          }/lists/${\n            store.getState().paulyList.studentFilesListId\n          }/items/${listItemId}`,\n          'PATCH',\n          JSON.stringify(selectListData),\n        );\n        if (secondResult.ok) {\n          newFileData[fileIndex].selected = true;\n          return { result: loadingStateEnum.success, fileData: newFileData };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed, fileData: [...newFileData] };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  const selectListData = {\n    fields: {\n      selected: true,\n    },\n  };\n  const secondResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items/${listItemId}`,\n    'PATCH',\n    JSON.stringify(selectListData),\n  );\n  if (secondResult.ok) {\n    const newFileData = fileData;\n    newFileData[fileIndex].selected = true;\n    return { result: loadingStateEnum.success, fileData: [...newFileData] };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function removeStudentSelection(\n  listItemId: string,\n  fileIndex: number,\n  fileData: studentInformationType[],\n): Promise<{ result: loadingStateEnum; fileData?: studentInformationType[] }> {\n  const selectListData = {\n    fields: {\n      selected: false,\n    },\n  };\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items/${listItemId}`,\n    'PATCH',\n    JSON.stringify(selectListData),\n  );\n  if (result.ok) {\n    const newFileData = fileData;\n    newFileData[fileIndex].selected = false;\n    return { result: loadingStateEnum.success, fileData: [...newFileData] };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// This is the number of blocks in a row in the student page.\nexport function getNumberOfBlocks(width: number) {\n  return Math.floor(width / 190) !== 0\n    ? Math.floor(width % 190 >= 0.75 ? width / 190 : (width + 190) / 190)\n    : 1;\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  ViewStyle,\n  Platform,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useNavigate } from 'react-router-native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Colors, loadingStateEnum } from '../types';\nimport store, { RootState } from '../Redux/store';\nimport ProgressView from '../UI/ProgressView';\nimport { PersonIcon, SearchIcon } from '../UI/Icons/Icons';\nimport { studentSearchSlice } from '../Redux/reducers/studentSearchReducer';\nimport BackButton from '../UI/BackButton';\nimport { getNumberOfBlocks, getUsers } from '../Functions/studentFunctions';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport createUUID from '../Functions/ultility/createUUID';\n\nexport default function Students() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { usersState, users, nextLink } = useSelector(\n    (state: RootState) => state.studentSearch,\n  );\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  async function loadUsers() {\n    getUsers();\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  useEffect(() => {\n    if (usersState === loadingStateEnum.loading) {\n      dispatch(\n        safeAreaColorsSlice.actions.setSafeAreaColors({\n          top: Colors.maroon,\n          bottom: Colors.maroon,\n        }),\n      );\n    } else {\n      dispatch(\n        safeAreaColorsSlice.actions.setSafeAreaColors({\n          top: Colors.darkGray,\n          bottom: currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n        }),\n      );\n    }\n  }, [usersState]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      {usersState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor:\n              currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={14} height={14} />\n          <Text style={{ color: Colors.white }}>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {usersState === loadingStateEnum.success ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor:\n                  currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.15,\n                  width,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  backgroundColor: Colors.darkGray,\n                }}\n              >\n                {currentBreakPoint === 0 ? <BackButton to=\"/profile\" /> : null}\n                <Text\n                  style={{ fontFamily: 'BukhariScript', color: Colors.white }}\n                >\n                  Students\n                </Text>\n              </View>\n              <SearchBox\n                getUsers={e => {\n                  if (e !== '') {\n                    getUsers(undefined, e);\n                    dispatch(studentSearchSlice.actions.setNextLink(undefined));\n                  } else {\n                    getUsers();\n                  }\n                }}\n              />\n              <FlatList\n                key={`Students_${createUUID()}`}\n                data={users}\n                renderItem={user => <StudentBlock user={user} />}\n                keyExtractor={item => item.id}\n                numColumns={getNumberOfBlocks(width)}\n                onEndReached={() => {\n                  if (nextLink !== undefined) {\n                    getUsers(nextLink);\n                  }\n                }}\n                style={{ height: height * 0.825 }}\n              />\n            </View>\n          ) : (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor:\n                  currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n              }}\n            >\n              <Pressable\n                onPress={() => {\n                  navigate('/');\n                }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Something went wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction StudentBlock({ user }: { user: ListRenderItemInfo<schoolUserType> }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  async function getImage() {\n    const newUser: any = {};\n    Object.assign(newUser, user.item);\n    if (\n      user.item.imageDownloadUrl !== 'noImage' &&\n      user.item.imageState !== loadingStateEnum.success &&\n      user.item.imageState !== loadingStateEnum.failed &&\n      user.item.imageState !== loadingStateEnum.loading\n    ) {\n      const updateStateUser: any = {};\n      Object.assign(updateStateUser, user.item);\n      updateStateUser.imageState = loadingStateEnum.loading;\n      store.dispatch(\n        studentSearchSlice.actions.setStudentUserByIndex({\n          index: user.index,\n          user: updateStateUser,\n        }),\n      );\n      const result = await callMsGraph(user.item.imageDownloadUrl);\n      if (result.ok) {\n        const data = await result.blob();\n        const urlOut = URL.createObjectURL(data);\n        newUser.imageState = loadingStateEnum.success;\n        newUser.imageDataUrl = urlOut;\n        store.dispatch(\n          studentSearchSlice.actions.setStudentUserByIndex({\n            index: user.index,\n            user: newUser,\n          }),\n        );\n      } else {\n        newUser.imageState = loadingStateEnum.failed;\n        store.dispatch(\n          studentSearchSlice.actions.setStudentUserByIndex({\n            index: user.index,\n            user: newUser,\n          }),\n        );\n      }\n    }\n  }\n\n  useEffect(() => {\n    getImage();\n  }, []);\n\n  function calculateMarginEnds(widthIn: number, side: 'L' | 'R'): number {\n    const numberOfBlocks = getNumberOfBlocks(width);\n    if (user.index % numberOfBlocks === 0) {\n      const widthRemaining = widthIn - (numberOfBlocks - 1) * 190 - 150;\n      if (widthRemaining / 2 >= 120 || side === 'R') {\n        return 20;\n      }\n      return widthRemaining / 2;\n    }\n    if ((user.index + 1) % numberOfBlocks === 0) {\n      const widthRemaining = widthIn - (numberOfBlocks - 1) * 190 - 150;\n      if (widthRemaining / 2 >= 120 || side === 'L') {\n        return 20;\n      }\n      return widthRemaining / 2;\n    }\n    return 20;\n  }\n\n  return (\n    <View\n      key={`StudentBlock_${user.item.id}`}\n      style={{\n        height: 175,\n        width: 150,\n        marginTop: user.index < getNumberOfBlocks(width) ? height * 0.07 : 25,\n        marginBottom: 25,\n        marginLeft: calculateMarginEnds(width, 'L'),\n        marginRight: calculateMarginEnds(width, 'R'),\n        backgroundColor: Colors.white,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n        overflow: 'hidden',\n      }}\n    >\n      <View\n        style={{\n          height: 150,\n          width: 150,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {user.item.imageState === loadingStateEnum.loading ? (\n          <>\n            <ProgressView width={14} height={14} />\n            <Text>Loading</Text>\n          </>\n        ) : (\n          <>\n            {user.item.imageState === loadingStateEnum.success &&\n            user.item.imageDataUrl !== undefined ? (\n              <Image\n                source={{ uri: user.item.imageDataUrl }}\n                style={{ width: 150, height: 150 }}\n              />\n            ) : (\n              <PersonIcon width={150} height={150} />\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ flexDirection: 'row', marginLeft: 5, marginTop: 2 }}>\n        <Text>{user.item.name}</Text>\n        {user.item.student ? <Text>{user.item.grade}</Text> : null}\n      </View>\n    </View>\n  );\n}\n\nfunction SearchBox({ getUsers }: { getUsers: (item: string) => void }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { searchText } = useSelector((state: RootState) => state.studentSearch);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const style: ViewStyle =\n    Platform.OS === 'web' ? { outlineStyle: 'none' } : {};\n  const [mounted, setMounted] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (mounted) {\n      const searchValueSave = searchText;\n      setTimeout(() => {\n        if (store.getState().studentSearch.searchText === searchValueSave) {\n          getUsers(store.getState().studentSearch.searchText);\n        }\n      }, 1500);\n    } else {\n      setMounted(true);\n    }\n  }, [searchText]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.15 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchText}\n            onChangeText={e => {\n              dispatch(studentSearchSlice.actions.setStudentSearch(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: Colors.white }}>{searchText}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import store from '../Redux/store';\nimport { loadingStateEnum } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\n// https://stackoverflow.com/questions/3583724/how-do-i-add-a-delay-in-a-javascript-loop\nconst timer = (ms: number | undefined) =>\n  new Promise(res => setTimeout(res, ms));\n\nexport default async function addImage(\n  userId: string,\n  selectedFile: microsoftFileType,\n): Promise<loadingStateEnum> {\n  // Get Site Root Dirve\n  const siteResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/drive/root`,\n  );\n  if (siteResult.ok) {\n    const siteData = await siteResult.json();\n    // Copy current file to drive\n    const copyPayload = {\n      parentReference: {\n        driveId: siteData.parentReference.driveId,\n        id: siteData.id,\n      },\n    };\n    const copyResult = await callMsGraph(\n      `${selectedFile.callPath}/copy?@microsoft.graph.conflictBehavior=rename`,\n      'POST',\n      JSON.stringify(copyPayload),\n    );\n    if (copyResult.ok) {\n      const copyData = await copyResult.headers.get('Location');\n      let notComplete = true;\n      let resourceId = '';\n\n      while (notComplete) {\n        if (copyData !== null) {\n          const copyFetch = await fetch(copyData);\n          if (copyFetch.ok) {\n            const copyFetchData = await copyFetch.json();\n            if (copyFetchData.status === 'completed') {\n              resourceId = copyFetchData.resourceId;\n              notComplete = false;\n              break;\n            }\n          } else {\n            return loadingStateEnum.failed;\n          }\n        } else {\n          return loadingStateEnum.failed;\n        }\n        await timer(3000);\n      }\n\n      const getItemResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/drive/items/${resourceId}`,\n      );\n      if (getItemResult.ok) {\n        const getItemData = await getItemResult.json();\n        const studentData = {\n          fields: {\n            createdTime: new Date().toISOString(),\n            itemId: getItemData.id,\n            userId,\n            selected: false,\n          },\n        };\n        const studentListResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${\n            store.getState().paulyList.siteId\n          }/lists/${store.getState().paulyList.studentFilesListId}/items`,\n          'POST',\n          JSON.stringify(studentData),\n        );\n        if (studentListResult.ok) {\n          return loadingStateEnum.success;\n        }\n        return loadingStateEnum.failed;\n      }\n      return loadingStateEnum.failed;\n    }\n    return loadingStateEnum.failed;\n  }\n  return loadingStateEnum.failed;\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  ViewStyle,\n  Platform,\n  TextInput,\n  Modal,\n  FlatList,\n  ListRenderItemInfo,\n} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BackButton from '../../../UI/BackButton';\nimport MicrosoftFilePicker from '../../../UI/MicrosoftFilePicker';\nimport store, { RootState } from '../../../Redux/store';\nimport {\n  changeStudentSelection,\n  getStudentData,\n  getUsers,\n  removeStudentSelection,\n} from '../../../Functions/studentFunctions';\nimport { CloseIcon, SearchIcon } from '../../../UI/Icons/Icons';\nimport { studentSearchSlice } from '../../../Redux/reducers/studentSearchReducer';\nimport { Colors, loadingStateEnum } from '../../../types';\nimport ProgressView from '../../../UI/ProgressView';\nimport addImage from '../../../Functions/addImage';\nimport { getTextState } from '../../../Functions/ultility/createUUID';\n\nfunction SelectMainFile({\n  userId,\n  setFilePickingMode,\n}: {\n  userId: string;\n  setFilePickingMode: (item: filePickingModeEnum) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [fileData, setFileData] = useState<studentInformationType[]>([]);\n  const [fileState, setFileState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedFileListId, setSelectedFileListId] = useState<string>('');\n\n  async function loadData() {\n    const result = await getStudentData(userId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setFileState(loadingStateEnum.success);\n      setFileData(result.data);\n      const selectedFileList = result.data.find(e => {\n        return e.selected;\n      });\n      if (selectedFileList !== undefined) {\n        setSelectedFileListId(selectedFileList.listId);\n      }\n    } else {\n      setFileState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        right: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.notStarted);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <View\n        style={{\n          height: height * 0.8,\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          backgroundColor: Colors.white,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          {fileState === loadingStateEnum.loading ? (\n            <View>\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {fileState === loadingStateEnum.success ? (\n                <FlatList\n                  data={fileData}\n                  renderItem={file => (\n                    <StudentSelectFileBlock\n                      key={`${file.item.listId}_${file.item.createdTime}`}\n                      file={file}\n                      setFileData={setFileData}\n                      fileData={fileData}\n                      selectedFileListId={selectedFileListId}\n                      setSelectedFileListId={setSelectedFileListId}\n                    />\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n          <Pressable\n            onPress={() => setFilePickingMode(filePickingModeEnum.create)}\n          >\n            <Text>Create</Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction StudentSelectFileBlock({\n  file,\n  selectedFileListId,\n  setSelectedFileListId,\n  fileData,\n  setFileData,\n}: {\n  file: ListRenderItemInfo<studentInformationType>;\n  setFileData: (item: studentInformationType[]) => void;\n  fileData: studentInformationType[];\n  selectedFileListId: string;\n  setSelectedFileListId: (item: string) => void;\n}) {\n  const [updateState, setUpdateState] = useState(loadingStateEnum.notStarted);\n\n  async function callRemoveSelection() {\n    setUpdateState(loadingStateEnum.loading);\n    const result = await removeStudentSelection(\n      file.item.listId,\n      file.index,\n      fileData,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.fileData !== undefined\n    ) {\n      setSelectedFileListId('');\n      setFileData(result.fileData);\n      setUpdateState(loadingStateEnum.success);\n    } else {\n      setUpdateState(loadingStateEnum.failed);\n    }\n  }\n\n  async function callChangeSelection() {\n    setUpdateState(loadingStateEnum.loading);\n    const result = await changeStudentSelection(\n      file.item.listId,\n      selectedFileListId,\n      fileData,\n      file.index,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.fileData !== undefined\n    ) {\n      setUpdateState(loadingStateEnum.success);\n      setFileData(result.fileData);\n    } else {\n      setUpdateState(loadingStateEnum.failed);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => {\n        if (file.item.selected) {\n          callRemoveSelection();\n        } else {\n          callChangeSelection();\n        }\n      }}\n      style={{\n        backgroundColor: file.item.selected ? Colors.lightGray : Colors.white,\n        borderRadius: 15,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        flexDirection: 'row',\n      }}\n    >\n      <>\n        {updateState === loadingStateEnum.loading ? (\n          <ProgressView width={14} height={14} />\n        ) : (\n          <View\n            style={{\n              width: 14,\n              height: 14,\n              backgroundColor:\n                updateState === loadingStateEnum.success ||\n                loadingStateEnum.notStarted\n                  ? 'green'\n                  : Colors.danger,\n              borderRadius: 7,\n            }}\n          />\n        )}\n      </>\n      <Text style={{ margin: 10 }}>\n        {new Date(file.item.createdTime).toLocaleDateString()}\n      </Text>\n    </Pressable>\n  );\n}\n\nexport default function GovernmentStudents() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { usersState, users } = useSelector(\n    (state: RootState) => state.studentSearch,\n  );\n\n  async function loadUsers() {\n    getUsers();\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <BackButton to=\"/profile/government/\" />\n        <Text style={{ marginTop: 14 }}>Government Students</Text>\n      </View>\n      <SearchBox\n        getUsers={() => {\n          loadUsers();\n        }}\n      />\n      <View style={{ width, height: height * 0.05 }} />\n      <View style={{ height: height * 0.75 }}>\n        {usersState === loadingStateEnum.loading ? (\n          <View\n            style={{\n              width,\n              height: height * 0.8,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView width={12} height={12} />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {usersState === loadingStateEnum.success ? (\n              <FlatList data={users} renderItem={e => <StudentItem e={e} />} />\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ flexDirection: 'row', height: height * 0.1 }}>\n        <Pressable>\n          <Text>Select Folder</Text>\n        </Pressable>\n        <Pressable>\n          <Text>Select Maping Keys</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nenum filePickingModeEnum {\n  notStarted,\n  select,\n  create,\n}\n\nfunction StudentItem({ e }: { e: ListRenderItemInfo<schoolUserType> }) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [filePickingMode, setFilePickingMode] = useState<filePickingModeEnum>(\n    filePickingModeEnum.notStarted,\n  );\n  return (\n    <View style={{ flexDirection: 'row', margin: 5 }}>\n      <Text>{e.item.name}</Text>\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.select);\n        }}\n        style={{ marginLeft: 2 }}\n      >\n        <Text style={{ margin: 2 }}>Choose File</Text>\n      </Pressable>\n      <Modal\n        visible={filePickingMode !== filePickingModeEnum.notStarted}\n        animationType=\"slide\"\n        transparent\n        style={{ width: width * 0.8 }}\n        onRequestClose={() =>\n          setFilePickingMode(filePickingModeEnum.notStarted)\n        }\n      >\n        <Pressable\n          onPress={() => setFilePickingMode(filePickingModeEnum.notStarted)}\n          style={{\n            position: 'absolute',\n            left: 0,\n            height,\n            zIndex: -1,\n            width,\n          }}\n        />\n        <>\n          {filePickingMode === filePickingModeEnum.create ? (\n            <StudentsSelectFile\n              setFilePickingMode={setFilePickingMode}\n              userId={e.item.id}\n            />\n          ) : (\n            <SelectMainFile\n              userId={e.item.id}\n              setFilePickingMode={setFilePickingMode}\n            />\n          )}\n        </>\n      </Modal>\n    </View>\n  );\n}\n\nfunction SearchBox({ getUsers }: { getUsers: (item: string) => void }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { searchText } = useSelector((state: RootState) => state.studentSearch);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const style: ViewStyle =\n    Platform.OS === 'web' ? { outlineStyle: 'none' } : {};\n  const [mounted, setMounted] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (mounted) {\n      const searchValueSave = searchText;\n      setTimeout(() => {\n        if (store.getState().studentSearch.searchText === searchValueSave) {\n          getUsers(store.getState().studentSearch.searchText);\n        }\n      }, 1500);\n    } else {\n      setMounted(true);\n    }\n  }, [searchText]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.1 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchText}\n            onChangeText={e => {\n              dispatch(studentSearchSlice.actions.setStudentSearch(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchText}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction StudentsSelectFile({\n  setFilePickingMode,\n  userId,\n}: {\n  setFilePickingMode: (item: filePickingModeEnum) => void;\n  userId: string;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [isReviewing, setIsReviewing] = useState<boolean>(false);\n  const [selectedFile, setSelectedFile] = useState<\n    microsoftFileType | undefined\n  >(undefined);\n  const [addImageState, setAddImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadAddImage() {\n    if (selectedFile !== undefined) {\n      setAddImageState(loadingStateEnum.loading);\n      const result = await addImage(userId, selectedFile);\n      setAddImageState(result);\n    }\n  }\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        right: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.select);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <>\n        {!isReviewing ? (\n          <View\n            style={{\n              height: height * 0.8,\n              width: width * 0.8,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: Colors.white,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              <MicrosoftFilePicker\n                height={height * 0.8 - 5}\n                width={width * 0.8 - 5}\n                onSelectedFile={file => {\n                  setIsReviewing(true);\n                  setSelectedFile(file);\n                }}\n              />\n            </View>\n          </View>\n        ) : (\n          <View\n            style={{\n              height: height * 0.8,\n              width: width * 0.8,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: Colors.white,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              {selectedFile !== undefined ? (\n                <Pressable\n                  onPress={() => {\n                    loadAddImage();\n                  }}\n                >\n                  <Text>\n                    {getTextState(addImageState, { notStarted: 'Confirm' })}\n                  </Text>\n                </Pressable>\n              ) : null}\n            </View>\n          </View>\n        )}\n      </>\n    </View>\n  );\n}\n","import { View, Text, Platform, Pressable } from 'react-native';\nimport * as Network from 'expo-network';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  DiscoveryDocument,\n  revokeAsync,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport { useMsal } from '@azure/msal-react';\nimport { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { authenticationTokenSlice } from '../Redux/reducers/authenticationTokenReducer';\nimport store, { RootState } from '../Redux/store';\nimport ProgressView from '../UI/ProgressView';\nimport { Colors } from '../types';\nimport { tenantId } from '../PaulyConfig';\nimport { OfflineIcon } from '../UI/Icons/Icons';\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n\nexport default function LoadingView({\n  setOveride,\n  width,\n}: {\n  setOveride: (item: boolean) => void;\n  width: number;\n}) {\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const insets = useSafeAreaInsets();\n  const [isShowingLogout, setIsShowingLogout] = useState<boolean>(false);\n  const [isConnected, setIsConnected] = useState<boolean>(true);\n\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  async function checkIfConnected() {\n    const result = await Network.getNetworkStateAsync();\n    if (result.isInternetReachable) {\n      // Internet reachable\n      setIsConnected(true);\n    } else {\n      setIsConnected(false);\n    }\n  }\n\n  useEffect(() => {\n    checkIfConnected();\n    const intervalId = setInterval(() => {\n      // assign interval to a variable to clear it.\n      checkIfConnected();\n    }, 5000); // 5s\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsShowingLogout(true);\n    }, 10000);\n  }, []);\n\n  return (\n    <View\n      style={{\n        width,\n        top: -insets.top,\n        height,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {isConnected ? (\n        <>\n          <ProgressView width={14} height={14} />\n          <Text style={{ color: Colors.white }}>Loading</Text>\n          {isGovernmentMode ? (\n            <Pressable\n              onPress={() => {\n                setOveride(true);\n              }}\n              style={{ margin: 5 }}\n            >\n              <Text style={{ color: Colors.white }}>Overide</Text>\n            </Pressable>\n          ) : null}\n          {isShowingLogout ? (\n            <Pressable\n              onPress={() => {\n                signOut();\n              }}\n              style={{ margin: 5 }}\n            >\n              <Text style={{ color: Colors.white }}>Logout</Text>\n            </Pressable>\n          ) : null}\n        </>\n      ) : (\n        <OfflineIcon width={50} height={50} color={Colors.white} />\n      )}\n    </View>\n  );\n}\n","import React, { useState } from 'react';\nimport { View, ScaledSize } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport HomePage from './HomePage';\nimport Commissions from './Commissions/Commissions';\nimport Notifications from './Notifications';\nimport Resources from './Resources';\nimport Settings from './Profile/Settings';\nimport Government from './Profile/Government/Government';\nimport MicrosoftGraphOverview from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphOverview';\nimport MicrosoftGraphCreateList from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphCreateList';\nimport GovernmentCommissions from './Profile/Government/GovernmentCommissions/GovernmentCommissions';\nimport GovernmentEditCommission from './Profile/Government/GovernmentCommissions/GovernmentEditCommission';\nimport Sports from './Sports';\nimport Calendar from './Calendar/Calendar';\nimport GovernmentSports from './Profile/Government/GovernmentSports/GovernmentSports';\nimport GovernmentCreateNewSport from './Profile/Government/GovernmentSports/GovernmentCreateNewSport';\nimport GovernmentSportsTeams from './Profile/Government/GovernmentSports/GovernmentSportsTeams';\nimport GovernmentSportTeamEdit from './Profile/Government/GovernmentSports/GovernmentSportTeamEdit';\nimport GovernmentSportsTeamAddPost from './Profile/Government/GovernmentSports/GovernmentSportsTeamAddPost';\nimport GovernmentReviewFileSubmission from './Profile/Government/GovernmentSports/GovernmentReviewFileSubmission';\nimport GovernmentCalendar from './Profile/Government/GovernmentCalendar/GovernmentCalendar';\nimport GovernmentSchedual from './Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentSchedule';\nimport GovernmentTimetable from './Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetable';\nimport GovernmentScheduleEdit from './Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentScheduleEdit';\nimport GovernmentClasses from './Profile/Government/GovernmentClasses/GovernmentClasses';\nimport GovernmentClassesEdit from './Profile/Government/GovernmentClasses/GovernmentClassesEdit';\nimport GovernmentHomePage from './Profile/Government/GovernmentHomePage';\nimport NavBarComponent from '../UI/NavComponent';\nimport PageNotFound from './404Page';\nimport GovernmentAdmin from './Profile/Government/GovernmentAdminCenter/GovernmentAdmin';\nimport GovernmentRooms from './Profile/Government/GovernmentClasses/GovernmentRooms';\nimport GovernmentRoomsCreate from './Profile/Government/GovernmentClasses/GovermentRoomsCreate';\nimport MicrosoftGraphEdit from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphEdit';\nimport GovernmentResources from './Profile/Government/GovernmentResources';\nimport GovernmentDressCode from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCode';\nimport GovernmentDressCodeEdit from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit';\nimport GovernmentTimetableEdit from './Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetableEdit';\nimport { RootState } from '../Redux/store';\nimport ProfileBlock from './Profile/ProfileBlock';\nimport Students from './Students';\nimport GovernmentStudents from './Profile/Government/GovernmentStudents';\nimport { Colors } from '../types';\nimport LoadingScreen from './LoadingScreen';\n\nexport default function AuthenticatedView({\n  dimensions,\n  width,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n  width: number;\n}) {\n  const { height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const authenticationToken = useSelector(\n    (state: RootState) => state.authenticationToken,\n  );\n  const isShowingProfileBlock = useSelector(\n    (state: RootState) => state.isShowingProfileBlock,\n  );\n  const insets = useSafeAreaInsets();\n  const [overide, setOveride] = useState<boolean>(false);\n  if ((siteId !== '' || overide) && authenticationToken !== '') {\n    return (\n      <View style={{ width, top: -insets.top }}>\n        <NativeRouter>\n          <View style={{ flexDirection: 'row', width }}>\n            {currentBreakPoint >= 1 ? (\n              <NavBarComponent\n                width={width * 0.1}\n                height={dimensions.window.height}\n              />\n            ) : null}\n            <View\n              style={{\n                width: currentBreakPoint >= 1 ? width * 0.9 : width,\n                height,\n                backgroundColor: Colors.maroon,\n              }}\n            >\n              <Routes>\n                <Route path=\"/\" element={<HomePage />} />\n                <Route path=\"/sports\" element={<Sports />} />\n                <Route path=\"/notifications\" element={<Notifications />} />\n                <Route path=\"/calendar\" element={<Calendar />} />\n                <Route path=\"/resources\" element={<Resources />} />\n                <Route path=\"/commissions\" element={<Commissions />} />\n                <Route path=\"/profile\" element={<Settings />} />\n                <Route path=\"/students\" element={<Students />} />\n                <Route path=\"/profile/government\" element={<Government />} />\n                <Route\n                  path=\"/profile/government/resources\"\n                  element={<GovernmentResources />}\n                />\n                <Route\n                  path=\"/profile/government/admin\"\n                  element={<GovernmentAdmin />}\n                />\n                <Route\n                  path=\"/profile/government/graph/:mode\"\n                  element={<MicrosoftGraphOverview />}\n                />\n                <Route\n                  path=\"/profile/government/graph/:mode/edit/:id\"\n                  element={<MicrosoftGraphEdit />}\n                />\n                <Route\n                  path=\"/profile/government/graph/:mode/create\"\n                  element={<MicrosoftGraphCreateList />}\n                />\n                <Route\n                  path=\"/profile/government/commissions\"\n                  element={<GovernmentCommissions />}\n                />\n                <Route\n                  path=\"/profile/government/commissions/:id\"\n                  element={<GovernmentEditCommission />}\n                />\n                <Route\n                  path=\"/profile/government/homepage\"\n                  element={<GovernmentHomePage />}\n                />\n                <Route\n                  path=\"/profile/government/students\"\n                  element={<GovernmentStudents />}\n                />\n                <Route\n                  path=\"/profile/government/classes\"\n                  element={<GovernmentClasses />}\n                />\n                <Route\n                  path=\"/profile/government/classes/edit/:id\"\n                  element={<GovernmentClassesEdit />}\n                />\n                <Route\n                  path=\"/profile/government/classes/room\"\n                  element={<GovernmentRooms />}\n                />\n                <Route\n                  path=\"/profile/government/classes/room/create\"\n                  element={<GovernmentRoomsCreate />}\n                />\n                <Route\n                  path=\"/profile/government/calendar\"\n                  element={<GovernmentCalendar />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/schedule\"\n                  element={<GovernmentSchedual />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/schedule/:id\"\n                  element={<GovernmentScheduleEdit />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/timetable\"\n                  element={<GovernmentTimetable />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/timetable/:id\"\n                  element={<GovernmentTimetableEdit />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/dresscode\"\n                  element={<GovernmentDressCode />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/dresscode/:id\"\n                  element={<GovernmentDressCodeEdit />}\n                />\n                <Route\n                  path=\"/profile/government/sports\"\n                  element={<GovernmentSports />}\n                />\n                <Route\n                  path=\"/profile/government/sports/create\"\n                  element={<GovernmentCreateNewSport />}\n                />\n                <Route\n                  path=\"/profile/government/sports/team/:sport/:id\"\n                  element={<GovernmentSportsTeams />}\n                />\n                <Route\n                  path=\"/profile/government/sports/team/:sport/:id/:teamId\"\n                  element={<GovernmentSportTeamEdit />}\n                />\n                <Route\n                  path=\"/profile/government/sports/post/create\"\n                  element={<GovernmentSportsTeamAddPost />}\n                />\n                <Route\n                  path=\"/profile/government/sports/post/review/:submissionID\"\n                  element={<GovernmentReviewFileSubmission />}\n                />\n                <Route path=\"*\" element={<PageNotFound />} />\n              </Routes>\n              {currentBreakPoint >= 1 && isShowingProfileBlock ? (\n                <ProfileBlock />\n              ) : null}\n            </View>\n          </View>\n        </NativeRouter>\n      </View>\n    );\n  }\n  return <LoadingScreen setOveride={setOveride} width={width} />;\n}\n","import callMsGraph from './microsoftAssets';\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport store from '../../Redux/store';\nimport { paulyListSlice } from '../../Redux/reducers/paulyListReducer';\n\nexport default async function getPaulyLists() {\n  const getRootSiteIdResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/sites/root?$select=id`,\n    'GET',\n  );\n  if (getRootSiteIdResult.ok) {\n    const getRootSiteIdResultData = await getRootSiteIdResult.json();\n    const paulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items?expand=fields&$select=id`,\n      'GET',\n    );\n    if (paulyListResult.ok) {\n      const paulyListResultData = await paulyListResult.json();\n      // store.dispatch(paulyListSlice.actions.setPaulyList({siteId: getRootSiteIdResultData[\"id\"], commissionListId: paulyListResultData[\"fields\"][\"commissionListId\"], paulyDataListId: paulyListResultData[\"fields\"][\"paulyDataListId\"], scheduleListId: paulyListResultData[\"fields\"][\"scheduleListId\"], sportsListId: paulyListResultData[\"fields\"][\"sportsListId\"], sportsApprovedSubmissionsListId: paulyListResultData[\"fields\"][\"sportsApprovedSubmissionsListId\"], sportsSubmissionsListId: paulyListResultData[\"fields\"][\"sportsSubmissionsListId\"], timetablesListId: paulyListResultData[\"fields\"][\"timetablesListId\"]}))\n      store.dispatch(\n        paulyListSlice.actions.setPaulyList({\n          siteId: getRootSiteIdResultData.id,\n          studentFilesListId:\n            paulyListResultData.value[0].fields.studentFilesListId,\n          commissionListId:\n            paulyListResultData.value[0].fields.commissionListId,\n          commissionSubmissionsListId:\n            paulyListResultData.value[0].fields.commissionSubmissionsListId,\n          paulyDataListId: paulyListResultData.value[0].fields.paulyDataListId,\n          scheduleListId: paulyListResultData.value[0].fields.scheduleListId,\n          sportsListId: paulyListResultData.value[0].fields.sportsListId,\n          sportsApprovedSubmissionsListId:\n            paulyListResultData.value[0].fields.sportsApprovedSubmissionsListId,\n          sportsSubmissionsListId:\n            paulyListResultData.value[0].fields.sportsSubmissionsListId,\n          timetablesListId:\n            paulyListResultData.value[0].fields.timetablesListId,\n          resourceListId: paulyListResultData.value[0].fields.resourceListId,\n          dressCodeListId: paulyListResultData.value[0].fields.dressCodeListId,\n          eventTypeExtensionId:\n            paulyListResultData.value[0].fields.eventTypeExtensionId,\n          eventDataExtensionId:\n            paulyListResultData.value[0].fields.eventDataExtensionId,\n          classExtensionId:\n            paulyListResultData.value[0].fields.classExtensionId,\n          resourceExtensionId:\n            paulyListResultData.value[0].fields.resourceExtensionId,\n          roomListId: paulyListResultData.value[0].fields.roomListId,\n        }),\n      );\n    } else {\n      // TO DO THIS IS A BIG PROBLEM SHUT DOWN APP BC most of it don't work lost connection to server\n    }\n  } else {\n    // TO DO THIS IS A BIG PROBLEM SHUT DOWN APP BC most of it don't work lost connection to server\n  }\n}\n","import { microsoftProfileDataSlice } from '../../Redux/reducers/microsoftProfileDataReducer';\nimport store from '../../Redux/store';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function getUserProfile() {\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/photo/$value',\n    'GET',\n  );\n  if (result.ok) {\n    const dataBlob = await result.blob();\n    const urlOut = URL.createObjectURL(dataBlob);\n    const profileResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/me',\n      'GET',\n    );\n    if (profileResult.ok) {\n      const profileData = await profileResult.json();\n      store.dispatch(\n        microsoftProfileDataSlice.actions.setMicrosoftProfileData({\n          uri: urlOut,\n          displayName: profileData.displayName,\n          id: profileData.id,\n        }),\n      );\n    }\n  } else {\n    const profileResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/me',\n      'GET',\n    );\n    if (profileResult.ok) {\n      const profileData = await profileResult.json();\n      store.dispatch(\n        microsoftProfileDataSlice.actions.setMicrosoftProfileData({\n          uri: '',\n          displayName: profileData.displayName,\n          id: profileData.id,\n        }),\n      );\n    }\n  }\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { orgWideGroupID } from '../PaulyConfig';\nimport { isGovernmentModeSlice } from '../Redux/reducers/isGovernmentModeReducer';\nimport store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function validateGovernmentMode() {\n  const userResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me?$select=id',\n  );\n  if (userResult.ok) {\n    const userData = await userResult.json();\n    const teamsResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/owners?$filter=id%20eq%20'${userData.id}'`,\n    );\n    if (teamsResult.ok) {\n      const teamsData = await teamsResult.json();\n      if (teamsData.value.length === 1) {\n        if (teamsData.value[0].id === userData.id) {\n          try {\n            await AsyncStorage.setItem(\n              'paulyGovernmentMode',\n              JSON.stringify(true),\n            );\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(true),\n            );\n          } catch (e) {\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          }\n        } else {\n          try {\n            await AsyncStorage.setItem(\n              'paulyGovernmentMode',\n              JSON.stringify(false),\n            );\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          } catch (e) {\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          }\n        }\n      } else {\n        try {\n          await AsyncStorage.setItem(\n            'paulyGovernmentMode',\n            JSON.stringify(false),\n          );\n          store.dispatch(\n            isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n          );\n        } catch (e) {\n          store.dispatch(\n            isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n          );\n        }\n      }\n    } else if (teamsResult.status === 404) {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(true));\n    } else {\n      try {\n        await AsyncStorage.setItem(\n          'paulyGovernmentMode',\n          JSON.stringify(false),\n        );\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      } catch (e) {\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      }\n    }\n  } else {\n    try {\n      await AsyncStorage.setItem('paulyGovernmentMode', JSON.stringify(false));\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    } catch (e) {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    }\n  }\n}\n\nexport async function checkIfGovernmentMode() {\n  try {\n    const value = await AsyncStorage.getItem('paulyGovernmentMode');\n    if (value !== null) {\n      // value previously stored\n      const governmentMode = JSON.parse(value);\n      if (governmentMode) {\n        store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(true));\n      } else {\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      }\n    } else {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    }\n  } catch (e) {\n    // error reading value\n    store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n  }\n}\n\nexport async function setWantGovernment(value: boolean) {\n  if (value) {\n    try {\n      await AsyncStorage.setItem(\n        'paulyWantGovernmentMode',\n        JSON.stringify(true),\n      );\n    } catch (e) {\n      // TO DO deal with error\n    }\n  } else {\n    try {\n      await AsyncStorage.setItem(\n        'paulyWantGovernmentMode',\n        JSON.stringify(false),\n      );\n    } catch (e) {\n      // TO DO deal with error\n    }\n  }\n}\n\nexport async function getWantGovernment(): Promise<boolean> {\n  try {\n    const value = await AsyncStorage.getItem('paulyWantGovernmentMode');\n    if (value !== null) {\n      const result = JSON.parse(value);\n      if (result) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  } catch {\n    return false;\n    // TO DO deal with error\n  }\n}\n","import { SafeAreaView, ScaledSize } from 'react-native';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EventType, PublicClientApplication } from '@azure/msal-browser';\nimport {\n  AuthenticatedTemplate,\n  MsalProvider,\n  UnauthenticatedTemplate,\n  useMsal,\n} from '@azure/msal-react';\nimport Login from '../src/login';\nimport AuthenticatedViewMain from '../src/AuthenticatedView/AuthenticatedViewMain';\nimport { clientId, scopes, tenantId } from '../src/PaulyConfig';\nimport getPaulyLists from '../src/Functions/ultility/getPaulyLists';\nimport getUserProfile from '../src/Functions/ultility/getUserProfile';\nimport { authenticationTokenSlice } from '../src/Redux/reducers/authenticationTokenReducer';\nimport {\n  checkIfGovernmentMode,\n  getWantGovernment,\n  setWantGovernment,\n  validateGovernmentMode,\n} from '../src/Functions/handleGovernmentLogin';\nimport { RootState } from '../src/Redux/store';\n\n// This is for the microsoft authentication.\nconst pca = new PublicClientApplication({\n  auth: {\n    clientId,\n    authority: `https://login.microsoftonline.com/${tenantId}/`,\n    redirectUri: 'http://localhost:19006',\n  },\n});\n\nfunction AuthDeep({\n  dimensions,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n}) {\n  const { instance } = useMsal();\n  const dispatch = useDispatch();\n  const authenticationCall = useSelector(\n    (state: RootState) => state.authenticationCall,\n  );\n\n  async function getAuthToken(userInitated: boolean, government?: boolean) {\n    // Account selection logic is app dependent. Adjust as needed for different use cases.\n    // Set active acccount on page load\n    if (government !== undefined) {\n      setWantGovernment(government);\n    }\n\n    const accounts = instance.getAllAccounts();\n    if (accounts.length > 0) {\n      instance.setActiveAccount(accounts[0]);\n      const accountResult = await instance.getActiveAccount();\n      if (accountResult !== null) {\n        const result = await instance.acquireTokenSilent({\n          scopes,\n        });\n        dispatch(\n          authenticationTokenSlice.actions.setAuthenticationToken(\n            result.accessToken,\n          ),\n        );\n        getPaulyLists();\n        getUserProfile();\n        if (await getWantGovernment()) {\n          checkIfGovernmentMode();\n        }\n      }\n    }\n\n    instance.addEventCallback((event: any) => {\n      // set active account after redirect\n      if (\n        event.eventType === EventType.LOGIN_SUCCESS &&\n        event.payload.account\n      ) {\n        const { account } = event.payload;\n        instance.setActiveAccount(account);\n      }\n    });\n\n    // handle auth redired/do all initial setup for msal\n    instance\n      .handleRedirectPromise()\n      .then(async authResult => {\n        // Check if user signed in\n        const account = instance.getActiveAccount();\n        if (!account && userInitated) {\n          // redirect anonymous user to login page\n          instance.loginRedirect({\n            scopes,\n          });\n        } else if (account) {\n          if (authResult !== undefined && authResult !== null) {\n            dispatch(\n              authenticationTokenSlice.actions.setAuthenticationToken(\n                authResult.accessToken,\n              ),\n            );\n            if (await getWantGovernment()) {\n              validateGovernmentMode();\n            }\n            getPaulyLists();\n            getUserProfile();\n          }\n        }\n      })\n      .catch(async err => {\n        // TODO: Handle errors\n        try {\n          const result = await instance.acquireTokenSilent({\n            scopes,\n          });\n          dispatch(\n            authenticationTokenSlice.actions.setAuthenticationToken(\n              result.accessToken,\n            ),\n          );\n          if (await getWantGovernment()) {\n            validateGovernmentMode();\n          }\n          getPaulyLists();\n          getUserProfile();\n        } catch (e) {}\n      });\n  }\n\n  useEffect(() => {\n    getAuthToken(false);\n  }, []);\n\n  const refreshToken = async () => {\n    const result = await instance.acquireTokenSilent({\n      scopes,\n    });\n    dispatch(\n      authenticationTokenSlice.actions.setAuthenticationToken(\n        result.accessToken,\n      ),\n    );\n  };\n\n  useEffect(() => {\n    refreshToken();\n  }, [authenticationCall, refreshToken]);\n\n  return (\n    <SafeAreaView\n      style={{\n        width: dimensions.window.width,\n        height: dimensions.window.height,\n        zIndex: 2,\n        position: 'absolute',\n        left: 0,\n        top: 0,\n      }}\n    >\n      <AuthenticatedTemplate>\n        <AuthenticatedViewMain\n          dimensions={dimensions}\n          width={dimensions.window.width}\n        />\n      </AuthenticatedTemplate>\n      <UnauthenticatedTemplate>\n        <Login\n          onGetAuthToken={() => {\n            getAuthToken(true, false);\n          }}\n          onGetGovernmentAuthToken={() => {\n            getAuthToken(true, true);\n          }}\n          width={dimensions.window.width}\n          isLoading={false}\n        />\n      </UnauthenticatedTemplate>\n    </SafeAreaView>\n  );\n}\n\nexport default function AppMain({\n  dimensions,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n}) {\n  return (\n    <MsalProvider instance={pca}>\n      <SafeAreaView\n        style={{\n          width: dimensions.window.width,\n          height: dimensions.window.height,\n          zIndex: 2,\n          position: 'absolute',\n          left: 0,\n          top: 0,\n        }}\n      >\n        <AuthDeep dimensions={dimensions} />\n      </SafeAreaView>\n    </MsalProvider>\n  );\n}\n","/**\n * Pauly React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Dimensions, View } from 'react-native';\nimport { DefaultTheme, PaperProvider } from 'react-native-paper';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Provider, useSelector } from 'react-redux';\n\nimport {\n  SafeAreaProvider,\n  SafeAreaView,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport store, { RootState } from './src/Redux/store';\nimport { dimentionsSlice } from './src/Redux/reducers/dimentionsReducer';\nimport AppMain from './AppMain/AppMain';\nimport { Colors, breakPointMode } from './src/types';\n\nconst windowDimensions = Dimensions.get('window');\nconst screenDimensions = Dimensions.get('screen');\n\nfunction AppCore() {\n  // Dimentions\n  const safeAreaColors = useSelector(\n    (state: RootState) => state.safeAreaColors,\n  );\n  const expandedMode = useSelector((state: RootState) => state.expandedMode);\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [dimensions, setDimensions] = useState({\n    window: windowDimensions,\n    screen: screenDimensions,\n  });\n  const insets = useSafeAreaInsets();\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener(\n      'change',\n      ({ window, screen }) => {\n        setDimensions({ window, screen });\n      },\n    );\n    return () => subscription?.remove();\n  });\n\n  useEffect(() => {\n    const width = dimensions.window.width - insets.left - insets.right;\n    if (width >= 576) {\n      if (expandedMode) {\n        store.dispatch(\n          dimentionsSlice.actions.setDimentionsWidth(width * 0.75),\n        );\n      } else {\n        store.dispatch(dimentionsSlice.actions.setDimentionsWidth(width * 0.9));\n      }\n    }\n  }, [expandedMode]);\n\n  useEffect(() => {\n    const oldWidth = store.getState().dimentions.width;\n    const { height } = store.getState().dimentions;\n    const newWidth = dimensions.window.width - insets.left - insets.right;\n    const newHeight = dimensions.window.height - insets.bottom - insets.top;\n    if (oldWidth !== newWidth) {\n      const oldCurrentBreakPointMode: breakPointMode =\n        store.getState().dimentions.currentBreakPoint;\n      let currentBreakPoint: breakPointMode = breakPointMode.xSmall;\n      if (newWidth >= 1200) {\n        // extraLarge ≥1200px\n        currentBreakPoint = breakPointMode.xLarge;\n      } else if (newWidth >= 992) {\n        // large, ≥992px\n        currentBreakPoint = breakPointMode.large;\n      } else if (newWidth >= 768) {\n        // medium, ≥768px\n        currentBreakPoint = breakPointMode.medium;\n      } else if (newWidth >= 576) {\n        // small, ≥576px\n        currentBreakPoint = breakPointMode.small;\n      } else if (newWidth < 576) {\n        // xSmall,\t<576px\n        currentBreakPoint = breakPointMode.xSmall;\n      }\n      if (oldCurrentBreakPointMode !== currentBreakPoint) {\n        if (newWidth >= 576) {\n          if (expandedMode) {\n            store.dispatch(\n              dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n                width: newWidth * 0.75,\n                currentBreakPoint,\n              }),\n            );\n          } else {\n            store.dispatch(\n              dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n                width: newWidth * 0.9,\n                currentBreakPoint,\n              }),\n            );\n          }\n        } else {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n              width: newWidth,\n              currentBreakPoint,\n            }),\n          );\n        }\n      } else if (newWidth >= 576) {\n        if (expandedMode) {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidth(newWidth * 0.75),\n          );\n        } else {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidth(newWidth * 0.9),\n          );\n        }\n      } else {\n        store.dispatch(dimentionsSlice.actions.setDimentionsWidth(newWidth));\n      }\n    }\n    if (height !== newHeight) {\n      store.dispatch(dimentionsSlice.actions.setDimentionsHeight(newHeight));\n    }\n  }, [dimensions]);\n\n  return (\n    <>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: insets.top,\n          backgroundColor: safeAreaColors.top,\n        }}\n      />\n      <SafeAreaView\n        style={{\n          backgroundColor: safeAreaColors.bottom,\n          width: dimensions.window.width,\n          height: dimensions.window.height - (insets.top + insets.bottom),\n          zIndex: 10,\n          top: insets.top,\n          position: 'absolute',\n        }}\n      >\n        <AppMain dimensions={dimensions} />\n      </SafeAreaView>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: insets.bottom,\n          backgroundColor: safeAreaColors.bottom,\n          position: 'absolute',\n          bottom: 0,\n        }}\n      />\n      {currentBreakPoint >= 1 ? (\n        <View\n          style={{\n            height: dimensions.window.height,\n            width: expandedMode\n              ? dimensions.window.width * 0.25\n              : dimensions.window.width * 0.1,\n            backgroundColor: '#793033',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    // Primary\n    primary: Colors.darkGray, // ALL G\n    primaryContainer: Colors.maroon, // Selected Am Mode\n    onPrimary: Colors.black, // This is special Text\n    onPrimaryContainer: Colors.black,\n    inversePrimary: Colors.white,\n\n    secondary: Colors.black,\n    secondaryContainer: Colors.lightGray, // Back box of selected time or hour\n    onSecondary: Colors.black, // text like if hour or minute is selected\n    onSecondaryContainer: Colors.black,\n\n    // Tertiary\n    tertiary: Colors.darkGray,\n    tertiaryContainer: Colors.darkGray,\n    onTertiary: Colors.darkGray,\n\n    // Background\n    surface: Colors.white, // ALL G\n    surfaceVariant: Colors.lightGray, // ALL G this is the circle\n    onSurfaceVariant: Colors.black, // This is am pm and title text\n    background: Colors.lightGray,\n    onSurface: Colors.black, // This is most text\n    onBackground: Colors.black,\n    backdrop: 'rgba(237, 237, 237, 0.77)',\n\n    outline: Colors.black, // ALL G\n    outlineVariant: Colors.black,\n\n    shadow: Colors.black,\n    scrim: Colors.black,\n  },\n};\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PaperProvider theme={theme}>\n        <SafeAreaProvider>\n          <GestureHandlerRootView style={{ flex: 1 }}>\n            <AppCore />\n          </GestureHandlerRootView>\n        </SafeAreaProvider>\n      </PaperProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [730], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["monthDataSlice","createSlice","name","initialState","reducers","setMonthData","_state","action","payload","setResourcesLastCalled","breakPointMode","loadingStateEnum","postType","dataContentTypeOptions","taskImportanceEnum","taskStatusEnum","resourceResponce","commissionTypeEnum","paulyEventType","recurringType","semesters","submissionTypeEnum","locationStateEnum","calendarMode","resourceMode","Colors","_createClass","_classCallCheck","white","maroon","lightGray","darkGray","black","danger","initalState","top","bottom","safeAreaColorsSlice","setSafeAreaColors","state","setSafeAreaColorTop","_objectSpread","setSafeAreaColorBottom","microsoftProfileDataSlice","uri","displayName","id","setMicrosoftProfileData","currentEventsSlice","setCurrentEvents","_toConsumableArray","pushEvent","concat","removeCurrentEvent","slice","setCurrentEventsLastCalled","Date","toISOString","selectedDateSlice","setSelectedDate","paulyListSlice","siteId","studentFilesListId","commissionListId","commissionSubmissionsListId","paulyDataListId","scheduleListId","sportsListId","sportsApprovedSubmissionsListId","sportsSubmissionsListId","timetablesListId","resourceListId","eventTypeExtensionId","eventDataExtensionId","classExtensionId","resourceExtensionId","dressCodeListId","roomListId","setPaulyList","authenticationTokenSlice","setAuthenticationToken","setAuthenticationRefreshToken","dimentionsSlice","width","height","currentBreakPoint","setDimentionsWidth","setDimentionsWidthCurrentBreakPoint","setDimentionsHeight","setAuthenticationApiToken","taskDeltaSlice","setTaskDeltaLink","tasksDeltaReducer","reducer","tasksReducer","message","animationSpeed","powerpointBlob","powerpointShare","paulyDataState","loading","paulyDataSlice","setPaulyData","setPaulyDataState","initalResourcesState","resources","loadingState","searchValue","resourceFollow","selectedResourceMode","home","resourcesSlice","setResourceData","pushResource","push","setResources","setResourcesState","setSearchValue","setResourceFollow","setSelectedResourceMode","eventName","createEventState","notStarted","isPickingStartDate","isPickingEndDate","allDay","isGovernmentEvent","selectedTimetable","selectedSchoolDayData","undefined","selectedSchoolYear","selectedEventType","personal","recurringEvent","selectedRecurringType","daily","startDate","endDate","isShowingAddDate","isEditing","selectedCalendarMode","month","selectedEvent","addEventSlice","setEventName","setCreateEventState","setIsPickingStartDate","setIsPickingEndDate","setAllDay","setIsGovernmentEvent","setSelectedTimetable","setSelectedSchoolDayData","setSelectedSchoolYear","setSelectedEventType","setRecurringEvent","setSelectedRecurringType","setStartDate","setEndDate","setIsShowingAddDate","setIsEditing","setSelectedCalendarMode","setSelectedEvent","taskState","userState","trendingState","userData","trendingData","userTasks","importance","normal","status","excess","schoolDayData","startTime","isShowingCompleteTasks","homepageDataSlice","setTaskState","setUserState","setTrendingState","setUserData","setTrendingData","setUserTasks","updateUserTask","index","length","task","unshiftUserTask","unshift","popUserTask","splice","setSchoolDayData","setStartTime","setIsShowingCompletedTasks","expandedModeSlice","setExpandedMode","isShowingProfileBlockSlice","setIsShowingProfileBlock","isGovernmentModeSlice","setIsGovernmentMode","commissionsState","points","currentCommissions","selectedCommission","commissionNextLink","commissionsSlice","setCommissionsState","setPoints","setCurrentCommissions","setSelectedCommission","setCommissionNextLink","pdfDataSlice","inject","images","pageNumber","setInject","addImage","setImages","setPageNumber","increasePageNumber","decreasePageNumber","monthViewSlice","setMonthViewData","authenticationCallSlice","setAuthenticationCallIncrement","searchText","users","usersState","nextLink","studentSearchSlice","setStudentSearch","setStudentUsers","setUsersState","setNextLink","setStudentUserByIndex","user","setStudentUserById","findIndex","e","configureStore","addEvent","addEventReducer","authenticationToken","authenticationTokenReducer","authenticationApiToken","authenticationApiTokenReducer","authenticationRefreshToken","authenticationRefreshTokenReducer","authenticationCall","authenticationCallReducer","commissions","commissionsReducer","currentEvents","currentEventsReducer","currentEventsLastCalled","currentEventsLastCalledReducer","dimentions","dimentionsReducer","expandedMode","expandedModeReducer","homepageData","homepageDataReducer","isGovernmentMode","isGovernmentModeReducer","isShowingProfileBlock","isShowingProfileBlockReducer","microsoftProfileData","microsoftProfileDataReducer","monthData","monthDataReducer","monthView","monthViewReducer","paulyData","paulyDataReducer","paulyList","paulyListReducer","pdfData","pdfDataReducer","resourcesReducer","resourcesLastCalled","resourcesLastCallReducer","safeAreaColors","safeAreaColorsReducer","tasks","tasksDeltaLink","selectedDate","selectedDateReducer","studentSearch","studentSearchReducer","middleware","getDefaultMiddleware","immutableCheck","CalendarIcon","_ref","style","_jsx","View","children","_jsxs","Svg","viewBox","fill","Path","d","fillRule","clipRule","MedalIcon","_ref2","G","strokeWidth","strokeLinecap","strokeLinejoin","Polygon","BookIcon","_ref3","GovernmentIcon","_ref4","HomeIcon","_ref5","UpIcon","_ref6","DownIcon","_ref7","AddIcon","_ref8","CloseIcon","_ref9","ChevronLeft","_ref10","props","ChevronRight","_ref11","FolderIcon","_ref12","stroke","DocumentIcon","_ref13","Rect","x","y","CopyIcon","_ref15","PersonIcon","_ref16","GearIcon","_ref17","GraduationHatIcon","_ref18","WarningIcon","_ref19","outlineColor","Circle","cx","cy","r","SearchIcon","_ref20","WordIcon","_ref21","Defs","LinearGradient","x1","y1","x2","y2","gradientTransform","gradientUnits","Stop","offset","stopColor","opacity","PowerpointIcon","_ref22","ExcelIcon","_ref23","VideoIcon","_ref24","PDFIcon","_ref25","ImageIcon","_ref26","AudioIcon","_ref27","OneNoteIcon","_ref28","fillOpacity","rx","GraphAPILogo","_ref29","ClipPath","clipPath","StudentSearchIcon","_ref30","TimeIcon","_ref31","TrashIcon","_ref32","color","OfflineIcon","_ref33","BoldIcon","_ref34","strokeMiterlimit","ItalicIcon","_ref35","Line","StrikeThroughIcon","_ref36","UnderlineIcon","_ref37","Polyline","RightAlignmentIcon","_ref38","LeftAlignmentIcon","_ref39","CenterAlignmentIcon","_ref40","AnimatedPath","Animated","_worklet_9513762084135_init_data","code","location","ChipView","progress","useSharedValue","useEffect","value","withDelay","withRepeat","withTiming","duration","animatedProp","useAnimatedProps","_f","interpolateColor","_closure","__initData","__workletHash","translate","animatedProps","ProgressView","map","path","Login","onGetAuthToken","onGetGovernmentAuthToken","isLoading","useSelector","_useState","useState","_useState2","_slicedToArray","isBottonHover","setIsButtonHover","_useState3","_useState4","isGovernmentHover","setIsGovernmentHover","_useState5","_useState6","fontSize","setFontSize","_useState7","_useState8","isShowingGovernmentLogin","setIsShowingGovernmentLogin","insets","useSafeAreaInsets","dispatch","useDispatch","safeArea","useCallback","_setSafeAreaColors","_asyncToGenerator","actions","apply","arguments","_useFonts","useFonts","BukhariScript","require","fontsLoaded","SplashScreen","Pressable","backgroundColor","alignContent","alignItems","justifyContent","overflow","onLongPress","delayLongPress","flexDirection","Image","source","resizeMode","position","left","Text","fontFamily","textShadowColor","textShadowOffset","textShadowRadius","selectable","marginTop","onPress","onHoverIn","onHoverOut","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","textAlign","fontWeight","findFirstDayinMonth","currentTime","year","getFullYear","getMonth","getDay","calculateIfShowing","Time","dateToCheck","today","getDate","isDateToday","hourInt","getHours","minuiteInt","getMinutes","resepctiveTime","toString","findTimeOffset","time","minutieWidth","orgWideGroupID","tenantId","clientId","domainName","paulyDomain","scopes","raindropToken","callMsGraph","_x","_x2","_x3","_x4","_x5","_callMsGraph","url","method","body","headersIn","secondAuth","headers","Headers","bearer","store","getState","append","headerIndex","key","options","outUrl","Platform","OS","urlArray","split","response","fetch","previousValue","Promise","resolve","unsubscribe","subscribe","result","largeBatch","_largeBatch","defaultBatchData","createData","data","failed","batchIndex","keys","array","createDataIndex","firstUrl","secondUrl","forEach","output","batchData","requests","JSON","stringify","ok","batchResultData","json","responses","success","createUUID","crypto","randomUUID","getTextState","labels","cannotStart","offline","getDressCode","_getDressCode","dressCodeId","dressCodeData","parse","fields","dressCodeIncentivesData","dressCodeName","listId","dressCodeIncentives","getGraphEvents","_getGraphEvents","referenceUrl","newEvents","_loop","_singleValueExtendedP","_singleValueExtendedP2","eventTypeExtensionID","eventDataExtensionID","singleValueExtendedProperties","eventType","find","eventData","subject","start","dateTime","endTime","end","isAllDay","eventColor","paulyEventData","microsoftEvent","microsoftReference","events","getEvent","_getEvent","event","_eventData$find","_eventData$find2","getSchedule","_getSchedule","resultSchedule","properName","scheduleProperName","descriptiveName","scheduleDescriptiveName","periods","scheduleData","scheduleId","scheduleColor","schedule","listItemId","getSchedules","_getSchedules","dataResult","newLoadedSchedules","_unused","getTimetable","_getTimetable","timetableId","timetableDataSchedules","newSchedules","dressCodeResult","timetableDressCodeId","resultingTimetable","timetableName","schedules","days","timetableDataDays","dressCode","timetable","_getSchoolDay","UTC","_ret","_loop2","_eventData$find3","_eventData$find4","_eventData$find5","v","_getSchoolDays","date","firstDay","replace","lastDay","scheduleIds","Map","schoolYearIds","outputIds","set","schoolYearEventId","batchRequestResultSchedule","batchRequest","scheudleIndex","resultScheduleData","scheduleResponseData","_unused2","timetableResult","_x8","_x9","_getTimetablesFromSchoolYears","getTimetablesFromSchoolYears","_ret2","schoolDaysResult","_loop3","get","schoolDay","schoolDayId","semester","dressCodeIncentiveId","batchRequestResultSchoolYear","timetableIds","schoolYearIndex","schoolYearData","perviousTimetable","_unused3","batchRequestResultTimetable","dressCodeIds","responseIndex","_unused4","batchRequestResultDressCode","dressCodes","dressCodeIndex","_batchRequestResultDr","_batchRequestResultDr2","_unused5","timetables","timetableIndex","resultTimetableData","timetableData","timetableSchedules","scheduleIndex","newSchedule","outputTimetables","timetablesArray","item","_createDressCode","Title","MonthBlock","_getDay","daySelected","textval","startdate","let1","Math","floor","day","monthViewData","borderColor","borderWidth","_Fragment","right","shorthand","zIndex","MonthView","Count","input","setFullYear","getDaysInMonth","StartDate","thirtyValue","Array","_loadData","_x7","getSchoolDays","loadData","flexWrap","numberOfLines","getCurrentPaulyData","_getCurrentPaulyData","powerpointId","fileResult","dataBlob","blob","outputResult","URL","createObjectURL","ScrollingTextAnimation","text","pan","useRef","Value","current","childWidth","setChildWidth","mainLoop","childWidthLoop","loop","sequence","timing","toValue","delay","easing","Easing","linear","useNativeDriver","GochiHand","transform","translateX","ScrollView","horizontal","onLayout","nativeEvent","layout","adjustsFontSizeToFit","HomePage","navigate","useNavigate","_useSelector2","_useSelector3","borderTopColor","borderTopWidth","borderBottomColor","borderBottomWidth","margin","aspectRatio","_getUsersLocation","commission","Location","requestForegroundPermissionsAsync","permissionDenied","getCurrentPositionAsync","mocked","mockedLocation","coordinateLat","coordinateLng","proximity","getDistance","lat","coords","latitude","lng","longitude","latCoordinate","lngCoordinate","notCloseEnough","_b64toBlob","b64Data","_addImage","base64","fileBlob","b64toBlob","types","type","rootIdResult","rootIdData","imageUUID","resumableSessionData","deferCommit","resumableSessionResult","resumableSessionResultData","uploadUrl","nextExpectedRanges","nextExpectedRange","remaining","size","uploaded","uploadBlob","uploadResult","uploadCompleteResult","uploadCompleteResultData","createLinkResult","scope","createLinkData","shareId","claimCommissionPost","_x6","_claimCommissionPost","auth","commissionId","imageShare","outResult","Authorization","CommissionClaim","imageData","claimCommissionState","setClaimCommissionState","instance","useMsal","_claimCommission","apiResult","acquireTokenSilent","outImageUrl","ImageLocation","outImage","locationResult","getUsersLocation","accessToken","claimCommission","marginLeft","marginRight","getCommission","_getCommission","itemId","title","hidden","commissionID","postData","teamId","postTeamId","channelId","postChannelId","postId","timed","maxNumberOfClaims","allowMultipleSubmissions","submissionsCount","claimCount","reviewedCount","WebViewCross","html","rawHtml","adaptHeight","setAdaptHeight","WebView","javaScriptEnabled","injectedJavaScript","onMessage","parseFloat","scalesPageToFit","dangerouslySetInnerHTML","__html","CameraResult","CommissionsView","onClose","_useSelector","commissionData","setCommissionData","commissionState","setCommissionState","setMessageState","messageData","setMessageData","_useState9","_useState10","imageUri","setImageUri","_useState11","_useState12","takeImageState","setTakeImageState","_useState13","_useState14","pickImageState","setPickerImageState","_useState15","_useState16","isOverflowing","setIsOverflowing","_useState17","_useState18","evaluatedOverflow","setEvaluatedOverflow","_useState19","_useState20","imageHeight","setImageHeight","_getPost","messageId","content","_getCommissionInformation","_result$data","getPost","_pickImage","ImagePicker","launchImageLibraryAsync","allowsMultipleSelection","allowsEditing","mediaTypes","Images","canceled","assets","getSize","imageMeasureWidth","imageMeasureHeight","_ImagePicker$useCamer","useCameraPermissions","_ImagePicker$useCamer2","requestPermission","takeImage","_takeImage","GRANTED","launchCameraAsync","canAskAgain","granted","goToSettings","getCommissionInformation","paddingLeft","pickImage","marginBottom","getPointsBatch","_getPointsBatch","outputRequests","pointsResult","requestIndex","_getPoints","nextUrl","submissionResultClaimed","submissionResultClaimedData","submissionApproved","batchResult","_getSubmissions","commissionIds","outputMap","requestData","dataIndex","respone","valueIndex","has","mapData","subApproved","subReviewed","submissionReviewed","getCommissions","_getCommissions","claimed","_getUnclaimedCommissions","getUnclaimedCommissions","filter","getFilter","commissionsIds","submissions","getSubmissions","resultCommissions","submissionData","getCommissionsBatch","_getCommissionsBatch","commissionsResult","parseInt","commissionsMap","count","commissionsBatchData","outCommissions","BackButton","to","Commissions","_useSelector4","isHoverPicker","setIsHoverPicker","pointResult","getPoints","loadCommissionData","_loadCommissionData","FlatList","renderItem","elevation","toLocaleDateString","minute","keyExtractor","onEndReachedThreshold","onEndReached","initialNumToRender","showsHorizontalScrollIndicator","PickerPiece","_useSelector5","isSelected","setIsSelected","getUsersTasks","_getUsersTasks","deltaRunAgain","deltaMode","tasksResult","taskData","resultTasks","high","low","inProgress","completed","waitingOnOthers","deferred","_getInsightData","usedResult","userOutData","webUrl","resourceReference","resourceVisualization","trendingResult","trendingOutData","_worklet_17468625320245_init_data","AnimatedCheckMarkPath","checkMarkColor","checked","checkMarkAnimation","strokeDashoffset","strokeDasharray","_worklet_8732131500673_init_data","CustomCheckBox","useDerivedValue","inOut","bezierFn","PDFJS","workerSrc","_worklet_7922200678359_init_data","_worklet_4482853661007_init_data","_worklet_11315627200092_init_data","PDFView","_convertPdfToImages","imagesArray","file","Blob","docInitParams","pdf","promise","canvas","document","createElement","i","numPages","page","getPage","viewport","getViewport","scale","context","getContext","render","canvasContext","toDataURL","remove","convertPdfToImages","singleTap","Gesture","Tap","onEnd","_event","doubleTap","numberOfTaps","taps","Exclusive","fling","Fling","compound","Simultaneous","GestureDetector","gesture","wordTypes","excelTypes","powerpointTypes","MimeTypeIcon","mimeType","includes","getRooms","_getRooms","search","searchFilter","resultArray","roomName","roomId","_getRoom","feilds","ro0mId","getClasses","_getClasses","classQuery","batchDataRequests","classResult","classData","classes","periodData","room","schoolYearId","semesterOne","_getClassEvents","scheduleResult","outputEvents","order","period","setHours","startHour","setMinutes","startMinute","setSeconds","endHour","endMinute","sort","a","b","getTime","getClassEventsFromDay","_getClassEventsFromDay","getSchoolDay","_eventResult$data","eventResult","dressCodeIncentive","getClassEvents","startTimeDate","hourTime","monthTime","Notifications","insightResult","getInsightData","taskResult","WidgetView","BoardBlock","TaskBlock","InsightsBlock","_useSelector6","_useSelector7","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","TaskItem","DeleteTask","onDelete","paddingRight","setChecked","updateTaskState","setUpdateTaskState","_useSelector9","currentText","setCurrentText","mounted","setMounted","updateTaskStatus","_updateTaskStatus","newItem","Object","assign","_updateText","newTaskData","_deleteTask","_checkUpdateText","taskNameSave","setTimeout","updateText","checkUpdateText","Swipeable","renderRightActions","deleteTask","paddingTop","paddingBottom","TextInput","onChangeText","newTask","multiline","_useSelector10","_useSelector11","_useSelector12","TrendingFiles","PopularFiles","_useSelector14","Linking","openURL","_useSelector16","convertResourceModeString","convert","sports","advancement","schoolEvents","annoucments","fitness","_getResourceFollows","resourceGroupId","resourceConversationId","getAttachments","_getAttachments","attachments","attachmentIndex","contentType","attachmentResult","attachmentData","attachmentGetResult","parentReference","driveId","attachmentGetResultData","_getResources","category","getResourceFollows","categoryString","categoryFilter","batchCount","resourceRsp","resourceResponceData","responceIndex","resourceResponceDataBody","channelIdentity","outputData","conversationId","_getResourcesSearch","searchPayload","entityTypes","query","queryString","from","enableTopResults","searchResult","searchData","hitsContainers","hits","resource","getResource","_getResource","groupId","found","notFound","_getScholarships","scholarships","items","note","link","cover","_getNewsPosts","outputPosts","posts","excerpt","meta","next_page","ResourcesNews","setPosts","postState","setPostState","selectedPost","setSelectedPost","loadArticles","_loadArticles","getNewsPosts","post","checkIfResourceDataJustAttachment","ResourceBlock","_resource$item$attach","setIsShowingCategoryView","attachment","ScholarshipBlock","setHeight","imgWidth","imgHeight","ResourceScholarships","scholarState","setScholarState","setScholarships","getScholarships","Resources","isShowingCategoryView","getResources","SearchBox","news","files","GovernmentCategoryView","_useSelector8","categoryState","setCategoryState","selectedCategory","setSelectedCategory","_addCategory","addCategory","_useState21","_useState22","outlineStyle","searchValueSave","getResourcesSearch","placeholder","placeholderTextColor","enterKeyHint","inputMode","alignSelf","signOutWeb","account","logoutPopup","Settings","imageLoadState","setImageLoadState","discovery","useAutoDiscovery","signOut","getActiveAccount","revokeAsync","token","signOutNative","onError","Block","imageSource","Government","mainWidth","setMainWidth","fivePercent","textAlignVertical","verticalAlign","rowGap","columnGap","selectedIndex","onSetSelectedIndex","compoentWidth","Children","setValue","React","child","getTeams","_getTeams","groupResult","groupResultData","getChannels","_getChannels","selected","error","_getPosts","graphMode","MicrosoftGraphOverview","lists","setLists","groups","setGroups","extensions","setExtensions","applicationExtensions","setApplicationExtensions","list","selectedGraphMode","setSelectedGraphMode","mode","useParams","groupLoadingState","setGroupLoadingState","listLoadingState","setListLoadingState","schemaLoadingState","setSchemaLoadingState","_getLists","incomingLists","_getExtensions","schemaExtensionsUrl","resultData","description","applicationResult","applicationData","group","extension","getLists","getExtensions","Link","PickerWrapper","MicrosoftGraphCreateList","columns","setColumns","listName","setListName","isListHidden","setIsListHidden","isShowingTypeWindow","setIsShowingTypeWindow","selectedColumnType","setSelectedColumnType","isHidden","setIsHidden","newColumnName","setNewColumnName","_createList","columnData","newData","listData","contentTypesEnabled","template","Button","allowMultipleLines","appendChangesToExistingText","linesForEditing","maxLength","textType","newColumn","createList","submissionType","approved","unApproved","unReviewed","convertSubmissionTypeToFilter","batchRequests","userId","defineProperty","userName","submissionTime","submittedTime","submissionId","reviewed","submissionImage","GovernmentCommissions","setCommissions","CommissionBlock","unclaimedState","setUnclaimedState","unclaimedCount","setUnclaimedCount","_loadData2","SegmentedPicker","setSelectedIndex","setComponentWidth","option","center","MapWeb","onSetSelectedPositionIn","isLoaded","useJsApiLoader","googleMapsApiKey","selectedPosition","setSelectedPosition","containerStyle","setContainerStyle","GoogleMap","mapContainerStyle","zoom","onClick","ev","latLng","Marker","radius","styles","StyleSheet","create","container","flex","box","Box","containerWidth","valueRef","currentValue","containerWidthRef","lastValue","panResponder","PanResponder","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderMove","evt","gestureState","dx","valueRead","adding","newValue","onPanResponderRelease","panHandlers","Slider","getFileWithShareID","_getFileWithShareID","shareID","image","video","_updateCommission","isCreating","commissionName","isTimed","selectedCommissionType","selectedPostId","selectedTeamId","selectedChannelId","selectedPositionIn","commissionItemId","QRCode","qrCodeData","datePickingMode","GovernmentEditCommission","submitCommissionState","setSubmitCommissionState","Issued","setSelectedCommissionType","setCommissionName","setProximity","none","currentDatePickingMode","setCurrentDatePickingMode","setSelectedPositionIn","setMaxNumberOfClaims","_useState23","_useState24","setAllowMultipleSubmissions","_useState25","_useState26","setIsTimed","_useState27","_useState28","setCommissionItemId","_useState29","_useState30","setGetCommissionResult","_useState31","_useState32","deleteCommissionResult","setDeleteCommissionResult","_useState33","_useState34","setSelectedTeamId","_useState35","_useState36","setSelectedChannelId","_useState37","_useState38","setSelectedPostId","_useState39","_useState40","setIsCreating","_deleteCommission","_loadUpdateCommission","_x10","_x11","_x12","_x13","_x14","_x15","_x16","_x17","updateCommission","keyboardType","TimePickerModal","hours","minutes","visible","onDismiss","onConfirm","newDate","DatePickerModal","locale","label","oldDate","PostSelectionContainer","CommissionSubmissions","loadUpdateCommission","deleteCommission","postPickingMode","_useState41","team","_useState42","currentPostPickingMode","setCurrentPostPickingMode","GroupSelection","onSelect","channel","ChannelSelection","onBack","PostSelection","_useState43","_useState44","_useState45","_useState46","_useState47","_useState48","groupsState","setGroupsState","_useState49","_useState50","_useState51","_useState52","_useState53","_useState54","_useState55","_useState56","channelState","setChannelState","_useState57","_useState58","channels","setChannels","_loadData3","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","postsState","setPostsState","_useState65","_useState66","_loadData4","getPosts","padding","_useState67","_useState68","submissiosState","setSubmissionsState","_useState69","_useState70","setSubmissions","_useState71","_useState72","selectedSubmissionMode","setSelectedSubmissionMode","_useState73","_useState74","selectedSubmission","setSelectedSubmisson","_loadData5","secondResult","all","submission","weekday","hour","second","SubmissionView","_useState75","_useState76","changeState","setChangeState","_useState77","_useState78","imageState","setImageState","_useState79","_useState80","_useState81","_useState82","setImgHeight","_changeSubmissionApproved","_loadImage","shareResult","loadImage","changeSubmissionApproved","getSports","_getSports","sportName","sportId","svgData","sportSvg","getSportsTeams","_getSportsTeams","teamName","season","_getSport","newMediaSubmissions","User","accepted","fileId","itemID","selectedSportId","fileType","_getSportsContent","newSportsPosts","shareResultsPromise","microsoftFile","shareResults","_index","caption","youtubeVideo","_getRoster","playerId","outUsers","_batchResult$data$_in","_batchResult$data$_in2","outputRosters","_index3","imageShareId","playerNumber","SVGXml","xml","YouTubeVideo","_React$PureComponent","_inherits","_super","_createSuper","_this","_len","args","_key","call","componentDidMount","window","YT","loadVideo","tag","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","player","Player","videoId","playerVars","onReady","onPlayerReady","target","playVideo","propTypes","PropTypes","isRequired","SportsYoutube","YoutubeWeb","automaticallyAdjustContentInsets","scrollEnabled","allowsInlineMediaPlayback","Sports","sportsPosts","setSportsPosts","loadingResult","setLoadingResult","sportsState","setSportsState","setTeamsState","selectedSport","setSelectedSport","selectedTeam","setSelectedTeam","isShowingTeams","setIsShowingTeams","setSports","isShowingRoster","setIsShowingRoster","sportsTeams","setSportsTeams","_loadSports","_loadTeams","sport","_loadSportsContent","getSportsContent","loadSports","loadSportsContent","loadTeams","RosterView","SportsPostBlock","Video","useNativeControls","ResizeMode","COVER","videoStyle","rosterLoadingState","setRosterLoadingState","roster","setRoster","_loadRoster","getRoster","loadRoster","_useFonts3","RosterImage","imageUrl","setImageUrl","imageId","DayView","colorScheme","useColorScheme","heightOffsetTop","setHeightOffsetTop","currentMinuteInt","setCurrentMinuteInt","setCurrentTime","isShowingTime","hourLength","setHourLength","mainScrollRef","eventsPane","setEventsPane","setSchoolEvents","setCurrentTimeFunction","minuite","_getClassesEvents","interval","setInterval","updateOnTimeChange","clearInterval","_mainScrollRef$curren","currentDate","resultHeightTopOffset","scrollTo","animated","loadCalendarContent","getClassesEvents","ref","EventBlock","eventPane","setEventPane","EventHeight","fromDate","toDate","delta","computeEventHeight","Offset","setHorizontalShift","handeled","horizontalCheck","beforeIndex","afterIndex","calculateHorizontalShift","borderLeftWidth","toLocaleString","Week","selectedDateRedux","daysOfWeek","setDaysOfWeek","week","setDate","getDOW","SelectTimetable","governmentMode","setLoadingState","loadedTimetables","setLoadedTimetables","_getTimetables","newLoadedTimetables","getTimetables","pickSchoolDayMode","SelectSchoolDayData","schoolYear","schoolDayMode","setSchoolDayMode","timetableState","setTimetableState","setTimetable","SchoolYearsSelect","SchoolDaySelect","ScheduleSelect","DressCodeSelect","semesterTwo","DressCodeIncentivesSelect","currentEventsSchoolYear","setCurrentEventsSchoolYear","_getData","furtherResult","getData","incentive","_createEvent","timeZone","dataOut","resultEvent","_store$getState$addEv","newEndDate","_schoolDay$dressCodeI","_schoolDay$dressCodeI2","selectedSchoolDayDataCompressed","GovernmentCalendarOptions","DateAndTimeSection","endDatePickerVisable","setEndDatePickerVisable","startDatePickerVisable","setStartDatePickerVisable","AddEvent","_deleteEvent","updateEvent","deleteEvent","CalendarTypePicker","fadeIn","sqrt","_getEvents","getBackgroundColor","dayData","getTextBackgroundColor","isCalendarTextColor","toDateString","CalendarCardView","calendarWidth","pressCalendar","showing","daysInWeek","DOW","fontScale","useWindowDimensions","firstDayWeek","monthDataResult","checkStart","checkEnd","indexEvent","endTimeDate","getMonthData","numColumns","TopView","MonthViewMain","Calendar","getEvents","GovernmentHandleFileSubmissions","currentMediaSubmissions","setCurrentMediaSubmissions","loadingSubmissionsState","setLoadingSubmissionsState","GovernmentSports","currentSports","setCurrentSports","setDataResult","GovernmentCreateNewSport","setSportName","setSvgData","createSportLoadingState","setCreateSportLoadingState","_createSport","newSportID","required","number","indexed","enforceUniqueValues","createSport","SportsUpdateModel","isPickingSvg","setIsPickingSvg","setListId","getSportState","setGetSportState","updateSportState","setUpdateSportState","_updateSport","updateData","_loadSport","getSport","loadSport","Modal","animationType","updateSport","GovernmentSportsTeams","_useParams","currentTeams","setCurrentTeams","deleteSportState","setDeleteSportState","_deleteSport","getSportResult","getSportData","deleteSport","_getUserMicrosoftFiles","newFiles","lastModified","lastModifiedDateTime","folder","parentDriveId","parentPath","itemGraphPath","callPath","_getUserTeams","teamDescription","MicrosoftUploadModeType","onSetIsShowingUpload","onSetIsShowingMicrosoftUpload","onSelectedFile","usersTeams","setUsersTeams","Personal","selectedMicrosoftUploadMode","setSelectedMicrosoftUploadMode","shareLinkString","setShareLinkString","_loadUserTeams","getUserTeams","_getShareFile","shareLink","loadUserTeams","Picker","ShareLink","Site","PersonalBlock","base64Value","btoa","trimEnd","getShareFile","TeamsBlock","userTeams","teamFileMode","usersFiles","setUsersFies","microsoftPath","setMicrosoftPath","fileBackAvaliable","setFilesBackAvaliable","getFilesState","setGetFilesState","loadGetUserMicrosoftFiles","_loadGetUserMicrosoftFiles","getUserMicrosoftFiles","microsftPathArray","pop","outputString","GovernmentCreateNewTeam","createTeamLoadingState","setCreateTeamLoadingState","teamDataState","setTeamDataState","isCreatingTeam","setIsCreatingTeam","setTeamName","setSeason","teamListItemId","setTeamListItemId","teams","setTeams","setTeamsNextLink","selectedMicrosoftTeam","setSelectedMicrosoftTeam","isSelectingFile","setIsSelectingFile","selectedFile","setSelectedFile","_loadMicrosftTeams","_updateTeam","newTeamId","microsoftTeamId","dependsOn","_deleteTeam","_getMicrosoftTeam","getMicrosoftTeamId","_getTeamData","teamResult","getMicrosoftTeam","loadMicrosftTeams","getTeamData","RosterBlock","deleteTeam","updateTeam","RosterSelectFile","membersState","setMembersState","members","setMembers","_getMembers","teamResultData","rosters","teamIndex","save","shift","getMembers","member","RosterBlockItem","rosterState","setRosterState","callingSelectedFile","setIsCallingSelectedFile","_createMemberItem","updatePlayerData","_updatePlayerData","createMemberItem","onFocus","onBlur","MicrosoftFilePicker","_getYoutubeVideos","pageToken","thumbnail","snippet","thumbnails","contentDetails","nextPageToken","YoutubeVideosSelector","ytVideos","setytVideos","ytState","setytState","nextPage","setNextPage","getYoutubeVideos","GovernmentSportsTeamAddPost","setFileId","postName","setPostName","postSubmissionState","setPostSubmissionState","setSelectedSportId","postMode","setPostMode","_getShareLink","itemPathArray","_createFileSubmission","userIdResult","submissionID","timeCreated","PickSportTeam","SegmentedButtons","buttons","getShareLink","createFileSubmission","setSportTeams","sportTeamState","setSportTeamState","getDenyText","GovernmentReviewFileSubmission","dataURL","setDataURL","unknown","dataContentType","setDataContentType","currentSubmissionInfomration","setCurrentSubmissionInformation","approveSubmissionState","setApproveSubmissionState","denySubmissionState","setDenySubmissionState","setDeleteState","_deleteSubmission","_getSubmissionInformation","_approveSubmission","newInformation","_denySubmission","_loadFile","getSubmissionInformation","loadFile","deleteSubmission","approveSubmission","denySubmission","GovernmentCalendar","GovernmentSchedule","loadedSchedules","setLoadedSchedules","_loadSchedules","loadSchedules","GovernmentTimetable","isValidHexaCode","test","setScheduleListId","setScheduleProperName","setScheduleDescriptiveName","newPeriods","setNewPeriods","setColor","isPickingColor","setIsPickingColor","isCreatingSchedule","setIsCreatingSchedule","createScheduleLoadingState","setCreateScheduleLoadingState","loadScheduleState","setLoadScheduleState","deleteState","_submitSchedule","_deleteFunction","_loadFunction","loadFunction","PeriodBlock","onSetNewPeriods","out","ColorPicker","onComplete","hex","InputWidget","disableAlphaChannel","defaultFormat","formats","inputTitleStyle","display","Preview","hideText","hideInitialColor","borderTopRightRadius","borderBottomRightRadius","Panel1","renderThumb","CustomColorThumb","diameter","HueSlider","submitSchedule","deleteFunction","isSelectingStartTime","setIsSelectingStartTime","isSelectingEndTime","setIsSelectingEndTime","update","newNewPeriodsArray","indexToRemove","deleteItem","_worklet_11564229163699_init_data","animatedStyle","useAnimatedStyle","currentColor","positionStyle","GovernmentClasses","classState","setClassState","setClasses","classMap","_getSchoolYears","Dropdown","expandedStyle","setExpanded","expanded","isExpanded","setIsExpanded","GovernmentClassesEdit","selectedSemester","setSelectedSemester","className","setClassName","roomSearchText","roomsNextLink","setRoomsNextLink","rooms","setRooms","roomsState","setRoomsState","selectedRoom","setSelectedRoom","schoolYearState","setSchoolYearState","schoolYearNextLink","setSchoolYearNextLink","schoolYears","setSchoolYears","updateClassState","setUpdateClassState","isShowingClassConfirmMenu","setIsShowingClassConfirmMenu","setPeriods","_getClass","extensionData","semesterId","roomResult","getRoom","_loadRooms","_loadSchoolYears","getSchoolYears","_loadTimetable","newArray","_updateClass","loadTimetable","getClass","loadRooms","loadSchoolYears","dayIndex","DayBlock","updateClass","setSelected","flatMap","_item","GovernmentHomePage","setLoadContentLoadingState","setNewMessageState","newMessageText","setNewMessageText","selectedPowerpoint","setSelectedPowerpoint","isAutoUpdatingText","setIsAutoUpdatingText","_loadCurrentPaulyData","_createShareId","updatePaulyData","_updatePaulyData","storeText","loadCurrentPaulyData","createShareId","NavBarBlock","des","blockLength","setIsExpandedMode","isHover","setIsHover","navigation","LinkStyle","NavBarComponent","setBlockLength","iconLength","setIconLength","pointerEvents","PageNotFound","paulyListData","paulyDataData","addDataArray","targetTypes","owner","properties","urlOne","boolean","urlTwo","_initializePaulyPartOne","secondUserId","currentUsersIdResult","createGroupData","groupTypes","mailEnabled","mailNickname","visibility","membershipRule","membershipRuleProcessingState","securityEnabled","createGroupResult","createGroupResultData","initializePaulyPartTwo","_initializePaulyPartTwo","teamsData","initializePaulyPartThree","_initializePaulyPartThree","getTeam","getRootSiteIdResult","getRootSiteIdResultData","paulyListNewData","secondRun","getPaulyListResult","getPaulyListResultData","callData","paulyDataResult","paulyDataResultData","addPaulyListResult","initStage","GovernmentAdmin","selectedUser","setSelectedUser","timeLeft","setTimeLeft","timeElapsed","setTimeElapsed","createdGroupId","setCreatedGroupId","selectedUpdates","setSelectedUpdates","partOneStartTime","setPartOneStartTime","partTwoStartTime","setPartTwoStartTime","initResult","setInitResult","initTwoResult","setInitTwoResult","initThreeResult","setInitThreeResult","currentInitStage","setCurrentInitStage","_initializePauly","partOne","partOneResult","initializePaulyPartOne","partTwoLoad","reject","partTwo","done","partThreeLoad","partThree","thirdResult","_initializePaulyFromPartTwo","_initializePaulyFromPartThree","miliSecondsPassed","totalSecondsLeft","minutesLeft","secondsLeft","ceil","minutesLeftString","secondsLeftString","totalMinutesPast","minutesPast","hoursPast","secondsPast","hoursLeftString","UserBlock","initializePauly","initializePaulyFromPartTwo","addData","newSelectedUpdates","initializePaulyFromPartThree","currentUserId","setCurrentUserId","loadedUsers","setLoadedUsers","loadUsersResult","setLoadUsersResult","_getUserId","getUsers","_getUsers","newUsers","getUserId","GovernmentRooms","roomState","setRoomState","GovermentRoomsCreate","createRoomState","setCreateRoomState","setRoomName","_createRoom","createRoom","MicrosoftGraphEditList","currentColumns","setCurrentColumns","isCoppiedToClipboard","setIsCoppiedToClipboard","_getListItems","_indexColumn","columnId","newColumnData","_getColumns","newCurrentColumns","columnGroup","readOnly","getListItems","getColumns","Clipboard","setStringAsync","indexColumn","MicrosoftGraphEditGroup","deleteGroupLoadingState","setDeleteGroupLoadingState","_deleteGroup","deleteGroup","MicrosoftGraphEditExtension","deleteExtensionLoadingState","setDeleteExtensionLoadingState","_deleteExtension","deleteExtension","MicrosoftGraphEdit","TextEditorHeader","GovernmentResourcesPost","ChannelBlock","onUpdate","selectedGroup","setIsLoading","_addChannel","_removeChannel","itemResult","addChannel","removeChannel","GroupBlock","setSelectedGroup","_loadChannels","loadChannels","newChannels","GovernmentResources","getTeamsState","setGetTeamsState","isShowingEditor","setIsShowingEditor","resultGroups","onRequestClose","ListItem","getDressCodeData","_getDressCodeData","newDressCodes","GovernmentDressCode","getDressCodeState","setGetDressCodeState","setDressCodes","DressCodeBlock","setDressCodeData","selectedDressCodeId","setSelectedDressCodeId","newDressCodeData","GovernmentDressCodeEdit","setDressCodeName","setDressCodeListId","createDressCodeState","setCreateDressCodeState","_loadCreateDressCode","createDressCode","setDressCodeState","isCreatingDressCode","setIsCreatingDressCode","deleteDressCodeState","setDeleteDressCodeState","_deleteDressCode","loadCreateDressCode","deleteDressCode","GovernmentTimetableEdit","dressCodeState","createTimetableLoadingState","setCreateTimetableLoadingState","setTimetableName","selectedSchedules","setSelectedSchedules","selectedDressCode","setSelectedDressCode","schoolDays","setSchoolDays","selectedDefaultSchedule","setSelectedDefaultSchedule","_createTimetable","scheduals","timetableDefaultScheduleId","_getDressCodes","getDressCodes","ScheduleBlock","SchoolDays","createTimetable","SchoolDayItem","newSchoolDays","saveCurrent","scheduleState","setScheduleState","ProfileBlock","checkIfStudent","role","reversed","reverse","join","reverseYearTwelve","reverseYearEleven","reverseYearTen","reverseYearNine","grade","userIds","imagesIdsMap","imageIdsArray","batchResultDownloadUrls","imagesDownloadUrls","c300x400_crop","outputUsers","imageDownloadUrl","mail","student","_getStudentData","createdTime","_changeStudentSelection","selectedFileListId","fileData","fileIndex","newFileData","_removeStudentSelection","getNumberOfBlocks","Students","_loadUsers","loadUsers","StudentBlock","_getImage","newUser","updateStateUser","urlOut","imageDataUrl","calculateMarginEnds","widthIn","side","numberOfBlocks","widthRemaining","getImage","timer","ms","res","siteResult","siteData","copyPayload","copyResult","copyData","notComplete","resourceId","copyFetch","copyFetchData","getItemResult","getItemData","studentData","SelectMainFile","setFilePickingMode","setFileData","fileState","setFileState","setSelectedFileListId","getStudentData","selectedFileList","filePickingModeEnum","StudentSelectFileBlock","updateState","setUpdateState","_callRemoveSelection","removeStudentSelection","_callChangeSelection","changeStudentSelection","callRemoveSelection","callChangeSelection","GovernmentStudents","StudentItem","filePickingMode","select","transparent","StudentsSelectFile","isReviewing","setIsReviewing","addImageState","setAddImageState","_loadAddImage","loadAddImage","LoadingView","setOveride","isShowingLogout","setIsShowingLogout","isConnected","setIsConnected","checkIfConnected","_checkIfConnected","Network","getNetworkStateAsync","isInternetReachable","intervalId","AuthenticatedView","dimensions","overide","LoadingScreen","NativeRouter","Routes","Route","element","GovernmentRoomsCreate","GovernmentSchedual","GovernmentScheduleEdit","GovernmentSportTeamEdit","getPaulyLists","_getPaulyLists","paulyListResult","paulyListResultData","getUserProfile","_getUserProfile","profileResult","profileData","validateGovernmentMode","_validateGovernmentMode","userResult","teamsResult","AsyncStorage","setItem","_checkIfGovernmentMode","getItem","_setWantGovernment","getWantGovernment","_getWantGovernment","pca","PublicClientApplication","authority","redirectUri","AuthDeep","getAuthToken","_getAuthToken","userInitated","government","setWantGovernment","accounts","getAllAccounts","setActiveAccount","checkIfGovernmentMode","addEventCallback","EventType","LOGIN_SUCCESS","handleRedirectPromise","then","authResult","loginRedirect","catch","err","refreshToken","SafeAreaView","AuthenticatedTemplate","AuthenticatedViewMain","UnauthenticatedTemplate","AppMain","MsalProvider","windowDimensions","Dimensions","screenDimensions","AppCore","screen","setDimensions","subscription","addEventListener","oldWidth","newWidth","newHeight","oldCurrentBreakPointMode","xSmall","xLarge","large","medium","small","theme","DefaultTheme","roundness","colors","primary","primaryContainer","onPrimary","onPrimaryContainer","inversePrimary","secondary","secondaryContainer","onSecondary","onSecondaryContainer","tertiary","tertiaryContainer","onTertiary","surface","surfaceVariant","onSurfaceVariant","background","onSurface","onBackground","backdrop","outline","outlineVariant","shadow","scrim","Provider","PaperProvider","SafeAreaProvider","GestureHandlerRootView","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","t","this","ns","def","indexOf","getOwnPropertyNames","definition","o","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}