{"version":3,"file":"static/js/main.fede51ab.js","mappings":"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","sources":["src/Redux/reducers/monthDataReducer.ts","src/Redux/reducers/resourcesLastCallReducer.ts","src/types.ts","src/Redux/reducers/safeAreaColorsReducer.ts","src/Redux/reducers/microsoftProfileDataReducer.ts","src/Redux/reducers/currentEventReducer.ts","src/Redux/reducers/currentEventLastCalledReducer.ts","src/Redux/reducers/selectedDateReducer.ts","src/Redux/reducers/paulyListReducer.ts","src/Redux/reducers/authenticationTokenReducer.ts","src/Redux/reducers/authenticationRefreshTokenReducer.ts","src/Redux/reducers/dimentionsReducer.ts","src/Redux/reducers/authenticationApiToken.ts","src/Redux/reducers/tasksReducers.ts","src/Redux/reducers/paulyDataReducer.ts","src/Redux/reducers/resourcesReducer.ts","src/Redux/reducers/addEventReducer.ts","src/Redux/reducers/homepageDataReducer.ts","src/Redux/reducers/expandedModeReducer.ts","src/Redux/reducers/isShowingProfileBlockReducer.ts","src/Redux/reducers/isGovernmentModeReducer.ts","src/Redux/reducers/commissionsReducer.ts","src/Redux/reducers/pdfDataReducer.ts","src/Redux/reducers/monthViewReducer.ts","src/Redux/reducers/authenticationCallReducer.ts","src/Redux/reducers/studentSearchReducer.ts","src/Redux/store.ts","src/UI/Icons/Icons.tsx","src/login.tsx","src/Functions/calendar/calendarFunctions.ts","src/PaulyConfig.ts","src/Functions/ultility/microsoftAssets.ts","src/Functions/ultility/batchRequest.ts","src/Functions/ultility/createUUID.ts","src/Functions/homepage/getDressCode.ts","src/Functions/calendar/calendarFunctionsGraph.ts","src/AuthenticatedView/MonthView.tsx","src/Functions/homepage/getCurrentPaulyData.ts","src/UI/ProgressView.tsx","src/UI/ScrollingTextAnimation.tsx","src/AuthenticatedView/HomePage.tsx","src/Functions/commissions/getLocation.ts","src/Functions/commissions/claimCommissionsFunctions.ts","src/AuthenticatedView/Commissions/CommissionClaim.web.tsx","src/Functions/commissions/getCommission.ts","src/UI/WebViewCross.tsx","src/AuthenticatedView/Commissions/CommissionsView.tsx","src/Functions/commissions/getPoints.ts","src/Functions/commissions/getCommissions.ts","src/UI/BackButton.tsx","src/AuthenticatedView/Commissions/Commissions.tsx","src/Functions/homepage/getUsersTasks.ts","src/Functions/homepage/getInsightData.ts","src/UI/CheckMark/AnimatedCheckMarkPath.tsx","src/UI/CheckMark/CustomCheckBox.tsx","src/UI/PDF/PDFView.web.tsx","src/UI/Icons/MimeTypeIcon.tsx","src/Functions/classesFunctions.ts","src/AuthenticatedView/Notifications.tsx","src/Functions/getResources.ts","src/AuthenticatedView/ResourcesNews.tsx","src/AuthenticatedView/Resources.tsx","src/AuthenticatedView/Profile/Settings.tsx","src/AuthenticatedView/Profile/Government/Government.tsx","src/UI/Pickers/Picker.tsx","src/Functions/microsoftGroupsFunctions.ts","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphOverview.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphCreateList.tsx","src/Functions/commissions/getSubmissions.ts","src/AuthenticatedView/Profile/Government/GovernmentCommissions/GovernmentCommissions.tsx","src/UI/Pickers/SegmentedPicker.tsx","src/UI/Map/Map.web.tsx","src/UI/Slider.tsx","src/Functions/ultility/getFileWithShareID.ts","src/Functions/commissions/updateCommission.ts","src/AuthenticatedView/Profile/Government/GovernmentCommissions/GovernmentEditCommission.tsx","src/Functions/sports/sportsFunctions.ts","src/UI/SVGXml/SVGXml.web.tsx","src/UI/youtubeIframeFunction.jsx","src/UI/SportsYoutube.tsx","src/AuthenticatedView/Sports.tsx","src/AuthenticatedView/Calendar/DayView.tsx","src/AuthenticatedView/Calendar/Week.tsx","src/AuthenticatedView/Calendar/SelectTimetable.tsx","src/AuthenticatedView/Calendar/SelectSchoolDayData.tsx","src/Functions/updateEvent.ts","src/AuthenticatedView/Calendar/AddEvent.tsx","src/UI/CalendarTypePicker.tsx","src/Functions/calendar/getEvents.ts","src/AuthenticatedView/Calendar/Calendar.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentHandleFileSubmissions.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSports.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentCreateNewSport.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportsTeams.tsx","src/Functions/microsoftFilePickerFunctions.ts","src/UI/MicrosoftFilePicker.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportTeamEdit.tsx","src/Functions/youtubeFunctions.ts","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportsTeamAddPost.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentReviewFileSubmission.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentCalendar.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentSchedule.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetable.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentScheduleEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClasses.tsx","src/Functions/calendar/getSchoolYears.ts","src/UI/Dropdown.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClassesEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentHomePage.tsx","src/UI/NavComponent.tsx","src/AuthenticatedView/404Page.tsx","src/Functions/initializePauly/initializePaulyData.ts","src/Functions/initializePauly/initializePauly.ts","src/AuthenticatedView/Profile/Government/GovernmentAdminCenter/GovernmentAdmin.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentRooms.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovermentRoomsCreate.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditList.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditGroup.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditExtension.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentResourcesPost/TextEditorHeader.tsx","src/AuthenticatedView/Profile/Government/GovernmentResourcesPost/GovernmentResourcesPost.web.tsx","src/AuthenticatedView/Profile/Government/GovernmentResources.tsx","src/UI/ListItem.tsx","src/Functions/homepage/getDressCodeData.ts","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCode.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/DressCodeBlock.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetableEdit.tsx","src/AuthenticatedView/Profile/ProfileBlock.tsx","src/Functions/studentFunctions.ts","src/AuthenticatedView/Students.tsx","src/Functions/addImage.ts","src/AuthenticatedView/Profile/Government/GovernmentStudents.tsx","src/AuthenticatedView/LoadingScreen.tsx","src/AuthenticatedView/AuthenticatedViewMain.tsx","src/Functions/ultility/getPaulyLists.ts","src/Functions/ultility/getUserProfile.ts","src/Functions/handleGovernmentLogin.ts","AppMain/AppMain.web.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: monthDataType[] = [];\n\nexport const monthDataSlice = createSlice({\n  name: 'monthData',\n  initialState: initalState,\n  reducers: {\n    setMonthData: (_state, action: PayloadAction<monthDataType[]>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default monthDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const resourcesLastCalled = createSlice({\n  name: 'resourcesLastCalled',\n  initialState: initalState,\n  reducers: {\n    setResourcesLastCalled: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default resourcesLastCalled.reducer;\n","// Andrew Mainella\n// Pauly\n// October 3 2023\n\n// types.ts\n// Stores all of paulys types\n\n// From https://getbootstrap.com/docs/5.0/layout/breakpoints/\nexport enum breakPointMode {\n  xSmall, // <576px  ->0\n  small, // ≥576px  ->1\n  medium, // ≥768px  ->2\n  large, // ≥992px  ->3\n  xLarge, // ≥1200px ->4\n}\n\nexport enum loadingStateEnum {\n  loading,\n  success,\n  failed,\n  notStarted,\n  cannotStart,\n  offline,\n}\n\nexport enum postType {\n  microsoftFile,\n  youtubeVideo\n}\n\nexport enum dataContentTypeOptions {\n  video,\n  image,\n  pdf,\n  unknown,\n}\n\nexport enum taskImportanceEnum {\n  low,\n  normal,\n  high,\n}\n\nexport enum taskStatusEnum {\n  notStarted,\n  inProgress,\n  completed,\n  waitingOnOthers,\n  deferred,\n}\nexport enum resourceResponce {\n  found,\n  notFound,\n  failed,\n}\nexport enum commissionTypeEnum {\n  Issued,\n  Location,\n  Image,\n  ImageLocation,\n  QRCode,\n}\nexport enum paulyEventType {\n  personal,\n  regular,\n  schoolDay,\n  schoolYear,\n  studentCouncil,\n}\n\nexport enum recurringType {\n  daily,\n  weekly,\n  monthly,\n  yearly,\n}\n\nexport enum semesters {\n  semesterOne,\n  semesterTwo,\n}\n\nexport enum submissionTypeEnum {\n  all,\n  unApproved,\n  approved,\n  unReviewed,\n}\n\nexport enum locationStateEnum {\n  success,\n  permissionDenied,\n  notCloseEnough,\n  mockedLocation,\n  notStarted,\n}\n\nexport enum calendarMode {\n  month,\n  week,\n  day,\n}\n\nexport enum resourceMode {\n  home,\n  sports,\n  advancement,\n  schoolEvents,\n  annoucments,\n  fitness,\n  files,\n  news,\n  scholarships,\n}\n\ndeclare global {\n  type addDataType = {\n    data: object;\n    urlOne: string;\n    urlTwo?: string;\n    id: string;\n  };\n  type assignmentTypeQuiz = {\n    id: string;\n    title: string;\n    description: string;\n    assignmentEnum: number;\n    documentRef: string;\n    assignmentDuringClass: boolean;\n    selectedMonth?: number;\n    selectedDay?: number;\n    dueDate?: Date;\n  };\n  type batchResponseType = {\n    method: 'GET' | 'POST';\n    id: string;\n    status: number;\n    headers: object | undefined;\n    body: any | undefined;\n  };\n  type calendarCourseType = {\n    name: string;\n    semester: number;\n    dayA: number;\n    dayB: number;\n    dayC: number;\n    dayD: number;\n    noClass: noClassType[];\n    year: number;\n    assignments: assignmentTypeQuiz[];\n  };\n  type channelType = {\n    id: string;\n    displayName: string;\n    selected: boolean;\n    loading: boolean;\n    error: boolean;\n    description?: string;\n  };\n  type classType = {\n    name: string;\n    id: string;\n    room: roomType;\n    schoolYearId: string;\n    semester: semesters;\n    periods: number[];\n  };\n  type commissionType = {\n    itemId: string;\n    title: string;\n    timed: boolean;\n    points: number;\n    hidden: boolean;\n    maxNumberOfClaims: number;\n    allowMultipleSubmissions: boolean;\n    submissionsCount: number;\n    claimCount: number;\n    reviewedCount: number;\n    commissionId: string;\n    value: commissionTypeEnum;\n    startDate?: string;\n    endDate?: string;\n    proximity?: number;\n    coordinateLat?: number;\n    coordinateLng?: number;\n    postData?: {\n      teamId: string;\n      channelId: string;\n      postId: string;\n    };\n  };\n  type dressCodeIncentiveType = {\n    name: string;\n    description: string;\n    requirementsDescription: string;\n    id: string;\n  };\n  type dressCodeDataType = {\n    name: string;\n    description: string;\n    id: string;\n  };\n  type dressCodeType = {\n    name: string;\n    id: string;\n    listId: string;\n    dressCodeData: dressCodeDataType[];\n    dressCodeIncentives: dressCodeIncentiveType[];\n  };\n  type dateProperty = {\n    Date: number;\n    ColorName?: string;\n    SchoolDay?: string;\n    Value?: number;\n  };\n  type groupType = {\n    name: string;\n    id: string;\n  };\n  type governmentRosterType = {\n    name: string;\n    id: string;\n    imageShareId?: string;\n    listItemId?: string;\n    position?: string;\n    playerNumber?: string;\n    posts?: string[];\n  };\n  type headerType = {\n    key: string;\n    value: string;\n  };\n  type locationCoords = {\n    latCoordinate: number;\n    lngCoordinate: number;\n  };\n  type monthDataType = {\n    id: string;\n    showing: boolean;\n    dayData: number;\n    events: eventType[];\n  };\n  type microsoftUserType = {\n    id: string;\n    displayName: string;\n  };\n  type resourceDataType = {\n    teamId: string;\n    conversationId: string;\n    id: string; // message id\n    body: string;\n    html: boolean; // if false is text\n    attachments?: resourceType[];\n  };\n  type resourceFollowType = {\n    teamId: string;\n    channelId: string;\n  };\n  type roomType = {\n    name: string;\n    id: string;\n  };\n  type rosterType = {\n    name: string;\n    id: string;\n    imageShareId?: string;\n    position?: string;\n    playerNumber?: string;\n    posts?: string[];\n  };\n  type scholarship = {\n    title: string;\n    note: string;\n    link: string;\n    cover: string;\n  }\n  type schoolDayDataCompressedType = {\n    schoolDayId: string;\n    scheduleId: string;\n    dressCodeId: string;\n    semester: semesters;\n    dressCodeIncentiveId: string;\n    schoolYearEventId: string;\n  };\n  type schoolDayDataType = {\n    schoolDay: schoolDayType;\n    schedule: scheduleType;\n    dressCode: dressCodeDataType;\n    semester: semesters;\n    dressCodeIncentive?: dressCodeIncentiveType;\n  };\n  type schoolDayType = {\n    name: string;\n    shorthand: string;\n    id: string;\n    order: number;\n  };\n  type submissionType = {\n    userName: string;\n    submissionTime: string;\n    id: string;\n    itemId: string;\n    approved: boolean;\n    reviewed: boolean;\n    submissionImage?: string;\n  };\n  type studentInformationType = {\n    listId: string;\n    driveId: string;\n    selected: boolean;\n    createdTime: string;\n  };\n  type sportType = {\n    name: string;\n    id: string;\n    svgData: string;\n  };\n  type sportTeamType = {\n    teamName: string;\n    season: number;\n    teamId: string;\n  };\n  type schoolUserType = {\n    name: string;\n    id: string;\n    mail: string;\n    role: string;\n    grade?: '9' | '10' | '11' | '12';\n    student: boolean;\n    imageDownloadUrl: string;\n    imageState: loadingStateEnum;\n    imageDataUrl?: string;\n  };\n  type taskType = {\n    name: string;\n    id: string;\n    importance: taskImportanceEnum;\n    status: taskStatusEnum;\n    excess: boolean;\n  };\n  type paulyEventTypes = 'schoolDay' | 'schoolYear';\n  type eventType = {\n    id: string;\n    name: string;\n    startTime: string;\n    endTime: string; // This is held in iso format\n    eventColor: string; // This is held in iso format\n    microsoftEvent: boolean;\n    allDay: boolean;\n    paulyEventType?: paulyEventTypes;\n    paulyEventData?: string;\n    microsoftReference?: string;\n    schoolDayData?: {\n      schoolDayData: schoolDayType;\n      schedule: scheduleType;\n      dressCode: dressCodeDataType;\n      semester: semesters;\n      dressCodeIncentiveId?: string;\n    };\n  };\n  type newsPost = {\n    title: string;\n    excerpt: string;\n    content: string;\n    id: number;\n  }\n  type noClassType = {\n    day: number;\n    Month: number;\n    Year: number;\n  };\n  type scheduleType = {\n    properName: string;\n    descriptiveName: string;\n    periods: periodType[];\n    id: string;\n    color: string;\n  };\n  type periodType = {\n    startHour: number;\n    startMinute: number;\n    endHour: number;\n    endMinute: number;\n    id: string;\n  };\n  type teamsGroupType = {\n    teamName: string;\n    teamId: string;\n    teamDescription: string;\n  };\n  type timetableStringType = {\n    name: string;\n    id: string;\n  };\n  type timetableType = {\n    name: string;\n    id: string;\n    schedules: scheduleType[];\n    days: schoolDayType[];\n    dressCode: dressCodeType;\n  };\n  type microsoftFileType = {\n    name: string;\n    id: string;\n    lastModified: string;\n    folder: boolean;\n    parentDriveId: string;\n    parentPath: string;\n    itemGraphPath: string;\n    callPath: string;\n    type: string;\n  };\n  type paulyDataType = {\n    message: string;\n    animationSpeed: number;\n    powerpointBlob: string;\n    powerpointShare: string;\n    paulyDataState: loadingStateEnum;\n  };\n  type paulyListType = {\n    siteId: string;\n    studentFilesListId: string;\n    commissionListId: string;\n    commissionSubmissionsListId: string;\n    paulyDataListId: string;\n    scheduleListId: string;\n    sportsListId: string;\n    sportsApprovedSubmissionsListId: string;\n    sportsSubmissionsListId: string;\n    timetablesListId: string;\n    resourceListId: string;\n    dressCodeListId: string;\n    roomListId: string;\n    eventTypeExtensionId: string;\n    eventDataExtensionId: string;\n    classExtensionId: string;\n    resourceExtensionId: string;\n  };\n  type sportPost = {\n    caption: string;\n    data: {\n      fileId: string;\n      postType: postType.microsoftFile;\n      fileType: dataContentTypeOptions\n    } | {\n      fileId: string;\n      postType: postType.youtubeVideo\n    }\n  };\n  type resourceType = {\n    webUrl: string;\n    id: string;\n    title: string;\n    type: string;\n  };\n  type insightResult = {\n    userState: loadingStateEnum;\n    trendingState: loadingStateEnum;\n    userData: resourceType[];\n    trendingData: resourceType[];\n  };\n  type listColumnType = {\n    columnGroup: string;\n    description: string;\n    displayName: string;\n    enforceUniqueValues: boolean;\n    hidden: boolean;\n    id: string;\n    indexed: boolean;\n    name: string;\n    readOnly: boolean;\n    required: boolean;\n  };\n  type mediaSubmissionType = {\n    Title: string;\n    user: string;\n    submissionId: string;\n    accepted: boolean;\n    reviewed: boolean;\n    selectedSportId: string;\n    selectedTeamId: string;\n    fileId: string;\n    fileType: postType;\n    itemID: string;\n  };\n  type youtubeVideoType = {\n    thumbnail: string;\n    title: string;\n    videoId: string;\n  }\n}\n\nexport class Colors {\n  static white = '#FFFFFF';\n\n  static maroon = '#793033';\n\n  static lightGray = '#ededed';\n\n  static darkGray = '#444444';\n\n  static black = '#000000';\n\n  static danger = 'red';\n}\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Colors } from '../../types';\n\nconst initalState: { top: string; bottom: string } = {\n  top: Colors.maroon,\n  bottom: Colors.maroon,\n};\n\nexport const safeAreaColorsSlice = createSlice({\n  name: 'safeAreaColors',\n  initialState: initalState,\n  reducers: {\n    setSafeAreaColors: (\n      _state,\n      action: PayloadAction<{ top: string; bottom: string }>,\n    ) => {\n      return action.payload;\n    },\n    setSafeAreaColorTop: (state, action: PayloadAction<string>) => {\n      return { ...state, top: action.payload };\n    },\n    setSafeAreaColorBottom: (state, action: PayloadAction<string>) => {\n      return { ...state, bottom: action.payload };\n    },\n  },\n});\n\nexport default safeAreaColorsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: { uri: string; displayName: string; id: string } = {\n  uri: '',\n  displayName: '',\n  id: '',\n};\n\nexport const microsoftProfileDataSlice = createSlice({\n  name: 'microsoftProfileData',\n  initialState: initalState,\n  reducers: {\n    setMicrosoftProfileData: (\n      _state,\n      action: PayloadAction<{ uri: string; displayName: string; id: string }>,\n    ) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default microsoftProfileDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalCalendarState: eventType[] = [];\n\nexport const currentEventsSlice = createSlice({\n  name: 'currentEvents',\n  initialState: initalCalendarState,\n  reducers: {\n    setCurrentEvents: (_state, action: PayloadAction<eventType[]>) => {\n      return [...action.payload];\n    },\n    pushEvent: (state, action: PayloadAction<eventType>) => {\n      return [...state, action.payload];\n    },\n    removeCurrentEvent: (state, action: PayloadAction<number>) => {\n      state.slice(action.payload, 1);\n    },\n  },\n});\n\nexport default currentEventsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const currentEventsLastCalled = createSlice({\n  name: 'currentEventsLastCalled',\n  initialState: initalState,\n  reducers: {\n    setCurrentEventsLastCalled: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default currentEventsLastCalled.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = new Date().toISOString();\n\nexport const selectedDateSlice = createSlice({\n  name: 'selectedDate',\n  initialState: initalState,\n  reducers: {\n    setCurrentEventsLastCalled: (_state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default selectedDateSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: paulyListType = {\n  siteId: '',\n  studentFilesListId: '',\n  commissionListId: '',\n  commissionSubmissionsListId: '',\n  paulyDataListId: '',\n  scheduleListId: '',\n  sportsListId: '',\n  sportsApprovedSubmissionsListId: '',\n  sportsSubmissionsListId: '',\n  timetablesListId: '',\n  resourceListId: '',\n  eventTypeExtensionId: '',\n  eventDataExtensionId: '',\n  classExtensionId: '',\n  resourceExtensionId: '',\n  dressCodeListId: '',\n  roomListId: '',\n};\n\nexport const paulyListSlice = createSlice({\n  name: 'paulyList',\n  initialState: initalState,\n  reducers: {\n    setPaulyList: (_state, action: PayloadAction<paulyListType>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default paulyListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationTokenSlice = createSlice({\n  name: 'authenticationToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationToken: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationTokenSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationRefreshTokenSlice = createSlice({\n  name: 'authenticationRefreshToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationRefreshToken: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationRefreshTokenSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\n// xSmall,\t <576px  ->0\n// small,    ≥576px  ->1\n// medium,   ≥768px  ->2\n// large,    ≥992px  ->3\n// xLarge    ≥1200px ->4\n\nconst initalState: {\n  width: number;\n  height: number;\n  currentBreakPoint: number;\n} = { width: 0, height: 0, currentBreakPoint: 0 };\n\nexport const dimentionsSlice = createSlice({\n  name: 'dimentions',\n  initialState: initalState,\n  reducers: {\n    setDimentionsWidth: (state, action: PayloadAction<number>) => {\n      return {\n        width: action.payload,\n        height: state.height,\n        currentBreakPoint: state.currentBreakPoint,\n      };\n    },\n    setDimentionsWidthCurrentBreakPoint: (\n      state,\n      action: PayloadAction<{ width: number; currentBreakPoint: number }>,\n    ) => {\n      return {\n        width: action.payload.width,\n        height: state.height,\n        currentBreakPoint: action.payload.currentBreakPoint,\n      };\n    },\n    setDimentionsHeight: (state, action: PayloadAction<number>) => {\n      return {\n        width: state.width,\n        height: action.payload,\n        currentBreakPoint: state.currentBreakPoint,\n      };\n    },\n  },\n});\n\nexport default dimentionsSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationApiTokenSlice = createSlice({\n  name: 'authenticationApiToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationApiToken: (_state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationApiTokenSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalStateTaskDeltaLink: string = '';\n\nexport const taskDeltaSlice = createSlice({\n  name: 'taskDeltaLink',\n  initialState: initalStateTaskDeltaLink,\n  reducers: {\n    setTaskDeltaLink: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport const tasksDeltaReducer = taskDeltaSlice.reducer;\n\nconst initalTasksState: string[] = [];\n\nexport const tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: initalTasksState,\n  reducers: {\n    setCurrentEvents: (state, action: PayloadAction<string[]>) => {\n      return [...action.payload];\n    },\n    pushEvent: (state, action: PayloadAction<string>) => {\n      return [...state, action.payload];\n    },\n  },\n});\n\nexport const tasksReducer = tasksSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\nconst initalState: paulyDataType = {\n  message: '',\n  animationSpeed: 0,\n  powerpointBlob: '',\n  powerpointShare: '',\n  paulyDataState: loadingStateEnum.loading,\n};\n\nexport const paulyDataSlice = createSlice({\n  name: 'paulyData',\n  initialState: initalState,\n  reducers: {\n    setPaulyData: (_state, action: PayloadAction<paulyDataType>) => {\n      return action.payload;\n    },\n    setPaulyDataState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, paulyDataState: action.payload };\n    },\n  },\n});\n\nexport default paulyDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum, resourceMode } from '../../types';\n\ntype resourceStoreState = {\n  resources: resourceDataType[];\n  loadingState: loadingStateEnum;\n  searchValue: string;\n  resourceFollow: resourceFollowType[];\n  selectedResourceMode: resourceMode;\n};\n\nconst initalResourcesState: resourceStoreState = {\n  resources: [],\n  loadingState: loadingStateEnum.loading,\n  searchValue: '',\n  resourceFollow: [],\n  selectedResourceMode: resourceMode.home,\n};\n\nexport const resourcesSlice = createSlice({\n  name: 'resources',\n  initialState: initalResourcesState,\n  reducers: {\n    setResourceData: (state, action: PayloadAction<resourceDataType[]>) => {\n      return { ...state, resources: action.payload };\n    },\n    pushResource: (state, action: PayloadAction<resourceDataType>) => {\n      state.resources.push(action.payload);\n    },\n    setResources: (\n      state,\n      action: PayloadAction<{\n        resources: resourceDataType[];\n        loadingState: loadingStateEnum;\n      }>,\n    ) => {\n      return {\n        ...state,\n        loadingState: action.payload.loadingState,\n        resources: action.payload.resources,\n      };\n    },\n    setResourcesState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, loadingState: action.payload };\n    },\n    setSearchValue: (state, action: PayloadAction<string>) => {\n      return { ...state, searchValue: action.payload };\n    },\n    setResourceFollow: (state, action: PayloadAction<resourceFollowType[]>) => {\n      return { ...state, resourceFollow: action.payload };\n    },\n    setSelectedResourceMode: (state, action: PayloadAction<resourceMode>) => {\n      return { ...state, selectedResourceMode: action.payload };\n    },\n  },\n});\n\nexport default resourcesSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport {\n  calendarMode,\n  paulyEventType,\n  recurringType,\n  loadingStateEnum,\n} from '../../types';\n\ntype addEventStatesType = {\n  eventName: string;\n  createEventState: loadingStateEnum;\n  isPickingStartDate: boolean;\n  isPickingEndDate: boolean;\n  allDay: boolean;\n  isGovernmentEvent: boolean;\n  selectedTimetable: timetableStringType;\n  selectedSchoolDayData: schoolDayDataType | undefined;\n  selectedSchoolYear: eventType | undefined;\n  selectedEventType: paulyEventType;\n  recurringEvent: boolean;\n  selectedRecurringType: recurringType;\n  startDate: string;\n  endDate: string;\n  isShowingAddDate: boolean;\n  isEditing: boolean;\n  selectedCalendarMode: calendarMode;\n  selectedEvent: eventType | undefined;\n};\n\nconst initalState: addEventStatesType = {\n  eventName: '',\n  createEventState: loadingStateEnum.notStarted,\n  isPickingStartDate: false,\n  isPickingEndDate: false,\n  allDay: false,\n  isGovernmentEvent: false,\n  selectedTimetable: {\n    name: '',\n    id: '',\n  },\n  selectedSchoolDayData: undefined,\n  selectedSchoolYear: undefined,\n  selectedEventType: paulyEventType.personal,\n  recurringEvent: false,\n  selectedRecurringType: recurringType.daily,\n  startDate: new Date().toISOString(),\n  endDate: new Date().toISOString(),\n  isShowingAddDate: false,\n  isEditing: false,\n  selectedCalendarMode: calendarMode.month,\n  selectedEvent: undefined,\n};\n\nexport const addEventSlice = createSlice({\n  name: 'addEvent',\n  initialState: initalState,\n  reducers: {\n    setEventName: (state, action: PayloadAction<string>) => {\n      return { ...state, eventName: action.payload };\n    },\n    setCreateEventState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, createEventState: action.payload };\n    },\n    setIsPickingStartDate: (state, action: PayloadAction<boolean>) => {\n      state.isPickingStartDate = action.payload;\n    },\n    setIsPickingEndDate: (state, action: PayloadAction<boolean>) => {\n      state.isPickingEndDate = action.payload;\n    },\n    setAllDay: (state, action: PayloadAction<boolean>) => {\n      return { ...state, allDay: action.payload };\n    },\n    setIsGovernmentEvent: (state, action: PayloadAction<boolean>) => {\n      return { ...state, isGovernmentEvent: action.payload };\n    },\n    setSelectedTimetable: (\n      state,\n      action: PayloadAction<timetableStringType>,\n    ) => {\n      return { ...state, selectedTimetable: action.payload };\n    },\n    setSelectedSchoolDayData: (\n      state,\n      action: PayloadAction<schoolDayDataType | undefined>,\n    ) => {\n      return { ...state, selectedSchoolDayData: action.payload };\n    },\n    setSelectedSchoolYear: (state, action: PayloadAction<eventType>) => {\n      return { ...state, selectedSchoolYear: action.payload };\n    },\n    setSelectedEventType: (state, action: PayloadAction<number>) => {\n      return { ...state, selectedEventType: action.payload };\n    },\n    setRecurringEvent: (state, action: PayloadAction<boolean>) => {\n      return { ...state, recurringEvent: action.payload };\n    },\n    setSelectedRecurringType: (state, action: PayloadAction<recurringType>) => {\n      return { ...state, selectedRecurringType: action.payload };\n    },\n    setStartDate: (state, action: PayloadAction<string | Date>) => {\n      if (typeof action.payload === 'string') {\n        return { ...state, startDate: action.payload };\n      }\n      return { ...state, startDate: action.payload.toISOString() };\n    },\n    setEndDate: (state, action: PayloadAction<string | Date>) => {\n      if (typeof action.payload === 'string') {\n        return { ...state, endDate: action.payload };\n      }\n      return { ...state, endDate: action.payload.toISOString() };\n    },\n    setIsShowingAddDate: (state, action: PayloadAction<boolean>) => {\n      state.isShowingAddDate = action.payload;\n    },\n    setIsEditing: (state, action: PayloadAction<boolean>) => {\n      state.isEditing = action.payload;\n    },\n    setSelectedCalendarMode: (state, action: PayloadAction<calendarMode>) => {\n      state.selectedCalendarMode = action.payload;\n    },\n    setSelectedEvent: (state, action: PayloadAction<eventType | undefined>) => {\n      state.selectedEvent = action.payload;\n    },\n  },\n});\n\nexport default addEventSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport {\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../../types';\n\ntype homepageStatesType = {\n  taskState: loadingStateEnum;\n  userState: loadingStateEnum;\n  trendingState: loadingStateEnum;\n  userData: resourceType[];\n  trendingData: resourceType[];\n  userTasks: taskType[];\n  schoolDayData: undefined | schoolDayDataType;\n  startTime: string;\n  isShowingCompleteTasks: boolean;\n};\n\nconst initalState: homepageStatesType = {\n  taskState: loadingStateEnum.loading,\n  userState: loadingStateEnum.loading,\n  trendingState: loadingStateEnum.loading,\n  userData: [],\n  trendingData: [],\n  userTasks: [\n    {\n      name: '',\n      importance: taskImportanceEnum.normal,\n      id: '',\n      status: taskStatusEnum.notStarted,\n      excess: true,\n    },\n  ],\n  schoolDayData: undefined,\n  startTime: '',\n  isShowingCompleteTasks: false,\n};\n\nexport const homepageDataSlice = createSlice({\n  name: 'homepage',\n  initialState: initalState,\n  reducers: {\n    setTaskState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, taskState: action.payload };\n    },\n    setUserState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, userState: action.payload };\n    },\n    setTrendingState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, trendingState: action.payload };\n    },\n    setUserData: (state, action: PayloadAction<resourceType[]>) => {\n      return { ...state, userData: action.payload };\n    },\n    setTrendingData: (state, action: PayloadAction<resourceType[]>) => {\n      return { ...state, trendingData: action.payload };\n    },\n    setUserTasks: (state, action: PayloadAction<taskType[]>) => {\n      return { ...state, userTasks: action.payload };\n    },\n    updateUserTask: (\n      state,\n      action: PayloadAction<{ task: taskType; index: number }>,\n    ) => {\n      if (action.payload.index < state.userTasks.length) {\n        state.userTasks[action.payload.index] = action.payload.task;\n      } else {\n        return state;\n      }\n    },\n    unshiftUserTask: (state, action: PayloadAction<taskType>) => {\n      state.userTasks.unshift(action.payload);\n    },\n    popUserTask: (state, action: PayloadAction<number>) => {\n      state.userTasks.splice(action.payload, 1);\n    },\n    setSchoolDayData: (state, action: PayloadAction<schoolDayDataType>) => {\n      return { ...state, schoolDayData: action.payload };\n    },\n    setStartTime: (state, action: PayloadAction<string>) => {\n      return { ...state, startTime: action.payload };\n    },\n    setIsShowingCompletedTasks: (state, action: PayloadAction<boolean>) => {\n      return { ...state, isShowingCompleteTasks: action.payload };\n    },\n  },\n});\n\nexport default homepageDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const expandedModeSlice = createSlice({\n  name: 'expandedMode',\n  initialState: initalState,\n  reducers: {\n    setExpandedMode: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default expandedModeSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const isShowingProfileBlockSlice = createSlice({\n  name: 'isShowingProfileBlock',\n  initialState: initalState,\n  reducers: {\n    setIsShowingProfileBlock: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default isShowingProfileBlockSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const isGovernmentModeSlice = createSlice({\n  name: 'isGovernmentMode',\n  initialState: initalState,\n  reducers: {\n    setIsGovernmentMode: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default isGovernmentModeSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\ntype commissionsStateType = {\n  commissionsState: loadingStateEnum;\n  points: number;\n  currentCommissions: commissionType[];\n  selectedCommission: string;\n  commissionNextLink: string | undefined;\n};\n\nconst initalState: commissionsStateType = {\n  commissionsState: loadingStateEnum.loading,\n  points: 0,\n  currentCommissions: [],\n  selectedCommission: '',\n  commissionNextLink: undefined,\n};\n\nexport const commissionsSlice = createSlice({\n  name: 'commissions',\n  initialState: initalState,\n  reducers: {\n    setCommissionsState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, commissionsState: action.payload };\n    },\n    setPoints: (state, action: PayloadAction<number>) => {\n      return { ...state, points: action.payload };\n    },\n    setCurrentCommissions: (state, action: PayloadAction<commissionType[]>) => {\n      return { ...state, currentCommissions: action.payload };\n    },\n    setSelectedCommission: (state, action: PayloadAction<string>) => {\n      return { ...state, selectedCommission: action.payload };\n    },\n    setCommissionNextLink: (\n      state,\n      action: PayloadAction<string | undefined>,\n    ) => {\n      return { ...state, commissionNextLink: action.payload };\n    },\n  },\n});\n\nexport default commissionsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\n// page number is an index meaning first page is 0\nconst initalState: { inject: string; images: string[]; pageNumber: number } = {\n  inject: '',\n  images: [],\n  pageNumber: 0,\n};\n\nexport const pdfDataSlice = createSlice({\n  name: 'pdfData',\n  initialState: initalState,\n  reducers: {\n    setInject: (state, action: PayloadAction<string>) => {\n      state.inject = action.payload;\n      return { ...state, commissionsState: action.payload };\n    },\n    addImage: (state, action: PayloadAction<string>) => {\n      state.images.push(action.payload);\n    },\n    setImages: (state, action: PayloadAction<string[]>) => {\n      return { ...state, images: action.payload };\n    },\n    setPageNumber: (state, action: PayloadAction<number>) => {\n      return { ...state, pageNumber: action.payload };\n    },\n    increasePageNumber: state => {\n      state.pageNumber += 1;\n    },\n    decreasePageNumber: state => {\n      state.pageNumber -= 1;\n    },\n  },\n});\n\nexport default pdfDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: eventType[] = [];\n\nexport const monthViewSlice = createSlice({\n  name: 'monthView',\n  initialState: initalState,\n  reducers: {\n    setMonthViewData: (_state, action: PayloadAction<eventType[]>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default monthViewSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: number = 0;\n\nexport const authenticationCallSlice = createSlice({\n  name: 'authenticationCall',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationCallIncrement: state => {\n      return state + 1;\n    },\n  },\n});\n\nexport default authenticationCallSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\nconst initalState: {\n  searchText: string;\n  users: schoolUserType[];\n  usersState: loadingStateEnum;\n  nextLink: string | undefined;\n} = {\n  searchText: '',\n  users: [],\n  usersState: loadingStateEnum.loading,\n  nextLink: undefined,\n};\n\nexport const studentSearchSlice = createSlice({\n  name: 'studentSearch',\n  initialState: initalState,\n  reducers: {\n    setStudentSearch: (state, action: PayloadAction<string>) => {\n      return { ...state, searchText: action.payload };\n    },\n    setStudentUsers: (state, action: PayloadAction<schoolUserType[]>) => {\n      return { ...state, users: action.payload };\n    },\n    setUsersState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, usersState: action.payload };\n    },\n    setNextLink: (state, action: PayloadAction<string | undefined>) => {\n      return { ...state, nextLink: action.payload };\n    },\n    setStudentUserByIndex: (\n      state,\n      action: PayloadAction<{ index: number; user: schoolUserType }>,\n    ) => {\n      if (action.payload.index < state.users.length) {\n        state.users[action.payload.index] = action.payload.user;\n      }\n    },\n    setStudentUserById: (\n      state,\n      action: PayloadAction<{ id: string; user: schoolUserType }>,\n    ) => {\n      const findIndex = state.users.findIndex(e => {\n        return e.id === action.payload.id;\n      });\n      if (findIndex !== -1) {\n        state.users[findIndex] = action.payload.user;\n      }\n    },\n  },\n});\n\nexport default studentSearchSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport monthDataReducer from './reducers/monthDataReducer';\nimport resourcesLastCallReducer, {\n  resourcesLastCalled,\n} from './reducers/resourcesLastCallReducer';\nimport safeAreaColorsReducer from './reducers/safeAreaColorsReducer';\nimport microsoftProfileDataReducer from './reducers/microsoftProfileDataReducer';\nimport currentEventsReducer from './reducers/currentEventReducer';\nimport currentEventsLastCalledReducer from './reducers/currentEventLastCalledReducer';\nimport selectedDateReducer from './reducers/selectedDateReducer';\nimport paulyListReducer from './reducers/paulyListReducer';\nimport authenticationTokenReducer from './reducers/authenticationTokenReducer';\nimport authenticationRefreshTokenReducer from './reducers/authenticationRefreshTokenReducer';\nimport dimentionsReducer from './reducers/dimentionsReducer';\nimport authenticationApiTokenReducer from './reducers/authenticationApiToken';\nimport { tasksDeltaReducer, tasksReducer } from './reducers/tasksReducers';\nimport paulyDataReducer from './reducers/paulyDataReducer';\nimport resourcesReducer from './reducers/resourcesReducer';\nimport addEventReducer from './reducers/addEventReducer';\nimport homepageDataReducer from './reducers/homepageDataReducer';\nimport expandedModeReducer from './reducers/expandedModeReducer';\nimport isShowingProfileBlockReducer from './reducers/isShowingProfileBlockReducer';\nimport isGovernmentModeReducer from './reducers/isGovernmentModeReducer';\nimport commissionsReducer from './reducers/commissionsReducer';\nimport pdfDataReducer from './reducers/pdfDataReducer';\nimport monthViewReducer from './reducers/monthViewReducer';\nimport authenticationCallReducer from './reducers/authenticationCallReducer';\nimport studentSearchReducer from './reducers/studentSearchReducer';\n\nconst store = configureStore({\n  reducer: {\n    addEvent: addEventReducer,\n    authenticationToken: authenticationTokenReducer,\n    authenticationApiToken: authenticationApiTokenReducer,\n    authenticationRefreshToken: authenticationRefreshTokenReducer,\n    authenticationCall: authenticationCallReducer,\n    commissions: commissionsReducer,\n    currentEvents: currentEventsReducer,\n    currentEventsLastCalled: currentEventsLastCalledReducer,\n    dimentions: dimentionsReducer,\n    expandedMode: expandedModeReducer,\n    homepageData: homepageDataReducer,\n    isGovernmentMode: isGovernmentModeReducer,\n    isShowingProfileBlock: isShowingProfileBlockReducer,\n    microsoftProfileData: microsoftProfileDataReducer,\n    monthData: monthDataReducer,\n    monthView: monthViewReducer,\n    paulyData: paulyDataReducer,\n    paulyList: paulyListReducer,\n    pdfData: pdfDataReducer,\n    resources: resourcesReducer,\n    resourcesLastCalled: resourcesLastCallReducer,\n    safeAreaColors: safeAreaColorsReducer,\n    tasks: tasksReducer,\n    tasksDeltaLink: tasksDeltaReducer,\n    selectedDate: selectedDateReducer,\n    studentSearch: studentSearchReducer,\n  },\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware({\n      immutableCheck: false,\n    }),\n});\n\nexport default store;\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { View, StyleProp, ViewStyle } from 'react-native';\nimport React from 'react';\nimport Svg, {\n  Circle,\n  ClipPath,\n  Defs,\n  G,\n  Line,\n  LinearGradient,\n  Path,\n  Polygon,\n  Polyline,\n  Rect,\n  Shape,\n  Stop,\n  SvgProps,\n} from 'react-native-svg';\nimport { Colors } from '../../types';\n\ninterface iconProps {\n  width: number;\n  height: number;\n  style?: StyleProp<ViewStyle> | undefined;\n  props?: Shape<SvgProps> | undefined;\n}\n\n// Icons\n// CalendarIcon\n// MedalIcon\n// BookIcon\n// GovernmentIcon\n// HomeIcon\n// UpIcon\n// DownIcon\n// AddIcon\n// CloseIcon\n// ChevronLeft\n// ChevronRight\n// FolderIcon\n// DocumentIcon\n// CopyIcon\n// PersonIcon\n// GearIcon\n// GraduationHatIcon\n// WarningIcon\n// SearchIcon\n\nexport function CalendarIcon({ width, height, style }: iconProps) {\n  return (\n    <View>\n      <Svg\n        width={width}\n        height={height}\n        style={style}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n      >\n        <Path\n          d=\"M7.75 2.5C7.75 2.08579 7.41421 1.75 7 1.75C6.58579 1.75 6.25 2.08579 6.25 2.5V4.07926C4.81067 4.19451 3.86577 4.47737 3.17157 5.17157C2.47737 5.86577 2.19451 6.81067 2.07926 8.25H21.9207C21.8055 6.81067 21.5226 5.86577 20.8284 5.17157C20.1342 4.47737 19.1893 4.19451 17.75 4.07926V2.5C17.75 2.08579 17.4142 1.75 17 1.75C16.5858 1.75 16.25 2.08579 16.25 2.5V4.0129C15.5847 4 14.839 4 14 4H10C9.16097 4 8.41527 4 7.75 4.0129V2.5Z\"\n          fill=\"#000000\"\n        />\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 12C2 11.161 2 10.4153 2.0129 9.75H21.9871C22 10.4153 22 11.161 22 12V14C22 17.7712 22 19.6569 20.8284 20.8284C19.6569 22 17.7712 22 14 22H10C6.22876 22 4.34315 22 3.17157 20.8284C2 19.6569 2 17.7712 2 14V12ZM17 14C17.5523 14 18 13.5523 18 13C18 12.4477 17.5523 12 17 12C16.4477 12 16 12.4477 16 13C16 13.5523 16.4477 14 17 14ZM17 18C17.5523 18 18 17.5523 18 17C18 16.4477 17.5523 16 17 16C16.4477 16 16 16.4477 16 17C16 17.5523 16.4477 18 17 18ZM13 13C13 13.5523 12.5523 14 12 14C11.4477 14 11 13.5523 11 13C11 12.4477 11.4477 12 12 12C12.5523 12 13 12.4477 13 13ZM13 17C13 17.5523 12.5523 18 12 18C11.4477 18 11 17.5523 11 17C11 16.4477 11.4477 16 12 16C12.5523 16 13 16.4477 13 17ZM7 14C7.55228 14 8 13.5523 8 13C8 12.4477 7.55228 12 7 12C6.44772 12 6 12.4477 6 13C6 13.5523 6.44772 14 7 14ZM7 18C7.55228 18 8 17.5523 8 17C8 16.4477 7.55228 16 7 16C6.44772 16 6 16.4477 6 17C6 17.5523 6.44772 18 7 18Z\"\n          fill=\"#000000\"\n        />\n      </Svg>\n    </View>\n  );\n}\n\nexport function MedalIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 297.334 297.334\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <G>\n          <Polygon points=\"172.667,64 206.687,0 90.623,0 124.649,64 \" />\n          <Path d=\"M227.904,8.293c-2.553-4.837-6.726-4.834-9.272,0.006l-55.839,106.095c20.009,2.892,38.11,11.76,52.427,24.735 l36.208-68.682c2.551-4.838,2.549-12.754-0.004-17.591L227.904,8.293z\" />\n          <Path d=\"M134.518,114.35L78.7,8.299c-2.547-4.84-6.72-4.843-9.272-0.006L45.909,52.856c-2.552,4.837-2.554,12.753-0.004,17.591 l36.102,68.48C96.362,125.996,114.491,117.181,134.518,114.35z\" />\n          <Path d=\"M148.502,128.279c-46.685,0-84.529,37.844-84.529,84.528c0,46.682,37.845,84.526,84.529,84.526 c46.682,0,84.526-37.845,84.526-84.526C233.028,166.123,195.184,128.279,148.502,128.279z M148.502,273.125 c-33.262,0-60.32-27.059-60.32-60.317c0-33.261,27.059-60.319,60.32-60.319c33.259,0,60.316,27.059,60.316,60.319 C208.819,246.066,181.761,273.125,148.502,273.125z\" />\n          <Path d=\"M148.502,167.404c-25.038,0-45.404,20.367-45.404,45.403c0,25.033,20.366,45.4,45.404,45.4 c25.033,0,45.399-20.367,45.399-45.4C193.902,187.771,173.535,167.404,148.502,167.404z\" />\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function BookIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg width={width} height={height} style={style} viewBox=\"0 0 512 512\">\n      <Path d=\"m202.24 74c-36.13-17.25-86.63-25.7-154.24-26a31.36 31.36 0 0 0 -17.92 5.33 32 32 0 0 0 -14.08 26.57v286.1c0 19.34 13.76 33.93 32 33.93 71.07 0 142.36 6.64 185.06 47a4.11 4.11 0 0 0 6.94-3v-337.11a15.89 15.89 0 0 0 -5.46-12 143 143 0 0 0 -32.3-20.82z\" />\n      <Path d=\"m481.92 53.3a31.33 31.33 0 0 0 -17.92-5.3c-67.61.3-118.11 8.71-154.24 26a143.31 143.31 0 0 0 -32.31 20.78 15.93 15.93 0 0 0 -5.45 12v337.13a3.93 3.93 0 0 0 6.68 2.81c25.67-25.5 70.72-46.82 185.36-46.81a32 32 0 0 0 32-32v-288a32 32 0 0 0 -14.12-26.61z\" />\n    </Svg>\n  );\n}\n\nexport function GovernmentIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"black\"\n    >\n      <Path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.5528 1.10557C11.8343 0.964809 12.1657 0.964809 12.4472 1.10557L22.4472 6.10557C22.862 6.31298 23.0798 6.77838 22.9732 7.22975C22.8667 7.68112 22.4638 8 22 8H1.99998C1.5362 8 1.13328 7.68112 1.02673 7.22975C0.920172 6.77838 1.13795 6.31298 1.55276 6.10557L11.5528 1.10557ZM6.23604 6H17.7639L12 3.11803L6.23604 6ZM5.99998 9C6.55226 9 6.99998 9.44772 6.99998 10V15C6.99998 15.5523 6.55226 16 5.99998 16C5.44769 16 4.99998 15.5523 4.99998 15V10C4.99998 9.44772 5.44769 9 5.99998 9ZM9.99998 9C10.5523 9 11 9.44772 11 10V15C11 15.5523 10.5523 16 9.99998 16C9.44769 16 8.99998 15.5523 8.99998 15V10C8.99998 9.44772 9.44769 9 9.99998 9ZM14 9C14.5523 9 15 9.44772 15 10V15C15 15.5523 14.5523 16 14 16C13.4477 16 13 15.5523 13 15V10C13 9.44772 13.4477 9 14 9ZM18 9C18.5523 9 19 9.44772 19 10V15C19 15.5523 18.5523 16 18 16C17.4477 16 17 15.5523 17 15V10C17 9.44772 17.4477 9 18 9ZM2.99998 18C2.99998 17.4477 3.44769 17 3.99998 17H20C20.5523 17 21 17.4477 21 18C21 18.5523 20.5523 19 20 19H3.99998C3.44769 19 2.99998 18.5523 2.99998 18ZM0.999976 21C0.999976 20.4477 1.44769 20 1.99998 20H22C22.5523 20 23 20.4477 23 21C23 21.5523 22.5523 22 22 22H1.99998C1.44769 22 0.999976 21.5523 0.999976 21Z\"\n        fill=\"#000000\"\n      />\n    </Svg>\n  );\n}\n\nexport function HomeIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 460.298 460.297\"\n    >\n      <Path\n        d=\"M230.149,120.939L65.986,256.274c0,0.191-0.048,0.472-0.144,0.855c-0.094,0.38-0.144,0.656-0.144,0.852v137.041\n      c0,4.948,1.809,9.236,5.426,12.847c3.616,3.613,7.898,5.431,12.847,5.431h109.63V303.664h73.097v109.64h109.629\n      c4.948,0,9.236-1.814,12.847-5.435c3.617-3.607,5.432-7.898,5.432-12.847V257.981c0-0.76-0.104-1.334-0.288-1.707L230.149,120.939\n      z\"\n      />\n      <Path\n        d=\"M457.122,225.438L394.6,173.476V56.989c0-2.663-0.856-4.853-2.574-6.567c-1.704-1.712-3.894-2.568-6.563-2.568h-54.816\n      c-2.666,0-4.855,0.856-6.57,2.568c-1.711,1.714-2.566,3.905-2.566,6.567v55.673l-69.662-58.245\n      c-6.084-4.949-13.318-7.423-21.694-7.423c-8.375,0-15.608,2.474-21.698,7.423L3.172,225.438c-1.903,1.52-2.946,3.566-3.14,6.136\n      c-0.193,2.568,0.472,4.811,1.997,6.713l17.701,21.128c1.525,1.712,3.521,2.759,5.996,3.142c2.285,0.192,4.57-0.476,6.855-1.998\n      L230.149,95.817l197.57,164.741c1.526,1.328,3.521,1.991,5.996,1.991h0.858c2.471-0.376,4.463-1.43,5.996-3.138l17.703-21.125\n      c1.522-1.906,2.189-4.145,1.991-6.716C460.068,229.007,459.021,226.961,457.122,225.438z\"\n      />\n    </Svg>\n  );\n}\n\nexport function UpIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 330 330\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          id=\"XMLID_224_\"\n          d=\"M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394 l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393 C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function DownIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 330 330\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          id=\"XMLID_225_\"\n          d=\"M325.607,79.393c-5.857-5.857-15.355-5.858-21.213,0.001l-139.39,139.393L25.607,79.393 c-5.857-5.857-15.355-5.858-21.213,0.001c-5.858,5.858-5.858,15.355,0,21.213l150.004,150c2.813,2.813,6.628,4.393,10.606,4.393 s7.794-1.581,10.606-4.394l149.996-150C331.465,94.749,331.465,85.251,325.607,79.393z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function AddIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 309.059 309.059\"\n      fill=\"#000000\"\n    >\n      <G strokeWidth=\"0\" />\n      <G strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <G>\n        <G>\n          <G>\n            <Path\n              fill=\"#010002\"\n              d=\"M280.71,126.181h-97.822V28.338C182.889,12.711,170.172,0,154.529,0S126.17,12.711,126.17,28.338 v97.843H28.359C12.722,126.181,0,138.903,0,154.529c0,15.621,12.717,28.338,28.359,28.338h97.811v97.843 c0,15.632,12.711,28.348,28.359,28.348c15.643,0,28.359-12.717,28.359-28.348v-97.843h97.822 c15.632,0,28.348-12.717,28.348-28.338C309.059,138.903,296.342,126.181,280.71,126.181z\"\n            />\n          </G>\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function CloseIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G strokeWidth=\"0\" />\n      <G strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <G>\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.29289 5.29289C5.68342 4.90237 6.31658 4.90237 6.70711 5.29289L12 10.5858L17.2929 5.29289C17.6834 4.90237 18.3166 4.90237 18.7071 5.29289C19.0976 5.68342 19.0976 6.31658 18.7071 6.70711L13.4142 12L18.7071 17.2929C19.0976 17.6834 19.0976 18.3166 18.7071 18.7071C18.3166 19.0976 17.6834 19.0976 17.2929 18.7071L12 13.4142L6.70711 18.7071C6.31658 19.0976 5.68342 19.0976 5.29289 18.7071C4.90237 18.3166 4.90237 17.6834 5.29289 17.2929L10.5858 12L5.29289 6.70711C4.90237 6.31658 4.90237 5.68342 5.29289 5.29289Z\"\n          fill=\"#0F1729\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ChevronLeft({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 16 16\"\n      {...props}\n    >\n      <Path\n        fillRule=\"evenodd\"\n        d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\n      />\n    </Svg>\n  );\n}\n\nexport function ChevronRight({ width, height, style }: iconProps) {\n  return (\n    <Svg width={width} height={height} style={style} viewBox=\"0 0 16 16\">\n      <Path\n        fillRule=\"evenodd\"\n        d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"\n      />\n    </Svg>\n  );\n}\n\nexport function FolderIcon({ width, height, style }: iconProps) {\n  return (\n    <View>\n      <Svg\n        width={width}\n        height={height}\n        style={style}\n        stroke=\"currentColor\"\n        fill=\"currentColor\"\n        strokeWidth=\"0\"\n        viewBox=\"0 0 48 48\"\n      >\n        <Path\n          fill=\"#FFA000\"\n          d=\"M40,12H22l-4-4H8c-2.2,0-4,1.8-4,4v8h40v-4C44,13.8,42.2,12,40,12z\"\n        />\n        <Path\n          fill=\"#FFCA28\"\n          d=\"M40,12H8c-2.2,0-4,1.8-4,4v20c0,2.2,1.8,4,4,4h32c2.2,0,4-1.8,4-4V16C44,13.8,42.2,12,40,12z\"\n        />\n      </Svg>\n    </View>\n  );\n}\n\nexport function DocumentIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      viewBox=\"0 0 48 48\"\n    >\n      <Polygon fill=\"#90CAF9\" points=\"40,45 8,45 8,3 30,3 40,13\" />\n      <Polygon fill=\"#E1F5FE\" points=\"38.5,14 29,14 29,4.5\" />\n      <G fill=\"#1976D2\">\n        <Rect x=\"16\" y=\"21\" width=\"17\" height=\"2\" />\n        <Rect x=\"16\" y=\"25\" width=\"13\" height=\"2\" />\n        <Rect x=\"16\" y=\"29\" width=\"17\" height=\"2\" />\n        <Rect x=\"16\" y=\"33\" width=\"13\" height=\"2\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function SportsIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg width={width} height={height} style={style} {...props} viewBox=\"0 0 64 64\" aria-hidden={true} preserveAspectRatio=\"xMidYMid meet\" fill=\"#000000\">\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path d=\"M59.284 4.714C58.27 3.701 55.587 2 49.022 2c-2.741 0-5.859.307-9.27.912a57.369 57.369 0 0 0-9.213 2.413c-6.229 2.221-11.512 5.47-15.698 9.658c-4.19 4.192-7.438 9.474-9.654 15.701c-1.031 2.889-1.843 5.988-2.413 9.211c-2.141 12.084.643 16.993 2.494 18.843C6.486 59.956 9.527 62 16.204 62h.001c2.369 0 5.029-.26 7.904-.769c3.236-.574 6.335-1.387 9.208-2.413c6.231-2.22 11.514-5.469 15.702-9.657c4.188-4.191 7.437-9.475 9.655-15.703c1.025-2.879 1.836-5.979 2.411-9.21c2.478-13.974-.753-18.483-1.801-19.534M33.041 24.832c-.987-.988.544-2.52 1.532-1.532l2.299 2.299c1.133-1.131 2.172-2.17 3.064-3.064l-2.3-2.299c-.988-.988.545-2.52 1.534-1.533l2.298 2.3l1.377-1.377c.986-.989 2.518.543 1.532 1.531l-1.378 1.378l2.296 2.298c.989.987-.543 2.519-1.529 1.532l-2.299-2.298l-3.063 3.064l2.298 2.298c.988.988-.546 2.52-1.531 1.533l-2.299-2.298l-3.064 3.065l2.297 2.297c.987.989-.543 2.519-1.531 1.532l-2.297-2.298l-3.064 3.064c.766.766 1.532 1.531 2.297 2.298c.988.987-.545 2.519-1.532 1.533l-2.297-2.299l-3.064 3.064l2.297 2.299c.988.987-.543 2.519-1.531 1.53l-2.297-2.297c-.655.652-1.136 1.135-1.379 1.377c-.987.987-2.518-.544-1.532-1.533l1.378-1.377c-.767-.767-1.533-1.532-2.297-2.298c-.988-.988.543-2.521 1.529-1.533l2.299 2.3l3.063-3.064l-2.299-2.299c-.986-.988.546-2.521 1.533-1.533l2.299 2.298l3.063-3.064l-2.297-2.297c-.989-.989.544-2.52 1.529-1.533l2.299 2.3l3.066-3.065l-2.299-2.299m-9.276 34.462c-.414.074-.813.131-1.217.193c-3.615-2.093-7.055-4.731-10.176-7.855c-3.122-3.12-5.761-6.563-7.853-10.176c.063-.403.118-.795.193-1.218a55.744 55.744 0 0 1 1.933-7.7c1.94 5.356 5.28 10.557 9.773 15.05c4.49 4.492 9.689 7.833 15.046 9.774a56.191 56.191 0 0 1-7.699 1.932m33.454-27.691c-1.942-5.356-5.282-10.554-9.775-15.046c-4.49-4.493-9.69-7.833-15.048-9.775a56.153 56.153 0 0 1 7.701-1.933c.414-.074.81-.129 1.215-.194c3.614 2.094 7.056 4.732 10.18 7.854c3.122 3.126 5.762 6.57 7.855 10.187c-.063.399-.123.794-.197 1.208a56.411 56.411 0 0 1-1.931 7.699\" fill=\"#000000\"/>\n      </G>\n    </Svg>\n  )\n}\n\nexport function CopyIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 32 32\"\n      id=\"Layer_1\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path d=\"M27.2,8.22H23.78V5.42A3.42,3.42,0,0,0,20.36,2H5.42A3.42,3.42,0,0,0,2,5.42V20.36a3.43,3.43,0,0,0,3.42,3.42h2.8V27.2A2.81,2.81,0,0,0,11,30H27.2A2.81,2.81,0,0,0,30,27.2V11A2.81,2.81,0,0,0,27.2,8.22ZM5.42,21.91a1.55,1.55,0,0,1-1.55-1.55V5.42A1.54,1.54,0,0,1,5.42,3.87H20.36a1.55,1.55,0,0,1,1.55,1.55v2.8H11A2.81,2.81,0,0,0,8.22,11V21.91ZM28.13,27.2a.93.93,0,0,1-.93.93H11a.93.93,0,0,1-.93-.93V11a.93.93,0,0,1,.93-.93H27.2a.93.93,0,0,1,.93.93Z\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PersonIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 512 512\"\n    >\n      <Path d=\"M258.9,48C141.92,46.42,46.42,141.92,48,258.9,49.56,371.09,140.91,462.44,253.1,464c117,1.6,212.48-93.9,210.88-210.88C462.44,140.91,371.09,49.56,258.9,48ZM385.32,375.25a4,4,0,0,1-6.14-.32,124.27,124.27,0,0,0-32.35-29.59C321.37,329,289.11,320,256,320s-65.37,9-90.83,25.34a124.24,124.24,0,0,0-32.35,29.58,4,4,0,0,1-6.14.32A175.32,175.32,0,0,1,80,259C78.37,161.69,158.22,80.24,255.57,80S432,158.81,432,256A175.32,175.32,0,0,1,385.32,375.25Z\" />\n      <Path d=\"M256,144c-19.72,0-37.55,7.39-50.22,20.82s-19,32-17.57,51.93C191.11,256,221.52,288,256,288s64.83-32,67.79-71.24c1.48-19.74-4.8-38.14-17.68-51.82C293.39,151.44,275.59,144,256,144Z\" />\n    </Svg>\n  );\n}\n\nexport function GearIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Path\n        clipRule=\"evenodd\"\n        d=\"M17.2994 10.4527L19.2267 10.7677C19.3846 10.7935 19.5003 10.9298 19.5 11.0896V12.883C19.5 13.0412 19.3865 13.1768 19.2303 13.2042L17.3004 13.543C17.1885 13.9298 17.0349 14.3022 16.8415 14.6543L17.9823 16.2382C18.0759 16.3679 18.0612 16.5463 17.9483 16.6595L16.6804 17.9283C16.5682 18.0401 16.3921 18.0561 16.2623 17.9645L14.6627 16.8424C14.3099 17.0387 13.9352 17.1952 13.5442 17.3103L13.2034 19.231C13.176 19.3865 13.0406 19.5 12.8825 19.5H11.0888C10.9294 19.5 10.7934 19.3849 10.7676 19.228L10.4493 17.3168C10.059 17.204 9.6823 17.0485 9.32585 16.8525L7.73767 17.9648C7.60821 18.0558 7.43178 18.0401 7.31992 17.9283L6.05198 16.6595C5.93947 16.5463 5.9248 16.3686 6.01741 16.2391L7.13958 14.6697C6.94163 14.3116 6.78444 13.9337 6.67062 13.5414L4.76905 13.2042C4.61349 13.1765 4.5 13.0412 4.5 12.883V11.0896C4.5 10.9304 4.61544 10.7941 4.77263 10.768L6.67421 10.4514C6.78868 10.0582 6.94586 9.68022 7.14316 9.32315L6.0347 7.73739C5.94371 7.60793 5.95937 7.43185 6.07122 7.32L7.33883 6.0525C7.452 5.94 7.62908 5.925 7.7592 6.01793L9.33433 7.14293C9.68817 6.94924 10.0639 6.795 10.4552 6.6825L10.767 4.77359C10.7927 4.61576 10.929 4.5 11.0888 4.5H12.8825C13.041 4.5 13.1763 4.61413 13.2037 4.77L13.5399 6.68935C13.929 6.8025 14.304 6.95837 14.6591 7.15467L16.2385 6.01957C16.3683 5.92598 16.5464 5.94065 16.6595 6.05348L17.9278 7.32098C18.0397 7.43315 18.0553 7.60957 17.9643 7.73902L16.8392 9.34239C17.0323 9.69424 17.1865 10.066 17.2994 10.4527ZM9.71725 12C9.71725 13.2607 10.7393 14.2826 12.0001 14.2826C13.2608 14.2826 14.2829 13.2607 14.2829 12C14.2829 10.7394 13.2608 9.71742 12.0001 9.71742C10.7393 9.71742 9.71725 10.7394 9.71725 12Z\"\n        stroke=\"#000000\"\n      />\n    </Svg>\n  );\n}\n\nexport function GraduationHatIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Path\n        d=\"M7.54004 11.77L12 14L19 10.5M7.54004 11.77V17.77M7.54004 11.77L12 9.54004M7.54004 11.77L5 10.5M7.54004 17.77V21M7.54004 17.77L12 20L19 16.5V10.5M7.54004 17.77L5 16.5V10.5M19 10.5L22 9L12 4L2 9L5 10.5\"\n        stroke=\"#000000\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n}\n\nexport function WarningIcon({\n  width,\n  height,\n  style,\n  outlineColor,\n}: {\n  width: number;\n  height: number;\n  style?: StyleProp<ViewStyle>;\n  outlineColor?: string;\n}) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Circle cx=\"12\" cy=\"17\" r=\"1\" fill=\"#000000\" />\n      <Path\n        d=\"M12 10L12 14\"\n        stroke=\"#000000\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <Path\n        d=\"M3.44722 18.1056L10.2111 4.57771C10.9482 3.10361 13.0518 3.10362 13.7889 4.57771L20.5528 18.1056C21.2177 19.4354 20.2507 21 18.7639 21H5.23607C3.7493 21 2.78231 19.4354 3.44722 18.1056Z\"\n        stroke={outlineColor || '#000000'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n}\n\nexport function SearchIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      id=\"Capa_1\"\n      viewBox=\"0 0 488.4 488.4\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <G>\n          <G>\n            <Path d=\"M0,203.25c0,112.1,91.2,203.2,203.2,203.2c51.6,0,98.8-19.4,134.7-51.2l129.5,129.5c2.4,2.4,5.5,3.6,8.7,3.6 s6.3-1.2,8.7-3.6c4.8-4.8,4.8-12.5,0-17.3l-129.6-129.5c31.8-35.9,51.2-83,51.2-134.7c0-112.1-91.2-203.2-203.2-203.2 S0,91.15,0,203.25z M381.9,203.25c0,98.5-80.2,178.7-178.7,178.7s-178.7-80.2-178.7-178.7s80.2-178.7,178.7-178.7 S381.9,104.65,381.9,203.25z\" />\n          </G>\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function WordIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-1712.086\"\n            x2=\"13.832\"\n            y2=\"-1695.914\"\n            gradientTransform=\"translate(0 1720)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#2368c4\" />\n            <Stop offset=\"0.5\" stopColor=\"#1a5dbe\" />\n            <Stop offset=\"1\" stopColor=\"#1146ac\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M28.806,3H9.705A1.192,1.192,0,0,0,8.512,4.191h0V9.5l11.069,3.25L30,9.5V4.191A1.192,1.192,0,0,0,28.806,3Z\"\n          fill=\"#41a5ee\"\n        />\n        <Path d=\"M30,9.5H8.512V16l11.069,1.95L30,16Z\" fill=\"#2b7cd3\" />\n        <Path d=\"M8.512,16v6.5L18.93,23.8,30,22.5V16Z\" fill=\"#185abd\" />\n        <Path\n          d=\"M9.705,29h19.1A1.192,1.192,0,0,0,30,27.809h0V22.5H8.512v5.309A1.192,1.192,0,0,0,9.705,29Z\"\n          fill=\"#103f91\"\n        />\n        <Path\n          d=\"M16.434,8.2H8.512V24.45h7.922a1.2,1.2,0,0,0,1.194-1.191V9.391A1.2,1.2,0,0,0,16.434,8.2Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V25.1h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V23.8h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.132,8.85H8.512V23.8h6.62a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.132,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"#215091\"\n        />\n        <Path\n          d=\"M6.9,17.988c.023.184.039.344.046.481h.028c.01-.13.032-.287.065-.47s.062-.338.089-.465l1.255-5.407h1.624l1.3,5.326a7.761,7.761,0,0,1,.162,1h.022a7.6,7.6,0,0,1,.135-.975l1.039-5.358h1.477l-1.824,7.748H10.591L9.354,14.742q-.054-.222-.122-.578t-.084-.52H9.127q-.021.189-.084.561c-.042.249-.075.432-.1.552L7.78,19.871H6.024L4.19,12.127h1.5l1.131,5.418A4.469,4.469,0,0,1,6.9,17.988Z\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PowerpointIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-1748.086\"\n            x2=\"13.832\"\n            y2=\"-1731.914\"\n            gradientTransform=\"translate(0 1756)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#ca4c28\" />\n            <Stop offset=\"0.5\" stopColor=\"#c5401e\" />\n            <Stop offset=\"1\" stopColor=\"#b62f14\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M18.93,17.3,16.977,3h-.146A12.9,12.9,0,0,0,3.953,15.854V16Z\"\n          fill=\"#ed6c47\"\n        />\n        <Path\n          d=\"M17.123,3h-.146V16l6.511,2.6L30,16v-.146A12.9,12.9,0,0,0,17.123,3Z\"\n          fill=\"#ff8f6b\"\n        />\n        <Path\n          d=\"M30,16v.143A12.905,12.905,0,0,1,17.12,29h-.287A12.907,12.907,0,0,1,3.953,16.143V16Z\"\n          fill=\"#d35230\"\n        />\n        <Path\n          d=\"M17.628,9.389V23.26a1.2,1.2,0,0,1-.742,1.1,1.16,1.16,0,0,1-.45.091H7.027c-.182-.208-.358-.429-.521-.65a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85c.143-.221.293-.442.456-.65h9.93A1.2,1.2,0,0,1,17.628,9.389Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.977,10.04V23.911a1.15,1.15,0,0,1-.091.448,1.2,1.2,0,0,1-1.1.741H7.62q-.309-.314-.593-.65c-.182-.208-.358-.429-.521-.65a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.735A1.2,1.2,0,0,1,16.977,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.977,10.04V22.611A1.2,1.2,0,0,1,15.785,23.8H6.506a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.735A1.2,1.2,0,0,1,16.977,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.326,10.04V22.611A1.2,1.2,0,0,1,15.134,23.8H6.506a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.084A1.2,1.2,0,0,1,16.326,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"#c5401e\"\n        />\n        <Path\n          d=\"M9.293,12.028a3.287,3.287,0,0,1,2.174.636,2.27,2.27,0,0,1,.756,1.841,2.555,2.555,0,0,1-.373,1.376,2.49,2.49,0,0,1-1.059.935A3.607,3.607,0,0,1,9.2,17.15H7.687v2.8H6.141V12.028ZM7.686,15.94H9.017a1.735,1.735,0,0,0,1.177-.351,1.3,1.3,0,0,0,.4-1.025q0-1.309-1.525-1.31H7.686V15.94Z\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ExcelIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-2092.086\"\n            x2=\"13.832\"\n            y2=\"-2075.914\"\n            gradientTransform=\"translate(0 2100)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#18884f\" />\n            <Stop offset=\"0.5\" stopColor=\"#117e43\" />\n            <Stop offset=\"1\" stopColor=\"#0b6631\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M19.581,15.35,8.512,13.4V27.809A1.192,1.192,0,0,0,9.705,29h19.1A1.192,1.192,0,0,0,30,27.809h0V22.5Z\"\n          fill=\"#185c37\"\n        />\n        <Path\n          d=\"M19.581,3H9.705A1.192,1.192,0,0,0,8.512,4.191h0V9.5L19.581,16l5.861,1.95L30,16V9.5Z\"\n          fill=\"#21a366\"\n        />\n        <Path d=\"M8.512,9.5H19.581V16H8.512Z\" fill=\"#107c41\" />\n        <Path\n          d=\"M16.434,8.2H8.512V24.45h7.922a1.2,1.2,0,0,0,1.194-1.191V9.391A1.2,1.2,0,0,0,16.434,8.2Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V25.1h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V23.8h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.132,8.85H8.512V23.8h6.62a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.132,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"url(#a)\"\n        />\n        <Path\n          d=\"M5.7,19.873l2.511-3.884-2.3-3.862H7.758L9.013,14.6c.116.234.2.408.238.524h.017c.082-.188.169-.369.26-.546l1.342-2.447h1.7l-2.359,3.84,2.419,3.905H10.821l-1.45-2.711A2.355,2.355,0,0,1,9.2,16.8H9.176a1.688,1.688,0,0,1-.168.351L7.515,19.873Z\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M28.806,3H19.581V9.5H30V4.191A1.192,1.192,0,0,0,28.806,3Z\"\n          fill=\"#33c481\"\n        />\n        <Path d=\"M19.581,16H30v6.5H19.581Z\" fill=\"#107c41\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function VideoIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M18 3H6C3.79086 3 2 4.79086 2 7V17C2 19.2091 3.79086 21 6 21H18C20.2091 21 22 19.2091 22 17V7C22 4.79086 20.2091 3 18 3Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M10.28 8.03994C9.19003 8.42994 9 10.5199 9 12.0399C9 13.5599 9.19003 15.5999 10.28 16.0399C11.37 16.4799 16 13.7499 16 12.0399C16 10.3299 11.44 7.61994 10.28 8.03994Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PDFIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M24.1,2.072h0l5.564,5.8V29.928H8.879V30H29.735V7.945L24.1,2.072\"\n          fill=\"#909090\"\n        />\n        <Path d=\"M24.031,2H8.808V29.928H29.664V7.873L24.03,2\" fill=\"#f4f4f4\" />\n        <Path d=\"M8.655,3.5H2.265v6.827h20.1V3.5H8.655\" fill=\"#7a7b7c\" />\n        <Path d=\"M22.472,10.211H2.395V3.379H22.472v6.832\" fill=\"#dd2025\" />\n        <Path\n          d=\"M9.052,4.534h-.03l-.207,0H7.745v4.8H8.773V7.715L9,7.728a2.042,2.042,0,0,0,.647-.117,1.427,1.427,0,0,0,.493-.291,1.224,1.224,0,0,0,.335-.454,2.13,2.13,0,0,0,.105-.908,2.237,2.237,0,0,0-.114-.644,1.173,1.173,0,0,0-.687-.65A2.149,2.149,0,0,0,9.37,4.56a2.232,2.232,0,0,0-.319-.026M8.862,6.828l-.089,0V5.348h.193a.57.57,0,0,1,.459.181.92.92,0,0,1,.183.558c0,.246,0,.469-.222.626a.942.942,0,0,1-.524.114\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M12.533,4.521c-.111,0-.219.008-.295.011L12,4.538h-.78v4.8h.918a2.677,2.677,0,0,0,1.028-.175,1.71,1.71,0,0,0,.68-.491,1.939,1.939,0,0,0,.373-.749,3.728,3.728,0,0,0,.114-.949,4.416,4.416,0,0,0-.087-1.127,1.777,1.777,0,0,0-.4-.733,1.63,1.63,0,0,0-.535-.4,2.413,2.413,0,0,0-.549-.178,1.282,1.282,0,0,0-.228-.017m-.182,3.937-.1,0V5.392h.013a1.062,1.062,0,0,1,.6.107,1.2,1.2,0,0,1,.324.4,1.3,1.3,0,0,1,.142.526c.009.22,0,.4,0,.549a2.926,2.926,0,0,1-.033.513,1.756,1.756,0,0,1-.169.5,1.13,1.13,0,0,1-.363.36.673.673,0,0,1-.416.106\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M17.43,4.538H15v4.8h1.028V7.434h1.3V6.542h-1.3V5.43h1.4V4.538\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M21.781,20.255s3.188-.578,3.188.511S22.994,21.412,21.781,20.255Zm-2.357.083a7.543,7.543,0,0,0-1.473.489l.4-.9c.4-.9.815-2.127.815-2.127a14.216,14.216,0,0,0,1.658,2.252,13.033,13.033,0,0,0-1.4.288Zm-1.262-6.5c0-.949.307-1.208.546-1.208s.508.115.517.939a10.787,10.787,0,0,1-.517,2.434A4.426,4.426,0,0,1,18.161,13.841ZM13.513,24.354c-.978-.585,2.051-2.386,2.6-2.444C16.11,21.911,14.537,24.966,13.513,24.354ZM25.9,20.895c-.01-.1-.1-1.207-2.07-1.16a14.228,14.228,0,0,0-2.453.173,12.542,12.542,0,0,1-2.012-2.655,11.76,11.76,0,0,0,.623-3.1c-.029-1.2-.316-1.888-1.236-1.878s-1.054.815-.933,2.013a9.309,9.309,0,0,0,.665,2.338s-.425,1.323-.987,2.639-.946,2.006-.946,2.006a9.622,9.622,0,0,0-2.725,1.4c-.824.767-1.159,1.356-.725,1.945.374.508,1.683.623,2.853-.91a22.549,22.549,0,0,0,1.7-2.492s1.784-.489,2.339-.623,1.226-.24,1.226-.24,1.629,1.639,3.2,1.581,1.495-.939,1.485-1.035\"\n          fill=\"#dd2025\"\n        />\n        <Path d=\"M23.954,2.077V7.95h5.633L23.954,2.077Z\" fill=\"#909090\" />\n        <Path d=\"M24.031,2V7.873h5.633L24.031,2Z\" fill=\"#f4f4f4\" />\n        <Path\n          d=\"M8.975,4.457h-.03l-.207,0H7.668v4.8H8.7V7.639l.228.013a2.042,2.042,0,0,0,.647-.117,1.428,1.428,0,0,0,.493-.291A1.224,1.224,0,0,0,10.4,6.79a2.13,2.13,0,0,0,.105-.908,2.237,2.237,0,0,0-.114-.644,1.173,1.173,0,0,0-.687-.65,2.149,2.149,0,0,0-.411-.105,2.232,2.232,0,0,0-.319-.026M8.785,6.751l-.089,0V5.271H8.89a.57.57,0,0,1,.459.181.92.92,0,0,1,.183.558c0,.246,0,.469-.222.626a.942.942,0,0,1-.524.114\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M12.456,4.444c-.111,0-.219.008-.295.011l-.235.006h-.78v4.8h.918a2.677,2.677,0,0,0,1.028-.175,1.71,1.71,0,0,0,.68-.491,1.939,1.939,0,0,0,.373-.749,3.728,3.728,0,0,0,.114-.949,4.416,4.416,0,0,0-.087-1.127,1.777,1.777,0,0,0-.4-.733,1.63,1.63,0,0,0-.535-.4,2.413,2.413,0,0,0-.549-.178,1.282,1.282,0,0,0-.228-.017m-.182,3.937-.1,0V5.315h.013a1.062,1.062,0,0,1,.6.107,1.2,1.2,0,0,1,.324.4,1.3,1.3,0,0,1,.142.526c.009.22,0,.4,0,.549a2.926,2.926,0,0,1-.033.513,1.756,1.756,0,0,1-.169.5,1.13,1.13,0,0,1-.363.36.673.673,0,0,1-.416.106\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M17.353,4.461h-2.43v4.8h1.028V7.357h1.3V6.465h-1.3V5.353h1.4V4.461\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ImageIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M14.2639 15.9375L12.5958 14.2834C11.7909 13.4851 11.3884 13.086 10.9266 12.9401C10.5204 12.8118 10.0838 12.8165 9.68048 12.9536C9.22188 13.1095 8.82814 13.5172 8.04068 14.3326L4.04409 18.2801M14.2639 15.9375L14.6053 15.599C15.4112 14.7998 15.8141 14.4002 16.2765 14.2543C16.6831 14.126 17.12 14.1311 17.5236 14.2687C17.9824 14.4251 18.3761 14.8339 19.1634 15.6514L20 16.4934M14.2639 15.9375L18.275 19.9565M18.275 19.9565C17.9176 20 17.4543 20 16.8 20H7.2C6.07989 20 5.51984 20 5.09202 19.782C4.71569 19.5903 4.40973 19.2843 4.21799 18.908C4.12796 18.7313 4.07512 18.5321 4.04409 18.2801M18.275 19.9565C18.5293 19.9256 18.7301 19.8727 18.908 19.782C19.2843 19.5903 19.5903 19.2843 19.782 18.908C20 18.4802 20 17.9201 20 16.8V16.4934M4.04409 18.2801C4 17.9221 4 17.4575 4 16.8V7.2C4 6.0799 4 5.51984 4.21799 5.09202C4.40973 4.71569 4.71569 4.40973 5.09202 4.21799C5.51984 4 6.07989 4 7.2 4H16.8C17.9201 4 18.4802 4 18.908 4.21799C19.2843 4.40973 19.5903 4.71569 19.782 5.09202C20 5.51984 20 6.0799 20 7.2V16.4934M17 8.99989C17 10.1045 16.1046 10.9999 15 10.9999C13.8954 10.9999 13 10.1045 13 8.99989C13 7.89532 13.8954 6.99989 15 6.99989C16.1046 6.99989 17 7.89532 17 8.99989Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function AudioIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M4.15838 13.9306C3.44537 12.7423 3.44537 11.2577 4.15838 10.0694C4.37596 9.70674 4.73641 9.45272 5.1511 9.36978L6.84413 9.03117C6.94499 9.011 7.03591 8.95691 7.10176 8.87788L9.17085 6.39498C10.3534 4.97592 10.9447 4.26638 11.4723 4.45742C12 4.64846 12 5.57207 12 7.41928L12 16.5807C12 18.4279 12 19.3515 11.4723 19.5426C10.9447 19.7336 10.3534 19.0241 9.17085 17.605L7.10176 15.1221C7.03591 15.0431 6.94499 14.989 6.84413 14.9688L5.1511 14.6302C4.73641 14.5473 4.37596 14.2933 4.15838 13.9306Z\"\n          fill=\"#222222\"\n        />\n        <Path\n          d=\"M14.5355 8.46447C15.4684 9.39732 15.9948 10.6611 16 11.9803C16.0052 13.2996 15.4888 14.5674 14.5633 15.5076\"\n          stroke=\"#222222\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <Path\n          d=\"M18.6569 6.34314C20.1494 7.83572 20.9916 9.85769 20.9999 11.9685C21.0083 14.0793 20.182 16.1078 18.7012 17.6121\"\n          stroke=\"#222222\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function OneNoteIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M8 23H32V28C32 29.1046 31.1046 30 30 30H10C8.89543 30 8 29.1046 8 28V23Z\"\n          fill=\"#5D29A1\"\n        />\n        <Rect x=\"8\" y=\"16\" width=\"24\" height=\"7\" fill=\"#7F32CC\" />\n        <Rect x=\"8\" y=\"9\" width=\"24\" height=\"7\" fill=\"#9A40D6\" />\n        <Path\n          d=\"M10 2C8.89543 2 8 2.89543 8 4V28C8 29.1046 8.89543 30 10 30H24V9H32V4C32 2.89543 31.1046 2 30 2H10Z\"\n          fill=\"url(#paint0_linear_87_7733)\"\n        />\n        <Path\n          d=\"M8 12C8 10.3431 9.34315 9 11 9H17C18.6569 9 20 10.3431 20 12V24C20 25.6569 18.6569 27 17 27H8V12Z\"\n          fill=\"#000000\"\n          fillOpacity={0.3}\n        />\n        <Rect\n          y=\"7\"\n          width=\"18\"\n          height=\"18\"\n          rx=\"2\"\n          fill=\"url(#paint1_linear_87_7733)\"\n        />\n        <Path\n          d=\"M13 21V11H10.8893V16.8286L6.9631 11H5V21H7.08118V14.9571L11.155 21H13Z\"\n          fill={Colors.white}\n        />\n        <Defs>\n          <LinearGradient\n            id=\"paint0_linear_87_7733\"\n            x1=\"8\"\n            y1=\"16\"\n            x2=\"24.5\"\n            y2=\"16\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop stop-color=\"#8C42AC\" />\n            <Stop offset=\"1\" stopColor=\"#C36DEF\" />\n          </LinearGradient>\n          <LinearGradient\n            id=\"paint1_linear_87_7733\"\n            x1=\"0\"\n            y1=\"16\"\n            x2=\"19\"\n            y2=\"16\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop stop-color=\"#44176C\" />\n            <Stop offset=\"1\" stopColor=\"#621F9C\" />\n          </LinearGradient>\n        </Defs>\n      </G>\n    </Svg>\n  );\n}\n\nexport function GraphAPILogo({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      id=\"Layer_1\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 48 48\"\n      width={width}\n      height={height}\n      style={style}\n    >\n      <G>\n        <Defs>\n          <ClipPath id=\"SVGID_2_\">\n            <Path\n              id=\"SVGID_1_\"\n              d=\"M34.9,3.2H13.1c-0.7,0-1.4,0.4-1.8,1L0.5,23c-0.4,0.6-0.4,1.4,0,2.1l10.9,18.7c0.4,0.6,1.1,1,1.8,1h21.7c0.7,0,1.4-0.4,1.8-1L47.5,25c0.4-0.6,0.4-1.4,0-2.1L36.7,4.3C36.3,3.6,35.6,3.2,34.9,3.2z\"\n            />\n          </ClipPath>\n        </Defs>\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.3,3.1 15.6,11.1 35.4,3.1\"\n        />\n        <Polygon\n          fill=\"#0078D4\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.3,3.1 15.6,11.1 0.2,23.3 0.2,3.1\"\n        />\n        <Polygon\n          fill=\"#0364B8\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"-0.8,24 15.6,11.1 16.5,37.1\"\n        />\n        <Polygon\n          fill=\"#14447D\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"-0.8,24 16.5,37.1 11.5,44.8 0.2,45.2\"\n        />\n        <Polygon\n          fill=\"#0F335E\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.5,44.8 16.5,37.1 36.2,45.2\"\n        />\n        <Polygon\n          fill=\"#0364B8\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"16.5,37.1 36.7,24 36.2,45.2\"\n        />\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"16.5,37.1 15.6,11.1 36.7,24\"\n        />\n        <Polygon\n          fill=\"#50D9FF\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"15.6,11.1 36.2,2.8 36.7,24\"\n        />\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"36.7,24 36.2,2.8 48.1,3.1 48.1,24\"\n        />\n        <Polygon\n          fill=\"#0078D4\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"36.7,24 36.2,45.9 47.5,45.9 48.1,24\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function StudentSearchIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M18.5 19.5L20 21M11 21H5.6C5.03995 21 4.75992 21 4.54601 20.891C4.35785 20.7951 4.20487 20.6422 4.10899 20.454C4 20.2401 4 19.9601 4 19.4V17.6841C4 17.0485 4 16.7306 4.04798 16.4656C4.27087 15.2344 5.23442 14.2709 6.46558 14.048C6.5425 14.0341 6.6237 14.0242 6.71575 14.0172C6.94079 14 7.05331 13.9914 7.20361 14.0026C7.35983 14.0143 7.4472 14.0297 7.59797 14.0722C7.74302 14.1131 8.00429 14.2315 8.52682 14.4682C9.13692 14.7446 9.8015 14.9218 10.5 14.9795M19 17.5C19 18.8807 17.8807 20 16.5 20C15.1193 20 14 18.8807 14 17.5C14 16.1193 15.1193 15 16.5 15C17.8807 15 19 16.1193 19 17.5ZM15 7C15 9.20914 13.2091 11 11 11C8.79086 11 7 9.20914 7 7C7 4.79086 8.79086 3 11 3C13.2091 3 15 4.79086 15 7Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function TimeIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M12 6V12\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M16.24 16.24L12 12\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\ninterface TrashIconProps extends iconProps {\n  color?: string;\n}\n\nexport function TrashIcon({\n  width,\n  height,\n  style,\n  props,\n  color,\n}: TrashIconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M4 6H20L18.4199 20.2209C18.3074 21.2337 17.4512 22 16.4321 22H7.56786C6.54876 22 5.69264 21.2337 5.5801 20.2209L4 6Z\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M7.34491 3.14716C7.67506 2.44685 8.37973 2 9.15396 2H14.846C15.6203 2 16.3249 2.44685 16.6551 3.14716L18 6H6L7.34491 3.14716Z\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M2 6H22\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M10 11V16\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M14 11V16\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function OfflineIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G>\n        <Path\n          d=\"M1.33309 8.07433C0.92156 8.44266 0.886539 9.07485 1.25487 9.48638C1.62319 9.89791 2.25539 9.93293 2.66691 9.5646L1.33309 8.07433ZM21.3331 9.5646C21.7446 9.93293 22.3768 9.89791 22.7451 9.48638C23.1135 9.07485 23.0784 8.44266 22.6669 8.07433L21.3331 9.5646ZM12 19C11.4477 19 11 19.4477 11 20C11 20.5523 11.4477 21 12 21V19ZM12.01 21C12.5623 21 13.01 20.5523 13.01 20C13.01 19.4477 12.5623 19 12.01 19V21ZM14.6905 17.04C15.099 17.4116 15.7315 17.3817 16.1031 16.9732C16.4748 16.5646 16.4448 15.9322 16.0363 15.5605L14.6905 17.04ZM18.0539 13.3403C18.4624 13.7119 19.0949 13.682 19.4665 13.2734C19.8381 12.8649 19.8082 12.2324 19.3997 11.8608L18.0539 13.3403ZM7.96372 15.5605C7.55517 15.9322 7.52524 16.5646 7.89687 16.9732C8.2685 17.3817 8.90095 17.4116 9.3095 17.04L7.96372 15.5605ZM4.60034 11.8608C4.19179 12.2324 4.16185 12.8649 4.53348 13.2734C4.90511 13.682 5.53756 13.7119 5.94611 13.3403L4.60034 11.8608ZM10.5705 4.06305C10.0204 4.1118 9.61391 4.59729 9.66266 5.14741C9.71141 5.69754 10.1969 6.10399 10.747 6.05525L10.5705 4.06305ZM17.3393 10.3798C16.8567 10.1114 16.2478 10.285 15.9794 10.7677C15.711 11.2504 15.8847 11.8593 16.3673 12.1277L17.3393 10.3798ZM3.70711 2.29289C3.31658 1.90237 2.68342 1.90237 2.29289 2.29289C1.90237 2.68342 1.90237 3.31658 2.29289 3.70711L3.70711 2.29289ZM20.2929 21.7071C20.6834 22.0976 21.3166 22.0976 21.7071 21.7071C22.0976 21.3166 22.0976 20.6834 21.7071 20.2929L20.2929 21.7071ZM12 6C15.5863 6 18.8556 7.34716 21.3331 9.5646L22.6669 8.07433C19.8369 5.54138 16.0972 4 12 4V6ZM12 21H12.01V19H12V21ZM12 16C13.0367 16 13.9793 16.3931 14.6905 17.04L16.0363 15.5605C14.9713 14.5918 13.5536 14 12 14V16ZM9.3095 17.04C10.0207 16.3931 10.9633 16 12 16V14C10.4464 14 9.02872 14.5918 7.96372 15.5605L9.3095 17.04ZM10.747 6.05525C11.1596 6.01869 11.5775 6 12 6V4C11.5185 4 11.0417 4.0213 10.5705 4.06305L10.747 6.05525ZM16.3673 12.1277C16.9757 12.466 17.5412 12.874 18.0539 13.3403L19.3997 11.8608C18.7751 11.2927 18.0844 10.7941 17.3393 10.3798L16.3673 12.1277ZM2.29289 3.70711L5.46648 6.8807L6.8807 5.46648L3.70711 2.29289L2.29289 3.70711ZM2.66691 9.5646C3.81213 8.53961 5.12648 7.70074 6.56232 7.09494L5.78486 5.25224C4.14251 5.94517 2.64069 6.904 1.33309 8.07433L2.66691 9.5646ZM5.46648 6.8807L9.46042 10.8746L10.8746 9.46042L6.8807 5.46648L5.46648 6.8807ZM9.46042 10.8746L20.2929 21.7071L21.7071 20.2929L10.8746 9.46042L9.46042 10.8746ZM5.94611 13.3403C7.15939 12.2367 8.67355 11.4612 10.3496 11.1508L9.98543 9.18424C7.93271 9.5644 6.08108 10.5139 4.60034 11.8608L5.94611 13.3403Z\"\n          fill={Colors.black}\n        />\n      </G>\n    </Svg>\n  );\n}\n\n//Text Icons https://www.svgrepo.com/collection/ui-and-text-editing-icons/\nexport function BoldIcon({ width, height, style, props }: iconProps){\n  return (\n    <Svg id=\"Icons\" viewBox=\"0 0 32 32\" fill=\"#000000\" width={width} height={height} style={style} {...props}>\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} d=\"M16.5,14H11V9h5.5c1.4,0,2.5,1.1,2.5,2.5v0C19,12.9,17.9,14,16.5,14z\"/>\n        <Path fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} d=\"M18.5,23H11v-5h7.5c1.4,0,2.5,1.1,2.5,2.5v0C21,21.9,19.9,23,18.5,23z\"/>\n        <Path fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} d=\"M22,15c0.7-1,1-2.2,1-3.5C23,7.9,20.1,5,16.5,5h-1h-1H7v22h7.5h1h3c3.6,0,6.5-2.9,6.5-6.5 C25,18.2,23.8,16.2,22,15z\"/>\n      </G>\n    </Svg>\n  )\n}\n\nexport function ItalicIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg id=\"Italic_Icons\" viewBox=\"0 0 32 32\" fill=\"#000000\" width={width} height={height} style={style} {...props}>\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"10\" y1=\"27\" x2=\"18\" y2=\"27\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"14\" y1=\"5\" x2=\"22\" y2=\"5\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"14\" y1=\"27\" x2=\"18\" y2=\"5\"/>\n      </G>\n    </Svg>\n  )\n}\n\nexport function StrikeThroughIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg id=\"Icons\" viewBox=\"0 0 32 32\" fill=\"#000000\" width={width} height={height} style={style} {...props}>\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"7\" y1=\"16\" x2=\"26\" y2=\"16\"/>\n        <Path fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} d=\"M11,21.5c0,3,2.5,5.5,5.5,5.5s5.5-2.5,5.5-5.5S19.5,16,16.5,16S11,13.5,11,10.5S13.5,5,16.5,5S22,7.5,22,10.5\"/>\n      </G>\n    </Svg>\n  )\n}\n\nexport function UnderlineIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg id=\"Icons\" viewBox=\"0 0 32 32\" fill=\"#000000\" width={width} height={height} style={style} {...props}>\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"3\" y1=\"28\" x2=\"29\" y2=\"28\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"5\" y1=\"23\" x2=\"9\" y2=\"23\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"23\" y1=\"23\" x2=\"27\" y2=\"23\"/>\n        <Polyline fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} points=\"7,23 16,4 25,23 \"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"10\" y1=\"17\" x2=\"22\" y2=\"17\"/>\n      </G>\n    </Svg>\n  )\n}\n\nexport function RightAlignmentIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg id=\"Icons\" viewBox=\"0 0 32 32\" fill=\"#000000\" width={width} height={height} style={style} {...props}>\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"29\" y1=\"4\" x2=\"13\" y2=\"4\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"29\" y1=\"10\" x2=\"3\" y2=\"10\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"29\" y1=\"16\" x2=\"13\" y2=\"16\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"29\" y1=\"22\" x2=\"3\" y2=\"22\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"29\" y1=\"28\" x2=\"13\" y2=\"28\"/>\n      </G>\n    </Svg>\n  )\n}\n\nexport function LeftAlignmentIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg id=\"Icons\" viewBox=\"0 0 32 32\" fill=\"#000000\" width={width} height={height} style={style} {...props}>\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"3\" y1=\"4\" x2=\"19\" y2=\"4\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10}  x1=\"3\" y1=\"10\" x2=\"29\" y2=\"10\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10}  x1=\"3\" y1=\"16\" x2=\"19\" y2=\"16\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10}  x1=\"3\" y1=\"22\" x2=\"29\" y2=\"22\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10}  x1=\"3\" y1=\"28\" x2=\"19\" y2=\"28\"/>\n      </G>\n    </Svg>\n  )\n}\n\nexport function CenterAlignmentIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg id=\"Icons\" viewBox=\"0 0 32 32\" fill=\"#000000\" width={width} height={height} style={style} {...props}>\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"8\" y1=\"4\" x2=\"24\" y2=\"4\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"3\" y1=\"10\" x2=\"29\" y2=\"10\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"8\" y1=\"16\" x2=\"24\" y2=\"16\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"3\" y1=\"22\" x2=\"29\" y2=\"22\"/>\n        <Line fill='none' stroke='#000000' strokeWidth={2} strokeLinecap='round' strokeLinejoin='round' strokeMiterlimit={10} x1=\"8\" y1=\"28\" x2=\"24\" y2=\"28\"/>\n      </G>\n    </Svg>\n  )\n}\n\n\n\n// function MessagingIcon() {\n//     return (\n//         <Svg  viewBox=\"0 0 498.000000 268.000000\"preserveAspectRatio=\"xMidYMid meet\">\n//             <G transform=\"translate(0.000000,268.000000) scale(0.100000,-0.100000)\" fill=\"#000000\" stroke=\"none\">\n//                 <Path d=\"M1140 2481 c-50 -16 -89 -41 -128 -86 -74 -84 -72 -67 -72 -730 l0\n//                 -591 -30 -45 c-16 -24 -54 -73 -84 -109 -64 -75 -116 -196 -116 -266 0 -104\n//                 50 -147 187 -160 95 -9 158 8 246 66 115 76 187 148 232 234 l40 76 438 0 437\n//                 0 0 -95 c0 -150 47 -241 154 -298 41 -22 45 -22 791 -27 l750 -5 100 -69 c55\n//                 -37 108 -75 117 -83 25 -22 144 -53 205 -53 47 0 58 4 92 36 44 39 66 91 57\n//                 130 -8 29 -67 124 -89 143 -9 7 -30 35 -48 63 l-32 50 2 466 c2 537 2 540 -76\n//                 623 -82 87 -92 89 -533 89 l-380 0 0 210 c0 250 -9 289 -89 363 -87 81 -23 77\n//                 -1150 76 -548 0 -1007 -4 -1021 -8z m2051 -164 c18 -12 39 -34 46 -47 18 -36\n//                 18 -1144 0 -1180 -7 -13 -28 -35 -46 -47 l-34 -23 -857 0 -857 0 -63 -32 c-34\n//                 -18 -70 -44 -78 -58 -59 -96 -89 -134 -150 -191 -73 -70 -158 -119 -204 -119\n//                 -40 0 -94 25 -107 48 -17 31 -13 81 8 116 11 17 55 63 98 102 55 50 87 89 108\n//                 130 l30 59 5 596 c5 651 2 612 65 651 29 17 77 18 1016 18 l986 0 34 -23z\n//                 m986 -647 c64 -38 63 -33 63 -527 0 -518 -11 -463 118 -598 63 -65 72 -80 72\n//                 -112 0 -50 -32 -83 -79 -83 -45 0 -104 38 -161 105 -59 69 -104 102 -164 122\n//                 -46 16 -125 18 -782 23 -714 5 -732 5 -754 25 -39 36 -50 69 -50 160 l0 86 62\n//                 -3 61 -3 1 -55 1 -55 738 -3 737 -2 0 75 0 75 -390 0 -389 0 49 46 c85 80 90\n//                 103 90 449 l0 295 373 0 c351 0 374 -1 404 -20z\"/>\n//                 <Path d=\"M1470 1945 l0 -75 715 0 715 0 0 75 0 75 -715 0 -715 0 0 -75z\"/>\n//                 <Path d=\"M1460 1605 l0 -75 430 0 430 0 0 75 0 75 -430 0 -430 0 0 -75z\"/>\n//                 <Path d=\"M2580 1605 l0 -75 160 0 160 0 0 75 0 75 -160 0 -160 0 0 -75z\"/>\n//                 <Path d=\"M1720 1285 l0 -75 650 0 650 0 0 75 0 75 -650 0 -650 0 0 -75z\"/>\n//                 <Path d=\"M3460 1495 l0 -75 290 0 290 0 0 75 0 75 -290 0 -290 0 0 -75z\"/>\n//                 <Path d=\"M3510 1155 l0 -75 155 0 155 0 0 75 0 75 -155 0 -155 0 0 -75z\"/>\n//                 <Path d=\"M3900 1155 l0 -75 65 0 65 0 0 75 0 75 -65 0 -65 0 0 -75z\"/>\n//             </G>\n//         </Svg>\n//     )\n// }\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { View, Text, Pressable, Image } from 'react-native';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { RootState } from './Redux/store';\nimport { safeAreaColorsSlice } from './Redux/reducers/safeAreaColorsReducer';\nimport { GearIcon } from './UI/Icons/Icons';\nimport { Colors } from './types';\n\nexport default function Login({\n  onGetAuthToken,\n  onGetGovernmentAuthToken,\n  width,\n}: {\n  onGetAuthToken: () => void;\n  onGetGovernmentAuthToken: () => void;\n  width: number;\n}) {\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const [isBottonHover, setIsButtonHover] = useState<boolean>(false);\n  const [isGovernmentHover, setIsGovernmentHover] = useState<boolean>(false);\n  const [fontSize, setFontSize] = useState<number>(0);\n  const [isShowingGovernmentLogin, setIsShowingGovernmentLogin] =\n    useState<boolean>(false);\n  const insets = useSafeAreaInsets();\n  const dispatch = useDispatch();\n\n  useCallback(\n    async function setSafeAreaColors() {\n      dispatch(safeAreaColorsSlice.actions.setSafeAreaColorTop(Colors.maroon));\n      dispatch(\n        safeAreaColorsSlice.actions.setSafeAreaColorBottom(Colors.maroon),\n      );\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    const heightIsGreater: boolean = width < height;\n    if (heightIsGreater) {\n      setFontSize(width / 4);\n    } else {\n      setFontSize(height / 3);\n    }\n  }, [height, width]);\n  // Font\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../assets/fonts/BukhariScript.ttf'),\n    'Gochi Hand': require('../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      style={{\n        backgroundColor: Colors.maroon,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height,\n        width,\n        overflow: 'hidden',\n        top: -insets.top,\n      }}\n      onLongPress={() => {\n        setIsShowingGovernmentLogin(true);\n      }}\n      delayLongPress={5000}\n    >\n      <View\n        id=\"Content_Area\"\n        style={{\n          width: width < height ? width : height,\n          height: width < height ? width : height,\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}\n      >\n        <View\n          style={{\n            width: fontSize * 1.65,\n            height: fontSize,\n            flexDirection: 'row',\n          }}\n          id=\"Text_Container\"\n        >\n          <Image\n            source={require('../assets/images/PaulyLogo.png')}\n            resizeMode=\"contain\"\n            style={{\n              width: fontSize,\n              height: fontSize,\n              position: 'absolute',\n              left: -fontSize * 0.2,\n            }}\n          />\n          <Text\n            style={{\n              position: 'absolute',\n              left: fontSize * 0.5,\n              top: fontSize * 0.22,\n              fontFamily: 'Gochi Hand',\n              fontSize: fontSize - fontSize / 3,\n              textShadowColor: 'rgba(0, 0, 0, 1)',\n              textShadowOffset: { width: 4, height: 5 },\n              textShadowRadius: 0,\n              color: Colors.white,\n            }}\n            selectable={false}\n          >\n            auly\n          </Text>\n        </View>\n        <Text\n          style={{ color: 'white', marginTop: 25, fontFamily: 'BukhariScript' }}\n        >\n          23/24 Saint Paul's High School Student Council\n        </Text>\n        <Pressable\n          onPress={async () => {\n            onGetAuthToken();\n          }}\n          onHoverIn={() => {\n            setIsButtonHover(true);\n          }}\n          onHoverOut={() => {\n            setIsButtonHover(false);\n          }}\n          style={{\n            height: height * 0.09,\n            width: width * 0.5,\n            borderRadius: 50,\n            backgroundColor: isBottonHover ? Colors.darkGray : Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            shadowColor: isBottonHover ? Colors.white : 'black',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n            marginTop: width < height ? width * 0.05 : height * 0.05,\n          }}\n        >\n          <Text\n            style={{\n              textAlign: 'center',\n              color: isBottonHover ? Colors.white : 'black',\n              fontWeight: 'bold',\n            }}\n          >\n            LOGIN\n          </Text>\n        </Pressable>\n        {isShowingGovernmentLogin ? (\n          <Pressable\n            onPress={async () => {\n              onGetGovernmentAuthToken();\n            }}\n            onHoverIn={() => {\n              setIsGovernmentHover(true);\n            }}\n            onHoverOut={() => {\n              setIsGovernmentHover(false);\n            }}\n            style={{\n              height: height * 0.09,\n              width: width * 0.5,\n              borderRadius: 50,\n              backgroundColor: isGovernmentHover\n                ? Colors.darkGray\n                : Colors.white,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              shadowColor: isBottonHover ? Colors.white : 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              marginTop: width < height ? width * 0.1 : height * 0.1,\n              flexDirection: 'row',\n            }}\n          >\n            <GearIcon width={18} height={18} />\n            <Text\n              style={{\n                textAlign: 'center',\n                color: isBottonHover ? Colors.white : 'black',\n                fontWeight: 'bold',\n              }}\n            >\n              LOGIN AS ADMIN\n            </Text>\n          </Pressable>\n        ) : null}\n      </View>\n      <Text style={{position: 'absolute', bottom: 4, fontSize: height * 0.02, fontFamily: 'Roboto', color: Colors.white}}>A.M.D.G</Text>\n    </Pressable>\n  );\n}\n","// July 21 2023\n// Andrew Mainella\n// Calendar functions\n\nexport function getDaysInMonth(input: Date): number {\n  const d = new Date();\n  d.setFullYear(input.getFullYear(), input.getMonth() + 1, 0);\n  return d.getDate();\n}\n\nexport function getDay(value: number, startdate: number): number | undefined {\n  let offset: number = 0;\n  const let1: number = value / 5.0;\n  const let2: number = Math.floor(let1);\n  const let4: number = let2 * 2;\n  offset += let4;\n  const result: number = value - startdate + 2 + offset;\n  const month = new Date();\n  const d = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n  const DayInt = d.getDate();\n  if (result >= DayInt + 1) {\n    return undefined;\n  }\n  return result;\n}\n\nexport function findFirstDayinMonth(currentTime: Date): number {\n  const year = currentTime.getFullYear();\n  const month = currentTime.getMonth();\n  const weekDay = new Date(year, month).getDay();\n  return weekDay;\n  // Returns a which weekday day is the first day of the month.\n  // Sunday is 0, Saturday is 6\n}\n\nexport function isDateToday(dateToCheck: Date) {\n  // Get today's date\n  const today = new Date();\n\n  // Compare the components of the dateToCheck with today's date\n  const isSameDate =\n    dateToCheck.getDate() === today.getDate() &&\n    dateToCheck.getMonth() === today.getMonth() &&\n    dateToCheck.getFullYear() === today.getFullYear();\n\n  // Return true if the dateToCheck is today, otherwise return false\n  return isSameDate;\n}\n\n// July 17 2023\n// Andrew Mainella\n//\n// Converting a year to a school year.\n// The year converted is the year of the graduating class\n//\n// For example 2024 would return 2023-2024\n\nexport function convertYearToSchoolYear(year: number) {\n  return `${year - 1}-${year}`;\n}\n\nexport function calculateIfShowing(value: string, Time: Date): boolean {\n  // TO DO shorten\n  if (isDateToday(Time)) {\n    const hourInt = Time.getHours();\n    const minuiteInt = Time.getMinutes();\n    if (minuiteInt + 15 >= 60) {\n      let resepctiveTime: string = `${hourInt > 12}`\n        ? (hourInt - 12).toString()\n        : hourInt.toString();\n      resepctiveTime += hourInt > 12 ? 'PM' : 'AM';\n      if (resepctiveTime === value) {\n        return false;\n      }\n      return true;\n    }\n    if (minuiteInt - 15 <= 0) {\n      let resepctiveTime: string = `${hourInt > 12}`\n        ? (hourInt - 12).toString()\n        : hourInt.toString();\n      resepctiveTime += hourInt > 12 ? 'PM' : 'AM';\n      if (resepctiveTime === value) {\n        return false;\n      }\n      return true;\n    }\n    return true;\n  }\n  return true;\n}\n\nexport function findTimeOffset(time: Date, height: number): number {\n  const hourWidth = height * 0.1;\n  const minutieWidth = (height * 0.1) / 60;\n  const hourInt = time.getHours();\n  const minuiteInt = time.getMinutes();\n  const returnOffset = hourWidth * hourInt + minutieWidth * minuiteInt;\n  return returnOffset;\n}\n\n// Ryan was here April 13, 2023\n// Andrew was here April 13, 2023\n\nexport function computeEventHeight(\n  fromDate: Date,\n  toDate: Date,\n  height: number,\n): number {\n  let delta = toDate.getTime() - fromDate.getTime();\n  if (delta >= 86400000) {\n    delta = 86400000;\n  }\n\n  const deltaHours = delta / 3600000;\n  const deltaRemaining = delta % 3600000;\n  const deltaMinutes = deltaRemaining / 60;\n\n  const HourHeight = height * 0.1;\n  const MinuteHeight = (height * 0.1) / 60;\n\n  const ReturnOffset = HourHeight * deltaHours + MinuteHeight * deltaMinutes;\n  return ReturnOffset;\n}\n\nfunction getHorizontalOffset() {}\n","/*\n  Andrew Mainella\n  21 October 2023\n  Pauly\n  See README.md for more information about the setup process and what to put in each of these values\n*/\n// The org wide group id is the id of a group (teams) that every user is apart of.\n// This allows pauly to access calendar information that is common (an event that is set out by admin) among users.\n\nexport const orgWideGroupID: string = 'd2c0dd90-a426-4539-882c-aa87e5787a92';\n\nexport const tenantId: string = '551df04d-543a-4d61-955e-e4294c4cf950';\nexport const clientId: string = '08624b03-1aa6-40c4-8fb3-149c39026dff';\n\nexport const domainName: string = '@8td1tk.onmicrosoft.com';\nexport const paulyDomain: string =\n  'https://polite-plant-0871d590f.4.azurestaticapps.net';\n\n// DO NOT CHANGE SCOPES\n// See README.md for more imformation about the scopes.\nexport const scopes = [\n  'User.Read',\n  'User.ReadBasic.All',\n  'Sites.Read.All',\n  'Sites.Manage.All',\n  'ChannelMessage.Read.All',\n  'Chat.ReadWrite',\n  'Calendars.ReadWrite',\n  'Team.ReadBasic.All',\n  'Group.ReadWrite.All',\n  'Tasks.ReadWrite',\n  'Channel.ReadBasic.All',\n  'Application.ReadWrite.All',\n  'TeamMember.Read.All',\n];\n\nexport const youtubeDataKey = 'AIzaSyCO1po5qtWDKRQ7koQd07Xo6u13Yp-hPEE';\n\nexport const youtubeUploadsId = 'UU8HbRWjbR0xjOeE6OlQ1sLA';\n\nexport const raindropToken = '8ea167d6-0792-4b10-a3a1-e8571743c3e6';","import { Platform } from 'react-native';\nimport store from '../../Redux/store';\nimport { authenticationCallSlice } from '../../Redux/reducers/authenticationCallReducer';\n\nexport default async function callMsGraph(\n  url: string,\n  method?: 'GET' | 'POST' | 'PATCH' | 'DELETE' | 'PUT',\n  body?: string | Blob,\n  headersIn?: { key: string; value: string }[],\n  secondAuth?: boolean,\n): Promise<Response> {\n  const headers: Headers = new Headers();\n  const bearer = `Bearer ${store.getState().authenticationToken}`;\n\n  headers.append('Authorization', bearer);\n  headers.append('Content-Type', 'application/json');\n\n  if (headersIn !== undefined) {\n    for (\n      let headerIndex = 0;\n      headerIndex < headersIn.length;\n      headerIndex += 1\n    ) {\n      headers.append(headersIn[headerIndex].key, headersIn[headerIndex].value);\n    }\n  }\n\n  const options = {\n    method: method || 'GET',\n    headers,\n    body,\n  };\n\n  let outUrl = url;\n\n  if (Platform.OS !== 'web') {\n    const urlArray = url.split('%20');\n    outUrl = '';\n    for (let index = 0; index < urlArray.length; index += 1) {\n      if (index !== 0) {\n        outUrl += ` ${urlArray[index]}`;\n      } else {\n        outUrl += urlArray[index];\n      }\n    }\n  }\n\n  const response = await fetch(outUrl, options);\n  if (response.status === 401) {\n    if (secondAuth === undefined) {\n      store.dispatch(\n        authenticationCallSlice.actions.setAuthenticationCallIncrement(),\n      );\n      const previousValue: string = store.getState().authenticationToken;\n      return new Promise(resolve => {\n        const unsubscribe = store.subscribe(async () => {\n          const newValue = store.getState().authenticationToken;\n          if (newValue !== previousValue) {\n            const result = await callMsGraph(\n              url,\n              method,\n              body,\n              headersIn,\n              true,\n            );\n            resolve(result);\n            unsubscribe(); // Unsubscribe after getting the new result\n          }\n        });\n      });\n    }\n    return response;\n  }\n  return response;\n}\n","import { loadingStateEnum } from '../../types';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function largeBatch(\n  defaultBatchData?: { id: string; method: 'GET' | 'POST'; url: string }[][],\n  createData?: {\n    firstUrl: string;\n    secondUrl: string;\n    keys: { array?: string[]; map?: Map<string, any> };\n    method: 'GET' | 'POST';\n  },\n): Promise<{ result: loadingStateEnum; data?: batchResponseType[] }> {\n  let data: { id: string; method: 'GET' | 'POST'; url: string }[][] = [];\n  if (defaultBatchData) {\n    data = defaultBatchData;\n  } else if (createData) {\n    let batchIndex = 0;\n    if (createData.keys.array !== undefined) {\n      for (\n        let createDataIndex = 0;\n        createDataIndex < createData.keys.array.length;\n        createDataIndex += 1\n      ) {\n        if (batchIndex >= data.length) {\n          data.push([]);\n        }\n        data[batchIndex].push({\n          id: (createDataIndex + 1).toString(),\n          method: createData.method,\n          url: `${createData.firstUrl}${createData.keys.array[createDataIndex]}${createData.secondUrl}`,\n        });\n        if (createDataIndex % 19 === 0) {\n          batchIndex += 1;\n        }\n      }\n    } else if (createData.keys.map !== undefined) {\n      const createDataIndexMap = 0;\n      createData.keys.map.forEach((value, key) => {\n        if (batchIndex >= data.length) {\n          data.push([]);\n        }\n        data[batchIndex].push({\n          id: (createDataIndexMap + 1).toString(),\n          method: createData.method,\n          url: `${createData.firstUrl}${key}${createData.secondUrl}`,\n        });\n        if (createDataIndexMap % 19 === 0) {\n          batchIndex += 1;\n        }\n      });\n    } else {\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const output: batchResponseType[] = [];\n  for (let index = 0; index < data.length; index += 1) {\n    const batchData = {\n      requests: data[index],\n    };\n    const result = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/$batch',\n      'POST',\n      JSON.stringify(batchData),\n      [{ key: 'Accept', value: 'application/json' }],\n    );\n    if (result.ok) {\n      const batchResultData = await result.json();\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultData.responses.length;\n        batchIndex += 1\n      ) {\n        output.push({\n          method: 'GET',\n          id: batchResultData.responses[batchIndex].id,\n          headers: batchResultData.responses[batchIndex].headers,\n          body: batchResultData.responses[batchIndex].body,\n          status: batchResultData.responses[batchIndex].status,\n        });\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: output };\n}\n","import { loadingStateEnum } from '../../types';\n\nexport default function createUUID() {\n  let dt = new Date().getTime();\n  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return uuid;\n}\n\n// Get text from a loadingStateEnum\nexport function getTextState(\n  state: loadingStateEnum,\n  labels?: {\n    cannotStart?: string;\n    notStarted?: string;\n    failed?: string;\n    loading?: string;\n    offline?: string;\n    success?: string;\n  },\n): string {\n  if (state === loadingStateEnum.cannotStart) {\n    return labels?.cannotStart ? labels.cannotStart : 'Cannot Start';\n  }\n  if (state === loadingStateEnum.notStarted) {\n    return labels?.notStarted ? labels.notStarted : 'Start';\n  }\n  if (state === loadingStateEnum.failed) {\n    return labels?.failed ? labels.failed : 'Failed';\n  }\n  if (state === loadingStateEnum.loading) {\n    return labels?.loading ? labels.loading : 'Loading';\n  }\n  if (state === loadingStateEnum.offline) {\n    return labels?.offline ? labels.offline : 'Offline';\n  }\n  if (state === loadingStateEnum.success) {\n    return labels?.success ? labels.success : 'Success';\n  }\n  return 'Something Went Wrong';\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getDressCode(\n  dressCodeId: string,\n): Promise<{ result: loadingStateEnum; data?: dressCodeType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeData,dressCodeIncentivesData,dressCodeName,dressCodeId)&$select=id&$filter=fields/dressCodeId%20eq%20'${dressCodeId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== 1) {\n      return { result: loadingStateEnum.failed };\n    }\n    try {\n      const dressCodeData: dressCodeDataType[] = JSON.parse(\n        data.value[0].fields.dressCodeData,\n      );\n      const dressCodeIncentivesData: dressCodeIncentiveType[] = JSON.parse(\n        data.value[0].fields.dressCodeIncentivesData,\n      );\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.dressCodeName,\n          id: data.value[0].fields.dressCodeId,\n          listId: data.value[0].id,\n          dressCodeData,\n          dressCodeIncentives: dressCodeIncentivesData,\n        },\n      };\n    } catch (e) {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n}\n","// Andrew Mainella\n// Pauly\n\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport { Colors, loadingStateEnum, semesters } from '../../types';\nimport store from '../../Redux/store';\nimport batchRequest from '../ultility/batchRequest';\nimport createUUID from '../ultility/createUUID';\nimport getDressCode from '../homepage/getDressCode';\n\n// Defaults to org wide events\nexport async function getGraphEvents(\n  url?: string,\n  referenceUrl?: string,\n): Promise<{\n  result: loadingStateEnum;\n  events?: eventType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    url !== undefined\n      ? url\n      : `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties&$select=id,subject,start,end,isAllDay,singleValueExtendedProperties`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newEvents: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      const { singleValueExtendedProperties } = data.value[index];\n      const eventType: string | undefined =\n        data.value[index].singleValueExtendedProperties !== undefined\n          ? singleValueExtendedProperties.find(\n              (e: { id: string; value: string }) => {\n                return e.id === eventTypeExtensionID;\n              },\n            )?.value\n          : undefined;\n      const eventData: string | undefined =\n        data.value[index].singleValueExtendedProperties !== undefined\n          ? singleValueExtendedProperties.find(\n              (e: { id: string; value: string }) => {\n                return e.id === eventDataExtensionID;\n              },\n            )?.value\n          : undefined;\n      newEvents.push({\n        id: data.value[index].id,\n        name: data.value[index].subject,\n        startTime: data.value[index].start.dateTime,\n        endTime: data.value[index].end.dateTime,\n        allDay: data.value[index].isAllDay,\n        eventColor: Colors.white,\n        paulyEventType:\n          eventType === 'schoolYear'\n            ? 'schoolYear'\n            : eventType === 'schoolDay'\n            ? 'schoolDay'\n            : undefined,\n        paulyEventData: eventData,\n        microsoftEvent: true,\n        microsoftReference:\n          referenceUrl !== undefined\n            ? referenceUrl + data.value[index].id\n            : `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      events: newEvents,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// Gets an event from paulys team\nexport async function getEvent(\n  id: string,\n): Promise<{ result: loadingStateEnum; data?: eventType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${id}?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${store.getState().paulyList.eventDataExtensionId}')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const event: eventType = {\n      id: data.id,\n      name: data.subject,\n      startTime: data.start.dateTime,\n      endTime: data.end.dateTime,\n      allDay: data.isAllDay,\n      eventColor: Colors.white,\n      microsoftEvent: true,\n      microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.id}`,\n    };\n    if (data.singleValueExtendedProperties !== undefined) {\n      const eventData: { id: string; value: string }[] =\n        data.singleValueExtendedProperties;\n      const eventType = eventData.find(e => {\n        return e.id === store.getState().paulyList.eventTypeExtensionId;\n      })?.value;\n      event.paulyEventType =\n        eventType === 'schoolDay'\n          ? 'schoolDay'\n          : eventType === 'schoolYear'\n          ? 'schoolYear'\n          : undefined;\n      event.paulyEventData = eventData.find(e => {\n        return e.id === store.getState().paulyList.eventDataExtensionId;\n      })?.value;\n    }\n    return { result: loadingStateEnum.success, data: event };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSchedule(id: string): Promise<{\n  result: loadingStateEnum;\n  schedule?: scheduleType;\n  listItemId?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.scheduleListId\n    }/items?expand=fields($select=scheduleProperName,scheduleDescriptiveName,scheduleData,scheduleId,scheduleColor)&$filter=fields/scheduleId%20eq%20'${id}'&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== undefined) {\n      if (data.value.length === 1) {\n        const resultSchedule: scheduleType = {\n          properName: data.value[0].fields.scheduleProperName,\n          descriptiveName: data.value[0].fields.scheduleDescriptiveName,\n          periods: JSON.parse(\n            data.value[0].fields.scheduleData,\n          ) as periodType[],\n          id: data.value[0].fields.scheduleId,\n          color: data.value[0].fields.scheduleColor,\n        };\n        return {\n          result: loadingStateEnum.success,\n          schedule: resultSchedule,\n          listItemId: data.value[0].id,\n        };\n      }\n      return { result: loadingStateEnum.failed, schedule: undefined };\n    }\n    return { result: loadingStateEnum.failed, schedule: undefined };\n  }\n  return { result: loadingStateEnum.failed, schedule: undefined };\n}\n\nexport async function getSchedules(): Promise<{\n  result: loadingStateEnum;\n  data?: scheduleType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.scheduleListId}/items?expand=fields`,\n  );\n  if (result.ok) {\n    const dataResult = await result.json();\n    if (\n      dataResult.value.length !== undefined &&\n      dataResult.value.length !== null\n    ) {\n      const newLoadedSchedules: scheduleType[] = [];\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        try {\n          const scheduleData = JSON.parse(\n            dataResult.value[index].fields.scheduleData,\n          ) as periodType[];\n          newLoadedSchedules.push({\n            properName: dataResult.value[index].fields.scheduleProperName,\n            descriptiveName:\n              dataResult.value[index].fields.scheduleDescriptiveName,\n            id: dataResult.value[index].fields.scheduleId,\n            periods: scheduleData,\n            color: dataResult.value[index].fields.scheduleColor,\n          });\n        } catch {\n          return { result: loadingStateEnum.failed };\n          // TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n        }\n      }\n      return {\n        result: loadingStateEnum.success,\n        data: newLoadedSchedules,\n        nextLink: dataResult['@odata.nextLink'],\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getTimetable(\n  timetableId: string,\n): Promise<{ result: loadingStateEnum; timetable?: timetableType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.timetablesListId\n    }/items?expand=fields&$filter=fields/timetableId%20eq%20'${timetableId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== undefined) {\n      if (data.value.length === 1) {\n        try {\n          const scheduleData: string[] = JSON.parse(\n            data.value[0].fields.timetableDataSchedules,\n          );\n          const newSchedules: scheduleType[] = [];\n          for (let index = 0; index < scheduleData.length; index += 1) {\n            const result = await getSchedule(scheduleData[index]);\n            if (\n              result.result === loadingStateEnum.success &&\n              result.schedule !== undefined\n            ) {\n              newSchedules.push(result.schedule);\n            } else {\n              return { result: loadingStateEnum.failed };\n            }\n          }\n          const dressCodeResult = await getDressCode(\n            data.value[0].fields.timetableDressCodeId,\n          );\n          if (\n            dressCodeResult.result === loadingStateEnum.success &&\n            dressCodeResult.data !== undefined\n          ) {\n            const resultingTimetable: timetableType = {\n              name: data.value[0].fields.timetableName,\n              id: data.value[0].fields.timetableId,\n              schedules: newSchedules,\n              days: JSON.parse(data.value[0].fields.timetableDataDays),\n              dressCode: dressCodeResult.data,\n            };\n            return {\n              result: loadingStateEnum.success,\n              timetable: resultingTimetable,\n            };\n          }\n          return { result: loadingStateEnum.failed };\n        } catch (e) {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n}\n\nexport async function getSchoolDay(\n  selectedDate: Date,\n): Promise<{ result: loadingStateEnum; event?: eventType }> {\n  const startDate: string = `${new Date(\n    Date.UTC(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth(),\n      selectedDate.getDate(),\n      0,\n    ),\n  )\n    .toISOString()\n    .slice(0, -1)}0000`;\n  const endDate: string = `${new Date(\n    Date.UTC(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth(),\n      selectedDate.getDate() + 1,\n      0,\n    ),\n  )\n    .toISOString()\n    .slice(0, -1)}0000`;\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${\n      store.getState().paulyList.eventDataExtensionId\n    }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20and%20ep/value%20eq%20'schoolDay')%20and%20start/dateTime%20eq%20'${startDate}'%20and%20end/dateTime%20eq%20'${endDate}'`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      if (data.value[index].singleValueExtendedProperties !== undefined) {\n        const eventData: { id: string; value: string }[] =\n          data.value[index].singleValueExtendedProperties;\n        if (eventData !== undefined) {\n          if (\n            eventData.find(e => {\n              return e.id === eventTypeExtensionID;\n            })?.value === 'schoolDay'\n          ) {\n            const event: eventType = {\n              id: data.value[index].id,\n              name: data.value[index].subject,\n              startTime: data.value[index].start.dateTime,\n              endTime: data.value[index].end.dateTime,\n              allDay: data.value[index].isAllDay,\n              eventColor: Colors.white,\n              microsoftEvent: true,\n              microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n              paulyEventType:\n                eventData.find(e => {\n                  return e.id === eventTypeExtensionID;\n                })?.value === 'schoolDay'\n                  ? 'schoolDay'\n                  : undefined,\n              paulyEventData: eventData.find(e => {\n                return e.id === eventDataExtensionID;\n              })?.value,\n            };\n            return { result: loadingStateEnum.success, event };\n          }\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSchoolDays(date: Date): Promise<{\n  result: loadingStateEnum;\n  data?: eventType[];\n  nextLink?: string;\n}> {\n  const firstDay = `${\n    new Date(date.getFullYear(), date.getMonth(), 1)\n      .toISOString()\n      .replace(/.\\d+Z$/g, 'Z')\n      .split(/[T ]/i, 1)[0]\n  }T00:00:00.0000000`;\n  const lastDay = `${\n    new Date(date.getFullYear(), date.getMonth() + 1, 1)\n      .toISOString()\n      .replace(/.\\d+Z$/g, 'Z')\n      .split(/[T ]/i, 1)[0]\n  }T00:00:00.0000000`;\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendarView?startDateTime=${firstDay}&endDateTime=${lastDay}&$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${\n      store.getState().paulyList.eventDataExtensionId\n    }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20and%20ep/value%20eq%20'schoolDay')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const scheduleIds = new Map<string, number>();\n    const schoolYearIds = new Map<string, number>();\n    for (let index = 0; index < data.value.length; index += 1) {\n      const outputIds: schoolDayDataCompressedType = JSON.parse(\n        data.value[index].singleValueExtendedProperties.find(\n          (e: { id: string; value: string }) => {\n            return e.id === store.getState().paulyList.eventDataExtensionId;\n          },\n        ).value,\n      );\n      scheduleIds.set(outputIds.scheduleId, 0);\n      schoolYearIds.set(outputIds.schoolYearEventId, 0);\n    }\n    // Get batch data\n\n    const batchRequestResultSchedule = await batchRequest(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.scheduleListId\n      }/items?expand=fields($select=scheduleProperName,scheduleDescriptiveName,scheduleColor,scheduleData,scheduleId)&$filter=fields/scheduleId%20eq%20'`,\n      secondUrl: `'&$select=id`,\n      method: 'GET',\n      keys: {\n        map: scheduleIds,\n      },\n    });\n\n    if (\n      batchRequestResultSchedule.result !== loadingStateEnum.success ||\n      batchRequestResultSchedule.data === undefined\n    ) {\n      return { result: loadingStateEnum.failed };\n    }\n    const schedules = new Map<string, scheduleType>();\n    for (\n      let scheudleIndex = 0;\n      scheudleIndex < batchRequestResultSchedule.data.length;\n      scheudleIndex += 1\n    ) {\n      const resultScheduleData =\n        batchRequestResultSchedule.data[scheudleIndex].body;\n      if (\n        batchRequestResultSchedule.data[scheudleIndex].status === 200 &&\n        resultScheduleData !== undefined\n      ) {\n        // TO DO fix status code\n        if (resultScheduleData.value.length === 1) {\n          const scheduleResponseData = resultScheduleData.value[0].fields;\n          try {\n            schedules.set(scheduleResponseData.scheduleId, {\n              properName: scheduleResponseData.scheduleProperName,\n              descriptiveName: scheduleResponseData.scheduleDescriptiveName,\n              periods: JSON.parse(scheduleResponseData.scheduleData),\n              id: scheduleResponseData.scheduleId,\n              color: scheduleResponseData.scheduleColor,\n            });\n          } catch {\n            return { result: loadingStateEnum.failed };\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n\n    const timetableResult = await getTimetablesFromSchoolYears(\n      schoolYearIds,\n      schedules,\n    );\n    if (\n      timetableResult.result !== loadingStateEnum.success ||\n      timetableResult.data === undefined\n    ) {\n      return { result: loadingStateEnum.failed };\n    }\n\n    const schoolDaysResult: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const outputIds: schoolDayDataCompressedType = JSON.parse(\n        data.value[index].singleValueExtendedProperties.find(\n          (e: { id: string; value: string }) => {\n            return e.id === store.getState().paulyList.eventDataExtensionId;\n          },\n        ).value,\n      );\n      const schedule = schedules.get(outputIds.scheduleId);\n      const timetable = timetableResult.data.get(outputIds.schoolYearEventId);\n      const dressCode = timetable?.dressCode.dressCodeData.find(e => {\n        return e.id === outputIds.dressCodeId;\n      });\n      const schoolDay = timetable?.days.find(e => {\n        return e.id === outputIds.schoolDayId;\n      });\n      if (\n        schedule !== undefined &&\n        timetable !== undefined &&\n        dressCode !== undefined &&\n        schoolDay !== undefined\n      ) {\n        schoolDaysResult.push({\n          id: data.value[index].id,\n          name: data.value[index].subject,\n          startTime: data.value[index].start.dateTime,\n          endTime: data.value[index].end.dateTime,\n          eventColor: schedule.color,\n          microsoftEvent: true,\n          allDay: !!data.value[index].isAllDay,\n          schoolDayData: {\n            schoolDayData: schoolDay,\n            schedule,\n            dressCode,\n            semester: outputIds.semester,\n            dressCodeIncentiveId: outputIds.dressCodeIncentiveId,\n          },\n        });\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: schoolDaysResult,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// This function gets both school years and their timetable data\nasync function getTimetablesFromSchoolYears(\n  schoolYearIds: Map<string, number>,\n  schedules: Map<string, scheduleType>,\n): Promise<{ result: loadingStateEnum; data?: Map<string, timetableType> }> {\n  // Get School Years\n  const batchRequestResultSchoolYear = await batchRequest(undefined, {\n    firstUrl: `/groups/${orgWideGroupID}/calendar/events/`,\n    secondUrl: `?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${store.getState().paulyList.eventDataExtensionId}')`,\n    method: 'GET',\n    keys: {\n      map: schoolYearIds,\n    },\n  });\n\n  if (\n    batchRequestResultSchoolYear.data === undefined ||\n    batchRequestResultSchoolYear.result !== loadingStateEnum.success\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const timetableIds = new Map<string, string[]>();\n  for (\n    let schoolYearIndex = 0;\n    schoolYearIndex < batchRequestResultSchoolYear.data.length;\n    schoolYearIndex += 1\n  ) {\n    if (batchRequestResultSchoolYear.data[schoolYearIndex].status === 200) {\n      // TO DO fix status code\n      const schoolYearResponseData: { id: string; value: string }[] =\n        batchRequestResultSchoolYear.data[schoolYearIndex].body\n          .singleValueExtendedProperties;\n      const schoolYearData = schoolYearResponseData.find(e => {\n        return e.id === store.getState().paulyList.eventDataExtensionId;\n      });\n      if (schoolYearData !== undefined) {\n        try {\n          const perviousTimetable = timetableIds.get(schoolYearData.value);\n          if (perviousTimetable !== undefined) {\n            timetableIds.set(schoolYearData.value, [\n              ...perviousTimetable,\n              batchRequestResultSchoolYear.data[schoolYearIndex].body.id,\n            ]);\n          } else {\n            timetableIds.set(schoolYearData.value, [\n              batchRequestResultSchoolYear.data[schoolYearIndex].body.id,\n            ]);\n          }\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  // Get timetables\n  const batchRequestResultTimetable = await batchRequest(undefined, {\n    firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n      store.getState().paulyList.timetablesListId\n    }/items?expand=fields($select=timetableName,timetableId,timetableDataDays,timetableDataSchedules,timetableDefaultScheduleId,timetableDressCodeId)&$filter=fields/timetableId%20eq%20'`,\n    secondUrl: `'&$select=id`,\n    method: 'GET',\n    keys: {\n      map: timetableIds,\n    },\n  });\n\n  if (\n    batchRequestResultTimetable.result !== loadingStateEnum.success ||\n    batchRequestResultTimetable.data === undefined\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const dressCodeIds = new Map<string, number>();\n  for (\n    let responseIndex = 0;\n    responseIndex < batchRequestResultTimetable.data.length;\n    responseIndex += 1\n  ) {\n    if (\n      batchRequestResultTimetable.data[responseIndex].status === 200 &&\n      batchRequestResultTimetable.data[responseIndex] !== undefined\n    ) {\n      // TO DO fix status code\n      if (\n        batchRequestResultTimetable.data[responseIndex].body.value.length === 1\n      ) {\n        try {\n          dressCodeIds.set(\n            batchRequestResultTimetable.data[responseIndex].body.value[0].fields\n              .timetableDressCodeId,\n            0,\n          );\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  // Get dress code data\n  const batchRequestResultDressCode = await batchRequest(undefined, {\n    firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeData,dressCodeIncentivesData,dressCodeName,dressCodeId)&$select=id&$filter=fields/dressCodeId%20eq%20'`,\n    secondUrl: `'&$top=1`,\n    method: 'GET',\n    keys: {\n      map: dressCodeIds,\n    },\n  });\n\n  if (\n    batchRequestResultDressCode.data === undefined ||\n    batchRequestResultDressCode.result !== loadingStateEnum.success\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const dressCodes = new Map<string, dressCodeType>();\n  for (\n    let dressCodeIndex = 0;\n    dressCodeIndex < batchRequestResultDressCode.data.length;\n    dressCodeIndex += 1\n  ) {\n    if (\n      batchRequestResultDressCode.data[dressCodeIndex].status === 200 &&\n      batchRequestResultDressCode.data[dressCodeIndex].body !== undefined\n    ) {\n      batchRequestResultDressCode.data[dressCodeIndex].body;\n      if (\n        batchRequestResultDressCode.data[dressCodeIndex].body?.value.length ===\n        1\n      ) {\n        try {\n          dressCodes.set(\n            batchRequestResultDressCode.data[dressCodeIndex].body?.value[0]\n              .fields.dressCodeId,\n            {\n              name: batchRequestResultDressCode.data[dressCodeIndex].body\n                .value[0].fields.dressCodeName,\n              id: batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                .fields.dressCodeId,\n              dressCodeData: JSON.parse(\n                batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                  .fields.dressCodeData,\n              ),\n              dressCodeIncentives:\n                batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                  .fields.dressCodeIncentivesData,\n            },\n          );\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  const timetables = new Map<string, timetableType>();\n  for (\n    let timetableIndex = 0;\n    timetableIndex < batchRequestResultTimetable.data.length;\n    timetableIndex += 1\n  ) {\n    const resultTimetableData =\n      batchRequestResultTimetable.data[timetableIndex].body;\n    if (\n      batchRequestResultTimetable.data[timetableIndex].status === 200 &&\n      resultTimetableData !== undefined\n    ) {\n      if (resultTimetableData.value.length === 1) {\n        const timetableData = resultTimetableData.value[0].fields;\n        const dressCode = dressCodes.get(timetableData.timetableDressCodeId);\n        const timetableSchedules: scheduleType[] = [];\n        const scheduleIds: string[] = JSON.parse(\n          timetableData.timetableDataSchedules,\n        );\n\n        for (\n          let scheduleIndex = 0;\n          scheduleIndex < scheduleIds.length;\n          scheduleIndex += 1\n        ) {\n          const newSchedule = schedules.get(scheduleIds[scheduleIndex]);\n          if (newSchedule !== undefined) {\n            timetableSchedules.push(newSchedule);\n          }\n        }\n        if (dressCode !== undefined) {\n          timetables.set(timetableData.timetableId, {\n            name: timetableData.timetableName,\n            id: timetableData.timetableId,\n            schedules: timetableSchedules,\n            days: JSON.parse(timetableData.timetableDataDays),\n            dressCode,\n          });\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  const outputTimetables = new Map<string, timetableType>();\n  timetables.forEach((value, key) => {\n    const timetablesArray = timetableIds.get(key);\n    if (timetablesArray) {\n      timetablesArray.forEach(item => {\n        outputTimetables.set(item, value);\n      });\n    }\n  });\n\n  return { result: loadingStateEnum.success, data: outputTimetables };\n}\n\nexport async function createDressCode(\n  dressCodeName: string,\n  dressCodeData: dressCodeDataType[],\n): Promise<loadingStateEnum> {\n  const dressCodeId = createUUID();\n  const data = {\n    fields: {\n      Title: dressCodeId,\n      dressCodeId,\n      dressCodeName,\n      dressCodeData: JSON.stringify(dressCodeData),\n      dressCodeIncentivesData: '[]',\n    },\n  };\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.dressCodeListId}/items`,\n    'POST',\n    JSON.stringify(data),\n  );\n  if (result.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  MonthView.tsx\n  This is the componet used on the home page of the app\n*/\nimport React, { useEffect, useState } from 'react';\nimport { View, Text } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  findFirstDayinMonth,\n  getDay,\n  getDaysInMonth,\n} from '../Functions/calendar/calendarFunctions';\nimport { getSchoolDays } from '../Functions/calendar/calendarFunctionsGraph';\nimport { RootState } from '../Redux/store';\nimport { monthViewSlice } from '../Redux/reducers/monthViewReducer';\nimport { Colors, loadingStateEnum } from '../types';\n\nfunction MonthBlock({\n  value,\n  width,\n  height,\n  startDate,\n  daySelected,\n}: {\n  value: number;\n  width: number;\n  height: number;\n  startDate: number;\n  daySelected: number;\n}) {\n  const textval: number = getDay(value, startDate) ?? 0;\n  const day = new Date().getDate();\n  const monthViewData = useSelector((state: RootState) => state.monthView).find(\n    e => {\n      return new Date(e.startTime).getDate() === textval;\n    },\n  );\n  return (\n    <View\n      style={{\n        width,\n        height,\n        borderColor: 'black',\n        borderWidth: 2,\n      }}\n      id=\"This\"\n    >\n      {value >= startDate - 1 && value <= daySelected && textval !== 0 ? (\n        <View\n          style={{\n            width,\n            position: 'absolute',\n            height,\n            borderColor: 'black',\n            backgroundColor:\n              day == textval\n                ? 'red'\n                : day >= textval + 1\n                ? 'gray'\n                : monthViewData !== undefined\n                ? monthViewData.eventColor\n                : Colors.white,\n          }}\n        />\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.white,\n            width,\n            height,\n          }}\n        />\n      )}\n      {textval >= 1 ? (\n        <View\n          id=\"Text\"\n          style={{\n            width,\n            height,\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            position: 'absolute',\n          }}\n        >\n          {monthViewData !== undefined ? (\n            <>\n              {monthViewData.schoolDayData !== undefined ? (\n                <>\n                  <Text\n                    style={{\n                      color: 'black',\n                      fontSize: 10,\n                      fontWeight: 'bold',\n                      position: 'absolute',\n                      top: 1,\n                      right: 3,\n                    }}\n                  >\n                    {monthViewData.schoolDayData.schoolDayData.shorthand}\n                  </Text>\n                  <Text style={{ color: 'black' }}>{textval}</Text>\n                </>\n              ) : (\n                <Text style={{ color: 'black', zIndex: 2 }}>{textval}</Text>\n              )}\n            </>\n          ) : (\n            <Text id=\"This is text\" style={{ color: 'black', zIndex: 2 }}>\n              {textval}\n            </Text>\n          )}\n        </View>\n      ) : null}\n    </View>\n  );\n}\n\nexport default function MonthView({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const Count = getDaysInMonth(new Date());\n  const StartDate = findFirstDayinMonth(new Date());\n  const [daySelected, setDaySelected] = useState<number>(\n    Count + StartDate - 2 - (Count / 7) * 2,\n  );\n  const thirtyValue = [...Array(30).keys()];\n  const monthViewData = useSelector((state: RootState) => state.monthView);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    if (monthViewData.length <= 0) {\n      const result = await getSchoolDays(new Date());\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        dispatch(monthViewSlice.actions.setMonthViewData(result.data));\n      }\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        width,\n        height,\n      }}\n    >\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Monday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Tuesday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Wednesday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Thursday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Friday\n        </Text>\n      </View>\n      {thirtyValue.map((value: number) => (\n        <View\n          style={{\n            width: width * 0.2,\n            height: height * 0.145,\n            overflow: 'hidden',\n          }}\n          key={value}\n        >\n          <MonthBlock\n            value={value}\n            width={width * 0.2}\n            height={height * 0.145}\n            startDate={StartDate}\n            daySelected={daySelected}\n          />\n        </View>\n      ))}\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport { loadingStateEnum } from '../../types';\nimport { paulyDataSlice } from '../../Redux/reducers/paulyDataReducer';\n\nexport default async function getCurrentPaulyData() {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.paulyDataListId}/items/1/fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (\n      data.animationSpeed !== undefined &&\n      data.message !== undefined &&\n      data.powerpointId !== undefined\n    ) {\n      const fileResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/shares/${data.powerpointId}/driveItem/content?format=pdf`,\n        'GET',\n        undefined,\n        [{ key: 'Prefer', value: 'redeemSharingLink' }],\n      ); // `https://graph.microsoft.com/v1.0/shares/${data[\"powerpointId\"]}/root?$select=@microsoft.graph.downloadUrl`\n      if (fileResult.ok) {\n        const dataBlob = await fileResult.blob();\n        const urlOut = URL.createObjectURL(dataBlob);\n        const outputResult = {\n          powerpointBlob: urlOut,\n          powerpointShare: data.powerpointId,\n          message: data.message,\n          animationSpeed: data.animationSpeed,\n          paulyDataState: loadingStateEnum.success,\n        };\n        store.dispatch(paulyDataSlice.actions.setPaulyData(outputResult));\n      } else {\n        store.dispatch(\n          paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n        );\n      }\n    } else {\n      store.dispatch(\n        paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    store.dispatch(\n      paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n    );\n  }\n}\n","import { StyleSheet, ViewStyle } from 'react-native';\nimport React, { useEffect } from 'react';\nimport Svg, { G, Path } from 'react-native-svg';\nimport Animated, {\n  interpolateColor,\n  useAnimatedProps,\n  useSharedValue,\n  withDelay,\n  withRepeat,\n  withTiming,\n} from 'react-native-reanimated';\n\n// \"M7.706 0.290 C 7.484 0.362,7.356 0.490,7.294 0.699 C 7.259 0.816,7.253 1.088,7.253 2.508 C 7.253 4.389,7.251 4.365,7.443 4.557 C 7.700 4.813,8.300 4.813,8.557 4.557 C 8.749 4.365,8.747 4.389,8.747 2.508 C 8.747 0.688,8.744 0.656,8.596 0.480 C 8.472 0.333,8.339 0.284,8.040 0.276 C 7.893 0.272,7.743 0.278,7.706 0.290\"\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\n\nfunction ChipView({ d, index }: { d: string; index: number }) {\n  const progress = useSharedValue(0);\n  useEffect(() => {\n    progress.value = withDelay(\n      ((index + 1) / 8) * 1000,\n      withRepeat(withTiming(1, { duration: 500 }), 0, true),\n    );\n  }, []);\n  const animatedProp = useAnimatedProps(() => {\n    return {\n      fill: interpolateColor(progress.value, [0, 1], ['white', '#69717d']),\n    };\n  });\n\n  return (\n    <AnimatedPath\n      key={`Chip_Key_${index}`}\n      id={`Chip_${index}`}\n      d={d}\n      stroke=\"none\"\n      translate={[0]}\n      fillRule=\"evenodd\"\n      animatedProps={animatedProp}\n    />\n  );\n}\n\nexport default function ProgressView({\n  width,\n  height,\n  style,\n}: {\n  width: number;\n  height: number;\n  style?: ViewStyle;\n}) {\n  const paths = [\n    'M7.706 0.290 C 7.484 0.362,7.356 0.490,7.294 0.699 C 7.259 0.816,7.253 1.088,7.253 2.508 C 7.253 4.389,7.251 4.365,7.443 4.557 C 7.700 4.813,8.300 4.813,8.557 4.557 C 8.749 4.365,8.747 4.389,8.747 2.508 C 8.747 0.688,8.744 0.656,8.596 0.480 C 8.472 0.333,8.339 0.284,8.040 0.276 C 7.893 0.272,7.743 0.278,7.706 0.290',\n    'M2.753 2.266 C 2.595 2.338,2.362 2.566,2.281 2.728 C 2.197 2.897,2.193 3.085,2.269 3.253 C 2.343 3.418,4.667 5.750,4.850 5.843 C 5.109 5.976,5.375 5.911,5.643 5.649 C 5.907 5.391,5.977 5.111,5.843 4.850 C 5.750 4.667,3.418 2.343,3.253 2.269 C 3.101 2.200,2.901 2.199,2.753 2.266',\n    'M0.699 7.292 C 0.404 7.385,0.258 7.620,0.258 7.999 C 0.259 8.386,0.403 8.618,0.698 8.706 C 0.816 8.741,1.079 8.747,2.508 8.747 C 3.997 8.747,4.196 8.742,4.318 8.702 C 4.498 8.644,4.644 8.498,4.702 8.318 C 4.788 8.053,4.745 7.677,4.608 7.491 C 4.578 7.451,4.492 7.384,4.417 7.343 L 4.280 7.267 2.547 7.261 C 1.152 7.257,0.791 7.263,0.699 7.292',\n    'M4.853 10.282 C 4.730 10.339,4.520 10.536,3.518 11.541 C 2.597 12.464,2.316 12.762,2.271 12.860 C 2.195 13.025,2.196 13.216,2.272 13.378 C 2.342 13.528,2.572 13.764,2.727 13.845 C 2.884 13.927,3.117 13.926,3.280 13.843 C 3.447 13.757,5.757 11.447,5.843 11.280 C 5.926 11.118,5.927 10.884,5.846 10.729 C 5.764 10.572,5.552 10.364,5.392 10.283 C 5.213 10.192,5.048 10.192,4.853 10.282',\n    'M7.745 11.277 C 7.620 11.309,7.451 11.412,7.392 11.492 C 7.254 11.678,7.253 11.691,7.253 13.489 C 7.253 14.921,7.259 15.184,7.294 15.302 C 7.382 15.597,7.615 15.741,8.000 15.741 C 8.385 15.741,8.618 15.597,8.706 15.302 C 8.768 15.090,8.767 11.875,8.704 11.690 C 8.644 11.514,8.575 11.430,8.420 11.346 C 8.310 11.286,8.246 11.271,8.057 11.264 C 7.930 11.259,7.790 11.265,7.745 11.277',\n    'M10.753 10.266 C 10.595 10.338,10.362 10.566,10.281 10.728 C 10.197 10.897,10.193 11.085,10.269 11.253 C 10.343 11.418,12.667 13.750,12.850 13.843 C 13.109 13.976,13.375 13.911,13.643 13.649 C 13.907 13.391,13.977 13.111,13.843 12.850 C 13.750 12.667,11.418 10.343,11.253 10.269 C 11.101 10.200,10.901 10.199,10.753 10.266',\n    'M11.745 7.278 C 11.622 7.308,11.452 7.411,11.392 7.492 C 11.255 7.677,11.212 8.053,11.298 8.318 C 11.356 8.498,11.502 8.644,11.682 8.702 C 11.804 8.742,12.003 8.747,13.492 8.747 C 14.921 8.747,15.184 8.741,15.302 8.706 C 15.597 8.618,15.741 8.386,15.742 7.999 C 15.742 7.614,15.595 7.383,15.290 7.291 C 15.187 7.260,14.864 7.254,13.496 7.256 C 12.578 7.258,11.790 7.268,11.745 7.278',\n    'M12.853 2.282 C 12.730 2.339,12.520 2.536,11.518 3.541 C 10.597 4.464,10.316 4.762,10.271 4.860 C 10.195 5.025,10.196 5.216,10.272 5.378 C 10.342 5.528,10.572 5.764,10.727 5.845 C 10.884 5.927,11.117 5.926,11.280 5.843 C 11.447 5.757,13.757 3.447,13.843 3.280 C 13.926 3.118,13.927 2.884,13.846 2.729 C 13.764 2.572,13.552 2.364,13.392 2.283 C 13.213 2.192,13.048 2.192,12.853 2.282',\n  ];\n\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        {paths.map((path, index) => (\n          <ChipView key={`Chip_Key_Holder_${index}`} d={path} index={index} />\n        ))}\n      </G>\n    </Svg>\n  );\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n  },\n});\n","import { View, Text, Animated, Easing, Platform } from 'react-native';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Colors } from '../types';\n\nexport default function ScrollingTextAnimation({\n  text,\n  width,\n  height,\n}: {\n  text: string;\n  width: number;\n  height: number;\n}) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [childWidth, setChildWidth] = useState<number>(0);\n  function mainLoop(childWidth: number) {\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(pan, {\n          toValue: -childWidth,\n          duration: 5000,\n          delay: 0,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        }),\n        Animated.timing(pan, {\n          toValue: 0,\n          duration: 0,\n          delay: 0,\n          useNativeDriver: false,\n        }),\n      ]),\n    ).start();\n  }\n\n  useEffect(() => {\n    if (childWidth !== 0) {\n      mainLoop(childWidth);\n    }\n  }, [childWidth]);\n\n  // Font\n  const [fontsLoaded] = useFonts({\n    GochiHand: require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View style={{ width, height, overflow: 'hidden' }}>\n      {childWidth !== 0 ? (\n        <Animated.View style={{ transform: [{ translateX: pan }] }}>\n          <View\n            style={{\n              width: childWidth + childWidth * 0.01,\n              height,\n              overflow: 'hidden',\n              position: 'absolute',\n              left: childWidth + childWidth * 0.01,\n            }}\n          >\n            <Text\n              style={{\n                fontFamily: 'GochiHand',\n                color: Colors.white,\n                fontSize: height,\n                height,\n              }}\n            >\n              {text}\n            </Text>\n          </View>\n          <View\n            style={{\n              width: childWidth + childWidth * 0.01,\n              height,\n              position: 'absolute',\n              left: 0,\n            }}\n          >\n            <Text\n              style={{\n                fontFamily: 'GochiHand',\n                color: Colors.white,\n                fontSize: height,\n                height,\n                position: 'absolute',\n              }}\n            >\n              {text}\n            </Text>\n          </View>\n        </Animated.View>\n      ) : (\n        <ScrollView style={{ width: 99999999 }} horizontal>\n          <Text\n            numberOfLines={1}\n            onLayout={e => {\n              setChildWidth(e.nativeEvent.layout.width);\n            }}\n            adjustsFontSizeToFit={!(Platform.OS === 'ios')}\n            style={{\n              fontFamily: 'GochiHand',\n              color: Colors.white,\n              fontSize: height,\n              height,\n            }}\n          >\n            {text}\n          </Text>\n        </ScrollView>\n      )}\n    </View>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useEffect, useCallback } from 'react';\nimport { View, Text, Image, Pressable } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useNavigate } from 'react-router-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MonthView from './MonthView';\nimport store, { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport getCurrentPaulyData from '../Functions/homepage/getCurrentPaulyData';\nimport ProgressView from '../UI/ProgressView';\nimport { BookIcon, MedalIcon, PersonIcon } from '../UI/Icons/Icons';\nimport ScrollingTextAnimation from '../UI/ScrollingTextAnimation';\nimport { Colors, loadingStateEnum } from '../types';\n\nexport default function HomePage() {\n  const navigate = useNavigate();\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const authenticationToken = useSelector(\n    (state: RootState) => state.authenticationToken,\n  );\n  const { message, paulyDataState } = useSelector(\n    (state: RootState) => state.paulyData,\n  );\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const dispatch = useDispatch();\n  const insets = useSafeAreaInsets();\n\n  async function loadData() {\n    await getCurrentPaulyData();\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.maroon,\n        bottom: Colors.maroon,\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    if (\n      store.getState().authenticationToken !== '' &&\n      store.getState().paulyList.siteId !== ''\n    ) {\n      loadData();\n    }\n  }, [authenticationToken, siteId]);\n\n  useEffect(() => {\n    if (currentBreakPoint > 0) {\n      navigate('/notifications');\n    }\n  }, [currentBreakPoint]);\n\n  // Font\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n    GochiHand: require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ backgroundColor: Colors.maroon, overflow: 'hidden' }}>\n        <Pressable\n          style={{ width: width * 1.0, height: height * 0.08 }}\n          onPress={() => {\n            navigate('/notifications');\n          }}\n        >\n          {paulyDataState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width: width * 1.0,\n                height: height * 0.08,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={width < height * 0.08 ? width * 0.1 : height * 0.07}\n                height={width < height * 0.08 ? width * 0.1 : height * 0.07}\n              />\n            </View>\n          ) : (\n            <>\n              {paulyDataState === loadingStateEnum.success ? (\n                <>\n                  {message !== '' ? (\n                    <ScrollingTextAnimation\n                      width={width * 1.0}\n                      height={height * 0.08}\n                      text={message}\n                    />\n                  ) : null}\n                </>\n              ) : (\n                <Text>Failed</Text>\n              )}\n            </>\n          )}\n        </Pressable>\n        <Pressable\n          onPress={() => {\n            navigate('/calendar');\n          }}\n          style={{ width: width * 0.999, height: height * 0.42 }}\n        >\n          <View>\n            <View\n              style={{\n                width: width * 1.0,\n                height: height * 0.05,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n                borderTopColor: 'black',\n                borderTopWidth: 2,\n                borderBottomColor: 'black',\n                borderBottomWidth: 2,\n              }}\n            >\n              <Text style={{ margin: 'auto', color: Colors.white }}>\n                Calendar\n              </Text>\n            </View>\n            <MonthView width={width * 1.0} height={height * 0.37} />\n          </View>\n        </Pressable>\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 1.0,\n            height: height * 0.25,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/commissions');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                  zIndex: 1,\n                }}\n              />\n              <MedalIcon\n                width={width * 0.5}\n                height={height * 0.23}\n                style={{ position: 'absolute', top: height * 0.01, zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              navigate('/sports');\n            }}\n            style={{ borderColor: 'black', borderWidth: 2 }}\n          >\n            <View\n              style={{\n                backgroundColor: Colors.maroon,\n                width: width * 0.5,\n                height: height * 0.25,\n                borderTopWidth: 1,\n                borderTopColor: 'black',\n                zIndex: 1,\n              }}\n            />\n            <Image\n              source={require('../../assets/images/Football.png')}\n              resizeMode=\"contain\"\n              width={width * 0.3}\n              height={height * 0.25}\n              style={{\n                zIndex: 2,\n                height: height * 0.25,\n                width: width * 0.5,\n                position: 'absolute',\n                aspectRatio: '1/1',\n              }}\n            />\n          </Pressable>\n        </View>\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 1.0,\n            height: height * 0.25,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/resources');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                  zIndex: 1,\n                }}\n              />\n              <BookIcon\n                width={width * 0.5}\n                height={height * 0.25}\n                style={{ position: 'absolute', zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              navigate('/profile');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                }}\n              />\n              <PersonIcon\n                width={width * 0.5}\n                height={height * 0.25}\n                style={{ position: 'absolute', zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n        </View>\n      </View>\n      <View\n        style={{\n          position: 'absolute',\n          backgroundColor: 'black',\n          width: 4,\n          left: width / 2 + 2,\n          bottom: -insets.bottom,\n          height: insets.bottom,\n        }}\n      />\n    </>\n  );\n}\n","import * as Location from 'expo-location';\nimport { getDistance } from 'geolib';\nimport { locationStateEnum } from '../../types';\n\nexport default async function getUsersLocation(\n  commission: commissionType,\n): Promise<{ result: locationStateEnum; data?: locationCoords }> {\n  const { status } = await Location.requestForegroundPermissionsAsync();\n  if (status !== 'granted') {\n    return { result: locationStateEnum.permissionDenied };\n  }\n\n  const location = await Location.getCurrentPositionAsync();\n  if (!location.mocked) {\n    if (\n      commission.coordinateLat !== undefined &&\n      commission.coordinateLng !== undefined &&\n      commission.proximity !== undefined\n    ) {\n      const prox = getDistance(\n        { lat: location.coords.latitude, lng: location.coords.longitude },\n        {\n          latitude: commission?.coordinateLat,\n          longitude: commission?.coordinateLng,\n        },\n      );\n      if (prox <= commission.proximity) {\n        return {\n          result: locationStateEnum.success,\n          data: {\n            latCoordinate: location.coords.latitude,\n            lngCoordinate: location.coords.longitude,\n          },\n        };\n      }\n      return { result: locationStateEnum.notCloseEnough };\n    }\n  } else {\n    return { result: locationStateEnum.mockedLocation };\n  }\n  return { result: locationStateEnum.notStarted };\n}\n","import { orgWideGroupID, paulyDomain } from '../../PaulyConfig';\nimport { loadingStateEnum } from '../../types';\nimport createUUID from '../ultility/createUUID';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nasync function b64toBlob(\n  b64Data: string,\n  contentType = '',\n  sliceSize = 512,\n): Promise<Blob | undefined> {\n  const result = await fetch(b64Data);\n  if (result.ok) {\n    return await result.blob();\n  }\n  return undefined;\n}\n\nexport async function addImage(\n  base64: string,\n): Promise<{ result: loadingStateEnum; data?: string }> {\n  const fileBlob = await b64toBlob(base64);\n  if (fileBlob !== undefined) {\n    const types: any = {\n      'image/bmp': '.bmp',\n      'image/gif': '.gif',\n      'image/jpeg': '.jpg',\n      'image/png': '.png',\n      'image/webp': '.webp',\n    };\n    if (types[fileBlob.type] !== undefined) {\n      const rootIdResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/me/drive/root?$select=id',\n      );\n      if (rootIdResult.ok) {\n        const rootIdData = await rootIdResult.json();\n        const imageUUID = createUUID();\n        const resumableSessionData = {\n          item: {\n            '@microsoft.graph.conflictBehavior': 'rename',\n            name: `Pauly_Image_${imageUUID}_Submission${types[fileBlob.type]}`,\n          },\n          deferCommit: true,\n        };\n        const resumableSessionResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/me/drive/items/${\n            rootIdData.id\n          }:/Pauly_Image_${imageUUID}_Submission${\n            types[fileBlob.type]\n          }:/createUploadSession`,\n          'POST',\n          JSON.stringify(resumableSessionData),\n        );\n        if (resumableSessionResult.ok) {\n          const resumableSessionResultData =\n            await resumableSessionResult.json();\n          const { uploadUrl } = resumableSessionResultData;\n          if (resumableSessionResultData.nextExpectedRanges.length === 1) {\n            const nextExpectedRange: string =\n              resumableSessionResultData.nextExpectedRanges[0];\n            let remaining: number = fileBlob.size;\n            let uploaded: number = 0;\n            if (nextExpectedRange === `${uploaded}-`) {\n              while (remaining > 0) {\n                // TO DO Check that this works\n                const uploadBlob = fileBlob.slice(\n                  uploaded,\n                  remaining >= 5242880 ? 5242880 : remaining,\n                );\n                uploaded += remaining >= 5242880 ? 5242880 : remaining;\n\n                const uploadResult = await fetch(uploadUrl, {\n                  headers: {\n                    'Content-Length': uploadBlob.size.toString(),\n                    'Content-Range': `bytes ${\n                      uploaded - (remaining >= 5242880 ? 5242880 : remaining)\n                    }-${remaining >= 5242880 ? uploaded : uploaded - 1}/${\n                      fileBlob.size\n                    }`,\n                  },\n                  method: 'PUT',\n                  body: uploadBlob,\n                });\n                remaining -= remaining >= 5242880 ? 5242880 : remaining;\n                if (uploadResult.ok) {\n                } else {\n                  return { result: loadingStateEnum.failed };\n                }\n              }\n              const uploadCompleteResult = await fetch(uploadUrl, {\n                headers: {\n                  'Content-Length': '0',\n                },\n                method: 'POST',\n              });\n              if (uploadCompleteResult.ok) {\n                const uploadCompleteResultData =\n                  await uploadCompleteResult.json();\n                const createLinkMainData = {\n                  type: 'view',\n                  scope: 'organization',\n                };\n                const createLinkResult = await callMsGraph(\n                  `https://graph.microsoft.com/v1.0/me/drive/items/${uploadCompleteResultData.id}/createLink`,\n                  'POST',\n                  JSON.stringify(createLinkMainData),\n                );\n                if (createLinkResult.ok) {\n                  const createLinkData = await createLinkResult.json();\n                  return {\n                    result: loadingStateEnum.success,\n                    data: createLinkData.shareId,\n                  };\n                }\n                return { result: loadingStateEnum.failed };\n              }\n              return { result: loadingStateEnum.failed };\n            }\n            return { result: loadingStateEnum.failed };\n          }\n          return { result: loadingStateEnum.failed };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function claimCommissionPost(\n  auth: string,\n  commissionId: string,\n  imageShare?: string,\n  location?: locationCoords,\n): Promise<loadingStateEnum> {\n  let outResult: string = '';\n  if (location) {\n    outResult += `&latCoordinate=${location.latCoordinate}&lngCoordinate=${location.lngCoordinate}`;\n  }\n  if (imageShare) {\n    outResult += `&imageShare=${imageShare}`;\n  }\n  const bearer = `Bearer ${auth}`;\n  try {\n    const result = await fetch(\n      `${paulyDomain}/api/SubmitCommission?orgWideGroupId=${orgWideGroupID}&commissionId=${commissionId}${outResult}`,\n      {\n        headers: {\n          Authorization: bearer,\n        },\n      },\n    );\n    if (result.ok) {\n      return loadingStateEnum.success;\n    }\n    return loadingStateEnum.failed;\n  } catch {\n    return loadingStateEnum.failed;\n  }\n}\n","import { useMsal } from '@azure/msal-react';\nimport React, { useState } from 'react';\nimport { Pressable, View, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport { clientId } from '../../PaulyConfig';\nimport getUsersLocation from '../../Functions/commissions/getLocation';\nimport {\n  addImage,\n  claimCommissionPost,\n} from '../../Functions/commissions/claimCommissionsFunctions';\nimport {\n  commissionTypeEnum,\n  loadingStateEnum,\n  locationStateEnum,\n} from '../../types';\nimport ProgressView from '../../UI/ProgressView';\n\nexport default function CommissionClaim({\n  commission,\n  imageData,\n}: {\n  commission: commissionType;\n  imageData?: string;\n}) {\n  const [claimCommissionState, setClaimCommissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const { instance } = useMsal();\n\n  async function claimCommission() {\n    setClaimCommissionState(loadingStateEnum.loading);\n    const apiResult = await instance.acquireTokenSilent({\n      scopes: [`api://${clientId}/api/Test`],\n    });\n    let outImageUrl: string = '';\n    if (\n      (commission.value === commissionTypeEnum.Image ||\n        commission.value === commissionTypeEnum.ImageLocation) &&\n      imageData !== undefined\n    ) {\n      const outImage = await addImage(imageData);\n      if (\n        outImage.result === loadingStateEnum.success &&\n        outImage.data !== undefined\n      ) {\n        outImageUrl = outImage.data;\n      } else {\n        setClaimCommissionState(loadingStateEnum.failed);\n        return;\n      }\n    }\n    if (\n      commission.value === commissionTypeEnum.ImageLocation ||\n      commission.value === commissionTypeEnum.Location\n    ) {\n      const locationResult = await getUsersLocation(commission);\n      if (\n        locationResult.result === locationStateEnum.success &&\n        locationResult.data !== undefined\n      ) {\n        const result = await claimCommissionPost(\n          apiResult.accessToken,\n          commission.commissionId,\n          outImageUrl !== '' ? outImageUrl : undefined,\n          locationResult.data,\n        );\n        setClaimCommissionState(result);\n      } else {\n        setClaimCommissionState(loadingStateEnum.failed);\n      }\n    } else {\n      const result = await claimCommissionPost(\n        apiResult.accessToken,\n        commission.commissionId,\n        outImageUrl !== '' ? outImageUrl : undefined,\n        undefined,\n      );\n      setClaimCommissionState(result);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => {\n        claimCommission();\n      }}\n      style={{\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: '#ededed',\n        width: width * 0.7,\n        borderRadius: 15,\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {claimCommissionState === loadingStateEnum.loading ? (\n        <View style={{ margin: 10 }}>\n          <ProgressView width={24} height={24} />\n        </View>\n      ) : (\n        <Text style={{ margin: 10, fontWeight: 'bold' }}>\n          {claimCommissionState === loadingStateEnum.notStarted\n            ? 'CLAIM COMMISSION'\n            : claimCommissionState === loadingStateEnum.success\n            ? 'SUBMISSION SENT'\n            : 'FAILED TO SEND SUBMISSION'}\n        </Text>\n      )}\n    </Pressable>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getCommission(\n  commissionId: string,\n): Promise<{ result: loadingStateEnum; data?: commissionType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.commissionListId\n    }/items?expand=fields&$filter=fields/commissionID%20eq%20'${commissionId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== 1) {\n      // Not found\n      return { result: loadingStateEnum.failed };\n    }\n    const dataResult: commissionType = {\n      itemId: data.value[0].id,\n      title: data.value[0].fields.Title,\n      startDate: data.value[0].fields.startDate,\n      endDate: data.value[0].fields.endDate,\n      points: data.value[0].fields.points,\n      hidden: data.value[0].fields.hidden,\n      commissionId: data.value[0].fields.commissionID,\n      proximity: data.value[0].fields.proximity,\n      coordinateLat: data.value[0].fields.coordinateLat,\n      coordinateLng: data.value[0].fields.coordinateLng,\n      postData: {\n        teamId: data.value[0].fields.postTeamId,\n        channelId: data.value[0].fields.postChannelId,\n        postId: data.value[0].fields.postId,\n      },\n      timed: false,\n      maxNumberOfClaims: 0,\n      allowMultipleSubmissions: false,\n      value: data.value[0].fields.value - 1,\n      submissionsCount: 0,\n      claimCount: 0,\n      reviewedCount: 0,\n    };\n    return { result: loadingStateEnum.success, data: dataResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Platform, ViewStyle } from 'react-native';\nimport React, { useState } from 'react';\nimport WebView from 'react-native-webview';\n\nexport default function WebViewCross({\n  html,\n  height,\n  rawHtml,\n  style,\n  width,\n}:({\n  html: string | undefined;\n  width: number;\n  rawHtml?: undefined;\n  height?: undefined;\n  style?: ViewStyle | undefined;\n}| {rawHtml: string | undefined, width: number, height: number, html?: undefined, style?: ViewStyle | undefined;})) {\n  const jsCode =\n    \"window.ReactNativeWebView.postMessage(document.getElementById('pauly-main').clientHeight)\";\n  // document.getElementById('pauly-main').innerHTML\n  const [adaptHeight, setAdaptHeight] = useState<number>(0);\n  return (\n    <>\n      {(html !== undefined || rawHtml !== undefined) ? (\n        <>\n          {Platform.OS !== 'web' ? (\n            <WebView\n              source={{\n                html: rawHtml ? rawHtml:`<!DOCTYPE html>\n                <html>\n                <head>\n                  <style>\n                    body {font-weight: normal; font-family: Arial; font-size: 55px}\n                    div {font-weight: normal; font-family: Arial}\n                  </style>\n                </head>\n                <body>\n                  <div id=\"pauly-main\">\n                    ${html}\n                  </div>\n                </body>\n                </html>`,\n              }}\n              style={[{ margin: 10, height: height ? height:adaptHeight + 10, width }, style]}\n              automaticallyAdjustContentInsets={false}\n              javaScriptEnabled\n              injectedJavaScript={jsCode}\n              onMessage={event =>\n                setAdaptHeight(parseFloat(event.nativeEvent.data) / 3)\n              }\n            />\n          ) : (\n            <View style={[{ margin: 10 }, style]}>\n              { (html !== undefined) ?\n                <div dangerouslySetInnerHTML={{ __html: html }} />:\n                <>\n                  { (rawHtml !== undefined) ?\n                    {rawHtml}:null\n                  }\n                </>\n              }\n            </View>\n          )}\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { View, Text, Pressable, Image } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport CommissionClaim from './CommissionClaim';\nimport getCommission from '../../Functions/commissions/getCommission';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport ProgressView from '../../UI/ProgressView';\nimport { CloseIcon } from '../../UI/Icons/Icons';\nimport WebViewCross from '../../UI/WebViewCross';\nimport { Colors, commissionTypeEnum, loadingStateEnum } from '../../types';\n\nenum CameraResult {\n  notStarted,\n  loading,\n  success,\n  permissionDenied,\n  goToSettings,\n  failed,\n}\n\nexport default function CommissionsView({\n  id,\n  onClose,\n}: {\n  id: string;\n  onClose: () => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [commissionData, setCommissionData] = useState<\n    commissionType | undefined\n  >(undefined);\n  const [commissionState, setCommissionState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [messageState, setMessageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [messageData, setMessageData] = useState<string>('');\n  const [imageUri, setImageUri] = useState<string>('');\n  const [takeImageState, setTakeImageState] = useState<CameraResult>(\n    CameraResult.notStarted,\n  );\n  const [pickImageState, setPickerImageState] = useState<CameraResult>(\n    CameraResult.notStarted,\n  );\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const [evaluatedOverflow, setEvaluatedOverflow] = useState<boolean>(false);\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function getPost(teamId: string, channelId: string, messageId: string) {\n    setMessageState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages/${messageId}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      setMessageData(data.body.content);\n      setMessageState(loadingStateEnum.success);\n    } else {\n      setMessageState(loadingStateEnum.failed);\n    }\n  }\n\n  async function getCommissionInformation() {\n    const result = await getCommission(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCommissionData(result.data);\n      if (result.data?.postData !== undefined) {\n        getPost(\n          result.data.postData.teamId,\n          result.data.postData.channelId,\n          result.data.postData.postId,\n        );\n      }\n    }\n    setCommissionState(result.result);\n  }\n\n  async function pickImage() {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsMultipleSelection: false,\n      allowsEditing: false,\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n    });\n    if (!result.canceled) {\n      if (result.assets.length === 1) {\n        setImageUri(result.assets[0].uri);\n        Image.getSize(\n          result.assets[0].uri,\n          (imageMeasureWidth, imageMeasureHeight) => {\n            const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n            setImageHeight(width * 0.7 * heightPerWidth);\n          },\n        );\n        setPickerImageState(CameraResult.success);\n      } else {\n        setPickerImageState(CameraResult.failed);\n      }\n    } else {\n      setPickerImageState(CameraResult.notStarted);\n    }\n  }\n  const [status, requestPermission] = ImagePicker.useCameraPermissions();\n\n  async function takeImage() {\n    setTakeImageState(CameraResult.loading);\n    if (status?.status === ImagePicker.PermissionStatus.GRANTED) {\n      const result = await ImagePicker.launchCameraAsync({\n        allowsEditing: false,\n        allowsMultipleSelection: false,\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      });\n      if (!result.canceled) {\n        if (result.assets.length === 1) {\n          setImageUri(result.assets[0].uri);\n          Image.getSize(\n            result.assets[0].uri,\n            (imageMeasureWidth, imageMeasureHeight) => {\n              const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n              setImageHeight(width * 0.7 * heightPerWidth);\n            },\n          );\n          setTakeImageState(CameraResult.success);\n        } else {\n          setTakeImageState(CameraResult.failed);\n        }\n      } else {\n        setTakeImageState(CameraResult.notStarted);\n      }\n    } else if (status?.canAskAgain) {\n      const permissionResult = await requestPermission();\n      if (permissionResult.granted) {\n        takeImage();\n      } else {\n        setTakeImageState(CameraResult.permissionDenied);\n      }\n    } else {\n      setTakeImageState(CameraResult.goToSettings);\n    }\n  }\n\n  useEffect(() => {\n    getCommissionInformation();\n  }, [id]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        width: width * 0.9,\n        height: height * 0.8,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n      }}\n    >\n      {commissionState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            height: height * 0.8,\n            width: width * 0.9,\n            alignItems: 'center',\n            justifyContent: 'center',\n            alignContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width * 0.8 < height * 0.7 ? width * 0.4 : height * 0.35}\n            height={width * 0.8 < height * 0.7 ? width * 0.4 : height * 0.35}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {commissionState === loadingStateEnum.success &&\n          commissionData !== undefined ? (\n            <View>\n              <View style={{ height: height * 0.1, overflow: 'hidden' }}>\n                <Pressable\n                  onPress={() => onClose()}\n                  style={{ marginTop: 10, marginLeft: 10 }}\n                >\n                  <CloseIcon\n                    width={width < height ? width * 0.05 : height * 0.05}\n                    height={width < height ? width * 0.05 : height * 0.05}\n                  />\n                </Pressable>\n                <View\n                  style={{\n                    width: width * 0.9,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Text style={{ fontSize: height * 0.03 }}>\n                    Commission: {commissionData.title}\n                  </Text>\n                </View>\n              </View>\n              <ScrollView\n                style={{ height: isOverflowing ? height * 0.6 : height * 0.7 }}\n              >\n                <View\n                  onLayout={e => {\n                    if (e.nativeEvent.layout.height >= height * 0.6) {\n                      setIsOverflowing(true);\n                      setEvaluatedOverflow(true);\n                    } else if (!evaluatedOverflow) {\n                      setIsOverflowing(false);\n                    }\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: 'row',\n                      margin: 10,\n                      backgroundColor: Colors.maroon,\n                      borderRadius: 15,\n                      shadowOffset: { width: 2, height: 3 },\n                    }}\n                  >\n                    <View style={{ margin: 10, flexDirection: 'row' }}>\n                      <Image\n                        source={require('../../../assets/images/PaulyLogo.png')}\n                        resizeMode=\"contain\"\n                        style={{ width: 50, height: 50 }}\n                      />\n                      <Text\n                        style={{\n                          fontSize: 45,\n                          color: Colors.white,\n                          fontFamily: 'BukhariScript',\n                          width: 100,\n                          paddingLeft: 10,\n                        }}\n                      >\n                        {commissionData.points}\n                      </Text>\n                    </View>\n                  </View>\n                  <View style={{ marginLeft: width * 0.05 }}>\n                    <WebViewCross html={messageData} width={width * 0.7} />\n                  </View>\n                  {commissionData.value === commissionTypeEnum.Image ||\n                  commissionData.value === commissionTypeEnum.ImageLocation ? (\n                    <>\n                      {imageUri !== '' ? (\n                        <Image\n                          source={{ uri: imageUri }}\n                          width={width * 0.7}\n                          resizeMode=\"center\"\n                          style={{\n                            width: width * 0.7,\n                            height: imageHeight,\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: '#FFFFFF',\n                            shadowOffset: { width: 0, height: 1 },\n                            shadowOpacity: 0.8,\n                            shadowRadius: 10,\n                            borderRadius: 15,\n                          }}\n                        />\n                      ) : (\n                        <View\n                          style={{\n                            width: width * 0.7,\n                            height: height * 0.3,\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: '#FFFFFF',\n                            shadowOffset: { width: 0, height: 1 },\n                            shadowOpacity: 0.8,\n                            shadowRadius: 10,\n                            borderRadius: 15,\n                          }}\n                        >\n                          <Text>No Photo Selected</Text>\n                        </View>\n                      )}\n                      <Pressable\n                        onPress={() => takeImage()}\n                        style={{\n                          marginLeft: 'auto',\n                          marginRight: 'auto',\n                          marginTop: 15,\n                          backgroundColor: '#ededed',\n                          width: width * 0.7,\n                          borderRadius: 15,\n                          alignItems: 'center',\n                          alignContent: 'center',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        {takeImageState === CameraResult.loading ? (\n                          <ProgressView\n                            width={14}\n                            height={14}\n                            style={{ margin: 10 }}\n                          />\n                        ) : (\n                          <Text style={{ margin: 10, fontWeight: 'bold' }}>\n                            {takeImageState === CameraResult.notStarted\n                              ? 'TAKE PHOTO'\n                              : takeImageState === CameraResult.goToSettings\n                              ? 'Go To Settings And Give Camera Permissions'\n                              : takeImageState === CameraResult.permissionDenied\n                              ? 'Permission Denied'\n                              : takeImageState === CameraResult.success\n                              ? 'TAKE DIFFERENT PHOTO'\n                              : 'AN ERROR OCCURED'}\n                          </Text>\n                        )}\n                      </Pressable>\n                      <Pressable\n                        onPress={() => pickImage()}\n                        style={{\n                          marginLeft: 'auto',\n                          marginRight: 'auto',\n                          marginTop: 10,\n                          backgroundColor: '#ededed',\n                          width: width * 0.7,\n                          borderRadius: 15,\n                          alignItems: 'center',\n                          alignContent: 'center',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        {pickImageState === CameraResult.loading ? (\n                          <ProgressView\n                            width={14}\n                            height={14}\n                            style={{ margin: 10 }}\n                          />\n                        ) : (\n                          <Text style={{ margin: 10, fontWeight: 'bold' }}>\n                            {pickImageState === CameraResult.notStarted\n                              ? 'CHOOSE PHOTO'\n                              : pickImageState === CameraResult.permissionDenied\n                              ? 'Permission Denied'\n                              : pickImageState === CameraResult.success\n                              ? 'USE A DIFFERENT PHOTO'\n                              : 'AN ERROR OCCURED'}\n                          </Text>\n                        )}\n                      </Pressable>\n                    </>\n                  ) : null}\n                  {isOverflowing ? null : (\n                    <View style={{ marginTop: 10, marginBottom: 10 }}>\n                      <CommissionClaim commission={commissionData} />\n                    </View>\n                  )}\n                </View>\n              </ScrollView>\n              {isOverflowing ? (\n                <View\n                  style={{\n                    height: height * 0.1,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <CommissionClaim\n                    commission={commissionData}\n                    imageData={imageUri !== '' ? imageUri : undefined}\n                  />\n                </View>\n              ) : null}\n            </View>\n          ) : (\n            <View>\n              <Text>Something Went Wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\n// Gets points when given an array of commission ids\nasync function getPointsBatch(\n  commissions: string[],\n): Promise<{ result: loadingStateEnum; points: number }> {\n  const outputRequests: { id: string; method: string; url: string }[] = [];\n  for (let index = 0; index < commissions.length; index += 1) {\n    outputRequests.push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?$expand=fields&$filter=fields/commissionID%20eq%20'${\n        commissions[index]\n      }' `,\n      // ?$expand=fields&$filter=fields/commissionID%20eq%20'${commissions[index]}'\n    });\n  }\n  const batchData = {\n    requests: outputRequests,\n  };\n\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/$batch',\n    'POST',\n    JSON.stringify(batchData),\n    [{ key: 'Accept', value: 'application/json' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    let pointsResult = 0;\n    for (\n      let requestIndex = 0;\n      requestIndex < data.responses.length;\n      requestIndex += 1\n    ) {\n      if (data.responses[requestIndex].status === 200) {\n        for (\n          let index = 0;\n          index < data.responses[requestIndex].body.value.length;\n          index += 1\n        ) {\n          pointsResult +=\n            data.responses[requestIndex].body.value[index].fields.points;\n        }\n      } else {\n        return { result: loadingStateEnum.failed, points: 0 };\n      }\n    }\n    return { result: loadingStateEnum.success, points: pointsResult };\n  }\n  return { result: loadingStateEnum.failed, points: 0 };\n}\n\nexport default async function getPoints(): Promise<{\n  result: loadingStateEnum;\n  data?: number;\n}> {\n  let nextUrl = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.commissionSubmissionsListId\n  }/items?expand=fields&$filter=fields/userId%20eq%20'${\n    store.getState().microsoftProfileData.id\n  }'%20and%20fields/submissionApproved%20ne%20false`;\n  let points: number = 0;\n  let commissions: string[] = [];\n  while (nextUrl !== '') {\n    const submissionResultClaimed = await callMsGraph(nextUrl);\n    if (!submissionResultClaimed.ok) {\n      return { result: loadingStateEnum.failed };\n    }\n    const submissionResultClaimedData = await submissionResultClaimed.json();\n    for (\n      let index = 0;\n      index < submissionResultClaimedData.value.length;\n      index += 1\n    ) {\n      if (\n        submissionResultClaimedData.value[0].fields.submissionApproved === true\n      ) {\n        commissions.push(\n          submissionResultClaimedData.value[0].fields.commissionId,\n        );\n        if (commissions.length >= 20) {\n          const batchResult = await getPointsBatch(commissions);\n          if (batchResult.result !== loadingStateEnum.success) {\n            return { result: loadingStateEnum.failed };\n          }\n          points += batchResult.points;\n          commissions = [];\n        }\n      }\n    }\n    if (submissionResultClaimedData['@odata.nextLink'] !== undefined) {\n      nextUrl = submissionResultClaimedData['@odata.nextLink'];\n    } else {\n      nextUrl = '';\n      if (commissions.length !== 0) {\n        const batchResult = await getPointsBatch(commissions);\n        if (batchResult.result !== loadingStateEnum.success) {\n          return { result: loadingStateEnum.failed };\n        }\n        points += batchResult.points;\n      }\n    }\n  }\n  return { result: loadingStateEnum.success, data: points };\n}\n","import { commissionsSlice } from '../../Redux/reducers/commissionsReducer';\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction getFilter(\n  startDate?: { date: Date; filter: 'ge' | 'le' },\n  endDate?: { date: Date; filter: 'ge' | 'le' },\n) {\n  const startDateString = startDate?.date.toISOString().replace(/.\\d+Z$/g, 'Z');\n  const endDateString = endDate?.date.toISOString().replace(/.\\d+Z$/g, 'Z');\n  if (startDate || endDate) {\n    let filter = '&$filter=';\n    if (startDate) {\n      filter += `fields/startDate%20${startDate.filter}%20${startDateString}`;\n    }\n    if (endDate) {\n      filter += startDate\n        ? `&fields/endDate%20le%20${endDateString}`\n        : `fields/endDate%20${endDate.filter}%20${endDateString}`;\n    }\n  } else {\n    return '';\n  }\n}\n\nasync function getSubmissions(commissionIds: string[]): Promise<{\n  result: loadingStateEnum;\n  data?: Map<\n    string,\n    { claimCount: number; submissionsCount: number; reviewedCount: number }\n  >;\n}> {\n  const outputRequests: { id: string; method: string; url: string }[][] = [[]];\n  for (let index = 0; index < commissionIds.length; index += 1) {\n    outputRequests[Math.floor(index / 20)].push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionSubmissionsListId\n      }/items?expand=fields(select=commissionId,submissions)`,\n    });\n    if (index % 20 === 0) {\n      outputRequests.push([]);\n    }\n  }\n  const outputMap = new Map<\n    string,\n    { claimCount: number; submissionsCount: number; reviewedCount: number }\n  >();\n  for (let index = 0; outputRequests.length < index; index += 1) {\n    const requestData = {\n      requests: outputRequests[index],\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.commissionListId}/items`,\n      'POST',\n      JSON.stringify(requestData),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      for (\n        let responseIndex = 0;\n        responseIndex < data.responses.length;\n        responseIndex += 1\n      ) {\n        if (data.responses[responseIndex].status === 200) {\n          for (\n            let dataIndex = 0;\n            dataIndex < data.respone[index].body.length;\n            dataIndex += 1\n          ) {\n            if (data.respone[index].body['@odata.nextLink'] !== undefined) {\n              if (outputRequests[outputRequests.length - 1].length < 20) {\n                outputRequests[outputRequests.length - 1].push({\n                  id: outputRequests[\n                    outputRequests.length - 1\n                  ].length.toString(),\n                  method: 'GET',\n                  url: data.respone[index].body['@odata.nextLink'],\n                });\n              } else {\n                outputRequests.push([]);\n                outputRequests[outputRequests.length - 1].push({\n                  id: outputRequests[\n                    outputRequests.length - 1\n                  ].length.toString(),\n                  method: 'GET',\n                  url: data.respone[index].body['@odata.nextLink'],\n                });\n              }\n            }\n            for (\n              let valueIndex = 0;\n              valueIndex < data.respone[index].body.value.length;\n              valueIndex += 1\n            ) {\n              if (\n                outputMap.has(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                )\n              ) {\n                const mapData = outputMap.get(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                );\n                if (mapData !== undefined) {\n                  const subApproved =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionApproved;\n                  const subReviewed =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionReviewed;\n                  outputMap.set(\n                    data.respone[index].body.value[valueIndex].commissionId,\n                    {\n                      submissionsCount: (mapData.submissionsCount += 1),\n                      claimCount: subApproved\n                        ? (mapData.claimCount += 1)\n                        : mapData.claimCount,\n                      reviewedCount: subReviewed\n                        ? (mapData.reviewedCount += 1)\n                        : mapData.reviewedCount,\n                    },\n                  );\n                } else {\n                  const subApproved =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionApproved;\n                  const subReviewed =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionReviewed;\n                  outputMap.set(\n                    data.respone[index].body.value[valueIndex].commissionId,\n                    {\n                      submissionsCount: 1,\n                      claimCount: subApproved ? 1 : 0,\n                      reviewedCount: subReviewed ? 1 : 0,\n                    },\n                  );\n                }\n              } else {\n                const subApproved =\n                  data.respone[index].body.value[valueIndex].submissionApproved;\n                const subReviewed =\n                  data.respone[index].body.value[valueIndex].submissionReviewed;\n                outputMap.set(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                  {\n                    submissionsCount: 1,\n                    claimCount: subApproved ? 1 : 0,\n                    reviewedCount: subReviewed ? 1 : 0,\n                  },\n                );\n              }\n            }\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  return { result: loadingStateEnum.success, data: outputMap };\n}\n\nexport default async function getCommissions(\n  nextLink?: string,\n  startDate?: { date: Date; filter: 'ge' | 'le' },\n  endDate?: { date: Date; filter: 'ge' | 'le' },\n  claimed?: boolean,\n): Promise<{\n  result: loadingStateEnum;\n  data?: commissionType[];\n  nextLink?: string;\n}> {\n  if (nextLink === undefined) {\n    store.dispatch(commissionsSlice.actions.setCommissionNextLink(undefined));\n  }\n  if (claimed === true) {\n    const result = await getUnclaimedCommissions();\n    return { result: result.result, data: result.data };\n  }\n  const filter = getFilter(startDate, endDate);\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?expand=fields${filter}`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const commissionsIds: string[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        commissionsIds.push(data.value[index].fields.commissionId);\n      }\n      const submissions = await getSubmissions(commissionsIds);\n      if (\n        submissions.result === loadingStateEnum.success &&\n        submissions.data !== undefined\n      ) {\n        const resultCommissions: commissionType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          const submissionData = submissions.data.get(\n            data.value[index].fields.commissionID as string,\n          );\n          resultCommissions.push({\n            itemId: data.value[index].id,\n            title: data.value[index].fields.Title,\n            startDate: data.value[index].fields.startDate,\n            endDate: data.value[index].fields.endDate,\n            claimCount: submissionData ? submissionData.claimCount : 0,\n            submissionsCount: submissionData\n              ? submissionData.submissionsCount\n              : 0,\n            reviewedCount: submissionData ? submissionData.reviewedCount : 0,\n            points: data.value[index].fields.points as number,\n            proximity: data.value[index].fields.proximity as number,\n            commissionId: data.value[index].fields.commissionID as string,\n            hidden: data.value[index].fields.hidden,\n            timed: data.value[index].fields.timed,\n            maxNumberOfClaims: data.value[index].fields.maxNumberOfClaims,\n            allowMultipleSubmissions:\n              data.value[index].fields.allowMultipleSubmissions,\n            value: data.value[index].fields.hidden - 1,\n          });\n        }\n        return {\n          result: loadingStateEnum.success,\n          data: resultCommissions,\n          nextLink: data['@odata.nextLink'],\n        };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\ntype unclaimedCommissionSubmissionType = {\n  commissionId: string;\n  submissions: number;\n};\n\n// Get Claimed Commmissions\n\n// Gets points when given an array of commission ids\nasync function getCommissionsBatch(\n  commissions: unclaimedCommissionSubmissionType[],\n): Promise<{ result: loadingStateEnum; data?: commissionType[] }> {\n  const outputRequests: { id: string; method: string; url: string }[] = [];\n  for (let index = 0; index < commissions.length; index += 1) {\n    outputRequests.push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?$expand=fields&$filter=fields/commissionID%20eq%20'${\n        commissions[index]\n      }' `,\n    });\n  }\n  const batchData = {\n    requests: outputRequests,\n  };\n\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/$batch',\n    'POST',\n    JSON.stringify(batchData),\n    [{ key: 'Accept', value: 'application/json' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const commissionsResult: commissionType[] = [];\n    for (\n      let requestIndex = 0;\n      requestIndex < data.responses.length;\n      requestIndex += 1\n    ) {\n      if (data.responses[requestIndex].status === 200) {\n        for (\n          let index = 0;\n          index < data.responses[requestIndex].body.value.length;\n          index += 1\n        ) {\n          commissionsResult.push({\n            itemId: data.responses[requestIndex].body.value[index].id,\n            title: data.responses[requestIndex].body.value[index].fields.Title,\n            startDate:\n              data.responses[requestIndex].body.value[index].fields.startDate,\n            endDate:\n              data.responses[requestIndex].body.value[index].fields.endDate,\n            submissionsCount:\n              commissions[parseInt(data.responses[requestIndex].id) - 1]\n                .submissions,\n            claimCount: 0,\n            reviewedCount: 0, // TO DO fix\n            points: data.responses[requestIndex].body.value[index].fields\n              .points as number,\n            proximity: data.responses[requestIndex].body.value[index].fields\n              .proximity as number,\n            commissionId: data.responses[requestIndex].body.value[index].fields\n              .commissionID as string,\n            hidden:\n              data.responses[requestIndex].body.value[index].fields.hidden,\n            timed: data.responses[requestIndex].body.value[index].fields.timed,\n            maxNumberOfClaims:\n              data.responses[requestIndex].body.value[index].fields\n                .maxNumberOfClaims,\n            allowMultipleSubmissions:\n              data.responses[requestIndex].body.value[index].fields\n                .allowMultipleSubmissions,\n            value:\n              data.responses[requestIndex].body.value[index].fields.hidden - 1,\n          });\n        }\n      } else {\n        return { result: loadingStateEnum.failed, data: commissionsResult };\n      }\n    }\n    return { result: loadingStateEnum.success, data: commissionsResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getUnclaimedCommissions(): Promise<{\n  result: loadingStateEnum;\n  data?: commissionType[];\n}> {\n  let nextUrl = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.commissionSubmissionsListId\n  }/items?expand=fields&$filter=fields/userId%20eq%20'${\n    store.getState().microsoftProfileData.id\n  }'%20and%20fields/submissionApproved%20ne%20false`;\n  // The first value in the map is the commission id and the second is the submissions count b/c all are unclaimed\n  const commissionsMap = new Map<string, number>();\n  while (nextUrl !== '') {\n    const submissionResultClaimed = await callMsGraph(nextUrl);\n    if (!submissionResultClaimed.ok) {\n      return { result: loadingStateEnum.failed };\n    }\n    const submissionResultClaimedData = await submissionResultClaimed.json();\n    for (\n      let index = 0;\n      index < submissionResultClaimedData.value.length;\n      index += 1\n    ) {\n      if (\n        submissionResultClaimedData.value[index].fields.submissionApproved ===\n        false\n      ) {\n        if (\n          commissionsMap.has(\n            submissionResultClaimedData.value[index].fields.commissionId,\n          )\n        ) {\n          const count = commissionsMap.get(\n            submissionResultClaimedData.value[index].fields.commissionId,\n          );\n          if (count !== undefined) {\n            commissionsMap.set(\n              submissionResultClaimedData.value[index].fields.commissionId,\n              count + 1,\n            );\n          }\n        } else {\n          commissionsMap.set(\n            submissionResultClaimedData.value[index].fields.commissionId,\n            1,\n          );\n        }\n      }\n    }\n    if (submissionResultClaimedData['@odata.nextLink'] !== undefined) {\n      nextUrl = submissionResultClaimedData['@odata.nextLink'];\n    } else {\n      nextUrl = '';\n    }\n  }\n  const commissionsBatchData: unclaimedCommissionSubmissionType[][] = [[]];\n  let batchIndex = 0;\n  commissionsMap.forEach((value, key) => {\n    commissionsBatchData[batchIndex].push({\n      commissionId: key,\n      submissions: value,\n    });\n    if (commissionsBatchData[batchIndex].length >= 20) {\n      commissionsBatchData.push([]);\n      batchIndex += 1;\n    }\n  });\n\n  let outCommissions: commissionType[] = [];\n  for (let index = 0; index < commissionsBatchData.length; index += 1) {\n    const result = await getCommissionsBatch(commissionsBatchData[index]);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      outCommissions = [...outCommissions, ...result.data];\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: outCommissions };\n}\n","import { View, Text, Pressable, ViewStyle } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { ChevronLeft } from './Icons/Icons';\n\nexport default function BackButton({\n  to,\n  style,\n}: {\n  to: string;\n  style?: ViewStyle;\n}) {\n  const navigate = useNavigate();\n  return (\n    <Pressable\n      style={[\n        {\n          position: 'absolute',\n          flexDirection: 'row',\n          top: 0,\n          left: 5,\n          zIndex: 100,\n        },\n        style,\n      ]}\n      onPress={() => navigate(to)}\n    >\n      <ChevronLeft width={14} height={14} />\n      <Text>Back</Text>\n    </Pressable>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  FlatList,\n  Pressable,\n  ScrollView,\n  Text,\n  View,\n  Image,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CommissionsView from './CommissionsView';\nimport { commissionsSlice } from '../../Redux/reducers/commissionsReducer';\nimport { RootState } from '../../Redux/store';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport getPoints from '../../Functions/commissions/getPoints';\nimport getCommissions from '../../Functions/commissions/getCommissions';\nimport ProgressView from '../../UI/ProgressView';\nimport BackButton from '../../UI/BackButton';\nimport { Colors, loadingStateEnum } from '../../types';\n\nexport default function Commissions() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const { commissionNextLink } = useSelector(\n    (state: RootState) => state.commissions,\n  );\n  const { currentCommissions, selectedCommission, commissionsState, points } =\n    useSelector((state: RootState) => state.commissions);\n\n  const [isHoverPicker, setIsHoverPicker] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  // Loading States\n\n  async function loadData() {\n    const pointResult = await getPoints();\n    if (\n      pointResult.result === loadingStateEnum.success &&\n      pointResult.data !== undefined\n    ) {\n      dispatch(commissionsSlice.actions.setPoints(pointResult.data));\n      const commissionsResult = await getCommissions();\n      if (\n        (commissionsResult.result === loadingStateEnum.success,\n        commissionsResult.data !== undefined)\n      ) {\n        dispatch(\n          commissionsSlice.actions.setCurrentCommissions(\n            commissionsResult.data,\n          ),\n        );\n      }\n      dispatch(\n        commissionsSlice.actions.setCommissionNextLink(\n          commissionsResult.nextLink,\n        ),\n      );\n      dispatch(\n        commissionsSlice.actions.setCommissionsState(commissionsResult.result),\n      );\n    } else {\n      dispatch(\n        commissionsSlice.actions.setCommissionsState(pointResult.result),\n      );\n    }\n    // TO DO pagination\n  }\n\n  async function loadCommissionData(\n    startDate?: { date: Date; filter: 'ge' | 'le' },\n    endDate?: { date: Date; filter: 'ge' | 'le' },\n    claimed?: boolean,\n    nextLink?: string,\n  ) {\n    dispatch(\n      commissionsSlice.actions.setCommissionsState(loadingStateEnum.loading),\n    );\n    const result = await getCommissions(nextLink, startDate, endDate, claimed);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      dispatch(commissionsSlice.actions.setCurrentCommissions(result.data));\n    }\n    dispatch(commissionsSlice.actions.setCommissionsState(result.result));\n    dispatch(commissionsSlice.actions.setCommissionNextLink(result.nextLink));\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (siteId !== '') {\n      loadData();\n    }\n  }, [siteId]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ width, height, backgroundColor: Colors.white }}>\n        <View\n          style={{\n            width,\n            height: height * 0.1,\n            backgroundColor: Colors.darkGray,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n          <Text\n            style={{\n              fontFamily: 'BukhariScript',\n              fontSize: 25,\n              color: Colors.white,\n            }}\n          >\n            Commissions\n          </Text>\n        </View>\n        <View style={{ height: isHoverPicker ? height * 0.8 : height * 0.85 }}>\n          {commissionsState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height: height * 0.9,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={width < height ? width * 0.1 : height * 0.1}\n                height={width < height ? width * 0.1 : height * 0.1}\n              />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              {commissionsState === loadingStateEnum.success ? (\n                <FlatList\n                  style={{ height: height * 0.9 }}\n                  data={[undefined, ...currentCommissions]}\n                  renderItem={({ item, index }) => (\n                    <>\n                      {index === 0 ? (\n                        <View\n                          style={{\n                            flexDirection: 'row',\n                            margin: 10,\n                            backgroundColor: Colors.maroon,\n                            borderRadius: 15,\n                            shadowOffset: { width: 2, height: 3 },\n                          }}\n                        >\n                          <View style={{ margin: 10, flexDirection: 'row' }}>\n                            <Image\n                              source={require('../../../assets/images/PaulyLogo.png')}\n                              resizeMode=\"contain\"\n                              style={{ width: 50, height: 50 }}\n                            />\n                            <Text\n                              numberOfLines={1}\n                              adjustsFontSizeToFit\n                              style={{\n                                fontSize: 45,\n                                color: Colors.white,\n                                fontFamily: 'BukhariScript',\n                                width: 100,\n                                paddingLeft: 10,\n                              }}\n                            >\n                              {points}\n                            </Text>\n                          </View>\n                        </View>\n                      ) : (\n                        <>\n                          {item !== undefined ? (\n                            <Pressable\n                              onPress={() => {\n                                dispatch(\n                                  commissionsSlice.actions.setSelectedCommission(\n                                    item.commissionId,\n                                  ),\n                                );\n                              }}\n                              key={`Link_${item.commissionId}`}\n                              style={{ backgroundColor: 'transparent' }}\n                            >\n                              <View\n                                key={item.commissionId}\n                                style={{\n                                  borderRadius: 15,\n                                  marginLeft: width * 0.025,\n                                  elevation: 2,\n                                  marginRight: width * 0.025,\n                                  marginTop: height * 0.02,\n                                  backgroundColor: Colors.white,\n                                  shadowColor: 'black',\n                                  shadowOffset: { width: 1, height: 1 },\n                                  shadowOpacity: 1,\n                                  shadowRadius: 5,\n                                }}\n                              >\n                                <View style={{ margin: 10 }}>\n                                  <Text>{item.title}</Text>\n                                  {item.timed &&\n                                  item.startDate !== undefined ? (\n                                    <Text>\n                                      {new Date(\n                                        item.startDate,\n                                      ).toLocaleDateString('en-US', {\n                                        month: 'long',\n                                        day: 'numeric',\n                                        minute: 'numeric',\n                                      })}\n                                    </Text>\n                                  ) : null}\n                                </View>\n                              </View>\n                            </Pressable>\n                          ) : null}\n                        </>\n                      )}\n                    </>\n                  )}\n                  keyExtractor={item =>\n                    `${item?.commissionId}_${createUUID()}`\n                  }\n                  onEndReachedThreshold={1}\n                  onEndReached={() => {\n                    if (commissionNextLink !== undefined) {\n                      loadCommissionData(\n                        undefined,\n                        undefined,\n                        undefined,\n                        commissionNextLink,\n                      );\n                    }\n                  }}\n                  initialNumToRender={currentCommissions.length}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </View>\n          )}\n        </View>\n        <Pressable\n          style={{ height: isHoverPicker ? height * 0.1 : height * 0.05 }}\n          onHoverIn={() => {\n            setIsHoverPicker(true);\n          }}\n          onHoverOut={() => {\n            setIsHoverPicker(false);\n          }}\n        >\n          <ScrollView\n            horizontal\n            style={{\n              height: isHoverPicker ? height * 0.1 : height * 0.05,\n              width,\n              backgroundColor: Colors.white,\n            }}\n            showsHorizontalScrollIndicator={false}\n          >\n            <PickerPiece\n              text=\"All\"\n              onPress={() => {\n                loadCommissionData();\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Current\"\n              onPress={() => {\n                loadCommissionData(\n                  { date: new Date(), filter: 'ge' },\n                  { date: new Date(), filter: 'le' },\n                );\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Past\"\n              onPress={() => {\n                loadCommissionData(\n                  { date: new Date(), filter: 'le' },\n                  { date: new Date(), filter: 'le' },\n                );\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Claimed\"\n              onPress={() => {\n                loadCommissionData(undefined, undefined, true);\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Future\"\n              onPress={() => {\n                loadCommissionData(undefined, {\n                  date: new Date(),\n                  filter: 'ge',\n                });\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n          </ScrollView>\n        </Pressable>\n      </View>\n      <View\n        style={{\n          position: 'absolute',\n          zIndex: 2,\n          top: height * 0.1,\n          left: width * 0.05,\n        }}\n      >\n        {selectedCommission !== '' ? (\n          <CommissionsView\n            id={selectedCommission}\n            onClose={() =>\n              dispatch(commissionsSlice.actions.setSelectedCommission(''))\n            }\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nfunction PickerPiece({\n  text,\n  isHoverPicker,\n  setIsHoverPicker,\n  onPress,\n}: {\n  text: string;\n  onPress: () => void;\n  isHoverPicker: boolean;\n  setIsHoverPicker: (item: boolean) => void;\n}) {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      onPress={() => {\n        onPress();\n      }}\n      onHoverIn={() => {\n        setIsHoverPicker(true);\n        setIsSelected(true);\n      }}\n      onHoverOut={() => setIsSelected(false)}\n      style={{\n        height: isHoverPicker ? height * 0.1 : height * 0.05,\n        width: isSelected\n          ? currentBreakPoint >= 2\n            ? width * 0.3\n            : width * 0.6\n          : currentBreakPoint >= 2\n          ? width * 0.2\n          : width * 0.4,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          height: isHoverPicker ? height * 0.06 : height * 0.03,\n          width: isSelected\n            ? currentBreakPoint >= 2\n              ? width * 0.28\n              : width * 0.46\n            : currentBreakPoint >= 2\n            ? width * 0.18\n            : width * 0.36,\n          marginLeft: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          marginRight: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          backgroundColor: Colors.darkGray,\n          borderRadius: 15,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white }}>{text}</Text>\n      </View>\n    </Pressable>\n  );\n}\n","import { taskDeltaSlice } from '../../Redux/reducers/tasksReducers';\nimport store from '../../Redux/store';\nimport {\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction convertStringToTaskStatus(status: string): taskStatusEnum {\n  if (status === 'notStarted') {\n    return taskStatusEnum.notStarted;\n  }\n  if (status === 'inProgress') {\n    return taskStatusEnum.inProgress;\n  }\n  if (status === 'completed') {\n    return taskStatusEnum.completed;\n  }\n  if (status === 'waitingOnOthers') {\n    return taskStatusEnum.waitingOnOthers;\n  }\n  return taskStatusEnum.deferred;\n}\n\nfunction convertStringToImportance(importance: string): taskImportanceEnum {\n  if (importance === 'high') {\n    return taskImportanceEnum.high;\n  }\n  if (importance === 'low') {\n    return taskImportanceEnum.low;\n  }\n  return taskImportanceEnum.normal;\n}\n\n// deltaRunAgain is send if the delta link has failed or the responce 410 meaning syncronization is needed.\nexport default async function getUsersTasks(\n  deltaRunAgain?: boolean,\n): Promise<{ result: loadingStateEnum; data?: taskType[] }> {\n  let deltaMode = false;\n  if (store.getState().tasksDeltaLink !== '' && deltaRunAgain !== true) {\n    deltaMode = true;\n  }\n  const url = deltaMode\n    ? store.getState().tasksDeltaLink\n    : 'https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/delta';\n  const tasksResult = await callMsGraph(url);\n  if (tasksResult.ok) {\n    const taskData = await tasksResult.json();\n    if (taskData['@odata.deltaLink'] !== undefined) {\n      store.dispatch(\n        taskDeltaSlice.actions.setTaskDeltaLink(taskData['@odata.deltaLink']),\n      );\n    }\n    const resultTasks: taskType[] = [];\n    for (let index = 0; index < taskData.value.length; index += 1) {\n      resultTasks.push({\n        name: taskData.value[index].title,\n        id: taskData.value[index].id,\n        importance: convertStringToImportance(taskData.value[index].importance),\n        status: convertStringToTaskStatus(taskData.value[index].status),\n        excess: false,\n      });\n    }\n    resultTasks.unshift({\n      name: '',\n      importance: taskImportanceEnum.normal,\n      id: '',\n      status: taskStatusEnum.notStarted,\n      excess: true,\n    });\n    return { result: loadingStateEnum.success, data: resultTasks };\n  }\n  if (deltaMode) {\n    const secondAttempt = await getUsersTasks(true);\n    return secondAttempt;\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  getInsightData.ts\n\n  used to get insight files that are used on the notification page.\n*/\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getInsightData(): Promise<insightResult> {\n  // Get used https://learn.microsoft.com/en-us/graph/api/insights-list-used?view=graph-rest-1.0&tabs=http\n  const usedResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/insights/used?$select=resourceReference,resourceVisualization',\n  );\n  const userOutData: resourceType[] = [];\n  let userState: loadingStateEnum = loadingStateEnum.loading; // State of getting users data\n  if (usedResult.ok) {\n    // Check if result success\n    const userData = await usedResult.json();\n    for (let index = 0; index < userData.value.length; index += 1) {\n      userOutData.push({\n        webUrl: userData.value[index].resourceReference.webUrl,\n        id: userData.value[index].resourceReference.id,\n        title: userData.value[index].resourceVisualization.title,\n        type: userData.value[index].resourceVisualization.type,\n      });\n    }\n    userState = loadingStateEnum.success;\n  } else {\n    userState = loadingStateEnum.failed;\n  }\n\n  // Get trending https://learn.microsoft.com/en-us/graph/api/insights-list-trending?view=graph-rest-1.0&tabs=http\n  const trendingResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/insights/trending?$select=resourceReference,resourceVisualization',\n  );\n  const trendingOutData: resourceType[] = [];\n  let trendingState = loadingStateEnum.loading; // state of getting trendings data\n  if (trendingResult.ok) {\n    const trendingData = await trendingResult.json();\n    for (let index = 0; index < trendingData.value.length; index += 1) {\n      trendingOutData.push({\n        webUrl: trendingData.value[index].resourceReference.webUrl,\n        id: trendingData.value[index].resourceReference.id,\n        title: trendingData.value[index].resourceVisualization.title,\n        type: trendingData.value[index].resourceVisualization.type,\n      });\n    }\n    trendingState = loadingStateEnum.success;\n  } else {\n    trendingState = loadingStateEnum.failed;\n  }\n  return {\n    userState,\n    trendingState,\n    userData: userOutData,\n    trendingData: trendingOutData,\n  };\n}\n","import React from 'react';\nimport Animated, {\n  SharedValue,\n  useAnimatedProps,\n} from 'react-native-reanimated';\nimport { Path } from 'react-native-svg';\n\nexport default function AnimatedCheckMarkPath({\n  progress,\n  checkMarkColor,\n  checked,\n}: {\n  progress: SharedValue<number>;\n  checkMarkColor: any;\n  checked: boolean;\n}) {\n  const AnimatedPath = Animated.createAnimatedComponent(Path);\n  const checkMarkAnimation = useAnimatedProps(() => {\n    const strokeDashoffset = 1000 * progress.value;\n    return { strokeDashoffset };\n  });\n  return (\n    <AnimatedPath\n      animatedProps={checkMarkAnimation}\n      d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\n      stroke={checkMarkColor}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n      strokeWidth={5}\n      strokeDasharray={1000}\n      strokeMiterlimit={10}\n    />\n  );\n}\n","// Original Code from https://github.com/Rakha112/react-native-custom-checkbox/blob/main/src/components/CustomCheckBox.js\n\nimport React from 'react';\nimport Svg, { Circle } from 'react-native-svg';\nimport { Easing, useDerivedValue, withTiming } from 'react-native-reanimated';\nimport { View } from 'react-native';\nimport AnimatedCheckMarkPath from './AnimatedCheckMarkPath';\n\nexport default function CustomCheckBox({\n  checked,\n  checkMarkColor,\n  height,\n  width,\n  strokeDasharray,\n}: {\n  checked: boolean;\n  checkMarkColor: string;\n  height: number;\n  width: number;\n  strokeDasharray?: number;\n}) {\n  const progress = useDerivedValue(() => {\n    return withTiming(checked ? 0 : 1, {\n      duration: 1500,\n      easing: Easing.inOut(Easing.bezierFn(0.5, -0.02, 0.92, 0.37)),\n    });\n  });\n\n  return (\n    <View>\n      <Svg width={width} height={height} viewBox=\"0 0 52 52\">\n        <AnimatedCheckMarkPath\n          progress={progress}\n          checkMarkColor={checkMarkColor}\n          checked={checked}\n        />\n        <Circle\n          cx=\"26\"\n          cy=\"26\"\n          r=\"20\"\n          stroke=\"black\"\n          strokeDasharray={strokeDasharray}\n          strokeWidth=\"2\"\n          fill=\"none\"\n        />\n      </Svg>\n    </View>\n  );\n}\n","import { Image } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport * as PDFJS from 'pdfjs-dist';\nimport { useSelector } from 'react-redux';\nimport { DocumentInitParameters } from 'pdfjs-dist/types/src/display/api';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport store, { RootState } from '../../Redux/store';\nimport { pdfDataSlice } from '../../Redux/reducers/pdfDataReducer';\n\nPDFJS.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${PDFJS.version}/legacy/build/pdf.worker.min.js`;\n\nexport default function PDFView({ width }: { width: number }) {\n  const { powerpointBlob } = useSelector((state: RootState) => state.paulyData);\n  const { images, pageNumber } = useSelector(\n    (state: RootState) => state.pdfData,\n  );\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function convertPdfToImages(url: string) {\n    const images: string[] = [];\n    const dataResult = await fetch(url);\n    if (dataResult.ok) {\n      const blob = await dataResult.blob();\n      const file = new Blob([blob], { type: 'application/pdf' });\n      const fileURL = URL.createObjectURL(file);\n      const docInitParams: DocumentInitParameters = { url: fileURL };\n\n      const pdf = await PDFJS.getDocument(docInitParams).promise;\n      const canvas = document.createElement('canvas'); // Fail\n      for (let i = 0; i < pdf.numPages; i += 1) {\n        const page = await pdf.getPage(i + 1);\n        const viewport = page.getViewport({ scale: 1 });\n        const context = canvas.getContext('2d'); // Fail\n        canvas.height = viewport.height; // Fail\n        canvas.width = viewport.width; // Fail\n        if (context !== null) {\n          await page.render({ canvasContext: context, viewport }).promise;\n          images.push(canvas.toDataURL());\n        }\n      }\n      canvas.remove();\n      store.dispatch(pdfDataSlice.actions.setImages(images));\n    }\n  }\n\n  useEffect(() => {\n    convertPdfToImages(powerpointBlob);\n  }, [powerpointBlob]);\n\n  const singleTap = Gesture.Tap().onEnd((_event, success) => {\n    if (success) {\n      if (pageNumber + 1 < images.length) {\n        store.dispatch(pdfDataSlice.actions.increasePageNumber());\n      } else {\n        store.dispatch(pdfDataSlice.actions.setPageNumber(0));\n      }\n    }\n  });\n  const doubleTap = Gesture.Tap()\n    .numberOfTaps(2)\n    .onEnd((_event, success) => {\n      if (success) {\n        if (pageNumber - 1 >= 1) {\n          store.dispatch(pdfDataSlice.actions.decreasePageNumber());\n        } else if (images.length >= 1) {\n          store.dispatch(pdfDataSlice.actions.setPageNumber(images.length - 1));\n        }\n      }\n    });\n\n  const taps = Gesture.Exclusive(doubleTap, singleTap);\n\n  const fling = Gesture.Fling().onEnd(() => {\n    if (pageNumber + 1 < images.length) {\n      store.dispatch(pdfDataSlice.actions.increasePageNumber());\n    } else {\n      store.dispatch(pdfDataSlice.actions.setPageNumber(pageNumber - 1));\n    }\n  });\n\n  const compound = Gesture.Simultaneous(fling, taps);\n\n  useEffect(() => {\n    if (pageNumber < images.length) {\n      Image.getSize(\n        images[pageNumber],\n        (imageMeasureWidth, imageMeasureHeight) => {\n          const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n          setImageHeight(width * heightPerWidth);\n        },\n      );\n    }\n  }, [pageNumber, images, width]);\n\n  return (\n    <>\n      {pageNumber < images.length ? (\n        <GestureDetector gesture={compound}>\n          <Image\n            source={{ uri: images[pageNumber], width }}\n            style={{ borderRadius: 15, width, height: imageHeight }}\n            height={imageHeight}\n            width={width}\n          />\n        </GestureDetector>\n      ) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { Shape, SvgProps } from 'react-native-svg';\nimport {\n  AudioIcon,\n  DocumentIcon,\n  ExcelIcon,\n  FolderIcon,\n  ImageIcon,\n  OneNoteIcon,\n  PDFIcon,\n  PowerpointIcon,\n  VideoIcon,\n  WordIcon,\n} from './Icons';\n\ninterface iconProps {\n  width: number;\n  height: number;\n  mimeType: string;\n  style?: StyleProp<ViewStyle> | undefined;\n  props?: Shape<SvgProps> | undefined;\n}\n\nconst wordTypes = [\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n];\nconst excelTypes = [\n  'application/ms-excel',\n  'application/msexcel',\n  'application/vnd.ms-excel',\n];\nconst powerpointTypes = [\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'application/vnd.ms-powerpoint',\n  'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n  'application/vnd.openxmlformats-officedocument.presentationml.template',\n];\n\nexport default function MimeTypeIcon({\n  width,\n  height,\n  style,\n  props,\n  mimeType,\n}: iconProps) {\n  return (\n    <>\n      {mimeType.split('/')[0] === 'image' ? (\n        <ImageIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] === 'application' ? (\n        <>\n          {wordTypes.includes(mimeType) ? (\n            <WordIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {excelTypes.includes(mimeType) ? (\n            <ExcelIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'application/pdf' ? (\n            <PDFIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {powerpointTypes.includes(mimeType) ? (\n            <PowerpointIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {wordTypes.includes(mimeType) &&\n          excelTypes.includes(mimeType) &&\n          mimeType !== 'application/pdf' &&\n          mimeType !== 'application/vnd.ms-powerpoint' ? (\n            <DocumentIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n        </>\n      ) : null}\n      {mimeType.split('/')[0] === 'audio' ? (\n        <AudioIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] === 'video' ? (\n        <VideoIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType === 'folder' ? (\n        <FolderIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] !== 'image' &&\n      mimeType.split('/')[0] !== 'application' &&\n      mimeType.split('/')[0] !== 'audio' &&\n      mimeType.split('/')[0] !== 'video' &&\n      mimeType !== 'folder' ? (\n        <>\n          {mimeType === 'PowerPoint' ? (\n            <PowerpointIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Word' ? (\n            <WordIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Excel' ? (\n            <ExcelIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Pdf' ? (\n            <PDFIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'OneNote' || mimeType === 'OneNotePage' ? (\n            <OneNoteIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Audio' ? (\n            <AudioIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Video' ? (\n            <VideoIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Image' ? (\n            <ImageIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Folder' ? (\n            <FolderIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType !== 'PowerPoint' &&\n          mimeType !== 'Word' &&\n          mimeType !== 'OneNote' &&\n          mimeType !== 'OneNotePage' &&\n          mimeType !== 'Audio' &&\n          mimeType !== 'Video' &&\n          mimeType !== 'Image' &&\n          mimeType !== 'Folder' ? (\n            <DocumentIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n        </>\n      ) : null}\n    </>\n  );\n}\n","import store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { homepageDataSlice } from '../Redux/reducers/homepageDataReducer';\nimport {\n  getEvent,\n  getSchoolDay,\n  getTimetable,\n  getSchedule,\n} from './calendar/calendarFunctionsGraph';\nimport { Colors, loadingStateEnum, semesters } from '../types';\n\nexport async function getRooms(\n  nextLink?: string,\n  search?: string,\n): Promise<{ result: loadingStateEnum; data?: roomType[]; nextLink?: string }> {\n  const searchFilter = search\n    ? `&$filter=fields/roomName%20eq%20${search}`\n    : ''; // TODO deal with search filter\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.roomListId\n      }/items?expand=fields${searchFilter}`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultArray: roomType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultArray.push({\n        name: data.value[index].fields.roomName,\n        id: data.value[index].fields.roomId,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: resultArray,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getRoom(\n  roomId: string,\n): Promise<{ result: loadingStateEnum; data?: roomType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.roomListId\n    }/items?expand=fields&fields/roomId%20eq%20'${roomId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length === 0) {\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.roomName,\n          id: data.value[0].feilds.ro0mId,\n        },\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getClasses(): Promise<{\n  result: loadingStateEnum;\n  data?: classType[];\n}> {\n  let classQuery: string = `https://graph.microsoft.com/v1.0/me/joinedTeams?$select=id`;\n  const batchDataRequests: { id: string; method: string; url: string }[][] = [\n    [],\n  ];\n  while (classQuery !== undefined) {\n    const classResult = await callMsGraph(classQuery);\n    if (classResult.ok) {\n      const classData = await classResult.json();\n      classQuery = classData['@odata.nextLink'];\n\n      // Batch Request perfroming a get request on each class group\n\n      // Format Data\n      for (let index = 0; index < classData.value.length; index += 1) {\n        batchDataRequests[Math.floor(index / 20)].push({\n          id: (index + 1).toString(),\n          method: 'GET',\n          url: `/groups/${classData.value[index].id}?$select=displayName,id,${\n            store.getState().paulyList.classExtensionId\n          }`,\n        });\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  // Run Queries\n  const batchHeaders = new Headers();\n  batchHeaders.append('Accept', 'application/json');\n  const classes: classType[] = [];\n  for (let index = 0; index < batchDataRequests.length; index += 1) {\n    const batchData = {\n      requests: batchDataRequests[index],\n    };\n    const batchResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/$batch',\n      'POST',\n      JSON.stringify(batchData),\n    );\n    if (batchResult.ok) {\n      const batchResultData = await batchResult.json();\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultData.responses.length;\n        batchIndex += 1\n      ) {\n        if (batchResultData.responses[batchIndex].status === 200) {\n          if (\n            batchResultData.responses[batchIndex].body[\n              store.getState().paulyList.classExtensionId\n            ] !== undefined\n          ) {\n            classes.push({\n              name: batchResultData.responses[batchIndex].body.displayName,\n              id: batchResultData.responses[batchIndex].body.id,\n              periods: JSON.parse(\n                batchResultData.responses[batchIndex].body[\n                  store.getState().paulyList.classExtensionId\n                ].periodData,\n              ),\n              room: {\n                name: '',\n                id: '',\n              },\n              schoolYearId: '',\n              semester: semesters.semesterOne,\n            });\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: classes };\n}\n\nexport async function getClassEvents(\n  scheduleId: string,\n  semester: semesters,\n  schoolYearEventId: string,\n  schoolDay: schoolDayType,\n  date: Date,\n): Promise<{ result: loadingStateEnum; data?: eventType[] }> {\n  const scheduleResult = await getSchedule(scheduleId);\n  const classResult = await getClasses();\n  if (\n    scheduleResult.result === loadingStateEnum.success &&\n    classResult.result === loadingStateEnum.success &&\n    classResult.data !== undefined &&\n    scheduleResult.schedule !== undefined\n  ) {\n    const outputEvents: eventType[] = [];\n    for (let index = 0; index < classResult.data.length; index += 1) {\n      if (\n        classResult.data[index].schoolYearId === schoolYearEventId &&\n        classResult.data[index].semester === semester\n      ) {\n        // This check should never fail\n        if (classResult.data[index].periods.length > schoolDay.order) {\n          // Find Time\n          const period: number =\n            classResult.data[index].periods[schoolDay.order];\n          const periodData = scheduleResult.schedule.periods[period];\n          const startDate: Date = new Date(date.toISOString());\n          startDate.setHours(periodData.startHour);\n          startDate.setMinutes(periodData.startMinute);\n          startDate.setSeconds(0);\n          const endDate: Date = date;\n          endDate.setHours(periodData.endHour);\n          endDate.setMinutes(periodData.endMinute);\n          endDate.setSeconds(0);\n          outputEvents.push({\n            id: classResult.data[index].id,\n            name: classResult.data[index].name,\n            startTime: startDate.toISOString(),\n            endTime: endDate.toISOString(),\n            eventColor: Colors.white,\n            microsoftEvent: false,\n            allDay: false,\n          });\n        }\n      }\n    }\n    outputEvents.sort((a, b) => {\n      return new Date(a.startTime).getTime() - new Date(b.startTime).getTime();\n    });\n    return { result: loadingStateEnum.success, data: outputEvents };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getClassEventsFromDay(\n  date?: Date,\n): Promise<{ result: loadingStateEnum; data?: eventType[] }> {\n  const result = await getSchoolDay(date || new Date());\n  if (\n    result.result === loadingStateEnum.success &&\n    result.event !== undefined &&\n    result.event.paulyEventData !== undefined\n  ) {\n    const outputIds: schoolDayDataCompressedType = JSON.parse(\n      result.event.paulyEventData,\n    );\n    const eventResult = await getEvent(outputIds.schoolYearEventId);\n    if (\n      eventResult.result === loadingStateEnum.success &&\n      eventResult.data !== undefined &&\n      eventResult.data?.paulyEventData !== undefined\n    ) {\n      const timetableResult = await getTimetable(\n        eventResult.data.paulyEventData,\n      );\n      if (\n        timetableResult.result === loadingStateEnum.success &&\n        timetableResult.timetable !== undefined\n      ) {\n        const schoolDay = timetableResult.timetable.days.find(\n          (e: { id: string }) => {\n            return e.id === outputIds.schoolDayId;\n          },\n        );\n        const schedule = timetableResult.timetable.schedules.find(\n          (e: { id: string }) => {\n            return e.id === outputIds.scheduleId;\n          },\n        );\n        const dressCode =\n          timetableResult.timetable.dressCode.dressCodeData.find(\n            (e: { id: string }) => {\n              return e.id === outputIds.dressCodeId;\n            },\n          );\n        const dressCodeIncentive =\n          timetableResult.timetable.dressCode.dressCodeIncentives.find(\n            (e: { id: string }) => {\n              return e.id === outputIds?.dressCodeIncentiveId;\n            },\n          );\n        if (\n          schoolDay !== undefined &&\n          schedule !== undefined &&\n          dressCode !== undefined\n        ) {\n          store.dispatch(\n            homepageDataSlice.actions.setSchoolDayData({\n              schoolDay,\n              schedule,\n              dressCode,\n              semester: outputIds.semester,\n              dressCodeIncentive,\n            }),\n          );\n          if (schedule !== undefined) {\n            const classResult = await getClassEvents(\n              schedule.id,\n              outputIds.semester,\n              outputIds.schoolYearEventId,\n              schoolDay,\n              new Date(result.event.startTime),\n            );\n            if (\n              classResult.result === loadingStateEnum.success &&\n              classResult.data !== undefined\n            ) {\n              if (classResult.data.length >= 1) {\n                const startTimeDate = new Date(classResult.data[0].startTime);\n                const hourTime =\n                  (startTimeDate.getHours() % 12) + 1 <= 9\n                    ? `0${(startTimeDate.getHours() % 12) + 1}`\n                    : (startTimeDate.getHours() % 12) + 1;\n                const monthTime =\n                  startTimeDate.getMinutes() <= 9\n                    ? `0${startTimeDate.getMinutes()}`\n                    : startTimeDate.getMinutes().toString();\n                store.dispatch(\n                  homepageDataSlice.actions.setStartTime(\n                    `${hourTime}:${monthTime}`,\n                  ),\n                );\n              }\n              return {\n                result: loadingStateEnum.success,\n                data: classResult.data,\n              };\n            }\n            return { result: loadingStateEnum.failed };\n          }\n          return { result: loadingStateEnum.failed };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  18 October 2023\n  Pauly\n*/\n\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  Linking,\n  ScrollView,\n  ListRenderItemInfo,\n  Switch,\n  Animated,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport { FlatList } from 'react-native-gesture-handler';\nimport store, { RootState } from '../Redux/store';\nimport getCurrentPaulyData from '../Functions/homepage/getCurrentPaulyData';\nimport {\n  Colors,\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../types';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport getUsersTasks from '../Functions/homepage/getUsersTasks';\nimport ProgressView from '../UI/ProgressView';\nimport getInsightData from '../Functions/homepage/getInsightData';\nimport CustomCheckBox from '../UI/CheckMark/CustomCheckBox';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport { homepageDataSlice } from '../Redux/reducers/homepageDataReducer';\nimport PDFView from '../UI/PDF/PDFView';\nimport BackButton from '../UI/BackButton';\nimport MimeTypeIcon from '../UI/Icons/MimeTypeIcon';\nimport { getClassEventsFromDay } from '../Functions/classesFunctions';\nimport { TrashIcon } from '../UI/Icons/Icons';\n\n// Get Messages\n// Last Chat Message Channels Included\n\n// Pauly\n// Overview Message\n// Powerpoint\n\n// Insights\n// Quick Access To files\n\n// Calendar\n// Calendar Overview\n// Calendar Widget\n// Dress Code\n\n// Tasks\n\n// Wants\n// Assignments (problem is hard to test)\n\nexport default function Notifications() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const { message } = useSelector((state: RootState) => state.paulyData);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    if (siteId !== '') {\n      // Calendar Data\n      getClassEventsFromDay();\n\n      // Insights\n      const insightResult = await getInsightData();\n      dispatch(\n        homepageDataSlice.actions.setTrendingData(insightResult.trendingData),\n      );\n      dispatch(\n        homepageDataSlice.actions.setTrendingState(insightResult.trendingState),\n      );\n      dispatch(homepageDataSlice.actions.setUserData(insightResult.userData));\n      dispatch(homepageDataSlice.actions.setUserState(insightResult.userState));\n\n      // Pauly Data\n      await getCurrentPaulyData();\n\n      // List Data\n      const taskResult = await getUsersTasks();\n      if (\n        taskResult.result === loadingStateEnum.success &&\n        taskResult.data !== undefined\n      ) {\n        dispatch(homepageDataSlice.actions.setUserTasks(taskResult.data));\n      }\n      dispatch(homepageDataSlice.actions.setTaskState(taskResult.result));\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, [siteId]);\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.white,\n        bottom: Colors.white,\n      }),\n    );\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    'Comfortaa-Regular': require('../../assets/fonts/Comfortaa-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      {currentBreakPoint === 0 ? <BackButton to=\"/\" /> : null}\n      <View\n        style={{\n          width,\n          height: height * 0.1,\n          marginTop: currentBreakPoint === 0 ? 10 : 0,\n        }}\n      >\n        <View\n          style={{\n            width: width * 0.9,\n            height: height * 0.07,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 15,\n            backgroundColor: Colors.darkGray,\n            marginLeft: width * 0.05,\n            marginRight: width * 0.05,\n            marginTop: height * 0.015,\n            marginBottom: height * 0.015,\n          }}\n        >\n          <Text\n            style={{ color: Colors.white, fontFamily: 'Comfortaa-Regular' }}\n          >\n            {message}\n          </Text>\n        </View>\n      </View>\n      {currentBreakPoint === 0 ? (\n        <>\n          <WidgetView width={width * 0.9} height={height * 0.3} />\n          <BoardBlock />\n        </>\n      ) : (\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 0.9,\n            marginLeft: width * 0.05,\n          }}\n        >\n          <BoardBlock />\n          <View style={{ marginTop: height * 0.03 }}>\n            <WidgetView width={width * 0.2} height={height * 0.2} />\n          </View>\n        </View>\n      )}\n      <TaskBlock />\n      <InsightsBlock />\n    </ScrollView>\n  );\n}\n\nfunction WidgetView({ width, height }: { width: number; height: number }) {\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { schoolDayData, startTime } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  const dow: string[] = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  return (\n    <View\n      style={{\n        backgroundColor: Colors.maroon,\n        width,\n        height,\n        borderRadius: 15,\n        marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n      }}\n    >\n      <View\n        style={{\n          width,\n          height: height / 3,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white, fontSize: height / 6 }}>\n          {dow[new Date().getDay()]}\n        </Text>\n      </View>\n      {schoolDayData !== undefined ? (\n        <>\n          <View\n            style={{\n              backgroundColor: Colors.darkGray,\n              alignItems: 'center',\n              alignContent: 'center',\n              justifyContent: 'center',\n              width,\n              height: height / 6,\n            }}\n          >\n            <Text style={{ color: Colors.white }}>\n              {schoolDayData?.schedule.descriptiveName}\n            </Text>\n          </View>\n          <View style={{ flexDirection: 'row', height: height / 2 }}>\n            <View\n              style={{\n                height: height * 0.5,\n                width: width * 0.3,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Text\n                style={{\n                  color: Colors.white,\n                  fontWeight: 'bold',\n                  fontSize: height * 0.4,\n                }}\n              >\n                {schoolDayData?.schoolDay.shorthand}\n              </Text>\n            </View>\n            <View\n              style={{\n                height: height * 0.5,\n                width: width * 0.7,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Text style={{ color: Colors.white, fontSize: height / 3 }}>\n                {startTime}\n              </Text>\n            </View>\n          </View>\n        </>\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.darkGray,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            width,\n            height: height / 2,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>No School</Text>\n        </View>\n      )}\n    </View>\n  );\n}\n\nfunction TaskBlock() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { taskState, userTasks, isShowingCompleteTasks } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <View style={{ width }}>\n      <Text\n        style={{\n          fontSize: 24,\n          marginLeft: width * 0.05,\n          marginTop: height * 0.03,\n          marginBottom: height * 0.02,\n        }}\n      >\n        Tasks\n      </Text>\n      <View\n        style={{\n          shadowColor: 'black',\n          width: width * 0.9,\n          marginLeft: width * 0.05,\n          backgroundColor: '#FFFFFF',\n          marginRight: width * 0.05,\n          height: height * 0.5,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ flexDirection: 'row', marginLeft: 10, marginTop: 5 }}>\n          <Text>Show Completed:</Text>\n          <Switch\n            trackColor={{ false: Colors.lightGray, true: Colors.darkGray }}\n            thumbColor={\n              isShowingCompleteTasks ? Colors.maroon : Colors.darkGray\n            }\n            ios_backgroundColor={Colors.lightGray}\n            onValueChange={e => {\n              store.dispatch(\n                homepageDataSlice.actions.setIsShowingCompletedTasks(e),\n              );\n            }}\n            value={isShowingCompleteTasks}\n            style={{ marginLeft: 5 }}\n          />\n        </View>\n        <ScrollView style={{ margin: 10, height: height * 0.5 - 20 }}>\n          {taskState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.5 - 20,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={\n                  width * 0.9 < height * 0.5 - 20\n                    ? width * 0.45\n                    : height * 0.25 - 20\n                }\n                height={\n                  width * 0.9 < height * 0.5 - 20\n                    ? width * 0.45\n                    : height * 0.25 - 20\n                }\n              />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {taskState === loadingStateEnum.success ? (\n                <FlatList\n                  data={userTasks}\n                  renderItem={task => (\n                    <TaskItem task={task} key={`User_Task_${task.item.id}`} />\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nfunction DeleteTask({\n  onDelete,\n}: {\n  onDelete: () => void;\n  e: Animated.AnimatedInterpolation<string | number>;\n}) {\n  return (\n    <Pressable\n      onPress={() => onDelete()}\n      style={{\n        paddingLeft: 10,\n        paddingRight: 10,\n        backgroundColor: Colors.danger,\n      }}\n    >\n      <TrashIcon width={14} height={14} />\n    </Pressable>\n  );\n}\n\nfunction TaskItem({ task }: { task: ListRenderItemInfo<taskType> }) {\n  const [checked, setChecked] = useState<boolean>(\n    task.item.status === taskStatusEnum.completed,\n  );\n  const [updateTaskState, setUpdateTaskState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const { userTasks, isShowingCompleteTasks } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  const [currentText, setCurrentText] = useState(task.item.name);\n  const [mounted, setMounted] = useState(false);\n  const dispatch = useDispatch();\n\n  async function updateTaskStatus(status: taskStatusEnum) {\n    setUpdateTaskState(loadingStateEnum.loading);\n    const data = {\n      status:\n        status === taskStatusEnum.notStarted\n          ? 'notStarted'\n          : status === taskStatusEnum.inProgress\n          ? 'inProgress'\n          : status === taskStatusEnum.completed\n          ? 'completed'\n          : status === taskStatusEnum.waitingOnOthers\n          ? 'waitingOnOthers'\n          : 'deferred',\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const newItem: any = {};\n      Object.assign(newItem, task.item);\n      newItem.status = status;\n      console.log('This is new Item', newItem);\n      dispatch(\n        homepageDataSlice.actions.updateUserTask({\n          index: task.index,\n          task: newItem,\n        }),\n      );\n      setUpdateTaskState(loadingStateEnum.success);\n    } else {\n      setUpdateTaskState(loadingStateEnum.failed);\n    }\n  }\n\n  async function updateText() {\n    const data = {\n      title: userTasks[task.index].name,\n    };\n    if (task.item.excess === false) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setUpdateTaskState(loadingStateEnum.success);\n      } else {\n        setUpdateTaskState(loadingStateEnum.failed);\n      }\n    } else {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        const data = await result.json();\n        dispatch(\n          homepageDataSlice.actions.updateUserTask({\n            task: {\n              name: task.item.name,\n              id: data.id,\n              importance:\n                data.importance === 'high'\n                  ? taskImportanceEnum.high\n                  : data.importance === 'low'\n                  ? taskImportanceEnum.low\n                  : taskImportanceEnum.normal,\n              status:\n                data.status === 'notStarted'\n                  ? taskStatusEnum.notStarted\n                  : data.status === 'inProgress'\n                  ? taskStatusEnum.inProgress\n                  : data.status === 'completed'\n                  ? taskStatusEnum.completed\n                  : data.status === 'waitingOnOthers'\n                  ? taskStatusEnum.waitingOnOthers\n                  : taskStatusEnum.deferred,\n              excess: false,\n            },\n            index: task.index,\n          }),\n        );\n        dispatch(\n          homepageDataSlice.actions.unshiftUserTask({\n            name: '',\n            importance: taskImportanceEnum.normal,\n            id: '',\n            status: taskStatusEnum.notStarted,\n            excess: true,\n          }),\n        );\n        setUpdateTaskState(loadingStateEnum.success);\n      } else {\n        setUpdateTaskState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function deleteTask() {\n    if (task !== undefined) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        const index = store\n          .getState()\n          .homepageData.userTasks.findIndex(e => e.id === task.item.id);\n        if (index !== -1) {\n          dispatch(homepageDataSlice.actions.popUserTask(index));\n        }\n      } else {\n      }\n    }\n  }\n\n  async function checkUpdateText() {\n    setUpdateTaskState(loadingStateEnum.loading);\n    const taskNameSave =\n      store.getState().homepageData.userTasks[task.index].name;\n    setTimeout(() => {\n      if (\n        store.getState().homepageData.userTasks[task.index].name ===\n        taskNameSave\n      ) {\n        updateText();\n      }\n    }, 1500);\n  }\n\n  useEffect(() => {\n    if (mounted) {\n      checkUpdateText();\n    } else {\n      setMounted(true);\n    }\n  }, [currentText]);\n\n  return (\n    <>\n      {isShowingCompleteTasks ||\n      task.item.status !== taskStatusEnum.completed ? (\n        <Swipeable\n          renderRightActions={e => (\n            <>\n              {task.item.excess ? null : (\n                <DeleteTask e={e} onDelete={() => deleteTask()} />\n              )}\n            </>\n          )}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              width: width * 0.9,\n              paddingTop: 5,\n              paddingBottom: 5,\n            }}\n          >\n            <Pressable\n              onPress={() => {\n                setChecked(!checked);\n                if (!checked) {\n                  updateTaskStatus(taskStatusEnum.completed);\n                } else {\n                  updateTaskStatus(taskStatusEnum.notStarted);\n                }\n              }}\n            >\n              <CustomCheckBox\n                checked={checked}\n                checkMarkColor=\"blue\"\n                strokeDasharray={task.item.excess ? 5 : undefined}\n                height={20}\n                width={20}\n              />\n            </Pressable>\n            <View\n              style={{\n                justifyContent: 'center',\n                alignItems: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <TextInput\n                value={task.item.name}\n                onChangeText={e => {\n                  const newTask: taskType = {\n                    name: task.item.name,\n                    id: task.item.id,\n                    importance: task.item.importance,\n                    status: task.item.status,\n                    excess: task.item.excess,\n                  };\n                  newTask.name = e;\n                  dispatch(\n                    homepageDataSlice.actions.updateUserTask({\n                      task: newTask,\n                      index: task.index,\n                    }),\n                  );\n                  setCurrentText(e);\n                }}\n                multiline\n                numberOfLines={1}\n                style={{ width: width * 0.9 - 40 }}\n              />\n            </View>\n          </View>\n        </Swipeable>\n      ) : null}\n    </>\n  );\n}\n\nfunction BoardBlock() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { powerpointBlob, paulyDataState } = useSelector(\n    (state: RootState) => state.paulyData,\n  );\n  return (\n    <>\n      {paulyDataState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n            height: height * 0.3,\n            borderRadius: 15,\n            marginTop: height * 0.03,\n            marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n            marginRight: width * 0.05,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: '#FFFFFF',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n          }}\n        >\n          <ProgressView width={100} height={100} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {paulyDataState === loadingStateEnum.success ? (\n            <>\n              {powerpointBlob !== '' ? (\n                <View\n                  style={{\n                    width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n                    borderRadius: 15,\n                    marginTop: height * 0.03,\n                    marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                    marginRight:\n                      currentBreakPoint === 0 ? width * 0.05 : width * 0.03,\n                    backgroundColor: '#FFFFFF',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.8,\n                    shadowRadius: 10,\n                  }}\n                >\n                  <PDFView\n                    width={currentBreakPoint === 0 ? width * 0.9 : width * 0.7}\n                  />\n                </View>\n              ) : (\n                <View\n                  style={{\n                    width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n                    height: height * 0.3,\n                    marginTop: height * 0.03,\n                    marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                    marginRight:\n                      currentBreakPoint === 0 ? width * 0.05 : width * 0.03,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    backgroundColor: '#FFFFFF',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.8,\n                    shadowRadius: 10,\n                    borderRadius: 15,\n                  }}\n                >\n                  <ProgressView width={100} height={100} />\n                  <Text>Loading</Text>\n                </View>\n              )}\n            </>\n          ) : (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.3,\n                marginTop: height * 0.03,\n                marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                backgroundColor: '#FFFFFF',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.8,\n                shadowRadius: 10,\n                borderRadius: 15,\n              }}\n            >\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction InsightsBlock() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  return (\n    <>\n      {currentBreakPoint <= 0 ? (\n        <>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Recent Files\n          </Text>\n          <View\n            style={{\n              marginLeft: width * 0.05,\n              marginRight: width * 0.05,\n              width: width * 0.9,\n              height: height * 0.3,\n              backgroundColor: '#FFFFFF',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n              overflow: 'scroll',\n            }}\n          >\n            <TrendingFiles />\n          </View>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Popular Files\n          </Text>\n          <View\n            style={{\n              marginLeft: width * 0.05,\n              marginRight: width * 0.05,\n              width: width * 0.9,\n              height: height * 0.3,\n              backgroundColor: '#FFFFFF',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n              marginBottom: height * 0.05,\n              overflow: 'scroll',\n            }}\n          >\n            <PopularFiles />\n          </View>\n        </>\n      ) : (\n        <>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Files\n          </Text>\n          <View\n            style={{\n              width: width * 0.9,\n              flexDirection: 'row',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              marginTop: height * 0.025,\n              marginBottom: height * 0.025,\n              backgroundColor: '#FFFFFF',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ width: width * 0.45, overflow: 'scroll' }}>\n              <TrendingFiles />\n            </View>\n            <View style={{ width: width * 0.45, overflow: 'visible' }}>\n              <PopularFiles />\n            </View>\n          </View>\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PopularFiles() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { trendingData, trendingState } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <>\n      {trendingState === loadingStateEnum.loading ? (\n        <View>\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <ScrollView style={{ height: height * 0.3 }}>\n          {trendingState === loadingStateEnum.success ? (\n            <>\n              {trendingData.map(data => (\n                <Pressable\n                  key={`User_Insight_${data.id}`}\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(data.webUrl);\n                  }}\n                >\n                  <View style={{ margin: 10, flexDirection: 'row' }}>\n                    <MimeTypeIcon width={14} height={14} mimeType={data.type} />\n                    <Text>{data.title}</Text>\n                  </View>\n                </Pressable>\n              ))}\n            </>\n          ) : (\n            <Text>Failed To Load</Text>\n          )}\n        </ScrollView>\n      )}\n    </>\n  );\n}\n\nfunction TrendingFiles() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { userState, userData } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <View style={{ height: height * 0.3, width: width * 0.5 }}>\n      <ScrollView style={{ height: height * 0.3 }}>\n        {userState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {userState === loadingStateEnum.success ? (\n              <View>\n                {userData.map(data => (\n                  <Pressable\n                    key={`User_Insight_${data.id}`}\n                    style={{ flexDirection: 'row' }}\n                    onPress={() => {\n                      Linking.openURL(data.webUrl);\n                    }}\n                  >\n                    <View style={{ margin: 10, flexDirection: 'row' }}>\n                      <MimeTypeIcon\n                        width={14}\n                        height={14}\n                        mimeType={data.type}\n                      />\n                      <Text>{data.title}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n","import { loadingStateEnum, resourceMode, resourceResponce } from '../types';\nimport store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { resourcesSlice } from '../Redux/reducers/resourcesReducer';\nimport { raindropToken } from '../PaulyConfig';\n\nexport function convertResourceModeString(convert?: resourceMode): string {\n  if (convert === resourceMode.sports) {\n    return 'sports';\n  }\n  if (convert === resourceMode.advancement) {\n    return 'advancement';\n  }\n  if (convert === resourceMode.schoolEvents) {\n    return 'schoolEvents';\n  }\n  if (convert === resourceMode.annoucments) {\n    return 'annoucments';\n  }\n  if (convert === resourceMode.fitness) {\n    return 'fitness';\n  }\n  return 'files';\n}\n\nasync function getResourceFollows() {\n  let nextLink = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.resourceListId\n  }/items?expand=fields($select=resourceGroupId,resourceConversationId)&$select=id`;\n  while (nextLink !== '') {\n    const result = await callMsGraph(nextLink);\n    if (result.ok) {\n      const data = await result.json();\n      if (data['@odata.nextLink'] !== undefined) {\n        nextLink = data['@odata.nextLink'];\n      } else {\n        nextLink = '';\n      }\n      const output: resourceFollowType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        output.push({\n          teamId: data.value[index].fields.resourceGroupId,\n          channelId: data.value[index].fields.resourceConversationId,\n        });\n      }\n      store.dispatch(resourcesSlice.actions.setResourceFollow(output));\n    } else {\n      store.dispatch(\n        resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n      );\n      return;\n    }\n  }\n}\n\nasync function getAttachments(teamId: string, channelId: string, attachments: any[]): Promise<resourceType[]> {\n  const attachmentsOut: resourceType[] = [];\n  for (\n    let attachmentIndex = 0;\n    attachmentIndex <\n    attachments.length;\n    attachmentIndex += 1\n  ) {\n    if (attachments[attachmentIndex].contentType === 'reference') {\n      const attachmentResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/filesFolder`,\n      );\n      if (attachmentResult.ok) {\n        const attachmentData = await attachmentResult.json();\n        const attachmentGetResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/drives/${attachmentData.parentReference.driveId}/items/${attachments[attachmentIndex].id}`,\n        );\n        if (attachmentGetResult.ok) {\n          const attachmentGetResultData =\n            await attachmentGetResult.json();\n          attachments.push({\n            webUrl: attachmentGetResultData.webUrl,\n            id: attachmentGetResultData.id,\n            title: attachmentGetResultData.name,\n            type: attachmentGetResultData.file.mimeType,\n          });\n        }\n      }\n    }\n  }\n  return attachmentsOut;\n}\n\nexport async function getResources(category?: resourceMode) {\n  store.dispatch(\n    resourcesSlice.actions.setResourcesState(loadingStateEnum.loading),\n  );\n  await getResourceFollows();\n  const categoryString = convertResourceModeString(category);\n  const categoryFilter = category\n    ? `&$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.resourceExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.resourceExtensionId\n      }'%20and%20ep/value%20eq%20'${categoryString}')`\n    : '';\n  const output: resourceDataType[] = [];\n  const batchDataRequests: { id: string; method: string; url: string }[][] = [\n    [],\n  ];\n  let batchCount = 0;\n  for (\n    let index = 0;\n    index < store.getState().resources.resourceFollow.length;\n    index += 1\n  ) {\n    // resourceGroupId\n    batchDataRequests[batchCount].push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/teams/${\n        store.getState().resources.resourceFollow[index].teamId\n      }/channels/${\n        store.getState().resources.resourceFollow[index].channelId\n      }/messages${categoryFilter}`,\n    });\n    if (store.getState().resources.resourceFollow.length % 20 === 0) {\n      batchDataRequests.push([]);\n      batchCount += 1;\n    }\n  }\n  for (let index = 0; index < batchDataRequests.length; index += 1) {\n    const batchData = {\n      requests: batchDataRequests[index],\n    };\n    if (batchDataRequests[index].length !== 0) {\n      const resourceRsp = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (resourceRsp.ok) {\n        const resourceResponceData = await resourceRsp.json();\n        for (\n          let responceIndex = 0;\n          responceIndex < resourceResponceData.responses.length;\n          responceIndex += 1\n        ) {\n          if (resourceResponceData.responses[responceIndex].status === 200) {\n            const resourceResponceDataBody = resourceResponceData.responses[responceIndex].body;\n            for (\n              let dataIndex = 0;\n              dataIndex <\n              resourceResponceDataBody.value.length;\n              dataIndex += 1\n            ) {\n              if (\n                resourceResponceData.responses[responceIndex].body.value[\n                  dataIndex\n                ].body.content !== '<systemEventMessage/>'\n              ) {\n                const attachments = await getAttachments(resourceResponceDataBody.value[dataIndex].channelIdentity.teamId, resourceResponceDataBody.value[dataIndex].channelIdentity.channelId, resourceResponceDataBody.value[dataIndex].attachments)\n                const outputData: resourceDataType = {\n                  teamId:\n                    store.getState().resources.resourceFollow[\n                      parseInt(\n                        resourceResponceData.responses[responceIndex].id,\n                      ) - 1\n                    ].teamId,\n                  conversationId:\n                    store.getState().resources.resourceFollow[\n                      parseInt(\n                        resourceResponceData.responses[responceIndex].id,\n                      ) - 1\n                    ].channelId,\n                  id: resourceResponceData.responses[responceIndex].body.value[\n                    dataIndex\n                  ].id,\n                  body: resourceResponceData.responses[responceIndex].body\n                    .value[dataIndex].body.content,\n                  html:\n                    resourceResponceData.responses[responceIndex].body.value[\n                      dataIndex\n                    ].body.contentType === 'html',\n                  attachments: attachments.length >= 1 ? attachments : undefined,\n                };\n                output.push(outputData);\n              }\n            }\n          }\n        }\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n        return;\n      }\n    }\n  }\n  store.dispatch(\n    resourcesSlice.actions.setResources({\n      resources: output,\n      loadingState: loadingStateEnum.success,\n    }),\n  );\n}\n\nexport async function getResourcesSearch(search: string) {\n  store.dispatch(\n    resourcesSlice.actions.setResourcesState(loadingStateEnum.loading),\n  );\n  const searchPayload = {\n    requests: [\n      {\n        entityTypes: ['chatMessage'],\n        query: {\n          queryString: search,\n        },\n        from: 0,\n        size: 15,\n        enableTopResults: true,\n      },\n    ],\n  };\n  const searchResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/search/query',\n    'POST',\n    JSON.stringify(searchPayload),\n  );\n  if (searchResult.ok) {\n    const searchData = await searchResult.json();\n    const batchDataRequests: { id: string; method: string; url: string }[] = [];\n    if (searchData.value.length === 1) {\n      if (searchData.value[0].hitsContainers.length === 1) {\n        for (\n          let index = 0;\n          index < searchData.value[0].hitsContainers[0].hits.length;\n          index += 1\n        ) {\n          if (\n            searchData.value[0].hitsContainers[0].hits[index].resource\n              .channelIdentity !== undefined\n          ) {\n            const resourceIndex = store\n              .getState()\n              .resources.resourceFollow.findIndex(e => {\n                return (\n                  e.channelId ===\n                  searchData.value[0].hitsContainers[0].hits[index].resource\n                    .channelIdentity.channelId\n                );\n              });\n            if (resourceIndex !== -1) {\n              batchDataRequests.push({\n                id: batchDataRequests.length.toString() + 1,\n                method: 'GET',\n                url: `/teams/${searchData.value[0].hitsContainers[0].hits[index].resource.channelIdentity.teamId}/channels/${searchData.value[0].hitsContainers[0].hits[index].resource.channelIdentity.channelId}/messages/${searchData.value[0].hitsContainers[0].hits[index].resource.id}`,\n              });\n            } else {\n              store.dispatch(\n                resourcesSlice.actions.setResourcesState(\n                  loadingStateEnum.failed,\n                ),\n              );\n              return;\n            }\n          }\n        }\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n        return;\n      }\n\n      const batchData = {\n        requests: batchDataRequests,\n      };\n      const batchResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (batchResult.ok) {\n        const batchResultData = await batchResult.json();\n        const outputData: resourceDataType[] = [];\n        for (\n          let batchIndex = 0;\n          batchIndex < batchResultData.responses.length;\n          batchIndex += 1\n        ) {\n          if (batchResultData.responses[batchIndex].status === 200) {\n            // TO DO fix ok code\n            console.log(batchResultData.responses[batchIndex].body);\n            outputData.push({\n              teamId:\n                batchResultData.responses[batchIndex].body.channelIdentity\n                  .teamId,\n              conversationId:\n                batchResultData.responses[batchIndex].body.channelIdentity\n                  .channelId,\n              id: batchResultData.responses[batchIndex].body.id,\n              body: batchResultData.responses[batchIndex].body.body.content,\n              html:\n                batchResultData.responses[batchIndex].body.body.contentType ===\n                'html',\n            });\n          } else {\n            store.dispatch(\n              resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n            );\n            return;\n          }\n        }\n        store.dispatch(\n          resourcesSlice.actions.setResources({\n            resources: outputData,\n            loadingState: loadingStateEnum.success,\n          }),\n        );\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n      }\n    } else {\n      store.dispatch(\n        resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    store.dispatch(\n      resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n    );\n  }\n}\n\nexport default async function getResource(\n  groupId: string,\n  conversationId: string,\n): Promise<{ result: resourceResponce; itemId?: string }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.resourceListId\n    }/items?expand=fields&$filter=fields/resourceGroupId%20eq%20'${groupId}'%20and%20fields/resourceConversationId%20eq%20'${conversationId}'`,\n  );\n  if (!result.ok) {\n    return { result: resourceResponce.failed };\n  }\n  const data = await result.json();\n  if (data.value.length === 1) {\n    return { result: resourceResponce.found, itemId: data.value[0].id };\n  }\n  if (data.value.length === 0) {\n    return { result: resourceResponce.notFound };\n  }\n  return { result: resourceResponce.failed };\n}\n\n\nexport async function getScholarships(): Promise<{result: loadingStateEnum.failed} | {result: loadingStateEnum.success, data: scholarship[]}> {\n  //https://developer.raindrop.io/v1/authentication/token\n  //https://developer.raindrop.io/v1/raindrops/multiple\n  const result = await fetch('https://api.raindrop.io/rest/v1/raindrops/37695900', {\n    headers: {\n      \"Authorization\":`Bearer ${raindropToken}`\n    }\n  })\n  if (result.ok) {\n    const data = await result.json()\n    let scholarships: scholarship[] = []\n    for (let index = 0; index < data['items'].length; index += 1) {\n      scholarships.push({\n        title: data['items'][index]['title'],\n        note: data['items'][index]['note'],\n        link: data['items'][index]['link'],\n        cover: data['items'][index]['cover']\n      })\n    }\n    return {result: loadingStateEnum.success, data: scholarships}\n  } else {\n    return {result: loadingStateEnum.failed}\n  }\n}\n\nexport async function getNewsPosts(nextLink?: string|undefined): Promise<{result: loadingStateEnum.failed} | {result: loadingStateEnum.success, data: newsPost[], nextLink?: string|undefined}> {\n  const result = await fetch(`https://public-api.wordpress.com/rest/v1.1/sites/thecrusadernews.ca/posts${(nextLink !== undefined) ? `?${nextLink}`:''}`);\n  if (result.ok) {\n    const data = await result.json();\n    var outputPosts: newsPost[] = [];\n    for (var index = 0; index < data['posts'].length; index += 1) {\n      outputPosts.push({\n        title: data['posts'][index]['title'],\n        excerpt: data['posts'][index]['excerpt'],\n        content: data['posts'][index]['content'],\n        id: data['posts'][index]['id']\n      })\n    }\n    return {result: loadingStateEnum.success, data: outputPosts, nextLink: data['meta']['next_page']}\n  } else {\n    return {result: loadingStateEnum.failed}\n  }\n}","import { View, Text, FlatList, Pressable } from 'react-native'\nimport React, { useEffect, useState } from 'react'\nimport { Colors, loadingStateEnum } from '../types'\nimport ProgressView from '../UI/ProgressView';\nimport WebViewCross from '../UI/WebViewCross';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../Redux/store';\nimport { CloseIcon } from '../UI/Icons/Icons';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { getNewsPosts } from '../Functions/getResources';\n\nexport default function ResourcesNews({isHoverPicker}:{isHoverPicker: boolean}) {\n  const [posts, setPosts] = useState<newsPost[]>([]);\n  const [postState, setPostState] = useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [selectedPost, setSelectedPost] = useState<newsPost|undefined>(undefined);\n  const { width, height } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [nextLink, setNextLink] = useState<undefined | string>(undefined)\n\n  async function loadArticles() {\n    const result = await getNewsPosts(nextLink);\n    if (result.result === loadingStateEnum.success) {\n      setPosts([...posts, ...result.data])\n      setNextLink(result.nextLink)\n      setPostState(loadingStateEnum.success);\n    } else {\n      setPostState(loadingStateEnum.failed);\n    };\n  };\n\n  useEffect(() => {\n    loadArticles();\n  }, []);\n\n  return (\n    <>\n      { (selectedPost !== undefined) ?\n        <ScrollView style={{width: width, height: isHoverPicker ? height * 0.75 : height * 0.8, backgroundColor: Colors.lightGray}}>\n          <Pressable onPress={() => {setSelectedPost(undefined)}}>\n            <CloseIcon width={14} height={14}/>\n          </Pressable>\n          <Text>{selectedPost.title}</Text>\n          <WebViewCross html={selectedPost.content} width={width* 0.9}/>\n        </ScrollView>:\n        <>\n          { (postState === loadingStateEnum.loading) ?\n            <View style={{width: width, height: isHoverPicker ? height * 0.75 : height * 0.8, alignItems: 'center', alignContent: 'center', justifyContent: 'center', backgroundColor: Colors.lightGray}}>\n              <ProgressView width={14} height={14}/>\n              <Text>Loading</Text>\n            </View>:\n            <>\n              { (postState === loadingStateEnum.success) ?\n                <FlatList \n                  data={posts}\n                  renderItem={(post) => (\n                    <Pressable onPress={() => {setSelectedPost(post.item)}} style={{backgroundColor: Colors.white, borderRadius: 15, marginLeft: 10, marginRight: 10, margin: 5}}>\n                      <Text style={{marginLeft: 10, marginTop: 5}}>{post.item.title}</Text>\n                      <WebViewCross style={{marginTop: 2}} width={width * 0.6} html={post.item.excerpt}/>\n                    </Pressable>\n                  )}\n                  onEndReached={() => {\n                    if (nextLink !== undefined) {\n                      loadArticles()\n                    }\n                  }}\n                  style={{width: width, height: isHoverPicker ? height * 0.75 : height * 0.8, backgroundColor: Colors.lightGray}}\n                />:\n                <View style={{width: width, height: isHoverPicker ? height * 0.75 : height * 0.8, backgroundColor: Colors.lightGray}}>\n                  <Text>Failed to load</Text>\n                </View>\n              }\n            </>\n          }\n        </>\n      }\n    </>\n  )\n}","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  Resources.tsx\n  This is the main component for the resources section of pauly.\n  See README.md for more information about the resources section.\n*/\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts } from 'expo-font';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  TextInput,\n  Platform,\n  Pressable,\n  Linking,\n  FlatList,\n  ListRenderItemInfo,\n  Image\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport store, { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport { resourcesSlice } from '../Redux/reducers/resourcesReducer';\nimport createUUID, { getTextState } from '../Functions/ultility/createUUID';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport {\n  convertResourceModeString,\n  getResources,\n  getResourcesSearch,\n  getScholarships,\n} from '../Functions/getResources';\nimport { CloseIcon, SearchIcon } from '../UI/Icons/Icons';\nimport WebViewCross from '../UI/WebViewCross';\nimport BackButton from '../UI/BackButton';\nimport ProgressView from '../UI/ProgressView';\nimport MimeTypeIcon from '../UI/Icons/MimeTypeIcon';\nimport { Colors, loadingStateEnum, resourceMode } from '../types';\nimport ResourcesNews from './ResourcesNews';\n\n// Resources\n// -> Sports\n// -> Advancement Board\n// -> Schedule Annoucments\n// -> School Events\n// -> Annoucments\n// -> News (special from crusader news weebly)\n\nfunction PickerPiece({\n  text,\n  item,\n  isHoverPicker,\n  setIsHoverPicker,\n}: {\n  text: string;\n  item: resourceMode;\n  isHoverPicker: boolean;\n  setIsHoverPicker: (item: boolean) => void;\n}) {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { selectedResourceMode } = useSelector(\n    (state: RootState) => state.resources,\n  );\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  return (\n    <Pressable\n      onPress={() => {\n        dispatch(resourcesSlice.actions.setSelectedResourceMode(item));\n      }}\n      onHoverIn={() => {\n        setIsHoverPicker(true);\n        setIsSelected(true);\n      }}\n      onHoverOut={() => setIsSelected(false)}\n      style={{\n        height: isHoverPicker ? height * 0.1 : height * 0.05,\n        width: isSelected\n          ? currentBreakPoint >= 2\n            ? width * 0.3\n            : width * 0.6\n          : currentBreakPoint >= 2\n          ? width * 0.2\n          : width * 0.4,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.white,\n      }}\n    >\n      <View\n        style={{\n          height: isHoverPicker ? height * 0.06 : height * 0.03,\n          width: isSelected\n            ? currentBreakPoint >= 2\n              ? width * 0.28\n              : width * 0.46\n            : currentBreakPoint >= 2\n            ? width * 0.18\n            : width * 0.36,\n          marginLeft: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          marginRight: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          backgroundColor: Colors.darkGray,\n          borderWidth: item !== selectedResourceMode ? 0 : 2,\n          borderColor: 'black',\n          borderRadius: 15,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white }}>{text}</Text>\n      </View>\n    </Pressable>\n  );\n}\n\nfunction checkIfResourceDataJustAttachment(body: string): boolean {\n  if (body.length === 67) {\n    const start = body.slice(0, 15);\n    const end = body.slice(53, 67);\n    if (start === '<attachment id=' && end === '></attachment>') {\n      return false;\n    }\n    return true;\n  }\n  return true;\n}\n\nfunction ResourceBlock({resource, setIsShowingCategoryView, setSelectedPost}:{resource:  ListRenderItemInfo<resourceDataType>, setIsShowingCategoryView: (item: boolean) => void, setSelectedPost: (item: { teamId: string; conversationId: string; messageId: string }) => void}) {\n  const { height, width } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  return (\n    <View>\n      {isGovernmentMode ? (\n        <Pressable\n          onPress={() => {\n            setIsShowingCategoryView(true);\n            setSelectedPost({\n              teamId: resource.item.teamId,\n              conversationId: resource.item.conversationId,\n              messageId: resource.item.id,\n            });\n          }}\n          style={{\n            width: width * 0.8,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            backgroundColor: Colors.white,\n            borderRadius: 15,\n            marginBottom: height * 0.01,\n          }}\n        >\n          {resource.item.body !== '' &&\n          checkIfResourceDataJustAttachment(resource.item.body) ? (\n            <WebViewCross\n              width={width * 0.8 - 20}\n              html={\n                resource.item.html\n                  ? resource.item.body\n                  : `<div><div>${resource.item.body}</div></div>`\n              }\n            />\n          ) : null}\n          {resource.item.attachments !== undefined ? (\n            <View\n              style={{\n                marginLeft: 10,\n                marginBottom: 10,\n                marginRight: 10,\n                marginTop:\n                  resource.item.body === '' ||\n                  !checkIfResourceDataJustAttachment(\n                    resource.item.body,\n                  )\n                    ? 10\n                    : 0,\n                overflow: 'scroll',\n              }}\n            >\n              {resource.item.attachments?.map(attachment => (\n                <Pressable\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(attachment.webUrl);\n                  }}\n                >\n                  <MimeTypeIcon\n                    width={14}\n                    height={14}\n                    mimeType={attachment.type}\n                  />\n                  <Text>{attachment.title}</Text>\n                </Pressable>\n              ))}\n            </View>\n          ) : null}\n        </Pressable>\n      ) : (\n        <View\n          style={{\n            width: width * 0.8,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            backgroundColor: Colors.white,\n            borderRadius: 15,\n            marginBottom: height * 0.01,\n          }}\n        >\n          {resource.item.body !== '' &&\n          checkIfResourceDataJustAttachment(resource.item.body) ? (\n            <WebViewCross\n              width={width * 0.8 - 20}\n              html={\n                resource.item.html\n                  ? resource.item.body\n                  : `<div><div>${resource.item.body}</div></div>`\n              }\n            />\n          ) : null}\n          {resource.item.attachments !== undefined ? (\n            <View\n              style={{\n                marginLeft: 10,\n                marginBottom: 10,\n                marginRight: 10,\n                marginTop:\n                  resource.item.body === '' ||\n                  !checkIfResourceDataJustAttachment(\n                    resource.item.body,\n                  )\n                    ? 10\n                    : 0,\n                overflow: 'scroll',\n              }}\n            >\n              {resource.item.attachments.map(attachment => (\n                <Pressable\n                  key={attachment.id}\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(attachment.webUrl);\n                  }}\n                >\n                  <MimeTypeIcon\n                    width={14}\n                    height={14}\n                    mimeType={attachment.type}\n                  />\n                  <Text>{attachment.title}</Text>\n                </Pressable>\n              ))}\n            </View>\n          ) : null}\n        </View>\n      )}\n    </View>\n  )\n}\n\nfunction ScholarshipBlock({item}:{item: ListRenderItemInfo<scholarship>}) {\n  const { width } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [height, setHeight] = useState<number>(0);\n  useEffect(() => {\n    Image.getSize(item.item.cover, (imgWidth, imgHeight) => {const aspect = imgWidth / imgHeight; setHeight((width-10)/aspect)})\n  }, [])\n  return (\n    <Pressable onPress={() => {Linking.openURL(item.item.link)}} style={{margin: 5, borderRadius: 15, overflow: 'hidden', backgroundColor: Colors.white}}>\n      <Image source={{uri: item.item.cover}} style={{width: (width - 10), height: height}}/>\n      <Text style={{fontSize: 16, margin: 5, marginLeft: 10}}>{item.item.title}</Text>\n      <Text style={{marginBottom: 10, margin: 10}}>{item.item.note}</Text>\n    </Pressable>\n  )\n}\n\nfunction ResourceScholarships({isHoverPicker}:{isHoverPicker: boolean}) {\n  const { height, width } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [scholarState, setScholarState] = useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [scholarships, setScholarships] = useState<scholarship[]>([])\n  \n\n  async function loadData() {\n    const result = await getScholarships()\n    if (result.result === loadingStateEnum.success) {\n      setScholarships(result.data);\n      setScholarState(loadingStateEnum.success);\n    } else {\n      setScholarState(loadingStateEnum.failed)\n    }\n  }\n\n  useEffect(() => {\n    loadData()\n  }, [])\n\n  return (\n    <>\n      { (scholarState === loadingStateEnum.loading) ?\n        <View style={{\n          height: isHoverPicker ? height * 0.75 : height * 0.8,\n          width: width,\n          backgroundColor: Colors.lightGray\n        }}>\n          <ProgressView width={14} height={14}/>\n          <Text>Loading</Text>\n        </View>:\n        <>\n          { (scholarState === loadingStateEnum.success) ?\n            <FlatList\n              data={scholarships}\n              renderItem={(item) => (\n                <ScholarshipBlock item={item} />\n              )}\n              style={{\n                height: isHoverPicker ? height * 0.75 : height * 0.8,\n                width: width,\n                backgroundColor: Colors.lightGray\n              }}\n            />:\n            <View style={{\n              height: isHoverPicker ? height * 0.75 : height * 0.8,\n              width: width,\n              backgroundColor: Colors.lightGray\n            }}>\n              <Text>Failed</Text>\n            </View>\n\n          }\n        </>\n      }\n    </>\n  )\n}\n\nexport default function Resources() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { resources, loadingState, selectedResourceMode } = useSelector(\n    (state: RootState) => state.resources,\n  );\n  const [isHoverPicker, setIsHoverPicker] = useState<boolean>(false);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const [isShowingCategoryView, setIsShowingCategoryView] =\n    useState<boolean>(false);\n  const [selectedPost, setSelectedPost] = useState<\n    undefined | { teamId: string; conversationId: string; messageId: string }\n  >(undefined);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    getResources(selectedResourceMode);\n  }, [selectedResourceMode]);\n\n  // Fonts\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ height, width }}>\n        <View\n          style={{\n            height: height * 0.1,\n            width,\n            backgroundColor: Colors.darkGray,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n          <Text style={{ fontFamily: 'BukhariScript', color: Colors.white }}>\n            Resources\n          </Text>\n        </View>\n        <SearchBox />\n        <View\n          style={{\n            width,\n            height: height * 0.05,\n            backgroundColor: Colors.lightGray,\n          }}\n        />\n        <>\n         { (selectedResourceMode === resourceMode.news) ?\n          <ResourcesNews isHoverPicker={isHoverPicker}/>:\n          <>\n            { (selectedResourceMode === resourceMode.scholarships) ?\n              <ResourceScholarships isHoverPicker={isHoverPicker} />:\n              <View\n                style={{\n                  height: isHoverPicker ? height * 0.75 : height * 0.8,\n                  width: width,\n                  backgroundColor: Colors.lightGray,\n                }}\n              >\n                <>\n                  {loadingState === loadingStateEnum.loading ? (\n                    <View\n                      style={{\n                        width,\n                        height: isHoverPicker ? height * 0.75 : height * 0.8,\n                        alignContent: 'center',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                      }}\n                    >\n                      <ProgressView\n                        width={width < height ? width * 0.05 : height * 0.05}\n                        height={width < height ? width * 0.05 : height * 0.05}\n                      />\n                      <Text>Loading</Text>\n                    </View>\n                  ) : (\n                    <>\n                      {loadingState === loadingStateEnum.success ? (\n                        <>\n                          <FlatList \n                            data={resources}\n                            renderItem={(resource) => <ResourceBlock resource={resource} key={resource.item.id} setIsShowingCategoryView={setIsShowingCategoryView} setSelectedPost={setSelectedPost}/>}\n                          />\n                        </>\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </>\n                  )}\n                </>\n              </View>\n            }\n          </>\n          \n         }\n        </>\n        <Pressable\n          style={{ height: isHoverPicker ? height * 0.1 : height * 0.05 }}\n          onHoverIn={() => {\n            setIsHoverPicker(true);\n          }}\n          onHoverOut={() => {\n            setIsHoverPicker(false);\n          }}\n        >\n          <ScrollView\n            horizontal\n            style={{\n              height: isHoverPicker ? height * 0.1 : height * 0.05,\n              width,\n              backgroundColor: Colors.white,\n            }}\n            showsHorizontalScrollIndicator={false}\n          >\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Home\"\n              item={resourceMode.home}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Sports\"\n              item={resourceMode.sports}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Advancement\"\n              item={resourceMode.advancement}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"School Events\"\n              item={resourceMode.schoolEvents}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Annoucments\"\n              item={resourceMode.annoucments}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Fitness\"\n              item={resourceMode.fitness}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Files\"\n              item={resourceMode.files}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Crusader News\"\n              item={resourceMode.news}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Scholarships\"\n              item={resourceMode.scholarships}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n          </ScrollView>\n        </Pressable>\n      </View>\n      {isGovernmentMode &&\n      isShowingCategoryView &&\n      selectedPost !== undefined ? (\n        <GovernmentCategoryView\n          teamId={selectedPost.teamId}\n          channelId={selectedPost.conversationId}\n          messageId={selectedPost.messageId}\n          onClose={() => setIsShowingCategoryView(false)}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction GovernmentCategoryView({\n  teamId,\n  channelId,\n  messageId,\n  onClose,\n}: {\n  teamId: string;\n  channelId: string;\n  messageId: string;\n  onClose: () => void;\n}) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [categoryState, setCategoryState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [selectedCategory, setSelectedCategory] = useState<resourceMode>(\n    resourceMode.home,\n  );\n  async function addCategory() {\n    setCategoryState(loadingStateEnum.loading);\n    const data = {\n      singleValueExtendedProperties: [\n        {\n          id: store.getState().paulyList.resourceExtensionId,\n          value: convertResourceModeString(selectedCategory),\n        },\n      ],\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages/${messageId}`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      setCategoryState(loadingStateEnum.success);\n    } else {\n      setCategoryState(loadingStateEnum.failed);\n    }\n  }\n  async function getCategory() {\n\n  }\n  return (\n    <View\n      style={{\n        height: height * 0.9,\n        width: width * 0.8,\n        position: 'absolute',\n        top: height * 0.05,\n        left: width * 0.1,\n        backgroundColor: Colors.white,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n      }}\n    >\n      <Pressable onPress={() => onClose()}>\n        <CloseIcon width={12} height={12} />\n      </Pressable>\n      <View\n        style={{\n          width: width * 0.8,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: Colors.white,\n        }}\n      >\n        <Text>Categories</Text>\n      </View>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.sports)}\n        style={{\n          marginLeft: width * 0.05,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.sports ? Colors.lightGray : Colors.white,\n \n        }}\n      >\n        <Text>Sports</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.advancement)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.advancement ? Colors.lightGray : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Advancement</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.schoolEvents)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.schoolEvents ? Colors.lightGray : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>School Events</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.annoucments)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.annoucments ? Colors.lightGray : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Annoucments</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.fitness)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.fitness ? Colors.lightGray : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Fitness</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.files)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.files ? Colors.lightGray : Colors.white,\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Files</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          addCategory();\n        }}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>{getTextState(categoryState, { notStarted: 'Confirm' })}</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nfunction SearchBox() {\n  // Dimentsions\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [mounted, setMounted] = useState<boolean>(false);\n  const { searchValue } = useSelector((state: RootState) => state.resources);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false); // Boolean true if text overflowing. This is telling the search icon to show or not.\n  const style = Platform.OS === 'web' ? { outlineStyle: 'none' } : undefined; // Style to remove ourline around textbox on web\n  const dispatch = useDispatch();\n\n  // Getting search results on value chage\n  useEffect(() => {\n    if (mounted) {\n      // Checking so that this isn't called on start\n      const searchValueSave = searchValue; // saving value to check if change in 1.5 s\n      setTimeout(() => {\n        // Waiting 1.5s\n        if (store.getState().resources.searchValue === searchValueSave) {\n          // Checking if value changed\n          getResourcesSearch(searchValue); // getting search data\n        }\n      }, 1500);\n    } else {\n      setMounted(true); // Setting that it has been called on start\n    }\n  }, [searchValue]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.1 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchValue}\n            onChangeText={e => {\n              dispatch(resourcesSlice.actions.setSearchValue(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchValue}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { useMsal } from '@azure/msal-react';\nimport {\n  DiscoveryDocument,\n  revokeAsync,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts } from 'expo-font';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { View, Text, Pressable, Platform, Image } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { tenantId } from '../../PaulyConfig';\nimport store, { RootState } from '../../Redux/store';\nimport { authenticationTokenSlice } from '../../Redux/reducers/authenticationTokenReducer';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport {\n  GearIcon,\n  GovernmentIcon,\n  PersonIcon,\n  StudentSearchIcon,\n} from '../../UI/Icons/Icons';\nimport BackButton from '../../UI/BackButton';\nimport { Colors, loadingStateEnum } from '../../types';\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n\nexport default function Settings() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { uri, displayName } = useSelector(\n    (state: RootState) => state.microsoftProfileData,\n  );\n  const [imageLoadState, setImageLoadState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.maroon,\n        bottom: Colors.maroon,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentBreakPoint >= 1) {\n      navigate('/');\n    }\n  }, [currentBreakPoint]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View>\n      <BackButton to=\"/\" />\n      <View\n        style={{\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: height * 0.2,\n          marginTop: height * 0.025,\n          marginBottom: height * 0.02,\n        }}\n      >\n        <GearIcon\n          width={width < height ? width * 0.3 : height * 0.2}\n          height={width < height ? width * 0.3 : height * 0.2}\n          style={{ position: 'absolute', left: width * 0.2 }}\n        />\n        <Text\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: 45,\n            color: Colors.white,\n          }}\n        >\n          Settings\n        </Text>\n      </View>\n      <View\n        style={{\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {uri !== '' && imageLoadState !== loadingStateEnum.failed ? (\n          <Image\n            source={{ uri }}\n            onError={e => {\n              setImageLoadState(loadingStateEnum.failed);\n              console.log(e.nativeEvent.error);\n            }}\n            style={{\n              width: width * 0.3,\n              height: width * 0.3,\n              borderRadius: width * 0.25,\n            }}\n          />\n        ) : (\n          <PersonIcon width={width * 0.4} height={width * 0.4} />\n        )}\n        <Text\n          style={{\n            color: Colors.white,\n            fontWeight: 'bold',\n            fontSize: 24,\n            marginTop: height * 0.05,\n          }}\n        >\n          {displayName}\n        </Text>\n      </View>\n      <Pressable\n        onPress={() => {\n          signOut();\n        }}\n        style={{\n          width: width * 0.8,\n          height: height * 0.08,\n          borderRadius: 15,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 2, height: 4 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <Text style={{ fontWeight: 'bold' }}>SIGN OUT</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          navigate('/students');\n        }}\n        style={{\n          width: width * 0.8,\n          height: height * 0.08,\n          borderRadius: 15,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 2, height: 4 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n          alignItems: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <StudentSearchIcon\n          width={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n          height={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n          style={{ marginLeft: width * 0.025 }}\n        />\n        <Text>Students</Text>\n      </Pressable>\n      {isGovernmentMode ? (\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government');\n          }}\n          style={{\n            width: width * 0.8,\n            height: height * 0.08,\n            borderRadius: 15,\n            shadowColor: Colors.black,\n            shadowOffset: { width: 2, height: 4 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            flexDirection: 'row',\n            backgroundColor: Colors.white,\n            alignItems: 'center',\n            marginTop: height * 0.05,\n          }}\n        >\n          <GovernmentIcon\n            width={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n            height={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n            style={{ marginLeft: width * 0.025 }}\n          />\n          <Text>Government</Text>\n        </Pressable>\n      ) : null}\n    </View>\n  );\n}\n","import {\n  View,\n  Text,\n  Image,\n  ImageSourcePropType,\n  Pressable,\n} from 'react-native';\nimport React, {\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useSelector } from 'react-redux';\nimport {\n  BookIcon,\n  CalendarIcon,\n  GearIcon,\n  GraduationHatIcon,\n  GraphAPILogo,\n  HomeIcon,\n  MedalIcon,\n  StudentSearchIcon,\n} from '../../../UI/Icons/Icons';\nimport { RootState } from '../../../Redux/store';\nimport { Colors } from '../../../types';\n\nfunction Block({\n  height,\n  width,\n  text,\n  imageSource,\n  children,\n  onPress,\n}: {\n  height: number;\n  width: number;\n  text: string;\n  imageSource?: ImageSourcePropType;\n  children?: ReactNode;\n  onPress: () => void\n}) {\n  const [isSelected, setIsSelected] = useState<boolean>(false)\n  return (\n    <Pressable\n      style={{\n        height,\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: isSelected ? Colors.lightGray:Colors.darkGray,\n        borderRadius: 5,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 5,\n      }}\n      onHoverIn={() => {setIsSelected(true)}}\n      onHoverOut={() => {setIsSelected(false)}}\n      onPress={() => onPress()}\n    >\n      {imageSource !== undefined && (\n        <Image\n          source={imageSource}\n          style={{ width: width * 0.5, height: height * 0.5 }}\n          resizeMode=\"center\"\n        />\n      )}\n      {imageSource === undefined && children !== undefined && (\n        <View style={{ width: width * 0.5, height: height * 0.5 }}>\n          <>{children}</>\n        </View>\n      )}\n      <Text style={{ color: isSelected ? Colors.black:Colors.white }}>{text}</Text>\n    </Pressable>\n  );\n}\n\nexport default function Government() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isGovernmentMode) {\n      navigate('/');\n    }\n  }, []);\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../../assets/fonts/BukhariScript.ttf'),\n  });\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  const [mainWidth, setMainWidth] = useState<number>(0);\n  useEffect(() => {\n    const fivePercent = width * 0.05;\n    const remainder = (width * 0.8) % (100 + fivePercent);\n    setMainWidth(width * 0.8 - remainder - fivePercent);\n  }, [width]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      {currentBreakPoint <= 0 ? (\n        <Pressable onPress={() => navigate('/profile/')}>\n          <Text>Back</Text>\n        </Pressable>\n      ) : null}\n      <View\n        style={{\n          height: height * 0.2,\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={1}\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: height * 0.09,\n            height: height * 0.13,\n            width: width * 0.8,\n            textAlign: 'center',\n            textAlignVertical: 'center',\n            verticalAlign: 'middle',\n          }}\n        >\n          Government\n        </Text>\n      </View>\n      <View\n        style={{\n          height: height * 0.75,\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <View\n          style={{\n            height: height * 0.75,\n            width: mainWidth,\n            flexDirection: 'row',\n            alignContent: 'flex-start',\n            flexWrap: 'wrap',\n            rowGap: height * 0.05,\n            columnGap: width * 0.05,\n          }}\n        >\n          <Block onPress={() => navigate('/profile/government/graph/list')} width={100} height={100} text=\"Graph\">\n            <GraphAPILogo width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/commissions')} width={100} height={100} text=\"Commissions\">\n            <MedalIcon width={50} height={50} />\n          </Block>\n          <Block\n            width={100}\n            height={100}\n            text=\"Sports\"\n            imageSource={require('../../../../assets/images/Football.png')}\n            onPress={() => navigate('/profile/government/sports')}\n          />\n          <Block onPress={() => navigate('/profile/government/homepage')} width={100} height={100} text=\"Homepage\">\n            <HomeIcon width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/calendar')} width={100} height={100} text=\"Calendar\">\n            <CalendarIcon width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/classes')} width={100} height={100} text=\"Classes\">\n            <GraduationHatIcon width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/admin')} width={100} height={100} text=\"Admin\">\n            <GearIcon width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/resources')} width={100} height={100} text=\"Resources\">\n            <BookIcon width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/students')} width={100} height={100} text=\"Students\">\n            <StudentSearchIcon width={50} height={50} />\n          </Block>\n        </View>\n      </View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// June 19 2023\n// Picker with animated black line\n\nimport React, { useState, ReactNode, useRef, useEffect, Children } from 'react';\nimport { View, Pressable, Animated } from 'react-native';\n// import styles from './Picker.module.css'\n\ninterface PickerWrapperProps {\n  selectedIndex: number;\n  onSetSelectedIndex: (item: number) => void;\n  children: ReactNode;\n  width: number;\n  height: number;\n}\n\nconst PickerWrapper: React.FC<PickerWrapperProps> = ({\n  selectedIndex,\n  onSetSelectedIndex,\n  children,\n  width,\n  height,\n}) => {\n  const pan = useRef(new Animated.Value(0)).current;\n  const compoentWidth = width / Children.count(children);\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedIndex * compoentWidth);\n  }, []);\n\n  return (\n    <View style={{ flexDirection: 'row', height: height * 0.8, width }}>\n      {React.Children.map(children, (child, index) => (\n        <View\n          style={{\n            position: 'absolute',\n            transform: [{ translateX: index * compoentWidth }],\n            width: compoentWidth,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              onSetSelectedIndex(index);\n              fadeIn(index);\n            }}\n          >\n            <>{child}</>\n          </Pressable>\n        </View>\n      ))}\n      <Animated.View\n        style={{\n          transform: [{ translateX: pan }],\n        }}\n      >\n        <View\n          style={{\n            height: height * 0.2,\n            width: compoentWidth,\n            backgroundColor: 'black',\n            top: height * 0.6,\n            borderRadius: 5,\n            position: 'absolute',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default PickerWrapper;\n\n// transform: 'translate3d(' + selectedIndex * 100 + '%, ' + \"0\" + ',0)',\n\n// (selectedValue === index) ?\n// :styles.UnSelectedButtonStyle\n\n// .SelectedButtonStyle{\n//     background: rgba(68, 68, 68, 0.7);\n//     /* nice.. */\n//     border-radius: 30px;\n//     overflow: hidden;\n//     color: black;\n//     z-index: 2;\n//     padding: 0;\n//     margin: 0;\n//     transition: transform .5s ease-in-out;\n//   }\n\n//   .UnSelectedButtonStyle{\n//     overflow: hidden;\n//     text-align: center;\n//     font-size: 18px;\n//     letter-spacing: 1px;\n//     color: black;\n//     position: relative;\n//     border: none;\n//     background: transparent;\n//     grid-row: 1;\n//     z-index: 5;\n//   }\n\n//   .SwitchButtonContainer{\n//     background: rgba(155, 144, 140, 0.128);\n//     padding: 0;\n//     margin: 0;\n//     grid-column: 1;\n//     grid-row: 1;\n//   }\n","import { loadingStateEnum, resourceResponce } from '../types';\nimport getResource from './getResources';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function getTeams(nextLink?: string): Promise<{\n  result: loadingStateEnum;\n  data?: groupType[];\n  nextLink?: string;\n}> {\n  const groupResult = await callMsGraph(\n    nextLink || 'https://graph.microsoft.com/v1.0/me/joinedTeams',\n  );\n  if (groupResult.ok) {\n    const groupResultData = await groupResult.json();\n    if (groupResultData.value !== undefined) {\n      const outputData: groupType[] = [];\n      for (let index = 0; index < groupResultData.value.length; index += 1) {\n        outputData.push({\n          name: groupResultData.value[index].displayName,\n          id: groupResultData.value[index].id,\n        });\n      }\n      return {\n        result: loadingStateEnum.success,\n        data: outputData,\n        nextLink: groupResultData['@odata.nextLink'],\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getChannels(\n  teamId: string,\n  nextLink?: string,\n): Promise<{\n  result: loadingStateEnum;\n  data?: channelType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${teamId}/allChannels`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const output: channelType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      output.push({\n        id: data.value[index].id,\n        displayName: data.value[index].displayName,\n        selected: false,\n        loading: false,\n        error: false,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getPosts(\n  teamId: string,\n  channelId: string,\n): Promise<{\n  result: loadingStateEnum;\n  data?: resourceDataType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const output: resourceDataType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      output.push({\n        id: data.value[index].id,\n        body: data.value[index].body.content,\n        teamId: data.value[index].channelIdentity.teamId,\n        conversationId: data.value[index].channelIdentity.channelId,\n        html: false,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n//Id group id\nexport async function getResourceChannels(id: string): Promise<{result: loadingStateEnum.success, data: channelType[]}|{result: loadingStateEnum.failed}> {\n  const getResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${id}/allChannels`,\n  );\n  const channelResult: channelType[] = [];\n  if (getResult.ok) {\n    const getResultData = await getResult.json();\n    let channelGetResultsAwait: Promise<{\n      result: resourceResponce;\n      itemId?: string | undefined;\n    }>[] = []\n    for (\n      let indexResult = 0;\n      indexResult < getResultData.value.length;\n      indexResult += 1\n    ) {\n      channelGetResultsAwait.push(getResource(\n        id,\n        getResultData.value[indexResult].id,\n      ));\n    }\n    const channelGetResults: {\n      result: resourceResponce;\n      itemId?: string | undefined;\n    }[] = await Promise.all(channelGetResultsAwait);\n    for (let index = 0; index < channelGetResults.length; index += 1) {\n      channelResult.push({\n        id: getResultData.value[index].id,\n        selected: channelGetResults[index].result === resourceResponce.found,\n        loading: false,\n        displayName: getResultData.value[index].displayName,\n        error: channelGetResults[index].result === resourceResponce.failed,\n      });\n    }\n    return {result: loadingStateEnum.success, data: channelResult};\n  } else {\n    return {result: loadingStateEnum.failed};\n  }\n}","import { View, Text, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport PickerWrapper from '../../../../UI/Pickers/Picker';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { clientId } from '../../../../PaulyConfig';\nimport { getTeams } from '../../../../Functions/microsoftGroupsFunctions';\n\ntype listType = {\n  displayName: string;\n  listId: string;\n  name: string;\n};\n\ntype extensionType = {\n  description: string;\n  id: string;\n};\n\nenum graphMode {\n  list,\n  group,\n  extension,\n}\n\nexport default function MicrosoftGraphOverview() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [lists, setLists] = useState<listType[]>([]);\n  const [groups, setGroups] = useState<groupType[]>([]);\n  const [extensions, setExtensions] = useState<extensionType[]>([]);\n  const [applicationExtensions, setApplicationExtensions] = useState<\n    extensionType[]\n  >([]);\n  const [selectedGraphMode, setSelectedGraphMode] = useState<graphMode>(\n    graphMode.list,\n  );\n  const { mode } = useParams();\n\n  // loading states\n  const [groupLoadingState, setGroupLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [listLoadingState, setListLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [schemaLoadingState, setSchemaLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n\n  async function getLists() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n    ); // sites/8td1tk.onmicrosoft.com/sites\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value !== undefined) {\n        const incomingLists: listType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          incomingLists.push({\n            displayName: data.value[index].displayName,\n            listId: data.value[index].id,\n            name: data.value[index].name,\n          });\n        }\n        setLists(incomingLists);\n        setListLoadingState(loadingStateEnum.success);\n      } else {\n        setListLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setListLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  // async function searchGroups(search: string) {\n  //   const groupResult = await callMsGraph(\n  //     `https://graph.microsoft.com/v1.0/groups?$filter=startswith(displayName,'${search}')`,\n  //   );\n  // }\n\n  async function loadData() {\n    const groupResult = await getTeams(\n      'https://graph.microsoft.com/v1.0/groups',\n    );\n    if (\n      groupResult.result === loadingStateEnum.success &&\n      groupResult.data !== undefined\n    ) {\n      setGroups(groupResult.data);\n    }\n    setGroupLoadingState(groupResult.result);\n  }\n\n  async function getExtensions() {\n    let schemaExtensionsUrl = `https://graph.microsoft.com/v1.0/schemaExtensions?$filter=owner%20eq%20'${clientId}'`;\n    const resultData: extensionType[] = [];\n    while (schemaExtensionsUrl !== '') {\n      const result = await callMsGraph(schemaExtensionsUrl);\n      if (!result.ok) {\n        setSchemaLoadingState(loadingStateEnum.failed);\n        return;\n      }\n      const data = await result.json();\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          description: data.value[index].description,\n          id: data.value[index].id,\n        });\n      }\n      if (data['@odata.nextLink'] !== undefined) {\n        schemaExtensionsUrl = data['@odata.nextLink'];\n      } else {\n        schemaExtensionsUrl = '';\n      }\n    }\n    setApplicationExtensions(resultData);\n\n    const applicationResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/schemaExtensions',\n    );\n    if (applicationResult.ok) {\n      const applicationData = await applicationResult.json();\n      const resultData: extensionType[] = [];\n      for (let index = 0; index < applicationData.value.length; index += 1) {\n        resultData.push({\n          description: applicationData.value[index].description,\n          id: applicationData.value[index].id,\n        });\n      }\n      setExtensions(resultData);\n      setSchemaLoadingState(loadingStateEnum.success);\n    } else {\n      setSchemaLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (mode === 'list') {\n      setSelectedGraphMode(graphMode.list);\n    } else if (mode === 'group') {\n      setSelectedGraphMode(graphMode.group);\n    } else if (mode === 'extension') {\n      setSelectedGraphMode(graphMode.extension);\n    }\n  }, [mode]);\n\n  useEffect(() => {\n    getLists();\n    loadData();\n    getExtensions();\n  }, []);\n\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <Link to=\"/profile/government\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Microsoft Graph Overview</Text>\n      <PickerWrapper\n        selectedIndex={selectedGraphMode}\n        onSetSelectedIndex={setSelectedGraphMode}\n        width={width}\n        height={30}\n      >\n        <Text>Lists</Text>\n        <Text>Groups</Text>\n        <Text>Extensions</Text>\n      </PickerWrapper>\n      <ScrollView style={{ height: height * 0.6 }}>\n        {selectedGraphMode === graphMode.list ? (\n          <View>\n            {listLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {listLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    {lists.map((item: listType) => (\n                      <Link\n                        key={`${item.listId}Link`}\n                        to={`/profile/government/graph/list/edit/${item.listId}`}\n                      >\n                        <View key={item.listId}>\n                          {\n                            // TO DO PRODuction fix these ids\n                            item.listId !==\n                              '2b86ba89-0262-4906-9247-bfd1260fb68e' &&\n                            item.listId !==\n                              '1f4cd053-dd6b-4e40-bb9b-803cbc74e872' ? (\n                              <View\n                                style={{\n                                  marginBottom: 5,\n                                  borderColor: 'black',\n                                  borderWidth: 5,\n                                }}\n                              >\n                                <Text>{item.displayName}</Text>\n                                <Text>{item.listId}</Text>\n                              </View>\n                            ) : null\n                          }\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n        {selectedGraphMode === graphMode.group ? (\n          <View>\n            {groupLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {groupLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    {groups.map(group => (\n                      <Link\n                        to={`/profile/government/graph/group/edit/${group.id}`}\n                        key={`group_${group.id}`}\n                      >\n                        <View>\n                          <Text>{group.name}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n        {selectedGraphMode === graphMode.extension ? (\n          <View>\n            {schemaLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {schemaLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    <View style={{ margin: 10 }}>\n                      <Text>Application Extensions</Text>\n                    </View>\n                    {applicationExtensions.map(extension => (\n                      <Link\n                        to={`/profile/government/graph/extension/edit/${extension.id}`}\n                        key={`extension_${extension.id}`}\n                        style={{ borderWidth: 2, borderColor: 'black' }}\n                      >\n                        <View>\n                          <Text>{extension.id}</Text>\n                          <Text>{extension.description}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                    <View style={{ margin: 10 }}>\n                      <Text>Tenant Extensions</Text>\n                    </View>\n                    {extensions.map(extension => (\n                      <Link\n                        to={`/profile/government/graph/extension/edit/${extension.id}`}\n                        key={`extension_${extension.id}`}\n                        style={{ borderWidth: 2, borderColor: 'black' }}\n                      >\n                        <View>\n                          <Text>{extension.id}</Text>\n                          <Text>{extension.description}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n      </ScrollView>\n      <Link to=\"/profile/government/graph/list/create\">\n        <Text>Create List</Text>\n      </Link>\n    </View>\n  );\n}\n","import { View, Text, Button, TextInput, Pressable } from 'react-native';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { RootState } from '../../../../Redux/store';\n\ntype MicrosoftGraphColumnDefinitions =\n  | 'text'\n  | 'number'\n  | 'boolean'\n  | 'calculated'\n  | 'choice'\n  | 'columnGroup'\n  | 'contentApprovalStatus'\n  | 'currency'\n  | 'dateTime'\n  | 'defaultValue'\n  | 'description'\n  | 'displayName'\n  | 'enforceUniqueValues'\n  | 'geolocation'\n  | 'hidden';\n\ntype ColumnItem = {\n  name: string;\n  key: MicrosoftGraphColumnDefinitions;\n  data: any;\n};\n\nexport default function MicrosoftGraphCreateList() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n\n  const [columns, setColumns] = useState<ColumnItem[]>([]);\n\n  const [listName, setListName] = useState<string>('');\n  const [isListHidden, setIsListHidden] = useState<boolean>(false);\n  const [isShowingTypeWindow, setIsShowingTypeWindow] =\n    useState<boolean>(false);\n\n  // Colum Properties\n  const [selectedColumnType, setSelectedColumnType] =\n    useState<MicrosoftGraphColumnDefinitions>('text');\n  const [enforceUniqueValues, setEnforceUniqueValues] =\n    useState<boolean>(false);\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n  const [columnDescription, setColumnDescription] = useState<string>('');\n  const [newColumnName, setNewColumnName] = useState<string>('');\n\n  async function createList() {\n    const columnData: object[] = [];\n\n    for (let index = 0; index < columns.length; index += 1) {\n      const { key } = columns[index];\n      const newData: object = {\n        name: columns[index].name,\n        text: {},\n      };\n      columnData.push(newData);\n    }\n\n    const listData = {\n      displayName: listName,\n      columns: columnData,\n      list: {\n        contentTypesEnabled: false,\n        hidden: false,\n        template: ' genericList',\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n      'POST',\n      JSON.stringify(listData),\n    );\n\n    const data = await result.json();\n  }\n  return (\n    <View style={{ width }}>\n      <Link to=\"/profile/government/graph\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Microsoft Graph Create</Text>\n      <Text>List Name</Text>\n      <TextInput value={listName} onChangeText={text => setListName(text)} />\n      <View style={{ height: height * 0.75 }}>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Name</Text>\n          <Text>Type</Text>\n        </View>\n        {columns.map((item: ColumnItem) => (\n          <View style={{ flexDirection: 'row' }}>\n            <Text>{item.name} </Text>\n            <Text>{item.key}</Text>\n          </View>\n        ))}\n      </View>\n      {isShowingTypeWindow ? (\n        <View style={{ height: 100, position: 'absolute', zIndex: 2 }}>\n          <Button\n            title=\"Text\"\n            onPress={() => {\n              setSelectedColumnType('text');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Number\"\n            onPress={() => {\n              setSelectedColumnType('number');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Boolean\"\n            onPress={() => {\n              setSelectedColumnType('boolean');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Calculated\"\n            onPress={() => {\n              setSelectedColumnType('calculated');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Location\"\n            onPress={() => {\n              setSelectedColumnType('geolocation');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Choice\"\n            onPress={() => {\n              setSelectedColumnType('choice');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Column Group\"\n            onPress={() => {\n              setSelectedColumnType('columnGroup');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Content Approval Status\"\n            onPress={() => {\n              setSelectedColumnType('contentApprovalStatus');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Currency\"\n            onPress={() => {\n              setSelectedColumnType('currency');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Date\"\n            onPress={() => {\n              setSelectedColumnType('dateTime');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n        </View>\n      ) : null}\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Hidden: </Text>\n        <Pressable\n          onPress={() => {\n            setIsHidden(!isHidden);\n          }}\n        >\n          <Text>{isHidden ? 'X' : 'O'}</Text>\n        </Pressable>\n        <TextInput\n          value={newColumnName}\n          onChangeText={text => setNewColumnName(text)}\n        />\n      </View>\n      <Button\n        title={selectedColumnType}\n        onPress={() => {\n          setIsShowingTypeWindow(!isShowingTypeWindow);\n        }}\n      />\n      <Button\n        title=\"Add Column\"\n        onPress={() => {\n          let columnData = {};\n          if (selectedColumnType === 'text') {\n            columnData = {\n              allowMultipleLines: true,\n              appendChangesToExistingText: false,\n              linesForEditing: 6,\n              maxLength: 300,\n              textType: 'richText',\n            };\n          }\n          const newColumn = {\n            name: newColumnName,\n            key: selectedColumnType,\n            data: columnData,\n          };\n          setNewColumnName('');\n          setColumns([...columns, newColumn]);\n        }}\n      />\n      <Button\n        title=\"Create List\"\n        onPress={() => {\n          createList();\n        }}\n      />\n      <View style={{ flexDirection: 'row' }}>\n        <Text>List Hidden: </Text>\n        <Pressable\n          onPress={() => {\n            setIsListHidden(!isListHidden);\n          }}\n        >\n          <Text>{isListHidden ? 'X' : 'O'}</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum, submissionTypeEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction convertSubmissionTypeToFilter(\n  submissionType: submissionTypeEnum,\n): string {\n  if (submissionType === submissionTypeEnum.approved) {\n    return '%20and%20fields/submissionApproved%20ne%20false';\n  }\n  if (submissionType === submissionTypeEnum.unApproved) {\n    return '%20and%20fields/submissionApproved%20eq%20false';\n  }\n  if (submissionType === submissionTypeEnum.unReviewed) {\n    return '%20and%20fields/submissionReviewed%20eq%20false';\n  }\n  return '';\n}\n\nexport default async function getSubmissions(\n  commissionId: string,\n  submissionType: submissionTypeEnum,\n): Promise<{\n  result: loadingStateEnum;\n  data?: submissionType[];\n  nextLink?: string;\n  count?: number;\n}> {\n  const filter: string = convertSubmissionTypeToFilter(submissionType);\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.commissionSubmissionsListId\n    }/items?expand=fields&$select=id&$filter=fields/commissionId%20eq%20'${commissionId}'${filter}`,\n    'GET',\n  );\n  if (result.ok) {\n    const data = await result.json();\n\n    // Get Users\n    const batchRequests: { id: string; method: string; url: string }[][] = [];\n    const users: any = {};\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (index % 20 === 0) {\n        batchRequests.push([]);\n      }\n      batchRequests[Math.floor(index / 20)].push({\n        id: (index + 1).toString(),\n        method: 'GET',\n        url: `/users/${data.value[index].fields.userId}?$select=id,displayName`,\n      });\n    }\n    for (let index = 0; index < batchRequests.length; index += 1) {\n      const batchData = {\n        requests: batchRequests[index],\n      };\n      const batchHeaders = new Headers();\n      batchHeaders.append('Accept', 'application/json');\n      const batchResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n      );\n      if (result.ok) {\n        const batchResultData = await batchResult.json();\n        for (\n          let batchIndex = 0;\n          batchIndex < batchResultData.responses.length;\n          batchIndex += 1\n        ) {\n          if (batchResultData.responses[batchIndex].status === 200) {\n            Object.defineProperty(\n              users,\n              batchResultData.responses[batchIndex].body.id,\n              {\n                value: batchResultData.responses[batchIndex].body.displayName,\n              },\n            );\n          } else {\n            return { result: loadingStateEnum.failed };\n          }\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n\n    // Return Output\n    const output: submissionType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const name = users[data.value[index].fields.userId];\n      if (name !== undefined) {\n        output.push({\n          userName: name,\n          submissionTime: data.value[index].fields.submittedTime,\n          id: data.value[index].fields.submissionId,\n          itemId: data.value[index].id,\n          approved: data.value[index].fields.submissionApproved,\n          reviewed: data.value[index].fields.submissionReviewed,\n          submissionImage:\n            data.value[index].fields.submissionData !== undefined\n              ? JSON.parse(data.value[index].fields.submissionData).imageShare\n              : undefined,\n        });\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n      count: data.value.length,\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport getCommissions from '../../../../Functions/commissions/getCommissions';\nimport getSubmissions from '../../../../Functions/commissions/getSubmissions';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  loadingStateEnum,\n  submissionTypeEnum,\n} from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentCommissions() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [commissions, setCommissions] = useState<commissionType[]>([]);\n  const [commissionsState, setCommissionsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getCommissions();\n    if (result.result === loadingStateEnum.success) {\n      if (result.data !== undefined) {\n        setCommissions(result.data);\n      }\n      // TO DO pagination\n    }\n    setCommissionsState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government');\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n        <View\n          style={{\n            width,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Commissions</Text>\n        </View>\n      </View>\n      <View style={{ height: height * 0.85 }}>\n        {commissionsState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <>\n            {commissionsState === loadingStateEnum.success ? (\n              <ScrollView style={{ height: height * 0.85 }}>\n                {commissions.map(commission => (\n                  <CommissionBlock\n                    key={`Commission_${\n                      commission.commissionId\n                    }_${createUUID()}`}\n                    commission={commission}\n                  />\n                ))}\n              </ScrollView>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ height: height * 0.05 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government/commissions/create');\n          }}\n        >\n          <Text>Create New Commission</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction CommissionBlock({ commission }: { commission: commissionType }) {\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [unclaimedState, setUnclaimedState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [unclaimedCount, setUnclaimedCount] = useState<string>('0');\n\n  async function loadData() {\n    const result = await getSubmissions(\n      commission.commissionId,\n      submissionTypeEnum.unReviewed,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.count !== undefined\n    ) {\n      if (result.count >= 50) {\n        setUnclaimedCount(`${result.count.toString()}+`);\n      } else {\n        setUnclaimedCount(result.count.toString());\n      }\n    }\n    setUnclaimedState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <Pressable\n      onPress={() =>\n        navigate(`/profile/government/commissions/${commission.commissionId}`)\n      }\n      key={`Commission_${commission.commissionId}_${createUUID()}`}\n      style={{\n        margin: 10,\n        borderRadius: 15,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n      }}\n    >\n      <View style={{ margin: 10 }}>\n        <Text selectable={false}>{commission.title}</Text>\n      </View>\n      {unclaimedCount !== '0' ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: 'red',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>{unclaimedCount}</Text>\n        </View>\n      ) : null}\n      {unclaimedState === loadingStateEnum.loading ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: '#FF6700',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <ProgressView width={10} height={10} />\n        </View>\n      ) : null}\n      {unclaimedState === loadingStateEnum.failed ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: 'red',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>!</Text>\n        </View>\n      ) : null}\n    </Pressable>\n  );\n}\n","import { View, Text, Animated, Pressable } from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Colors } from '../../types';\n\ntype PickerWrapperProps = {\n  selectedIndex: number;\n  setSelectedIndex: (item: number) => void;\n  options: string[];\n  width: number;\n  height: number;\n};\n\nexport default function SegmentedPicker({\n  width,\n  height,\n  selectedIndex,\n  setSelectedIndex,\n  options,\n}: PickerWrapperProps) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [compoentWidth, setComponentWidth] = useState(width / 3);\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth + compoentWidth * 0.005,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedIndex * compoentWidth + compoentWidth * 0.005);\n  }, []);\n\n  useEffect(() => {\n    console.log(selectedIndex);\n  }, [selectedIndex]);\n\n  useEffect(() => {\n    setComponentWidth(width / options.length);\n    pan.setValue(selectedIndex * compoentWidth + compoentWidth * 0.005);\n  }, [width]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        height,\n        width,\n        backgroundColor: '#7d7d7d',\n        borderRadius: 20,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n      }}\n    >\n      {options.map((option, index) => (\n        <Pressable\n          onPress={() => {\n            setSelectedIndex(index);\n            fadeIn(index);\n          }}\n          style={{\n            position: 'absolute',\n            width: compoentWidth,\n            height,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            transform: [{ translateX: index * compoentWidth }],\n          }}\n        >\n          <Text\n            adjustsFontSizeToFit\n            style={{\n              textAlignVertical: 'center',\n              textAlign: 'center',\n              width: compoentWidth,\n            }}\n          >\n            {option}\n          </Text>\n        </Pressable>\n      ))}\n      <Animated.View style={{ transform: [{ translateX: pan }], zIndex: -1 }}>\n        <View\n          style={{\n            height: height * 0.95,\n            width: compoentWidth - compoentWidth * 0.01,\n            backgroundColor: Colors.white,\n            top: height * 0.025,\n            borderRadius: 20,\n            position: 'absolute',\n            zIndex: -1,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  Marker,\n  Circle,\n} from '@react-google-maps/api';\n\nconst center = {\n  lat: 49.85663823299096,\n  lng: -97.22659526509193,\n};\n\ntype LatLngLiteral = google.maps.LatLngLiteral;\n\nexport default function MapWeb({\n  proximity,\n  selectedPositionIn,\n  onSetSelectedPositionIn,\n  width,\n  height,\n}: {\n  proximity: number;\n  selectedPositionIn: { lat: number; lng: number };\n  onSetSelectedPositionIn: (item: { lat: number; lng: number }) => void;\n  width: number;\n  height: number;\n}) {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyAltyD_LL0kbe84kyMRxgRmoH74Spi5rvw', // TO DO put this into a loval env\n  });\n  const [selectedPosition, setSelectedPosition] = useState<LatLngLiteral>();\n  const [containerStyle, setContainerStyle] = useState<{\n    width: string;\n    height: string;\n  }>({\n    width: '400px',\n    height: '400px',\n  });\n\n  useEffect(() => {\n    setContainerStyle({\n      width: `${width.toString()}px`,\n      height: `${height.toString()}px`,\n    });\n  }, [width, height]);\n\n  // const [map, setMap] = React.useState(null)\n\n  // const onLoad = React.useCallback(function callback(map) {\n  //   // This is just an example of getting and using the map instance!!! don't just blindly copy!\n  //   const bounds = new window.google.maps.LatLngBounds(center);\n  //   map.fitBounds(bounds);\n\n  //   setMap(map)\n  // }, [])\n\n  // const onUnmount = React.useCallback(function callback(map) {\n  //   setMap(null)\n  // }, [])\n\n  return isLoaded ? (\n    <div style={{ width, height }}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={15}\n        onClick={ev => {\n          onSetSelectedPositionIn({\n            lat: ev.latLng!.lat(),\n            lng: ev.latLng!.lng(),\n          });\n          setSelectedPosition({ lat: ev.latLng!.lat(), lng: ev.latLng!.lng() });\n        }}\n      >\n        {/* Child components, such as markers, info windows, etc. */}\n        {selectedPosition && <Marker position={selectedPosition} />}\n        {selectedPosition && (\n          <Circle center={selectedPosition} radius={proximity} />\n        )}\n      </GoogleMap>\n    </div>\n  ) : (\n    <></>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  PanResponder,\n  Animated,\n  PanResponderGestureState,\n} from 'react-native';\n\ninterface BoxProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  box: {\n    backgroundColor: 'blue',\n    borderRadius: 5,\n    position: 'absolute',\n  },\n});\n\nconst Box: React.FC<BoxProps> = ({\n  width,\n  height,\n  value,\n  onValueChange,\n  containerWidth,\n}) => {\n  const pan = useRef(new Animated.Value(value)).current;\n  const valueRef = useRef({ currentValue: value });\n  const containerWidthRef = useRef({ currentValue: value });\n  const lastValue = useRef({ currentValue: value });\n  useEffect(() => {\n    containerWidthRef.current.currentValue = containerWidth;\n  }, [containerWidth]);\n  useEffect(() => {\n    valueRef.current.currentValue = value;\n  }, [value]);\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderMove: (\n        evt: any,\n        gestureState: PanResponderGestureState,\n      ) => {\n        const { dx } = gestureState;\n        const valueRead = valueRef.current.currentValue;\n        let adding =\n          lastValue.current.currentValue > 0\n            ? dx - lastValue.current.currentValue\n            : dx + lastValue.current.currentValue;\n        adding /= width - height / 2;\n        lastValue.current.currentValue = dx;\n        const newValue = valueRead + adding;\n\n        if (newValue <= 1 && newValue >= 0) {\n          valueRef.current.currentValue = newValue;\n          onValueChange(newValue);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: newValue * width });\n        } else if (newValue < 0) {\n          valueRef.current.currentValue = 0;\n          onValueChange(0);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: 0 });\n        } else if (newValue > 1) {\n          valueRef.current.currentValue = 1;\n          onValueChange(1);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: width - height / 2 });\n        }\n      },\n      onPanResponderRelease: () => {\n        pan.setValue(valueRef.current.currentValue * width);\n        lastValue.current.currentValue = 0;\n      },\n    }),\n  ).current;\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            width: height / 2,\n            height: height / 2,\n            transform: [{ translateX: pan }],\n          },\n        ]}\n        {...panResponder.panHandlers}\n      />\n    </View>\n  );\n};\n\ninterface SliderProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number; // This is the width of the screen\n}\n\nexport default function Slider({\n  width,\n  height,\n  value,\n  onValueChange,\n  containerWidth,\n}: SliderProps) {\n  return (\n    <View\n      style={{\n        width,\n        height,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          width,\n          height: height > 10 ? height : 10,\n          backgroundColor: 'black',\n        }}\n      >\n        <Box\n          width={width}\n          height={height}\n          value={value}\n          onValueChange={onValueChange}\n          containerWidth={containerWidth}\n        />\n      </View>\n    </View>\n  );\n}\n","import { loadingStateEnum, dataContentTypeOptions } from '../../types';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function getFileWithShareID(shareID: string, index: number): Promise<{\n  result: loadingStateEnum.failed;\n}|{\n  result: loadingStateEnum.success;\n  index: number;\n  url?: string;\n  contentType?: dataContentTypeOptions;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/shares/${shareID}/driveItem`,\n    'GET',\n    undefined,\n    [{ key: 'Prefer', value: 'redeemSharingLink' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (\n      data['@microsoft.graph.downloadUrl'] !== undefined &&\n      data['@microsoft.graph.downloadUrl'] !== null\n    ) {\n      if (data.file.mimeType.slice(0, 5) === 'image') {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.image,\n          index\n        };\n      }\n      if (data.file.mimeType === 'video/mp4') {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.video,\n          index: index\n        };\n      }\n      if (\n        data.file.mimeType ===\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n      ) {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.pdf,\n          index: index\n        };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import store from '../../Redux/store';\nimport { commissionTypeEnum, loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function updateCommission(\n  isCreating: boolean,\n  commissionName: string,\n  isTimed: boolean,\n  points: number,\n  isHidden: boolean,\n  maxNumberOfClaims: number,\n  allowMultipleSubmissions: boolean,\n  selectedCommissionType: number,\n  selectedPostId: string,\n  selectedTeamId: string,\n  selectedChannelId: string,\n  startDate: Date,\n  endDate: Date,\n  commissionId: string,\n  proximity: number,\n  selectedPositionIn: { lat: number; lng: number },\n  commissionItemId: string,\n): Promise<loadingStateEnum> {\n  const data: any = {\n    fields: {\n      // All Commissions\n      Title: commissionName,\n      timed: isTimed,\n      points,\n      hidden: isHidden,\n      maxNumberOfClaims,\n      allowMultipleSubmissions,\n      commissionID: commissionId,\n      value: selectedCommissionType + 1,\n    },\n  };\n  if (selectedPostId !== '') {\n    data.fields.postTeamId = selectedTeamId;\n    data.fields.postChannelId = selectedChannelId;\n    data.fields.postId = selectedPostId;\n  }\n  if (isTimed) {\n    data.fields.startDate = startDate.toISOString().replace(/.\\d+Z$/g, 'Z');\n    data.fields.endDate = endDate.toISOString().replace(/.\\d+Z$/g, 'Z');\n  }\n  if (\n    selectedCommissionType === commissionTypeEnum.Location ||\n    selectedCommissionType === commissionTypeEnum.ImageLocation\n  ) {\n    data.fields.proximity = proximity;\n    data.fields.coordinateLat = selectedPositionIn.lat;\n    data.fields.coordinateLng = selectedPositionIn.lng;\n  }\n  if (selectedCommissionType === commissionTypeEnum.QRCode) {\n    data.fields.qrCodeData = '[]';\n  }\n\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.commissionListId}/items${\n      !isCreating ? `/${commissionItemId}` : ''\n    }`,\n    isCreating ? 'POST' : 'PATCH',\n    JSON.stringify(data),\n  );\n  if (result.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  ScrollView,\n  Pressable,\n  Switch,\n  Image,\n} from 'react-native';\nimport { useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { DatePickerModal, TimePickerModal } from 'react-native-paper-dates';\nimport store, { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  commissionTypeEnum,\n  loadingStateEnum,\n  submissionTypeEnum,\n} from '../../../../types';\nimport SegmentedPicker from '../../../../UI/Pickers/SegmentedPicker';\nimport ProgressView from '../../../../UI/ProgressView';\nimport WebViewCross from '../../../../UI/WebViewCross';\nimport { CloseIcon } from '../../../../UI/Icons/Icons';\nimport MapWeb from '../../../../UI/Map/Map.web';\nimport Slider from '../../../../UI/Slider';\nimport BackButton from '../../../../UI/BackButton';\nimport {\n  getChannels,\n  getPosts,\n  getTeams,\n} from '../../../../Functions/microsoftGroupsFunctions';\nimport getCommission from '../../../../Functions/commissions/getCommission';\nimport getSubmissions from '../../../../Functions/commissions/getSubmissions';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID, {\n  getTextState,\n} from '../../../../Functions/ultility/createUUID';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\nimport updateCommission from '../../../../Functions/commissions/updateCommission';\n\nenum datePickingMode {\n  none,\n  startTime,\n  endTime,\n  startDate,\n  endDate,\n}\n\nexport default function GovernmentEditCommission() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { commissionListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n\n  const [submitCommissionState, setSubmitCommissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const [selectedCommissionType, setSelectedCommissionType] =\n    useState<commissionTypeEnum>(commissionTypeEnum.Issued);\n\n  const [commissionName, setCommissionName] = useState<string>('');\n  const [proximity, setProximity] = useState<number>(0);\n  const [points, setPoints] = useState<number>(0);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n\n  const [currentDatePickingMode, setCurrentDatePickingMode] =\n    useState<datePickingMode>(datePickingMode.none);\n\n  const [selectedPositionIn, setSelectedPositionIn] = useState<{\n    lat: number;\n    lng: number;\n  }>({ lat: 49.85663823299096, lng: -97.22659526509193 });\n  const [maxNumberOfClaims, setMaxNumberOfClaims] = useState<number>(1);\n  const [allowMultipleSubmissions, setAllowMultipleSubmissions] =\n    useState<boolean>(false);\n  const [isTimed, setIsTimed] = useState<boolean>(true);\n\n  const [commissionItemId, setCommissionItemId] = useState<string>('');\n\n  const [getCommissionResult, setGetCommissionResult] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [deleteCommissionResult, setDeleteCommissionResult] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [selectedTeamId, setSelectedTeamId] = useState<string>('');\n  const [selectedChannelId, setSelectedChannelId] = useState<string>('');\n  const [selectedPostId, setSelectedPostId] = useState<string>('');\n\n  const [isCreating, setIsCreating] = useState<boolean>(false);\n\n  const { id } = useParams();\n\n  async function loadData() {\n    if (id !== undefined) {\n      const result = await getCommission(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        // TO DO add all values\n        setCommissionItemId(result.data.itemId);\n        setCommissionName(result.data.title);\n        setAllowMultipleSubmissions(result.data.allowMultipleSubmissions);\n        setIsHidden(result.data.hidden);\n        setMaxNumberOfClaims(result.data.maxNumberOfClaims);\n        setIsTimed(result.data.timed);\n        setPoints(result.data.points);\n      }\n      setGetCommissionResult(result.result);\n    }\n  }\n  async function deleteCommission() {\n    if (\n      commissionItemId === '' ||\n      deleteCommissionResult === loadingStateEnum.loading ||\n      deleteCommissionResult === loadingStateEnum.success\n    ) {\n      return;\n    }\n    setDeleteCommissionResult(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${commissionListId}/items/${commissionItemId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n      const deleteList = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}`,\n        'DELETE',\n      );\n      if (deleteList.ok) {\n        setDeleteCommissionResult(loadingStateEnum.success);\n      } else {\n        setDeleteCommissionResult(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteCommissionResult(loadingStateEnum.failed);\n    }\n  }\n  useEffect(() => {\n    if (id !== 'create') {\n      loadData();\n    } else {\n      setIsCreating(true);\n    }\n  }, []);\n\n  async function loadUpdateCommission() {\n    if (\n      (submitCommissionState === loadingStateEnum.failed ||\n        submitCommissionState === loadingStateEnum.notStarted) &&\n      id !== undefined\n    ) {\n      setSubmitCommissionState(loadingStateEnum.loading);\n      const result = await updateCommission(\n        isCreating,\n        commissionName,\n        isTimed,\n        points,\n        isHidden,\n        maxNumberOfClaims,\n        allowMultipleSubmissions,\n        selectedCommissionType,\n        selectedPostId,\n        selectedTeamId,\n        selectedChannelId,\n        startDate,\n        endDate,\n        id !== 'create' ? id : createUUID(),\n        proximity,\n        selectedPositionIn,\n        commissionItemId,\n      );\n      setSubmitCommissionState(result);\n    }\n  }\n\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        width,\n        height,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <ScrollView style={{ height, width, zIndex: 1 }}>\n        <BackButton to=\"/profile/government/commissions\" />\n        <View\n          style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>{isCreating ? 'Create New' : 'Edit'} Commission</Text>\n        </View>\n        <View\n          style={{\n            width,\n            height: height * 0.15,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <SegmentedPicker\n            selectedIndex={selectedCommissionType}\n            setSelectedIndex={setSelectedCommissionType}\n            options={[\n              'Issued',\n              'Location',\n              'Image',\n              'Image and Location',\n              'QRCode',\n            ]}\n            width={width * 0.8}\n            height={height * 0.1}\n          />\n        </View>\n        <Text>Commission Name</Text>\n        <TextInput\n          value={commissionName}\n          onChangeText={text => setCommissionName(text)}\n          placeholder=\"Commission Name\"\n        />\n        {selectedCommissionType === commissionTypeEnum.ImageLocation ||\n        selectedCommissionType === commissionTypeEnum.Location ? (\n          <View>\n            <View\n              style={{\n                width,\n                height: height * 0.3,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <MapWeb\n                proximity={proximity}\n                selectedPositionIn={selectedPositionIn}\n                onSetSelectedPositionIn={setSelectedPositionIn}\n                width={width * 0.8}\n                height={height * 0.3}\n              />\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Proximity</Text>\n              <TextInput\n                keyboardType=\"numeric\"\n                onChangeText={text => setProximity(parseFloat(text))}\n                value={proximity.toString()}\n                maxLength={10} // setting limit of input\n              />\n            </View>\n            <View\n              style={{\n                width,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Slider\n                width={width * 0.9}\n                height={50}\n                value={proximity / 1000}\n                onValueChange={value => {\n                  setProximity(value * 1000);\n                }}\n                containerWidth={width}\n              />\n            </View>\n          </View>\n        ) : null}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Timed: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isTimed ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setIsTimed(e);\n            }}\n            value={isTimed}\n          />\n        </View>\n        {isTimed ? (\n          <View>\n            <View\n              style={{\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width,\n              }}\n            >\n              <Text>Start Date</Text>\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.startDate);\n                }}\n              >\n                <Text>Pick Start Time</Text>\n              </Pressable>\n              <TimePickerModal\n                hours={new Date(startDate).getHours()}\n                minutes={new Date(startDate).getMinutes()}\n                visible={currentDatePickingMode === datePickingMode.startDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                onConfirm={e => {\n                  const newDate = new Date(startDate);\n                  newDate.setHours(e.hours);\n                  newDate.setMinutes(e.minutes);\n                  setStartDate(newDate);\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.startDate);\n                }}\n              >\n                <Text>Pick Start Date</Text>\n              </Pressable>\n              <DatePickerModal\n                locale=\"en\"\n                mode=\"single\"\n                label=\"Select Date\"\n                visible={currentDatePickingMode === datePickingMode.startDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                date={new Date(endDate)}\n                onConfirm={e => {\n                  if (e.date !== undefined) {\n                    const oldDate = new Date(endDate);\n                    const newDate = new Date(\n                      e.date.getFullYear(),\n                      e.date.getMonth(),\n                      e.date.getDate(),\n                      oldDate.getHours(),\n                      oldDate.getMinutes(),\n                    );\n                    setStartDate(newDate);\n                  }\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n            </View>\n            <View\n              style={{\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width,\n              }}\n            >\n              <Text>End Date</Text>\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.endDate);\n                }}\n              >\n                <Text>Pick End Time</Text>\n              </Pressable>\n              <TimePickerModal\n                hours={new Date(endDate).getHours()}\n                minutes={new Date(endDate).getMinutes()}\n                visible={currentDatePickingMode === datePickingMode.endTime}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                onConfirm={e => {\n                  const newDate = new Date(startDate);\n                  newDate.setHours(e.hours);\n                  newDate.setMinutes(e.minutes);\n                  setEndDate(newDate);\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.endDate);\n                }}\n              >\n                <Text>Pick End Date</Text>\n              </Pressable>\n              <DatePickerModal\n                locale=\"en\"\n                mode=\"single\"\n                label=\"Select Date\"\n                visible={currentDatePickingMode === datePickingMode.endDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                date={new Date(endDate)}\n                onConfirm={e => {\n                  console.log(e.date);\n                  if (e.date !== undefined) {\n                    const oldDate = new Date(endDate);\n                    const newDate = new Date(\n                      e.date.getFullYear(),\n                      e.date.getMonth(),\n                      e.date.getDate(),\n                      oldDate.getHours(),\n                      oldDate.getMinutes(),\n                    );\n                    setEndDate(newDate);\n                  }\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n            </View>\n          </View>\n        ) : null}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Points: </Text>\n          <TextInput\n            keyboardType=\"numeric\"\n            onChangeText={text => {\n              if (text === '') {\n                setPoints(0);\n              } else {\n                setPoints(parseFloat(text));\n              }\n            }}\n            value={points.toString()}\n            maxLength={10} // setting limit of input\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Allow Multiple Submissions: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={allowMultipleSubmissions ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setAllowMultipleSubmissions(e);\n            }}\n            value={allowMultipleSubmissions}\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Is Hidden: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isHidden ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setIsHidden(e);\n            }}\n            value={isHidden}\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Max number of claims: </Text>\n          <TextInput\n            value={maxNumberOfClaims.toString()}\n            onChangeText={e => {\n              if (e !== '') {\n                setMaxNumberOfClaims(parseFloat(e));\n              } else {\n                setMaxNumberOfClaims(0);\n              }\n            }}\n            inputMode=\"numeric\"\n          />\n        </View>\n        <Text>Post</Text>\n        <PostSelectionContainer\n          width={width}\n          height={height * 0.4}\n          selectedTeamId={selectedTeamId}\n          selectedPostId={selectedPostId}\n          setSelectedTeamId={setSelectedTeamId}\n          selectedChannelId={selectedChannelId}\n          setSelectedChannelId={setSelectedChannelId}\n          setSelectedPostId={setSelectedPostId}\n        />\n        {!isCreating && id !== undefined ? (\n          <View\n            style={{ marginTop: 10, marginBottom: 10, height: height * 0.5 }}\n          >\n            <CommissionSubmissions\n              commissionId={id}\n              width={width}\n              height={height * 0.5}\n            />\n          </View>\n        ) : null}\n        <Pressable\n          onPress={() => {\n            loadUpdateCommission();\n          }}\n        >\n          <Text>\n            {submitCommissionState === loadingStateEnum.notStarted\n              ? isCreating\n                ? 'Create Commission'\n                : 'Save Changes'\n              : submitCommissionState === loadingStateEnum.loading\n              ? 'Loading'\n              : submitCommissionState === loadingStateEnum.success\n              ? 'Success'\n              : 'Failed'}\n          </Text>\n        </Pressable>\n        {!isCreating ? (\n          <Pressable\n            onPress={() => {\n              deleteCommission();\n            }}\n          >\n            <Text>\n              {getTextState(deleteCommissionResult, {\n                notStarted: 'Delete Commission',\n                success: 'Deleted Commission',\n                failed: 'Failed To Delete Commission',\n              })}\n            </Text>\n          </Pressable>\n        ) : null}\n      </ScrollView>\n\n      {/* <View style={{height: height * 0.8, width: width * 0.8, position: \"absolute\", left: width * 0.1, top: height * 0.1, zIndex: 2, backgroundColor: (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? Colors.white:\"transparent\", borderRadius: 15, shadowColor: (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? \"black\":\"transparent\", shadowOffset: { width: 0, height: 1 }, shadowOpacity: 0.8, shadowRadius: 10, alignItems: \"center\", justifyContent: \"center\", alignContent: \"center\"}} pointerEvents={(currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? 'auto':'none'}>\n        { (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ?\n          <DatePicker \n            selectedDate={(currentDatePickingMode === datePickingMode.start) ? startDate:endDate} \n            onSetSelectedDate={(date) => {if (currentDatePickingMode === datePickingMode.end) {setEndDate(date)} else if (currentDatePickingMode === datePickingMode.start) {setStartDate(date)}}}\n            width={width * 0.7} height={height * 0.7} onCancel={() => {setCurrentDatePickingMode(datePickingMode.none)}}\n          />:null\n        }\n      </View> */}\n    </View>\n  );\n}\n\nenum postPickingMode {\n  team,\n  channel,\n  post,\n}\n\nfunction PostSelectionContainer({\n  width,\n  height,\n  selectedChannelId,\n  selectedTeamId,\n  selectedPostId,\n  setSelectedChannelId,\n  setSelectedPostId,\n  setSelectedTeamId,\n}: {\n  width: number;\n  height: number;\n  selectedTeamId: string;\n  selectedPostId: string;\n  setSelectedTeamId: (item: string) => void;\n  selectedChannelId: string;\n  setSelectedChannelId: (item: string) => void;\n  setSelectedPostId: (item: string) => void;\n}) {\n  const [currentPostPickingMode, setCurrentPostPickingMode] =\n    useState<postPickingMode>(postPickingMode.team);\n  return (\n    <>\n      {currentPostPickingMode === postPickingMode.team ? (\n        <GroupSelection\n          width={width}\n          height={height}\n          onSelect={e => {\n            setSelectedTeamId(e);\n            setCurrentPostPickingMode(postPickingMode.channel);\n          }}\n        />\n      ) : null}\n      {currentPostPickingMode === postPickingMode.channel ? (\n        <ChannelSelection\n          width={width}\n          height={height}\n          teamId={selectedTeamId}\n          onSelect={e => {\n            setSelectedChannelId(e);\n            setCurrentPostPickingMode(postPickingMode.post);\n          }}\n          onBack={() => {\n            setSelectedChannelId('');\n            setSelectedTeamId('');\n            setCurrentPostPickingMode(postPickingMode.team);\n          }}\n        />\n      ) : null}\n      {currentPostPickingMode === postPickingMode.post ? (\n        <PostSelection\n          width={width}\n          height={height}\n          teamId={selectedTeamId}\n          channelId={selectedChannelId}\n          selectedPostId={selectedPostId}\n          onSelect={setSelectedPostId}\n          onBack={() => {\n            setSelectedPostId('');\n            setSelectedChannelId('');\n            setCurrentPostPickingMode(postPickingMode.channel);\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction GroupSelection({\n  width,\n  height,\n  onSelect,\n}: {\n  width: number;\n  height: number;\n  onSelect: (item: string) => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [groupsState, setGroupsState] = useState(loadingStateEnum.loading);\n  const [groups, setGroups] = useState<groupType[]>([]);\n  async function loadData() {\n    const result = await getTeams();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setGroups(result.data);\n    }\n    setGroupsState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {groupsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {groupsState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              {groups.map(group => (\n                <Pressable\n                  key={`Group_${group.id}`}\n                  onPress={() => {\n                    onSelect(group.id);\n                  }}\n                >\n                  <Text>{group.name}</Text>\n                </Pressable>\n              ))}\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Groups</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction ChannelSelection({\n  width,\n  height,\n  teamId,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  teamId: string;\n  onSelect: (item: string) => void;\n  onBack: () => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [channelState, setChannelState] = useState(loadingStateEnum.loading);\n  const [channels, setChannels] = useState<channelType[]>([]);\n  async function loadData() {\n    const result = await getChannels(teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setChannels(result.data);\n    }\n    setChannelState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {channelState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {channelState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              <Pressable onPress={() => onBack()}>\n                <Text>Back</Text>\n              </Pressable>\n              {channels.map(channel => (\n                <Pressable\n                  key={`Channel_${channel.id}`}\n                  onPress={() => {\n                    onSelect(channel.id);\n                  }}\n                  style={{ width, alignItems: 'center' }}\n                >\n                  <Text>{channel.displayName}</Text>\n                </Pressable>\n              ))}\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Channels</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PostSelection({\n  width,\n  height,\n  teamId,\n  channelId,\n  selectedPostId,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  teamId: string;\n  channelId: string;\n  selectedPostId: string;\n  onSelect: (item: string) => void;\n  onBack: () => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [postsState, setPostsState] = useState(loadingStateEnum.loading);\n  const [posts, setPosts] = useState<resourceDataType[]>([]);\n  async function loadData() {\n    const result = await getPosts(teamId, channelId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setPosts(result.data);\n    }\n    setPostsState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {postsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {postsState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              <Pressable onPress={() => onBack()}>\n                <Text>Back</Text>\n              </Pressable>\n              <FlatList\n                data={posts}\n                renderItem={post => (\n                  <>\n                    {post.item.body !== '<systemEventMessage/>' ? (\n                      <Pressable\n                        key={`Post_${post.item.id}`}\n                        onPress={() => {\n                          onSelect(post.item.id);\n                        }}\n                        style={{\n                          padding: 5,\n                          margin: 5,\n                          backgroundColor:\n                            selectedPostId === post.item.id\n                              ? Colors.lightGray\n                              : Colors.white,\n                        }}\n                      >\n                        <WebViewCross\n                          html={post.item.body}\n                          width={width * 0.9}\n                        />\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              />\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Posts</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction CommissionSubmissions({\n  commissionId,\n  width,\n  height,\n}: {\n  commissionId: string;\n  width: number;\n  height: number;\n}) {\n  // Loading State\n  const [submissiosState, setSubmissionsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const [submissions, setSubmissions] = useState<submissionType[]>([]);\n  const [selectedSubmissionMode, setSelectedSubmissionMode] =\n    useState<submissionTypeEnum>(submissionTypeEnum.unApproved);\n\n  const [selectedSubmission, setSelectedSubmisson] = useState<\n    submissionType | undefined\n  >(undefined);\n\n  async function loadData() {\n    setSubmissionsState(loadingStateEnum.loading);\n    const result = await getSubmissions(commissionId, selectedSubmissionMode);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSubmissions(result.data);\n      setSubmissionsState(result.result);\n      if (result.count === 0) {\n        const secondResult = await getSubmissions(\n          commissionId,\n          submissionTypeEnum.unApproved,\n        );\n        if (\n          secondResult.result === loadingStateEnum.success &&\n          secondResult.data !== undefined\n        ) {\n          setSubmissions(result.data);\n          setSubmissionsState(secondResult.result);\n        }\n      }\n    } else {\n      setSubmissionsState(result.result);\n    }\n  }\n  useEffect(() => {\n    loadData();\n  }, [selectedSubmissionMode]);\n  return (\n    <>\n      {submissiosState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {submissiosState === loadingStateEnum.success ? (\n            <View style={{ width, height }}>\n              <View style={{ flexDirection: 'row' }}>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.all)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>All</Text>\n                </Pressable>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.unApproved)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>Unapproved</Text>\n                </Pressable>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.approved)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>Approved</Text>\n                </Pressable>\n              </View>\n              <FlatList\n                data={submissions}\n                renderItem={submission => (\n                  <Pressable\n                    style={{ margin: 10 }}\n                    onPress={() => setSelectedSubmisson(submission.item)}\n                  >\n                    <Text>{submission.item.userName}</Text>\n                    <Text>\n                      {new Date(\n                        submission.item.submissionTime,\n                      ).toLocaleDateString('en-US', {\n                        weekday: 'long',\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                        hour: 'numeric',\n                        minute: 'numeric',\n                        second: 'numeric',\n                      })}\n                    </Text>\n                  </Pressable>\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Failed To Load Submissions</Text>\n            </View>\n          )}\n        </>\n      )}\n      {selectedSubmission !== undefined ? (\n        <SubmissionView\n          width={width}\n          height={height}\n          setSubmissionData={() => {}}\n          submissionData={selectedSubmission}\n          onClose={() => setSelectedSubmisson(undefined)}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction SubmissionView({\n  width,\n  height,\n  submissionData,\n  onClose,\n  setSubmissionData,\n}: {\n  width: number;\n  height: number;\n  submissionData: submissionType;\n  onClose: () => void;\n  setSubmissionData: (item: submissionType) => void;\n}) {\n  const [changeState, setChangeState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [imageState, setImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [imageUri, setImageUri] = useState<string>('');\n  const [imgHeight, setImgHeight] = useState<number>(0);\n\n  async function changeSubmissionApproved() {\n    setChangeState(loadingStateEnum.loading);\n    const data = {\n      fields: {\n        submissionApproved: !submissionData.approved,\n        submissionReviewed: true,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.commissionSubmissionsListId}/items/${\n        submissionData.itemId\n      }`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      setChangeState(loadingStateEnum.success);\n    } else {\n      setChangeState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadImage() {\n    if (submissionData.submissionImage !== undefined) {\n      setImageState(loadingStateEnum.loading);\n      const shareResult = await getFileWithShareID(\n        submissionData.submissionImage,\n        0,\n      );\n      if (\n        shareResult.result === loadingStateEnum.success &&\n        shareResult.url !== undefined\n      ) {\n        setImageUri(shareResult.url);\n        setImageState(shareResult.result);\n        Image.getSize(\n          shareResult.url,\n          (imageMeasureWidth, imageMeasureHeight) => {\n            const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n            setImgHeight(width * 0.7 * heightPerWidth);\n          },\n        );\n      }\n      setImageState(shareResult.result);\n    }\n  }\n\n  useEffect(() => {\n    loadImage();\n  }, []);\n\n  return (\n    <View\n      style={{\n        width: width * 0.8,\n        height: height * 0.8,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n        position: 'absolute',\n        left: width * 0.1,\n        top: height * 0.1,\n        zIndex: 2,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Pressable onPress={() => onClose()} style={{ margin: 10 }}>\n        <CloseIcon width={12} height={12} />\n      </Pressable>\n      <View\n        style={{\n          width: width * 0.8,\n          alignContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text>Submission</Text>\n        <Text>By: {submissionData.userName}</Text>\n        <Text>\n          Time:{' '}\n          {new Date(submissionData.submissionTime).toLocaleDateString('en-US', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n          })}\n        </Text>\n        <Text>Approved: {submissionData.approved ? 'TURE' : 'FALSE'}</Text>\n        <Text>Reviewed: {submissionData.reviewed ? 'TRUE' : 'FALSE'}</Text>\n        <Text>Id: {submissionData.id}</Text>\n        {submissionData.submissionImage ? (\n          <>\n            {imageState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width: width * 0.8,\n                  height: height * 0.8,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={\n                    width * 0.8 < height * 0.8 ? width * 0.3 : height * 0.3\n                  }\n                  height={\n                    width * 0.8 < height * 0.8 ? width * 0.3 : height * 0.3\n                  }\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {imageState === loadingStateEnum.success ? (\n                  <Image\n                    source={{ uri: imageUri }}\n                    width={width * 0.7}\n                    resizeMode=\"center\"\n                    style={{\n                      width: width * 0.7,\n                      height: imgHeight,\n                      marginLeft: 'auto',\n                      marginRight: 'auto',\n                      alignContent: 'center',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      backgroundColor: '#FFFFFF',\n                      shadowOffset: { width: 0, height: 1 },\n                      shadowOpacity: 0.8,\n                      shadowRadius: 10,\n                      borderRadius: 15,\n                    }}\n                  />\n                ) : (\n                  <Text>Failed to load image</Text>\n                )}\n              </>\n            )}\n          </>\n        ) : null}\n      </View>\n      <Pressable onPress={() => changeSubmissionApproved()}>\n        <Text>\n          {changeState === loadingStateEnum.notStarted\n            ? submissionData.approved\n              ? 'REMOVE APPROVAL'\n              : 'APPROVE'\n            : changeState === loadingStateEnum.loading\n            ? 'Loading'\n            : changeState === loadingStateEnum.success\n            ? 'Success'\n            : 'Failed'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { dataContentTypeOptions, loadingStateEnum, postType } from '../../types';\nimport batchRequest from '../ultility/batchRequest';\nimport getFileWithShareID from '../ultility/getFileWithShareID';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport async function getSports(): Promise<{\n  result: loadingStateEnum;\n  data?: sportType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsListId\n    }/items?expand=fields($select=sportName,sportId,sportSvg)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const resultData: sportType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          name: data.value[index].fields.sportName,\n          id: data.value[index].fields.sportId,\n          svgData: data.value[index].fields.sportSvg,\n        });\n      }\n      return { result: loadingStateEnum.success, data: resultData };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSportsTeams(\n  sportId: string,\n): Promise<{ result: loadingStateEnum; data?: sportTeamType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${sportId}/items?expand=fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const resultData: sportTeamType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          teamName: data.value[index].fields.teamName,\n          season: data.value[index].fields.season,\n          teamId: data.value[index].fields.teamId,\n        });\n      }\n      return { result: loadingStateEnum.success, data: resultData };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSport(\n  id: string,\n): Promise<{ result: loadingStateEnum; data?: sportType; listId?: string }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsListId\n    }/items?$expand=fields&$filter=fields/sportId%20eq%20'${id}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length === 1) {\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.sportName,\n          id: data.value[0].fields.sportId,\n          svgData: data.value[0].fields.sportSvg,\n        },\n        listId: data.value[0].fields.id,\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// Andrew Mainella\n// October 7 2023\n// Pauly get submissions for sports\nexport default async function getSubmissions(): Promise<{\n  result: loadingStateEnum;\n  data?: mediaSubmissionType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsSubmissionsListId\n    }/items?expand=fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newMediaSubmissions: mediaSubmissionType[] = [];\n    if (data.value !== undefined) {\n      for (let index = 0; index < data.value.length; index += 1) {\n        newMediaSubmissions.push({\n          Title: data.value[index].fields.Title,\n          user: data.value[index].fields.User,\n          submissionId: data.value[index].fields.submissionId,\n          accepted: data.value[index].fields.accepted,\n          fileId: data.value[index].fields.fileId,\n          itemID: data.value[index].id,\n          selectedSportId: data.value[index].fields.selectedSportId,\n          selectedTeamId: data.value[index].fields.selectedTeamId,\n          reviewed: data.value[index].fields.reviewed,\n          fileType: data.value[index].fields.fileType\n        });\n      }\n      return { result: loadingStateEnum.success, data: newMediaSubmissions };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSportsContent(\n  team?: string,\n): Promise<{ result: loadingStateEnum; sports?: sportPost[] }> {\n  const filter = team ? `&$filter=fields/selectedTeamId%20eq%20'${team}'` : '';\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsApprovedSubmissionsListId\n    }/items?expand=fields($select=fileId,caption,selectedSportId,selectedTeamId,fileType)${filter}&$select=id`,\n  );\n  if (result.ok) {\n    const dataResult = await result.json();\n    console.log(dataResult)\n    if (dataResult.value.length !== undefined) {\n      const newSportsPosts: sportPost[] = [];\n      const shareResultsPromise: Promise<{\n        result: loadingStateEnum.success;\n        index: number;\n        url?: string | undefined;\n        contentType?: dataContentTypeOptions | undefined;\n      } | {result: loadingStateEnum.failed}>[] = [];\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        if (dataResult.value[index].fields.fileType === postType.microsoftFile) {\n          shareResultsPromise.push(\n            getFileWithShareID(dataResult.value[index].fields.fileId, index),\n          );\n        }\n      }\n      const shareResults: ({\n        result: loadingStateEnum.success;\n        index: number;\n        url?: string | undefined;\n        contentType?: dataContentTypeOptions | undefined;\n      }|{result: loadingStateEnum.failed})[] = await Promise.all(shareResultsPromise);\n\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        const item = shareResults.find((e) => {if (e.result === loadingStateEnum.success) {\n          return e.index === index\n        } else {return false}});\n        if (item !== undefined) {\n          if (item.result === loadingStateEnum.success) {\n            const fileType = item.contentType;\n            if (\n              shareResults[index].result === loadingStateEnum.success &&\n              fileType !== undefined &&\n              item.url !== undefined\n            ) {\n              newSportsPosts.push({\n                caption: dataResult.value[index].fields.caption,\n                data: {\n                  fileId: item.url,\n                  fileType: fileType,\n                  postType: postType.microsoftFile\n                }\n              });\n            } else {\n              return { result: loadingStateEnum.failed };\n            }\n          }\n        } else if (dataResult.value[index].fields.fileType ===  postType.youtubeVideo) {\n          newSportsPosts.push({\n            caption: dataResult.value[index].fields.caption,\n            data: {\n              fileId: dataResult.value[index].fields.fileId,\n              postType: postType.youtubeVideo\n            }\n          });\n        } else {\n          console.log(\"not working\", dataResult.value[index].fields)\n        }\n      }\n      console.log(\"return\", newSportsPosts)\n      return { result: loadingStateEnum.success, sports: newSportsPosts };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  const data = await result.json();\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getRoster(\n  teamId: string,\n): Promise<{ result: loadingStateEnum; data?: rosterType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${teamId}/items?$expand=fields($select=playerId,position,playerNumber,posts,imageShareId)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const batchData: { id: string; method: 'GET' | 'POST'; url: string }[][] =\n      [];\n    let batchIndex = -1;\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (index % 20 === 0) {\n        batchIndex += 1;\n        batchData.push([]);\n      }\n      batchData[batchIndex].push({\n        id: (index + 1 - 20 * batchIndex).toString(),\n        method: 'GET',\n        url: `/users/${data.value[index].fields.playerId}`,\n      });\n    }\n    const batchResult = await batchRequest(batchData);\n    if (\n      batchResult.result === loadingStateEnum.success &&\n      batchResult.data !== undefined\n    ) {\n      const outUsers: microsoftUserType[] = [];\n      for (let index = 0; index < batchResult.data.length; index += 1) {\n        if (batchResult.data[index].status === 200) {\n          // TO DO check okay response code\n          outUsers.push({\n            id: batchResult.data[index].body?.id,\n            displayName: batchResult.data[index].body?.displayName,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      const outputRosters: rosterType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        const userData = outUsers.find(e => {\n          return e.id === data.value[index].fields.playerId;\n        });\n        if (userData !== undefined) {\n          outputRosters.push({\n            name: userData.displayName,\n            id: data.value[index].fields.playerId,\n            imageShareId: data.value[index].fields.imageShareId,\n            position: data.value[index].fields.position,\n            playerNumber: data.value[index].fields.playerNumber,\n            posts:\n              data.value[index].fields.posts !== undefined\n                ? JSON.parse(data.value[index].fields.posts)\n                : undefined,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      return { result: loadingStateEnum.success, data: outputRosters };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n","import { View, Text } from 'react-native';\nimport React from 'react';\n\nexport default function SVGXml({\n  xml,\n  height,\n  width,\n}: {\n  xml: string;\n  width: number;\n  height: number;\n}) {\n  return (\n    <View style={{ height, width }}>\n      <div dangerouslySetInnerHTML={{ __html: xml }} />\n    </View>\n  );\n}\n","//https://stackoverflow.com/questions/54017100/how-to-integrate-youtube-iframe-api-in-reactjs-solution\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nclass YouTubeVideo extends React.PureComponent {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  };\n\n  componentDidMount = () => {\n    // On mount, check to see if the API script is already loaded\n\n    if (!window.YT) { // If not, load the script asynchronously\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\n      window.onYouTubeIframeAPIReady = this.loadVideo;\n\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n    } else { // If script is already there, load the video directly\n      this.loadVideo();\n    }\n  };\n  componentDidUpdate(oldProps) {\n    if (this.props.width !== oldProps.width || this.props.height !== oldProps.height) {\n      // var iframe = document.getElementsByName(`youtube-player-${this.props.id}`)[0];\n      // iframe.style.width = `${this.props.width}`;\n      console.log(\"update\")\n    } else {\n      console.log(\"update\")\n    }\n  }\n\n  loadVideo = () => {\n    const { id } = this.props;\n\n    // the Player object is created uniquely based on the id in props\n    this.player = new window.YT.Player(`youtube-player-${id}`, {\n      videoId: id,\n      height: `100%`,\n      width: `100%`,\n      playerVars: {\n        'playsinline': 1,\n        'loop': 1,\n        'rel':0\n      },\n      events: {\n        onReady: this.onPlayerReady,\n      },\n    });\n  };\n\n  onPlayerReady = event => {\n    event.target.playVideo();\n  };\n\n  render = () => {\n    const { id } = this.props;\n    return (\n      <div id={`youtube-player-${id}`} />\n    );\n  };\n}\n\nexport default YouTubeVideo;","import { View, Platform } from 'react-native'\nimport React from 'react'\nimport WebViewCross from './WebViewCross'\nimport YoutubeWeb from './youtubeIframeFunction'\n\n\nexport default function SportsYoutube({videoId, width, height}:{videoId: string, width: number, height?: number}) {\n  return (\n    <>\n      { (Platform.OS === 'web') ?\n        <View style={{width: width, height: height ? height:(width/16) * 9}}>\n          <YoutubeWeb id={videoId} width={width} height={height ? height:(width/16) * 9} />\n        </View>:\n        <WebViewCross rawHtml={\n          `\n            <!DOCTYPE html>\n            <html>\n              <head></head>\n              <body>\n                <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->\n                <div id=\"player\"></div>\n            \n                <script>\n                  // 2. This code loads the IFrame Player API code asynchronously.\n                  var tag = document.createElement('script');\n            \n                  tag.src = \"https://www.youtube.com/iframe_api\";\n                  var firstScriptTag = document.getElementsByTagName('script')[0];\n                  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n            \n                  // 3. This function creates an <iframe> (and YouTube player)\n                  //    after the API code downloads.\n                  var player;\n                  function onYouTubeIframeAPIReady() {\n                    player = new YT.Player('player', {\n                      height: '${(width/16) * 9}',\n                      width: '${width}',\n                      videoId: '${videoId}',\n                      playerVars: {\n                        'playsinline': 1\n                      },\n                      events: {\n                        'onReady': onPlayerReady,\n                        'onStateChange': onPlayerStateChange\n                      }\n                    });\n                  }\n            \n                  // 4. The API will call this function when the video player is ready.\n                  function onPlayerReady(event) {\n                    event.target.playVideo();\n                  }\n            \n                  // 5. The API calls this function when the player's state changes.\n                  //    The function indicates that when playing a video (state=1),\n                  //    the player should play for six seconds and then stop.\n                  var done = false;\n                  function onPlayerStateChange(event) {\n                    if (event.data == YT.PlayerState.PLAYING && !done) {\n                      setTimeout(stopVideo, 6000);\n                      done = true;\n                    }\n                  }\n                  function stopVideo() {\n                    player.stopVideo();\n                  }\n                </script>\n              </body>\n            </html>\n          `} width={width} height={height ? height:(width/16) * 9}/>\n      }\n    </>\n  )\n}","import { ResizeMode, Video } from 'expo-av';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  ScrollView,\n  Pressable,\n  FlatList,\n  ListRenderItemInfo,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport { getRoster, getSports, getSportsContent, getSportsTeams } from '../Functions/sports/sportsFunctions';\nimport getFileWithShareID from '../Functions/ultility/getFileWithShareID';\nimport SegmentedPicker from '../UI/Pickers/SegmentedPicker';\nimport SVGXml from '../UI/SVGXml/SVGXml';\nimport BackButton from '../UI/BackButton';\nimport ProgressView from '../UI/ProgressView';\nimport { Colors, dataContentTypeOptions, loadingStateEnum, postType } from '../types';\nimport SportsYoutube from '../UI/SportsYoutube';\n\nexport default function Sports() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [sportsPosts, setSportsPosts] = useState<sportPost[]>([]);\n  const [loadingResult, setLoadingResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [sportsState, setSportsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [teamsState, setTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedSport, setSelectedSport] = useState<sportType | undefined>(\n    undefined,\n  );\n  const [selectedTeam, setSelectedTeam] = useState<sportTeamType | undefined>(\n    undefined,\n  );\n  const [isShowingTeams, setIsShowingTeams] = useState<boolean>(false);\n  const [sports, setSports] = useState<sportType[]>([]);\n  const [isShowingRoster, setIsShowingRoster] = useState<boolean>(false);\n  const [sportsTeams, setSportsTeams] = useState<sportTeamType[]>([]);\n  const [sportsSelectHeight, setSportsSelectHeight] = useState<number>(34);\n  const dispatch = useDispatch();\n\n  async function loadSports() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSports(result.data);\n    }\n    setSportsState(result.result);\n  }\n\n  async function loadTeams(sport: sportType) {\n    const result = await getSportsTeams(sport.id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSportsTeams(result.data);\n    }\n    setTeamsState(result.result);\n  }\n\n  async function loadSportsContent() {\n    const result = await getSportsContent(selectedTeam?.teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.sports !== undefined\n    ) {\n      setSportsPosts(result.sports);\n    }\n    setLoadingResult(result.result);\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n    loadSports();\n  }, []);\n\n  useEffect(() => {\n    loadSportsContent();\n  }, [selectedTeam]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        backgroundColor: Colors.white,\n        overflow: 'hidden',\n      }}\n    >\n      <View\n        style={{\n          height: height * 0.1,\n          width,\n          backgroundColor: Colors.darkGray,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n        <Text\n          style={{\n            fontFamily: 'BukhariScript',\n            color: 'white',\n            fontSize: height * 0.06,\n          }}\n        >\n          Sports\n        </Text>\n      </View>\n      <ScrollView\n        style={{\n          height: isShowingTeams ? height * 0.1 : sportsSelectHeight,\n          width,\n        }}\n        horizontal\n      >\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            <>\n              {sportsState === loadingStateEnum.loading ? (\n                <View\n                  style={{\n                    width: isShowingTeams ? height * 0.05 : height * 0.1,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <ProgressView width={15} height={15} />\n                </View>\n              ) : (\n                <>\n                  {sportsState === loadingStateEnum.success ? (\n                    <>\n                      <Pressable\n                        style={{\n                          backgroundColor: Colors.darkGray,\n                          borderWidth: selectedSport === undefined ? 3 : 0,\n                          borderColor: 'black',\n                          borderRadius: 15,\n                          alignContent: 'center',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          marginLeft: 3,\n                          marginTop: 3,\n                        }}\n                        onPress={() => {\n                          setSelectedTeam(undefined);\n                          setSportsTeams([]);\n                          setSelectedSport(undefined);\n                          setIsShowingRoster(false);\n                          setIsShowingTeams(false);\n                        }}\n                      >\n                        <Text\n                          style={{\n                            margin: isShowingTeams ? 5 : 10,\n                            color: Colors.white,\n                            marginBottom: isShowingTeams ? 5 : 10,\n                          }}\n                        >\n                          Highlights\n                        </Text>\n                      </Pressable>\n                      {sports.map(sport => (\n                        <Pressable\n                          key={`SportButton_${sport.id}`}\n                          onLayout={e => {\n                            setSportsSelectHeight(e.nativeEvent.layout.height);\n                          }}\n                          onPress={() => {\n                            setSelectedSport(sport);\n                            loadTeams(sport);\n                            setIsShowingTeams(true);\n                            setIsShowingRoster(false);\n                          }}\n                          style={{\n                            backgroundColor: Colors.darkGray,\n                            borderWidth: selectedSport?.id === sport.id ? 3 : 0,\n                            borderColor: 'black',\n                            borderRadius: 15,\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            marginLeft: 3,\n                            marginTop: 3,\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: 'row',\n                              alignContent: 'center',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              marginLeft: 10,\n                            }}\n                          >\n                            <SVGXml\n                              xml={sport.svgData}\n                              width={20}\n                              height={20}\n                            />\n                            <View style={{ marginLeft: 4 }}>\n                              <Text\n                                style={{\n                                  margin: isShowingTeams ? 5 : 10,\n                                  marginLeft: 2,\n                                  color: Colors.white,\n                                  marginBottom:\n                                    sport.id === selectedSport?.id &&\n                                    selectedTeam !== undefined &&\n                                    !isShowingTeams\n                                      ? 0\n                                      : isShowingTeams\n                                      ? 5\n                                      : 10,\n                                }}\n                              >\n                                {sport.name}\n                              </Text>\n                              {sport.id === selectedSport?.id &&\n                              selectedTeam !== undefined &&\n                              !isShowingTeams ? (\n                                <View>\n                                  <Text\n                                    style={{\n                                      color: Colors.white,\n                                      marginBottom: 5,\n                                      marginLeft: 2,\n                                      marginRight: 10,\n                                    }}\n                                  >\n                                    {selectedTeam?.teamName}\n                                  </Text>\n                                </View>\n                              ) : null}\n                            </View>\n                          </View>\n                        </Pressable>\n                      ))}\n                    </>\n                  ) : (\n                    <View>\n                      <Text>Failed</Text>\n                    </View>\n                  )}\n                </>\n              )}\n            </>\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {isShowingTeams ? (\n              <>\n                {sportsState === loadingStateEnum.loading ? (\n                  <View\n                    style={{\n                      width,\n                      height: height * 0.05,\n                      alignContent: 'center',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <ProgressView width={15} height={15} />\n                  </View>\n                ) : (\n                  <>\n                    {sportsState === loadingStateEnum.success ? (\n                      <>\n                        {sportsTeams.map(team => (\n                          <Pressable\n                            key={`SportTeam_${team.teamId}`}\n                            onPress={() => {\n                              setSelectedTeam(team);\n                              setIsShowingTeams(false);\n                              setIsShowingRoster(false);\n                            }}\n                            style={{\n                              backgroundColor: Colors.darkGray,\n                              borderRadius: 15,\n                              alignContent: 'center',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              marginLeft: 3,\n                              marginTop: 3,\n                            }}\n                          >\n                            <Text style={{ margin: 5, color: Colors.white }}>\n                              {team.teamName}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </>\n                    ) : (\n                      <Text>Failed to load Sports</Text>\n                    )}\n                  </>\n                )}\n              </>\n            ) : null}\n          </View>\n        </View>\n      </ScrollView>\n      {loadingResult === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height:\n              height * 0.8 +\n              (isShowingTeams ? 0 : height * 0.1 - sportsSelectHeight),\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.25 : height * 0.25}\n            height={width < height ? width * 0.5 : height * 0.5}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingResult === loadingStateEnum.success ? (\n            <ScrollView style={{ height: height * 0.8 }}>\n              {selectedTeam !== undefined ? (\n                <View style={{ marginLeft: 5, marginRight: 10, marginTop: 10 }}>\n                  <SegmentedPicker\n                    selectedIndex={isShowingRoster ? 1 : 0}\n                    setSelectedIndex={e => {\n                      if (e === 0) {\n                        setIsShowingRoster(false);\n                      } else if (e === 1) {\n                        setIsShowingRoster(true);\n                      }\n                    }}\n                    options={['Highlights', 'Roster']}\n                    width={width - 16}\n                    height={25}\n                  />\n                </View>\n              ) : null}\n              {isShowingRoster && selectedTeam !== undefined ? (\n                <RosterView\n                  teamId={selectedTeam.teamId}\n                  width={width}\n                  height={height * 0.7}\n                />\n              ) : (\n                <>\n                  <FlatList \n                    data={sportsPosts}\n                    renderItem={(post) => <SportsPostBlock post={post} /> }\n                  />\n                </>\n              )}\n            </ScrollView>\n          ) : (\n            <View>\n              <Text>Something went wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n\nfunction SportsPostBlock({post}:{post: ListRenderItemInfo<sportPost>}) {\n  const { width, height} = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  useEffect(() => {\n    console.log(post.item)\n  }, [])\n  return (\n    <View\n      key={`Sport_${post.item.data.fileId}`}\n      style={{ marginTop: height * 0.05 }}\n    >\n      {post.item.data.postType === postType.microsoftFile ?\n        <>\n          {post.item.data.fileType === dataContentTypeOptions.image ? (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.4,\n                backgroundColor: Colors.white,\n                shadowColor: 'black',\n                shadowOffset: { width: 1, height: 1 },\n                shadowOpacity: 1,\n                shadowRadius: 5,\n                marginLeft: width * 0.05,\n                marginRight: width * 0.05,\n                borderRadius: 15,\n              }}\n            >\n              <Text\n                style={{\n                  position: 'absolute',\n                  left: 5,\n                  bottom: 5,\n                  zIndex: 100,\n                }}\n              >\n                {post.item.caption}\n              </Text>\n              <Image\n                style={{\n                  width: width * 0.9,\n                  height: height * 0.4,\n                  marginLeft: width * 0.05,\n                  marginRight: width * 0.05,\n                  borderRadius: 15,\n                }}\n                source={{ uri: post.item.data.fileId }}\n              />\n            </View>\n          ) : null}\n          {post.item.data.fileType === dataContentTypeOptions.video ? (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.4,\n                backgroundColor: Colors.white,\n                shadowColor: Colors.black,\n                shadowOffset: { width: 1, height: 1 },\n                shadowOpacity: 1,\n                shadowRadius: 5,\n                marginLeft: width * 0.05,\n                marginRight: width * 0.05,\n                borderRadius: 15,\n              }}\n            >\n              <Text\n                style={{\n                  position: 'absolute',\n                  left: 5,\n                  bottom: 5,\n                  zIndex: 100,\n                }}\n              >\n                {post.item.caption}\n              </Text>\n              <Video\n                useNativeControls\n                source={{ uri: post.item.data.fileId }}\n                resizeMode={ResizeMode.COVER}\n                style={{\n                  width: width * 0.9,\n                  height: height * 0.4,\n                  alignSelf: 'stretch',\n                  borderRadius: 15,\n                }}\n                videoStyle={{\n                  width: width * 0.9,\n                  height: height * 0.4,\n                }}\n              />\n            </View>\n          ) : null}\n        </>:null\n      }\n      {post.item.data.postType === postType.youtubeVideo ?\n        <View style={{\n          width: width * 0.9,\n          marginLeft: width * 0.05,\n          marginBottom: 5,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n          overflow: 'hidden'\n        }}>\n          <SportsYoutube width={width * 0.9} videoId={post.item.data.fileId} />\n        </View>:null\n      }\n    </View>\n  )\n}\n\nfunction RosterView({\n  teamId,\n  width,\n  height,\n}: {\n  teamId: string;\n  width: number;\n  height: number;\n}) {\n  const [rosterLoadingState, setRosterLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [roster, setRoster] = useState<rosterType[]>([]);\n\n  async function loadRoster() {\n    const result = await getRoster(teamId);\n    console.log(result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRoster(result.data);\n    }\n    setRosterLoadingState(result.result);\n  }\n\n  useEffect(() => {\n    loadRoster();\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      {rosterLoadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <ProgressView width={width * 0.1} height={height * 0.1} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {rosterLoadingState === loadingStateEnum.success ? (\n            <View>\n              <View\n                style={{ flexDirection: 'row', marginTop: 10, marginBottom: 5 }}\n              >\n                <Text style={{ marginLeft: 35, width: width * 0.4 }}>\n                  Player\n                </Text>\n                <Text style={{ width: width * 0.3 }}>Player Number</Text>\n                <Text>Position</Text>\n              </View>\n              <FlatList\n                data={roster}\n                renderItem={item => (\n                  <View\n                    style={{\n                      backgroundColor:\n                        item.index % 2 === 0 ? Colors.white : Colors.lightGray,\n                    }}\n                  >\n                    <View style={{ flexDirection: 'row', margin: 10 }}>\n                      <RosterImage id={item.item.imageShareId} />\n                      <Text style={{ marginLeft: 5, width: width * 0.4 }}>\n                        {item.item.name}\n                      </Text>\n                      {item.item.playerNumber !== undefined ? (\n                        <Text style={{ width: width * 0.3 }}>\n                          {item.item.playerNumber}\n                        </Text>\n                      ) : null}\n                      {item.item.position !== undefined ? (\n                        <Text>{item.item.position}</Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Something went wrong loading the roster</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction RosterImage({ id }: { id?: string }) {\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const [imageState, setImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  async function loadData(imageId: string) {\n    setImageState(loadingStateEnum.loading);\n    const result = await getFileWithShareID(imageId, 0);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.url !== undefined\n    ) {\n      setImageUrl(result.url);\n      setImageState(loadingStateEnum.success);\n    } else {\n      setImageState(loadingStateEnum.failed);\n    }\n  }\n  useEffect(() => {\n    if (id !== undefined) {\n      loadData(id);\n    }\n  }, [id]);\n\n  return (\n    <>\n      {imageState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width: 20,\n            height: 20,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={14} height={14} />\n        </View>\n      ) : (\n        <>\n          {imageState === loadingStateEnum.success ? (\n            <View>\n              <Image\n                source={{ uri: imageUrl }}\n                style={{ width: 20, height: 20, borderRadius: 10 }}\n              />\n            </View>\n          ) : (\n            <>\n              {imageState === loadingStateEnum.notStarted ? (\n                <View style={{ width: 20, height: 20 }} />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","//\n//  DayView.tsx\n//  Pauly\n//\n//  Created by Andrew Mainella on 2023-07-21.\n//\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { View, ScrollView, useColorScheme, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport {\n  calculateIfShowing,\n  computeEventHeight,\n  findTimeOffset,\n  isDateToday,\n} from '../../Functions/calendar/calendarFunctions';\nimport { RootState } from '../../Redux/store';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum } from '../../types';\nimport { getClassEventsFromDay } from '../../Functions/classesFunctions';\n\nexport default function DayView({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const colorScheme = useColorScheme();\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const [heightOffsetTop, setHeightOffsetTop] = useState<number>(0);\n  const [currentMinuteInt, setCurrentMinuteInt] = useState<number>(0);\n  const [currentTime, setCurrentTime] = useState<string>('12:00');\n  const [isShowingTime, setIsShowingTime] = useState<boolean>(true);\n  const [hourLength, setHourLength] = useState<number>(0);\n  const hoursText: string[] = [\n    '12AM',\n    '1AM',\n    '2AM',\n    '3AM',\n    '4AM',\n    '5AM',\n    '6AM',\n    '7AM',\n    '8AM',\n    '9AM',\n    '10AM',\n    '11AM',\n    '12PM',\n    '1PM',\n    '2PM',\n    '3PM',\n    '4PM',\n    '5PM',\n    '6PM',\n    '7PM',\n    '8PM',\n    '9PM',\n    '10PM',\n    '11PM',\n  ];\n  const mainScrollRef = useRef<ScrollView>(null);\n  const [eventsPane, setEventsPane] = useState<number[][]>([[]]); // This is a sorted 2d array for calculating the horizintal shift of an event\n  const [schoolEvents, setSchoolEvents] = useState<eventType[]>();\n\n  function setCurrentTimeFunction(hour: number, minuite: number) {\n    if (minuite.toString().length == 1) {\n      if (hour == 12) {\n        setCurrentTime(`12:0${minuite.toString()}`);\n      } else {\n        setCurrentTime(`${(hour % 12).toString()}:0${minuite.toString()}`);\n      }\n    } else if (hour == 12) {\n      setCurrentTime(`12:${minuite}`);\n    } else {\n      setCurrentTime(`${(hour % 12).toString()}:${minuite.toString()}`);\n    }\n  }\n\n  function loadCalendarContent() {\n    const currentDate = new Date();\n    const resultHeightTopOffset = findTimeOffset(currentDate, height);\n    setHeightOffsetTop(resultHeightTopOffset);\n    const minuiteInt: number = currentDate.getMinutes();\n    setCurrentMinuteInt(minuiteInt);\n    const hourInt = currentDate.getHours();\n    setCurrentTimeFunction(hourInt, minuiteInt);\n    mainScrollRef.current?.scrollTo({\n      x: 0,\n      y: resultHeightTopOffset,\n      animated: false,\n    });\n  }\n\n  function updateOnTimeChange() {\n    const minuiteInt = new Date().getMinutes();\n    if (currentMinuteInt != minuiteInt!) {\n      setCurrentMinuteInt(minuiteInt);\n\n      const hourInt = new Date().getHours();\n      if (minuiteInt.toString().length == 1) {\n        setCurrentTimeFunction(hourInt, minuiteInt);\n      } else {\n        setCurrentTimeFunction(hourInt, minuiteInt);\n      }\n      setHeightOffsetTop(findTimeOffset(new Date(), height));\n    }\n  }\n\n  // https://stackoverflow.com/questions/65049812/how-to-call-a-function-every-minute-in-a-react-component\n  // Upadtes every second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updateOnTimeChange();\n    }, 1000);\n\n    return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\n  }, []);\n\n  useEffect(() => {\n    setHourLength(height * 0.1);\n    loadCalendarContent();\n  }, []);\n\n  async function getClassesEvents() {\n    const result = await getClassEventsFromDay();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSchoolEvents(result.data);\n    }\n  }\n\n  useEffect(() => {\n    getClassesEvents();\n  }, [selectedDate]);\n\n  return (\n    <ScrollView\n      style={{ height, width, backgroundColor: Colors.white }}\n      ref={mainScrollRef}\n    >\n      <>\n        {isShowingTime ? (\n          <>\n            {hoursText.map(value => (\n              <View\n                key={`${value}_${createUUID()}`}\n                style={{ flexDirection: 'row', height: hourLength }}\n              >\n                {calculateIfShowing(value, new Date(selectedDate)) ? (\n                  <Text\n                    style={{\n                      color: colorScheme == 'dark' ? Colors.white : 'black',\n                    }}\n                  >\n                    {value}\n                  </Text>\n                ) : null}\n                <View\n                  style={{\n                    backgroundColor: 'black',\n                    width: width * 0.9,\n                    height: 6,\n                    position: 'absolute',\n                    right: 0,\n                    borderRadius: 25,\n                  }}\n                />\n              </View>\n            ))}\n          </>\n        ) : null}\n      </>\n      {currentEvents.map(event => (\n        <>\n          {event.allDay ||\n          new Date(event.endTime).getFullYear() !==\n            new Date(selectedDate).getFullYear() ||\n          new Date(event.endTime).getMonth() !==\n            new Date(selectedDate).getMonth() ||\n          new Date(event.endTime).getDate() !==\n            new Date(selectedDate).getDate() ? null : (\n            <EventBlock\n              event={event}\n              width={width}\n              height={height}\n              eventPane={eventsPane}\n              setEventPane={setEventsPane}\n            />\n          )}\n        </>\n      ))}\n      {schoolEvents?.map(event => (\n        <EventBlock\n          event={event}\n          width={width}\n          height={height}\n          eventPane={eventsPane}\n          setEventPane={setEventsPane}\n        />\n      ))}\n      {new Date(selectedDate).getDate() === new Date().getDate() &&\n      new Date(selectedDate).getMonth() === new Date().getMonth() &&\n      new Date(selectedDate).getFullYear() === new Date().getFullYear() ? (\n        <View\n          style={{\n            position: 'absolute',\n            top: heightOffsetTop,\n            height: height * 0.005,\n            width,\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}\n        >\n          <Text style={{ color: 'red', zIndex: 2 }}>{currentTime}</Text>\n          <View\n            style={{\n              backgroundColor: 'red',\n              width: width * 0.914,\n              height: 6,\n              position: 'absolute',\n              right: 0,\n            }}\n          />\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nfunction EventBlock({\n  event,\n  width,\n  height,\n  eventPane,\n  setEventPane,\n}: {\n  event: eventType;\n  width: number;\n  height: number;\n  eventPane: number[][];\n  setEventPane: (item: number[][]) => void;\n}) {\n  const EventHeight = computeEventHeight(\n    new Date(event.startTime),\n    new Date(event.endTime),\n    height,\n  );\n  const Offset = findTimeOffset(new Date(event.startTime), height);\n  const [horizontalShift, setHorizontalShift] = useState<number>(0);\n  function calculateHorizontalShift() {\n    let handeled = false;\n    for (\n      let horizontalCheck = 0;\n      horizontalCheck < eventPane.length;\n      horizontalCheck += 1\n    ) {\n      const beforeIndex = eventPane[horizontalCheck].findIndex(\n        e => e >= Offset,\n      );\n      if (beforeIndex !== -1) {\n        if (beforeIndex - 1 < eventPane[horizontalCheck].length) {\n          if (eventPane[horizontalCheck][beforeIndex - 1] <= Offset) {\n            // Fail Check Next Hoizontal Array\n            continue;\n          } else {\n            // Everything Checks Out\n            const afterIndex = eventPane[horizontalCheck].findIndex(\n              e => e >= Offset + EventHeight,\n            );\n            if (afterIndex !== -1) {\n              if (afterIndex - 1 < eventPane[horizontalCheck].length) {\n                if (\n                  eventPane[horizontalCheck][afterIndex - 1] <=\n                  Offset + EventHeight\n                ) {\n                  // Fails check next horizontal array\n                  continue;\n                } else {\n                  // All Good\n                  eventPane[horizontalCheck].push(Offset);\n                  eventPane[horizontalCheck].push(Offset + EventHeight);\n                  eventPane[horizontalCheck].sort();\n                  handeled = true;\n                  break;\n                }\n              } else {\n                // Error\n                continue;\n              }\n            } else {\n              // All Good\n              const newEvents: number[][] = eventPane;\n              newEvents[horizontalCheck].push(Offset);\n              newEvents[horizontalCheck].push(Offset + EventHeight);\n              // [...eventPane[horizontalCheck], Offset, Offset + EventHeight])\n              eventPane[horizontalCheck].sort();\n              handeled = true;\n              break;\n            }\n          }\n        } else {\n          // Error\n          continue;\n        }\n      } else {\n        eventPane[horizontalCheck].push(Offset);\n        eventPane[horizontalCheck].push(Offset + EventHeight);\n        eventPane[horizontalCheck].sort();\n        handeled = true;\n        break;\n      }\n    }\n\n    if (!handeled) {\n      eventPane.push([]);\n      eventPane[eventPane.length - 1].push(Offset);\n      eventPane[eventPane.length - 1].push(Offset + EventHeight);\n    }\n    setHorizontalShift(width * horizontalCheck);\n  }\n\n  useEffect(() => {\n    calculateHorizontalShift();\n  }, []);\n\n  return (\n    <View\n      key={`Event_${createUUID()}`}\n      style={{\n        width: width * 0.9,\n        height: EventHeight,\n        top: Offset,\n        position: 'absolute',\n        right: 0,\n        borderColor: Colors.maroon,\n        borderLeftWidth: 3,\n      }}\n    >\n      <View\n        style={{\n          width: width * 0.9,\n          height: EventHeight,\n          position: 'absolute',\n          backgroundColor: event.eventColor,\n          opacity: 0.3,\n          zIndex: -1,\n        }}\n      />\n      <Text style={{ opacity: 1 }}>{event.name}</Text>\n      <Text>\n        {new Date(event.startTime).toLocaleString('en-us', {\n          hour: 'numeric',\n          minute: 'numeric',\n        })}{' '}\n        to{' '}\n        {new Date(event.endTime).toLocaleString('en-us', {\n          hour: 'numeric',\n          minute: 'numeric',\n        })}\n      </Text>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DayView from './DayView';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport { RootState } from '../../Redux/store';\nimport { selectedDateSlice } from '../../Redux/reducers/selectedDateReducer';\nimport { Colors } from '../../types';\nimport { ChevronLeft, ChevronRight } from '../../UI/Icons/Icons';\n\nexport default function Week({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const selectedDateRedux: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  const [daysOfWeek, setDaysOfWeek] = useState<Date[]>([]);\n  const dispatch = useDispatch();\n  function getDOW(selectedDate: Date) {\n    const week: Date[] = [];\n    // Starting Monday not Sunday\n    selectedDate.setDate(selectedDate.getDate() - selectedDate.getDay());\n    for (let i = 0; i < 7; i += 1) {\n      week.push(new Date(selectedDate));\n      selectedDate.setDate(selectedDate.getDate() + 1);\n    }\n    return week;\n  }\n  useEffect(() => {\n    setDaysOfWeek(getDOW(new Date(selectedDateRedux)));\n  }, [selectedDateRedux]);\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View>\n        {/* 768 TO DO get dimentiosn value */}\n        {false ? (\n          <View />\n        ) : (\n          <View>\n            <View\n              style={{\n                flexDirection: 'row',\n                height: width * 0.142857142857143,\n                width,\n              }}\n            >\n              <Pressable\n                style={{ margin: width * 0.01111111111111111 }}\n                onPress={() => {\n                  const d = new Date(selectedDateRedux);\n                  d.setDate(d.getDate() - 7);\n                  dispatch(\n                    selectedDateSlice.actions.setCurrentEventsLastCalled(\n                      d.toISOString(),\n                    ),\n                  );\n                }}\n              >\n                <ChevronLeft\n                  width={width * 0.08888888888888889}\n                  height={width * 0.08888888888888889}\n                />\n              </Pressable>\n              {daysOfWeek.map(day => (\n                <Pressable\n                  onPress={() => {\n                    dispatch(\n                      selectedDateSlice.actions.setCurrentEventsLastCalled(\n                        day.toISOString(),\n                      ),\n                    );\n                  }}\n                  key={`${day.getDay()}_${createUUID()}`}\n                  style={{\n                    width: width * 0.08888888888888889,\n                    height: width * 0.08888888888888889,\n                    margin: width * 0.01111111111111111,\n                    borderRadius: 50,\n                    backgroundColor: Colors.darkGray,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    borderColor:\n                      day.getDate() === new Date(selectedDateRedux).getDate()\n                        ? 'black'\n                        : Colors.maroon,\n                    borderWidth:\n                      new Date().getDate() === day.getDate() ||\n                      day.getDate() === new Date(selectedDateRedux).getDate()\n                        ? 5\n                        : 0,\n                  }}\n                >\n                  <Text style={{ color: Colors.white }}>{day.getDate()}</Text>\n                </Pressable>\n              ))}\n              <Pressable\n                style={{ margin: width * 0.01111111111111111 }}\n                onPress={() => {\n                  const d = new Date(selectedDateRedux);\n                  d.setDate(d.getDate() + 7);\n                  dispatch(\n                    selectedDateSlice.actions.setCurrentEventsLastCalled(\n                      d.toISOString(),\n                    ),\n                  );\n                }}\n              >\n                <ChevronRight\n                  width={width * 0.08888888888888889}\n                  height={width * 0.08888888888888889}\n                />\n              </Pressable>\n            </View>\n          </View>\n        )}\n      </View>\n      <View\n        style={{\n          height: false ? height : height - width * 0.179,\n          width,\n          alignContent: 'center',\n          alignItems: 'center',\n          backgroundColor: Colors.white,\n        }}\n      >\n        <DayView\n          width={width * 0.95}\n          height={false ? height * 0.757 : height}\n        />\n      </View>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport { RootState } from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\n\nexport default function SelectTimetable({\n  governmentMode,\n  onSelect,\n}: {\n  governmentMode: boolean;\n  onSelect?: (item: timetableStringType) => void;\n}) {\n  const { timetablesListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [loadedTimetables, setLoadedTimetables] = useState<\n    timetableStringType[]\n  >([]);\n  const navigate = useNavigate();\n\n  async function getTimetables() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${timetablesListId}/items?expand=fields`,\n    );\n    if (result.ok) {\n      const dataResult = await result.json();\n      if (\n        dataResult.value.length !== undefined &&\n        dataResult.value.length !== null\n      ) {\n        const newLoadedTimetables: timetableStringType[] = [];\n        for (let index = 0; index < dataResult.value.length; index += 1) {\n          try {\n            newLoadedTimetables.push({\n              name: dataResult.value[index].fields.timetableName,\n              id: dataResult.value[index].fields.timetableId,\n            });\n          } catch (e) {\n            // TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n          }\n        }\n        setLoadedTimetables(newLoadedTimetables);\n        setLoadingState(loadingStateEnum.success);\n      }\n    } else {\n      setLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getTimetables();\n  }, []);\n\n  return (\n    <View>\n      {loadingState === loadingStateEnum.loading ? <Text>Loading</Text> : null}\n      {loadingState === loadingStateEnum.success ? (\n        <View>\n          {loadedTimetables.map(timetable => (\n            <Pressable\n              key={`Timetable_${timetable.id}`}\n              onPress={() => {\n                if (governmentMode) {\n                  navigate(\n                    `/profile/government/calendar/timetable/${timetable.id}`,\n                  );\n                } else if (onSelect !== undefined) {\n                  onSelect(timetable);\n                }\n              }}\n            >\n              <View>\n                <Text>{timetable.name}</Text>\n              </View>\n            </Pressable>\n          ))}\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.failed ? <Text>Failure</Text> : null}\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, ScrollView } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport {\n  getGraphEvents,\n  getTimetable,\n} from '../../Functions/calendar/calendarFunctionsGraph';\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport store, { RootState } from '../../Redux/store';\nimport { loadingStateEnum, semesters } from '../../types';\n\nenum pickSchoolDayMode {\n  schoolYear,\n  schoolDay,\n  schedule,\n  dressCode,\n  semester,\n  dressCodeIncentives,\n}\n\nexport default function SelectSchoolDayData({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const [schoolDayMode, setSchoolDayMode] = useState<pickSchoolDayMode>(\n    pickSchoolDayMode.schoolYear,\n  );\n  const [timetableState, setTimetableState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [timetable, setTimetable] = useState<timetableType | undefined>(\n    undefined,\n  );\n  const { selectedSchoolDayData, selectedSchoolYear } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const dispatch = useDispatch();\n\n  async function loadData(id: string) {\n    setTimetableState(loadingStateEnum.loading);\n    const result = await getTimetable(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.timetable !== undefined\n    ) {\n      setTimetable(result.timetable);\n      setTimetableState(loadingStateEnum.success);\n    } else {\n      setTimetableState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (\n      selectedSchoolYear !== undefined &&\n      timetable === undefined &&\n      selectedSchoolYear.paulyEventData !== undefined\n    ) {\n      loadData(selectedSchoolYear.paulyEventData);\n    }\n  }, [schoolDayMode, selectedSchoolYear]);\n\n  return (\n    <View style={{ width, height }}>\n      {schoolDayMode === pickSchoolDayMode.schoolYear ? (\n        <SchoolYearsSelect\n          onSelect={() => setSchoolDayMode(pickSchoolDayMode.schoolDay)}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.schoolDay ? (\n        <SchoolDaySelect\n          width={width}\n          height={height}\n          timetable={timetable}\n          loadingState={timetableState}\n          onSelect={() => {\n            setSchoolDayMode(pickSchoolDayMode.schedule);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schoolYear);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.schedule &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <ScheduleSelect\n          schedules={timetable.schedules}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: e,\n                dressCode: selectedSchoolDayData.dressCode,\n                semester: selectedSchoolDayData.semester,\n              }),\n            );\n            setSchoolDayMode(pickSchoolDayMode.dressCode);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schoolDay);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.dressCode &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <DressCodeSelect\n          dressCodeData={timetable.dressCode.dressCodeData}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: selectedSchoolDayData.schedule,\n                dressCode: e,\n                semester: selectedSchoolDayData.semester,\n              }),\n            );\n            setSchoolDayMode(pickSchoolDayMode.semester);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schedule);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.semester &&\n      selectedSchoolDayData !== undefined ? (\n        <View>\n          <Pressable\n            onPress={() => {\n              setSchoolDayMode(pickSchoolDayMode.dressCode);\n            }}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setSelectedSchoolDayData({\n                  schoolDay: selectedSchoolDayData.schoolDay,\n                  schedule: selectedSchoolDayData.schedule,\n                  dressCode: selectedSchoolDayData.dressCode,\n                  semester: semesters.semesterOne,\n                }),\n              );\n              setSchoolDayMode(pickSchoolDayMode.dressCodeIncentives);\n            }}\n          >\n            <Text>Semester One</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setSelectedSchoolDayData({\n                  schoolDay: selectedSchoolDayData.schoolDay,\n                  schedule: selectedSchoolDayData.schedule,\n                  dressCode: selectedSchoolDayData.dressCode,\n                  semester: semesters.semesterTwo,\n                }),\n              );\n              setSchoolDayMode(pickSchoolDayMode.dressCodeIncentives);\n            }}\n          >\n            <Text>Semester Two</Text>\n          </Pressable>\n        </View>\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.dressCodeIncentives &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <DressCodeIncentivesSelect\n          dressCodeIncentivesData={timetable.dressCode.dressCodeIncentives}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: selectedSchoolDayData.schedule,\n                dressCode: selectedSchoolDayData.dressCode,\n                semester: selectedSchoolDayData.semester,\n                dressCodeIncentive: e,\n              }),\n            );\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.semester);\n          }}\n        />\n      ) : null}\n    </View>\n  );\n}\n\nfunction SchoolYearsSelect({ onSelect }: { onSelect: () => void }) {\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [currentEventsSchoolYear, setCurrentEventsSchoolYear] = useState<\n    eventType[]\n  >([]);\n  const dispatch = useDispatch();\n\n  async function getData() {\n    const result = await getGraphEvents(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20or%20id%20eq%20'${\n        store.getState().paulyList.eventDataExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20and%20ep/value%20eq%20'schoolYear')`,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.events !== undefined\n    ) {\n      let outputEvents: eventType[] = result.events;\n      let url: string = result.nextLink !== undefined ? result.nextLink : '';\n      let notFound: boolean = result.nextLink !== undefined;\n      while (notFound) {\n        const furtherResult = await getGraphEvents(url);\n        if (\n          furtherResult.result === loadingStateEnum.success &&\n          furtherResult.events !== undefined\n        ) {\n          outputEvents = [...outputEvents, ...furtherResult.events];\n          url =\n            furtherResult.nextLink !== undefined ? furtherResult.nextLink : '';\n          notFound = furtherResult.nextLink !== undefined;\n        } else {\n          notFound = false;\n        }\n      }\n      setCurrentEventsSchoolYear(outputEvents);\n      setLoadingState(loadingStateEnum.success);\n    } else {\n      setLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <View>\n      <ScrollView>\n        {loadingState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {loadingState === loadingStateEnum.success ? (\n              <View>\n                {currentEventsSchoolYear.map(event => (\n                  <Pressable\n                    key={`School_Year_${createUUID()}`}\n                    onPress={() => {\n                      dispatch(\n                        addEventSlice.actions.setSelectedSchoolYear(event),\n                      );\n                      onSelect();\n                    }}\n                  >\n                    <View>\n                      <Text style={{ margin: 10 }}>{event.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction SchoolDaySelect({\n  width,\n  height,\n  timetable,\n  loadingState,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  timetable: timetableType | undefined;\n  loadingState: loadingStateEnum;\n  onSelect: () => void;\n  onBack: () => void;\n}) {\n  const dispatch = useDispatch();\n  return (\n    <View>\n      <Pressable\n        onPress={() => {\n          onBack();\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <ScrollView style={{ width, height }}>\n        {loadingState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <>\n            {loadingState === loadingStateEnum.success &&\n            timetable !== undefined ? (\n              <>\n                {timetable.days.map(day => (\n                  <Pressable\n                    key={`Day_${day.id}`}\n                    onPress={() => {\n                      onSelect();\n                      dispatch(\n                        addEventSlice.actions.setSelectedSchoolDayData({\n                          schoolDay: day,\n                          schedule: {\n                            properName: '',\n                            descriptiveName: '',\n                            periods: [],\n                            id: '',\n                            color: '',\n                          },\n                          dressCode: {\n                            name: '',\n                            description: '',\n                            id: '',\n                          },\n                          semester: semesters.semesterOne,\n                        }),\n                      );\n                    }}\n                  >\n                    <View>\n                      <Text>{day.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction ScheduleSelect({\n  schedules,\n  onSelect,\n}: {\n  schedules: scheduleType[];\n  onSelect: (item: scheduleType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      {schedules.map(schedule => (\n        <Pressable\n          key={`Schedule_${schedule.id}`}\n          onPress={() => {\n            onSelect(schedule);\n          }}\n        >\n          <View>\n            <Text>{schedule.properName}</Text>\n          </View>\n        </Pressable>\n      ))}\n    </View>\n  );\n}\n\nfunction DressCodeSelect({\n  dressCodeData,\n  onSelect,\n  onBack,\n}: {\n  dressCodeData: dressCodeDataType[];\n  onSelect: (item: dressCodeDataType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      <Pressable\n        onPress={() => {\n          onBack();\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      {dressCodeData.map(data => (\n        <Pressable\n          onPress={() => {\n            onSelect(data);\n          }}\n        >\n          <Text>{data.name}</Text>\n        </Pressable>\n      ))}\n    </View>\n  );\n}\n\nfunction DressCodeIncentivesSelect({\n  dressCodeIncentivesData,\n}: {\n  dressCodeIncentivesData: dressCodeIncentiveType[];\n  onSelect: (item: dressCodeIncentiveType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      {dressCodeIncentivesData.map(incentive => (\n        <View>\n          <Text>{incentive.name}</Text>\n        </View>\n      ))}\n      <Text>None</Text>\n    </View>\n  );\n}\n","import { orgWideGroupID } from '../PaulyConfig';\nimport { addEventSlice } from '../Redux/reducers/addEventReducer';\nimport { currentEventsSlice } from '../Redux/reducers/currentEventReducer';\nimport store from '../Redux/store';\nimport { Colors, loadingStateEnum, paulyEventType } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport default async function createEvent(): Promise<undefined> {\n  if (store.getState().addEvent.selectedEventType === paulyEventType.personal) {\n    const data: any = {\n      subject: store.getState().addEvent.eventName,\n      start: {\n        dateTime: store.getState().addEvent.startDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n      end: {\n        dateTime: store.getState().addEvent.endDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n    };\n    if (store.getState().addEvent.allDay) {\n      data.start.dateTime = `${\n        store\n          .getState()\n          .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.end.dateTime = `${\n        store\n          .getState()\n          .addEvent.endDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.isAllDay = true;\n    }\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/me/events`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const dataOut = await result.json();\n      const resultEvent: eventType = {\n        id: dataOut.id,\n        name: dataOut.subject,\n        startTime: dataOut.start.dateTime,\n        endTime: dataOut.end.dateTime,\n        eventColor: Colors.white,\n        microsoftEvent: true,\n        microsoftReference: `https://graph.microsoft.com/v1.0/me/events/${dataOut.id}`,\n        allDay: false,\n      };\n      store.dispatch(currentEventsSlice.actions.pushEvent(resultEvent));\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.success),\n      );\n    } else {\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    const data: any = {\n      subject: store.getState().addEvent.eventName,\n      start: {\n        dateTime: store.getState().addEvent.startDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n      end: {\n        dateTime: store.getState().addEvent.endDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n    };\n    const schoolDay = store.getState().addEvent.selectedSchoolDayData;\n    const schoolYearId = store.getState().addEvent.selectedSchoolYear?.id;\n    if (\n      store.getState().addEvent.selectedEventType === paulyEventType.schoolDay\n    ) {\n      if (schoolDay !== undefined) {\n        if (store.getState().addEvent.selectedSchoolDayData === undefined) {\n          store.dispatch(\n            addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n          );\n          return;\n        }\n        data.start.dateTime = `${\n          store\n            .getState()\n            .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n            .split(/[T ]/i, 1)[0]\n        }T00:00:00.0000000`;\n        const newEndDate = new Date(store.getState().addEvent.startDate);\n        newEndDate.setDate(\n          new Date(store.getState().addEvent.startDate).getDate() + 1,\n        );\n        data.end.dateTime = `${\n          newEndDate\n            .toISOString()\n            .replace(/.\\d+Z$/g, 'Z')\n            .split(/[T ]/i, 1)[0]\n        }T00:00:00.0000000`;\n        data.isAllDay = true;\n        data.subject = `${schoolDay.schoolDay.name} ${schoolDay.schedule.properName}`;\n      } else {\n        store.dispatch(\n          addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n        );\n      }\n    } else if (store.getState().addEvent.allDay) {\n      data.start.dateTime = `${\n        store\n          .getState()\n          .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.end.dateTime = `${\n        store\n          .getState()\n          .addEvent.endDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.isAllDay = true;\n    }\n    if (\n      store.getState().addEvent.selectedEventType === paulyEventType.schoolYear\n    ) {\n      data.singleValueExtendedProperties = [\n        {\n          id: store.getState().paulyList.eventTypeExtensionId,\n          value: 'schoolYear',\n        },\n        {\n          id: store.getState().paulyList.eventDataExtensionId,\n          value: store.getState().addEvent.selectedTimetable.id,\n        },\n      ];\n    } else if (\n      store.getState().addEvent.selectedEventType ===\n        paulyEventType.schoolDay &&\n      schoolDay !== undefined &&\n      schoolYearId !== undefined\n    ) {\n      const selectedSchoolDayDataCompressed: schoolDayDataCompressedType = {\n        schoolDayId: schoolDay.schoolDay.id,\n        scheduleId: schoolDay.schedule.id,\n        dressCodeId: schoolDay.dressCode.id,\n        semester: schoolDay.semester,\n        dressCodeIncentiveId:\n          schoolDay.dressCodeIncentive?.id === undefined\n            ? ''\n            : schoolDay.dressCodeIncentive?.id,\n        schoolYearEventId: schoolYearId,\n      };\n      data.singleValueExtendedProperties = [\n        {\n          id: store.getState().paulyList.eventTypeExtensionId,\n          value: 'schoolDay',\n        },\n        {\n          id: store.getState().paulyList.eventDataExtensionId,\n          value: JSON.stringify(selectedSchoolDayDataCompressed),\n        },\n      ];\n    }\n    if (store.getState().addEvent.recurringEvent) {\n    }\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const dataOut = await result.json();\n      const resultEvent: eventType = {\n        id: dataOut.id,\n        name: dataOut.subject,\n        startTime: dataOut.start.dateTime,\n        endTime: dataOut.end.dateTime,\n        eventColor: Colors.white,\n        paulyEventType:\n          store.getState().addEvent.selectedEventType ===\n          paulyEventType.schoolDay\n            ? 'schoolDay'\n            : store.getState().addEvent.selectedEventType ===\n              paulyEventType.schoolYear\n            ? 'schoolYear'\n            : undefined,\n        paulyEventData:\n          store.getState().addEvent.selectedEventType ===\n          paulyEventType.schoolDay\n            ? JSON.stringify(store.getState().addEvent.selectedSchoolDayData)\n            : store.getState().addEvent.selectedEventType ===\n              paulyEventType.schoolYear\n            ? store.getState().addEvent.selectedTimetable.id\n            : undefined,\n        microsoftEvent: true,\n        microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${dataOut.id}`,\n        allDay: false,\n      };\n      store.dispatch(currentEventsSlice.actions.pushEvent(resultEvent));\n      store.dispatch(addEventSlice.actions.setSelectedSchoolDayData(undefined));\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.success),\n      );\n    } else {\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n      );\n    }\n  }\n}\n","/*\n  Andrew Mainella\n  October 18 2023\n  Pauly\n  AddEvent.tsx\n*/\n\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Pressable, View, Text, Switch, TextInput } from 'react-native';\nimport { TimePickerModal, DatePickerModal } from 'react-native-paper-dates';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport { currentEventsSlice } from '../../Redux/reducers/currentEventReducer';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport SelectTimetable from './SelectTimetable';\nimport SelectSchoolDayData from './SelectSchoolDayData';\nimport { Colors, loadingStateEnum, paulyEventType } from '../../types';\nimport PickerWrapper from '../../UI/Pickers/Picker';\nimport { CalendarIcon, CloseIcon, TimeIcon } from '../../UI/Icons/Icons';\nimport updateEvent from '../../Functions/updateEvent';\n\nexport default function AddEvent({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { selectedEventType, isEditing, selectedEvent, createEventState } =\n    useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (\n      selectedEventType === paulyEventType.schoolDay ||\n      selectedEventType === paulyEventType.schoolYear\n    ) {\n      dispatch(addEventSlice.actions.setAllDay(true));\n    }\n  }, [selectedEventType]);\n\n  async function deleteEvent() {\n    if (\n      selectedEvent !== undefined &&\n      selectedEvent.microsoftEvent &&\n      selectedEvent.microsoftReference !== undefined\n    ) {\n      const deleteEvent = await callMsGraph(\n        selectedEvent.microsoftReference,\n        'DELETE',\n      );\n      if (deleteEvent.ok) {\n        const index = currentEvents.findIndex(e => {\n          return e.id === selectedEvent.id;\n        });\n        dispatch(currentEventsSlice.actions.removeCurrentEvent(index));\n        dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n      } else {\n        // TO DO throw error\n      }\n    }\n  }\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        backgroundColor: Colors.white,\n        width: width + 30,\n        height,\n        borderRadius: 5,\n        borderWidth: 5,\n      }}\n    >\n      <View style={{ margin: 10, width }}>\n        <Pressable\n          onPress={() => {\n            dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n            dispatch(\n              addEventSlice.actions.setCreateEventState(\n                loadingStateEnum.notStarted,\n              ),\n            );\n          }}\n        >\n          <CloseIcon width={10} height={10} />\n        </Pressable>\n        <Text style={{ fontFamily: 'BukhariScript' }}>Add Event</Text>\n        <DateAndTimeSection width={width} height={height} />\n        {isGovernmentMode ? (\n          <GovernmentCalendarOptions width={width} height={height} />\n        ) : null}\n        <View\n          style={{\n            width,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setCreateEventState(\n                  loadingStateEnum.loading,\n                ),\n              );\n              updateEvent();\n            }}\n            style={{\n              width: 100,\n              height: 50,\n              backgroundColor: '#00a4db',\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 15,\n              shadowColor: '#000',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 2,\n            }}\n          >\n            <Text style={{ zIndex: -1 }}>\n              {isEditing\n                ? 'Save'\n                : createEventState === loadingStateEnum.notStarted\n                ? 'CREATE'\n                : createEventState === loadingStateEnum.loading\n                ? 'Loading'\n                : createEventState === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n        </View>\n        {isEditing ? (\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n              deleteEvent();\n            }}\n            style={{\n              width: 100,\n              height: 50,\n              backgroundColor: '#00a4db',\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 15,\n              shadowColor: '#000',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 2,\n            }}\n          >\n            <Text style={{ zIndex: -1 }}>Delete</Text>\n          </Pressable>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nfunction GovernmentCalendarOptions({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const {\n    selectedEventType,\n    selectedTimetable,\n    selectedSchoolDayData,\n    selectedSchoolYear,\n  } = useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <View>\n        <PickerWrapper\n          selectedIndex={selectedEventType}\n          onSetSelectedIndex={e => {\n            dispatch(addEventSlice.actions.setSelectedEventType(e));\n          }}\n          width={width}\n          height={height * 0.05}\n        >\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Personal\">\n            Personal\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Regular\">\n            Regular\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Day\">\n            School Day{' '}\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Year\">\n            School Year\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Council\">\n            Student Council\n          </Text>\n        </PickerWrapper>\n      </View>\n      {selectedEventType === paulyEventType.schoolDay ? (\n        <View style={{ width, height: 100 }}>\n          <Text>\n            Selected School Year:{' '}\n            {selectedSchoolYear ? selectedSchoolYear.name : 'None selected'}\n          </Text>\n          <SelectSchoolDayData width={width} height={100} />\n        </View>\n      ) : null}\n      {selectedEventType === paulyEventType.schoolYear ? (\n        <View>\n          <Text>\n            Selected Timetable:{' '}\n            {selectedTimetable ? selectedTimetable.name : 'Unselected'}\n          </Text>\n          <SelectTimetable\n            governmentMode={false}\n            onSelect={e => {\n              dispatch(addEventSlice.actions.setSelectedTimetable(e));\n            }}\n          />\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nfunction DateAndTimeSection({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const {\n    selectedEventType,\n    eventName,\n    allDay,\n    startDate,\n    endDate,\n    isPickingStartDate,\n    isPickingEndDate,\n  } = useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n  const [endDatePickerVisable, setEndDatePickerVisable] =\n    useState<boolean>(false);\n  const [startDatePickerVisable, setStartDatePickerVisable] =\n    useState<boolean>(false);\n  return (\n    <View>\n      <DatePickerModal\n        locale=\"en\"\n        mode=\"single\"\n        label=\"Select Date\"\n        visible={isPickingStartDate}\n        onDismiss={() =>\n          dispatch(addEventSlice.actions.setIsPickingStartDate(false))\n        }\n        date={new Date(startDate)}\n        onConfirm={e => {\n          console.log(e.date);\n          if (e.date !== undefined) {\n            const oldDate = new Date(startDate);\n            dispatch(\n              addEventSlice.actions.setStartDate(\n                new Date(\n                  e.date.getFullYear(),\n                  e.date.getMonth(),\n                  e.date.getDate(),\n                  oldDate.getHours(),\n                  oldDate.getMinutes(),\n                ).toISOString(),\n              ),\n            );\n          }\n          dispatch(addEventSlice.actions.setIsPickingStartDate(false));\n        }}\n      />\n      <DatePickerModal\n        locale=\"\"\n        mode=\"single\"\n        label=\"Select Date\"\n        visible={isPickingEndDate}\n        onDismiss={() =>\n          dispatch(addEventSlice.actions.setIsPickingEndDate(false))\n        }\n        date={new Date(endDate)}\n        onConfirm={e => {\n          console.log(e.date);\n          if (e.date !== undefined) {\n            const oldDate = new Date(endDate);\n            const newDate = new Date(\n              e.date.getFullYear(),\n              e.date.getMonth(),\n              e.date.getDate(),\n              oldDate.getHours(),\n              oldDate.getMinutes(),\n            ).toISOString();\n            console.log(newDate);\n            dispatch(addEventSlice.actions.setEndDate(newDate));\n          }\n          dispatch(addEventSlice.actions.setIsPickingEndDate(false));\n        }}\n      />\n      {selectedEventType === paulyEventType.schoolDay ? null : (\n        <View>\n          <TextInput\n            value={eventName}\n            onChangeText={e => {\n              dispatch(addEventSlice.actions.setEventName(e));\n            }}\n            placeholder=\"Event Name\"\n            style={{\n              width: width * 0.8,\n              height: height * 0.05,\n              borderBottomColor: '#000000',\n              borderBottomWidth: 1,\n              marginLeft: width * 0.01,\n            }}\n          />\n          {selectedEventType !== paulyEventType.schoolYear ? (\n            <View\n              style={{ flexDirection: 'row', marginTop: 7, marginBottom: 7 }}\n            >\n              <Text>All Day</Text>\n              <Switch\n                trackColor={{ false: '#767577', true: '#81b0ff' }}\n                thumbColor={allDay ? '#f5dd4b' : '#f4f3f4'}\n                ios_backgroundColor=\"#3e3e3e\"\n                onValueChange={e => {\n                  dispatch(addEventSlice.actions.setAllDay(e));\n                }}\n                value={allDay}\n                style={{ marginLeft: 10 }}\n              />\n            </View>\n          ) : null}\n        </View>\n      )}\n      <Text>\n        {selectedEventType === paulyEventType.schoolDay ? '' : 'Start '}Date\n      </Text>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={{ flexDirection: 'row', margin: 10 }}>\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsPickingStartDate(true));\n            }}\n          >\n            <Text>\n              {new Date(startDate).toLocaleString('en-us', { month: 'long' })}{' '}\n              {new Date(startDate).getDate()}{' '}\n              {new Date(startDate).getFullYear()}{' '}\n            </Text>\n          </Pressable>\n          {!allDay ? (\n            <Pressable\n              onPress={() => {\n                setStartDatePickerVisable(true);\n              }}\n            >\n              <Text>\n                {new Date(startDate).getHours() % 12 || 12}:\n                {new Date(startDate).getMinutes().toString().length === 1\n                  ? `0${new Date(startDate).getMinutes()}`\n                  : new Date(startDate).getMinutes()}{' '}\n                {new Date(startDate).getHours() >= 12 ? 'pm' : 'am'}\n              </Text>\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsPickingStartDate(true));\n            }}\n          >\n            <CalendarIcon width={24} height={15} />\n          </Pressable>\n        </View>\n        {allDay ? null : (\n          <View style={{ margin: 5 }}>\n            <Pressable\n              onPress={() => {\n                setStartDatePickerVisable(true);\n              }}\n              style={{\n                height: 26.4,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <TimeIcon width={15} height={15} />\n            </Pressable>\n            <TimePickerModal\n              hours={new Date(startDate).getHours()}\n              minutes={new Date(startDate).getMinutes()}\n              visible={startDatePickerVisable}\n              onDismiss={() => setStartDatePickerVisable(false)}\n              onConfirm={e => {\n                console.log(e);\n                const newDate = new Date(startDate);\n                newDate.setHours(e.hours);\n                newDate.setMinutes(e.minutes);\n                console.log(newDate);\n                dispatch(\n                  addEventSlice.actions.setStartDate(newDate.toISOString()),\n                );\n                setStartDatePickerVisable(false);\n              }}\n            />\n          </View>\n        )}\n      </View>\n      {selectedEventType === paulyEventType.schoolDay ? null : (\n        <View>\n          <Text>End Date</Text>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flexDirection: 'row', margin: 10 }}>\n              <Pressable\n                onPress={() => {\n                  dispatch(addEventSlice.actions.setIsPickingEndDate(true));\n                }}\n              >\n                <Text>\n                  {new Date(endDate).toLocaleString('en-us', { month: 'long' })}{' '}\n                  {new Date(endDate).getDate()}{' '}\n                  {new Date(endDate).getFullYear()}{' '}\n                </Text>\n              </Pressable>\n              {!allDay ? (\n                <Pressable\n                  onPress={() => {\n                    setEndDatePickerVisable(true);\n                  }}\n                >\n                  <Text>\n                    {new Date(endDate).getHours() % 12 || 12}:\n                    {new Date(endDate).getMinutes().toString().length === 1\n                      ? `0${new Date(endDate).getMinutes()}`\n                      : new Date(endDate).getMinutes()}{' '}\n                    {new Date(endDate).getHours() >= 12 ? 'pm' : 'am'}\n                  </Text>\n                </Pressable>\n              ) : null}\n              <Pressable\n                onPress={() => {\n                  dispatch(addEventSlice.actions.setIsPickingEndDate(true));\n                }}\n              >\n                <CalendarIcon width={24} height={15} />\n              </Pressable>\n            </View>\n            {allDay ? null : (\n              <View style={{ margin: 5 }}>\n                <Pressable\n                  onPress={() => {\n                    setEndDatePickerVisable(true);\n                  }}\n                  style={{\n                    height: 26.4,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <TimeIcon width={15} height={15} />\n                </Pressable>\n                <TimePickerModal\n                  hours={new Date(endDate).getHours()}\n                  minutes={new Date(endDate).getMinutes()}\n                  visible={endDatePickerVisable}\n                  onDismiss={() => setEndDatePickerVisable(false)}\n                  onConfirm={e => {\n                    const newDate = new Date(endDate);\n                    newDate.setHours(e.hours);\n                    newDate.setMinutes(e.minutes);\n                    dispatch(\n                      addEventSlice.actions.setEndDate(newDate.toISOString()),\n                    );\n                    setEndDatePickerVisable(false);\n                  }}\n                />\n              </View>\n            )}\n          </View>\n        </View>\n      )}\n    </View>\n  );\n}\n\n{\n  /* <Text>Reocurring Event</Text>\n          <Switch\n            trackColor={{false: '#767577', true: '#81b0ff'}}\n            thumbColor={recurringEvent ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={(e) => {\n              dispatch(addEventSlice.actions.setRecurringEvent(e))\n            }}\n            value={recurringEvent}\n          />\n          { recurringEvent ?\n            <View style={{zIndex: 100}}>\n              <Dropdown onSetSelectedIndex={(item) => {\n                if (item >= 0 && item <= 3){\n                  dispatch(addEventSlice.actions.setSelectedRecurringType(item))\n                } \n              }} selectedIndex={selectedRecurringType} style={{height: height * 0.04}} expandedStyle={{height: height * 0.12, backgroundColor: Colors.white}}>\n                <View>\n                  <Text>Daily</Text>\n                </View>\n                <View>\n                  <Text>Weekly</Text>\n                </View>\n                <View>\n                  <Text>Monthly</Text>\n                </View>\n                <View>\n                  <Text>Yearly</Text>\n                </View>\n              </Dropdown>\n            </View>:null\n          } */\n}\n","import { View, Text, Animated, Pressable } from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addEventSlice } from '../Redux/reducers/addEventReducer';\nimport { RootState } from '../Redux/store';\nimport { Colors } from '../types';\n\ninterface PickerWrapperProps {\n  width: number;\n  height: number;\n}\n\nenum calendarMode {\n  month,\n  week,\n  day,\n}\n\nexport default function CalendarTypePicker({\n  width,\n  height,\n}: PickerWrapperProps) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [compoentWidth, setComponentWidth] = useState(width / 3);\n  const { selectedCalendarMode } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const dispatch = useDispatch();\n\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth + compoentWidth * 0.005,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedCalendarMode * compoentWidth + compoentWidth * 0.005);\n  }, []);\n\n  useEffect(() => {\n    setComponentWidth(width / 3);\n    pan.setValue(selectedCalendarMode * compoentWidth + compoentWidth * 0.005);\n  }, [width]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        height,\n        width,\n        backgroundColor: '#7d7d7d',\n        borderRadius: 20,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.month),\n          );\n          fadeIn(0);\n        }}\n        style={{\n          position: 'absolute',\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Month\n        </Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.week),\n          );\n          fadeIn(1);\n        }}\n        style={{\n          position: 'absolute',\n          transform: [{ translateX: 1 * compoentWidth }],\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Week\n        </Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.day),\n          );\n          fadeIn(2);\n        }}\n        style={{\n          position: 'absolute',\n          transform: [{ translateX: 2 * compoentWidth }],\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Day\n        </Text>\n      </Pressable>\n      <Animated.View style={{ transform: [{ translateX: pan }], zIndex: -1 }}>\n        <View\n          style={{\n            height: height * 0.95,\n            width: compoentWidth - compoentWidth * 0.01,\n            backgroundColor: Colors.white,\n            top: height * 0.025,\n            borderRadius: 20,\n            position: 'absolute',\n            zIndex: -1,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// Pauly\n// October 2 2023\n\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport { currentEventsSlice } from '../../Redux/reducers/currentEventReducer';\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport { getGraphEvents } from './calendarFunctionsGraph';\n\nexport default async function getEvents() {\n  // date the user picks\n  const selectedDate = new Date(store.getState().selectedDate);\n  // Start of month that the selected date is in\n  const startDate = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth(),\n    1,\n  );\n  // End of month that the selected date is in\n  const endDate = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth() + 1,\n    1,\n  );\n\n  // Personal Calendar\n  let outputEvents: eventType[] = [];\n  // This code is pulled from add events School Years Select\n  let nextUrl: string = `https://graph.microsoft.com/v1.0/me/calendarView?startDateTime=${startDate.toISOString()}&endDateTime=${endDate.toISOString()}`;\n  while (nextUrl !== '') {\n    const furtherResult = await getGraphEvents(\n      nextUrl,\n      'https://graph.microsoft.com/v1.0/me/events/',\n    );\n    if (\n      furtherResult.result === loadingStateEnum.success &&\n      furtherResult.events !== undefined\n    ) {\n      outputEvents = [...outputEvents, ...furtherResult.events];\n      if (furtherResult.nextLink === undefined) {\n        nextUrl = '';\n        break;\n      } else {\n        nextUrl = furtherResult.nextLink;\n      }\n    } else {\n      nextUrl = '';\n      break;\n    }\n  }\n\n  // OrgWideEvents\n  // This code is pulled from add events School Years Select\n  let url: string = `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$filter=start/dateTime%20ge%20'${startDate.toISOString()}'%20and%20end/dateTime%20le%20'${endDate.toISOString()}'`;\n  while (url !== '') {\n    const furtherResult = await getGraphEvents(\n      url,\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/`,\n    );\n    if (\n      furtherResult.result === loadingStateEnum.success &&\n      furtherResult.events !== undefined\n    ) {\n      outputEvents = [...outputEvents, ...furtherResult.events];\n      url = furtherResult.nextLink !== undefined ? furtherResult.nextLink : '';\n    } else {\n      url = '';\n    }\n  }\n\n  store.dispatch(currentEventsSlice.actions.setCurrentEvents(outputEvents));\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  ScrollView,\n  useWindowDimensions,\n} from 'react-native';\nimport React, { useCallback, useEffect } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findFirstDayinMonth } from '../../Functions/calendar/calendarFunctions';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport DayView from './DayView';\nimport Week from './Week';\nimport AddEvent from './AddEvent';\nimport CalendarTypePicker from '../../UI/CalendarTypePicker';\nimport { AddIcon, ChevronLeft, ChevronRight } from '../../UI/Icons/Icons';\nimport { RootState } from '../../Redux/store';\nimport { selectedDateSlice } from '../../Redux/reducers/selectedDateReducer';\nimport { Colors, calendarMode } from '../../types';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport BackButton from '../../UI/BackButton';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport { monthDataSlice } from '../../Redux/reducers/monthDataReducer';\nimport { getClasses } from '../../Functions/classesFunctions';\nimport getEvents from '../../Functions/calendar/getEvents';\n\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default function Calendar() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { selectedCalendarMode, isShowingAddDate } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, []);\n\n  // This is the main (only) process that updates the events\n  // In the month view month data is calculate but the events come from this hook and the month view is a decendant of this view.\n  useEffect(() => {\n    getEvents();\n    getClasses();\n  }, [selectedDate]);\n\n  // Fonts\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View>\n      <View style={{ height: height * 0.1, backgroundColor: Colors.darkGray }}>\n        {currentBreakPoint >= 1 ? null : (\n          <BackButton to=\"/\" style={{ zIndex: 100 }} />\n        )}\n        <TopView width={width} height={height * 0.1} />\n      </View>\n      <View style={{ height: height * 0.9 }}>\n        {selectedCalendarMode === calendarMode.month ? (\n          <View\n            style={{\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              backgroundColor: Colors.white,\n            }}\n          >\n            <MonthViewMain width={width * 0.9} height={height * 0.9} />\n          </View>\n        ) : null}\n        {selectedCalendarMode === calendarMode.week ? (\n          <Week width={width * 1.0} height={height * 0.9} />\n        ) : null}\n        {selectedCalendarMode === calendarMode.day ? (\n          <View\n            style={{\n              width,\n              height: height * 0.9,\n              alignItems: 'center',\n              alignContent: 'center',\n              justifyContent: 'center',\n              backgroundColor: Colors.white,\n            }}\n          >\n            <DayView width={width * 0.9} height={height * 0.9} />\n          </View>\n        ) : null}\n      </View>\n      {isShowingAddDate ? (\n        <View\n          style={{\n            zIndex: 2,\n            position: 'absolute',\n            left: width * 0.05 + (width >= 576 ? width * 0.3 : 0) / 2,\n            top: height * 0.1,\n          }}\n        >\n          <AddEvent\n            width={width * 0.9 - (width >= 576 ? width * 0.3 : 0)}\n            height={height * 0.8}\n          />\n        </View>\n      ) : null}\n    </View>\n  );\n}\n\nfunction MonthViewMain({ width, height }: { width: number; height: number }) {\n  const monthData = useSelector((state: RootState) => state.monthData);\n  const selectedDate: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  return (\n    <>\n      {/* Chosing between large mode with each day having expanded calendars and reduced mode with list of events on each day. */}\n      {width <= 519 ? (\n        <ScrollView\n          style={{\n            backgroundColor: Colors.white,\n            height,\n            width,\n          }}\n        >\n          <MonthView width={width} height={height * 0.8} />\n          {new Date(selectedDate).getDate() <= monthData.length ? (\n            <>\n              {monthData[new Date(selectedDate).getDate() - 1].events.map(\n                event => (\n                  <View key={event.id}>\n                    <Text>{event.name}</Text>\n                  </View>\n                ),\n              )}\n            </>\n          ) : null}\n        </ScrollView>\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.white,\n            height,\n            width,\n          }}\n        >\n          <MonthView width={width} height={height} />\n        </View>\n      )}\n    </>\n  );\n}\n\nfunction MonthView({ width, height }: { width: number; height: number }) {\n  const daysInWeek: { DOW: string; id: string }[] = [\n    { DOW: 'Sun', id: createUUID() },\n    { DOW: 'Mon', id: createUUID() },\n    { DOW: 'Tue', id: createUUID() },\n    { DOW: 'Wen', id: createUUID() },\n    { DOW: 'Thu', id: createUUID() },\n    { DOW: 'Fri', id: createUUID() },\n    { DOW: 'Sat', id: createUUID() },\n  ];\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const selectedDate: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  const monthData = useSelector((state: RootState) => state.monthData);\n  const { fontScale } = useWindowDimensions();\n\n  const dispatch = useDispatch();\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  function getMonthData(selectedDate: Date) {\n    // Check if this month\n    const lastDay = new Date(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth() + 1,\n      0,\n    );\n    const firstDayWeek = findFirstDayinMonth(selectedDate);\n    const monthDataResult: monthDataType[] = [];\n    for (let index = 0; index < 42; index += 1) {\n      if (index >= firstDayWeek && index - firstDayWeek < lastDay.getDate()) {\n        // In the current month\n        const events: eventType[] = []; // The result events of that day\n\n        // Check is the current date\n        const checkStart: Date = new Date(\n          selectedDate.getFullYear(),\n          selectedDate.getMonth(),\n          index - firstDayWeek + 1,\n          0,\n          0,\n        );\n        const checkEnd: Date = new Date(\n          selectedDate.getFullYear(),\n          selectedDate.getMonth(),\n          index - firstDayWeek + 2,\n          0,\n          0,\n        );\n        for (\n          let indexEvent = 0;\n          indexEvent < currentEvents.length;\n          indexEvent += 1\n        ) {\n          const event: eventType = currentEvents[indexEvent]; // Event to be checked\n\n          const startTimeDate = new Date(event.startTime); // String to date\n          const endTimeDate = new Date(event.endTime); // String to date\n\n          // First check if starts before date and ends after or on day\n          if (startTimeDate <= checkStart && endTimeDate > checkStart) {\n            events.push(event);\n          } else if (startTimeDate > checkStart && startTimeDate < checkEnd) {\n            // Second check if starts on day\n            events.push(event);\n          }\n        }\n        monthDataResult.push({\n          showing: true,\n          dayData: index - firstDayWeek + 1,\n          id: createUUID(),\n          events,\n        });\n      } else {\n        monthDataResult.push({\n          showing: false,\n          dayData: 0,\n          id: createUUID(),\n          events: [],\n        });\n      }\n    }\n    dispatch(monthDataSlice.actions.setMonthData(monthDataResult));\n  }\n\n  useEffect(() => {\n    getMonthData(new Date(selectedDate));\n  }, [selectedDate, currentEvents]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View\n        style={{\n          height: height / 8,\n          width,\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}\n        key=\"Calendar_Header\"\n      >\n        <View style={{ flexDirection: 'row' }}>\n          <View\n            style={{\n              width: width * 0.6,\n              flexDirection: 'row',\n              marginRight: 'auto',\n            }}\n          >\n            <Text\n              numberOfLines={1}\n              adjustsFontSizeToFit\n              style={{ fontSize: 30 }}\n            >\n              {new Date(selectedDate).toLocaleString('en-us', {\n                month: 'long',\n              })}{' '}\n              {new Date(selectedDate).getFullYear()}\n            </Text>\n          </View>\n          <View>\n            {new Date(selectedDate).getFullYear() !==\n              new Date().getFullYear() ||\n            new Date(selectedDate).getMonth() != new Date().getMonth() ? (\n              <View style={{ width: width * 0.2 }}>\n                <Pressable\n                  onPress={() => {\n                    dispatch(\n                      selectedDateSlice.actions.setCurrentEventsLastCalled(\n                        new Date().toISOString(),\n                      ),\n                    );\n                  }}\n                >\n                  <Text style={{ color: 'black', fontSize: 12 / fontScale }}>\n                    Today\n                  </Text>\n                </Pressable>\n              </View>\n            ) : (\n              <View style={{ width: width * 0.2 }} />\n            )}\n          </View>\n          {/* This is left chevron */}\n          <Pressable\n            onPress={() => {\n              const d = new Date();\n              d.setFullYear(\n                new Date(selectedDate).getMonth() === 1\n                  ? new Date(selectedDate).getFullYear() - 1\n                  : new Date(selectedDate).getFullYear(),\n                new Date(selectedDate).getMonth() === 1\n                  ? 12\n                  : new Date(selectedDate).getMonth() - 1,\n                new Date(selectedDate).getDay(),\n              );\n              dispatch(\n                selectedDateSlice.actions.setCurrentEventsLastCalled(\n                  d.toISOString(),\n                ),\n              );\n            }}\n            style={{ marginTop: 'auto', marginBottom: 'auto' }}\n          >\n            <ChevronLeft width={14} height={14} />\n          </Pressable>\n          {/* This is right chevron */}\n          <Pressable\n            onPress={() => {\n              const d = new Date();\n              d.setFullYear(\n                new Date(selectedDate).getMonth() === 12\n                  ? new Date(selectedDate).getFullYear() + 1\n                  : new Date(selectedDate).getFullYear(),\n                new Date(selectedDate).getMonth() === 12\n                  ? 1\n                  : new Date(selectedDate).getMonth() + 1,\n                new Date(selectedDate).getDay(),\n              );\n              dispatch(\n                selectedDateSlice.actions.setCurrentEventsLastCalled(\n                  d.toISOString(),\n                ),\n              );\n            }}\n            style={{ marginTop: 'auto', marginBottom: 'auto' }}\n          >\n            <ChevronRight width={14} height={14} />\n          </Pressable>\n        </View>\n      </View>\n      <View style={{ width }} key=\"Calendar_Body\">\n        <View style={{ flexDirection: 'row' }}>\n          {daysInWeek.map(DOW => (\n            <View\n              key={`DOW_${DOW.id})}`}\n              style={{\n                width: width / 7,\n                height: height / 8,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Text style={{ color: 'black' }}>{DOW.DOW}</Text>\n            </View>\n          ))}\n        </View>\n        {['One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven'].map(\n          (valueRow, index) => (\n            <View key={`Row_${valueRow}`} style={{ flexDirection: 'row' }}>\n              {monthData.map((value, id) => (\n                <View key={value.id}>\n                  {id >= index * 7 && id <= index * 7 + 6 ? (\n                    <>\n                      {value.showing ? (\n                        <Pressable\n                          onPress={() => {\n                            const d = new Date();\n                            d.setFullYear(\n                              new Date(selectedDate).getFullYear(),\n                              new Date(selectedDate).getMonth(),\n                              value.dayData,\n                            );\n                            dispatch(\n                              selectedDateSlice.actions.setCurrentEventsLastCalled(\n                                d.toISOString(),\n                              ),\n                            );\n                          }}\n                          key={`CalendarButton_${value.id}`}\n                        >\n                          <CalendarCardView\n                            width={width / 7}\n                            height={height / 8}\n                            value={value}\n                            calendarWidth={width}\n                          />\n                        </Pressable>\n                      ) : (\n                        <CalendarCardView\n                          width={width / 7}\n                          height={height / 8}\n                          value={value}\n                          calendarWidth={width}\n                          key={`CalendarButton_${value.id}`}\n                        />\n                      )}\n                    </>\n                  ) : null}\n                </View>\n              ))}\n            </View>\n          ),\n        )}\n      </View>\n    </>\n  );\n}\n\nfunction getBackgroundColor(selectedDate: string, dayData: number): string {\n  if (dayData === new Date(selectedDate).getDate()) {\n    return Colors.lightGray;\n  }\n  if (\n    dayData === new Date().getDate() &&\n    new Date(selectedDate).getMonth() === new Date().getMonth() &&\n    new Date(selectedDate).getFullYear() === new Date().getFullYear()\n  ) {\n    return Colors.darkGray;\n  }\n  return Colors.white;\n}\n\nfunction getTextBackgroundColor(selectedDate: string, dayData: number): string {\n  if (\n    dayData === new Date().getDate() &&\n    new Date(selectedDate).getMonth() === new Date().getMonth() &&\n    new Date(selectedDate).getFullYear() === new Date().getFullYear() &&\n    new Date(selectedDate).getDate() !== dayData\n  ) {\n    return Colors.white;\n  }\n  return Colors.black;\n}\n\nfunction CalendarCardView({\n  value,\n  width,\n  height,\n  calendarWidth,\n}: {\n  value: monthDataType;\n  width: number;\n  height: number;\n  calendarWidth: number;\n}) {\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const dispatch = useDispatch();\n  return (\n    <>\n      {calendarWidth <= 519 ? (\n        <>\n          {value.showing ? (\n            <View\n              style={{\n                width,\n                height,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                borderRadius: height / 2,\n                backgroundColor: getBackgroundColor(\n                  selectedDate,\n                  value.dayData,\n                ),\n              }}\n            >\n              <Text\n                style={{\n                  color: getTextBackgroundColor(selectedDate, value.dayData),\n                }}\n              >\n                {value.dayData}\n              </Text>\n              {value.events.length >= 1 ? (\n                <View\n                  style={{\n                    backgroundColor: 'black',\n                    borderRadius: 50,\n                    width: width < height ? width * 0.25 : height * 0.25,\n                    height: width < height ? width * 0.25 : height * 0.25,\n                  }}\n                />\n              ) : (\n                <View\n                  style={{\n                    backgroundColor: 'transparent',\n                    borderRadius: 50,\n                    width: width < height ? width * 0.25 : height * 0.25,\n                    height: width < height ? width * 0.25 : height * 0.25,\n                  }}\n                />\n              )}\n            </View>\n          ) : (\n            <View style={{ width, height }} />\n          )}\n        </>\n      ) : (\n        <>\n          {value.showing ? (\n            <View style={{ width, height }}>\n              <View\n                style={{\n                  borderRadius: 50,\n                  width: 16,\n                  height: 16,\n                  backgroundColor:\n                    new Date().getDate() === value.dayData\n                      ? 'red'\n                      : 'transparent',\n                  alignContent: 'center',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Text style={{ color: 'black' }}>{value.dayData}</Text>\n              </View>\n              <ScrollView style={{ width, height: height * 0.8 }}>\n                {value.events.map(event => (\n                  <Pressable\n                    key={`Calendar_Event_${event.id}`}\n                    onPress={() => {\n                      dispatch(addEventSlice.actions.setIsEditing(true));\n                      dispatch(addEventSlice.actions.setIsEditing(true));\n                      dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n                      dispatch(addEventSlice.actions.setSelectedEvent(event));\n                    }}\n                  >\n                    <Text style={{ fontSize: 10 }}>{event.name}</Text>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n          ) : (\n            <View style={{ width, height }} />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction TopView({ width, height }: { width: number; height: number }) {\n  const dispatch = useDispatch();\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        height,\n        width,\n      }}\n    >\n      <View\n        style={{\n          width:\n            width * 0.45 -\n            (width * 0.1 < height ? width * 0.15 : height + width * 0.025),\n          height,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={1}\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: currentBreakPoint === 0 ? height * 0.35 : height * 0.7,\n            width: width * 0.4,\n            height: currentBreakPoint === 0 ? height * 0.5 : height * 0.9,\n            color: Colors.white,\n            textAlign: 'center',\n            verticalAlign: 'middle',\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          Calendar\n        </Text>\n      </View>\n      <View style={{ width: width * 0.55 }}>\n        <View style={{ marginLeft: width * 0.05 }}>\n          <CalendarTypePicker\n            width={width * 0.5}\n            height={width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6}\n          />\n        </View>\n      </View>\n      <View\n        style={{ width: width * 0.1 < height * 0.6 ? width * 0.15 : height }}\n      >\n        <Pressable\n          onPress={() => {\n            dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n            dispatch(addEventSlice.actions.setIsEditing(false));\n            dispatch(addEventSlice.actions.setSelectedEvent(undefined));\n          }}\n          style={{\n            height: width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6,\n            width: width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            borderRadius: 50,\n            backgroundColor: '#7d7d7d',\n            shadowColor: '#000',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 1,\n            marginLeft: width * 0.025,\n            marginRight: width * 0.025,\n          }}\n        >\n          <AddIcon\n            width={width * 0.1 < height * 0.6 ? width * 0.05 : height * 0.4}\n            height={width * 0.1 < height * 0.6 ? width * 0.05 : height * 0.4}\n          />\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  GovernmentHandleFileSubmissions.tsx\n*/\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useNavigate } from 'react-router-native';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport { loadingStateEnum } from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\nimport getSubmissions from '../../../../Functions/sports/sportsFunctions';\n\nexport default function GovernmentHandleFileSubmissions({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const [currentMediaSubmissions, setCurrentMediaSubmissions] = useState<\n    mediaSubmissionType[]\n  >([]);\n  const [loadingSubmissionsState, setLoadingSubmissionsState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const navigate = useNavigate();\n\n  async function loadData() {\n    //sports functions\n    const result = await getSubmissions();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentMediaSubmissions(result.data);\n    }\n    setLoadingSubmissionsState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {loadingSubmissionsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <ProgressView width={0} height={0} />\n          <Text>loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingSubmissionsState === loadingStateEnum.success ? (\n            <View style={{ width, height, overflow: 'hidden' }}>\n              <Text>HandleFileSubmissions</Text>\n              <FlatList\n                data={currentMediaSubmissions}\n                renderItem={item => (\n                  <Pressable\n                    key={`Submission_${\n                      item.item.submissionId\n                    }_${createUUID()}`}\n                    onPress={() =>\n                      navigate(\n                        `/profile/government/sports/post/review/${item.item.submissionId}`,\n                      )\n                    }\n                    style={{ borderColor: 'black', borderWidth: 2 }}\n                  >\n                    <Text>{item.item.Title}</Text>\n                    <Text>Accepted: {item.item.accepted ? 'Yes' : 'No'}</Text>\n                    <Text>Reviewed: {item.item.reviewed ? 'Yes' : 'No'}</Text>\n                    <Text>{item.item.user}</Text>\n                  </Pressable>\n                )}\n              />\n            </View>\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport GovernmentHandleFileSubmissions from './GovernmentHandleFileSubmissions';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getSports } from '../../../../Functions/sports/sportsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\nimport { Button } from 'react-native-paper';\n\nexport default function GovernmentSports() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [currentSports, setCurrentSports] = useState<sportType[]>([]);\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentSports(result.data);\n    }\n    setDataResult(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => {navigate(\"/profile/government/\")}}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text style={{marginLeft: 'auto', marginRight: 'auto'}}>Government Sports</Text>\n      </View>\n      <View style={{ height: height * 0.4 }}>\n        {dataResult === loadingStateEnum.loading ? (\n          <View\n            style={{\n              height: height * 0.4,\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView\n              width={height * 0.4 < width ? height * 0.1 : width * 0.4}\n              height={height * 0.4 < width ? height * 0.1 : width * 0.4}\n            />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {dataResult === loadingStateEnum.success ? (\n              <View>\n                {currentSports.map(item => (\n                  <Pressable\n                    onPress={() => {\n                      navigate(\n                        `/profile/government/sports/team/${item.name}/${item.id}`,\n                      );\n                    }}\n                    key={item.id}\n                  >\n                    <View>\n                      <Text>{item.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <View>\n                <Text>Error</Text>\n              </View>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ height: height * 0.1, overflow: 'hidden' }}>\n        <Button onPress={() => navigate('/profile/government/sports/create')}>\n          Create Sport\n        </Button>\n        <Button onPress={() => navigate('/profile/government/sports/post/create')}>\n          Create Post\n        </Button>\n      </View>\n      <GovernmentHandleFileSubmissions width={width} height={height * 0.4} />\n    </View>\n  );\n}\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, Pressable } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../../../../Redux/store';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport SVGXml from '../../../../UI/SVGXml/SVGXml';\n\nexport default function GovernmentCreateNewSport() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [sportName, setSportName] = useState<string>('');\n  const { siteId, sportsListId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const [svgData, setSvgData] = useState<string>('');\n  const [createSportLoadingState, setCreateSportLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const navigate = useNavigate();\n\n  async function createSport() {\n    setCreateSportLoadingState(loadingStateEnum.loading);\n    const newSportID: string = createUUID();\n    const data = {\n      fields: {\n        Title: '',\n        sportName,\n        sportId: newSportID,\n        sportSvg: svgData,\n      },\n    };\n    const listData = {\n      displayName: newSportID,\n      columns: [\n        {\n          name: 'teamName',\n          text: {},\n          required: true,\n        },\n        {\n          name: 'season',\n          number: {},\n          required: true,\n        },\n        {\n          name: 'teamId',\n          text: {},\n          required: true,\n          indexed: true,\n          enforceUniqueValues: true,\n        },\n        {\n          name: 'microsoftTeamId',\n          text: {},\n        },\n      ],\n      list: {\n        template: ' genericList',\n      },\n    };\n    const resultList = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n      'POST',\n      JSON.stringify(listData),\n    );\n    if (resultList.ok) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${sportsListId}/items`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateSportLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateSportLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setCreateSportLoadingState(loadingStateEnum.failed);\n    }\n  }\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/sports');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Create New Sport</Text>\n      <Text>Sport Name</Text>\n      <TextInput value={sportName} onChangeText={setSportName} />\n      <TextInput\n        value={svgData}\n        onChangeText={e => {\n          setSvgData(e);\n        }}\n        multiline\n        numberOfLines={25}\n      />\n      <SVGXml xml={svgData} width={100} height={100} />\n      <Pressable\n        onPress={() => {\n          if (sportName !== '' && svgData !== '') {\n            createSport();\n          }\n        }}\n      >\n        <Text>\n          {createSportLoadingState === loadingStateEnum.notStarted\n            ? 'Create'\n            : createSportLoadingState === loadingStateEnum.loading\n            ? 'Loading'\n            : createSportLoadingState === loadingStateEnum.success\n            ? 'Created Sport!'\n            : 'Failed to create sport.'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, Modal, TextInput } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { getSport, getSportsTeams } from '../../../../Functions/sports/sportsFunctions';\nimport { WarningIcon } from '../../../../UI/Icons/Icons';\nimport SVGXml from '../../../../UI/SVGXml/SVGXml';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nfunction SportsUpdateModel({\n  isPickingSvg,\n  setIsPickingSvg,\n  id,\n}: {\n  isPickingSvg: boolean;\n  setIsPickingSvg: (item: boolean) => void;\n  id: string;\n}) {\n  const [svgData, setSvgData] = useState<string>('');\n  const [listId, setListId] = useState<string>('');\n  const [getSportState, setGetSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [updateSportState, setUpdateSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  async function updateSport() {\n    setUpdateSportState(loadingStateEnum.loading);\n    const updateData = {\n      fields: {\n        sportSvg: svgData,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.sportsListId}/items/${listId}`,\n      'PATCH',\n      JSON.stringify(updateData),\n    );\n    if (result.ok) {\n      setUpdateSportState(loadingStateEnum.success);\n    } else {\n      const data = await result.json();\n      setUpdateSportState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadSport() {\n    const result = await getSport(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined &&\n      result.listId !== undefined\n    ) {\n      setListId(result.listId);\n      setSvgData(result.data.svgData);\n      setGetSportState(loadingStateEnum.success);\n    } else {\n      setGetSportState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadSport();\n  }, []);\n\n  return (\n    <Modal\n      visible={isPickingSvg}\n      animationType=\"slide\"\n      style={{ backgroundColor: Colors.white }}\n    >\n      {getSportState === loadingStateEnum.loading ? (\n        <View>\n          <Text>Loading</Text>\n          <Pressable onPress={() => setIsPickingSvg(false)}>\n            <Text>Dismiss</Text>\n          </Pressable>\n        </View>\n      ) : (\n        <>\n          {getSportState === loadingStateEnum.success ? (\n            <View>\n              <Text>Svg</Text>\n              <View style={{width: 100, height: 100, overflow: \"hidden\"}}>\n                <SVGXml xml={svgData} width={100} height={100} />\n              </View>\n              <TextInput\n                value={svgData}\n                onChangeText={e => {\n                  setSvgData(e);\n                }}\n                multiline\n                numberOfLines={25}\n              />\n              <Pressable onPress={() => updateSport()}>\n                <Text>\n                  {getTextState(updateSportState, { notStarted: 'Confirm' })}\n                </Text>\n              </Pressable>\n              <Pressable onPress={() => setIsPickingSvg(false)}>\n                <Text>Dismiss</Text>\n              </Pressable>\n            </View>\n          ) : (\n            <View>\n              <Text>Failed</Text>\n              <Pressable onPress={() => setIsPickingSvg(false)}>\n                <Text>Dismiss</Text>\n              </Pressable>\n            </View>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n}\n\nexport default function GovernmentSportsTeams() {\n  const { sport, id } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [currentTeams, setCurrentTeams] = useState<sportTeamType[]>([]);\n  const [deleteSportState, setDeleteSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const [isPickingSvg, setIsPickingSvg] = useState<boolean>(false);\n\n  async function deleteSport() {\n    setDeleteSportState(loadingStateEnum.loading);\n    const listResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${id}`,\n      'DELETE',\n    );\n    if (listResult.ok) {\n      const getSportResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.sportsListId\n        }/items?$expand=fields&$filter=fields/sportId%20eq%20'${id}'&$select=id`,\n      );\n      if (getSportResult.ok) {\n        const getSportData = await getSportResult.json();\n        if (getSportData.value.length === 1) {\n          const itemDeleteResult = await callMsGraph(\n            `https://graph.microsoft.com/v1.0/sites/${\n              store.getState().paulyList.siteId\n            }/lists/${store.getState().paulyList.sportsListId}/items/${\n              getSportData.value[0].id\n            }`,\n            'DELETE',\n          );\n          if (itemDeleteResult.ok) {\n            setDeleteSportState(loadingStateEnum.success);\n          } else {\n            setDeleteSportState(loadingStateEnum.failed);\n          }\n        } else {\n          setDeleteSportState(loadingStateEnum.failed);\n        }\n      } else {\n        setDeleteSportState(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteSportState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadData() {\n    if (id !== undefined) {\n      const result = await getSportsTeams(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setCurrentTeams(result.data);\n      }\n      setDataResult(result.result);\n    } else {\n      setDataResult(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government/sports')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>{sport} Teams</Text>\n      <Pressable\n        style={{ borderRadius: 15, backgroundColor: 'red' }}\n        onPress={() => {\n          if (\n            deleteSportState === loadingStateEnum.notStarted ||\n            deleteSportState === loadingStateEnum.failed\n          ) {\n            deleteSport();\n          }\n        }}\n      >\n        <View style={{ flexDirection: 'row', margin: 10 }}>\n          <WarningIcon width={14} height={14} />\n          <Text>\n            {deleteSportState === loadingStateEnum.loading\n              ? 'Loading'\n              : deleteSportState === loadingStateEnum.notStarted\n              ? 'Delete Sport'\n              : deleteSportState === loadingStateEnum.success\n              ? 'Sport Deleted'\n              : 'Failed To Delete Sport'}\n          </Text>\n        </View>\n      </Pressable>\n      <Pressable onPress={() => setIsPickingSvg(true)}>\n        <Text>Pick Svg</Text>\n      </Pressable>\n      {id !== undefined ? (\n        <SportsUpdateModel\n          isPickingSvg={isPickingSvg}\n          setIsPickingSvg={setIsPickingSvg}\n          id={id}\n        />\n      ) : null}\n      <View>\n        {dataResult === loadingStateEnum.loading ? (\n          <View>\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {dataResult === loadingStateEnum.success ? (\n              <FlatList\n                data={currentTeams}\n                renderItem={item => (\n                  <Pressable\n                    key={`TeamBlock_${item.item.teamId}`}\n                    onPress={() =>\n                      navigate(\n                        `/profile/government/sports/team/${sport}/${id}/${item.item.teamId}`,\n                      )\n                    }\n                  >\n                    <Text style={{ margin: 10 }}>{item.item.teamName}</Text>\n                  </Pressable>\n                )}\n              />\n            ) : (\n              <View>\n                <Text>Error</Text>\n              </View>\n            )}\n          </>\n        )}\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate(`/profile/government/sports/team/${sport}/${id}/create`)\n        }\n      >\n        <Text>Create New Team</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { loadingStateEnum } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function getUserMicrosoftFiles(\n  path: string,\n): Promise<{ result: loadingStateEnum; data?: microsoftFileType[] }> {\n  const result = await callMsGraph(path);\n  if (result.ok) {\n    const data = await result.json();\n    const newFiles: microsoftFileType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      newFiles.push({\n        name: data.value[index].name,\n        id: data.value[index].id,\n        lastModified: data.value[index].lastModifiedDateTime,\n        folder: data.value[index].folder !== undefined,\n        parentDriveId: data.value[index].parentReference.driveId,\n        parentPath: data.value[index].parentReference.path,\n        itemGraphPath: data.value[index].folder === undefined ? path : 'FOLDER',\n        callPath: `https://graph.microsoft.com/v1.0/me/drives/${data.value[index].parentReference.driveId}/items/${data.value[index].id}`,\n        type:\n          data.value[index].folder === undefined\n            ? data.value[index].file.mimeType\n            : 'folder',\n      });\n    }\n    return { result: loadingStateEnum.success, data: newFiles };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getUserTeams(): Promise<\n  | { result: loadingStateEnum.success; data: teamsGroupType[] }\n  | { result: loadingStateEnum.failed }\n> {\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/joinedTeams',\n  ); // TODO make sure this works on live tenancy\n  if (result.ok) {\n    const data = await result.json();\n    const newData: teamsGroupType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (data.value[index] !== undefined) {\n        newData.push({\n          teamName: data.value[index].displayName,\n          teamId: data.value[index].id,\n          teamDescription: data.value[index].description,\n        });\n      }\n    }\n    return { result: loadingStateEnum.success, data: newData };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Pressable,\n  View,\n  Text,\n  TextInput,\n  ScrollView,\n  FlatList,\n} from 'react-native';\nimport Picker from './Pickers/Picker';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport MimeTypeIcon from './Icons/MimeTypeIcon';\nimport createUUID from '../Functions/ultility/createUUID';\nimport {\n  getUserMicrosoftFiles,\n  getUserTeams,\n} from '../Functions/microsoftFilePickerFunctions';\nimport { Colors, loadingStateEnum } from '../types';\nimport ProgressView from './ProgressView';\n\nenum MicrosoftUploadModeType {\n  ShareLink,\n  Personal,\n  Site,\n}\n\nexport default function ({\n  onSetIsShowingUpload,\n  onSetIsShowingMicrosoftUpload,\n  onSelectedFile,\n  height,\n  width,\n}: {\n  height: number;\n  width: number;\n  onSetIsShowingUpload?: (item: boolean) => void;\n  onSetIsShowingMicrosoftUpload?: (item: boolean) => void;\n  onSelectedFile: (item: microsoftFileType) => void;\n}) {\n  const [usersTeams, setUsersTeams] = useState<teamsGroupType[]>([]);\n  const [selectedMicrosoftUploadMode, setSelectedMicrosoftUploadMode] =\n    useState<MicrosoftUploadModeType>(MicrosoftUploadModeType.Personal);\n  const [shareLinkString, setShareLinkString] = useState<string>('');\n\n  async function loadUserTeams() {\n    const result = await getUserTeams();\n    if (result.result === loadingStateEnum.success) {\n      setUsersTeams(result.data);\n    } else {\n    }\n  }\n\n  useEffect(() => {\n    loadUserTeams();\n  }, []);\n\n  async function getShareFile(shareLink: string) {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/shares/${shareLink}/driveItem?$select=content.downloadUrl`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      onSelectedFile({\n        name: '',\n        id: '',\n        lastModified: '',\n        folder: false,\n        parentDriveId: '',\n        parentPath: '',\n        itemGraphPath: '',\n        callPath: '',\n        type: '',\n      });\n    }\n  }\n\n  return (\n    <View style={{ height, width }}>\n      <View style={{ flexDirection: 'row' }}>\n        <Text style={{ textAlign: 'left' }}>Upload File From Microsoft</Text>\n        {onSetIsShowingMicrosoftUpload === undefined ||\n        onSetIsShowingUpload === undefined ? null : (\n          <Pressable\n            onPress={() => {\n              onSetIsShowingUpload(false);\n              onSetIsShowingMicrosoftUpload(false);\n            }}\n          >\n            <View>\n              <Text>Back</Text>\n            </View>\n          </Pressable>\n        )}\n      </View>\n      <View>\n        <View style={{ width }}>\n          <Picker\n            selectedIndex={\n              selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal\n                ? 0\n                : selectedMicrosoftUploadMode ===\n                  MicrosoftUploadModeType.ShareLink\n                ? 1\n                : 2\n            }\n            onSetSelectedIndex={(item: number) => {\n              item === 0\n                ? setSelectedMicrosoftUploadMode(\n                    MicrosoftUploadModeType.Personal,\n                  )\n                : item === 1\n                ? setSelectedMicrosoftUploadMode(\n                    MicrosoftUploadModeType.ShareLink,\n                  )\n                : setSelectedMicrosoftUploadMode(MicrosoftUploadModeType.Site);\n            }}\n            width={width}\n            height={30}\n          >\n            <Text style={{ margin: 0, padding: 0 }}>Personal</Text>\n            <Text style={{ margin: 0, padding: 0 }}>Link</Text>\n            <Text style={{ margin: 0, padding: 0 }}>Teams</Text>\n          </Picker>\n        </View>\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal ? (\n          <PersonalBlock\n            height={height}\n            width={width}\n            onSelectedFile={onSelectedFile}\n          />\n        ) : null}\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.ShareLink ? (\n          <View>\n            <View>\n              <Text>Share Link</Text>\n              <TextInput\n                placeholder=\"Share Link\"\n                value={shareLinkString}\n                onChangeText={e => {\n                  setShareLinkString(e);\n                }}\n              />\n            </View>\n            <Pressable\n              onPress={() => {\n                // TO DO make this work\n                let base64Value = btoa(shareLinkString);\n                base64Value.replace('/', '_');\n                base64Value.replace('+', '-');\n                base64Value.trimEnd();\n                base64Value = `u!${base64Value}`;\n                getShareFile(base64Value);\n              }}\n            >\n              <Text>Submit</Text>\n            </Pressable>\n          </View>\n        ) : null}\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.Site ? (\n          <TeamsBlock userTeams={usersTeams} height={height} />\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nenum teamFileMode {\n  team,\n  channel,\n  file,\n}\n\nfunction TeamsBlock({\n  userTeams,\n  height,\n}: {\n  userTeams: teamsGroupType[];\n  height: number;\n}) {\n  const [selectedTeamFileMode, setSelectedTeamFileMode] =\n    useState<teamFileMode>(teamFileMode.team);\n  return (\n    <FlatList\n      data={userTeams}\n      renderItem={team => (\n        <View>\n          {team.item.teamName !== 'Student Password Policy' &&\n          team.item.teamName !== \"St Paul's High School\" &&\n          team.item.teamName !== 'Adobe_Student' &&\n          team.item.teamName !== 'O365 Student A3 License Assignment' &&\n          team.item.teamName !== 'Student' ? (\n            <View>\n              <Text>{team.item.teamName}</Text>\n            </View>\n          ) : null}\n        </View>\n      )}\n      style={{ height: height * 0.8 }}\n    />\n  );\n}\n\nfunction PersonalBlock({\n  height,\n  width,\n  onSelectedFile,\n}: {\n  height: number;\n  width: number;\n  onSelectedFile: (item: microsoftFileType) => void;\n}) {\n  const [usersFiles, setUsersFies] = useState<microsoftFileType[]>([]);\n  const [microsoftPath, setMicrosoftPath] = useState<string>(\n    'https://graph.microsoft.com/v1.0/me/drive/root/children',\n  );\n  const [fileBackAvaliable, setFilesBackAvaliable] = useState<boolean>(false);\n  const [getFilesState, setGetFilesState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadGetUserMicrosoftFiles(path: string) {\n    setGetFilesState(loadingStateEnum.loading);\n    const result = await getUserMicrosoftFiles(path);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setUsersFies(result.data);\n      setGetFilesState(loadingStateEnum.success);\n    } else {\n      setGetFilesState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadGetUserMicrosoftFiles(microsoftPath);\n  }, []);\n\n  return (\n    <ScrollView style={{ height: height - 20 }}>\n      {fileBackAvaliable ? (\n        <Pressable\n          onPress={() => {\n            const microsftPathArray = microsoftPath.split('/');\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            let outputString = '';\n            for (let index = 0; index < microsftPathArray.length; index += 11) {\n              outputString += `${microsftPathArray[index]}/`;\n            }\n            outputString += '/items/root/children';\n            setMicrosoftPath(outputString);\n            loadGetUserMicrosoftFiles(outputString);\n            setFilesBackAvaliable(false);\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n      ) : null}\n      <>\n        {getFilesState === loadingStateEnum.loading ? (\n          <View\n            style={{\n              width,\n              height,\n              backgroundColor: Colors.white,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView width={14} height={14} />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {getFilesState === loadingStateEnum.success ? (\n              <FlatList\n                data={usersFiles}\n                renderItem={file => (\n                  <Pressable\n                    onPress={() => {\n                      if (file.item.folder) {\n                        setMicrosoftPath(\n                          `https://graph.microsoft.com/v1.0/drives/${file.item.parentDriveId}/items/${file.item.id}/children`,\n                        );\n                        loadGetUserMicrosoftFiles(\n                          `https://graph.microsoft.com/v1.0/drives/${file.item.parentDriveId}/items/${file.item.id}/children`,\n                        );\n                        setFilesBackAvaliable(true);\n                      } else {\n                        onSelectedFile(file.item);\n                      }\n                    }}\n                    key={`Users_${file.item.id}_${createUUID()}`}\n                  >\n                    <View style={{ flexDirection: 'row', margin: 5 }}>\n                      <MimeTypeIcon\n                        width={20}\n                        height={20}\n                        mimeType={file.item.type}\n                      />\n                      <Text style={{ padding: 0, margin: 0 }}>\n                        {file.item.name}\n                      </Text>\n                    </View>\n                  </Pressable>\n                )}\n              />\n            ) : (\n              <Text>Failed to load</Text>\n            )}\n          </>\n        )}\n      </>\n    </ScrollView>\n  );\n}\n","import {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { convertYearToSchoolYear } from '../../../../Functions/calendar/calendarFunctions';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n} from '../../../../types';\nimport store, { RootState } from '../../../../Redux/store';\nimport { getTeams } from '../../../../Functions/microsoftGroupsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\nimport MicrosoftFilePicker from '../../../../UI/MicrosoftFilePicker';\nimport { CloseIcon } from '../../../../UI/Icons/Icons';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\n\nexport default function GovernmentCreateNewTeam() {\n  const { sport, id, teamId } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const navigate = useNavigate();\n\n  const [createTeamLoadingState, setCreateTeamLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [teamDataState, setTeamDataState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [isCreatingTeam, setIsCreatingTeam] = useState<boolean>(true);\n\n  // Team Data\n  const [teamName, setTeamName] = useState<string>('');\n  const [season, setSeason] = useState<number>(new Date().getFullYear());\n  const [teamListItemId, setTeamListItemId] = useState<string>('');\n\n  const [teamsState, setTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [teams, setTeams] = useState<groupType[]>([]);\n  const [teamsNextLink, setTeamsNextLink] = useState<undefined | string>(\n    undefined,\n  );\n  const [selectedMicrosoftTeam, setSelectedMicrosoftTeam] = useState<\n    groupType | undefined\n  >(undefined);\n  const [isSelectingFile, setIsSelectingFile] = useState<boolean>(false);\n  const [selectedFile, setSelectedFile] = useState<string>('');\n\n  async function loadMicrosftTeams() {\n    const result = await getTeams(\n      \"https://graph.microsoft.com/v1.0/groups?$filter=resourceProvisioningOptions/Any(x:x%20eq%20'Team')\",\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setTeams(result.data);\n      setTeamsNextLink(result.nextLink);\n    }\n    setTeamsState(result.result);\n  }\n\n  async function updateTeam() {\n    // This function will also create a team\n    setCreateTeamLoadingState(loadingStateEnum.loading);\n    if (!isCreatingTeam) {\n      let data: object = {\n        fields: {\n          teamName,\n          season,\n        },\n      };\n      if (selectedMicrosoftTeam !== undefined) {\n        data = {\n          fields: {\n            teamName,\n            season,\n            microsoftTeamId: selectedMicrosoftTeam.id,\n          },\n        };\n      }\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items/${teamListItemId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateTeamLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTeamLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      const newTeamId = createUUID();\n      let data: object = {\n        fields: {\n          Title: '',\n          teamName,\n          season,\n          teamId: newTeamId,\n        },\n      };\n      if (selectedMicrosoftTeam !== undefined) {\n        data = {\n          fields: {\n            teamName,\n            season,\n            teamId: newTeamId,\n            microsoftTeamId: selectedMicrosoftTeam.id,\n          },\n        };\n      }\n      const listData = {\n        displayName: newTeamId,\n        columns: [\n          {\n            name: 'playerId', // This is any member of the rester\n            text: {},\n            required: true,\n            indexed: true,\n            enforceUniqueValues: true,\n          },\n          {\n            name: 'position',\n            text: {},\n          },\n          {\n            name: 'playerNumber',\n            text: {},\n          },\n          {\n            name: 'posts',\n            text: { allowMultipleLines: true },\n          },\n          {\n            name: 'imageShareId',\n            text: {},\n          },\n        ],\n        list: {\n          template: ' genericList',\n        },\n      };\n\n      const batchData = {\n        requests: [\n          {\n            id: '1',\n            method: 'POST',\n            url: `/sites/${siteId}/lists/${id}/items`,\n            body: data,\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n          {\n            id: '2',\n            method: 'POST',\n            dependsOn: ['1'],\n            url: `/sites/${siteId}/lists`,\n            body: listData,\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        ],\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/$batch`,\n        'POST',\n        JSON.stringify(batchData),\n      );\n      if (result.ok) {\n        setCreateTeamLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTeamLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function deleteTeam() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items/${teamListItemId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n    } else {\n    }\n  }\n\n  async function getMicrosoftTeam(\n    getMicrosoftTeamId: string,\n  ): Promise<{ result: loadingStateEnum; data?: groupType }> {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${getMicrosoftTeamId}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.displayName,\n          id: data.id,\n        },\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n\n  async function getTeamData() {\n    setTeamDataState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items?expand=fields($select=teamId,teamName,season,microsoftTeamId)&$filter=fields/teamId%20eq%20'${teamId}'&$select=id`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length === 1) {\n        setTeamName(data.value[0].fields.teamName);\n        setSeason(data.value[0].fields.season);\n        setTeamListItemId(data.value[0].id);\n        if (data.value[0].fields.microsoftTeamId !== undefined) {\n          const teamResult = await getMicrosoftTeam(\n            data.value[0].fields.microsoftTeamId,\n          );\n          if (\n            teamResult.result === loadingStateEnum.success &&\n            teamResult.data !== undefined\n          ) {\n            setSelectedMicrosoftTeam(teamResult.data);\n            setTeamDataState(loadingStateEnum.success);\n          } else {\n            setTeamDataState(loadingStateEnum.failed);\n          }\n        } else {\n          setTeamDataState(loadingStateEnum.success);\n        }\n      } else {\n        setTeamDataState(loadingStateEnum.failed);\n      }\n    } else {\n      setTeamDataState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadMicrosftTeams();\n  }, []);\n\n  useEffect(() => {\n    if (teamId === 'create') {\n      setIsCreatingTeam(true);\n    } else {\n      setIsCreatingTeam(false);\n      getTeamData();\n    }\n  }, [teamId]);\n\n  return (\n    <>\n      {isCreatingTeam || teamDataState === loadingStateEnum.success ? (\n        <ScrollView\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() =>\n              navigate(`/profile/government/sports/team/${sport}/${id}`)\n            }\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <View>\n            <Text>\n              {isCreatingTeam\n                ? `Create a new ${sport} team`\n                : `Edit the ${teamName} ${sport} Team`}\n            </Text>\n          </View>\n          <View\n            style={{\n              margin: 10,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: '#FFFFFF',\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 5 }}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text>Team Name:</Text>\n                <TextInput\n                  value={teamName}\n                  onChangeText={text => setTeamName(text)}\n                  placeholder=\"Team Name\"\n                />\n              </View>\n              <View>\n                <Text>Season</Text>\n                <Text>{convertYearToSchoolYear(season)}</Text>\n                <TextInput\n                  keyboardType=\"numeric\"\n                  onChangeText={text => {\n                    if (text === '') {\n                      setSeason(0);\n                    } else {\n                      setSeason(parseFloat(text));\n                    }\n                  }}\n                  value={season.toString()}\n                  maxLength={10} // setting limit of input\n                />\n              </View>\n            </View>\n          </View>\n          <View\n            style={{\n              height: height * 0.5,\n              margin: 10,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: '#FFFFFF',\n              borderRadius: 15,\n            }}\n          >\n            <View\n              style={{\n                margin: 10,\n                shadowColor: 'black',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.8,\n                shadowRadius: 10,\n                backgroundColor: '#FFFFFF',\n                borderRadius: 15,\n              }}\n            >\n              <View style={{ margin: 5 }}>\n                <Text>Selected Team</Text>\n                {selectedMicrosoftTeam !== undefined ? (\n                  <Pressable\n                    onPress={() => {\n                      setSelectedMicrosoftTeam(undefined);\n                    }}\n                  >\n                    <Text>{selectedMicrosoftTeam.name}</Text>\n                  </Pressable>\n                ) : (\n                  <Text>NO TEAM SELECTED</Text>\n                )}\n              </View>\n            </View>\n            <View style={{ marginLeft: 5, marginRight: 5 }}>\n              <FlatList\n                data={teams}\n                renderItem={team => (\n                  <>\n                    {team.item.id !== selectedMicrosoftTeam?.id ? (\n                      <Pressable\n                        key={`Team_${team.item.id}_${createUUID()}`}\n                        onPress={() => {\n                          setSelectedMicrosoftTeam(team.item);\n                        }}\n                      >\n                        <Text>{team.item.name}</Text>\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              />\n            </View>\n          </View>\n          {selectedMicrosoftTeam === undefined ? (\n            <View>\n              <Text>Select a team in order to get a roster</Text>\n            </View>\n          ) : (\n            <>\n              {isCreatingTeam || teamId === undefined ? (\n                <View>\n                  <Text>\n                    Please Create the team and return later to finish the roster\n                  </Text>\n                </View>\n              ) : (\n                <View>\n                  <Text>Roster</Text>\n                  <RosterBlock\n                    microsoftTeamId={selectedMicrosoftTeam.id}\n                    width={100}\n                    height={100}\n                    teamId={teamId}\n                    selectedFile={selectedFile}\n                    setIsSelectingFile={setIsSelectingFile}\n                    setSelectedFile={setSelectedFile}\n                    isSelectingFile={isSelectingFile}\n                  />\n                </View>\n              )}\n            </>\n          )}\n\n          <Pressable\n            style={{\n              margin: 10,\n              backgroundColor: 'red',\n              borderRadius: 15,\n              zIndex: -100,\n            }}\n            onPress={() => deleteTeam()}\n          >\n            <Text style={{ margin: 10 }}>Delete Team</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              if (createTeamLoadingState === loadingStateEnum.notStarted) {\n                updateTeam();\n              } else if (createTeamLoadingState === loadingStateEnum.failed) {\n                setCreateTeamLoadingState(loadingStateEnum.notStarted);\n              }\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {createTeamLoadingState === loadingStateEnum.notStarted\n                ? isCreatingTeam\n                  ? 'CREATE TEAM'\n                  : 'UPDATE TEAM'\n                : createTeamLoadingState === loadingStateEnum.loading\n                ? 'LOADING'\n                : createTeamLoadingState === loadingStateEnum.success\n                ? 'SUCCESS'\n                : 'FAILED'}\n            </Text>\n          </Pressable>\n        </ScrollView>\n      ) : (\n        <>\n          {teamDataState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView width={width * 0.1} height={height * 0.1} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              <Pressable\n                onPress={() => {\n                  navigate(`/profile/government/sports/team/${sport}/${id}`);\n                }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n      {isSelectingFile ? (\n        <RosterSelectFile\n          setIsSelectingFile={setIsSelectingFile}\n          setSelectedFile={setSelectedFile}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction RosterBlock({\n  microsoftTeamId,\n  width,\n  height,\n  teamId,\n  setIsSelectingFile,\n  selectedFile,\n  isSelectingFile,\n  setSelectedFile,\n}: {\n  microsoftTeamId: string;\n  width: number;\n  height: number;\n  teamId: string;\n  selectedFile: string;\n  setSelectedFile: (item: string) => void;\n  isSelectingFile: boolean;\n  setIsSelectingFile: (item: boolean) => void;\n}) {\n  const [membersState, setMembersState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [members, setMembers] = useState<governmentRosterType[]>([]);\n\n  async function getMembers() {\n    const teamResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${teamId}/items?$expand=fields($select=playerId,position,playerNumber,posts,imageShareId)&$select=id`,\n    );\n    if (teamResult.ok) {\n      const teamResultData = await teamResult.json();\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/teams/${microsoftTeamId}/members`,\n      );\n      if (result.ok) {\n        const data = await result.json();\n        const users: microsoftUserType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          users.push({\n            id: data.value[index].userId,\n            displayName: data.value[index].displayName,\n          });\n        }\n        const rosters: governmentRosterType[] = [];\n        for (\n          let teamIndex = 0;\n          teamIndex < teamResultData.value.length;\n          teamIndex += 1\n        ) {\n          const userData = users.findIndex(e => {\n            return e.id === teamResultData.value[teamIndex].fields.playerId;\n          });\n          console.log(userData);\n          if (userData !== -1) {\n            rosters.push({\n              name: users[userData].displayName,\n              id: teamResultData.value[teamIndex].fields.playerId,\n              listItemId: teamResultData.value[teamIndex].id,\n              imageShareId: teamResultData.value[teamIndex].fields.imageShareId,\n              position: teamResultData.value[teamIndex].fields.position,\n              playerNumber: teamResultData.value[teamIndex].fields.playerNumber,\n              posts:\n                teamResultData.value[teamIndex].fields.posts !== undefined\n                  ? JSON.parse(\n                      teamResultData.value[teamIndex].fields.playerNumber,\n                    )\n                  : undefined,\n            });\n            const save = users[0];\n            users[0] = users[userData];\n            users[userData] = save;\n            users.shift();\n          }\n        }\n\n        for (let index = 0; index < users.length; index += 1) {\n          rosters.push({\n            name: users[index].displayName,\n            id: users[index].id,\n          });\n        }\n        setMembers(rosters);\n        setMembersState(loadingStateEnum.success);\n      } else {\n        setMembersState(loadingStateEnum.failed);\n      }\n    } else {\n      setMembersState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getMembers();\n  }, []);\n\n  return (\n    <>\n      {membersState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={width * 0.1} height={height * 0.1} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {membersState === loadingStateEnum.success ? (\n            <View>\n              <FlatList\n                data={members}\n                renderItem={member => (\n                  <RosterBlockItem\n                    members={members}\n                    setMembers={setMembers}\n                    member={member}\n                    teamId={teamId}\n                    selectedFile={selectedFile}\n                    setIsSelectingFile={setIsSelectingFile}\n                    setSelectedFile={setSelectedFile}\n                    isSelectingFile={isSelectingFile}\n                  />\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction RosterBlockItem({\n  member,\n  members,\n  setMembers,\n  teamId,\n  setIsSelectingFile,\n  isSelectingFile,\n  selectedFile,\n  setSelectedFile,\n}: {\n  members: governmentRosterType[];\n  setMembers: (item: governmentRosterType[]) => void;\n  member: ListRenderItemInfo<governmentRosterType>;\n  teamId: string;\n  selectedFile: string;\n  setSelectedFile: (item: string) => void;\n  isSelectingFile: boolean;\n  setIsSelectingFile: (item: boolean) => void;\n}) {\n  const [rosterState, setRosterState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [callingSelectedFile, setIsCallingSelectedFile] =\n    useState<boolean>(false);\n  const [imageUrl, setImageUrl] = useState<string>('');\n\n  async function createMemberItem(member: governmentRosterType) {\n    const index = members.findIndex(e => {\n      return e.id === member.id;\n    });\n    if (index === -1) {\n      setRosterState(loadingStateEnum.failed);\n      return;\n    }\n    setRosterState(loadingStateEnum.loading);\n    const data = {\n      fields: {\n        playerNumber: member.playerNumber,\n        position: member.position,\n        playerId: member.id,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${teamId}/items`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      const save = members;\n      save[index].listItemId = data.id;\n      setMembers(save);\n      setRosterState(loadingStateEnum.success);\n    } else {\n      setRosterState(loadingStateEnum.failed);\n    }\n  }\n\n  async function updatePlayerData(member: governmentRosterType) {\n    if (member.listItemId !== undefined) {\n      setRosterState(loadingStateEnum.loading);\n      const data = {\n        fields: {\n          playerNumber: member.playerNumber,\n          position: member.position,\n          imageShareId: member.imageShareId,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${teamId}/items/${member.listItemId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setRosterState(loadingStateEnum.success);\n      } else {\n        setRosterState(loadingStateEnum.failed);\n      }\n    } else {\n      createMemberItem(member);\n    }\n  }\n\n  useEffect(() => {\n    if (callingSelectedFile) {\n      const save = members;\n      save[member.index].imageShareId = selectedFile;\n      setSelectedFile('');\n      setMembers(save);\n      updatePlayerData(save[member.index]);\n    }\n    if (isSelectingFile === false) {\n      setIsCallingSelectedFile(false);\n    }\n  }, [isSelectingFile, selectedFile]);\n\n  async function loadImage() {\n    if (member.item.imageShareId !== undefined) {\n      const result = await getFileWithShareID(member.item.imageShareId);\n      console.log(result);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.url &&\n        result.contentType === dataContentTypeOptions.image\n      ) {\n        setImageUrl(result.url);\n      } else {\n        setImageUrl('');\n      }\n    } else {\n      setImageUrl('');\n    }\n  }\n\n  useEffect(() => {\n    loadImage();\n  }, [member.item.imageShareId]);\n\n  return (\n    <View\n      key={`Member_${member.item.id}_${createUUID()}`}\n      style={{ margin: 5 }}\n    >\n      <View>\n        {rosterState === loadingStateEnum.loading ? (\n          <ProgressView width={14} height={14} />\n        ) : (\n          <>\n            {rosterState === loadingStateEnum.success ||\n            rosterState === loadingStateEnum.notStarted ? (\n              <View\n                style={{\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                  backgroundColor: 'green',\n                }}\n              />\n            ) : (\n              <View\n                style={{\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                  backgroundColor: 'red',\n                }}\n              />\n            )}\n          </>\n        )}\n      </View>\n      <Text>{member.item.name}</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Player Number:</Text>\n        <TextInput\n          value={member.item.playerNumber}\n          onChangeText={e => {\n            const save = members;\n            save[member.index].playerNumber = e;\n            setMembers([...save]);\n          }}\n          onFocus={() => {}}\n          onBlur={() => {\n            updatePlayerData(member.item);\n          }}\n        />\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Position:</Text>\n        <TextInput\n          value={member.item.position}\n          onChangeText={e => {\n            const save = members;\n            save[member.index].position = e;\n            setMembers([...save]);\n          }}\n          onBlur={() => {\n            updatePlayerData(member.item);\n          }}\n        />\n      </View>\n      {imageUrl !== '' ? (\n        <Image source={{ uri: imageUrl }} style={{ width: 100, height: 100 }} />\n      ) : null}\n      <Pressable\n        onPress={() => {\n          setIsSelectingFile(true);\n          setIsCallingSelectedFile(true);\n        }}\n      >\n        <Text>Choose Player Image</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nfunction RosterSelectFile({\n  setIsSelectingFile,\n  setSelectedFile,\n}: {\n  setIsSelectingFile: (item: boolean) => void;\n  setSelectedFile: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#ededed',\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setIsSelectingFile(false);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <View\n        style={{\n          height: height * 0.8,\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          backgroundColor: Colors.white,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          <MicrosoftFilePicker\n            height={height * 0.8 - 5}\n            width={width * 0.8 - 5}\n            onSelectedFile={async file => {\n              const data = {\n                type: 'view',\n                scope: 'organization',\n              };\n              const result = await callMsGraph(\n                `${file.callPath}/createLink`,\n                'POST',\n                JSON.stringify(data),\n              );\n              if (result.ok) {\n                const data = await result.json();\n                if (data.shareId !== undefined) {\n                  setSelectedFile(data.shareId);\n                  setIsSelectingFile(false);\n                } else {\n                  setIsSelectingFile(false);\n                }\n              } else {\n                setIsSelectingFile(false);\n              }\n            }}\n          />\n        </View>\n      </View>\n    </View>\n  );\n}\n","import { loadingStateEnum } from \"../types\";\n\nexport async function getYoutubeVideos(pageToken?: string | undefined): Promise<{result: loadingStateEnum.success, data: youtubeVideoType[], nextPageToken?: undefined | string}|{result: loadingStateEnum.failed}> {\n  const result = await fetch(`https://www.googleapis.com/youtube/v3/playlistItems?playlistId=UU8HbRWjbR0xjOeE6OlQ1sLA&part=contentDetails,id,snippet${pageToken ? `&pageToken=${pageToken}`:\"\"}&key=AIzaSyAeyX34-ADpLxnfUIJk_osy5pgCvO3MtTY`);\n  if (result.ok) {\n    const data = await result.json()\n    let resultData: youtubeVideoType[] = []\n    for (let index = 0; index < data['items'].length; index += 1) {\n      resultData.push({\n        thumbnail: data['items'][index]['snippet']['thumbnails']['high']['url'],\n        title: data['items'][index]['snippet']['title'],\n        videoId: data['items'][index]['contentDetails']['videoId']\n      })\n    }\n    return {result: loadingStateEnum.success, data: resultData, nextPageToken: data[\"nextPageToken\"]}\n  } else {\n    return {result: loadingStateEnum.failed}\n  }\n}","import { View, Text, Pressable, TextInput, FlatList, Image } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport MicrosoftFilePicker from '../../../../UI/MicrosoftFilePicker';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum, postType } from '../../../../types';\nimport {\n  getSports,\n  getSportsTeams,\n} from '../../../../Functions/sports/sportsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\nimport { SegmentedButtons } from 'react-native-paper';\nimport { getYoutubeVideos } from '../../../../Functions/youtubeFunctions';\n\nfunction YoutubeVideosSelector({onSelect}:{onSelect: (item: string) => void}) {\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const [ytVideos, setytVideos] = useState<youtubeVideoType[]>([]);\n  const [ytState, setytState] = useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [nextPage, setNextPage] = useState<string | undefined>(undefined);\n\n  async function loadData() {\n    const result = await getYoutubeVideos(nextPage);\n    if (result.result == loadingStateEnum.success) {\n      setytVideos([...ytVideos, ...result.data]);\n      setNextPage(result.nextPageToken)\n      setytState(loadingStateEnum.success);\n    } else {\n      setytState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData()\n  }, []);\n\n  return (\n    <>\n      { (ytState === loadingStateEnum.loading) ?\n        <View>\n          <ProgressView width={14} height={14}/>\n          <Text>Loading</Text>\n        </View>:\n        <>\n          { (ytState === loadingStateEnum.success) ?\n            <FlatList\n              data={ytVideos}\n              renderItem={(video) => (\n                <Pressable onPress={() => {onSelect(video.item.videoId)}}>\n                  <Image source={{uri: video.item.thumbnail}} style={{width: width, height: (width/16)*9}}/>\n                  <Text>{video.item.title}</Text>\n                </Pressable>\n              )}\n              style={{width: width, height: 500}}\n              onEndReached={() => loadData()}\n            />:\n            <View style={{width: width, height: 500}}>\n              <Text>Something Went Wrong</Text>\n            </View>\n          }\n        </>\n      }\n    </>\n  )\n}\n\nexport default function GovernmentSportsTeamAddPost() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [fileId, setFileId] = useState<string>('');\n  const [postName, setPostName] = useState<string>('');\n  const [postSubmissionState, setPostSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const navigate = useNavigate();\n  const [selectedSportId, setSelectedSportId] = useState<string>('');\n  const [selectedTeamId, setSelectedTeamId] = useState<string>('');\n  const [postMode, setPostMode] = useState(postType.microsoftFile);\n\n  async function getShareLink(item: microsoftFileType) {\n    const itemPathArray = item.itemGraphPath.split('/');\n    if (itemPathArray[itemPathArray.length - 1] === 'children') {\n      const data = {\n        type: 'view',\n        scope: 'organization',\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/drives/${item.parentDriveId}/items/${item.id}/createLink`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        const dataOut = await result.json();\n        setFileId(dataOut.shareId);\n      } else {\n      }\n    }\n  }\n  async function createFileSubmission() {\n    if (fileId !== '' && selectedTeamId !== '') {\n      setPostSubmissionState(loadingStateEnum.loading);\n      const userIdResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/me',\n      );\n      if (userIdResult.ok) {\n        const userData = await userIdResult.json();\n        const submissionID = createUUID();\n        const data = {\n          fields: {\n            Title: postName,\n            fileId: fileId,\n            fileType: postMode,//This is the post mode Type\n            accepted: false,\n            user: userData.id,\n            timeCreated: new Date().toISOString(),\n            submissionId: submissionID,\n            reviewed: false,\n            selectedSportId,\n            selectedTeamId,\n          },\n        };\n        const result = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${\n            store.getState().paulyList.sportsSubmissionsListId\n          }/items`,\n          'POST',\n          JSON.stringify(data),\n        );\n        if (result.ok) {\n          setPostSubmissionState(loadingStateEnum.success);\n        } else {\n          setPostSubmissionState(loadingStateEnum.failed);\n        }\n      } else {\n        setPostSubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/sports');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Add Sports Team Post</Text>\n      <TextInput\n        value={postName}\n        onChangeText={e => {\n          setPostName(e);\n        }}\n      />\n      <PickSportTeam\n        height={400}\n        width={width}\n        onSelect={e => {\n          setSelectedSportId(e.sportId);\n          setSelectedTeamId(e.teamId);\n        }}\n        onBack={() => {\n          setSelectedSportId('');\n          setSelectedTeamId('');\n        }}\n      />\n      <SegmentedButtons\n        value={postMode.toString()}\n        onValueChange={(e) => setPostMode(parseInt(e))}\n        buttons={[\n          {\n            value: postType.microsoftFile.toString(),\n            label: 'Microsoft File',\n          },\n          {\n            value: postType.youtubeVideo.toString(),\n            label: 'Youtube Video',\n          },\n        ]}\n      />\n      {(postMode == postType.microsoftFile) ?\n        <MicrosoftFilePicker\n          onSelectedFile={(item: microsoftFileType) => {\n            getShareLink(item);\n          }}\n          height={500}\n          width={width}\n        />:null\n      }\n      {(postMode == postType.youtubeVideo) ?\n        <YoutubeVideosSelector onSelect={setFileId} />:null\n      }\n      {fileId !== '' ? (\n        <Pressable\n          onPress={() => {\n            if (\n              postSubmissionState === loadingStateEnum.notStarted &&\n              fileId !== '' &&\n              selectedTeamId !== ''\n            ) {\n              createFileSubmission();\n            }\n          }}\n        >\n          <Text>\n            {fileId !== '' && selectedTeamId !== ''\n              ? 'Submit'\n              : 'Select Team'}\n          </Text>\n        </Pressable>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.failed ? (\n        <Text>Failure</Text>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.success ? (\n        <Text>Success</Text>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nfunction PickSportTeam({\n  width,\n  height,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  onSelect: (item: { sportId: string; teamId: string }) => void;\n  onBack: () => void;\n}) {\n  const [currentSports, setCurrentSports] = useState<sportType[]>([]);\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedSport, setSelectedSport] = useState<sportType | undefined>(\n    undefined,\n  );\n  const [sportsTeams, setSportTeams] = useState<sportTeamType[]>([]);\n  const [sportTeamState, setSportTeamState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadData() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentSports(result.data);\n    }\n    setDataResult(result.result);\n  }\n\n  async function loadTeams() {\n    if (selectedSport !== undefined) {\n      setSportTeamState(loadingStateEnum.loading);\n      const result = await getSportsTeams(selectedSport.id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setSportTeams(result.data);\n      }\n      setSportTeamState(result.result);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    loadTeams();\n  }, [selectedSport]);\n\n  return (\n    <View style={{ width, height }}>\n      <>\n        {sportsTeams === undefined ||\n        sportTeamState === loadingStateEnum.notStarted ? (\n          <>\n            {dataResult === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.1 : height * 0.1}\n                  height={width < height ? width * 0.1 : height * 0.1}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {dataResult === loadingStateEnum.success ? (\n                  <>\n                    {currentSports.map((item, id) => (\n                      <Pressable\n                        key={id}\n                        onPress={() => setSelectedSport(item)}\n                      >\n                        <View>\n                          <Text>{item.name}</Text>\n                        </View>\n                      </Pressable>\n                    ))}\n                  </>\n                ) : (\n                  <View>\n                    <Text>Error</Text>\n                  </View>\n                )}\n              </>\n            )}\n          </>\n        ) : (\n          <>\n            {sportTeamState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.1 : height * 0.1}\n                  height={width < height ? width * 0.1 : height * 0.1}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {sportTeamState === loadingStateEnum.success &&\n                selectedSport !== undefined ? (\n                  <View>\n                    <Pressable\n                      onPress={() => {\n                        setSelectedSport(undefined);\n                        setSportTeamState(loadingStateEnum.notStarted);\n                        setSportTeams([]);\n                        onBack();\n                      }}\n                    >\n                      <Text>Back</Text>\n                    </Pressable>\n                    {sportsTeams.map((item, id) => (\n                      <Pressable\n                        key={id}\n                        onPress={() =>\n                          onSelect({\n                            sportId: selectedSport.id,\n                            teamId: item.teamId,\n                          })\n                        }\n                      >\n                        <View>\n                          <Text>{item.teamName}</Text>\n                        </View>\n                      </Pressable>\n                    ))}\n                  </View>\n                ) : (\n                  <View>\n                    <Text>Error</Text>\n                  </View>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </>\n    </View>\n  );\n}\n","import { View, Text, Image, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ResizeMode, Video } from 'expo-av';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\nimport store, { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n  postType,\n} from '../../../../types';\nimport SportsYoutube from '../../../../UI/SportsYoutube';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nfunction getDenyText(reviewed: boolean, accepted: boolean) {\n  if (!reviewed && !accepted) {\n    'SubmissionDenied'\n  } else {\n    return 'Deny'\n  }\n}\n\nexport default function GovernmentReviewFileSubmission() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const { submissionID } = useParams();\n  const [dataURL, setDataURL] = useState<string>('');\n  const [dataContentType, setDataContentType] =\n    useState<dataContentTypeOptions>(dataContentTypeOptions.unknown);\n  const [currentSubmissionInfomration, setCurrentSubmissionInformation] =\n    useState<mediaSubmissionType | undefined>(undefined);\n  const navigate = useNavigate();\n\n  // Loading States\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [approveSubmissionState, setApproveSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [denySubmissionState, setDenySubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [deleteState, setDeleteState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function deleteSubmission(itemID: string) {\n    setDeleteState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.sportsSubmissionsListId\n      }/items/${itemID}`,\n      'DELETE',\n    ); // TO DO fix list ids\n    if (result.ok) {\n      // TO DO Check if submission has been approved before\n      // Remove from approved submissions\n      setDeleteState(loadingStateEnum.success);\n    } else {\n      setDeleteState(loadingStateEnum.failed);\n    }\n  }\n\n  async function getSubmissionInformation() {\n    if (submissionID !== undefined) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.sportsSubmissionsListId\n        }/items?expand=fields&filter=fields/submissionId%20eq%20'${submissionID}'`,\n      );\n      if (result.ok) {\n        const data = await result.json();\n        if (data.value !== undefined) {\n          if (data.value.length === 1) {\n            // All things are working\n            setCurrentSubmissionInformation({\n              Title: data.value[0].fields.Title,\n              user: data.value[0].fields.user,\n              submissionId: data.value[0].fields.submissionId,\n              accepted: data.value[0].fields.accepted,\n              fileId: data.value[0].fields.fileId,\n              fileType: data.value[0].fields.fileType,\n              itemID: data.value[0].id,\n              selectedSportId: data.value[0].fields.selectedSportId,\n              selectedTeamId: data.value[0].fields.selectedTeamId,\n              reviewed: data.value[0].fields.reviewed,\n            });\n            setLoadingState(loadingStateEnum.success);\n          } else {\n            setLoadingState(loadingStateEnum.failed);\n          }\n        } else {\n          setLoadingState(loadingStateEnum.failed);\n        }\n      } else {\n        setLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function approveSubmission() {\n    if (currentSubmissionInfomration) {\n      setApproveSubmissionState(loadingStateEnum.loading);\n      const data = {\n        requests: [\n          {\n            id: '1',\n            method: 'POST',\n            url: `/sites/${store.getState().paulyList.siteId}/lists/${\n              store.getState().paulyList.sportsApprovedSubmissionsListId\n            }/items`,\n            body: {\n              fields: {\n                Title: currentSubmissionInfomration.Title,\n                fileId: currentSubmissionInfomration.fileId,\n                fileType: currentSubmissionInfomration.fileType,\n                caption: currentSubmissionInfomration.Title,\n                submissionId: currentSubmissionInfomration.submissionId,\n                selectedSportId: currentSubmissionInfomration.selectedSportId,\n                selectedTeamId: currentSubmissionInfomration.selectedTeamId,\n              },\n            },\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n          {\n            id: '2',\n            method: 'PATCH',\n            url: `/sites/${store.getState().paulyList.siteId}/lists/${\n              store.getState().paulyList.sportsSubmissionsListId\n            }/items/${currentSubmissionInfomration.itemID}`,\n            body: {\n              fields: { accepted: true, reviewed: true },\n            },\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        ],\n      };\n      const result = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(data),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (result.ok) {\n        const newInformation = currentSubmissionInfomration;\n        newInformation.accepted = true;\n        newInformation.reviewed = true;\n        setCurrentSubmissionInformation(currentSubmissionInfomration);\n        setApproveSubmissionState(loadingStateEnum.success);\n      } else {\n        setApproveSubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function denySubmission() {\n    if (currentSubmissionInfomration) {\n      const data = {\n        fields: {\n          accepted: false,\n          reviewed: true,\n        },\n      };\n      setDenySubmissionState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `/sites/${store.getState().paulyList.siteId}/lists/${\n          store.getState().paulyList.sportsSubmissionsListId\n        }/items/${currentSubmissionInfomration.itemID}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setDenySubmissionState(loadingStateEnum.success);\n      } else {\n        setDenySubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function loadFile() {\n    if (currentSubmissionInfomration !== undefined) {\n      if (currentSubmissionInfomration.fileType === postType.microsoftFile) {\n        const result = await getFileWithShareID(\n          currentSubmissionInfomration.fileId,\n          0,\n        );\n        if (\n          result.result === loadingStateEnum.success &&\n          result.url !== undefined &&\n          result.contentType !== undefined\n        ) {\n          setDataURL(result.url);\n          setDataContentType(result.contentType);\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (submissionID !== undefined) {\n      getSubmissionInformation();\n    }\n  }, [submissionID]);\n\n  useEffect(() => {\n    loadFile();\n  }, [currentSubmissionInfomration]);\n\n  return (\n    <>\n      {loadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingState === loadingStateEnum.success &&\n          currentSubmissionInfomration !== undefined ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n              }}\n            >\n              <Pressable onPress={() => navigate('/profile/government/sports')}>\n                <Text>Back</Text>\n              </Pressable>\n              <Text>GovernmentReviewFileSubmission</Text>\n              {dataURL !== '' && (\n                <View>\n                  {dataContentType === dataContentTypeOptions.image ? (\n                    <Image\n                      height={100}\n                      style={{ height: 100 }}\n                      source={{ uri: dataURL }}\n                    />\n                  ) : null}\n                  {dataContentType === dataContentTypeOptions.video ? (\n                    <Video\n                      useNativeControls\n                      source={{ uri: dataURL }}\n                      resizeMode={ResizeMode.COVER}\n                      style={{\n                        width: width * 0.9,\n                        height: height * 0.4,\n                        alignSelf: 'stretch',\n                        marginLeft: width * 0.05,\n                        marginRight: width * 0.05,\n                      }}\n                      videoStyle={{ width: width * 0.9, height: height * 0.4 }}\n                    />\n                  ) : null}\n                </View>\n              )}\n              { (currentSubmissionInfomration.fileType === postType.youtubeVideo) ?\n                <View style={{height: (width * 0.9/16) *9}}>\n                  <SportsYoutube videoId={currentSubmissionInfomration.fileId} width={width*0.9}/>\n                </View>:null\n              }\n              <Pressable\n                onPress={() => {\n                  if (currentSubmissionInfomration) {\n                    deleteSubmission(currentSubmissionInfomration.itemID);\n                  }\n                }}\n              >\n                <Text>Remove File Submission</Text>\n              </Pressable>\n              <Pressable\n                onPress={() => {\n                  approveSubmission();\n                }}\n              >\n                <Text>\n                  {approveSubmissionState === loadingStateEnum.loading\n                    ? 'Loading'\n                    : approveSubmissionState === loadingStateEnum.success ||\n                      approveSubmissionState === loadingStateEnum.notStarted\n                    ? currentSubmissionInfomration.reviewed\n                      ? currentSubmissionInfomration.accepted\n                        ? 'Submission Approved'\n                        : 'Approve'\n                      : 'Approve'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n              <Pressable onPress={() => denySubmission()}>\n                <Text>\n                  {\n                    getTextState(denySubmissionState, {\n                      success: getDenyText(currentSubmissionInfomration.reviewed, currentSubmissionInfomration.accepted),\n                      notStarted: getDenyText(currentSubmissionInfomration.reviewed, currentSubmissionInfomration.accepted)\n                    })\n                  }\n                </Text>\n              </Pressable>\n            </View>\n          ) : (\n            <View style={{ width, height }}>\n              <Pressable onPress={() => navigate('/profile/government/sports')}>\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../Redux/store';\nimport { Colors } from '../../../../types';\n\nexport default function GovernmentCalendar() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  return (\n    <View\n      style={{\n        width,\n        height,\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable onPress={() => navigate('/profile/government/')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Government Calendar</Text>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/schedule')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Schedule</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/timetable')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Timetables</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/dresscode')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Dress Code</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport { getSchedules } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\nexport default function GovernmentSchedule() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [loadedSchedules, setLoadedSchedules] = useState<scheduleType[]>([]);\n  const navigate = useNavigate();\n\n  async function loadSchedules() {\n    const result = await getSchedules();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setLoadedSchedules(result.data);\n    }\n    setLoadingState(result.result);\n  }\n\n  useEffect(() => {\n    loadSchedules();\n  }, []);\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government/calendar')}>\n          <Text>Back</Text>\n        </Pressable>\n        <View\n          style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Schedules</Text>\n        </View>\n      </View>\n      {loadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height: height * 0.8,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={15} height={15} />\n          <Text>Loading</Text>\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.success ? (\n        <View style={{ height: height * 0.8 }}>\n          {loadedSchedules.length >= 1 ? (\n            <FlatList\n              data={loadedSchedules}\n              renderItem={schedule => (\n                <Pressable\n                  style={{\n                    backgroundColor: Colors.white,\n                    shadowColor: 'black',\n                    shadowOffset: { width: 1, height: 1 },\n                    shadowOpacity: 1,\n                    shadowRadius: 5,\n                    margin: 10,\n                    marginBottom: 0,\n                    borderRadius: 15,\n                  }}\n                  onPress={() =>\n                    navigate(\n                      `/profile/government/calendar/schedule/${schedule.item.id}`,\n                    )\n                  }\n                  key={schedule.item.id}\n                >\n                  <Text style={{ margin: 10 }}>{schedule.item.properName}</Text>\n                </Pressable>\n              )}\n            />\n          ) : (\n            <Text>No Schedule</Text>\n          )}\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.failed ? <Text>Failure</Text> : null}\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/schedule/create')}\n        style={{\n          backgroundColor: Colors.white,\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n          marginLeft: 5,\n          marginRight: 5,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Create New</Text>\n      </Pressable>\n    </ScrollView>\n  );\n}\n","// Andrew Mainella\n// October 14 2023\n// Pauly\n// GovernmentTimetable.tsx\n//\n// An timetable selector that direcets to creating a new timetable or editing one.\n//\n\nimport { View, Text, Pressable } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport SelectTimetable from '../../../../Calendar/SelectTimetable';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors } from '../../../../../types';\n\nexport default function GovernmentTimetable() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government/calendar/')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Timetables</Text>\n      </View>\n      <View style={{ height: height * 0.85 }}>\n        <SelectTimetable governmentMode />\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate('/profile/government/calendar/timetable/create')\n        }\n      >\n        <Text>Create New</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, TextInput, Button, Pressable, Modal } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { TimePickerModal, he } from 'react-native-paper-dates';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Animated, {\n  interpolateColor,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\nimport ColorPicker, {\n  Preview,\n  Panel1,\n  HueSlider,\n  OpacitySlider,\n  Swatches,\n  RenderThumbProps,\n  InputWidget,\n} from 'reanimated-color-picker';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport store, { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport { CloseIcon, WarningIcon } from '../../../../../UI/Icons/Icons';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport { getSchedule } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\nfunction isValidHexaCode(input: string) {\n  // Define the regular expression pattern for a valid hexadecimal color code\n  // It matches either a 6-character or 3-character code, preceded by a #\n  const hexaPattern = /^#(?:[0-9a-fA-F]{3,4}){1,2}$/;\n\n  // Test the input against the pattern using the test() method\n  return hexaPattern.test(input);\n}\n\n// NOTE: period length cannot be longer than 20\nexport default function GovernmentSchedule() {\n  const { id } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [scheduleListId, setScheduleListId] = useState<string | undefined>(\n    undefined,\n  );\n\n  const [scheduleProperName, setScheduleProperName] = useState<string>('');\n  const [scheduleDescriptiveName, setScheduleDescriptiveName] =\n    useState<string>('');\n  const [newPeriods, setNewPeriods] = useState<periodType[]>([]);\n  const [color, setColor] = useState<string>('#ffffff');\n\n  const [isPickingColor, setIsPickingColor] = useState<boolean>(false);\n  const [isCreatingSchedule, setIsCreatingSchedule] = useState<boolean>(false);\n\n  const [createScheduleLoadingState, setCreateScheduleLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [loadScheduleState, setLoadScheduleState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [deleteState, setDeleteState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const navigate = useNavigate();\n  async function submitSchedule() {\n    setCreateScheduleLoadingState(loadingStateEnum.loading);\n    if (isCreatingSchedule) {\n      const data = {\n        fields: {\n          Title: scheduleProperName,\n          scheduleId: createUUID(),\n          scheduleProperName,\n          scheduleDescriptiveName,\n          scheduleColor: color,\n          scheduleData: JSON.stringify(newPeriods),\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.scheduleListId}/items`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateScheduleLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateScheduleLoadingState(loadingStateEnum.failed);\n      }\n    } else if (scheduleListId !== undefined) {\n      const data = {\n        fields: {\n          Title: scheduleProperName,\n          scheduleProperName,\n          scheduleDescriptiveName,\n          scheduleColor: color,\n          scheduleData: JSON.stringify(newPeriods),\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.scheduleListId\n        }/items/${scheduleListId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateScheduleLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateScheduleLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setCreateScheduleLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  async function deleteFunction() {\n    if (scheduleListId !== undefined) {\n      setDeleteState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.scheduleListId\n        }/items/${scheduleListId}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        setDeleteState(loadingStateEnum.success);\n      } else {\n        setDeleteState(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadFunction() {\n    if (id !== undefined) {\n      const result = await getSchedule(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.schedule !== undefined\n      ) {\n        setScheduleProperName(result.schedule.properName);\n        setScheduleDescriptiveName(result.schedule.descriptiveName);\n        setColor(result.schedule.color);\n        setNewPeriods(result.schedule.periods);\n        setScheduleListId(result.listItemId);\n      }\n      setLoadScheduleState(result.result);\n    } else {\n      setLoadScheduleState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (id === 'create') {\n      setIsCreatingSchedule(true);\n    } else {\n      loadFunction();\n    }\n  }, []);\n\n  return (\n    <>\n      {(isCreatingSchedule || loadScheduleState === loadingStateEnum.success) &&\n      deleteState !== loadingStateEnum.success ? (\n        <ScrollView\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/profile/government/calendar/schedule');\n            }}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <View\n            style={{\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Text>{isCreatingSchedule ? 'Create' : 'Edit'} Schedule</Text>\n          </View>\n          <View style={{ height: height * 0.2 }}>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Proper Name:</Text>\n              <TextInput\n                style={{ width }}\n                value={scheduleProperName}\n                onChangeText={setScheduleProperName}\n                placeholder=\"Proper Name ex. Schedule One\"\n              />\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Descriptive Name:</Text>\n              <TextInput\n                style={{ width }}\n                value={scheduleDescriptiveName}\n                onChangeText={setScheduleDescriptiveName}\n                placeholder=\"Descriptive Name ex. Regular Schedule\"\n              />\n            </View>\n            <View\n              style={{ margin: 5, borderRadius: 5, backgroundColor: '#FF6700' }}\n            >\n              <View style={{ margin: 10, flexDirection: 'row' }}>\n                <WarningIcon width={14} height={14} />\n                <Text>\n                  Keep descriptive name short as it is used in the calendar\n                  widget\n                </Text>\n              </View>\n            </View>\n          </View>\n          <Text>New Periods</Text>\n          <ScrollView style={{ height: height * 0.5 }}>\n            {newPeriods.map(period => (\n              <PeriodBlock\n                period={period}\n                periods={newPeriods}\n                onSetNewPeriods={out => {\n                  setNewPeriods([...out]);\n                }}\n              />\n            ))}\n          </ScrollView>\n          {newPeriods.length < 20 ? (\n            <Pressable\n              onPress={() => {\n                setNewPeriods([\n                  ...newPeriods,\n                  {\n                    startHour: new Date().getHours(),\n                    startMinute: new Date().getMinutes(),\n                    endHour: new Date().getHours(),\n                    endMinute: new Date().getMinutes(),\n                    id: createUUID(),\n                  },\n                ]);\n              }}\n            >\n              <Text>Add Period</Text>\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => setIsPickingColor(true)}\n            style={{\n              margin: 10,\n              backgroundColor: '#FFFFFF',\n              shadowColor: 'black',\n              shadowOffset: { width: 1, height: 1 },\n              shadowOpacity: 1,\n              shadowRadius: 5,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              <Text>Color</Text>\n              <View style={{ flexDirection: 'row', marginTop: 10 }}>\n                <View\n                  style={{\n                    width: 32.4,\n                    height: 32.4,\n                    backgroundColor: color,\n                    borderRadius: 7,\n                    borderWidth: 2,\n                    borderColor: Colors.black,\n                  }}\n                />\n                <Pressable style={{ marginLeft: 5 }}>\n                  <ColorPicker\n                    style={{ width: width - 77.4, height: 16.5 }}\n                    value={color}\n                    onComplete={e => setColor(e.hex)}\n                  >\n                    <InputWidget\n                      disableAlphaChannel\n                      defaultFormat=\"HEX\"\n                      formats={['HEX']}\n                      inputTitleStyle={{ display: 'none' }}\n                    />\n                  </ColorPicker>\n                </Pressable>\n                <Modal visible={isPickingColor} animationType=\"slide\">\n                  <View\n                    style={{\n                      alignContent: 'center',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      width,\n                      height,\n                    }}\n                  >\n                    <Pressable\n                      onPress={() => setIsPickingColor(false)}\n                      style={{\n                        position: 'absolute',\n                        top: height * 0.1,\n                        left: width * 0.1,\n                      }}\n                    >\n                      <CloseIcon width={14} height={14} />\n                    </Pressable>\n                    <ColorPicker\n                      style={{ width: width * 0.7 }}\n                      value={color}\n                      onComplete={e => setColor(e.hex)}\n                    >\n                      <View style={{ flexDirection: 'row' }}>\n                        <Preview\n                          hideText\n                          hideInitialColor\n                          style={{\n                            width: width * 0.1,\n                            height: height * 0.5,\n                            borderTopRightRadius: 0,\n                            borderBottomRightRadius: 0,\n                          }}\n                        />\n                        <View\n                          style={{\n                            borderTopRightRadius: 5,\n                            borderBottomRightRadius: 5,\n                            overflow: 'hidden',\n                          }}\n                        >\n                          <Panel1\n                            style={{\n                              width: width * 0.6,\n                              height: height * 0.5,\n                              borderRadius: 0,\n                            }}\n                            renderThumb={e => (\n                              <CustomColorThumb e={e} diameter={15} />\n                            )}\n                          />\n                        </View>\n                      </View>\n                      <HueSlider\n                        renderThumb={e => <CustomColorThumb e={e} />}\n                        style={{ height: 30, marginTop: 10 }}\n                      />\n                    </ColorPicker>\n                    <Pressable\n                      style={{\n                        marginTop: 10,\n                        backgroundColor: Colors.darkGray,\n                        borderRadius: 15,\n                        width: width * 0.5,\n                        alignContent: 'center',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                      }}\n                      onPress={() => setIsPickingColor(false)}\n                    >\n                      <Text style={{ margin: 10, color: Colors.white }}>\n                        OK\n                      </Text>\n                    </Pressable>\n                  </View>\n                </Modal>\n              </View>\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              if (\n                createScheduleLoadingState === loadingStateEnum.notStarted &&\n                isValidHexaCode(color)\n              ) {\n                submitSchedule();\n              }\n            }}\n            style={{\n              margin: 10,\n              backgroundColor: Colors.white,\n              shadowColor: 'black',\n              shadowOffset: { width: 1, height: 1 },\n              shadowOpacity: 1,\n              shadowRadius: 5,\n              borderRadius: 15,\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {!isValidHexaCode(color)\n                ? 'Cannot Start'\n                : createScheduleLoadingState === loadingStateEnum.notStarted\n                ? `${isCreatingSchedule ? 'Create' : 'Save'} Schedule`\n                : createScheduleLoadingState === loadingStateEnum.loading\n                ? 'Loading'\n                : createScheduleLoadingState === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {!isCreatingSchedule ? (\n            <Pressable\n              onPress={() => deleteFunction()}\n              style={{\n                margin: 10,\n                backgroundColor: Colors.danger,\n                borderRadius: 15,\n              }}\n            >\n              <Text style={{ margin: 10 }}>\n                {deleteState == loadingStateEnum.notStarted\n                  ? 'DELETE'\n                  : deleteState === loadingStateEnum.loading\n                  ? 'LOADING'\n                  : 'FAILED'}\n              </Text>\n            </Pressable>\n          ) : null}\n        </ScrollView>\n      ) : (\n        <>\n          {loadScheduleState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Pressable\n                onPress={() => {\n                  navigate('/profile/government/calendar/schedule');\n                }}\n                style={{ position: 'absolute', top: 0, left: 0 }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <ProgressView width={width * 0.1} height={height * 0.1} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {deleteState === loadingStateEnum.success ? (\n                <View\n                  style={{\n                    width,\n                    height,\n                    backgroundColor: Colors.white,\n                  }}\n                >\n                  <Pressable\n                    onPress={() => {\n                      navigate('/profile/government/calendar/schedule');\n                    }}\n                  >\n                    <Text>Back</Text>\n                  </Pressable>\n                  <Text>Schedule Deleted</Text>\n                </View>\n              ) : (\n                <View\n                  style={{\n                    width,\n                    height,\n                    backgroundColor: Colors.white,\n                  }}\n                >\n                  <Pressable\n                    onPress={() => {\n                      navigate('/profile/government/calendar/schedule');\n                    }}\n                  >\n                    <Text>Back</Text>\n                  </Pressable>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PeriodBlock({\n  period,\n  periods,\n  onSetNewPeriods,\n}: {\n  period: periodType;\n  periods: periodType[];\n  onSetNewPeriods: (item: periodType[]) => void;\n}) {\n  const [isSelectingStartTime, setIsSelectingStartTime] =\n    useState<boolean>(false);\n  const [isSelectingEndTime, setIsSelectingEndTime] = useState<boolean>(false);\n\n  function deleteItem(period: periodType) {\n    const newNewPeriodsArray: periodType[] = periods;\n    if (newNewPeriodsArray.length === 1) {\n      newNewPeriodsArray.pop();\n      onSetNewPeriods(newNewPeriodsArray);\n    } else {\n      const indexToRemove = newNewPeriodsArray.findIndex(e => {\n        return e.id === period.id;\n      });\n      if (indexToRemove !== -1) {\n        newNewPeriodsArray.splice(indexToRemove, indexToRemove);\n      } else {\n        // TO DO something went wrong this should not be possible though\n      }\n      onSetNewPeriods(newNewPeriodsArray);\n    }\n  }\n  return (\n    <View\n      key={`Period_${period.id}_${createUUID()}`}\n      style={{\n        margin: 10,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n        marginLeft: 5,\n        marginRight: 5,\n      }}\n    >\n      <View style={{ margin: 10 }}>\n        <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n          <Text>\n            {period.startHour}:{period.startMinute}\n          </Text>\n          <Pressable onPress={() => setIsSelectingStartTime(true)}>\n            <Text>Pick start time</Text>\n          </Pressable>\n        </View>\n        <TimePickerModal\n          hours={period.startHour}\n          minutes={period.startMinute}\n          visible={isSelectingStartTime}\n          onDismiss={() => setIsSelectingStartTime(false)}\n          onConfirm={e => {\n            const newPeriods: periodType[] = periods;\n            const update = newPeriods.findIndex(e => {\n              return e.id === period.id;\n            });\n            if (update !== -1) {\n              newPeriods[update].startHour = e.hours;\n              newPeriods[update].startMinute = e.minutes;\n              onSetNewPeriods([...newPeriods]);\n              setIsSelectingStartTime(false);\n              console.log('all good');\n            } else {\n              // TO DO failed\n              console.log('failed');\n              setIsSelectingStartTime(false);\n            }\n          }}\n        />\n        <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n          <Text>\n            {period.endHour}:{period.endMinute}\n          </Text>\n          <Pressable onPress={() => setIsSelectingEndTime(true)}>\n            <Text>Pick end time</Text>\n          </Pressable>\n        </View>\n        <TimePickerModal\n          hours={period.endHour}\n          minutes={period.endMinute}\n          visible={isSelectingEndTime}\n          onDismiss={() => setIsSelectingEndTime(false)}\n          onConfirm={e => {\n            const newPeriods: periodType[] = periods;\n            const update = newPeriods.findIndex(e => {\n              return e.id === period.id;\n            });\n            if (update !== -1) {\n              newPeriods[update].endHour = e.hours;\n              newPeriods[update].endMinute = e.minutes;\n              onSetNewPeriods([...newPeriods]);\n              setIsSelectingEndTime(false);\n            } else {\n              // TO DO failed\n              setIsSelectingEndTime(false);\n            }\n          }}\n        />\n        <Pressable\n          onPress={() => deleteItem(period)}\n          style={{ backgroundColor: 'red', borderRadius: 15 }}\n        >\n          <Text style={{ margin: 10 }}>Remove</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction CustomColorThumb({\n  e,\n  diameter,\n}: {\n  e: RenderThumbProps;\n  diameter?: number;\n}) {\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: e.currentColor.value,\n    };\n  });\n\n  return (\n    <Animated.View\n      style={[\n        {\n          width: diameter || 35,\n          height: diameter || 35,\n          borderRadius: diameter ? diameter / 2 : 20,\n          borderWidth: 2,\n          borderColor: 'white',\n        },\n        animatedStyle,\n        e.positionStyle,\n      ]}\n    />\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, ScrollView, FlatList } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../../../../Redux/store';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum, semesters } from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentClasses() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [classState, setClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [classes, setClasses] = useState<classType[]>([]);\n\n  async function getClasses() {\n    const groupResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/groups',\n    );\n    if (groupResult.ok) {\n      const groupResultData = await groupResult.json();\n      if (groupResultData.value !== undefined) {\n        const outputData: classType[] = [];\n        for (let index = 0; index < groupResultData.value.length; index += 1) {\n          outputData.push({\n            name: groupResultData.value[index].displayName,\n            id: groupResultData.value[index].id,\n            periods: [],\n            room: {\n              name: '',\n              id: '',\n            },\n            schoolYearId: '',\n            semester: semesters.semesterOne,\n          });\n        }\n        setClasses(outputData);\n        setClassState(loadingStateEnum.success);\n      } else {\n        setClassState(loadingStateEnum.failed);\n      }\n    } else {\n      setClassState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getClasses();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View>\n        <Pressable onPress={() => navigate('/profile/government/')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Classes</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.85 }}>\n        <>\n          {classState === loadingStateEnum.loading ? (\n            <View>\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {classState === loadingStateEnum.success ? (\n                <FlatList\n                  data={classes}\n                  renderItem={classMap => (\n                    <Pressable\n                      key={`Class_${classMap.item.id}_${createUUID()}`}\n                      onPress={() => {\n                        navigate(\n                          `/profile/government/classes/edit/${classMap.item.id}`,\n                        );\n                      }}\n                      style={{\n                        backgroundColor: '#FFFFFF',\n                        shadowColor: 'black',\n                        shadowOffset: { width: 1, height: 1 },\n                        shadowOpacity: 1,\n                        shadowRadius: 5,\n                        borderRadius: 15,\n                        margin: 10,\n                      }}\n                    >\n                      <Text style={{ margin: 10 }}>{classMap.item.name}</Text>\n                    </Pressable>\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      </ScrollView>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room');\n        }}\n      >\n        <Text>Rooms</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { orgWideGroupID } from '../../PaulyConfig';\nimport store from '../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getSchoolYears(nextLink?: string): Promise<{\n  result: loadingStateEnum;\n  events?: eventType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20or%20id%20eq%20'${\n        store.getState().paulyList.eventDataExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20and%20ep/value%20eq%20'schoolDay')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newEvents: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      if (data.value[index].singleValueExtendedProperties !== undefined) {\n        const eventData: { id: string; value: string }[] =\n          data.value[index].singleValueExtendedProperties;\n        if (\n          eventData.find(e => {\n            return e.id === eventTypeExtensionID;\n          })?.value === 'schoolYear'\n        ) {\n          newEvents.push({\n            id: data.value[index].id,\n            name: data.value[index].subject,\n            startTime: data.value[index].start.dateTime,\n            endTime: data.value[index].end.dateTime,\n            allDay: data.value[index].isAllDay,\n            eventColor: Colors.white,\n            paulyEventType:\n              eventData.find(e => {\n                return e.id === eventTypeExtensionID;\n              })?.value === 'schoolYear'\n                ? 'schoolYear'\n                : undefined,\n            paulyEventData: eventData.find(e => {\n              return e.id === eventDataExtensionID;\n            })?.value,\n            microsoftEvent: true,\n            microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n          });\n        }\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      events: newEvents,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable, StyleProp, ViewStyle } from 'react-native';\nimport React, { ReactNode, useEffect, useState } from 'react';\n\n// On set selected index returns 0 for the first child that is passed down\n\nexport default function Dropdown({\n  children,\n  onSetSelectedIndex,\n  style,\n  selectedIndex,\n  expandedStyle,\n  options,\n  setExpanded,\n  expanded,\n}: {\n  children: ReactNode;\n  selectedIndex: number;\n  onSetSelectedIndex: (item: number) => void;\n  style?: StyleProp<ViewStyle>;\n  expandedStyle?: StyleProp<ViewStyle>;\n  options?: string[];\n  setExpanded?: (item: boolean) => void;\n  expanded?: boolean;\n}) {\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  useEffect(() => {\n    if (expanded !== undefined) {\n      setIsExpanded(expanded);\n    }\n  }, [expanded]);\n  return (\n    <>\n      {isExpanded ? (\n        <View style={[expandedStyle, { position: 'absolute' }]}>\n          {options ? (\n            <>\n              {options.map((option, index) => (\n                <Pressable\n                  key={`Option_${index}`}\n                  onPress={() => {\n                    onSetSelectedIndex(index);\n                    setIsExpanded(false);\n                    if (setExpanded) {\n                      setExpanded(false);\n                    }\n                  }}\n                >\n                  <Text>{option}</Text>\n                </Pressable>\n              ))}\n            </>\n          ) : (\n            <>\n              {React.Children.map(children, (child, index) => (\n                <Pressable\n                  key={`Option_${index}`}\n                  onPress={() => {\n                    onSetSelectedIndex(index);\n                    setIsExpanded(false);\n                    if (setExpanded) {\n                      setExpanded(true);\n                    }\n                  }}\n                >\n                  <>{child}</>\n                </Pressable>\n              ))}\n            </>\n          )}\n        </View>\n      ) : (\n        <Pressable\n          onPress={() => {\n            setIsExpanded(true);\n            if (setExpanded) {\n              setExpanded(true);\n            }\n          }}\n          style={style}\n        >\n          {options ? (\n            <Text>{options[selectedIndex]}</Text>\n          ) : (\n            <>{children[selectedIndex]}</>\n          )}\n        </Pressable>\n      )}\n    </>\n  );\n}\n","import { View, Text, TextInput, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-native';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum, semesters } from '../../../../types';\nimport getSchoolYears from '../../../../Functions/calendar/getSchoolYears';\nimport SegmentedPicker from '../../../../UI/Pickers/SegmentedPicker';\nimport {\n  getEvent,\n  getTimetable,\n} from '../../../../Functions/calendar/calendarFunctionsGraph';\nimport { CloseIcon, WarningIcon } from '../../../../UI/Icons/Icons';\nimport Dropdown from '../../../../UI/Dropdown';\nimport { getRoom, getRooms } from '../../../../Functions/classesFunctions';\n\nexport default function GovernmentClassesEdit() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [selectedSemester, setSelectedSemester] = useState<semesters>(\n    semesters.semesterOne,\n  );\n\n  const [className, setClassName] = useState<string>('');\n\n  // Rooms States\n  const [roomSearchText, setRoomSearchText] = useState<string>('');\n  const [roomsNextLink, setRoomsNextLink] = useState<string | undefined>(\n    undefined,\n  );\n  const [rooms, setRooms] = useState<roomType[]>([]);\n  const [roomsState, setRoomsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedRoom, setSelectedRoom] = useState<roomType | undefined>(\n    undefined,\n  );\n\n  // School Years State\n  const [schoolYearState, setSchoolYearState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [schoolYearNextLink, setSchoolYearNextLink] = useState<\n    string | undefined\n  >(undefined);\n  const [schoolYears, setSchoolYears] = useState<eventType[]>([]);\n  const [selectedSchoolYear, setSelectedSchoolYear] = useState<\n    eventType | undefined\n  >(undefined);\n\n  const [timetableState, setTimetableState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [selectedTimetable, setSelectedTimetable] = useState<\n    timetableType | undefined\n  >(undefined);\n\n  const [classState, setClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const [updateClassState, setUpdateClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [isShowingClassConfirmMenu, setIsShowingClassConfirmMenu] =\n    useState<boolean>(false);\n\n  const [periods, setPeriods] = useState<number[]>([]);\n\n  async function getClass() {\n    setClassState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}?$select=${\n        store.getState().paulyList.classExtensionId\n      },displayName`,\n    ); // TO DO change to class\n    if (result.ok) {\n      const data = await result.json();\n      const extensionData = data[store.getState().paulyList.classExtensionId];\n      if (extensionData !== undefined) {\n        setClassName(extensionData.className);\n        setSelectedSemester(parseInt(extensionData.semesterId));\n        setPeriods(JSON.parse(extensionData.periodData));\n        const eventResult = await getEvent(extensionData.schoolYearEventId);\n        const roomResult = await getRoom(extensionData.roomId);\n        if (\n          eventResult.result === loadingStateEnum.success &&\n          roomResult.result === loadingStateEnum.success &&\n          eventResult.data !== undefined &&\n          roomResult.data !== undefined\n        ) {\n          setSelectedRoom(roomResult.data);\n          setSelectedSchoolYear(eventResult.data);\n        } else {\n          setClassState(loadingStateEnum.failed);\n        }\n      } else {\n        setClassName(data.displayName);\n      }\n      setClassState(loadingStateEnum.success);\n    } else {\n      setClassState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadRooms() {\n    // TO DO figure out if there will be performance issuses in continually getting next page\n    const result = await getRooms(\n      roomsNextLink,\n      roomSearchText !== '' ? roomSearchText : undefined,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRooms(result.data);\n    }\n    setRoomsState(result.result);\n    setRoomsNextLink(result.nextLink);\n  }\n\n  async function loadSchoolYears() {\n    const result = await getSchoolYears(schoolYearNextLink);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.events !== undefined\n    ) {\n      setSchoolYears(result.events);\n    }\n    setSchoolYearState(result.result);\n    setSchoolYearNextLink(result.nextLink);\n  }\n\n  async function loadTimetable() {\n    if (\n      selectedSchoolYear !== undefined &&\n      selectedSchoolYear.paulyEventData !== undefined\n    ) {\n      setTimetableState(loadingStateEnum.loading);\n      const result = await getTimetable(selectedSchoolYear.paulyEventData);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.timetable !== undefined\n      ) {\n        if (result.timetable.days.length !== periods.length) {\n          const newArray = Array.from(Array(result.timetable.days.length));\n          newArray.fill(0, 0, newArray.length);\n          setPeriods(newArray);\n        }\n        setSelectedTimetable(result.timetable);\n      }\n      setTimetableState(result.result);\n    }\n  }\n\n  useEffect(() => {\n    loadTimetable();\n  }, [selectedSchoolYear]);\n\n  useEffect(() => {\n    getClass();\n  }, []);\n\n  async function updateClass() {\n    if (selectedRoom !== undefined && selectedSchoolYear !== undefined) {\n      setUpdateClassState(loadingStateEnum.loading);\n      const data = {};\n      Object.defineProperty(data, store.getState().paulyList.classExtensionId, {\n        value: {\n          className,\n          schoolYearEventId: selectedSchoolYear.id,\n          semesterId: selectedSemester.toString(),\n          roomId: selectedRoom.id,\n          periodData: JSON.stringify(periods),\n        },\n      });\n\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/groups/${id}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setUpdateClassState(loadingStateEnum.success);\n      } else {\n        setUpdateClassState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  useEffect(() => {\n    loadRooms();\n  }, [roomSearchText]);\n\n  useEffect(() => {\n    loadSchoolYears();\n  }, []);\n\n  return (\n    <>\n      <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n        {classState === loadingStateEnum.loading ? (\n          <View>\n            <Pressable\n              onPress={() => {\n                navigate('/profile/government/classes');\n              }}\n            >\n              <Text>Back</Text>\n            </Pressable>\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <View>\n            {classState === loadingStateEnum.success ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  backgroundColor: Colors.white,\n                }}\n              >\n                <Pressable\n                  onPress={() => {\n                    navigate('/profile/government/classes');\n                  }}\n                >\n                  <Text>Back</Text>\n                </Pressable>\n                <Text>Add Class Data</Text>\n                <View>\n                  <Text>Name:</Text>\n                  <TextInput value={className} onChangeText={setClassName} />\n                </View>\n                <Text>School Years</Text>\n                <View style={{ height: height * 0.3 }}>\n                  {schoolYearState === loadingStateEnum.loading ? (\n                    <Text>Loading</Text>\n                  ) : (\n                    <View>\n                      {schoolYearState === loadingStateEnum.success ? (\n                        <ScrollView style={{ height: height * 0.3 }}>\n                          {schoolYears.map(year => (\n                            <Pressable\n                              onPress={() => {\n                                setSelectedSchoolYear(year);\n                              }}\n                            >\n                              <Text>{year.name}</Text>\n                            </Pressable>\n                          ))}\n                        </ScrollView>\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <View\n                  style={{ height: height * 0.3, marginBottom: height * 0.1 }}\n                >\n                  <Text>Periods</Text>\n                  <Text>{periods.toString()}</Text>\n                  {timetableState === loadingStateEnum.notStarted ? (\n                    <Text>Please pick a school year</Text>\n                  ) : (\n                    <View>\n                      {timetableState === loadingStateEnum.loading ? (\n                        <Text>Loading</Text>\n                      ) : (\n                        <View style={{ zIndex: 100 }}>\n                          {timetableState === loadingStateEnum.success &&\n                          selectedTimetable?.days.length === periods.length ? (\n                            <ScrollView\n                              style={{ height: height * 0.3, zIndex: 100 }}\n                            >\n                              <>\n                                {selectedTimetable.days.map((day, dayIndex) => (\n                                  <DayBlock\n                                    day={day}\n                                    dayIndex={dayIndex}\n                                    periods={periods}\n                                    setPeriods={setPeriods}\n                                    selectedTimetable={selectedTimetable}\n                                  />\n                                ))}\n                              </>\n                            </ScrollView>\n                          ) : (\n                            <Text>Failed</Text>\n                          )}\n                        </View>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <SegmentedPicker\n                  selectedIndex={selectedSemester}\n                  setSelectedIndex={setSelectedSemester}\n                  options={['Semester One', 'Semester Two']}\n                  width={width * 0.85}\n                  height={height * 0.1}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                  {selectedRoom === undefined ? (\n                    <WarningIcon width={12} height={12} outlineColor=\"red\" />\n                  ) : null}\n                  <Text>Select Room</Text>\n                </View>\n                <View style={{ height: height * 0.3 }}>\n                  {roomsState === loadingStateEnum.loading ? (\n                    <Text>Loading</Text>\n                  ) : (\n                    <View>\n                      {roomsState === loadingStateEnum.success ? (\n                        <ScrollView style={{ height: height * 0.3 }}>\n                          {rooms.map(room => (\n                            <Pressable\n                              onPress={() => {\n                                setSelectedRoom(room);\n                              }}\n                            >\n                              <Text>{room.name}</Text>\n                            </Pressable>\n                          ))}\n                        </ScrollView>\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <Pressable\n                  onPress={() => {\n                    setIsShowingClassConfirmMenu(true);\n                  }}\n                >\n                  <Text>Create Class</Text>\n                </Pressable>\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n      {isShowingClassConfirmMenu ? (\n        <View\n          style={{\n            width: width * 0.8,\n            height: height * 0.8,\n            top: height * 0.1,\n            left: width * 0.1,\n            borderRadius: 15,\n            backgroundColor: Colors.white,\n            position: 'absolute',\n            shadowColor: 'black',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              setIsShowingClassConfirmMenu(false);\n            }}\n          >\n            <CloseIcon width={14} height={14} />\n          </Pressable>\n          <Text>Create Class</Text>\n          <Text>Name: {className}</Text>\n          <Text>Room: {selectedRoom?.name}</Text>\n          <Text>School Year: {selectedSchoolYear?.name}</Text>\n          <Text>\n            Semester:{' '}\n            {selectedSemester === semesters.semesterOne ? 'One' : 'Two'}\n          </Text>\n          <Pressable\n            onPress={() => {\n              updateClass();\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {updateClassState === loadingStateEnum.cannotStart\n                ? 'Cannot Update Class'\n                : updateClassState === loadingStateEnum.notStarted\n                ? 'Update Class'\n                : updateClassState === loadingStateEnum.loading\n                ? 'Loading'\n                : updateClassState === loadingStateEnum.success\n                ? 'Updated Class'\n                : 'Failed To Update Class'}\n            </Text>\n          </Pressable>\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nfunction DayBlock({\n  day,\n  periods,\n  dayIndex,\n  setPeriods,\n  selectedTimetable,\n}: {\n  day: schoolDayType;\n  dayIndex: number;\n  periods: number[];\n  setPeriods: (item: number[]) => void;\n  selectedTimetable: timetableType;\n}) {\n  const [selected, setSelected] = useState<boolean>(false);\n  return (\n    <View\n      key={`Day_${day.id}`}\n      style={{ flexDirection: 'row', margin: 10, zIndex: selected ? 200 : 100 }}\n    >\n      <Text>{day.name}</Text>\n      <View>\n        {selectedTimetable?.schedules.length >= 1 &&\n        periods.length >= dayIndex ? (\n          <Dropdown\n            selectedIndex={periods[dayIndex]}\n            onSetSelectedIndex={index => {\n              if (periods.length >= dayIndex) {\n                const newPeriods = periods;\n                newPeriods[dayIndex] = index;\n                setPeriods([...newPeriods]);\n              }\n            }}\n            expanded={selected}\n            setExpanded={e => {\n              setSelected(e);\n            }}\n            style={{ backgroundColor: Colors.white, zIndex: -2 }}\n            expandedStyle={{\n              backgroundColor: 'blue',\n              zIndex: 101,\n              position: 'absolute',\n            }}\n            options={[\n              'unchosen',\n              ...Array.from(selectedTimetable.schedules[0].periods).flatMap(\n                (_item, index) => (index + 1).toString(),\n              ),\n            ]}\n            children=\"\"\n          />\n        ) : (\n          <Text>Something went wrong please reload the page.</Text>\n        )}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput, Button, Switch } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../Functions/ultility/microsoftAssets';\nimport MicrosoftFilePicker from '../../../UI/MicrosoftFilePicker';\nimport store, { RootState } from '../../../Redux/store';\nimport getCurrentPaulyData from '../../../Functions/homepage/getCurrentPaulyData';\nimport { Colors, loadingStateEnum } from '../../../types';\n\nexport default function GovernmentHomePage() {\n  const { paulyDataListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate()\n\n  // Loading States\n  const [loadContentLoadingState, setLoadContentLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [newMessageState, setNewMessageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  // New Data\n  const [newMessageText, setNewMessageText] = useState(\n    store.getState().paulyData.message,\n  );\n  const [newAnimationSpeed, setNewAnnimationSpeed] = useState(\n    store.getState().paulyData.animationSpeed,\n  );\n  const [selectedPowerpoint, setSelectedPowerpoint] = useState<\n    microsoftFileType | undefined\n  >(undefined);\n  const [isAutoUpdatingText, setIsAutoUpdatingText] = useState<boolean>(false);\n\n  async function loadCurrentPaulyData() {\n    await getCurrentPaulyData();\n    setLoadContentLoadingState(loadingStateEnum.success);\n  }\n  async function createShareId(\n    item: microsoftFileType,\n  ): Promise<string | undefined> {\n    const data = {\n      type: 'view',\n      scope: 'organization',\n    };\n    const result = await callMsGraph(\n      `${item.callPath}/createLink`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      return data.shareId;\n    }\n    return undefined;\n  }\n  async function updatePaulyData(key: string, data: string) {\n    const dataOut: any = {};\n    dataOut[key] = data;\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${paulyDataListId}/items/1/fields`,\n      'PATCH',\n      JSON.stringify(dataOut),\n    );\n    if (result.ok) {\n      setNewMessageState(loadingStateEnum.success);\n    } else {\n      setNewMessageState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    const storeText = newMessageText;\n    setTimeout(() => {\n      if (isAutoUpdatingText && newMessageText === storeText) {\n        updatePaulyData('message', newMessageText);\n      }\n    }, 2000);\n  }, [newMessageText]);\n\n  useEffect(() => {\n    loadCurrentPaulyData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate(\"/profile/government\")}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text style={{marginLeft: 'auto', marginRight: 'auto'}}>Home Page</Text>\n      <View>\n        <View style={{ flexDirection: 'row' }}>\n          <TextInput\n            value={newMessageText}\n            onChangeText={e => {\n              setNewMessageText(e);\n            }}\n          />\n        </View>\n        {isAutoUpdatingText ? <View style={{height: 14}}/>: (\n          <Pressable\n            onPress={() => {\n              updatePaulyData('message', newMessageText);\n            }}\n          >\n            <Text>Update Text</Text>\n          </Pressable>\n        )}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Is auto updating text: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isAutoUpdatingText ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={setIsAutoUpdatingText}\n            value={isAutoUpdatingText}\n          />\n        </View>\n      </View>\n      <View style={{ marginBottom: 20 }}>\n        <View>\n          <Text style={{ margin: 5 }}>\n            Select Powerpoint: {selectedPowerpoint?.name}\n          </Text>\n        </View>\n        <MicrosoftFilePicker\n          height={height * 0.6 - 15}\n          width={width}\n          onSelectedFile={selectedFile => {\n            setSelectedPowerpoint(selectedFile);\n          }}\n        />\n      </View>\n      <Pressable\n        onPress={async () => {\n          if (selectedPowerpoint !== undefined) {\n            const shareId = await createShareId(selectedPowerpoint);\n            if (shareId !== undefined) {\n              updatePaulyData('powerpointId', shareId);\n            }\n          }\n        }}\n      >\n        <Text>Save Changes</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import React, { ReactNode, useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { Image, StyleSheet, View, Pressable, Text } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport store, { RootState } from '../Redux/store';\nimport {\n  BookIcon,\n  CalendarIcon,\n  GovernmentIcon,\n  HomeIcon,\n  MedalIcon,\n  PersonIcon,\n  SportsIcon,\n  StudentSearchIcon,\n} from './Icons/Icons';\nimport { expandedModeSlice } from '../Redux/reducers/expandedModeReducer';\nimport { isShowingProfileBlockSlice } from '../Redux/reducers/isShowingProfileBlockReducer';\nimport { Colors } from '../types';\n\nfunction NavBarBlock({\n  des,\n  expandedMode,\n  blockLength,\n  children,\n  text,\n  width,\n  setIsExpandedMode,\n}: {\n  des: string;\n  expandedMode: boolean;\n  blockLength: number;\n  text: string;\n  children: ReactNode;\n  width: number;\n  setIsExpandedMode: () => void;\n}) {\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const navigation = useNavigate();\n  return (\n    <Pressable\n      style={{\n        height: blockLength,\n        width: expandedMode ? width * 2.5 : width,\n        backgroundColor: isHover ? Colors.darkGray : 'transparent',\n        alignItems: 'center',\n      }}\n      onPress={() => {\n        navigation(des);\n      }}\n      onHoverIn={() => {\n        setIsHover(true);\n        setIsExpandedMode();\n      }}\n      onHoverOut={() => {\n        setIsHover(false);\n      }}\n    >\n      <View\n        style={[\n          styles.LinkStyle,\n          {\n            height: blockLength,\n            width: expandedMode ? blockLength * 2.5 : blockLength,\n            margin: 0,\n            position: expandedMode ? 'absolute' : 'relative',\n            left: expandedMode ? (width - blockLength) / 2 : undefined,\n            alignItems: 'center',\n          },\n        ]}\n      >\n        <View\n          id=\"ViewHigh\"\n          style={{\n            width: expandedMode ? blockLength * 2.5 : blockLength,\n            flexDirection: 'row',\n            margin: 'auto',\n            padding: 0,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View\n            style={[\n              {\n                height: blockLength,\n                width: blockLength,\n                position: expandedMode ? 'absolute' : 'relative',\n                left: expandedMode ? 0 : undefined,\n                alignItems: 'center',\n                justifyContent: 'center',\n              },\n            ]}\n          >\n            <>{children}</>\n          </View>\n          {expandedMode ? (\n            <Text\n              style={{\n                position: 'absolute',\n                left: blockLength,\n                color: Colors.white,\n                marginLeft: 8,\n              }}\n            >\n              {text}\n            </Text>\n          ) : null}\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nexport default function NavBarComponent({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const { uri, displayName } = useSelector(\n    (state: RootState) => state.microsoftProfileData,\n  );\n  const expandedMode = useSelector((state: RootState) => state.expandedMode);\n  const [blockLength, setBlockLength] = useState<number>(0);\n  const [iconLength, setIconLength] = useState<number>(0);\n  const navigation = useNavigate();\n  const dispatch = useDispatch();\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n\n  useEffect(() => {\n    // checking to see if the width or the height is going to be the limiting factor.\n    if (width * 0.6 > (height * 0.6) / 8) {\n      setBlockLength((height * 0.6) / 8);\n    } else {\n      setBlockLength(width * 0.6);\n    }\n    if (width * 0.7 > (height * 0.7) / 8) {\n      setIconLength((height * 0.6) / 8);\n    } else {\n      setIconLength(width * 0.5);\n    }\n  }, [width, height]);\n\n  const [fontsLoaded] = useFonts({\n    'Gochi Hand': require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      id=\"Pressable\"\n      onHoverIn={() => {\n        dispatch(expandedModeSlice.actions.setExpandedMode(true));\n      }}\n      onHoverOut={() => {\n        dispatch(expandedModeSlice.actions.setExpandedMode(false));\n      }}\n    >\n      <View\n        id=\"Main\"\n        style={{\n          backgroundColor: Colors.maroon,\n          height,\n          overflow: 'hidden',\n          width: expandedMode ? width * 2.5 : width,\n          alignItems: 'center',\n        }}\n      >\n        <Pressable\n          style={[\n            styles.LinkStyle,\n            {\n              height: blockLength,\n              width: expandedMode ? width * 2.5 : width,\n              margin: 0,\n              marginTop: blockLength * 0.4,\n              marginBottom: blockLength * 0.4,\n            },\n          ]}\n          onPress={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(!expandedMode));\n          }}\n          onHoverIn={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              height: blockLength,\n              position: expandedMode ? 'absolute' : 'relative',\n              left: expandedMode ? (width - blockLength) / 2 : undefined,\n            }}\n            pointerEvents=\"none\"\n          >\n            <View\n              style={{\n                position: expandedMode ? 'absolute' : 'relative',\n                left: expandedMode ? 0 : undefined,\n              }}\n            >\n              <Image\n                source={require('../../assets/images/PaulyLogo.png')}\n                resizeMode=\"contain\"\n                style={{ width: blockLength, height: blockLength }}\n              />\n            </View>\n            {expandedMode ? (\n              <Text\n                style={{\n                  fontFamily: 'Gochi Hand',\n                  color: Colors.white,\n                  position: 'absolute',\n                  top: blockLength * 0.3,\n                  left: blockLength * 0.65,\n                  fontSize: blockLength * 0.7,\n                  textShadowColor: 'rgba(0, 0, 0, 1)',\n                  textShadowOffset: { width: 4, height: 2 },\n                  textShadowRadius: 0,\n                }}\n                selectable={false}\n              >\n                auly\n              </Text>\n            ) : null}\n          </View>\n        </Pressable>\n        <NavBarBlock\n          des=\"/notifications\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Notifications\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <HomeIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/resources\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Resources\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <BookIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/commissions\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Commissions\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <MedalIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/calendar\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Calendar\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <CalendarIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/sports\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Sports\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <Image\n            source={require('../../assets/images/Football.png')}\n            resizeMode=\"contain\"\n            style={{ width: iconLength, height: iconLength }}\n          />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/students\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Students\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <StudentSearchIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        {isGovernmentMode ? (\n          <NavBarBlock\n            des=\"/profile/government\"\n            expandedMode={expandedMode}\n            blockLength={blockLength}\n            text=\"Government\"\n            width={width}\n            setIsExpandedMode={() => {\n              dispatch(expandedModeSlice.actions.setExpandedMode(true));\n            }}\n          >\n            <GovernmentIcon width={iconLength} height={iconLength} />\n          </NavBarBlock>\n        ) : null}\n        <Pressable\n          onHoverIn={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n          onPress={() => {\n            dispatch(\n              isShowingProfileBlockSlice.actions.setIsShowingProfileBlock(\n                !store.getState().isShowingProfileBlock,\n              ),\n            );\n          }}\n          style={[\n            styles.LinkStyle,\n            {\n              height: blockLength,\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              margin: 0,\n              position: 'absolute',\n              left: expandedMode ? (width - blockLength) / 2 : undefined,\n              bottom: height * 0.05,\n            },\n          ]}\n        >\n          <View\n            style={{\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              height: iconLength,\n              position: expandedMode ? 'absolute' : 'relative',\n              left: expandedMode ? 0 : undefined,\n              flexDirection: 'row',\n            }}\n          >\n            {uri !== '' ? (\n              <Image\n                source={{ uri }}\n                style={{\n                  width: iconLength,\n                  height: iconLength,\n                  borderRadius: iconLength / 2,\n                }}\n              />\n            ) : (\n              <PersonIcon width={iconLength} height={iconLength} />\n            )}\n            <View\n              style={{\n                height: iconLength,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                marginLeft: blockLength - iconLength,\n              }}\n            >\n              {expandedMode ? (\n                <Text\n                  adjustsFontSizeToFit\n                  numberOfLines={1}\n                  style={{\n                    color: Colors.white,\n                    marginLeft: 8,\n                    width: blockLength * 2.5,\n                  }}\n                  selectable={false}\n                >\n                  {displayName}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n        </Pressable>\n      </View>\n    </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  LinkStyle: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 'auto',\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../Redux/store';\nimport { Colors } from '../types';\n\nexport default function PageNotFound() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [isBottonHover, setIsButtonHover] = useState<boolean>(false);\n  const navigate = useNavigate();\n  return (\n    <View\n      style={{\n        width,\n        height,\n        backgroundColor: Colors.white,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Text>Page Not Found</Text>\n      <Pressable\n        onPress={() => {\n          navigate('/');\n        }}\n        onHoverIn={() => {\n          setIsButtonHover(true);\n        }}\n        onHoverOut={() => {\n          setIsButtonHover(false);\n        }}\n        style={{\n          height: height * 0.09,\n          width: width * 0.5,\n          borderRadius: 50,\n          backgroundColor: isBottonHover ? Colors.darkGray : Colors.white,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          shadowColor: isBottonHover ? Colors.white : 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginTop: width < height ? width * 0.1 : height * 0.1,\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            color: isBottonHover ? Colors.white : 'black',\n            fontWeight: 'bold',\n          }}\n        >\n          RETURN HOME\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { clientId } from '../../PaulyConfig';\n\nexport const paulyListData = {\n  displayName: 'PaulyList',\n  // \"name\":\"PaulyList\",\n  columns: [\n    {\n      name: 'studentFilesListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'commissionListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'commissionSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'paulyDataListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsApprovedSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetablesListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'resourceListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'dressCodeListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'roomListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'classExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'eventTypeExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'eventDataExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'resourceExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'userExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'noClassListId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const studentFilesData = {\n  displayName: 'StudentFiles',\n  columns: [\n    {\n      name: 'createdTime',\n      text: {},\n    },\n    {\n      name: 'itemId', // This is the item id not drive item id\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selected',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'userId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const commissionsData = {\n  displayName: 'Commissions',\n  columns: [\n    {\n      name: 'startDate',\n      text: {},\n    },\n    {\n      name: 'endDate',\n      text: {},\n    },\n    {\n      name: 'timed',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'points',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'hidden',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'maxNumberOfClaims',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'allowMultipleSubmissions',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'commissionID',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'value',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'coordinateLat',\n      number: {},\n    },\n    {\n      name: 'coordinateLng',\n      number: {},\n    },\n    {\n      name: 'proximity',\n      number: {},\n    },\n    {\n      name: 'qrCodeData',\n      text: { allowMultipleLines: true },\n    },\n    {\n      name: 'postTeamId',\n      text: {},\n    },\n    {\n      name: 'postChannelId',\n      text: {},\n    },\n    {\n      name: 'postId',\n      text: {},\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const commissionsSubmissionsData = {\n  displayName: 'CommissionsSubmissions',\n  columns: [\n    {\n      name: 'userId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submittedTime',\n      required: true,\n      text: {},\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'submissionApproved',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionReviewed',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'commissionId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionData',\n      text: { allowMultipleLines: true },\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const paulyDataData = {\n  displayName: 'PaulyData',\n  columns: [\n    {\n      name: 'animationSpeed',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'message',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'powerpointId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const scheduleData = {\n  displayName: 'Schedule',\n  columns: [\n    {\n      name: 'scheduleId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'scheduleProperName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleDescriptiveName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleColor',\n      text: { maxLength: 9 },\n      required: true,\n    },\n    {\n      name: 'scheduleData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsData = {\n  displayName: 'Sports',\n  columns: [\n    {\n      name: 'sportName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportSvg',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'sportId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsApprovedSubmissionsData = {\n  displayName: 'SportsApprovedSubmissions',\n  columns: [\n    {\n      name: 'fileId',\n      text: {},\n      required: true,\n      indexed: true\n    },\n    {\n      name: 'fileType',\n      number: {},\n      required: true,\n      indexed: true\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'caption',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedSportId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedTeamId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsSubmissionsData = {\n  displayName: 'SportsSubmissions',\n  columns: [\n    {\n      name: 'accepted',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'reviewed',\n      boolean: {},\n      indexed: true,\n      required: true,\n    },\n    {\n      name: 'user',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timeCreated',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'fileId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'fileType',\n      number: {},\n      required: true\n    },\n    {\n      name: 'selectedSportId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n    {\n      name: 'selectedTeamId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const timetablesData = {\n  displayName: 'Timetables',\n  columns: [\n    {\n      name: 'timetableName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetableId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'timetableDataDays',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'timetableDataSchedules',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'timetableDefaultScheduleId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetableDressCodeId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const resourceData = {\n  displayName: 'Resources',\n  columns: [\n    {\n      name: 'resourceGroupId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'resourceConversationId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const dressCodeData = {\n  displayName: 'DressCode',\n  columns: [\n    {\n      name: 'dressCodeId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'dressCodeName',\n      text: {},\n    },\n    {\n      name: 'dressCodeData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'dressCodeIncentivesData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const roomData = {\n  displayName: 'Rooms',\n  columns: [\n    {\n      name: 'roomId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'roomName',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const noClassData = {\n  displayName: 'No Class',\n  columns: [\n    {\n      name: 'classGroupId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'classDate',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\n\n// Extensions\nexport const paulyClassExtensionData = {\n  id: 'paulyClass',\n  description: 'Pauly Class Data',\n  targetTypes: ['Group'],\n  owner: clientId,\n  properties: [\n    {\n      name: 'className', // This property will be optional in the future\n      type: 'String',\n    },\n    {\n      name: 'schoolYearEventId',\n      type: 'String',\n    },\n    {\n      name: 'semesterId',\n      type: 'String',\n    },\n    {\n      name: 'roomId',\n      type: 'String',\n    },\n    {\n      name: 'periodData',\n      type: 'String', // An Array as long as the number of days in the cycle\n    },\n  ],\n};\n\n// Add data array\nexport const addDataArray: addDataType[] = [\n  {\n    data: paulyClassExtensionData,\n    urlOne: 'https://graph.microsoft.com/v1.0/schemaExtensions',\n    id: 'classExtensionId',\n  },\n  {\n    data: studentFilesData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'studentFilesListId',\n  },\n  {\n    data: commissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'commissionListId',\n  },\n  {\n    data: commissionsSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'commissionSubmissionsListId',\n  },\n  {\n    data: scheduleData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'scheduleListId',\n  },\n  {\n    data: sportsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsListId',\n  },\n  {\n    data: sportsApprovedSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsApprovedSubmissionsListId',\n  },\n  {\n    data: sportsSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsSubmissionsListId',\n  },\n  {\n    data: timetablesData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'timetablesListId',\n  },\n  {\n    data: resourceData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'resourceListId',\n  },\n  {\n    data: dressCodeData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'dressCodeListId',\n  },\n  {\n    data: roomData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'roomListId',\n  },\n  {\n    data: noClassData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'noClassListId',\n  },\n];\n","import { loadingStateEnum } from '../../types';\nimport createUUID from '../ultility/createUUID';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport {\n  paulyListData,\n  paulyDataData,\n  addDataArray,\n} from './initializePaulyData';\n\nexport async function initializePaulyPartOne(\n  secondUserId: string,\n): Promise<{ result: loadingStateEnum; groupId?: string }> {\n  const currentUsersIdResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me',\n    'GET',\n  );\n  if (currentUsersIdResult.ok) {\n    const currentUsersIdResultData = await currentUsersIdResult.json();\n    const createGroupData = {\n      description: \"Pauly's Team Containing all it's data\",\n      displayName: 'Pauly',\n      groupTypes: [\n        'Unified',\n        \"DynamicMembership\",\n      ],\n      mailEnabled: true,\n      mailNickname: 'pauly',\n      visibility: 'HiddenMembership',\n      \"membershipRule\": \"(user.accountEnabled -eq true)\",\n      \"membershipRuleProcessingState\": \"on\",\n      'owners@odata.bind': [\n        `https://graph.microsoft.com/v1.0/users/${currentUsersIdResultData.id}`,\n        `https://graph.microsoft.com/v1.0/users/${secondUserId}`,\n      ],\n      securityEnabled: false,\n    };\n    const createGroupResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/groups',\n      'POST',\n      JSON.stringify(createGroupData),\n    );\n    if (createGroupResult.ok) {\n      const createGroupResultData = await createGroupResult.json();\n      return {\n        result: loadingStateEnum.success,\n        groupId: createGroupResultData.id,\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function initializePaulyPartTwo(\n  groupId: string,\n): Promise<loadingStateEnum> {\n  const teamsData = {\n    'template@odata.bind':\n      \"https://graph.microsoft.com/v1.0/teamsTemplates('standard')\",\n    'group@odata.bind': `https://graph.microsoft.com/v1.0/groups('${groupId}')`,\n  };\n  const createTeamResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/teams',\n    'POST',\n    JSON.stringify(teamsData),\n  );\n  if (createTeamResult.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n\nexport async function initializePaulyPartThree(\n  groupId: string,\n  update?: string[],\n): Promise<loadingStateEnum> {\n  const getTeam = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${groupId}`,\n  );\n  if (!getTeam.ok) {\n    return loadingStateEnum.failed;\n  }\n  const getTeamData = await getTeam.json();\n\n  const getRootSiteIdResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${getTeamData.id}/sites/root`,\n  );\n  if (!getRootSiteIdResult.ok) {\n    return loadingStateEnum.failed;\n  }\n  const getRootSiteIdResultData = await getRootSiteIdResult.json();\n\n  const paulyListNewData: { fields: any } = { fields: { Title: 'Main' } };\n\n  // Check if already data\n  let secondRun: boolean = false;\n  const getPaulyListResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items/1?expand=fields`,\n  );\n  if (!getPaulyListResult.ok && getPaulyListResult.status !== 404) {\n    console.log('second run failed');\n    return loadingStateEnum.failed;\n  }\n  const getPaulyListResultData = await getPaulyListResult.json();\n  if (getPaulyListResult.status !== 404) {\n    if (getPaulyListResultData.fields !== undefined) {\n      secondRun = true;\n      if (getPaulyListResultData.fields !== undefined) {\n        if (getPaulyListResultData.fields.paulyDataListId !== undefined) {\n          paulyListNewData.fields.paulyDataListId =\n            getPaulyListResultData.fields.paulyDataListId;\n        }\n      }\n    }\n  }\n\n  // TO DO think about 409 if only half  of list where created and then interuption\n  for (let index = 0; index < addDataArray.length; index += 1) {\n    const callData = addDataArray[index];\n    if (getPaulyListResultData.fields !== undefined) {\n      if (getPaulyListResultData.fields[callData.id] !== undefined) {\n        paulyListNewData.fields[callData.id] =\n          getPaulyListResultData.fields[callData.id];\n      }\n    }\n    if (\n      paulyListNewData.fields[callData.id] === undefined ||\n      update?.includes(callData.id)\n    ) {\n      const result = await callMsGraph(\n        callData.urlTwo !== undefined\n          ? callData.urlOne + getRootSiteIdResultData.id + callData.urlTwo\n          : callData.urlOne,\n        'POST',\n        JSON.stringify(callData.data),\n      );\n      if (!result.ok) {\n        return loadingStateEnum.failed;\n      }\n      const data = await result.json();\n      paulyListNewData.fields[callData.id] = data.id;\n    }\n  }\n  if (getPaulyListResultData.fields !== undefined) {\n    if (getPaulyListResultData.fields.eventTypeExtensionId !== undefined) {\n      paulyListNewData.fields.eventTypeExtensionId =\n        getPaulyListResultData.fields.eventTypeExtensionId;\n    } else {\n      paulyListNewData.fields.eventTypeExtensionId = `String {${createUUID()}} Name eventType`;\n    }\n  } else {\n    paulyListNewData.fields.eventTypeExtensionId = `String {${createUUID()}} Name eventType`;\n  }\n\n  if (getPaulyListResultData.fields !== undefined) {\n    if (getPaulyListResultData.fields.eventDataExtensionId !== undefined) {\n      paulyListNewData.fields.eventDataExtensionId =\n        getPaulyListResultData.fields.eventDataExtensionId;\n    } else {\n      paulyListNewData.fields.eventDataExtensionId = `String {${createUUID()}} Name eventData`;\n    }\n    if (getPaulyListResultData.fields.resourceExtensionId !== undefined) {\n      paulyListNewData.fields.resourceExtensionId =\n        getPaulyListResultData.fields.resourceExtensionId;\n    } else {\n      paulyListNewData.fields.resourceExtensionId = `String {${createUUID()}} Name resourceData`;\n    }\n  } else {\n    paulyListNewData.fields.eventDataExtensionId = `String {${createUUID()}} Name eventData`;\n    paulyListNewData.fields.resourceExtensionId = `String {${createUUID()}} Name resourceData`;\n  }\n\n  if (paulyListNewData.fields.paulyDataListId === undefined) {\n    const paulyDataResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists`,\n      'POST',\n      JSON.stringify(paulyDataData),\n    );\n    if (!paulyDataResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    const paulyDataResultData = await paulyDataResult.json();\n    const paulyDataNewData = {\n      fields: {\n        Title: 'Main',\n        animationSpeed: 10,\n        message: 'Pauly',\n        powerpointId: 'unset',\n      },\n    };\n    const setPaulyDataNewDataResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/${paulyDataResultData.id}/items`,\n      'POST',\n      JSON.stringify(paulyDataNewData),\n    );\n    if (!setPaulyDataNewDataResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    paulyListNewData.fields.paulyDataListId = paulyDataResultData.id;\n  }\n  if (secondRun === false) {\n    const paulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists`,\n      'POST',\n      JSON.stringify(paulyListData),\n    );\n    if (!paulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    const addPaulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items`,\n      'POST',\n      JSON.stringify(paulyListNewData),\n    );\n    if (!addPaulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n  } else {\n    const addPaulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items/1`,\n      'PATCH',\n      JSON.stringify(paulyListNewData),\n    );\n    const ourData = await addPaulyListResult.json();\n    if (!addPaulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n  }\n  return loadingStateEnum.success;\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, TextInput, FlatList } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport {\n  initializePaulyPartOne,\n  initializePaulyPartThree,\n  initializePaulyPartTwo,\n} from '../../../../Functions/initializePauly/initializePauly';\nimport { RootState } from '../../../../Redux/store';\nimport { addDataArray } from '../../../../Functions/initializePauly/initializePaulyData';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\n\nenum initStage {\n  notStarted,\n  partOne,\n  partTwoLoad,\n  partTwo,\n  partThreeLoad,\n  partThree,\n  done,\n}\n\nexport default function GovernmentAdmin() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [selectedUser, setSelectedUser] = useState<\n    microsoftUserType | undefined\n  >(undefined);\n  const [timeLeft, setTimeLeft] = useState<string>('');\n  const [timeElapsed, setTimeElapsed] = useState<string>('Not Started');\n  const [createdGroupId, setCreatedGroupId] = useState<string>('');\n  const [selectedUpdates, setSelectedUpdates] = useState<string[]>([]);\n  const navigate = useNavigate();\n\n  // Start Times\n  const [startTime, setStartTime] = useState<Date>(new Date());\n  const [partOneStartTime, setPartOneStartTime] = useState<Date>(new Date());\n  const [partTwoStartTime, setPartTwoStartTime] = useState<Date>(new Date());\n\n  // Result\n  const [initResult, setInitResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [initTwoResult, setInitTwoResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [initThreeResult, setInitThreeResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [currentInitStage, setCurrentInitStage] = useState<initStage>(\n    initStage.notStarted,\n  );\n\n  async function initializePauly() {\n    if (selectedUser !== undefined) {\n      setStartTime(new Date());\n      setCurrentInitStage(initStage.partOne);\n      setInitResult(loadingStateEnum.loading);\n      const partOneResult = await initializePaulyPartOne(selectedUser.id);\n      if (\n        partOneResult.result === loadingStateEnum.success &&\n        partOneResult.groupId !== undefined\n      ) {\n        setCreatedGroupId(partOneResult.groupId);\n        setCurrentInitStage(initStage.partTwoLoad);\n        setPartOneStartTime(new Date());\n        const partTwoResult = await new Promise<loadingStateEnum>(\n          (resolve, reject) => {\n            setTimeout(async () => {\n              if (partOneResult.groupId !== undefined) {\n                setCurrentInitStage(initStage.partTwo);\n                const secondResult = await initializePaulyPartTwo(\n                  partOneResult.groupId,\n                );\n                resolve(secondResult);\n              } else {\n                setCurrentInitStage(initStage.done);\n                setInitResult(loadingStateEnum.failed);\n                reject();\n              }\n            }, 900000);\n          },\n        );\n        if (partTwoResult === loadingStateEnum.success) {\n          setCurrentInitStage(initStage.partThreeLoad);\n          setPartTwoStartTime(new Date());\n          const partThreeResult = await new Promise<loadingStateEnum>(\n            (resolve, reject) => {\n              setTimeout(async () => {\n                if (partOneResult.groupId !== undefined) {\n                  setCurrentInitStage(initStage.partThree);\n                  const thirdResult = await initializePaulyPartThree(\n                    partOneResult.groupId,\n                  );\n                  resolve(thirdResult);\n                } else {\n                  setCurrentInitStage(initStage.done);\n                  setInitResult(loadingStateEnum.failed);\n                  reject();\n                }\n              }, 900000);\n            },\n          );\n          if (partThreeResult === loadingStateEnum.success) {\n            setInitResult(loadingStateEnum.success);\n            setCurrentInitStage(initStage.done);\n          } else {\n            setCurrentInitStage(initStage.done);\n            setInitResult(loadingStateEnum.failed);\n          }\n        } else {\n          setCurrentInitStage(initStage.done);\n          setInitResult(loadingStateEnum.failed);\n        }\n      } else {\n        setCurrentInitStage(initStage.done);\n        setInitResult(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function initializePaulyFromPartTwo() {\n    if (\n      createdGroupId !== '' &&\n      initTwoResult === loadingStateEnum.notStarted\n    ) {\n      setInitTwoResult(loadingStateEnum.loading);\n      const secondResult = await initializePaulyPartTwo(createdGroupId);\n      if (secondResult === loadingStateEnum.success) {\n        setInitTwoResult(loadingStateEnum.success);\n      } else {\n        setInitTwoResult(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function initializePaulyFromPartThree() {\n    if (\n      createdGroupId !== '' &&\n      initThreeResult === loadingStateEnum.notStarted\n    ) {\n      setStartTime(new Date());\n      setCurrentInitStage(initStage.partThree);\n      setInitThreeResult(loadingStateEnum.loading);\n      const result = await initializePaulyPartThree(\n        createdGroupId,\n        selectedUpdates,\n      );\n      if (result === loadingStateEnum.success) {\n        setInitThreeResult(loadingStateEnum.success);\n        setCurrentInitStage(initStage.done);\n      } else {\n        setInitThreeResult(loadingStateEnum.failed);\n        setCurrentInitStage(initStage.done);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (\n      currentInitStage === initStage.partTwoLoad ||\n      currentInitStage === initStage.partThreeLoad\n    ) {\n      const interval: ReturnType<typeof setInterval> = setInterval(() => {\n        let miliSecondsPassed = new Date().getTime() - startTime.getTime();\n        if (currentInitStage === initStage.partTwoLoad) {\n          miliSecondsPassed = new Date().getTime() - partOneStartTime.getTime();\n        } else if (currentInitStage === initStage.partThreeLoad) {\n          miliSecondsPassed = new Date().getTime() - partTwoStartTime.getTime();\n        }\n\n        const miliSecondsLeft = 900000 - miliSecondsPassed;\n        const totalSecondsLeft = miliSecondsLeft / 1000;\n        let minutesLeft: number = Math.floor(totalSecondsLeft / 60);\n        let secondsLeft: number = Math.ceil(totalSecondsLeft % 60);\n        if (secondsLeft === 60) {\n          minutesLeft += 1;\n          secondsLeft = 0;\n        }\n        let minutesLeftString: string = minutesLeft.toString();\n        let secondsLeftString: string = secondsLeft.toString();\n        if (minutesLeft <= 9) {\n          minutesLeftString = `0${minutesLeftString}`;\n        }\n        if (secondsLeft <= 9) {\n          secondsLeftString = `0${secondsLeft}`;\n        }\n        setTimeLeft(`${minutesLeftString}:${secondsLeftString}`);\n        if (minutesLeft <= -1) {\n          setTimeLeft('0:0');\n          return clearInterval(interval);\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [currentInitStage]);\n\n  useEffect(() => {\n    if (currentInitStage !== initStage.notStarted) {\n      const interval = setInterval(() => {\n        const miliSecondsPast = new Date().getTime() - startTime.getTime();\n\n        const totalSecondsLeft = miliSecondsPast / 1000;\n        const totalMinutesPast: number = Math.floor(totalSecondsLeft / 60);\n        let minutesPast: number = Math.ceil(totalMinutesPast % 60);\n        const hoursPast: number = Math.floor(totalMinutesPast / 60);\n        let secondsPast: number = Math.ceil(totalSecondsLeft % 60);\n        if (secondsPast === 60) {\n          minutesPast += 1;\n          secondsPast = 0;\n        }\n        let hoursLeftString: string = hoursPast.toString();\n        let minutesLeftString: string = minutesPast.toString();\n        let secondsLeftString: string = secondsPast.toString();\n        if (minutesPast <= 9) {\n          minutesLeftString = `0${minutesLeftString}`;\n        }\n        if (secondsPast <= 9) {\n          secondsLeftString = `0${secondsPast}`;\n        }\n        if (hoursPast <= 9) {\n          hoursLeftString = `0${hoursLeftString}`;\n        }\n        setTimeElapsed(\n          `${hoursLeftString}:${minutesLeftString}:${secondsLeftString}`,\n        );\n      }, 1000);\n      if (currentInitStage === initStage.done) {\n        return clearInterval(interval);\n      }\n      return () => clearInterval(interval);\n    }\n  }, [currentInitStage]);\n\n  useEffect(() => {\n    if (\n      createdGroupId !== '' &&\n      (initResult === loadingStateEnum.notStarted ||\n        initResult === loadingStateEnum.cannotStart ||\n        initResult === loadingStateEnum.failed)\n    ) {\n      setInitTwoResult(loadingStateEnum.notStarted);\n      setInitThreeResult(loadingStateEnum.notStarted);\n    }\n  }, [createdGroupId, initResult]);\n\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <View>\n        <Pressable onPress={() => navigate('/profile/government')}>\n          <Text>Back</Text>\n        </Pressable>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <View>\n          <View\n            style={{\n              height: height * 0.25,\n              width: height * 0.1,\n              alignContent: 'center',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partOne ? 'blue' : 'black',\n                borderRadius: 50,\n              }}\n            />\n            <View\n              style={{\n                height: height * 0.025,\n                width: height * 0.05,\n                alignItems: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.025,\n                  width: height * 0.005,\n                  backgroundColor:\n                    currentInitStage === initStage.partTwoLoad\n                      ? 'blue'\n                      : 'black',\n                }}\n              />\n              {currentInitStage === initStage.partTwoLoad ? (\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: height * 0.03,\n                    top: height * 0.01,\n                  }}\n                >\n                  {timeLeft}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partTwo\n                    ? 'blue'\n                    : Colors.black,\n                borderRadius: 50,\n              }}\n            />\n            <View\n              style={{\n                height: height * 0.025,\n                width: height * 0.05,\n                alignItems: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.025,\n                  width: height * 0.005,\n                  backgroundColor:\n                    currentInitStage === initStage.partThreeLoad\n                      ? 'blue'\n                      : Colors.black,\n                }}\n              />\n              {currentInitStage === initStage.partThreeLoad ? (\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: height * 0.03,\n                    top: height * 0.01,\n                  }}\n                >\n                  {timeLeft}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partThree\n                    ? 'blue'\n                    : Colors.black,\n                borderRadius: 50,\n              }}\n            />\n          </View>\n        </View>\n        <View>\n          <UserBlock\n            setSelectedUser={setSelectedUser}\n            setInitResult={setInitResult}\n          />\n          <TextInput\n            value={createdGroupId}\n            onChangeText={setCreatedGroupId}\n            placeholder=\"Group Id\"\n          />\n          <Text>Time Elapsed: {timeElapsed}</Text>\n          <Pressable\n            onPress={() => {\n              if (initResult === loadingStateEnum.notStarted) {\n                initializePauly();\n              }\n            }}\n          >\n            <Text>\n              {initResult === loadingStateEnum.cannotStart\n                ? 'Please Pick a User'\n                : initResult === loadingStateEnum.notStarted\n                ? 'initialize Pauly on New Tenant'\n                : initResult === loadingStateEnum.loading\n                ? `Loading ${timeLeft}`\n                : initResult === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {initTwoResult !== loadingStateEnum.cannotStart ? (\n            <Pressable\n              onPress={() => {\n                initializePaulyFromPartTwo();\n              }}\n            >\n              <Text>\n                {initTwoResult === loadingStateEnum.notStarted\n                  ? 'Start From Part Two'\n                  : initTwoResult === loadingStateEnum.loading\n                  ? 'Loading'\n                  : initTwoResult === loadingStateEnum.success\n                  ? 'Success'\n                  : 'Failed'}\n              </Text>\n            </Pressable>\n          ) : null}\n          {initThreeResult !== loadingStateEnum.cannotStart ? (\n            <View>\n              {addDataArray.map(addData => (\n                <View key={`Add_Data_${addData.id}`}>\n                  {selectedUpdates.includes(addData.id) ? (\n                    <Pressable\n                      style={{\n                        width: width * 0.7,\n                        backgroundColor: Colors.lightGray,\n                      }}\n                      onPress={() => {\n                        const newSelectedUpdates = selectedUpdates;\n                        newSelectedUpdates.filter(e => {\n                          return e !== addData.id;\n                        });\n                        setSelectedUpdates([...newSelectedUpdates]);\n                      }}\n                    >\n                      <View style={{ margin: 5 }}>\n                        <Text>{addData.id}</Text>\n                      </View>\n                    </Pressable>\n                  ) : (\n                    <Pressable\n                      style={{\n                        width: width * 0.7,\n                        backgroundColor: Colors.white,\n                      }}\n                      onPress={() => {\n                        setSelectedUpdates([...selectedUpdates, addData.id]);\n                      }}\n                    >\n                      <View style={{ margin: 5 }}>\n                        <Text>{addData.id}</Text>\n                      </View>\n                    </Pressable>\n                  )}\n                </View>\n              ))}\n              <Pressable\n                onPress={() => {\n                  initializePaulyFromPartThree();\n                }}\n              >\n                <Text>\n                  {initThreeResult === loadingStateEnum.notStarted\n                    ? 'Start From Part Three'\n                    : initThreeResult === loadingStateEnum.loading\n                    ? 'Loading'\n                    : initThreeResult === loadingStateEnum.success\n                    ? 'Success'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n            </View>\n          ) : null}\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction UserBlock({\n  setSelectedUser,\n  setInitResult,\n}: {\n  setSelectedUser: (item: microsoftUserType) => void;\n  setInitResult: (item: loadingStateEnum) => void;\n}) {\n  const [currentUserId, setCurrentUserId] = useState<string>('');\n  const [loadedUsers, setLoadedUsers] = useState<microsoftUserType[]>([]);\n  const [loadUsersResult, setLoadUsersResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [nextLink, setNextLink] = useState<string | undefined>(undefined);\n  const { height } = useSelector((state: RootState) => state.dimentions);\n\n  async function getUserId() {\n    const result = await callMsGraph('https://graph.microsoft.com/v1.0/me');\n    if (result.ok) {\n      const data = await result.json();\n      setCurrentUserId(data.id);\n    }\n  }\n\n  async function getUsers(nextLink?: string) {\n    const result = await callMsGraph(\n      nextLink ||\n        'https://graph.microsoft.com/v1.0/users?$top=10&$select,id,displayName',\n    );\n    if (result.ok) {\n      const data = await result.json();\n      const newUsers: microsoftUserType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        newUsers.push({\n          id: data.value[index].id,\n          displayName: data.value[index].displayName,\n        });\n      }\n      setNextLink(data['@odata.nextLink']);\n      if (nextLink) {\n        setLoadedUsers([...loadedUsers, ...newUsers]);\n      } else {\n        setLoadedUsers(newUsers);\n      }\n      setLoadUsersResult(loadingStateEnum.success);\n    } else {\n      setLoadUsersResult(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getUserId();\n    getUsers();\n  }, []);\n\n  return (\n    <View style={{ height: height * 0.6 }}>\n      {loadUsersResult === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : (\n        <>\n          {loadUsersResult === loadingStateEnum.success ? (\n            <FlatList\n              data={loadedUsers}\n              renderItem={user => (\n                <View key={`User_${user.item.id}`}>\n                  {user.item.id !== currentUserId ? (\n                    <Pressable\n                      onPress={() => {\n                        setSelectedUser(user.item);\n                        setInitResult(loadingStateEnum.notStarted);\n                      }}\n                    >\n                      <View>\n                        <Text>{user.item.displayName}</Text>\n                      </View>\n                    </Pressable>\n                  ) : null}\n                </View>\n              )}\n              onEndReached={() => {\n                if (nextLink !== undefined) {\n                  getUsers(nextLink);\n                }\n              }}\n            />\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { getRooms } from '../../../../Functions/classesFunctions';\n\nexport default function GovernmentRooms() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [roomState, setRoomState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [rooms, setRooms] = useState<roomType[]>([]);\n\n  async function loadData() {\n    const result = await getRooms();\n    setRoomState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRooms(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Rooms</Text>\n      <View>\n        {roomState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {roomState === loadingStateEnum.success ? (\n              <View>\n                {rooms.map(room => (\n                  <View key={`Room_${room.id}`}>\n                    <Text>{room.name}</Text>\n                  </View>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room/create');\n        }}\n      >\n        <Text>Create Room</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput } from 'react-native';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { WarningIcon } from '../../../../UI/Icons/Icons';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID, { getTextState } from '../../../../Functions/ultility/createUUID';\n\nexport default function GovermentRoomsCreate() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [createRoomState, setCreateRoomState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const navigate = useNavigate();\n  const [roomName, setRoomName] = useState<string>('');\n\n  async function createRoom() {\n    if (\n      roomName !== '' &&\n      (createRoomState === loadingStateEnum.notStarted ||\n        createRoomState === loadingStateEnum.failed ||\n        createRoomState === loadingStateEnum.success)\n    ) {\n      setCreateRoomState(loadingStateEnum.loading);\n      const id = createUUID();\n      const items = {\n        fields: {\n          Title: id,\n          roomId: id,\n          roomName,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.roomListId}/items?expand=fields`,\n        'POST',\n        JSON.stringify(items),\n      );\n      if (result.ok) {\n        setCreateRoomState(loadingStateEnum.success);\n      } else {\n        setCreateRoomState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <View\n        style={{\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text>Create Room</Text>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        {roomName === '' ? (\n          <WarningIcon width={14} height={14} outlineColor=\"red\" />\n        ) : null}\n        <TextInput\n          value={roomName}\n          onChangeText={e => {\n            setRoomName(e);\n          }}\n          placeholder=\"Room Name\"\n        />\n      </View>\n      <Pressable\n        onPress={() => {\n          createRoom();\n        }}\n      >\n        <Text>\n          {getTextState(createRoomState, {notStarted: 'Create Room', success: \"Room Created\"})}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Button, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport * as Clipboard from 'expo-clipboard';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { CopyIcon } from '../../../../UI/Icons/Icons';\nimport { RootState } from '../../../../Redux/store';\nimport { Colors } from '../../../../types';\n\nexport default function MicrosoftGraphEditList() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [currentColumns, setCurrentColumns] = useState<listColumnType[]>([]);\n  const { id } = useParams();\n  const [isCoppiedToClipboard, setIsCoppiedToClipboard] =\n    useState<boolean>(false);\n\n  const navigate = useNavigate();\n\n  async function getListItems() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items?expand=fields`,\n    );\n    if (result.ok) {\n      // const data = await result.json();\n    } else {\n    }\n  }\n  async function indexColumn(columnId: string) {\n    const data = {\n      indexed: 'true',\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/columns/${columnId}`,\n      'PATCH',\n      JSON.stringify(data),\n    ); // TO DO fix ids\n    if (result.ok) {\n      const data = await result.json();\n      const newColumnData: listColumnType[] = currentColumns;\n      const index = newColumnData.findIndex(e => {\n        e.id === columnId;\n      });\n      if (index !== -1) {\n        newColumnData[index].indexed = true;\n        setCurrentColumns(newColumnData);\n      } else {\n        // TO DO failed\n      }\n    }\n  }\n  async function getColumns() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/columns`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length !== undefined) {\n        const newCurrentColumns: listColumnType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          newCurrentColumns.push({\n            columnGroup: data.value[index].columnGroup,\n            description: data.value[index].description,\n            displayName: data.value[index].displayName,\n            enforceUniqueValues: data.value[index].enforceUniqueValues,\n            hidden: data.value[index].hidden,\n            id: data.value[index].id,\n            indexed: data.value[index].indexed,\n            name: data.value[index].name,\n            readOnly: data.value[index].readOnly,\n            required: data.value[index].required,\n          });\n        }\n        setCurrentColumns(newCurrentColumns);\n      }\n    } else {\n    }\n  }\n  useEffect(() => {\n    getListItems();\n    getColumns();\n  }, []);\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        width,\n        height,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Pressable onPress={() => navigate('/profile/government/graph/list')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Microsoft Graph Edit List</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>{id}</Text>\n        {isCoppiedToClipboard ? (\n          <Pressable\n            onPress={async () => {\n              await Clipboard.setStringAsync(id);\n            }}\n          >\n            <Text>Copied To Clipboard!</Text>\n          </Pressable>\n        ) : (\n          <Pressable\n            onPress={async () => {\n              await Clipboard.setStringAsync(id);\n              setIsCoppiedToClipboard(true);\n            }}\n          >\n            <CopyIcon width={14} height={14} />\n          </Pressable>\n        )}\n      </View>\n      <View\n        style={{\n          flexDirection: 'row',\n          overflow: 'scroll',\n          height: height * 0.4,\n        }}\n      >\n        {currentColumns.map(item => (\n          <View\n            style={{\n              width: width * 0.3,\n              height: height * 0.4,\n              borderColor: 'black',\n              borderWidth: 2,\n            }}\n          >\n            <Text>{item.displayName}</Text>\n            {item.indexed === false ? (\n              <Button\n                title=\"Index This Propertie\"\n                onPress={() => {\n                  indexColumn(item.id);\n                }}\n              />\n            ) : (\n              <Text>Already Indexed</Text>\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport * as Clipboard from 'expo-clipboard';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { CopyIcon } from '../../../../UI/Icons/Icons';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nexport default function MicrosoftGraphEditGroup() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n\n  const { id } = useParams();\n\n  const [isCoppiedToClipboard, setIsCoppiedToClipboard] =\n    useState<boolean>(false);\n  const [groupLoadingState, setGroupLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const [deleteGroupLoadingState, setDeleteGroupLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function getListItems() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      setGroupLoadingState(loadingStateEnum.success);\n    } else {\n      setGroupLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  async function deleteGroup() {\n    setDeleteGroupLoadingState(loadingStateEnum.loading);\n    const deleteGroupResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}`,\n      'DELETE',\n    );\n    if (deleteGroupResult.ok) {\n      setDeleteGroupLoadingState(loadingStateEnum.success);\n    } else {\n      setDeleteGroupLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getListItems();\n  }, []);\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        height,\n        width,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to=\"/profile/government/graph/group\">\n        <Text>Back</Text>\n      </Link>\n      <Text>MicrosoftGraphEditList</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>{id}</Text>\n        {id !== undefined ? (\n          <>\n            {isCoppiedToClipboard ? (\n              <Pressable\n                onPress={async () => {\n                  await Clipboard.setStringAsync(id);\n                }}\n              >\n                <Text>Copied To Clipboard!</Text>\n              </Pressable>\n            ) : (\n              <Pressable\n                onPress={async () => {\n                  await Clipboard.setStringAsync(id);\n                  setIsCoppiedToClipboard(true);\n                }}\n              >\n                <CopyIcon width={14} height={14} />\n              </Pressable>\n            )}\n          </>\n        ) : null}\n      </View>\n      <Pressable\n        onPress={() => {\n          deleteGroup();\n        }}\n      >\n        <Text>\n          {getTextState(deleteGroupLoadingState, {\n            notStarted: 'Delete Group',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nexport default function MicrosoftGraphEditExtension() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { mode, id } = useParams();\n\n  const [extensionLoadingState, setExtensionLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [deleteExtensionLoadingState, setDeleteExtensionLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const [extensionDescription, setExtensionDescription] = useState<string>('');\n\n  async function getExtension() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/schemaExtensions?$filter=id%20eq%20'${id}'`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length === 1) {\n        setExtensionDescription(data.value[0].description);\n        setExtensionLoadingState(loadingStateEnum.success);\n      } else {\n        setExtensionLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setExtensionLoadingState(loadingStateEnum.failed);\n    }\n  }\n  async function deleteExtension() {\n    if (\n      deleteExtensionLoadingState === loadingStateEnum.notStarted ||\n      deleteExtensionLoadingState === loadingStateEnum.failed\n    ) {\n      setDeleteExtensionLoadingState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/schemaExtensions/${id}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        setDeleteExtensionLoadingState(loadingStateEnum.success);\n      } else {\n        setDeleteExtensionLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        height,\n        width,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to={`/profile/government/graph/${mode}`}>\n        <Text>Back</Text>\n      </Link>\n      <Text>MicrosoftGraphEditExtension</Text>\n      <View />\n      <Pressable\n        onPress={() => {\n          deleteExtension();\n        }}\n      >\n        <Text>\n          {getTextState(deleteExtensionLoadingState, {\n            notStarted: 'Delete Extension',\n            success: 'Successfully Deleted Extension',\n            failed: 'Failed To Delete Extension',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View } from 'react-native';\nimport React from 'react';\nimport { useParams } from 'react-router-native';\nimport MicrosoftGraphEditList from './MicrosoftGraphEditList';\nimport MicrosoftGraphEditGroup from './MicrosoftGraphEditGroup';\nimport MicrosoftGraphEditExtension from './MicrosoftGraphEditExtension';\n\nexport default function MicrosoftGraphEdit() {\n  const { mode } = useParams();\n  return (\n    <View>\n      {mode === 'list' ? <MicrosoftGraphEditList /> : null}\n      {mode === 'group' ? <MicrosoftGraphEditGroup /> : null}\n      {mode === 'extension' ? <MicrosoftGraphEditExtension /> : null}\n    </View>\n  );\n}\n","import { View, Text } from 'react-native'\nimport React from 'react'\nimport { BoldIcon, CenterAlignmentIcon, ItalicIcon, LeftAlignmentIcon, RightAlignmentIcon, StrikeThroughIcon, UnderlineIcon } from '../../../../UI/Icons/Icons'\n\nexport default function TextEditorHeader() {\n  return (\n    <View style={{flexDirection: 'row'}}>\n      <BoldIcon width={14} height={14} style={{margin: 5}}/>\n      <ItalicIcon width={14} height={14} style={{margin: 5}}/>\n      <UnderlineIcon width={14} height={14} style={{margin: 5}}/>\n      <StrikeThroughIcon width={14} height={14} style={{margin: 5}}/>\n      <LeftAlignmentIcon width={14} height={14} style={{margin: 5}}/>\n      <CenterAlignmentIcon width={14} height={14} style={{margin: 5}}/>\n      <RightAlignmentIcon width={14} height={14} style={{margin: 5}}/>\n    </View>\n  )\n}","import { View, Text } from 'react-native'\nimport React, { useEffect, useState } from 'react'\nimport ReactQuill from 'react-quill';\nimport TextEditorHeader from './TextEditorHeader';\n\nexport default function GovernmentResourcesPost() {\n  const [postData, setPostData] = useState<string>(\"\");\n  return (\n    <View>\n      <Text>Government Resources Post</Text>\n      <TextEditorHeader/>\n      \n    </View>\n  )\n}","import { View, Text, Pressable, Switch, ScrollView, FlatList, ListRenderItemInfo, Modal } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport store, { RootState } from '../../../Redux/store';\nimport callMsGraph from '../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum, resourceResponce } from '../../../types';\nimport ProgressView from '../../../UI/ProgressView';\nimport getResource from '../../../Functions/getResources';\nimport GovernmentResourcesPost from './GovernmentResourcesPost/GovernmentResourcesPost';\nimport { getChannels } from '../../../Functions/microsoftGroupsFunctions';\n\ntype resourceGroupType = {\n  name: string;\n  id: string;\n};\n\nfunction ChannelBlock({\n  channel,\n  groupId,\n  onUpdate,\n  selectedGroup\n}: {\n  channel: ListRenderItemInfo<channelType>\n  groupId: string,\n  onUpdate: (item: channelType) => void,\n  selectedGroup: string\n}) {\n  const [isSelected, setIsSelected] = useState<boolean>(\n    channel.item.selected,\n  );\n  const [isLoading, setIsLoading] = useState<boolean>(\n    channel.item.loading,\n  );\n\n  async function addChannel() {\n    const data = {\n      fields: {\n        resourceGroupId: groupId,\n        resourceConversationId: channel.item.id,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.resourceListId}/items`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      onUpdate({\n        ...channel.item, selected: true, loading: false\n      })\n      setIsSelected(true);\n      setIsLoading(false);\n    } else {\n      onUpdate({\n        ...channel.item, loading: false\n      })\n      setIsLoading(false);\n    }\n  }\n\n  async function removeChannel() {\n    const itemResult = await getResource(groupId, channel.item.id);\n    if (\n      itemResult.result === resourceResponce.found &&\n      itemResult.itemId !== undefined\n    ) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.resourceListId}/items/${\n          itemResult.itemId\n        }`,\n        'DELETE',\n      );\n      if (result.ok) {\n        onUpdate({\n          ...channel.item, selected: false, loading: false\n        })\n        setIsSelected(false);\n        setIsLoading(false);\n      } else {\n        onUpdate({\n          ...channel.item, loading: false\n        })\n        setIsLoading(false);\n      }\n    } else {\n      onUpdate({\n        ...channel.item, loading: false\n      })\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <View\n      key={`Team_Channel_${channel.item.id}`}\n      style={{ flexDirection: 'row' }}\n    >\n      {isLoading ? (\n        <ProgressView width={12} height={12} />\n      ) : (\n        <View>\n          {selectedGroup === groupId ? (\n            <Switch\n              trackColor={{ false: '#767577', true: '#81b0ff' }}\n              thumbColor={isSelected ? '#f5dd4b' : '#f4f3f4'}\n              ios_backgroundColor=\"#3e3e3e\"\n              onValueChange={e => {\n                onUpdate({\n                  ...channel.item, loading: true\n                })\n                setIsLoading(true);\n                if (e === true) {\n                  addChannel();\n                } else {\n                  removeChannel();\n                }\n              }}\n              value={isSelected}\n            />\n          ) : (\n            <View\n              style={{\n                height: 12,\n                width: 12,\n                borderRadius: 50,\n                backgroundColor: channel.item.selected ? 'green' : 'blue',\n              }}\n            />\n          )}\n        </View>\n      )}\n      <Text>{channel.item.displayName}</Text>\n    </View>\n  );\n}\n\nfunction GroupBlock({\n  group,\n  selectedGroup,\n  setSelectedGroup,\n}: {\n  group: resourceGroupType;\n  selectedGroup: string;\n  setSelectedGroup: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [channels, setChannels] = useState<channelType[]>([]);\n  const [channelState, setChannelState] = useState<loadingStateEnum>(loadingStateEnum.loading);\n\n  async function loadChannels() {\n    const result = await getChannels(group.id);\n    if (result.result === loadingStateEnum.success) {\n      setChannels(result.data);\n      setChannelState(loadingStateEnum.success);\n    } else {\n      setChannelState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadChannels()\n  }, [])\n  return (\n    <Pressable\n      key={`Team_${group.id}`}\n      onPress={() => {\n        setSelectedGroup(group.id);\n      }}\n    >\n      <View\n        style={{\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n          marginLeft: width * 0.03,\n          marginRight: width * 0.03,\n          marginTop: height * 0.02,\n          marginBottom: height * 0.02,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          <Text>{group.name}</Text>\n          <Text>Channels</Text>\n          {channelState === loadingStateEnum.loading ?\n            <View style={{width: width * 0.9, height: height * 0.2, alignContent: 'center', alignItems: 'center', justifyContent: 'center'}}>\n              <ProgressView width={14} height={14}/>\n              <Text>Loading</Text>\n            </View>:\n            <>\n              {channelState === loadingStateEnum.success ?\n                <FlatList \n                  data={channels}\n                  renderItem={(channel) => (\n                    <ChannelBlock key={channel.item.id} channel={channel} groupId={group.id} onUpdate={(item) => {\n                      let newChannels = [...channels];\n                      newChannels[channel.index] = item\n                      setChannels([...newChannels])\n                    }} selectedGroup={selectedGroup}/>\n                  )}\n                />:\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              }\n            </>\n          }\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nexport default function GovernmentResources() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [groups, setGroups] = useState<resourceGroupType[]>([]);\n  const [selectedGroup, setSelectedGroup] = useState<string>('');\n  const [getTeamsState, setGetTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [isShowingEditor, setIsShowingEditor] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  async function getTeams() {\n    const result = await callMsGraph(\n      \"https://graph.microsoft.com/v1.0/groups?$filter=resourceProvisioningOptions/Any(x:x eq 'Team')\",\n    );\n    if (!result.ok) {\n      setGetTeamsState(loadingStateEnum.failed);\n      return;\n    }\n    const data = await result.json();\n    const resultGroups: resourceGroupType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultGroups.push({\n        name: data.value[index].displayName,\n        id: data.value[index].id,\n      });\n    }\n    setGetTeamsState(loadingStateEnum.success);\n    setGroups(resultGroups);\n  }\n\n  useEffect(() => {\n    getTeams();\n  }, []);\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate(\"/profile/government\")}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Government Resources</Text>\n        <Pressable onPress={() => setIsShowingEditor(true)}>\n          <Text>Show</Text>\n        </Pressable>\n        <Modal animationType=\"slide\" visible={isShowingEditor} onRequestClose={() => setIsShowingEditor(false)}>\n          <GovernmentResourcesPost />\n        </Modal>\n      </View>\n      <ScrollView style={{ height: height * 0.9 }}>\n        {getTeamsState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {getTeamsState === loadingStateEnum.success ? (\n              <View>\n                {groups.map((group) => (\n                  <GroupBlock\n                    key={group.id}\n                    group={group}\n                    selectedGroup={selectedGroup}\n                    setSelectedGroup={setSelectedGroup}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n","import { View, Text, Pressable, ViewStyle } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport createUUID from '../Functions/ultility/createUUID';\nimport { Colors } from '../types';\n\nexport default function ListItem({\n  to,\n  title,\n  width,\n  caption,\n  onPress,\n  style,\n}: {\n  title: string;\n  width: number;\n  caption?: string;\n  to?: string;\n  onPress?: () => void;\n  style?: ViewStyle;\n}) {\n  const navigate = useNavigate();\n  return (\n    <Pressable\n      onPress={() => {\n        if (to !== undefined) {\n          navigate(to);\n        }\n        if (onPress !== undefined) {\n          onPress();\n        }\n      }}\n      key={createUUID()}\n      style={[\n        {\n          shadowColor: Colors.black,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n          marginLeft: width * 0.03,\n          marginRight: width * 0.03,\n        },\n        style,\n      ]}\n    >\n      <View style={{ margin: 10 }}>\n        <Text style={{ fontSize: 16 }}>{title}</Text>\n        {caption !== undefined ? (\n          <Text style={{ fontSize: 12 }}>{caption}</Text>\n        ) : null}\n      </View>\n    </Pressable>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getDressCodeData(): Promise<{\n  result: loadingStateEnum;\n  data?: dressCodeType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeName,dressCodeId,dressCodeData)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newDressCodes: dressCodeType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      try {\n        newDressCodes.push({\n          name: data.value[index].fields.dressCodeName,\n          id: data.value[index].fields.dressCodeId,\n          listId: data.value[index].id,\n          dressCodeData: JSON.parse(data.value[index].fields.dressCodeData),\n          dressCodeIncentives: [],\n        });\n      } catch {\n        continue;\n      }\n    }\n    return { result: loadingStateEnum.success, data: newDressCodes };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport ListItem from '../../../../../UI/ListItem';\nimport getDressCodeData from '../../../../../Functions/homepage/getDressCodeData';\n\nexport default function GovernmentDressCode() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [getDressCodeState, setGetDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [dressCodes, setDressCodes] = useState<dressCodeType[]>([]);\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getDressCodeData();\n    setGetDressCodeState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setDressCodes(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government/calendar')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n        Dress Codes\n      </Text>\n      <View>\n        {getDressCodeState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {getDressCodeState === loadingStateEnum.success ? (\n              <View>\n                {dressCodes.map(dressCode => (\n                  <ListItem\n                    key={dressCode.id}\n                    to={`/profile/government/calendar/dresscode/${dressCode.id}`}\n                    title={dressCode.name}\n                    width={width}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate('/profile/government/calendar/dresscode/create')\n        }\n      >\n        <Text>Create Dress Code</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Pressable, View, Text, TextInput } from 'react-native';\nimport React from 'react';\nimport { RootState } from '../../../../../Redux/store';\nimport {\n  CloseIcon,\n  DownIcon,\n  UpIcon,\n  WarningIcon,\n} from '../../../../../UI/Icons/Icons';\n\nexport default function DressCodeBlock({\n  dressCode,\n  index,\n  dressCodeData,\n  setDressCodeData,\n  selectedDressCodeId,\n  setSelectedDressCodeId,\n}: {\n  dressCode: dressCodeDataType;\n  index: number;\n  dressCodeData: dressCodeDataType[];\n  setDressCodeData: (item: dressCodeDataType[]) => void;\n  selectedDressCodeId: string;\n  setSelectedDressCodeId: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <Pressable\n      onPress={() => {\n        setSelectedDressCodeId(dressCode.id);\n      }}\n      style={{\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n        marginLeft: width * 0.03,\n        marginRight: width * 0.03,\n        marginTop: height * 0.02,\n        marginBottom: height * 0.02,\n      }}\n    >\n      <View style={{ margin: 10, flexDirection: 'row' }}>\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            {dressCode.name === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>\n              Name: {selectedDressCodeId === dressCode.id ? '' : dressCode.name}\n            </Text>\n            {selectedDressCodeId === dressCode.id ? (\n              <TextInput\n                placeholder=\"Dress Code Name\"\n                value={dressCode.name}\n                onChangeText={e => {\n                  const newDressCodeData = dressCodeData;\n                  newDressCodeData[index].name = e;\n                  setDressCodeData([...newDressCodeData]);\n                }}\n              />\n            ) : null}\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {dressCode.description === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>\n              Description:{' '}\n              {selectedDressCodeId === dressCode.id\n                ? ''\n                : dressCode.description}\n            </Text>\n            {selectedDressCodeId === dressCode.id ? (\n              <TextInput\n                placeholder=\"Dress Code Description\"\n                value={dressCode.description}\n                onChangeText={e => {\n                  const newDressCodeData = dressCodeData;\n                  newDressCodeData[index].description = e;\n                  setDressCodeData([...newDressCodeData]);\n                }}\n              />\n            ) : null}\n          </View>\n        </View>\n        <View>\n          <UpIcon width={14} height={14} />\n          <DownIcon width={14} height={14} />\n          <CloseIcon width={14} height={14} />\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n","import { View, Text, TextInput, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-native';\nimport store, { RootState } from '../../../../../Redux/store';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport DressCodeBlock from './DressCodeBlock';\nimport { createDressCode } from '../../../../../Functions/calendar/calendarFunctionsGraph';\nimport getDressCode from '../../../../../Functions/homepage/getDressCode';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\n\nexport default function GovernmentDressCodeEdit() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [dressCodeName, setDressCodeName] = useState<string>('');\n  const [dressCodeData, setDressCodeData] = useState<dressCodeDataType[]>([\n    { name: '', description: '', id: createUUID() },\n  ]);\n  const [selectedDressCodeId, setSelectedDressCodeId] = useState<string>('');\n  const [dressCodeListId, setDressCodeListId] = useState<string>('');\n\n  const [createDressCodeState, setCreateDressCodeState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const navigate = useNavigate();\n\n  async function loadCreateDressCode() {\n    const result = await createDressCode(dressCodeName, dressCodeData);\n    setCreateDressCodeState(result);\n  }\n\n  const { id } = useParams();\n\n  const [getDressCodeState, setDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [isCreatingDressCode, setIsCreatingDressCode] =\n    useState<boolean>(false);\n  const [deleteDressCodeState, setDeleteDressCodeState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function deleteDressCode() {\n    setDeleteDressCodeState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.dressCodeListId\n      }/items/${dressCodeListId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n      setDeleteDressCodeState(loadingStateEnum.success);\n    } else {\n      setDeleteDressCodeState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadData() {\n    if (id !== undefined && id !== 'create') {\n      const result = await getDressCode(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setDressCodeListId(result.data.listId);\n        setDressCodeName(result.data.name);\n        setDressCodeData(result.data.dressCodeData);\n        setIsCreatingDressCode(false);\n        setDressCodeState(loadingStateEnum.success);\n      } else {\n        setDressCodeState(loadingStateEnum.failed);\n      }\n    } else if (id === 'create') {\n      setIsCreatingDressCode(true);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, [id]);\n\n  return (\n    <>\n      {isCreatingDressCode || getDressCodeState === loadingStateEnum.success ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() => navigate('/profile/government/calendar/dresscode')}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <Text>Create Dress Code</Text>\n          <Text>Dress Code Name:</Text>\n          <TextInput\n            value={dressCodeName}\n            onChangeText={setDressCodeName}\n            placeholder=\"Dress Code Name\"\n          />\n          <ScrollView style={{ height: height * 0.7 }}>\n            {dressCodeData.map((dressCode, index) => (\n              <DressCodeBlock\n                dressCode={dressCode}\n                dressCodeData={dressCodeData}\n                index={index}\n                setDressCodeData={setDressCodeData}\n                selectedDressCodeId={selectedDressCodeId}\n                setSelectedDressCodeId={setSelectedDressCodeId}\n              />\n            ))}\n          </ScrollView>\n          <Pressable\n            onPress={() => {\n              setDressCodeData([\n                ...dressCodeData,\n                { name: '', description: '', id: createUUID() },\n              ]);\n            }}\n          >\n            <Text>Add</Text>\n          </Pressable>\n          <Pressable onPress={() => loadCreateDressCode()}>\n            <Text>\n              {createDressCodeState === loadingStateEnum.notStarted\n                ? 'Create Dress Code'\n                : createDressCodeState === loadingStateEnum.loading\n                ? 'Loading'\n                : createDressCodeState === loadingStateEnum.success\n                ? 'Created Dress Code'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {!isCreatingDressCode ? (\n            <Pressable style={{ margin: 10 }} onPress={() => deleteDressCode()}>\n              <Text>\n                {deleteDressCodeState === loadingStateEnum.notStarted\n                  ? 'Delete'\n                  : deleteDressCodeState === loadingStateEnum.loading\n                  ? 'Loading'\n                  : deleteDressCodeState === loadingStateEnum.success\n                  ? 'Success'\n                  : 'Failed'}\n              </Text>\n            </Pressable>\n          ) : null}\n        </View>\n      ) : (\n        <>\n          {getDressCodeState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Pressable\n                onPress={() =>\n                  navigate('/profile/government/calendar/dresscode')\n                }\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              <Pressable\n                onPress={() =>\n                  navigate('/profile/government/calendar/dresscode')\n                }\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import {\n  View,\n  Text,\n  TextInput,\n  Button,\n  Pressable,\n  ScrollView,\n} from 'react-native';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport { DownIcon, UpIcon, WarningIcon } from '../../../../../UI/Icons/Icons';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport { RootState } from '../../../../../Redux/store';\nimport getDressCodeData from '../../../../../Functions/homepage/getDressCodeData';\nimport ListItem from '../../../../../UI/ListItem';\nimport { getSchedules } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\n// TO DO longest amount of school days is 20 make sure this is enforced\nexport default function GovernmentTimetableEdit() {\n  const { timetablesListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n\n  // Loading States\n  const [dressCodeState, setDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [createTimetableLoadingState, setCreateTimetableLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  // New Table Data\n  const [timetableName, setTimetableName] = useState<string>('');\n  const [selectedSchedules, setSelectedSchedules] = useState<scheduleType[]>(\n    [],\n  );\n  const [dressCodes, setDressCodes] = useState<dressCodeType[]>([]);\n  const [selectedDressCode, setSelectedDressCode] = useState<\n    dressCodeType | undefined\n  >(undefined);\n  const [schoolDays, setSchoolDays] = useState<schoolDayType[]>([]);\n  const [selectedDefaultSchedule, setSelectedDefaultSchedule] = useState<\n    scheduleType | undefined\n  >(undefined);\n\n  async function createTimetable() {\n    if (\n      selectedDefaultSchedule !== undefined &&\n      selectedDressCode !== undefined\n    ) {\n      // Check to make sure all have the same number of periods\n      for (let index = 0; index < selectedSchedules.length; index += 1) {\n        if (\n          selectedSchedules[index].periods.length !==\n          selectedDefaultSchedule.periods.length\n        ) {\n          setCreateTimetableLoadingState(loadingStateEnum.failed);\n          return;\n        }\n      }\n\n      // Create Timetable\n      setCreateTimetableLoadingState(loadingStateEnum.loading);\n      const scheduals = [];\n      for (let index = 0; index < selectedSchedules.length; index += 1) {\n        scheduals.push(selectedSchedules[index].id);\n      }\n      const data = {\n        fields: {\n          Title: timetableName,\n          timetableName,\n          timetableId: createUUID(),\n          timetableDataSchedules: JSON.stringify(scheduals),\n          timetableDataDays: JSON.stringify(schoolDays),\n          timetableDefaultScheduleId: selectedDefaultSchedule.id,\n          timetableDressCodeId: selectedDressCode.id,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${timetablesListId}/items?expand=fields`,\n        'POST',\n        JSON.stringify(data),\n      ); // TO DO fix site id\n      if (result.ok) {\n        setCreateTimetableLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTimetableLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function getDressCodes() {\n    const result = await getDressCodeData();\n    setDressCodeState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setDressCodes(result.data);\n    }\n  }\n\n  useEffect(() => {\n    getDressCodes();\n  }, []);\n  return (\n    <View\n      style={{\n        height,\n        width,\n        overflow: 'scroll',\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to=\"/profile/government/calendar/timetable/\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Create Timetable</Text>\n      <View style={{ backgroundColor: '#FF6700', borderRadius: 15, margin: 5 }}>\n        <View style={{ margin: 10 }}>\n          <Text>\n            Warning: because of the way that timetables work some properties\n            cannot be edited.\n          </Text>\n          <Text>The dress code you pick cannot change</Text>\n          <Text>\n            Schedules can be added but they have to have the same number of\n            periods\n          </Text>\n          <Text>\n            The number of days in a schedule cannot go up or down only the order\n            and the name can be changed\n          </Text>\n        </View>\n      </View>\n      <View>\n        <TextInput\n          value={timetableName}\n          onChangeText={e => {\n            setTimetableName(e);\n          }}\n          placeholder=\"Timetable Name\"\n        />\n      </View>\n      <ScheduleBlock\n        selectedSchedules={selectedSchedules}\n        setSelectedSchedules={setSelectedSchedules}\n        selectedDefaultSchedule={selectedDefaultSchedule}\n        setSelectedDefaultSchedule={setSelectedDefaultSchedule}\n      />\n      <SchoolDays\n        height={height}\n        schoolDays={schoolDays}\n        setSchoolDays={setSchoolDays}\n      />\n      <Text>Dress Codes</Text>\n      <View>\n        {dressCodeState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {dressCodeState === loadingStateEnum.success ? (\n              <View>\n                {dressCodes.map(dressCode => (\n                  <ListItem\n                    title={dressCode.name}\n                    width={width * 0.8}\n                    onPress={() => {\n                      setSelectedDressCode(dressCode);\n                    }}\n                    style={{\n                      backgroundColor:\n                        selectedDressCode?.id === dressCode.id\n                          ? 'blue'\n                          : Colors.white,\n                    }}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Button\n        title={\n          createTimetableLoadingState === loadingStateEnum.notStarted\n            ? 'Create Timetable'\n            : createTimetableLoadingState === loadingStateEnum.loading\n            ? 'Loading'\n            : createTimetableLoadingState === loadingStateEnum.success\n            ? 'Success'\n            : 'Failed'\n        }\n        onPress={() => {\n          if (createTimetableLoadingState === loadingStateEnum.notStarted) {\n            createTimetable();\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nfunction SchoolDays({\n  height,\n  schoolDays,\n  setSchoolDays,\n}: {\n  height: number;\n  schoolDays: schoolDayType[];\n  setSchoolDays: (item: schoolDayType[]) => void;\n}) {\n  return (\n    <View>\n      <Text>School Days</Text>\n      <ScrollView style={{ height: height * 0.2 }}>\n        {schoolDays.map((item, index) => (\n          <SchoolDayItem\n            item={item}\n            index={index}\n            schoolDays={schoolDays}\n            setSchoolDays={setSchoolDays}\n          />\n        ))}\n      </ScrollView>\n      <Button\n        title=\"Add\"\n        onPress={() => {\n          setSchoolDays([\n            ...schoolDays,\n            {\n              name: '',\n              shorthand: '',\n              id: createUUID(),\n              order:\n                schoolDays.length === 0\n                  ? 0\n                  : schoolDays[schoolDays.length - 1].order + 1,\n            },\n          ]);\n        }}\n      />\n    </View>\n  );\n}\n\nfunction SchoolDayItem({\n  item,\n  index,\n  schoolDays,\n  setSchoolDays,\n}: {\n  item: schoolDayType;\n  index: number;\n  schoolDays: schoolDayType[];\n  setSchoolDays: (item: schoolDayType[]) => void;\n}) {\n  const [selected, setSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      style={{ flexDirection: 'row' }}\n      onHoverIn={() => {\n        setSelected(true);\n      }}\n      onHoverOut={() => {\n        setSelected(false);\n      }}\n    >\n      <View style={{ margin: 10, flexDirection: 'row' }}>\n        <View style={{ marginRight: 'auto' }}>\n          <View style={{ flexDirection: 'row' }}>\n            {item.name === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>Name: </Text>\n            {selected ? (\n              <TextInput\n                value={item.name}\n                onChangeText={e => {\n                  const newSchoolDays = schoolDays;\n                  newSchoolDays[index].name = e;\n                  setSchoolDays([...newSchoolDays]);\n                }}\n              />\n            ) : (\n              <Text>{item.name}</Text>\n            )}\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {item.shorthand === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>Shorthand: </Text>\n            {selected ? (\n              <TextInput\n                maxLength={1}\n                value={item.shorthand}\n                onChangeText={e => {\n                  const newSchoolDays = schoolDays;\n                  newSchoolDays[index].shorthand = e;\n                  setSchoolDays([...newSchoolDays]);\n                }}\n              />\n            ) : (\n              <Text>{item.shorthand}</Text>\n            )}\n          </View>\n        </View>\n        <View>\n          {item.order !== 0 ? (\n            <Pressable\n              onPress={() => {\n                const newSchoolDays = schoolDays;\n                newSchoolDays[index].order = newSchoolDays[index].order - 1;\n                newSchoolDays[index - 1].order =\n                  newSchoolDays[index - 1].order + 1;\n                const saveCurrent = newSchoolDays[index];\n                newSchoolDays[index] = newSchoolDays[index - 1];\n                newSchoolDays[index - 1] = saveCurrent;\n                setSchoolDays([...newSchoolDays]);\n              }}\n            >\n              <UpIcon width={10} height={10} />\n            </Pressable>\n          ) : null}\n          {item.order + 1 < schoolDays.length ? (\n            <Pressable\n              onPress={() => {\n                const newSchoolDays = schoolDays;\n                newSchoolDays[index].order = newSchoolDays[index].order + 1;\n                newSchoolDays[index + 1].order =\n                  newSchoolDays[index + 1].order - 1;\n                const saveCurrent = newSchoolDays[index];\n                newSchoolDays[index] = newSchoolDays[index + 1];\n                newSchoolDays[index + 1] = saveCurrent;\n                setSchoolDays([...newSchoolDays]);\n              }}\n            >\n              <DownIcon width={10} height={10} />\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => {\n              const newSchoolDays = schoolDays;\n              newSchoolDays.splice(index, 1);\n              setSchoolDays([...newSchoolDays]);\n            }}\n          >\n            <Text>X</Text>\n          </Pressable>\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nfunction ScheduleBlock({\n  selectedSchedules,\n  setSelectedSchedules,\n  selectedDefaultSchedule,\n  setSelectedDefaultSchedule,\n}: {\n  selectedSchedules: scheduleType[];\n  setSelectedSchedules: (item: scheduleType[]) => void;\n  selectedDefaultSchedule: scheduleType | undefined;\n  setSelectedDefaultSchedule: (item: scheduleType) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [loadedSchedules, setLoadedSchedules] = useState<scheduleType[]>([]);\n  const [scheduleState, setScheduleState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  async function loadSchedules() {\n    const result = await getSchedules();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setLoadedSchedules(result.data);\n    }\n    setScheduleState(result.result);\n  }\n  useEffect(() => {\n    loadSchedules();\n  }, []);\n  return (\n    <View>\n      <Text>Scheduals</Text>\n      <Text>Selected Schedules</Text>\n      <ScrollView style={{ height: height * 0.4 }}>\n        {selectedSchedules.map(item => (\n          <View\n            style={{ height: height * 0.03 + 16 }}\n            key={`SelectedSchedule_${item.id}`}\n          >\n            <Text>{item.properName}</Text>\n            {selectedDefaultSchedule?.id !== item.id ? (\n              <Pressable\n                onPress={() => {\n                  setSelectedDefaultSchedule(item);\n                }}\n                style={{ backgroundColor: 'blue', height: 16 }}\n              >\n                <Text>Select As Default</Text>\n              </Pressable>\n            ) : null}\n          </View>\n        ))}\n      </ScrollView>\n      <View style={{ alignItems: 'center' }}>\n        <Text>Other Schedules</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.4 }}>\n        {scheduleState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : null}\n        {scheduleState === loadingStateEnum.failed ? <Text>Failed</Text> : null}\n        {scheduleState === loadingStateEnum.success ? (\n          <>\n            {loadedSchedules.map((item, index) => (\n              <>\n                {selectedSchedules.length <= 0 ? (\n                  <Pressable\n                    key={`Timetable_${item.id}_${createUUID()}`}\n                    onPress={() => {\n                      setSelectedSchedules([...selectedSchedules, item]);\n                      const newLoadedSchedules = loadedSchedules.filter(e => {\n                        return e.id !== item.id;\n                      });\n                      setLoadedSchedules([...newLoadedSchedules]);\n                      if (selectedDefaultSchedule === undefined) {\n                        setSelectedDefaultSchedule(item);\n                      }\n                    }}\n                  >\n                    <Text>{item.properName}</Text>\n                  </Pressable>\n                ) : (\n                  <>\n                    {selectedSchedules[0].periods.length ===\n                    item.periods.length ? (\n                      <Pressable\n                        key={`Timetable_${item.id}_${createUUID()}`}\n                        onPress={() => {\n                          setSelectedSchedules([...selectedSchedules, item]);\n                          const newLoadedSchedules = loadedSchedules.filter(\n                            e => {\n                              return e.id !== item.id;\n                            },\n                          );\n                          setLoadedSchedules([...newLoadedSchedules]);\n                          if (selectedDefaultSchedule === undefined) {\n                            setSelectedDefaultSchedule(item);\n                          }\n                        }}\n                      >\n                        <Text>{item.properName}</Text>\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              </>\n            ))}\n          </>\n        ) : null}\n      </ScrollView>\n    </View>\n  );\n}\n","import { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { useMsal } from '@azure/msal-react';\nimport {\n  revokeAsync,\n  DiscoveryDocument,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport React from 'react';\nimport { Text, Platform, Pressable } from 'react-native';\nimport store from '../../Redux/store';\nimport { authenticationTokenSlice } from '../../Redux/reducers/authenticationTokenReducer';\nimport { tenantId } from '../../PaulyConfig';\nimport { Colors } from '../../types';\n\nexport default function ProfileBlock() {\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => signOut()}\n      style={{\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        margin: 5,\n        borderRadius: 15,\n      }}\n    >\n      <Text numberOfLines={1} style={{ fontSize: 20, margin: 10 }}>\n        Sign Out\n      </Text>\n    </Pressable>\n  );\n}\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n","import { loadingStateEnum } from '../types';\nimport { studentSearchSlice } from '../Redux/reducers/studentSearchReducer';\nimport store from '../Redux/store';\nimport largeBatch from './ultility/batchRequest';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { domainName } from '../PaulyConfig';\n\nfunction checkIfStudent(role: string): {\n  result: boolean;\n  grade?: '9' | '10' | '11' | '12';\n} {\n  if (role.length >= 20) {\n    const reversed = role.split('').reverse().join('');\n    const slice = reversed.slice(0, domainName.length);\n    if (slice === domainName.split('').reverse().join('')) {\n      const getMonth = new Date().getMonth();\n      let schoolYear = new Date().getFullYear();\n      if (schoolYear.toString().length >= 4) {\n        if (getMonth > 6) {\n          schoolYear += 1;\n        }\n        const reverseYearTwelve = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearEleven = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearTen = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearNine = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        if (reversed.slice(16, 17) === reverseYearTwelve) {\n          return { result: true, grade: '12' };\n        }\n        if (reversed.slice(16, 17) === reverseYearEleven) {\n          return { result: true, grade: '11' };\n        }\n        if (reversed.slice(16, 17) === reverseYearTen) {\n          return { result: true, grade: '10' };\n        }\n        if (reversed.slice(16, 17) === reverseYearNine) {\n          return { result: true, grade: '9' };\n        }\n        return { result: false };\n      }\n      return { result: false };\n    }\n    return { result: false };\n  }\n  return { result: false };\n}\n\nexport async function getUsers(url?: string, search?: string) {\n  const filter = search ? `&$search=\"displayName:${search}\"` : '';\n\n  const result = await callMsGraph(\n    url ||\n      `https://graph.microsoft.com/v1.0/users?$select=displayName,id,mail${filter}`,\n    'GET',\n    undefined,\n    search ? [{ key: 'ConsistencyLevel', value: 'eventual' }] : undefined,\n  );\n  if (result.ok) {\n    // Getting user Ids from result\n    const data = await result.json();\n    const userIds: string[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      userIds.push(data.value[index].id);\n    }\n\n    // Getting selected user images from student files list in a batch request.\n    const batchResult = await largeBatch(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.studentFilesListId\n      }/items?$expand=fields&$filter=fields/userId%20eq%20'`,\n      secondUrl: \"'%20and%20fields/selected%20eq%20true\",\n      method: 'GET',\n      keys: { array: userIds },\n    });\n    const imagesIdsMap = new Map<string, string>(); // Key is userId, value is image data id\n    const imageIdsArray: string[] = [];\n    if (\n      batchResult.result === loadingStateEnum.success &&\n      batchResult.data !== undefined\n    ) {\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResult.data.length;\n        batchIndex += 1\n      ) {\n        if (batchResult.data[batchIndex].status === 200) {\n          // TO DO OK\n          if (batchResult.data[batchIndex].body.value.length === 1) {\n            // Checking to make suare only one item is selected\n            imagesIdsMap.set(\n              batchResult.data[batchIndex].body.value[0].fields.userId,\n              batchResult.data[batchIndex].body.value[0].fields.itemId,\n            );\n            imageIdsArray.push(\n              batchResult.data[batchIndex].body.value[0].fields.itemId,\n            );\n          }\n        } else {\n          // Batch Response Failed\n          store.dispatch(\n            studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n          );\n          return;\n        }\n      }\n    } else {\n      // Batch Failed\n      store.dispatch(\n        studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n      );\n      return;\n    }\n\n    // Getting downloadUrls for images\n    const batchResultDownloadUrls = await largeBatch(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/drive/items/`,\n      secondUrl: '?$expand=thumbnails($select=c300x400_crop)&$select=id', // ?select=id,content.downloadUrl\n      method: 'GET',\n      keys: { array: imageIdsArray },\n    });\n    const imagesDownloadUrls = new Map<string, string>(); // Key is the item id on the sharepoint and value is the downlad url\n    if (\n      batchResultDownloadUrls.result === loadingStateEnum.success &&\n      batchResultDownloadUrls.data !== undefined\n    ) {\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultDownloadUrls.data.length;\n        batchIndex += 1\n      ) {\n        if (batchResultDownloadUrls.data[batchIndex].status === 200) {\n          // TO DO OK\n          imagesDownloadUrls.set(\n            batchResultDownloadUrls.data[batchIndex].body.id,\n            batchResultDownloadUrls.data[batchIndex].body.thumbnails[0]\n              .c300x400_crop.url,\n          );\n        } else {\n          // Get Image failed\n          store.dispatch(\n            studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n          );\n          return;\n        }\n      }\n    } else {\n      // Getting images batch failed\n      store.dispatch(\n        studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n      );\n      return;\n    }\n\n    const outputUsers: schoolUserType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const imageId = imagesIdsMap.get(data.value[index].id);\n      if (imageId !== undefined) {\n        const imageDownloadUrl = imagesDownloadUrls.get(imageId);\n        if (imageDownloadUrl !== undefined) {\n          outputUsers.push({\n            name: data.value[index].displayName,\n            id: data.value[index].id,\n            mail: data.value[index].mail,\n            role: data.value[index].mail,\n            grade: checkIfStudent(data.value[index].mail).grade,\n            student: checkIfStudent(data.value[index].mail).result,\n            imageDownloadUrl,\n            imageState: loadingStateEnum.notStarted,\n          });\n        } else {\n          outputUsers.push({\n            name: data.value[index].displayName,\n            id: data.value[index].id,\n            mail: data.value[index].mail,\n            role: data.value[index].mail,\n            grade: checkIfStudent(data.value[index].mail).grade,\n            student: checkIfStudent(data.value[index].mail).result,\n            imageDownloadUrl: 'noImage',\n            imageState: loadingStateEnum.cannotStart,\n          });\n        }\n      } else {\n        outputUsers.push({\n          name: data.value[index].displayName,\n          id: data.value[index].id,\n          mail: data.value[index].mail,\n          role: data.value[index].mail,\n          grade: checkIfStudent(data.value[index].mail).grade,\n          student: checkIfStudent(data.value[index].mail).result,\n          imageDownloadUrl: 'noImage',\n          imageState: loadingStateEnum.cannotStart,\n        });\n      }\n    }\n    store.dispatch(studentSearchSlice.actions.setStudentUsers(outputUsers));\n    store.dispatch(\n      studentSearchSlice.actions.setNextLink(data['@odata.nextLink']),\n    );\n    store.dispatch(\n      studentSearchSlice.actions.setUsersState(loadingStateEnum.success),\n    );\n  } else {\n    // Getting users failed\n    store.dispatch(\n      studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n    );\n  }\n}\n\nexport async function getStudentData(\n  userId: string,\n): Promise<{ result: loadingStateEnum; data?: studentInformationType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items?$expand=fields&$filter=fields/userId%20eq%20'${userId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultData: studentInformationType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultData.push({\n        listId: data.value[index].fields.id,\n        driveId: data.value[index].fields.itemId,\n        selected: data.value[index].fields.selected,\n        createdTime: data.value[index].fields.createdTime,\n      });\n    }\n    return { result: loadingStateEnum.success, data: resultData };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function changeStudentSelection(\n  listItemId: string,\n  selectedFileListId: string,\n  fileData: studentInformationType[],\n  fileIndex: number,\n): Promise<{ result: loadingStateEnum; fileData?: studentInformationType[] }> {\n  if (selectedFileListId !== '') {\n    const unselectedIndex = fileData.findIndex(e => {\n      return e.listId === selectedFileListId;\n    });\n    if (unselectedIndex !== -1) {\n      const newFileData = fileData;\n      newFileData[fileIndex].selected = false;\n      const unselectListData = {\n        fields: {\n          selected: false,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.studentFilesListId\n        }/items/${selectedFileListId}`,\n        'PATCH',\n        JSON.stringify(unselectListData),\n      );\n      if (result.ok) {\n        const selectListData = {\n          fields: {\n            selected: true,\n          },\n        };\n        const secondResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${\n            store.getState().paulyList.siteId\n          }/lists/${\n            store.getState().paulyList.studentFilesListId\n          }/items/${listItemId}`,\n          'PATCH',\n          JSON.stringify(selectListData),\n        );\n        if (secondResult.ok) {\n          newFileData[fileIndex].selected = true;\n          return { result: loadingStateEnum.success, fileData: newFileData };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed, fileData: [...newFileData] };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  const selectListData = {\n    fields: {\n      selected: true,\n    },\n  };\n  const secondResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items/${listItemId}`,\n    'PATCH',\n    JSON.stringify(selectListData),\n  );\n  if (secondResult.ok) {\n    const newFileData = fileData;\n    newFileData[fileIndex].selected = true;\n    return { result: loadingStateEnum.success, fileData: [...newFileData] };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function removeStudentSelection(\n  listItemId: string,\n  fileIndex: number,\n  fileData: studentInformationType[],\n): Promise<{ result: loadingStateEnum; fileData?: studentInformationType[] }> {\n  const selectListData = {\n    fields: {\n      selected: false,\n    },\n  };\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items/${listItemId}`,\n    'PATCH',\n    JSON.stringify(selectListData),\n  );\n  if (result.ok) {\n    const newFileData = fileData;\n    newFileData[fileIndex].selected = false;\n    return { result: loadingStateEnum.success, fileData: [...newFileData] };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// This is the number of blocks in a row in the student page.\nexport function getNumberOfBlocks(width: number) {\n  return Math.floor(width / 190) !== 0\n    ? Math.floor(width % 190 >= 0.75 ? width / 190 : (width + 190) / 190)\n    : 1;\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  ViewStyle,\n  Platform,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useNavigate } from 'react-router-native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Colors, loadingStateEnum } from '../types';\nimport store, { RootState } from '../Redux/store';\nimport ProgressView from '../UI/ProgressView';\nimport { PersonIcon, SearchIcon } from '../UI/Icons/Icons';\nimport { studentSearchSlice } from '../Redux/reducers/studentSearchReducer';\nimport BackButton from '../UI/BackButton';\nimport { getNumberOfBlocks, getUsers } from '../Functions/studentFunctions';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport createUUID from '../Functions/ultility/createUUID';\n\nexport default function Students() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { usersState, users, nextLink } = useSelector(\n    (state: RootState) => state.studentSearch,\n  );\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  async function loadUsers() {\n    getUsers();\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n      }),\n    );\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      {usersState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor:\n              currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={14} height={14} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {usersState === loadingStateEnum.success ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor:\n                  currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.15,\n                  width,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  backgroundColor: Colors.darkGray,\n                }}\n              >\n                { (currentBreakPoint === 0) ?\n                  <BackButton to=\"/profile\" />:null\n                }\n                <Text\n                  style={{ fontFamily: 'BukhariScript', color: Colors.white }}\n                >\n                  Students\n                </Text>\n              </View>\n              <SearchBox\n                getUsers={e => {\n                  if (e !== '') {\n                    getUsers(undefined, e);\n                    dispatch(studentSearchSlice.actions.setNextLink(undefined));\n                  } else {\n                    getUsers();\n                  }\n                }}\n              />\n              <FlatList\n                key={`Students_${createUUID()}`}\n                data={users}\n                renderItem={user => <StudentBlock user={user} />}\n                keyExtractor={item => item.id}\n                numColumns={getNumberOfBlocks(width)}\n                onEndReached={() => {\n                  if (nextLink !== undefined) {\n                    getUsers(nextLink);\n                  }\n                }}\n                style={{ height: height * 0.825 }}\n              />\n            </View>\n          ) : (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor:\n                  currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n              }}\n            >\n              <Pressable\n                onPress={() => {\n                  navigate('/');\n                }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Something went wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction StudentBlock({ user }: { user: ListRenderItemInfo<schoolUserType> }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  async function getImage() {\n    const newUser: any = {};\n    Object.assign(newUser, user.item);\n    if (\n      user.item.imageDownloadUrl !== 'noImage' &&\n      user.item.imageState !== loadingStateEnum.success &&\n      user.item.imageState !== loadingStateEnum.failed &&\n      user.item.imageState !== loadingStateEnum.loading\n    ) {\n      const updateStateUser: any = {};\n      Object.assign(updateStateUser, user.item);\n      updateStateUser.imageState = loadingStateEnum.loading;\n      store.dispatch(\n        studentSearchSlice.actions.setStudentUserByIndex({\n          index: user.index,\n          user: updateStateUser,\n        }),\n      );\n      const result = await callMsGraph(user.item.imageDownloadUrl);\n      if (result.ok) {\n        const data = await result.blob();\n        const urlOut = URL.createObjectURL(data);\n        newUser.imageState = loadingStateEnum.success;\n        newUser.imageDataUrl = urlOut;\n        store.dispatch(\n          studentSearchSlice.actions.setStudentUserByIndex({\n            index: user.index,\n            user: newUser,\n          }),\n        );\n      } else {\n        newUser.imageState = loadingStateEnum.failed;\n        store.dispatch(\n          studentSearchSlice.actions.setStudentUserByIndex({\n            index: user.index,\n            user: newUser,\n          }),\n        );\n      }\n    }\n  }\n\n  useEffect(() => {\n    getImage();\n  }, []);\n\n  function calculateMarginEnds(widthIn: number, side: 'L' | 'R'): number {\n    const numberOfBlocks = getNumberOfBlocks(width);\n    if (user.index % numberOfBlocks === 0) {\n      const widthRemaining = widthIn - (numberOfBlocks - 1) * 190 - 150;\n      if (widthRemaining / 2 >= 120 || side === 'R') {\n        return 20;\n      }\n      return widthRemaining / 2;\n    }\n    if ((user.index + 1) % numberOfBlocks === 0) {\n      const widthRemaining = widthIn - (numberOfBlocks - 1) * 190 - 150;\n      if (widthRemaining / 2 >= 120 || side === 'L') {\n        return 20;\n      }\n      return widthRemaining / 2;\n    }\n    return 20;\n  }\n\n  return (\n    <View\n      key={`StudentBlock_${user.item.id}`}\n      style={{\n        height: 175,\n        width: 150,\n        marginTop: user.index < getNumberOfBlocks(width) ? height * 0.07 : 25,\n        marginBottom: 25,\n        marginLeft: calculateMarginEnds(width, 'L'),\n        marginRight: calculateMarginEnds(width, 'R'),\n        backgroundColor: Colors.white,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n        overflow: 'hidden'\n      }}\n    >\n      <View\n        style={{\n          height: 150,\n          width: 150,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {user.item.imageState === loadingStateEnum.loading ? (\n          <>\n            <ProgressView width={14} height={14} />\n            <Text>Loading</Text>\n          </>\n        ) : (\n          <>\n            {user.item.imageState === loadingStateEnum.success &&\n            user.item.imageDataUrl !== undefined ? (\n              <Image\n                source={{ uri: user.item.imageDataUrl }}\n                style={{ width: 150, height: 150 }}\n              />\n            ) : (\n              <PersonIcon width={150} height={150} />\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ flexDirection: 'row', height: 14 }}>\n        <Text style={{ marginLeft: 5, marginTop: 2 }}>{user.item.name}</Text>\n        {user.item.student ? <Text>{user.item.grade}</Text> : null}\n      </View>\n    </View>\n  );\n}\n\nfunction SearchBox({ getUsers }: { getUsers: (item: string) => void }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { searchText } = useSelector((state: RootState) => state.studentSearch);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const style: ViewStyle =\n    Platform.OS === 'web' ? { outlineStyle: 'none' } : {};\n  const [mounted, setMounted] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (mounted) {\n      const searchValueSave = searchText;\n      setTimeout(() => {\n        if (store.getState().studentSearch.searchText === searchValueSave) {\n          getUsers(store.getState().studentSearch.searchText);\n        }\n      }, 1500);\n    } else {\n      setMounted(true);\n    }\n  }, [searchText]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.15 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchText}\n            onChangeText={e => {\n              dispatch(studentSearchSlice.actions.setStudentSearch(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: Colors.white }}>{searchText}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import store from '../Redux/store';\nimport { loadingStateEnum } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\n// https://stackoverflow.com/questions/3583724/how-do-i-add-a-delay-in-a-javascript-loop\nconst timer = (ms: number | undefined) =>\n  new Promise(res => setTimeout(res, ms));\n\nexport default async function addImage(\n  userId: string,\n  selectedFile: microsoftFileType,\n): Promise<loadingStateEnum> {\n  // Get Site Root Dirve\n  const siteResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/drive/root`,\n  );\n  if (siteResult.ok) {\n    const siteData = await siteResult.json();\n    //Copy current file to drive\n    const copyPayload = {\n      parentReference: {\n        driveId: siteData.parentReference.driveId,\n        id: siteData.id,\n      },\n    };\n    const copyResult = await callMsGraph(\n      `${selectedFile.callPath}/copy?@microsoft.graph.conflictBehavior=rename`,\n      'POST',\n      JSON.stringify(copyPayload),\n    );\n    if (copyResult.ok) {\n      const copyData = await copyResult.headers.get('Location');\n      let notComplete = true;\n      let resourceId = '';\n\n      while (notComplete) {\n        if (copyData !== null) {\n          const copyFetch = await fetch(copyData);\n          if (copyFetch.ok) {\n            const copyFetchData = await copyFetch.json();\n            if (copyFetchData.status === 'completed') {\n              resourceId = copyFetchData.resourceId;\n              notComplete = false;\n              break;\n            }\n          } else {\n            return loadingStateEnum.failed;\n          }\n        } else {\n          return loadingStateEnum.failed;\n        }\n        await timer(3000);\n      }\n\n      const getItemResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/drive/items/${resourceId}`,\n      );\n      if (getItemResult.ok) {\n        const getItemData = await getItemResult.json();\n        const studentData = {\n          fields: {\n            createdTime: new Date().toISOString(),\n            itemId: getItemData.id,\n            userId,\n            selected: false,\n          },\n        };\n        const studentListResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${\n            store.getState().paulyList.siteId\n          }/lists/${store.getState().paulyList.studentFilesListId}/items`,\n          'POST',\n          JSON.stringify(studentData),\n        );\n        if (studentListResult.ok) {\n          return loadingStateEnum.success;\n        } else {\n          return loadingStateEnum.failed;\n        }\n      }\n      return loadingStateEnum.failed;\n    }\n    return loadingStateEnum.failed;\n  }\n  return loadingStateEnum.failed;\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  ViewStyle,\n  Platform,\n  TextInput,\n  Modal,\n  FlatList,\n  ListRenderItemInfo,\n} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BackButton from '../../../UI/BackButton';\nimport MicrosoftFilePicker from '../../../UI/MicrosoftFilePicker';\nimport store, { RootState } from '../../../Redux/store';\nimport {\n  changeStudentSelection,\n  getStudentData,\n  getUsers,\n  removeStudentSelection,\n} from '../../../Functions/studentFunctions';\nimport { CloseIcon, SearchIcon } from '../../../UI/Icons/Icons';\nimport { studentSearchSlice } from '../../../Redux/reducers/studentSearchReducer';\nimport { Colors, loadingStateEnum } from '../../../types';\nimport ProgressView from '../../../UI/ProgressView';\nimport addImage from '../../../Functions/addImage';\nimport { getTextState } from '../../../Functions/ultility/createUUID';\n\nfunction SelectMainFile({\n  userId,\n  setFilePickingMode,\n}: {\n  userId: string;\n  setFilePickingMode: (item: filePickingModeEnum) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [fileData, setFileData] = useState<studentInformationType[]>([]);\n  const [fileState, setFileState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedFileListId, setSelectedFileListId] = useState<string>('');\n\n  async function loadData() {\n    const result = await getStudentData(userId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setFileState(loadingStateEnum.success);\n      setFileData(result.data);\n      const selectedFileList = result.data.find(e => {\n        return e.selected;\n      });\n      if (selectedFileList !== undefined) {\n        setSelectedFileListId(selectedFileList.listId);\n      }\n    } else {\n      setFileState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        right: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.notStarted);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <View\n        style={{\n          height: height * 0.8,\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          backgroundColor: Colors.white,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          {fileState === loadingStateEnum.loading ? (\n            <View>\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {fileState === loadingStateEnum.success ? (\n                <FlatList\n                  data={fileData}\n                  renderItem={file => (\n                    <StudentSelectFileBlock\n                      key={`${file.item.listId}_${file.item.createdTime}`}\n                      file={file}\n                      setFileData={setFileData}\n                      fileData={fileData}\n                      selectedFileListId={selectedFileListId}\n                      setSelectedFileListId={setSelectedFileListId}\n                    />\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n          <Pressable\n            onPress={() => setFilePickingMode(filePickingModeEnum.create)}\n          >\n            <Text>Create</Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction StudentSelectFileBlock({\n  file,\n  selectedFileListId,\n  setSelectedFileListId,\n  fileData,\n  setFileData,\n}: {\n  file: ListRenderItemInfo<studentInformationType>;\n  setFileData: (item: studentInformationType[]) => void;\n  fileData: studentInformationType[];\n  selectedFileListId: string;\n  setSelectedFileListId: (item: string) => void;\n}) {\n  const [updateState, setUpdateState] = useState(loadingStateEnum.notStarted);\n\n  async function callRemoveSelection() {\n    setUpdateState(loadingStateEnum.loading);\n    const result = await removeStudentSelection(\n      file.item.listId,\n      file.index,\n      fileData,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.fileData !== undefined\n    ) {\n      setSelectedFileListId('');\n      setFileData(result.fileData);\n      setUpdateState(loadingStateEnum.success);\n    } else {\n      setUpdateState(loadingStateEnum.failed);\n    }\n  }\n\n  async function callChangeSelection() {\n    setUpdateState(loadingStateEnum.loading);\n    const result = await changeStudentSelection(\n      file.item.listId,\n      selectedFileListId,\n      fileData,\n      file.index,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.fileData !== undefined\n    ) {\n      setUpdateState(loadingStateEnum.success);\n      setFileData(result.fileData);\n    } else {\n      setUpdateState(loadingStateEnum.failed);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => {\n        if (file.item.selected) {\n          callRemoveSelection();\n        } else {\n          callChangeSelection();\n        }\n      }}\n      style={{\n        backgroundColor: file.item.selected ? Colors.lightGray : Colors.white,\n        borderRadius: 15,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        flexDirection: 'row',\n      }}\n    >\n      <>\n        {updateState === loadingStateEnum.loading ? (\n          <ProgressView width={14} height={14} />\n        ) : (\n          <View\n            style={{\n              width: 14,\n              height: 14,\n              backgroundColor:\n                updateState === loadingStateEnum.success ||\n                loadingStateEnum.notStarted\n                  ? 'green'\n                  : Colors.danger,\n              borderRadius: 7,\n            }}\n          />\n        )}\n      </>\n      <Text style={{ margin: 10 }}>\n        {new Date(file.item.createdTime).toLocaleDateString()}\n      </Text>\n    </Pressable>\n  );\n}\n\nexport default function GovernmentStudents() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { usersState, users } = useSelector(\n    (state: RootState) => state.studentSearch,\n  );\n\n  async function loadUsers() {\n    getUsers();\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <BackButton to=\"/profile/government/\" />\n        <Text style={{ marginTop: 14 }}>Government Students</Text>\n      </View>\n      <SearchBox\n        getUsers={() => {\n          loadUsers();\n        }}\n      />\n      <View style={{ width, height: height * 0.05 }} />\n      <View style={{ height: height * 0.75 }}>\n        {usersState === loadingStateEnum.loading ? (\n          <View\n            style={{\n              width,\n              height: height * 0.8,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView width={12} height={12} />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {usersState === loadingStateEnum.success ? (\n              <FlatList data={users} renderItem={e => <StudentItem e={e} />} />\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ flexDirection: 'row', height: height * 0.1 }}>\n        <Pressable>\n          <Text>Select Folder</Text>\n        </Pressable>\n        <Pressable>\n          <Text>Select Maping Keys</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nenum filePickingModeEnum {\n  notStarted,\n  select,\n  create,\n}\n\nfunction StudentItem({ e }: { e: ListRenderItemInfo<schoolUserType> }) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [filePickingMode, setFilePickingMode] = useState<filePickingModeEnum>(\n    filePickingModeEnum.notStarted,\n  );\n  return (\n    <View style={{ flexDirection: 'row', margin: 5 }}>\n      <Text>{e.item.name}</Text>\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.select);\n        }}\n        style={{marginLeft: 2}}\n      >\n        <Text style={{margin: 2}}>Choose File</Text>\n      </Pressable>\n      <Modal\n        visible={filePickingMode !== filePickingModeEnum.notStarted}\n        animationType=\"slide\"\n        transparent\n        style={{ width: width * 0.8 }}\n        onRequestClose={() =>\n          setFilePickingMode(filePickingModeEnum.notStarted)\n        }\n      >\n        <Pressable\n          onPress={() => setFilePickingMode(filePickingModeEnum.notStarted)}\n          style={{\n            position: 'absolute',\n            left: 0,\n            height,\n            zIndex: -1,\n            width,\n          }}\n        />\n        <>\n          {filePickingMode === filePickingModeEnum.create ? (\n            <StudentsSelectFile\n              setFilePickingMode={setFilePickingMode}\n              userId={e.item.id}\n            />\n          ) : (\n            <SelectMainFile\n              userId={e.item.id}\n              setFilePickingMode={setFilePickingMode}\n            />\n          )}\n        </>\n      </Modal>\n    </View>\n  );\n}\n\nfunction SearchBox({ getUsers }: { getUsers: (item: string) => void }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { searchText } = useSelector((state: RootState) => state.studentSearch);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const style: ViewStyle =\n    Platform.OS === 'web' ? { outlineStyle: 'none' } : {};\n  const [mounted, setMounted] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (mounted) {\n      const searchValueSave = searchText;\n      setTimeout(() => {\n        if (store.getState().studentSearch.searchText === searchValueSave) {\n          getUsers(store.getState().studentSearch.searchText);\n        }\n      }, 1500);\n    } else {\n      setMounted(true);\n    }\n  }, [searchText]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.1 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchText}\n            onChangeText={e => {\n              dispatch(studentSearchSlice.actions.setStudentSearch(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchText}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction StudentsSelectFile({\n  setFilePickingMode,\n  userId,\n}: {\n  setFilePickingMode: (item: filePickingModeEnum) => void;\n  userId: string;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [isReviewing, setIsReviewing] = useState<boolean>(false);\n  const [selectedFile, setSelectedFile] = useState<\n    microsoftFileType | undefined\n  >(undefined);\n  const [addImageState, setAddImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadAddImage() {\n    if (selectedFile !== undefined) {\n      setAddImageState(loadingStateEnum.loading);\n      const result = await addImage(userId, selectedFile);\n      setAddImageState(result);\n    }\n  }\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        right: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.select);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <>\n        {!isReviewing ? (\n          <View\n            style={{\n              height: height * 0.8,\n              width: width * 0.8,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: Colors.white,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              <MicrosoftFilePicker\n                height={height * 0.8 - 5}\n                width={width * 0.8 - 5}\n                onSelectedFile={file => {\n                  setIsReviewing(true);\n                  setSelectedFile(file);\n                }}\n              />\n            </View>\n          </View>\n        ) : (\n          <View\n            style={{\n              height: height * 0.8,\n              width: width * 0.8,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: Colors.white,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              {selectedFile !== undefined ? (\n                <Pressable\n                  onPress={() => {\n                    loadAddImage();\n                  }}\n                >\n                  <Text>\n                    {getTextState(addImageState, { notStarted: 'Confirm' })}\n                  </Text>\n                </Pressable>\n              ) : null}\n            </View>\n          </View>\n        )}\n      </>\n    </View>\n  );\n}\n","import { View, Text, Platform, Pressable } from 'react-native';\nimport * as Network from 'expo-network';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  DiscoveryDocument,\n  revokeAsync,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport { useMsal } from '@azure/msal-react';\nimport { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { authenticationTokenSlice } from '../Redux/reducers/authenticationTokenReducer';\nimport store, { RootState } from '../Redux/store';\nimport ProgressView from '../UI/ProgressView';\nimport { Colors } from '../types';\nimport { tenantId } from '../PaulyConfig';\nimport { OfflineIcon } from '../UI/Icons/Icons';\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n\nexport default function LoadingView({\n  setOveride,\n  width,\n}: {\n  setOveride: (item: boolean) => void;\n  width: number;\n}) {\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const insets = useSafeAreaInsets();\n  const [isShowingLogout, setIsShowingLogout] = useState<boolean>(false);\n  const [isConnected, setIsConnected] = useState<boolean>(true);\n\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  async function checkIfConnected() {\n    const result = await Network.getNetworkStateAsync();\n    if (result.isInternetReachable) {\n      // Internet reachable\n      setIsConnected(true);\n    } else {\n      setIsConnected(false);\n    }\n  }\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      // assign interval to a variable to clear it.\n      checkIfConnected();\n    }, 5000); // 5s\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsShowingLogout(true);\n    }, 10000);\n  }, []);\n\n  return (\n    <View\n      style={{\n        width,\n        top: -insets.top,\n        height,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {isConnected ? (\n        <>\n          <ProgressView width={14} height={14} />\n          <Text style={{ color: Colors.white }}>Loading</Text>\n          {isGovernmentMode ? (\n            <Pressable\n              onPress={() => {\n                setOveride(true);\n              }}\n              style={{ margin: 5 }}\n            >\n              <Text style={{ color: Colors.white }}>Overide</Text>\n            </Pressable>\n          ) : null}\n          {isShowingLogout ? (\n            <Pressable\n              onPress={() => {\n                signOut();\n              }}\n              style={{ margin: 5 }}\n            >\n              <Text style={{ color: Colors.white }}>Logout</Text>\n            </Pressable>\n          ) : null}\n        </>\n      ) : (\n        <OfflineIcon width={50} height={50} />\n      )}\n    </View>\n  );\n}\n","import React, { useState } from 'react';\nimport { View, ScaledSize } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport HomePage from './HomePage';\nimport Commissions from './Commissions/Commissions';\nimport Notifications from './Notifications';\nimport Resources from './Resources';\nimport Settings from './Profile/Settings';\nimport Government from './Profile/Government/Government';\nimport MicrosoftGraphOverview from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphOverview';\nimport MicrosoftGraphCreateList from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphCreateList';\nimport GovernmentCommissions from './Profile/Government/GovernmentCommissions/GovernmentCommissions';\nimport GovernmentEditCommission from './Profile/Government/GovernmentCommissions/GovernmentEditCommission';\nimport Sports from './Sports';\nimport Calendar from './Calendar/Calendar';\nimport GovernmentSports from './Profile/Government/GovernmentSports/GovernmentSports';\nimport GovernmentCreateNewSport from './Profile/Government/GovernmentSports/GovernmentCreateNewSport';\nimport GovernmentSportsTeams from './Profile/Government/GovernmentSports/GovernmentSportsTeams';\nimport GovernmentSportTeamEdit from './Profile/Government/GovernmentSports/GovernmentSportTeamEdit';\nimport GovernmentSportsTeamAddPost from './Profile/Government/GovernmentSports/GovernmentSportsTeamAddPost';\nimport GovernmentReviewFileSubmission from './Profile/Government/GovernmentSports/GovernmentReviewFileSubmission';\nimport GovernmentCalendar from './Profile/Government/GovernmentCalendar/GovernmentCalendar';\nimport GovernmentSchedual from './Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentSchedule';\nimport GovernmentTimetable from './Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetable';\nimport GovernmentScheduleEdit from './Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentScheduleEdit';\nimport GovernmentClasses from './Profile/Government/GovernmentClasses/GovernmentClasses';\nimport GovernmentClassesEdit from './Profile/Government/GovernmentClasses/GovernmentClassesEdit';\nimport GovernmentHomePage from './Profile/Government/GovernmentHomePage';\nimport NavBarComponent from '../UI/NavComponent';\nimport PageNotFound from './404Page';\nimport GovernmentAdmin from './Profile/Government/GovernmentAdminCenter/GovernmentAdmin';\nimport GovernmentRooms from './Profile/Government/GovernmentClasses/GovernmentRooms';\nimport GovernmentRoomsCreate from './Profile/Government/GovernmentClasses/GovermentRoomsCreate';\nimport MicrosoftGraphEdit from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphEdit';\nimport GovernmentResources from './Profile/Government/GovernmentResources';\nimport GovernmentDressCode from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCode';\nimport GovernmentDressCodeEdit from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit';\nimport GovernmentTimetableEdit from './Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetableEdit';\nimport { RootState } from '../Redux/store';\nimport ProfileBlock from './Profile/ProfileBlock';\nimport Students from './Students';\nimport GovernmentStudents from './Profile/Government/GovernmentStudents';\nimport { Colors } from '../types';\nimport LoadingScreen from './LoadingScreen';\n\nexport default function AuthenticatedView({\n  dimensions,\n  width,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n  width: number;\n}) {\n  const { height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const authenticationToken = useSelector(\n    (state: RootState) => state.authenticationToken,\n  );\n  const isShowingProfileBlock = useSelector(\n    (state: RootState) => state.isShowingProfileBlock,\n  );\n  const insets = useSafeAreaInsets();\n  const [overide, setOveride] = useState<boolean>(false);\n  return (\n    <>\n      {(siteId !== '' || overide) && authenticationToken !== '' ? (\n        <View style={{ width, top: -insets.top }}>\n          <NativeRouter>\n            <View style={{ flexDirection: 'row', width }}>\n              {currentBreakPoint >= 1 ? (\n                <NavBarComponent\n                  width={width * 0.1}\n                  height={dimensions.window.height}\n                />\n              ) : null}\n              <View\n                style={{\n                  width: currentBreakPoint >= 1 ? width * 0.9 : width,\n                  height,\n                  backgroundColor: Colors.maroon,\n                }}\n              >\n                <Routes>\n                  <Route path=\"/\" element={<HomePage />} />\n                  <Route path=\"/sports\" element={<Sports />} />\n                  <Route path=\"/notifications\" element={<Notifications />} />\n                  <Route path=\"/calendar\" element={<Calendar />} />\n                  <Route path=\"/resources\" element={<Resources />} />\n                  <Route path=\"/commissions\" element={<Commissions />} />\n                  <Route path=\"/profile\" element={<Settings />} />\n                  <Route path=\"/students\" element={<Students />} />\n                  <Route path=\"/profile/government\" element={<Government />} />\n                  <Route\n                    path=\"/profile/government/resources\"\n                    element={<GovernmentResources />}\n                  />\n                  <Route\n                    path=\"/profile/government/admin\"\n                    element={<GovernmentAdmin />}\n                  />\n                  <Route\n                    path=\"/profile/government/graph/:mode\"\n                    element={<MicrosoftGraphOverview />}\n                  />\n                  <Route\n                    path=\"/profile/government/graph/:mode/edit/:id\"\n                    element={<MicrosoftGraphEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/graph/:mode/create\"\n                    element={<MicrosoftGraphCreateList />}\n                  />\n                  <Route\n                    path=\"/profile/government/commissions\"\n                    element={<GovernmentCommissions />}\n                  />\n                  <Route\n                    path=\"/profile/government/commissions/:id\"\n                    element={<GovernmentEditCommission />}\n                  />\n                  <Route\n                    path=\"/profile/government/homepage\"\n                    element={<GovernmentHomePage />}\n                  />\n                  <Route\n                    path=\"/profile/government/students\"\n                    element={<GovernmentStudents />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes\"\n                    element={<GovernmentClasses />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes/edit/:id\"\n                    element={<GovernmentClassesEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes/room\"\n                    element={<GovernmentRooms />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes/room/create\"\n                    element={<GovernmentRoomsCreate />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar\"\n                    element={<GovernmentCalendar />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/schedule\"\n                    element={<GovernmentSchedual />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/schedule/:id\"\n                    element={<GovernmentScheduleEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/timetable\"\n                    element={<GovernmentTimetable />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/timetable/:id\"\n                    element={<GovernmentTimetableEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/dresscode\"\n                    element={<GovernmentDressCode />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/dresscode/:id\"\n                    element={<GovernmentDressCodeEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports\"\n                    element={<GovernmentSports />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/create\"\n                    element={<GovernmentCreateNewSport />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/team/:sport/:id\"\n                    element={<GovernmentSportsTeams />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/team/:sport/:id/:teamId\"\n                    element={<GovernmentSportTeamEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/post/create\"\n                    element={<GovernmentSportsTeamAddPost />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/post/review/:submissionID\"\n                    element={<GovernmentReviewFileSubmission />}\n                  />\n                  <Route path=\"*\" element={<PageNotFound />} />\n                </Routes>\n                {currentBreakPoint >= 1 && isShowingProfileBlock ? (\n                  <ProfileBlock />\n                ) : null}\n              </View>\n            </View>\n          </NativeRouter>\n        </View>\n      ) : (\n        <LoadingScreen setOveride={setOveride} width={width} />\n      )}\n    </>\n  );\n}\n","import callMsGraph from './microsoftAssets';\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport store from '../../Redux/store';\nimport { paulyListSlice } from '../../Redux/reducers/paulyListReducer';\n\nexport default async function getPaulyLists() {\n  const getRootSiteIdResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/sites/root?$select=id`,\n    'GET',\n  );\n  if (getRootSiteIdResult.ok) {\n    const getRootSiteIdResultData = await getRootSiteIdResult.json();\n    const paulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items?expand=fields&$select=id`,\n      'GET',\n    );\n    if (paulyListResult.ok) {\n      const paulyListResultData = await paulyListResult.json();\n      // TO DO make the value secure meaning that others cannot add to the pauly list\n      // store.dispatch(paulyListSlice.actions.setPaulyList({siteId: getRootSiteIdResultData[\"id\"], commissionListId: paulyListResultData[\"fields\"][\"commissionListId\"], paulyDataListId: paulyListResultData[\"fields\"][\"paulyDataListId\"], scheduleListId: paulyListResultData[\"fields\"][\"scheduleListId\"], sportsListId: paulyListResultData[\"fields\"][\"sportsListId\"], sportsApprovedSubmissionsListId: paulyListResultData[\"fields\"][\"sportsApprovedSubmissionsListId\"], sportsSubmissionsListId: paulyListResultData[\"fields\"][\"sportsSubmissionsListId\"], timetablesListId: paulyListResultData[\"fields\"][\"timetablesListId\"]}))\n      store.dispatch(\n        paulyListSlice.actions.setPaulyList({\n          siteId: getRootSiteIdResultData.id,\n          studentFilesListId:\n            paulyListResultData.value[0].fields.studentFilesListId,\n          commissionListId:\n            paulyListResultData.value[0].fields.commissionListId,\n          commissionSubmissionsListId:\n            paulyListResultData.value[0].fields.commissionSubmissionsListId,\n          paulyDataListId: paulyListResultData.value[0].fields.paulyDataListId,\n          scheduleListId: paulyListResultData.value[0].fields.scheduleListId,\n          sportsListId: paulyListResultData.value[0].fields.sportsListId,\n          sportsApprovedSubmissionsListId:\n            paulyListResultData.value[0].fields.sportsApprovedSubmissionsListId,\n          sportsSubmissionsListId:\n            paulyListResultData.value[0].fields.sportsSubmissionsListId,\n          timetablesListId:\n            paulyListResultData.value[0].fields.timetablesListId,\n          resourceListId: paulyListResultData.value[0].fields.resourceListId,\n          dressCodeListId: paulyListResultData.value[0].fields.dressCodeListId,\n          eventTypeExtensionId:\n            paulyListResultData.value[0].fields.eventTypeExtensionId,\n          eventDataExtensionId:\n            paulyListResultData.value[0].fields.eventDataExtensionId,\n          classExtensionId:\n            paulyListResultData.value[0].fields.classExtensionId,\n          resourceExtensionId:\n            paulyListResultData.value[0].fields.resourceExtensionId,\n          roomListId: paulyListResultData.value[0].fields.roomListId,\n        }),\n      );\n    } else {\n      // TO DO THIS IS A BIG PROBLEM SHUT DOWN APP BC most of it don't work lost connection to server\n    }\n  } else {\n    // TO DO THIS IS A BIG PROBLEM SHUT DOWN APP BC most of it don't work lost connection to server\n  }\n}\n","import { microsoftProfileDataSlice } from '../../Redux/reducers/microsoftProfileDataReducer';\nimport store from '../../Redux/store';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function getUserProfile() {\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/photo/$value',\n    'GET',\n  );\n  // TO DO return error\n  if (result.ok) {\n    const dataBlob = await result.blob();\n    const urlOut = URL.createObjectURL(dataBlob);\n    const profileResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/me',\n      'GET',\n    );\n    if (profileResult.ok) {\n      const profileData = await profileResult.json();\n      store.dispatch(\n        microsoftProfileDataSlice.actions.setMicrosoftProfileData({\n          uri: urlOut,\n          displayName: profileData.displayName,\n          id: profileData.id,\n        }),\n      );\n    }\n  } else {\n    const profileResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/me',\n      'GET',\n    );\n    if (profileResult.ok) {\n      const profileData = await profileResult.json();\n      store.dispatch(\n        microsoftProfileDataSlice.actions.setMicrosoftProfileData({\n          uri: '',\n          displayName: profileData.displayName,\n          id: profileData.id,\n        }),\n      );\n    }\n  }\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { orgWideGroupID } from '../PaulyConfig';\nimport { isGovernmentModeSlice } from '../Redux/reducers/isGovernmentModeReducer';\nimport store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function validateGovernmentMode() {\n  const userResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me?$select=id',\n  );\n  if (userResult.ok) {\n    const userData = await userResult.json();\n    const teamsResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/owners?$filter=id%20eq%20'${userData.id}'`,\n    );\n    if (teamsResult.ok) {\n      const teamsData = await teamsResult.json();\n      if (teamsData.value.length === 1) {\n        if (teamsData.value[0].id === userData.id) {\n          try {\n            await AsyncStorage.setItem(\n              'paulyGovernmentMode',\n              JSON.stringify(true),\n            );\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(true),\n            );\n          } catch (e) {\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          }\n        } else {\n          try {\n            await AsyncStorage.setItem(\n              'paulyGovernmentMode',\n              JSON.stringify(false),\n            );\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          } catch (e) {\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          }\n        }\n      } else {\n        try {\n          await AsyncStorage.setItem(\n            'paulyGovernmentMode',\n            JSON.stringify(false),\n          );\n          store.dispatch(\n            isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n          );\n        } catch (e) {\n          store.dispatch(\n            isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n          );\n        }\n      }\n    } else if (teamsResult.status === 404) {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(true));\n    } else {\n      try {\n        await AsyncStorage.setItem(\n          'paulyGovernmentMode',\n          JSON.stringify(false),\n        );\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      } catch (e) {\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      }\n    }\n  } else {\n    try {\n      await AsyncStorage.setItem('paulyGovernmentMode', JSON.stringify(false));\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    } catch (e) {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    }\n  }\n}\n\nexport async function checkIfGovernmentMode() {\n  try {\n    const value = await AsyncStorage.getItem('paulyGovernmentMode');\n    if (value !== null) {\n      // value previously stored\n      const governmentMode = JSON.parse(value);\n      if (governmentMode) {\n        store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(true));\n      } else {\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      }\n    } else {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    }\n  } catch (e) {\n    // error reading value\n    store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n  }\n}\n\nexport async function setWantGovernment(value: boolean) {\n  if (value) {\n    try {\n      await AsyncStorage.setItem(\n        'paulyWantGovernmentMode',\n        JSON.stringify(true),\n      );\n    } catch (e) {\n      // TO DO deal with error\n    }\n  } else {\n    try {\n      await AsyncStorage.setItem(\n        'paulyWantGovernmentMode',\n        JSON.stringify(false),\n      );\n    } catch (e) {\n      // TO DO deal with error\n    }\n  }\n}\n\nexport async function getWantGovernment(): Promise<boolean> {\n  try {\n    const value = await AsyncStorage.getItem('paulyWantGovernmentMode');\n    if (value !== null) {\n      const result = JSON.parse(value);\n      if (result) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  } catch {\n    return false;\n    // TO DO deal with error\n  }\n}\n","import { SafeAreaView, ScaledSize } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EventType, PublicClientApplication } from '@azure/msal-browser';\nimport {\n  AuthenticatedTemplate,\n  MsalProvider,\n  UnauthenticatedTemplate,\n  useMsal,\n} from '@azure/msal-react';\nimport Login from '../src/login';\nimport AuthenticatedViewMain from '../src/AuthenticatedView/AuthenticatedViewMain';\nimport { clientId, scopes, tenantId } from '../src/PaulyConfig';\nimport getPaulyLists from '../src/Functions/ultility/getPaulyLists';\nimport getUserProfile from '../src/Functions/ultility/getUserProfile';\nimport { authenticationTokenSlice } from '../src/Redux/reducers/authenticationTokenReducer';\nimport { isGovernmentModeSlice } from '../src/Redux/reducers/isGovernmentModeReducer';\nimport { authenticationApiTokenSlice } from '../src/Redux/reducers/authenticationApiToken';\nimport {\n  checkIfGovernmentMode,\n  getWantGovernment,\n  setWantGovernment,\n  validateGovernmentMode,\n} from '../src/Functions/handleGovernmentLogin';\nimport { RootState } from '../src/Redux/store';\n\n// This is for the microsoft authentication.\nconst pca = new PublicClientApplication({\n  auth: {\n    clientId,\n    authority: `https://login.microsoftonline.com/${tenantId}/`,\n    redirectUri: window.location.href,\n  },\n});\n\nexport default function AppMain({\n  dimensions,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n}) {\n  return (\n    <MsalProvider instance={pca}>\n      <SafeAreaView\n        style={{\n          width: dimensions.window.width,\n          height: dimensions.window.height,\n          zIndex: 2,\n          position: 'absolute',\n          left: 0,\n          top: 0,\n        }}\n      >\n        <AuthDeep dimensions={dimensions} />\n      </SafeAreaView>\n    </MsalProvider>\n  );\n}\n\nfunction AuthDeep({\n  dimensions,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n}) {\n  const { instance } = useMsal();\n  const dispatch = useDispatch();\n  const authenticationCall = useSelector(\n    (state: RootState) => state.authenticationCall,\n  );\n\n  async function getAuthToken(userInitated: boolean, government?: boolean) {\n    // Account selection logic is app dependent. Adjust as needed for different use cases.\n    // Set active acccount on page load\n    if (government !== undefined) {\n      setWantGovernment(government);\n    }\n\n    const accounts = instance.getAllAccounts();\n    if (accounts.length > 0) {\n      instance.setActiveAccount(accounts[0]);\n      const accountResult = await instance.getActiveAccount();\n      if (accountResult !== null) {\n        const result = await instance.acquireTokenSilent({\n          scopes,\n        });\n        dispatch(\n          authenticationTokenSlice.actions.setAuthenticationToken(\n            result.accessToken,\n          ),\n        );\n        getPaulyLists();\n        getUserProfile();\n        if (await getWantGovernment()) {\n          checkIfGovernmentMode();\n        }\n      } else {\n      }\n    }\n\n    instance.addEventCallback((event: any) => {\n      // set active account after redirect\n      if (\n        event.eventType === EventType.LOGIN_SUCCESS &&\n        event.payload.account\n      ) {\n        const { account } = event.payload;\n        instance.setActiveAccount(account);\n      }\n    });\n\n    // handle auth redired/do all initial setup for msal\n    instance\n      .handleRedirectPromise()\n      .then(async authResult => {\n        // Check if user signed in\n        const account = instance.getActiveAccount();\n        if (!account && userInitated) {\n          // redirect anonymous user to login page\n          instance.loginRedirect({\n            scopes,\n          });\n        } else if (account) {\n          if (authResult !== undefined && authResult !== null) {\n            dispatch(\n              authenticationTokenSlice.actions.setAuthenticationToken(\n                authResult.accessToken,\n              ),\n            );\n            if (await getWantGovernment()) {\n              validateGovernmentMode();\n            }\n            getPaulyLists();\n            getUserProfile();\n          }\n        }\n      })\n      .catch(async err => {\n        // TODO: Handle errors\n        try {\n          const result = await instance.acquireTokenSilent({\n            scopes,\n          });\n          dispatch(\n            authenticationTokenSlice.actions.setAuthenticationToken(\n              result.accessToken,\n            ),\n          );\n          if (await getWantGovernment()) {\n            validateGovernmentMode();\n          }\n          getPaulyLists();\n          getUserProfile();\n        } catch (e) {}\n      });\n  }\n\n  useEffect(() => {\n    getAuthToken(false);\n  }, []);\n\n  async function refreshToken() {\n    const result = await instance.acquireTokenSilent({\n      scopes,\n    });\n    dispatch(\n      authenticationTokenSlice.actions.setAuthenticationToken(\n        result.accessToken,\n      ),\n    );\n  }\n\n  useEffect(() => {\n    refreshToken();\n  }, [authenticationCall]);\n\n  return (\n    <SafeAreaView\n      style={{\n        width: dimensions.window.width,\n        height: dimensions.window.height,\n        zIndex: 2,\n        position: 'absolute',\n        left: 0,\n        top: 0,\n      }}\n    >\n      <AuthenticatedTemplate>\n        <AuthenticatedViewMain\n          dimensions={dimensions}\n          width={dimensions.window.width}\n        />\n      </AuthenticatedTemplate>\n      <UnauthenticatedTemplate>\n        <Login\n          onGetAuthToken={() => {\n            getAuthToken(true, false);\n          }}\n          onGetGovernmentAuthToken={() => {\n            getAuthToken(true, true);\n          }}\n          width={dimensions.window.width}\n        />\n      </UnauthenticatedTemplate>\n    </SafeAreaView>\n  );\n}\n","/**\n * Pauly React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Dimensions, View } from 'react-native';\nimport { DefaultTheme, PaperProvider } from 'react-native-paper';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Provider, useSelector } from 'react-redux';\n\nimport {\n  SafeAreaProvider,\n  SafeAreaView,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport store, { RootState } from './src/Redux/store';\nimport { dimentionsSlice } from './src/Redux/reducers/dimentionsReducer';\nimport AppMain from './AppMain/AppMain';\nimport { Colors, breakPointMode } from './src/types';\n\nconst windowDimensions = Dimensions.get('window');\nconst screenDimensions = Dimensions.get('screen');\n\nfunction AppCore() {\n  // Dimentions\n  const safeAreaColors = useSelector(\n    (state: RootState) => state.safeAreaColors,\n  );\n  const expandedMode = useSelector((state: RootState) => state.expandedMode);\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [dimensions, setDimensions] = useState({\n    window: windowDimensions,\n    screen: screenDimensions,\n  });\n  const insets = useSafeAreaInsets();\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener(\n      'change',\n      ({ window, screen }) => {\n        setDimensions({ window, screen });\n      },\n    );\n    return () => subscription?.remove();\n  });\n\n  useEffect(() => {\n    const width = dimensions.window.width - insets.left - insets.right;\n    if (width >= 576) {\n      if (expandedMode) {\n        store.dispatch(\n          dimentionsSlice.actions.setDimentionsWidth(width * 0.75),\n        );\n      } else {\n        store.dispatch(dimentionsSlice.actions.setDimentionsWidth(width * 0.9));\n      }\n    }\n  }, [expandedMode]);\n\n  useEffect(() => {\n    const oldWidth = store.getState().dimentions.width;\n    const { height } = store.getState().dimentions;\n    const newWidth = dimensions.window.width - insets.left - insets.right;\n    const newHeight = dimensions.window.height - insets.bottom - insets.top;\n    if (oldWidth !== newWidth) {\n      const oldCurrentBreakPointMode: breakPointMode =\n        store.getState().dimentions.currentBreakPoint;\n      let currentBreakPoint: breakPointMode = breakPointMode.xSmall;\n      if (newWidth >= 1200) {\n        // extraLarge ≥1200px\n        currentBreakPoint = breakPointMode.xLarge;\n      } else if (newWidth >= 992) {\n        // large, ≥992px\n        currentBreakPoint = breakPointMode.large;\n      } else if (newWidth >= 768) {\n        // medium, ≥768px\n        currentBreakPoint = breakPointMode.medium;\n      } else if (newWidth >= 576) {\n        // small, ≥576px\n        currentBreakPoint = breakPointMode.small;\n      } else if (newWidth < 576) {\n        // xSmall,\t<576px\n        currentBreakPoint = breakPointMode.xSmall;\n      }\n      if (oldCurrentBreakPointMode !== currentBreakPoint) {\n        if (newWidth >= 576) {\n          if (expandedMode) {\n            store.dispatch(\n              dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n                width: newWidth * 0.75,\n                currentBreakPoint,\n              }),\n            );\n          } else {\n            store.dispatch(\n              dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n                width: newWidth * 0.9,\n                currentBreakPoint,\n              }),\n            );\n          }\n        } else {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n              width: newWidth,\n              currentBreakPoint,\n            }),\n          );\n        }\n      } else if (newWidth >= 576) {\n        if (expandedMode) {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidth(newWidth * 0.75),\n          );\n        } else {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidth(newWidth * 0.9),\n          );\n        }\n      } else {\n        store.dispatch(dimentionsSlice.actions.setDimentionsWidth(newWidth));\n      }\n    }\n    if (height !== newHeight) {\n      store.dispatch(dimentionsSlice.actions.setDimentionsHeight(newHeight));\n    }\n  }, [dimensions]);\n\n  return (\n    <>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: insets.top,\n          backgroundColor: safeAreaColors.top,\n        }}\n      />\n      <SafeAreaView\n        style={{\n          backgroundColor: safeAreaColors.bottom,\n          width: dimensions.window.width,\n          height: dimensions.window.height - (insets.top + insets.bottom),\n          zIndex: 10,\n          top: insets.top,\n          position: 'absolute',\n        }}\n      >\n        <AppMain dimensions={dimensions} />\n      </SafeAreaView>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: insets.bottom,\n          backgroundColor: safeAreaColors.bottom,\n          position: 'absolute',\n          bottom: 0,\n        }}\n      />\n      {currentBreakPoint >= 1 ? (\n        <View\n          style={{\n            height: dimensions.window.height,\n            width: expandedMode\n              ? dimensions.window.width * 0.25\n              : dimensions.window.width * 0.1,\n            backgroundColor: '#793033',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    // Primary\n    primary: Colors.darkGray, // ALL G\n    primaryContainer: Colors.maroon, // Selected Am Mode\n    onPrimary: Colors.black, // This is special Text\n    onPrimaryContainer: Colors.black,\n    inversePrimary: Colors.white,\n\n    secondary: Colors.black,\n    secondaryContainer: Colors.lightGray, // Back box of selected time or hour\n    onSecondary: Colors.black, // text like if hour or minute is selected\n    onSecondaryContainer: Colors.black,\n\n    // Tertiary\n    tertiary: Colors.darkGray,\n    tertiaryContainer: Colors.darkGray,\n    onTertiary: Colors.darkGray,\n\n    // Background\n    surface: Colors.white, // ALL G\n    surfaceVariant: Colors.lightGray, // ALL G this is the circle\n    onSurfaceVariant: Colors.black, // This is am pm and title text\n    background: Colors.lightGray,\n    onSurface: Colors.black, // This is most text\n    onBackground: Colors.black,\n    backdrop: 'rgba(237, 237, 237, 0.77)',\n\n    outline: Colors.black, // ALL G\n    outlineVariant: Colors.black,\n\n    shadow: Colors.black,\n    scrim: Colors.black,\n  },\n};\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PaperProvider theme={theme}>\n        <SafeAreaProvider>\n          <GestureHandlerRootView style={{ flex: 1 }}>\n            <AppCore />\n          </GestureHandlerRootView>\n        </SafeAreaProvider>\n      </PaperProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [730], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["monthDataSlice","createSlice","name","initialState","reducers","setMonthData","_state","action","payload","setResourcesLastCalled","breakPointMode","loadingStateEnum","postType","dataContentTypeOptions","taskImportanceEnum","taskStatusEnum","resourceResponce","commissionTypeEnum","paulyEventType","recurringType","semesters","submissionTypeEnum","locationStateEnum","calendarMode","resourceMode","Colors","_createClass","_classCallCheck","white","maroon","lightGray","darkGray","black","danger","initalState","top","bottom","safeAreaColorsSlice","setSafeAreaColors","setSafeAreaColorTop","state","_objectSpread","setSafeAreaColorBottom","microsoftProfileDataSlice","uri","displayName","id","setMicrosoftProfileData","currentEventsSlice","setCurrentEvents","_toConsumableArray","pushEvent","concat","removeCurrentEvent","slice","setCurrentEventsLastCalled","Date","toISOString","selectedDateSlice","paulyListSlice","siteId","studentFilesListId","commissionListId","commissionSubmissionsListId","paulyDataListId","scheduleListId","sportsListId","sportsApprovedSubmissionsListId","sportsSubmissionsListId","timetablesListId","resourceListId","eventTypeExtensionId","eventDataExtensionId","classExtensionId","resourceExtensionId","dressCodeListId","roomListId","setPaulyList","authenticationTokenSlice","setAuthenticationToken","setAuthenticationRefreshToken","dimentionsSlice","width","height","currentBreakPoint","setDimentionsWidth","setDimentionsWidthCurrentBreakPoint","setDimentionsHeight","setAuthenticationApiToken","taskDeltaSlice","setTaskDeltaLink","tasksDeltaReducer","reducer","tasksReducer","message","animationSpeed","powerpointBlob","powerpointShare","paulyDataState","loading","paulyDataSlice","setPaulyData","setPaulyDataState","initalResourcesState","resources","loadingState","searchValue","resourceFollow","selectedResourceMode","home","resourcesSlice","setResourceData","pushResource","push","setResources","setResourcesState","setSearchValue","setResourceFollow","setSelectedResourceMode","eventName","createEventState","notStarted","isPickingStartDate","isPickingEndDate","allDay","isGovernmentEvent","selectedTimetable","selectedSchoolDayData","undefined","selectedSchoolYear","selectedEventType","personal","recurringEvent","selectedRecurringType","daily","startDate","endDate","isShowingAddDate","isEditing","selectedCalendarMode","month","selectedEvent","addEventSlice","setEventName","setCreateEventState","setIsPickingStartDate","setIsPickingEndDate","setAllDay","setIsGovernmentEvent","setSelectedTimetable","setSelectedSchoolDayData","setSelectedSchoolYear","setSelectedEventType","setRecurringEvent","setSelectedRecurringType","setStartDate","setEndDate","setIsShowingAddDate","setIsEditing","setSelectedCalendarMode","setSelectedEvent","taskState","userState","trendingState","userData","trendingData","userTasks","importance","normal","status","excess","schoolDayData","startTime","isShowingCompleteTasks","homepageDataSlice","setTaskState","setUserState","setTrendingState","setUserData","setTrendingData","setUserTasks","updateUserTask","index","length","task","unshiftUserTask","unshift","popUserTask","splice","setSchoolDayData","setStartTime","setIsShowingCompletedTasks","expandedModeSlice","setExpandedMode","isShowingProfileBlockSlice","setIsShowingProfileBlock","isGovernmentModeSlice","setIsGovernmentMode","commissionsState","points","currentCommissions","selectedCommission","commissionNextLink","commissionsSlice","setCommissionsState","setPoints","setCurrentCommissions","setSelectedCommission","setCommissionNextLink","pdfDataSlice","inject","images","pageNumber","setInject","addImage","setImages","setPageNumber","increasePageNumber","decreasePageNumber","monthViewSlice","setMonthViewData","authenticationCallSlice","setAuthenticationCallIncrement","searchText","users","usersState","nextLink","studentSearchSlice","setStudentSearch","setStudentUsers","setUsersState","setNextLink","setStudentUserByIndex","user","setStudentUserById","findIndex","e","configureStore","addEvent","addEventReducer","authenticationToken","authenticationTokenReducer","authenticationApiToken","authenticationApiTokenReducer","authenticationRefreshToken","authenticationRefreshTokenReducer","authenticationCall","authenticationCallReducer","commissions","commissionsReducer","currentEvents","currentEventsReducer","currentEventsLastCalled","currentEventsLastCalledReducer","dimentions","dimentionsReducer","expandedMode","expandedModeReducer","homepageData","homepageDataReducer","isGovernmentMode","isGovernmentModeReducer","isShowingProfileBlock","isShowingProfileBlockReducer","microsoftProfileData","microsoftProfileDataReducer","monthData","monthDataReducer","monthView","monthViewReducer","paulyData","paulyDataReducer","paulyList","paulyListReducer","pdfData","pdfDataReducer","resourcesReducer","resourcesLastCalled","resourcesLastCallReducer","safeAreaColors","safeAreaColorsReducer","tasks","tasksDeltaLink","selectedDate","selectedDateReducer","studentSearch","studentSearchReducer","middleware","getDefaultMiddleware","immutableCheck","CalendarIcon","_ref","style","_jsx","View","children","_jsxs","Svg","viewBox","fill","Path","d","fillRule","clipRule","MedalIcon","_ref2","G","strokeWidth","strokeLinecap","strokeLinejoin","Polygon","BookIcon","_ref3","GovernmentIcon","_ref4","HomeIcon","_ref5","UpIcon","_ref6","DownIcon","_ref7","AddIcon","_ref8","CloseIcon","_ref9","props","ChevronLeft","_ref10","ChevronRight","_ref11","FolderIcon","_ref12","stroke","DocumentIcon","_ref13","Rect","x","y","CopyIcon","_ref15","PersonIcon","_ref16","GearIcon","_ref17","GraduationHatIcon","_ref18","WarningIcon","_ref19","outlineColor","Circle","cx","cy","r","SearchIcon","_ref20","WordIcon","_ref21","Defs","LinearGradient","x1","y1","x2","y2","gradientTransform","gradientUnits","Stop","offset","stopColor","opacity","PowerpointIcon","_ref22","ExcelIcon","_ref23","VideoIcon","_ref24","PDFIcon","_ref25","ImageIcon","_ref26","AudioIcon","_ref27","OneNoteIcon","_ref28","fillOpacity","rx","GraphAPILogo","_ref29","ClipPath","clipPath","StudentSearchIcon","_ref30","TimeIcon","_ref31","TrashIcon","_ref32","color","OfflineIcon","_ref33","BoldIcon","_ref34","strokeMiterlimit","ItalicIcon","_ref35","Line","StrikeThroughIcon","_ref36","UnderlineIcon","_ref37","Polyline","RightAlignmentIcon","_ref38","LeftAlignmentIcon","_ref39","CenterAlignmentIcon","_ref40","Login","onGetAuthToken","onGetGovernmentAuthToken","useSelector","_useState","useState","_useState2","_slicedToArray","isBottonHover","setIsButtonHover","_useState3","_useState4","isGovernmentHover","setIsGovernmentHover","_useState5","_useState6","fontSize","setFontSize","_useState7","_useState8","isShowingGovernmentLogin","setIsShowingGovernmentLogin","insets","useSafeAreaInsets","dispatch","useDispatch","useCallback","_setSafeAreaColors","_asyncToGenerator","actions","apply","arguments","useEffect","_useFonts","useFonts","BukhariScript","require","fontsLoaded","SplashScreen","Pressable","backgroundColor","alignContent","alignItems","justifyContent","overflow","onLongPress","delayLongPress","flexDirection","Image","source","resizeMode","position","left","Text","fontFamily","textShadowColor","textShadowOffset","textShadowRadius","selectable","marginTop","onPress","onHoverIn","onHoverOut","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","textAlign","fontWeight","findFirstDayinMonth","currentTime","year","getFullYear","getMonth","getDay","calculateIfShowing","value","Time","dateToCheck","today","getDate","isDateToday","hourInt","getHours","minuiteInt","getMinutes","resepctiveTime","toString","findTimeOffset","time","minutieWidth","orgWideGroupID","tenantId","clientId","domainName","paulyDomain","scopes","raindropToken","callMsGraph","_x","_x2","_x3","_x4","_x5","_callMsGraph","url","method","body","headersIn","secondAuth","headers","Headers","bearer","store","getState","append","headerIndex","key","options","outUrl","Platform","OS","urlArray","split","response","fetch","previousValue","Promise","resolve","unsubscribe","subscribe","result","largeBatch","_largeBatch","defaultBatchData","createData","data","failed","batchIndex","keys","array","createDataIndex","firstUrl","secondUrl","map","forEach","output","batchData","requests","JSON","stringify","ok","batchResultData","json","responses","success","createUUID","dt","getTime","replace","c","Math","random","floor","getTextState","labels","cannotStart","offline","getDressCode","_getDressCode","dressCodeId","dressCodeData","parse","fields","dressCodeIncentivesData","dressCodeName","listId","dressCodeIncentives","getGraphEvents","_getGraphEvents","referenceUrl","newEvents","_loop","_singleValueExtendedP","_singleValueExtendedP2","eventTypeExtensionID","eventDataExtensionID","singleValueExtendedProperties","eventType","find","eventData","subject","start","dateTime","endTime","end","isAllDay","eventColor","paulyEventData","microsoftEvent","microsoftReference","events","getEvent","_getEvent","event","_eventData$find","_eventData$find2","getSchedule","_getSchedule","resultSchedule","properName","scheduleProperName","descriptiveName","scheduleDescriptiveName","periods","scheduleData","scheduleId","scheduleColor","schedule","listItemId","getSchedules","_getSchedules","dataResult","newLoadedSchedules","_unused","getTimetable","_getTimetable","timetableId","timetableDataSchedules","newSchedules","dressCodeResult","timetableDressCodeId","resultingTimetable","timetableName","schedules","days","timetableDataDays","dressCode","timetable","_getSchoolDay","UTC","_ret","_loop2","_eventData$find3","_eventData$find4","_eventData$find5","v","_getSchoolDays","date","firstDay","lastDay","scheduleIds","Map","schoolYearIds","outputIds","set","schoolYearEventId","batchRequestResultSchedule","batchRequest","scheudleIndex","resultScheduleData","scheduleResponseData","_unused2","timetableResult","_x8","_x9","_getTimetablesFromSchoolYears","getTimetablesFromSchoolYears","_ret2","schoolDaysResult","_loop3","get","schoolDay","schoolDayId","semester","dressCodeIncentiveId","batchRequestResultSchoolYear","timetableIds","schoolYearIndex","schoolYearData","perviousTimetable","_unused3","batchRequestResultTimetable","dressCodeIds","responseIndex","_unused4","batchRequestResultDressCode","dressCodes","dressCodeIndex","_batchRequestResultDr","_batchRequestResultDr2","_unused5","timetables","timetableIndex","resultTimetableData","timetableData","timetableSchedules","scheduleIndex","newSchedule","outputTimetables","timetablesArray","item","_createDressCode","Title","MonthBlock","_getDay","daySelected","textval","startdate","let1","day","monthViewData","borderColor","borderWidth","_Fragment","right","shorthand","zIndex","MonthView","Count","input","setFullYear","getDaysInMonth","StartDate","thirtyValue","Array","_loadData","_x7","getSchoolDays","loadData","flexWrap","numberOfLines","getCurrentPaulyData","_getCurrentPaulyData","powerpointId","fileResult","dataBlob","blob","outputResult","URL","createObjectURL","AnimatedPath","Animated","_worklet_9513762084135_init_data","code","location","ChipView","progress","useSharedValue","withDelay","withRepeat","withTiming","duration","animatedProp","useAnimatedProps","_f","interpolateColor","_closure","__initData","__workletHash","translate","animatedProps","ProgressView","path","StyleSheet","create","box","ScrollingTextAnimation","text","pan","useRef","Value","current","childWidth","setChildWidth","loop","sequence","timing","toValue","delay","easing","Easing","linear","useNativeDriver","mainLoop","GochiHand","transform","translateX","ScrollView","horizontal","onLayout","nativeEvent","layout","adjustsFontSizeToFit","HomePage","navigate","useNavigate","_useSelector2","_useSelector3","borderTopColor","borderTopWidth","borderBottomColor","borderBottomWidth","margin","aspectRatio","_getUsersLocation","commission","Location","requestForegroundPermissionsAsync","permissionDenied","getCurrentPositionAsync","mocked","mockedLocation","coordinateLat","coordinateLng","proximity","getDistance","lat","coords","latitude","lng","longitude","latCoordinate","lngCoordinate","notCloseEnough","_b64toBlob","b64Data","_addImage","base64","fileBlob","b64toBlob","types","type","rootIdResult","rootIdData","imageUUID","resumableSessionData","deferCommit","resumableSessionResult","resumableSessionResultData","uploadUrl","nextExpectedRanges","nextExpectedRange","remaining","size","uploaded","uploadBlob","uploadResult","uploadCompleteResult","uploadCompleteResultData","createLinkResult","scope","createLinkData","shareId","claimCommissionPost","_x6","_claimCommissionPost","auth","commissionId","imageShare","outResult","Authorization","CommissionClaim","imageData","claimCommissionState","setClaimCommissionState","instance","useMsal","_claimCommission","apiResult","acquireTokenSilent","outImageUrl","ImageLocation","outImage","locationResult","getUsersLocation","accessToken","claimCommission","marginLeft","marginRight","getCommission","_getCommission","itemId","title","hidden","commissionID","postData","teamId","postTeamId","channelId","postChannelId","postId","timed","maxNumberOfClaims","allowMultipleSubmissions","submissionsCount","claimCount","reviewedCount","WebViewCross","html","rawHtml","adaptHeight","setAdaptHeight","WebView","automaticallyAdjustContentInsets","javaScriptEnabled","injectedJavaScript","onMessage","parseFloat","dangerouslySetInnerHTML","__html","CameraResult","CommissionsView","onClose","_useSelector","commissionData","setCommissionData","commissionState","setCommissionState","setMessageState","messageData","setMessageData","_useState9","_useState10","imageUri","setImageUri","_useState11","_useState12","takeImageState","setTakeImageState","_useState13","_useState14","pickImageState","setPickerImageState","_useState15","_useState16","isOverflowing","setIsOverflowing","_useState17","_useState18","evaluatedOverflow","setEvaluatedOverflow","_useState19","_useState20","imageHeight","setImageHeight","_getPost","messageId","content","_getCommissionInformation","_result$data","getPost","_pickImage","ImagePicker","launchImageLibraryAsync","allowsMultipleSelection","allowsEditing","mediaTypes","Images","canceled","assets","getSize","imageMeasureWidth","imageMeasureHeight","_ImagePicker$useCamer","useCameraPermissions","_ImagePicker$useCamer2","requestPermission","takeImage","_takeImage","GRANTED","launchCameraAsync","canAskAgain","granted","goToSettings","getCommissionInformation","paddingLeft","pickImage","marginBottom","getPointsBatch","_getPointsBatch","outputRequests","pointsResult","requestIndex","_getPoints","nextUrl","submissionResultClaimed","submissionResultClaimedData","submissionApproved","batchResult","_getSubmissions","commissionIds","outputMap","requestData","dataIndex","respone","valueIndex","has","mapData","subApproved","subReviewed","submissionReviewed","getCommissions","_getCommissions","claimed","_getUnclaimedCommissions","getUnclaimedCommissions","filter","getFilter","commissionsIds","submissions","getSubmissions","resultCommissions","submissionData","getCommissionsBatch","_getCommissionsBatch","commissionsResult","parseInt","commissionsMap","count","commissionsBatchData","outCommissions","BackButton","to","Commissions","_useSelector4","isHoverPicker","setIsHoverPicker","pointResult","getPoints","loadCommissionData","_loadCommissionData","FlatList","renderItem","elevation","toLocaleDateString","minute","keyExtractor","onEndReachedThreshold","onEndReached","initialNumToRender","showsHorizontalScrollIndicator","PickerPiece","_useSelector5","isSelected","setIsSelected","getUsersTasks","_getUsersTasks","deltaRunAgain","deltaMode","tasksResult","taskData","resultTasks","high","low","inProgress","completed","waitingOnOthers","deferred","_getInsightData","usedResult","userOutData","webUrl","resourceReference","resourceVisualization","trendingResult","trendingOutData","_worklet_17468625320245_init_data","AnimatedCheckMarkPath","checkMarkColor","checked","checkMarkAnimation","strokeDashoffset","strokeDasharray","_worklet_8732131500673_init_data","CustomCheckBox","useDerivedValue","inOut","bezierFn","PDFJS","workerSrc","_worklet_7922200678359_init_data","_worklet_4482853661007_init_data","_worklet_11315627200092_init_data","PDFView","_convertPdfToImages","file","Blob","docInitParams","pdf","promise","canvas","document","createElement","i","numPages","page","getPage","viewport","getViewport","scale","context","getContext","render","canvasContext","toDataURL","remove","convertPdfToImages","singleTap","Gesture","Tap","onEnd","_event","doubleTap","numberOfTaps","taps","Exclusive","fling","Fling","compound","Simultaneous","GestureDetector","gesture","wordTypes","excelTypes","powerpointTypes","MimeTypeIcon","mimeType","includes","getRooms","_getRooms","search","searchFilter","resultArray","roomName","roomId","_getRoom","feilds","ro0mId","getClasses","_getClasses","classQuery","batchDataRequests","classResult","classData","classes","periodData","room","schoolYearId","semesterOne","_getClassEvents","scheduleResult","outputEvents","order","period","setHours","startHour","setMinutes","startMinute","setSeconds","endHour","endMinute","sort","a","b","getClassEventsFromDay","_getClassEventsFromDay","getSchoolDay","_eventResult$data","eventResult","dressCodeIncentive","getClassEvents","startTimeDate","hourTime","monthTime","Notifications","insightResult","getInsightData","taskResult","WidgetView","BoardBlock","TaskBlock","InsightsBlock","_useSelector6","_useSelector7","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","TaskItem","DeleteTask","onDelete","paddingRight","setChecked","setUpdateTaskState","_useSelector9","currentText","setCurrentText","mounted","setMounted","updateTaskStatus","_updateTaskStatus","newItem","Object","assign","console","log","_updateText","_deleteTask","_checkUpdateText","taskNameSave","setTimeout","updateText","checkUpdateText","Swipeable","renderRightActions","deleteTask","paddingTop","paddingBottom","TextInput","onChangeText","newTask","multiline","_useSelector10","_useSelector11","_useSelector12","TrendingFiles","PopularFiles","_useSelector13","_useSelector14","Linking","openURL","_useSelector15","_useSelector16","convertResourceModeString","convert","sports","advancement","schoolEvents","annoucments","fitness","_getResourceFollows","resourceGroupId","resourceConversationId","getAttachments","_getAttachments","attachments","attachmentIndex","contentType","attachmentResult","attachmentData","attachmentGetResult","parentReference","driveId","attachmentGetResultData","_getResources","category","getResourceFollows","categoryString","categoryFilter","batchCount","resourceRsp","resourceResponceData","responceIndex","resourceResponceDataBody","channelIdentity","outputData","conversationId","_getResourcesSearch","searchPayload","entityTypes","query","queryString","from","enableTopResults","searchResult","searchData","hitsContainers","hits","resource","getResource","_getResource","groupId","found","notFound","_getScholarships","scholarships","note","link","cover","_getNewsPosts","outputPosts","excerpt","ResourcesNews","posts","setPosts","postState","setPostState","selectedPost","setSelectedPost","loadArticles","_loadArticles","getNewsPosts","post","checkIfResourceDataJustAttachment","ResourceBlock","_resource$item$attach","setIsShowingCategoryView","attachment","ScholarshipBlock","setHeight","imgWidth","imgHeight","ResourceScholarships","scholarState","setScholarState","setScholarships","getScholarships","Resources","isShowingCategoryView","getResources","SearchBox","news","files","GovernmentCategoryView","_useSelector8","categoryState","setCategoryState","selectedCategory","setSelectedCategory","_addCategory","addCategory","_useState21","_useState22","outlineStyle","searchValueSave","getResourcesSearch","placeholder","placeholderTextColor","enterKeyHint","inputMode","alignSelf","signOutWeb","account","logoutPopup","Settings","imageLoadState","setImageLoadState","discovery","useAutoDiscovery","signOut","getActiveAccount","revokeAsync","token","signOutNative","onError","error","Block","imageSource","Government","mainWidth","setMainWidth","fivePercent","textAlignVertical","verticalAlign","rowGap","columnGap","selectedIndex","onSetSelectedIndex","compoentWidth","Children","setValue","React","child","getTeams","_getTeams","groupResult","groupResultData","getChannels","_getChannels","selected","_getPosts","graphMode","MicrosoftGraphOverview","lists","setLists","groups","setGroups","extensions","setExtensions","applicationExtensions","setApplicationExtensions","list","selectedGraphMode","setSelectedGraphMode","mode","useParams","groupLoadingState","setGroupLoadingState","listLoadingState","setListLoadingState","schemaLoadingState","setSchemaLoadingState","_getLists","incomingLists","_getExtensions","schemaExtensionsUrl","resultData","description","applicationResult","applicationData","group","extension","getLists","getExtensions","Link","PickerWrapper","MicrosoftGraphCreateList","columns","setColumns","listName","setListName","isListHidden","setIsListHidden","isShowingTypeWindow","setIsShowingTypeWindow","selectedColumnType","setSelectedColumnType","isHidden","setIsHidden","newColumnName","setNewColumnName","_createList","columnData","newData","listData","contentTypesEnabled","template","Button","allowMultipleLines","appendChangesToExistingText","linesForEditing","maxLength","textType","newColumn","createList","submissionType","approved","unApproved","unReviewed","convertSubmissionTypeToFilter","batchRequests","userId","defineProperty","userName","submissionTime","submittedTime","submissionId","reviewed","submissionImage","GovernmentCommissions","setCommissions","CommissionBlock","unclaimedState","setUnclaimedState","unclaimedCount","setUnclaimedCount","_loadData2","SegmentedPicker","setSelectedIndex","setComponentWidth","option","center","MapWeb","onSetSelectedPositionIn","selectedPositionIn","isLoaded","useJsApiLoader","googleMapsApiKey","selectedPosition","setSelectedPosition","containerStyle","setContainerStyle","GoogleMap","mapContainerStyle","zoom","onClick","ev","latLng","Marker","radius","styles","container","flex","Box","containerWidth","valueRef","currentValue","containerWidthRef","lastValue","panResponder","PanResponder","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderMove","evt","gestureState","dx","valueRead","adding","newValue","onPanResponderRelease","panHandlers","Slider","getFileWithShareID","_getFileWithShareID","shareID","image","video","_updateCommission","isCreating","commissionName","isTimed","selectedCommissionType","selectedPostId","selectedTeamId","selectedChannelId","commissionItemId","QRCode","qrCodeData","datePickingMode","GovernmentEditCommission","submitCommissionState","setSubmitCommissionState","Issued","setSelectedCommissionType","setCommissionName","setProximity","none","currentDatePickingMode","setCurrentDatePickingMode","setSelectedPositionIn","setMaxNumberOfClaims","_useState23","_useState24","setAllowMultipleSubmissions","_useState25","_useState26","setIsTimed","_useState27","_useState28","setCommissionItemId","_useState29","_useState30","setGetCommissionResult","_useState31","_useState32","deleteCommissionResult","setDeleteCommissionResult","_useState33","_useState34","setSelectedTeamId","_useState35","_useState36","setSelectedChannelId","_useState37","_useState38","setSelectedPostId","_useState39","_useState40","setIsCreating","_deleteCommission","_loadUpdateCommission","_x10","_x11","_x12","_x13","_x14","_x15","_x16","_x17","updateCommission","keyboardType","TimePickerModal","hours","minutes","visible","onDismiss","onConfirm","newDate","DatePickerModal","locale","label","oldDate","PostSelectionContainer","CommissionSubmissions","loadUpdateCommission","deleteCommission","postPickingMode","_useState41","team","_useState42","currentPostPickingMode","setCurrentPostPickingMode","GroupSelection","onSelect","channel","ChannelSelection","onBack","PostSelection","_useState43","_useState44","_useState45","_useState46","_useState47","_useState48","groupsState","setGroupsState","_useState49","_useState50","_useState51","_useState52","_useState53","_useState54","_useState55","_useState56","channelState","setChannelState","_useState57","_useState58","channels","setChannels","_loadData3","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","postsState","setPostsState","_useState65","_useState66","_loadData4","getPosts","padding","_useState67","_useState68","submissiosState","setSubmissionsState","_useState69","_useState70","setSubmissions","_useState71","_useState72","selectedSubmissionMode","setSelectedSubmissionMode","_useState73","_useState74","selectedSubmission","setSelectedSubmisson","_loadData5","secondResult","all","submission","weekday","hour","second","SubmissionView","setSubmissionData","_useState75","_useState76","changeState","setChangeState","_useState77","_useState78","imageState","setImageState","_useState79","_useState80","_useState81","_useState82","setImgHeight","_changeSubmissionApproved","_loadImage","shareResult","loadImage","changeSubmissionApproved","getSports","_getSports","sportName","sportId","svgData","sportSvg","getSportsTeams","_getSportsTeams","teamName","season","_getSport","newMediaSubmissions","User","accepted","fileId","itemID","selectedSportId","fileType","_getSportsContent","newSportsPosts","shareResultsPromise","microsoftFile","shareResults","_index","caption","youtubeVideo","_getRoster","playerId","outUsers","_batchResult$data$_in","_batchResult$data$_in2","outputRosters","_index3","imageShareId","playerNumber","SVGXml","xml","YouTubeVideo","_React$PureComponent","_inherits","_super","_createSuper","_this","_len","args","_key","call","componentDidMount","window","YT","loadVideo","tag","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","player","Player","videoId","playerVars","onReady","onPlayerReady","target","playVideo","oldProps","this","propTypes","PropTypes","isRequired","SportsYoutube","YoutubeWeb","Sports","sportsPosts","setSportsPosts","loadingResult","setLoadingResult","sportsState","setSportsState","setTeamsState","selectedSport","setSelectedSport","selectedTeam","setSelectedTeam","isShowingTeams","setIsShowingTeams","setSports","isShowingRoster","setIsShowingRoster","sportsTeams","setSportsTeams","sportsSelectHeight","setSportsSelectHeight","_loadSports","_loadTeams","sport","_loadSportsContent","getSportsContent","loadSports","loadSportsContent","loadTeams","RosterView","SportsPostBlock","Video","useNativeControls","ResizeMode","COVER","videoStyle","rosterLoadingState","setRosterLoadingState","roster","setRoster","_loadRoster","getRoster","loadRoster","_useFonts3","RosterImage","imageUrl","setImageUrl","imageId","DayView","colorScheme","useColorScheme","heightOffsetTop","setHeightOffsetTop","currentMinuteInt","setCurrentMinuteInt","setCurrentTime","isShowingTime","hourLength","setHourLength","mainScrollRef","eventsPane","setEventsPane","setSchoolEvents","setCurrentTimeFunction","minuite","_getClassesEvents","interval","setInterval","updateOnTimeChange","clearInterval","_mainScrollRef$curren","currentDate","resultHeightTopOffset","scrollTo","animated","loadCalendarContent","getClassesEvents","ref","EventBlock","eventPane","setEventPane","EventHeight","fromDate","toDate","delta","computeEventHeight","Offset","setHorizontalShift","handeled","horizontalCheck","beforeIndex","afterIndex","calculateHorizontalShift","borderLeftWidth","toLocaleString","Week","selectedDateRedux","daysOfWeek","setDaysOfWeek","week","setDate","getDOW","SelectTimetable","governmentMode","setLoadingState","loadedTimetables","setLoadedTimetables","_getTimetables","newLoadedTimetables","getTimetables","pickSchoolDayMode","SelectSchoolDayData","schoolYear","schoolDayMode","setSchoolDayMode","timetableState","setTimetableState","setTimetable","SchoolYearsSelect","SchoolDaySelect","ScheduleSelect","DressCodeSelect","semesterTwo","DressCodeIncentivesSelect","currentEventsSchoolYear","setCurrentEventsSchoolYear","_getData","furtherResult","getData","incentive","_createEvent","timeZone","dataOut","resultEvent","_store$getState$addEv","newEndDate","_schoolDay$dressCodeI","_schoolDay$dressCodeI2","selectedSchoolDayDataCompressed","AddEvent","_deleteEvent","DateAndTimeSection","GovernmentCalendarOptions","updateEvent","deleteEvent","endDatePickerVisable","setEndDatePickerVisable","startDatePickerVisable","setStartDatePickerVisable","CalendarTypePicker","fadeIn","sqrt","_getEvents","Calendar","getEvents","TopView","MonthViewMain","daysInWeek","DOW","fontScale","useWindowDimensions","firstDayWeek","monthDataResult","checkStart","checkEnd","indexEvent","endTimeDate","showing","dayData","getMonthData","valueRow","CalendarCardView","calendarWidth","getBackgroundColor","getTextBackgroundColor","GovernmentHandleFileSubmissions","currentMediaSubmissions","setCurrentMediaSubmissions","loadingSubmissionsState","setLoadingSubmissionsState","GovernmentSports","currentSports","setCurrentSports","setDataResult","GovernmentCreateNewSport","setSportName","setSvgData","createSportLoadingState","setCreateSportLoadingState","_createSport","newSportID","required","number","indexed","enforceUniqueValues","createSport","SportsUpdateModel","isPickingSvg","setIsPickingSvg","setListId","getSportState","setGetSportState","updateSportState","setUpdateSportState","_updateSport","updateData","_loadSport","getSport","loadSport","Modal","animationType","updateSport","GovernmentSportsTeams","_useParams","currentTeams","setCurrentTeams","deleteSportState","setDeleteSportState","_deleteSport","getSportResult","getSportData","deleteSport","_getUserMicrosoftFiles","newFiles","lastModified","lastModifiedDateTime","folder","parentDriveId","parentPath","itemGraphPath","callPath","_getUserTeams","teamDescription","MicrosoftUploadModeType","onSetIsShowingUpload","onSetIsShowingMicrosoftUpload","onSelectedFile","usersTeams","setUsersTeams","Personal","selectedMicrosoftUploadMode","setSelectedMicrosoftUploadMode","shareLinkString","setShareLinkString","_loadUserTeams","getUserTeams","_getShareFile","shareLink","loadUserTeams","Picker","ShareLink","Site","PersonalBlock","base64Value","btoa","trimEnd","getShareFile","TeamsBlock","userTeams","teamFileMode","usersFiles","setUsersFies","microsoftPath","setMicrosoftPath","fileBackAvaliable","setFilesBackAvaliable","getFilesState","setGetFilesState","loadGetUserMicrosoftFiles","_loadGetUserMicrosoftFiles","getUserMicrosoftFiles","microsftPathArray","pop","outputString","GovernmentCreateNewTeam","createTeamLoadingState","setCreateTeamLoadingState","teamDataState","setTeamDataState","isCreatingTeam","setIsCreatingTeam","setTeamName","setSeason","teamListItemId","setTeamListItemId","teams","setTeams","setTeamsNextLink","selectedMicrosoftTeam","setSelectedMicrosoftTeam","isSelectingFile","setIsSelectingFile","selectedFile","setSelectedFile","_loadMicrosftTeams","_updateTeam","newTeamId","microsoftTeamId","dependsOn","_deleteTeam","_getMicrosoftTeam","getMicrosoftTeamId","_getTeamData","teamResult","getMicrosoftTeam","loadMicrosftTeams","getTeamData","RosterBlock","deleteTeam","updateTeam","RosterSelectFile","membersState","setMembersState","members","setMembers","_getMembers","teamResultData","rosters","teamIndex","save","shift","getMembers","member","RosterBlockItem","rosterState","setRosterState","callingSelectedFile","setIsCallingSelectedFile","_createMemberItem","updatePlayerData","_updatePlayerData","createMemberItem","onFocus","onBlur","MicrosoftFilePicker","_getYoutubeVideos","pageToken","thumbnail","nextPageToken","YoutubeVideosSelector","ytVideos","setytVideos","ytState","setytState","nextPage","setNextPage","getYoutubeVideos","GovernmentSportsTeamAddPost","setFileId","postName","setPostName","postSubmissionState","setPostSubmissionState","setSelectedSportId","postMode","setPostMode","_getShareLink","itemPathArray","_createFileSubmission","userIdResult","submissionID","timeCreated","PickSportTeam","SegmentedButtons","buttons","getShareLink","createFileSubmission","setSportTeams","sportTeamState","setSportTeamState","getDenyText","GovernmentReviewFileSubmission","dataURL","setDataURL","unknown","dataContentType","setDataContentType","currentSubmissionInfomration","setCurrentSubmissionInformation","approveSubmissionState","setApproveSubmissionState","denySubmissionState","setDenySubmissionState","setDeleteState","_deleteSubmission","_getSubmissionInformation","_approveSubmission","newInformation","_denySubmission","_loadFile","getSubmissionInformation","loadFile","deleteSubmission","approveSubmission","denySubmission","GovernmentCalendar","GovernmentSchedule","loadedSchedules","setLoadedSchedules","_loadSchedules","loadSchedules","GovernmentTimetable","isValidHexaCode","test","setScheduleListId","setScheduleProperName","setScheduleDescriptiveName","newPeriods","setNewPeriods","setColor","isPickingColor","setIsPickingColor","isCreatingSchedule","setIsCreatingSchedule","createScheduleLoadingState","setCreateScheduleLoadingState","loadScheduleState","setLoadScheduleState","deleteState","_submitSchedule","_deleteFunction","_loadFunction","loadFunction","PeriodBlock","onSetNewPeriods","out","ColorPicker","onComplete","hex","InputWidget","disableAlphaChannel","defaultFormat","formats","inputTitleStyle","display","Preview","hideText","hideInitialColor","borderTopRightRadius","borderBottomRightRadius","Panel1","renderThumb","CustomColorThumb","diameter","HueSlider","submitSchedule","deleteFunction","isSelectingStartTime","setIsSelectingStartTime","isSelectingEndTime","setIsSelectingEndTime","update","newNewPeriodsArray","indexToRemove","deleteItem","_worklet_11564229163699_init_data","animatedStyle","useAnimatedStyle","currentColor","positionStyle","GovernmentClasses","classState","setClassState","setClasses","classMap","_getSchoolYears","Dropdown","expandedStyle","setExpanded","expanded","isExpanded","setIsExpanded","GovernmentClassesEdit","selectedSemester","setSelectedSemester","className","setClassName","roomSearchText","roomsNextLink","setRoomsNextLink","rooms","setRooms","roomsState","setRoomsState","selectedRoom","setSelectedRoom","schoolYearState","setSchoolYearState","schoolYearNextLink","setSchoolYearNextLink","schoolYears","setSchoolYears","updateClassState","setUpdateClassState","isShowingClassConfirmMenu","setIsShowingClassConfirmMenu","setPeriods","_getClass","extensionData","semesterId","roomResult","getRoom","_loadRooms","_loadSchoolYears","getSchoolYears","_loadTimetable","newArray","_updateClass","loadTimetable","getClass","loadRooms","loadSchoolYears","dayIndex","DayBlock","updateClass","setSelected","flatMap","_item","GovernmentHomePage","setLoadContentLoadingState","setNewMessageState","newMessageText","setNewMessageText","selectedPowerpoint","setSelectedPowerpoint","isAutoUpdatingText","setIsAutoUpdatingText","_loadCurrentPaulyData","_createShareId","updatePaulyData","_updatePaulyData","storeText","loadCurrentPaulyData","createShareId","NavBarBlock","des","blockLength","setIsExpandedMode","isHover","setIsHover","navigation","LinkStyle","NavBarComponent","setBlockLength","iconLength","setIconLength","pointerEvents","PageNotFound","paulyListData","paulyDataData","addDataArray","targetTypes","owner","properties","urlOne","boolean","urlTwo","_initializePaulyPartOne","secondUserId","currentUsersIdResult","createGroupData","groupTypes","mailEnabled","mailNickname","visibility","securityEnabled","createGroupResult","createGroupResultData","initializePaulyPartTwo","_initializePaulyPartTwo","teamsData","initializePaulyPartThree","_initializePaulyPartThree","getTeam","getRootSiteIdResult","getRootSiteIdResultData","paulyListNewData","secondRun","getPaulyListResult","getPaulyListResultData","callData","paulyDataResult","paulyDataResultData","addPaulyListResult","initStage","GovernmentAdmin","selectedUser","setSelectedUser","timeLeft","setTimeLeft","timeElapsed","setTimeElapsed","createdGroupId","setCreatedGroupId","selectedUpdates","setSelectedUpdates","partOneStartTime","setPartOneStartTime","partTwoStartTime","setPartTwoStartTime","initResult","setInitResult","initTwoResult","setInitTwoResult","initThreeResult","setInitThreeResult","currentInitStage","setCurrentInitStage","_initializePauly","partOne","partOneResult","initializePaulyPartOne","partTwoLoad","reject","partTwo","done","partThreeLoad","partThree","thirdResult","_initializePaulyFromPartTwo","_initializePaulyFromPartThree","miliSecondsPassed","totalSecondsLeft","minutesLeft","secondsLeft","ceil","minutesLeftString","secondsLeftString","totalMinutesPast","minutesPast","hoursPast","secondsPast","hoursLeftString","UserBlock","initializePauly","initializePaulyFromPartTwo","addData","newSelectedUpdates","initializePaulyFromPartThree","currentUserId","setCurrentUserId","loadedUsers","setLoadedUsers","loadUsersResult","setLoadUsersResult","_getUserId","getUsers","_getUsers","newUsers","getUserId","GovernmentRooms","roomState","setRoomState","GovermentRoomsCreate","createRoomState","setCreateRoomState","setRoomName","_createRoom","items","createRoom","MicrosoftGraphEditList","currentColumns","setCurrentColumns","isCoppiedToClipboard","setIsCoppiedToClipboard","_getListItems","_indexColumn","columnId","newColumnData","_getColumns","newCurrentColumns","columnGroup","readOnly","getListItems","getColumns","Clipboard","setStringAsync","indexColumn","MicrosoftGraphEditGroup","deleteGroupLoadingState","setDeleteGroupLoadingState","_deleteGroup","deleteGroup","MicrosoftGraphEditExtension","deleteExtensionLoadingState","setDeleteExtensionLoadingState","_deleteExtension","deleteExtension","MicrosoftGraphEdit","TextEditorHeader","GovernmentResourcesPost","ChannelBlock","onUpdate","selectedGroup","isLoading","setIsLoading","_addChannel","_removeChannel","itemResult","addChannel","removeChannel","GroupBlock","setSelectedGroup","_loadChannels","loadChannels","newChannels","GovernmentResources","getTeamsState","setGetTeamsState","isShowingEditor","setIsShowingEditor","resultGroups","onRequestClose","ListItem","getDressCodeData","_getDressCodeData","newDressCodes","GovernmentDressCode","getDressCodeState","setGetDressCodeState","setDressCodes","DressCodeBlock","setDressCodeData","selectedDressCodeId","setSelectedDressCodeId","newDressCodeData","GovernmentDressCodeEdit","setDressCodeName","setDressCodeListId","createDressCodeState","setCreateDressCodeState","_loadCreateDressCode","createDressCode","setDressCodeState","isCreatingDressCode","setIsCreatingDressCode","deleteDressCodeState","setDeleteDressCodeState","_deleteDressCode","loadCreateDressCode","deleteDressCode","GovernmentTimetableEdit","dressCodeState","createTimetableLoadingState","setCreateTimetableLoadingState","setTimetableName","selectedSchedules","setSelectedSchedules","selectedDressCode","setSelectedDressCode","schoolDays","setSchoolDays","selectedDefaultSchedule","setSelectedDefaultSchedule","_createTimetable","scheduals","timetableDefaultScheduleId","_getDressCodes","getDressCodes","ScheduleBlock","SchoolDays","createTimetable","SchoolDayItem","newSchoolDays","saveCurrent","scheduleState","setScheduleState","ProfileBlock","checkIfStudent","role","reversed","reverse","join","reverseYearTwelve","reverseYearEleven","reverseYearTen","reverseYearNine","grade","userIds","imagesIdsMap","imageIdsArray","batchResultDownloadUrls","imagesDownloadUrls","thumbnails","c300x400_crop","outputUsers","imageDownloadUrl","mail","student","_getStudentData","createdTime","_changeStudentSelection","selectedFileListId","fileData","fileIndex","newFileData","_removeStudentSelection","getNumberOfBlocks","Students","_loadUsers","loadUsers","StudentBlock","numColumns","_getImage","newUser","updateStateUser","urlOut","imageDataUrl","calculateMarginEnds","widthIn","side","numberOfBlocks","widthRemaining","getImage","timer","ms","res","siteResult","siteData","copyPayload","copyResult","copyData","notComplete","resourceId","copyFetch","copyFetchData","getItemResult","getItemData","studentData","SelectMainFile","setFilePickingMode","setFileData","fileState","setFileState","setSelectedFileListId","getStudentData","selectedFileList","filePickingModeEnum","StudentSelectFileBlock","updateState","setUpdateState","_callRemoveSelection","removeStudentSelection","_callChangeSelection","changeStudentSelection","callRemoveSelection","callChangeSelection","GovernmentStudents","StudentItem","filePickingMode","select","transparent","StudentsSelectFile","isReviewing","setIsReviewing","addImageState","setAddImageState","_loadAddImage","loadAddImage","LoadingView","setOveride","isShowingLogout","setIsShowingLogout","isConnected","setIsConnected","_checkIfConnected","Network","getNetworkStateAsync","isInternetReachable","intervalId","checkIfConnected","AuthenticatedView","dimensions","overide","LoadingScreen","NativeRouter","Routes","Route","element","GovernmentRoomsCreate","GovernmentSchedual","GovernmentScheduleEdit","GovernmentSportTeamEdit","getPaulyLists","_getPaulyLists","paulyListResult","paulyListResultData","getUserProfile","_getUserProfile","profileResult","profileData","validateGovernmentMode","_validateGovernmentMode","userResult","teamsResult","AsyncStorage","setItem","_checkIfGovernmentMode","getItem","_setWantGovernment","getWantGovernment","_getWantGovernment","pca","PublicClientApplication","authority","redirectUri","href","AppMain","MsalProvider","SafeAreaView","AuthDeep","getAuthToken","_getAuthToken","userInitated","government","setWantGovernment","accounts","getAllAccounts","setActiveAccount","checkIfGovernmentMode","addEventCallback","EventType","LOGIN_SUCCESS","handleRedirectPromise","then","authResult","loginRedirect","catch","err","_refreshToken","refreshToken","AuthenticatedTemplate","AuthenticatedViewMain","UnauthenticatedTemplate","windowDimensions","Dimensions","screenDimensions","AppCore","screen","setDimensions","subscription","addEventListener","oldWidth","newWidth","newHeight","oldCurrentBreakPointMode","xSmall","xLarge","large","medium","small","theme","DefaultTheme","roundness","colors","primary","primaryContainer","onPrimary","onPrimaryContainer","inversePrimary","secondary","secondaryContainer","onSecondary","onSecondaryContainer","tertiary","tertiaryContainer","onTertiary","surface","surfaceVariant","onSurfaceVariant","background","onSurface","onBackground","backdrop","outline","outlineVariant","shadow","scrim","Provider","PaperProvider","SafeAreaProvider","GestureHandlerRootView","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","t","ns","def","indexOf","getOwnPropertyNames","definition","o","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}