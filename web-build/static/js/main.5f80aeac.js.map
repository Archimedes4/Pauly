{"version":3,"file":"static/js/main.5f80aeac.js","mappings":"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","sources":["src/Redux/reducers/monthDataReducer.ts","src/Redux/reducers/resourcesLastCallReducer.ts","src/types.ts","src/Redux/reducers/safeAreaColorsReducer.ts","src/Redux/reducers/microsoftProfileDataReducer.ts","src/Redux/reducers/currentEventReducer.ts","src/Redux/reducers/currentEventLastCalledReducer.ts","src/Redux/reducers/selectedDateReducer.ts","src/Redux/reducers/paulyListReducer.ts","src/Redux/reducers/authenticationTokenReducer.ts","src/Redux/reducers/authenticationRefreshTokenReducer.ts","src/Redux/reducers/dimentionsReducer.ts","src/Redux/reducers/authenticationApiToken.ts","src/Redux/reducers/tasksReducers.ts","src/Redux/reducers/paulyDataReducer.ts","src/Redux/reducers/resourcesReducer.ts","src/Redux/reducers/addEventReducer.ts","src/Redux/reducers/homepageDataReducer.ts","src/Redux/reducers/expandedModeReducer.ts","src/Redux/reducers/isShowingProfileBlockReducer.ts","src/Redux/reducers/isGovernmentModeReducer.ts","src/Redux/reducers/commissionsReducer.ts","src/Redux/reducers/pdfDataReducer.ts","src/Redux/reducers/monthViewReducer.ts","src/Redux/reducers/authenticationCallReducer.ts","src/Redux/reducers/studentSearchReducer.ts","src/Redux/store.ts","src/UI/Icons/Icons.tsx","src/UI/ProgressView.tsx","src/login.tsx","src/Functions/calendar/calendarFunctions.ts","src/PaulyConfig.ts","src/Functions/ultility/microsoftAssets.ts","src/Functions/ultility/batchRequest.ts","src/Functions/ultility/createUUID.ts","src/Functions/homepage/getDressCode.ts","src/Functions/calendar/calendarFunctionsGraph.ts","src/AuthenticatedView/MonthView.tsx","src/Functions/homepage/getCurrentPaulyData.ts","src/UI/ScrollingTextAnimation.tsx","src/AuthenticatedView/HomePage.tsx","src/Functions/commissions/getLocation.ts","src/Functions/commissions/claimCommissionsFunctions.ts","src/AuthenticatedView/Commissions/CommissionClaim.web.tsx","src/Functions/commissions/getCommission.ts","src/UI/WebViewCross.tsx","src/AuthenticatedView/Commissions/CommissionsView.tsx","src/Functions/commissions/getPoints.ts","src/Functions/commissions/getCommissions.ts","src/UI/BackButton.tsx","src/AuthenticatedView/Commissions/Commissions.tsx","src/Functions/homepage/getUsersTasks.ts","src/Functions/homepage/getInsightData.ts","src/UI/CheckMark/AnimatedCheckMarkPath.tsx","src/UI/CheckMark/CustomCheckBox.tsx","src/UI/PDF/PDFView.web.tsx","src/UI/Icons/MimeTypeIcon.tsx","src/Functions/classesFunctions.ts","src/AuthenticatedView/Notifications.tsx","src/Functions/getResources.ts","src/AuthenticatedView/ResourcesNews.tsx","src/AuthenticatedView/Resources.tsx","src/AuthenticatedView/Profile/Settings.tsx","src/AuthenticatedView/Profile/Government/Government.tsx","src/UI/Pickers/Picker.tsx","src/Functions/microsoftGroupsFunctions.ts","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphOverview.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphCreateList.tsx","src/Functions/commissions/getSubmissions.ts","src/AuthenticatedView/Profile/Government/GovernmentCommissions/GovernmentCommissions.tsx","src/UI/Pickers/SegmentedPicker.tsx","src/UI/Map/Map.web.tsx","src/UI/Slider.tsx","src/Functions/ultility/getFileWithShareID.ts","src/Functions/commissions/updateCommission.ts","src/AuthenticatedView/Profile/Government/GovernmentCommissions/GovernmentEditCommission.tsx","src/Functions/sports/sportsFunctions.ts","src/UI/SVGXml/SVGXml.web.tsx","src/UI/youtubeIframeFunction.jsx","src/UI/SportsYoutube.tsx","src/AuthenticatedView/Sports.tsx","src/AuthenticatedView/Calendar/DayView.tsx","src/AuthenticatedView/Calendar/Week.tsx","src/AuthenticatedView/Calendar/SelectTimetable.tsx","src/AuthenticatedView/Calendar/SelectSchoolDayData.tsx","src/Functions/updateEvent.ts","src/AuthenticatedView/Calendar/AddEvent.tsx","src/UI/CalendarTypePicker.tsx","src/Functions/calendar/getEvents.ts","src/AuthenticatedView/Calendar/Calendar.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentHandleFileSubmissions.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSports.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentCreateNewSport.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportsTeams.tsx","src/Functions/microsoftFilePickerFunctions.ts","src/UI/MicrosoftFilePicker.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportTeamEdit.tsx","src/Functions/youtubeFunctions.ts","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportsTeamAddPost.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentReviewFileSubmission.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentCalendar.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentSchedule.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetable.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentScheduleEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClasses.tsx","src/Functions/calendar/getSchoolYears.ts","src/UI/Dropdown.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClassesEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentHomePage.tsx","src/UI/NavComponent.tsx","src/AuthenticatedView/404Page.tsx","src/Functions/initializePauly/initializePaulyData.ts","src/Functions/initializePauly/initializePauly.ts","src/AuthenticatedView/Profile/Government/GovernmentAdminCenter/GovernmentAdmin.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentRooms.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovermentRoomsCreate.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditList.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditGroup.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditExtension.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentResourcesPost/TextEditorHeader.tsx","src/AuthenticatedView/Profile/Government/GovernmentResourcesPost/GovernmentResourcesPost.web.tsx","src/AuthenticatedView/Profile/Government/GovernmentResources.tsx","src/UI/ListItem.tsx","src/Functions/homepage/getDressCodeData.ts","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCode.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/DressCodeBlock.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetableEdit.tsx","src/AuthenticatedView/Profile/ProfileBlock.tsx","src/Functions/studentFunctions.ts","src/AuthenticatedView/Students.tsx","src/Functions/addImage.ts","src/AuthenticatedView/Profile/Government/GovernmentStudents.tsx","src/AuthenticatedView/LoadingScreen.tsx","src/AuthenticatedView/AuthenticatedViewMain.tsx","src/Functions/ultility/getPaulyLists.ts","src/Functions/ultility/getUserProfile.ts","src/Functions/handleGovernmentLogin.ts","AppMain/AppMain.web.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: monthDataType[] = [];\n\nexport const monthDataSlice = createSlice({\n  name: 'monthData',\n  initialState: initalState,\n  reducers: {\n    setMonthData: (_state, action: PayloadAction<monthDataType[]>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default monthDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const resourcesLastCalled = createSlice({\n  name: 'resourcesLastCalled',\n  initialState: initalState,\n  reducers: {\n    setResourcesLastCalled: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default resourcesLastCalled.reducer;\n","// Andrew Mainella\n// Pauly\n// October 3 2023\n\n// types.ts\n// Stores all of paulys types\n\n// From https://getbootstrap.com/docs/5.0/layout/breakpoints/\nexport enum breakPointMode {\n  xSmall, // <576px  ->0\n  small, // ≥576px  ->1\n  medium, // ≥768px  ->2\n  large, // ≥992px  ->3\n  xLarge, // ≥1200px ->4\n}\n\nexport enum loadingStateEnum {\n  loading,\n  success,\n  failed,\n  notStarted,\n  cannotStart,\n  offline,\n}\n\nexport enum postType {\n  microsoftFile,\n  youtubeVideo,\n}\n\nexport enum dataContentTypeOptions {\n  video,\n  image,\n  pdf,\n  unknown,\n}\n\nexport enum taskImportanceEnum {\n  low,\n  normal,\n  high,\n}\n\nexport enum taskStatusEnum {\n  notStarted,\n  inProgress,\n  completed,\n  waitingOnOthers,\n  deferred,\n}\nexport enum resourceResponce {\n  found,\n  notFound,\n  failed,\n}\nexport enum commissionTypeEnum {\n  Issued,\n  Location,\n  Image,\n  ImageLocation,\n  QRCode,\n}\nexport enum paulyEventType {\n  personal,\n  regular,\n  schoolDay,\n  schoolYear,\n  studentCouncil,\n}\n\nexport enum recurringType {\n  daily,\n  weekly,\n  monthly,\n  yearly,\n}\n\nexport enum semesters {\n  semesterOne,\n  semesterTwo,\n}\n\nexport enum submissionTypeEnum {\n  all,\n  unApproved,\n  approved,\n  unReviewed,\n}\n\nexport enum locationStateEnum {\n  success,\n  permissionDenied,\n  notCloseEnough,\n  mockedLocation,\n  notStarted,\n}\n\nexport enum calendarMode {\n  month,\n  week,\n  day,\n}\n\nexport enum resourceMode {\n  home,\n  sports,\n  advancement,\n  schoolEvents,\n  annoucments,\n  fitness,\n  files,\n  news,\n  scholarships,\n}\n\ndeclare global {\n  type addDataType = {\n    data: object;\n    urlOne: string;\n    urlTwo?: string;\n    id: string;\n  };\n  type assignmentTypeQuiz = {\n    id: string;\n    title: string;\n    description: string;\n    assignmentEnum: number;\n    documentRef: string;\n    assignmentDuringClass: boolean;\n    selectedMonth?: number;\n    selectedDay?: number;\n    dueDate?: Date;\n  };\n  type batchResponseType = {\n    method: 'GET' | 'POST';\n    id: string;\n    status: number;\n    headers: object | undefined;\n    body: any | undefined;\n  };\n  type calendarCourseType = {\n    name: string;\n    semester: number;\n    dayA: number;\n    dayB: number;\n    dayC: number;\n    dayD: number;\n    noClass: noClassType[];\n    year: number;\n    assignments: assignmentTypeQuiz[];\n  };\n  type channelType = {\n    id: string;\n    displayName: string;\n    selected: boolean;\n    loading: boolean;\n    error: boolean;\n    description?: string;\n  };\n  type classType = {\n    name: string;\n    id: string;\n    room: roomType;\n    schoolYearId: string;\n    semester: semesters;\n    periods: number[];\n  };\n  type commissionType = {\n    itemId: string;\n    title: string;\n    timed: boolean;\n    points: number;\n    hidden: boolean;\n    maxNumberOfClaims: number;\n    allowMultipleSubmissions: boolean;\n    submissionsCount: number;\n    claimCount: number;\n    reviewedCount: number;\n    commissionId: string;\n    value: commissionTypeEnum;\n    startDate?: string;\n    endDate?: string;\n    proximity?: number;\n    coordinateLat?: number;\n    coordinateLng?: number;\n    postData?: {\n      teamId: string;\n      channelId: string;\n      postId: string;\n    };\n  };\n  type dressCodeIncentiveType = {\n    name: string;\n    description: string;\n    requirementsDescription: string;\n    id: string;\n  };\n  type dressCodeDataType = {\n    name: string;\n    description: string;\n    id: string;\n  };\n  type dressCodeType = {\n    name: string;\n    id: string;\n    listId: string;\n    dressCodeData: dressCodeDataType[];\n    dressCodeIncentives: dressCodeIncentiveType[];\n  };\n  type dateProperty = {\n    Date: number;\n    ColorName?: string;\n    SchoolDay?: string;\n    Value?: number;\n  };\n  type groupType = {\n    name: string;\n    id: string;\n  };\n  type governmentRosterType = {\n    name: string;\n    id: string;\n    imageShareId?: string;\n    listItemId?: string;\n    position?: string;\n    playerNumber?: string;\n    posts?: string[];\n  };\n  type headerType = {\n    key: string;\n    value: string;\n  };\n  type locationCoords = {\n    latCoordinate: number;\n    lngCoordinate: number;\n  };\n  type monthDataType = {\n    id: string;\n    showing: boolean;\n    dayData: number;\n    events: eventType[];\n  };\n  type microsoftUserType = {\n    id: string;\n    displayName: string;\n  };\n  type resourceDataType = {\n    teamId: string;\n    conversationId: string;\n    id: string; // message id\n    body: string;\n    html: boolean; // if false is text\n    attachments?: attachment[];\n  };\n  type resourceFollowType = {\n    teamId: string;\n    channelId: string;\n  };\n  type roomType = {\n    name: string;\n    id: string;\n  };\n  type rosterType = {\n    name: string;\n    id: string;\n    imageShareId?: string;\n    position?: string;\n    playerNumber?: string;\n    posts?: string[];\n  };\n  type scholarship = {\n    title: string;\n    note: string;\n    link: string;\n    cover: string;\n  };\n  type schoolDayDataCompressedType = {\n    schoolDayId: string;\n    scheduleId: string;\n    dressCodeId: string;\n    semester: semesters;\n    dressCodeIncentiveId: string;\n    schoolYearEventId: string;\n  };\n  type schoolDayDataType = {\n    schoolDay: schoolDayType;\n    schedule: scheduleType;\n    dressCode: dressCodeDataType;\n    semester: semesters;\n    dressCodeIncentive?: dressCodeIncentiveType;\n  };\n  type schoolDayType = {\n    name: string;\n    shorthand: string;\n    id: string;\n    order: number;\n  };\n  type submissionType = {\n    userName: string;\n    submissionTime: string;\n    id: string;\n    itemId: string;\n    approved: boolean;\n    reviewed: boolean;\n    submissionImage?: string;\n  };\n  type studentInformationType = {\n    listId: string;\n    driveId: string;\n    selected: boolean;\n    createdTime: string;\n  };\n  type sportType = {\n    name: string;\n    id: string;\n    svgData: string;\n  };\n  type sportTeamType = {\n    teamName: string;\n    season: number;\n    teamId: string;\n  };\n  type schoolUserType = {\n    name: string;\n    id: string;\n    mail: string;\n    role: string;\n    grade?: '9' | '10' | '11' | '12';\n    student: boolean;\n    imageDownloadUrl: string;\n    imageState: loadingStateEnum;\n    imageDataUrl?: string;\n  };\n  type taskType = {\n    name: string;\n    id: string;\n    importance: taskImportanceEnum;\n    status: taskStatusEnum;\n    excess: boolean;\n  };\n  type paulyEventTypes = 'schoolDay' | 'schoolYear';\n  type eventType = {\n    id: string;\n    name: string;\n    startTime: string;\n    endTime: string; // This is held in iso format\n    eventColor: string; // This is held in iso format\n    microsoftEvent: boolean;\n    allDay: boolean;\n    paulyEventType?: paulyEventTypes;\n    paulyEventData?: string;\n    microsoftReference?: string;\n    schoolDayData?: {\n      schoolDayData: schoolDayType;\n      schedule: scheduleType;\n      dressCode: dressCodeDataType;\n      semester: semesters;\n      dressCodeIncentiveId?: string;\n    };\n  };\n  type newsPost = {\n    title: string;\n    excerpt: string;\n    content: string;\n    id: number;\n  };\n  type noClassType = {\n    day: number;\n    Month: number;\n    Year: number;\n  };\n  type scheduleType = {\n    properName: string;\n    descriptiveName: string;\n    periods: periodType[];\n    id: string;\n    color: string;\n  };\n  type periodType = {\n    startHour: number;\n    startMinute: number;\n    endHour: number;\n    endMinute: number;\n    id: string;\n  };\n  type teamsGroupType = {\n    teamName: string;\n    teamId: string;\n    teamDescription: string;\n  };\n  type timetableStringType = {\n    name: string;\n    id: string;\n  };\n  type timetableType = {\n    name: string;\n    id: string;\n    schedules: scheduleType[];\n    days: schoolDayType[];\n    dressCode: dressCodeType;\n  };\n  type microsoftFileType = {\n    name: string;\n    id: string;\n    lastModified: string;\n    folder: boolean;\n    parentDriveId: string;\n    parentPath: string;\n    itemGraphPath: string;\n    callPath: string;\n    type: string;\n  };\n  type paulyDataType = {\n    message: string;\n    animationSpeed: number;\n    powerpointBlob: string;\n    powerpointShare: string;\n    paulyDataState: loadingStateEnum;\n  };\n  type paulyListType = {\n    siteId: string;\n    studentFilesListId: string;\n    commissionListId: string;\n    commissionSubmissionsListId: string;\n    paulyDataListId: string;\n    scheduleListId: string;\n    sportsListId: string;\n    sportsApprovedSubmissionsListId: string;\n    sportsSubmissionsListId: string;\n    timetablesListId: string;\n    resourceListId: string;\n    dressCodeListId: string;\n    roomListId: string;\n    eventTypeExtensionId: string;\n    eventDataExtensionId: string;\n    classExtensionId: string;\n    resourceExtensionId: string;\n  };\n  type sportPost = {\n    caption: string;\n    data:\n      | {\n          fileId: string;\n          postType: postType.microsoftFile;\n          fileType: dataContentTypeOptions;\n        }\n      | {\n          fileId: string;\n          postType: postType.youtubeVideo;\n        };\n  };\n  type attachment = {\n    webUrl: string;\n    id: string;\n    title: string;\n    type: string;\n  };\n  type insightResult = {\n    userState: loadingStateEnum;\n    trendingState: loadingStateEnum;\n    userData: attachment[];\n    trendingData: attachment[];\n  };\n  type listColumnType = {\n    columnGroup: string;\n    description: string;\n    displayName: string;\n    enforceUniqueValues: boolean;\n    hidden: boolean;\n    id: string;\n    indexed: boolean;\n    name: string;\n    readOnly: boolean;\n    required: boolean;\n  };\n  type mediaSubmissionType = {\n    Title: string;\n    user: string;\n    submissionId: string;\n    accepted: boolean;\n    reviewed: boolean;\n    selectedSportId: string;\n    selectedTeamId: string;\n    fileId: string;\n    fileType: postType;\n    itemID: string;\n  };\n  type youtubeVideoType = {\n    thumbnail: string;\n    title: string;\n    videoId: string;\n  };\n}\n\nexport class Colors {\n  static white = '#ffffff';\n\n  static maroon = '#793033';\n\n  static lightGray = '#ededed';\n\n  static darkGray = '#444444';\n\n  static black = '#000000';\n\n  static danger = 'red';\n}\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Colors } from '../../types';\n\nconst initalState: { top: string; bottom: string } = {\n  top: Colors.maroon,\n  bottom: Colors.maroon,\n};\n\nexport const safeAreaColorsSlice = createSlice({\n  name: 'safeAreaColors',\n  initialState: initalState,\n  reducers: {\n    setSafeAreaColors: (\n      state,\n      action: PayloadAction<{ top: string; bottom: string }>,\n    ) => {\n      if (state !== action.payload) {\n        return action.payload;\n      }\n      return state;\n    },\n    setSafeAreaColorTop: (state, action: PayloadAction<string>) => {\n      return { ...state, top: action.payload };\n    },\n    setSafeAreaColorBottom: (state, action: PayloadAction<string>) => {\n      return { ...state, bottom: action.payload };\n    },\n  },\n});\n\nexport default safeAreaColorsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: { uri: string; displayName: string; id: string } = {\n  uri: '',\n  displayName: '',\n  id: '',\n};\n\nexport const microsoftProfileDataSlice = createSlice({\n  name: 'microsoftProfileData',\n  initialState: initalState,\n  reducers: {\n    setMicrosoftProfileData: (\n      _state,\n      action: PayloadAction<{ uri: string; displayName: string; id: string }>,\n    ) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default microsoftProfileDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalCalendarState: eventType[] = [];\n\nexport const currentEventsSlice = createSlice({\n  name: 'currentEvents',\n  initialState: initalCalendarState,\n  reducers: {\n    setCurrentEvents: (_state, action: PayloadAction<eventType[]>) => {\n      return [...action.payload];\n    },\n    pushEvent: (state, action: PayloadAction<eventType>) => {\n      return [...state, action.payload];\n    },\n    removeCurrentEvent: (state, action: PayloadAction<number>) => {\n      state.slice(action.payload, 1);\n    },\n  },\n});\n\nexport default currentEventsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const currentEventsLastCalled = createSlice({\n  name: 'currentEventsLastCalled',\n  initialState: initalState,\n  reducers: {\n    setCurrentEventsLastCalled: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default currentEventsLastCalled.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = new Date().toISOString();\n\nexport const selectedDateSlice = createSlice({\n  name: 'selectedDate',\n  initialState: initalState,\n  reducers: {\n    setSelectedDate: (_state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default selectedDateSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: paulyListType = {\n  siteId: '',\n  studentFilesListId: '',\n  commissionListId: '',\n  commissionSubmissionsListId: '',\n  paulyDataListId: '',\n  scheduleListId: '',\n  sportsListId: '',\n  sportsApprovedSubmissionsListId: '',\n  sportsSubmissionsListId: '',\n  timetablesListId: '',\n  resourceListId: '',\n  eventTypeExtensionId: '',\n  eventDataExtensionId: '',\n  classExtensionId: '',\n  resourceExtensionId: '',\n  dressCodeListId: '',\n  roomListId: '',\n};\n\nexport const paulyListSlice = createSlice({\n  name: 'paulyList',\n  initialState: initalState,\n  reducers: {\n    setPaulyList: (_state, action: PayloadAction<paulyListType>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default paulyListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationTokenSlice = createSlice({\n  name: 'authenticationToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationToken: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationTokenSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationRefreshTokenSlice = createSlice({\n  name: 'authenticationRefreshToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationRefreshToken: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationRefreshTokenSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\n// xSmall,\t <576px  ->0\n// small,    ≥576px  ->1\n// medium,   ≥768px  ->2\n// large,    ≥992px  ->3\n// xLarge    ≥1200px ->4\n\nconst initalState: {\n  width: number;\n  height: number;\n  currentBreakPoint: number;\n} = { width: 0, height: 0, currentBreakPoint: 0 };\n\nexport const dimentionsSlice = createSlice({\n  name: 'dimentions',\n  initialState: initalState,\n  reducers: {\n    setDimentionsWidth: (state, action: PayloadAction<number>) => {\n      return {\n        width: action.payload,\n        height: state.height,\n        currentBreakPoint: state.currentBreakPoint,\n      };\n    },\n    setDimentionsWidthCurrentBreakPoint: (\n      state,\n      action: PayloadAction<{ width: number; currentBreakPoint: number }>,\n    ) => {\n      return {\n        width: action.payload.width,\n        height: state.height,\n        currentBreakPoint: action.payload.currentBreakPoint,\n      };\n    },\n    setDimentionsHeight: (state, action: PayloadAction<number>) => {\n      return {\n        width: state.width,\n        height: action.payload,\n        currentBreakPoint: state.currentBreakPoint,\n      };\n    },\n  },\n});\n\nexport default dimentionsSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationApiTokenSlice = createSlice({\n  name: 'authenticationApiToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationApiToken: (_state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationApiTokenSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalStateTaskDeltaLink: string = '';\n\nexport const taskDeltaSlice = createSlice({\n  name: 'taskDeltaLink',\n  initialState: initalStateTaskDeltaLink,\n  reducers: {\n    setTaskDeltaLink: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport const tasksDeltaReducer = taskDeltaSlice.reducer;\n\nconst initalTasksState: string[] = [];\n\nexport const tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: initalTasksState,\n  reducers: {\n    setCurrentEvents: (state, action: PayloadAction<string[]>) => {\n      return [...action.payload];\n    },\n    pushEvent: (state, action: PayloadAction<string>) => {\n      return [...state, action.payload];\n    },\n  },\n});\n\nexport const tasksReducer = tasksSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\nconst initalState: paulyDataType = {\n  message: '',\n  animationSpeed: 0,\n  powerpointBlob: '',\n  powerpointShare: '',\n  paulyDataState: loadingStateEnum.loading,\n};\n\nexport const paulyDataSlice = createSlice({\n  name: 'paulyData',\n  initialState: initalState,\n  reducers: {\n    setPaulyData: (_state, action: PayloadAction<paulyDataType>) => {\n      return action.payload;\n    },\n    setPaulyDataState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, paulyDataState: action.payload };\n    },\n  },\n});\n\nexport default paulyDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum, resourceMode } from '../../types';\n\ntype resourceStoreState = {\n  resources: resourceDataType[];\n  loadingState: loadingStateEnum;\n  searchValue: string;\n  resourceFollow: resourceFollowType[];\n  selectedResourceMode: resourceMode;\n};\n\nconst initalResourcesState: resourceStoreState = {\n  resources: [],\n  loadingState: loadingStateEnum.loading,\n  searchValue: '',\n  resourceFollow: [],\n  selectedResourceMode: resourceMode.home,\n};\n\nexport const resourcesSlice = createSlice({\n  name: 'resources',\n  initialState: initalResourcesState,\n  reducers: {\n    setResourceData: (state, action: PayloadAction<resourceDataType[]>) => {\n      return { ...state, resources: action.payload };\n    },\n    pushResource: (state, action: PayloadAction<resourceDataType>) => {\n      state.resources.push(action.payload);\n    },\n    setResources: (\n      state,\n      action: PayloadAction<{\n        resources: resourceDataType[];\n        loadingState: loadingStateEnum;\n      }>,\n    ) => {\n      return {\n        ...state,\n        loadingState: action.payload.loadingState,\n        resources: action.payload.resources,\n      };\n    },\n    setResourcesState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, loadingState: action.payload };\n    },\n    setSearchValue: (state, action: PayloadAction<string>) => {\n      return { ...state, searchValue: action.payload };\n    },\n    setResourceFollow: (state, action: PayloadAction<resourceFollowType[]>) => {\n      return { ...state, resourceFollow: action.payload };\n    },\n    setSelectedResourceMode: (state, action: PayloadAction<resourceMode>) => {\n      return { ...state, selectedResourceMode: action.payload };\n    },\n  },\n});\n\nexport default resourcesSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport {\n  calendarMode,\n  paulyEventType,\n  recurringType,\n  loadingStateEnum,\n} from '../../types';\n\ntype addEventStatesType = {\n  eventName: string;\n  createEventState: loadingStateEnum;\n  isPickingStartDate: boolean;\n  isPickingEndDate: boolean;\n  allDay: boolean;\n  isGovernmentEvent: boolean;\n  selectedTimetable: timetableStringType;\n  selectedSchoolDayData: schoolDayDataType | undefined;\n  selectedSchoolYear: eventType | undefined;\n  selectedEventType: paulyEventType;\n  recurringEvent: boolean;\n  selectedRecurringType: recurringType;\n  startDate: string;\n  endDate: string;\n  isShowingAddDate: boolean;\n  isEditing: boolean;\n  selectedCalendarMode: calendarMode;\n  selectedEvent: eventType | undefined;\n};\n\nconst initalState: addEventStatesType = {\n  eventName: '',\n  createEventState: loadingStateEnum.notStarted,\n  isPickingStartDate: false,\n  isPickingEndDate: false,\n  allDay: false,\n  isGovernmentEvent: false,\n  selectedTimetable: {\n    name: '',\n    id: '',\n  },\n  selectedSchoolDayData: undefined,\n  selectedSchoolYear: undefined,\n  selectedEventType: paulyEventType.personal,\n  recurringEvent: false,\n  selectedRecurringType: recurringType.daily,\n  startDate: new Date().toISOString(),\n  endDate: new Date().toISOString(),\n  isShowingAddDate: false,\n  isEditing: false,\n  selectedCalendarMode: calendarMode.month,\n  selectedEvent: undefined,\n};\n\nexport const addEventSlice = createSlice({\n  name: 'addEvent',\n  initialState: initalState,\n  reducers: {\n    setEventName: (state, action: PayloadAction<string>) => {\n      return { ...state, eventName: action.payload };\n    },\n    setCreateEventState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, createEventState: action.payload };\n    },\n    setIsPickingStartDate: (state, action: PayloadAction<boolean>) => {\n      state.isPickingStartDate = action.payload;\n    },\n    setIsPickingEndDate: (state, action: PayloadAction<boolean>) => {\n      state.isPickingEndDate = action.payload;\n    },\n    setAllDay: (state, action: PayloadAction<boolean>) => {\n      return { ...state, allDay: action.payload };\n    },\n    setIsGovernmentEvent: (state, action: PayloadAction<boolean>) => {\n      return { ...state, isGovernmentEvent: action.payload };\n    },\n    setSelectedTimetable: (\n      state,\n      action: PayloadAction<timetableStringType>,\n    ) => {\n      return { ...state, selectedTimetable: action.payload };\n    },\n    setSelectedSchoolDayData: (\n      state,\n      action: PayloadAction<schoolDayDataType | undefined>,\n    ) => {\n      return { ...state, selectedSchoolDayData: action.payload };\n    },\n    setSelectedSchoolYear: (state, action: PayloadAction<eventType>) => {\n      return { ...state, selectedSchoolYear: action.payload };\n    },\n    setSelectedEventType: (state, action: PayloadAction<number>) => {\n      return { ...state, selectedEventType: action.payload };\n    },\n    setRecurringEvent: (state, action: PayloadAction<boolean>) => {\n      return { ...state, recurringEvent: action.payload };\n    },\n    setSelectedRecurringType: (state, action: PayloadAction<recurringType>) => {\n      return { ...state, selectedRecurringType: action.payload };\n    },\n    setStartDate: (state, action: PayloadAction<string | Date>) => {\n      if (typeof action.payload === 'string') {\n        return { ...state, startDate: action.payload };\n      }\n      return { ...state, startDate: action.payload.toISOString() };\n    },\n    setEndDate: (state, action: PayloadAction<string | Date>) => {\n      if (typeof action.payload === 'string') {\n        return { ...state, endDate: action.payload };\n      }\n      return { ...state, endDate: action.payload.toISOString() };\n    },\n    setIsShowingAddDate: (state, action: PayloadAction<boolean>) => {\n      state.isShowingAddDate = action.payload;\n    },\n    setIsEditing: (state, action: PayloadAction<boolean>) => {\n      state.isEditing = action.payload;\n    },\n    setSelectedCalendarMode: (state, action: PayloadAction<calendarMode>) => {\n      state.selectedCalendarMode = action.payload;\n    },\n    setSelectedEvent: (state, action: PayloadAction<eventType | undefined>) => {\n      state.selectedEvent = action.payload;\n    },\n  },\n});\n\nexport default addEventSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport {\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../../types';\n\ntype homepageStatesType = {\n  taskState: loadingStateEnum;\n  userState: loadingStateEnum;\n  trendingState: loadingStateEnum;\n  userData: attachment[];\n  trendingData: attachment[];\n  userTasks: taskType[];\n  schoolDayData: undefined | schoolDayDataType;\n  startTime: string;\n  isShowingCompleteTasks: boolean;\n};\n\nconst initalState: homepageStatesType = {\n  taskState: loadingStateEnum.loading,\n  userState: loadingStateEnum.loading,\n  trendingState: loadingStateEnum.loading,\n  userData: [],\n  trendingData: [],\n  userTasks: [\n    {\n      name: '',\n      importance: taskImportanceEnum.normal,\n      id: '',\n      status: taskStatusEnum.notStarted,\n      excess: true,\n    },\n  ],\n  schoolDayData: undefined,\n  startTime: '',\n  isShowingCompleteTasks: false,\n};\n\nexport const homepageDataSlice = createSlice({\n  name: 'homepage',\n  initialState: initalState,\n  reducers: {\n    setTaskState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, taskState: action.payload };\n    },\n    setUserState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, userState: action.payload };\n    },\n    setTrendingState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, trendingState: action.payload };\n    },\n    setUserData: (state, action: PayloadAction<attachment[]>) => {\n      return { ...state, userData: action.payload };\n    },\n    setTrendingData: (state, action: PayloadAction<attachment[]>) => {\n      return { ...state, trendingData: action.payload };\n    },\n    setUserTasks: (state, action: PayloadAction<taskType[]>) => {\n      return { ...state, userTasks: action.payload };\n    },\n    updateUserTask: (\n      state,\n      action: PayloadAction<{ task: taskType; index: number }>,\n    ) => {\n      if (action.payload.index < state.userTasks.length) {\n        state.userTasks[action.payload.index] = action.payload.task;\n      } else {\n        return state;\n      }\n    },\n    unshiftUserTask: (state, action: PayloadAction<taskType>) => {\n      state.userTasks.unshift(action.payload);\n    },\n    popUserTask: (state, action: PayloadAction<number>) => {\n      state.userTasks.splice(action.payload, 1);\n    },\n    setSchoolDayData: (state, action: PayloadAction<schoolDayDataType>) => {\n      return { ...state, schoolDayData: action.payload };\n    },\n    setStartTime: (state, action: PayloadAction<string>) => {\n      return { ...state, startTime: action.payload };\n    },\n    setIsShowingCompletedTasks: (state, action: PayloadAction<boolean>) => {\n      return { ...state, isShowingCompleteTasks: action.payload };\n    },\n  },\n});\n\nexport default homepageDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const expandedModeSlice = createSlice({\n  name: 'expandedMode',\n  initialState: initalState,\n  reducers: {\n    setExpandedMode: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default expandedModeSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const isShowingProfileBlockSlice = createSlice({\n  name: 'isShowingProfileBlock',\n  initialState: initalState,\n  reducers: {\n    setIsShowingProfileBlock: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default isShowingProfileBlockSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const isGovernmentModeSlice = createSlice({\n  name: 'isGovernmentMode',\n  initialState: initalState,\n  reducers: {\n    setIsGovernmentMode: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default isGovernmentModeSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\ntype commissionsStateType = {\n  commissionsState: loadingStateEnum;\n  points: number;\n  currentCommissions: commissionType[];\n  selectedCommission: string;\n  commissionNextLink: string | undefined;\n};\n\nconst initalState: commissionsStateType = {\n  commissionsState: loadingStateEnum.loading,\n  points: 0,\n  currentCommissions: [],\n  selectedCommission: '',\n  commissionNextLink: undefined,\n};\n\nexport const commissionsSlice = createSlice({\n  name: 'commissions',\n  initialState: initalState,\n  reducers: {\n    setCommissionsState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, commissionsState: action.payload };\n    },\n    setPoints: (state, action: PayloadAction<number>) => {\n      return { ...state, points: action.payload };\n    },\n    setCurrentCommissions: (state, action: PayloadAction<commissionType[]>) => {\n      return { ...state, currentCommissions: action.payload };\n    },\n    setSelectedCommission: (state, action: PayloadAction<string>) => {\n      return { ...state, selectedCommission: action.payload };\n    },\n    setCommissionNextLink: (\n      state,\n      action: PayloadAction<string | undefined>,\n    ) => {\n      return { ...state, commissionNextLink: action.payload };\n    },\n  },\n});\n\nexport default commissionsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\n// page number is an index meaning first page is 0\nconst initalState: { inject: string; images: string[]; pageNumber: number } = {\n  inject: '',\n  images: [],\n  pageNumber: 0,\n};\n\nexport const pdfDataSlice = createSlice({\n  name: 'pdfData',\n  initialState: initalState,\n  reducers: {\n    setInject: (state, action: PayloadAction<string>) => {\n      state.inject = action.payload;\n      return { ...state, commissionsState: action.payload };\n    },\n    addImage: (state, action: PayloadAction<string>) => {\n      state.images.push(action.payload);\n    },\n    setImages: (state, action: PayloadAction<string[]>) => {\n      return { ...state, images: action.payload };\n    },\n    setPageNumber: (state, action: PayloadAction<number>) => {\n      return { ...state, pageNumber: action.payload };\n    },\n    increasePageNumber: state => {\n      state.pageNumber += 1;\n    },\n    decreasePageNumber: state => {\n      state.pageNumber -= 1;\n    },\n  },\n});\n\nexport default pdfDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: eventType[] = [];\n\nexport const monthViewSlice = createSlice({\n  name: 'monthView',\n  initialState: initalState,\n  reducers: {\n    setMonthViewData: (_state, action: PayloadAction<eventType[]>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default monthViewSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: number = 0;\n\nexport const authenticationCallSlice = createSlice({\n  name: 'authenticationCall',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationCallIncrement: state => {\n      return state + 1;\n    },\n  },\n});\n\nexport default authenticationCallSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\nconst initalState: {\n  searchText: string;\n  users: schoolUserType[];\n  usersState: loadingStateEnum;\n  nextLink: string | undefined;\n} = {\n  searchText: '',\n  users: [],\n  usersState: loadingStateEnum.loading,\n  nextLink: undefined,\n};\n\nexport const studentSearchSlice = createSlice({\n  name: 'studentSearch',\n  initialState: initalState,\n  reducers: {\n    setStudentSearch: (state, action: PayloadAction<string>) => {\n      return { ...state, searchText: action.payload };\n    },\n    setStudentUsers: (state, action: PayloadAction<schoolUserType[]>) => {\n      return { ...state, users: action.payload };\n    },\n    setUsersState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, usersState: action.payload };\n    },\n    setNextLink: (state, action: PayloadAction<string | undefined>) => {\n      return { ...state, nextLink: action.payload };\n    },\n    setStudentUserByIndex: (\n      state,\n      action: PayloadAction<{ index: number; user: schoolUserType }>,\n    ) => {\n      if (action.payload.index < state.users.length) {\n        state.users[action.payload.index] = action.payload.user;\n      }\n    },\n    setStudentUserById: (\n      state,\n      action: PayloadAction<{ id: string; user: schoolUserType }>,\n    ) => {\n      const findIndex = state.users.findIndex(e => {\n        return e.id === action.payload.id;\n      });\n      if (findIndex !== -1) {\n        state.users[findIndex] = action.payload.user;\n      }\n    },\n  },\n});\n\nexport default studentSearchSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport monthDataReducer from './reducers/monthDataReducer';\nimport resourcesLastCallReducer, {\n  resourcesLastCalled,\n} from './reducers/resourcesLastCallReducer';\nimport safeAreaColorsReducer from './reducers/safeAreaColorsReducer';\nimport microsoftProfileDataReducer from './reducers/microsoftProfileDataReducer';\nimport currentEventsReducer from './reducers/currentEventReducer';\nimport currentEventsLastCalledReducer from './reducers/currentEventLastCalledReducer';\nimport selectedDateReducer from './reducers/selectedDateReducer';\nimport paulyListReducer from './reducers/paulyListReducer';\nimport authenticationTokenReducer from './reducers/authenticationTokenReducer';\nimport authenticationRefreshTokenReducer from './reducers/authenticationRefreshTokenReducer';\nimport dimentionsReducer from './reducers/dimentionsReducer';\nimport authenticationApiTokenReducer from './reducers/authenticationApiToken';\nimport { tasksDeltaReducer, tasksReducer } from './reducers/tasksReducers';\nimport paulyDataReducer from './reducers/paulyDataReducer';\nimport resourcesReducer from './reducers/resourcesReducer';\nimport addEventReducer from './reducers/addEventReducer';\nimport homepageDataReducer from './reducers/homepageDataReducer';\nimport expandedModeReducer from './reducers/expandedModeReducer';\nimport isShowingProfileBlockReducer from './reducers/isShowingProfileBlockReducer';\nimport isGovernmentModeReducer from './reducers/isGovernmentModeReducer';\nimport commissionsReducer from './reducers/commissionsReducer';\nimport pdfDataReducer from './reducers/pdfDataReducer';\nimport monthViewReducer from './reducers/monthViewReducer';\nimport authenticationCallReducer from './reducers/authenticationCallReducer';\nimport studentSearchReducer from './reducers/studentSearchReducer';\n\nconst store = configureStore({\n  reducer: {\n    addEvent: addEventReducer,\n    authenticationToken: authenticationTokenReducer,\n    authenticationApiToken: authenticationApiTokenReducer,\n    authenticationRefreshToken: authenticationRefreshTokenReducer,\n    authenticationCall: authenticationCallReducer,\n    commissions: commissionsReducer,\n    currentEvents: currentEventsReducer,\n    currentEventsLastCalled: currentEventsLastCalledReducer,\n    dimentions: dimentionsReducer,\n    expandedMode: expandedModeReducer,\n    homepageData: homepageDataReducer,\n    isGovernmentMode: isGovernmentModeReducer,\n    isShowingProfileBlock: isShowingProfileBlockReducer,\n    microsoftProfileData: microsoftProfileDataReducer,\n    monthData: monthDataReducer,\n    monthView: monthViewReducer,\n    paulyData: paulyDataReducer,\n    paulyList: paulyListReducer,\n    pdfData: pdfDataReducer,\n    resources: resourcesReducer,\n    resourcesLastCalled: resourcesLastCallReducer,\n    safeAreaColors: safeAreaColorsReducer,\n    tasks: tasksReducer,\n    tasksDeltaLink: tasksDeltaReducer,\n    selectedDate: selectedDateReducer,\n    studentSearch: studentSearchReducer,\n  },\n  middleware: getDefaultMiddleware =>\n    getDefaultMiddleware({\n      immutableCheck: false,\n    }),\n});\n\nexport default store;\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { View, StyleProp, ViewStyle } from 'react-native';\nimport React from 'react';\nimport Svg, {\n  Circle,\n  ClipPath,\n  Defs,\n  G,\n  Line,\n  LinearGradient,\n  Path,\n  Polygon,\n  Polyline,\n  Rect,\n  Shape,\n  Stop,\n  SvgProps,\n} from 'react-native-svg';\nimport { Colors } from '../../types';\n\ntype iconProps = {\n  width: number;\n  height: number;\n  style?: StyleProp<ViewStyle> | undefined;\n  props?: Shape<SvgProps> | undefined;\n};\n\ninterface colorIconProps extends iconProps {\n  color?: string | undefined;\n}\n\n// Icons\n// CalendarIcon\n// MedalIcon\n// BookIcon\n// GovernmentIcon\n// HomeIcon\n// UpIcon\n// DownIcon\n// AddIcon\n// CloseIcon\n// ChevronLeft\n// ChevronRight\n// FolderIcon\n// DocumentIcon\n// CopyIcon\n// PersonIcon\n// GearIcon\n// GraduationHatIcon\n// WarningIcon\n// SearchIcon\n\nexport function CalendarIcon({ width, height, style }: iconProps) {\n  return (\n    <View>\n      <Svg\n        width={width}\n        height={height}\n        style={style}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n      >\n        <Path\n          d=\"M7.75 2.5C7.75 2.08579 7.41421 1.75 7 1.75C6.58579 1.75 6.25 2.08579 6.25 2.5V4.07926C4.81067 4.19451 3.86577 4.47737 3.17157 5.17157C2.47737 5.86577 2.19451 6.81067 2.07926 8.25H21.9207C21.8055 6.81067 21.5226 5.86577 20.8284 5.17157C20.1342 4.47737 19.1893 4.19451 17.75 4.07926V2.5C17.75 2.08579 17.4142 1.75 17 1.75C16.5858 1.75 16.25 2.08579 16.25 2.5V4.0129C15.5847 4 14.839 4 14 4H10C9.16097 4 8.41527 4 7.75 4.0129V2.5Z\"\n          fill=\"#000000\"\n        />\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 12C2 11.161 2 10.4153 2.0129 9.75H21.9871C22 10.4153 22 11.161 22 12V14C22 17.7712 22 19.6569 20.8284 20.8284C19.6569 22 17.7712 22 14 22H10C6.22876 22 4.34315 22 3.17157 20.8284C2 19.6569 2 17.7712 2 14V12ZM17 14C17.5523 14 18 13.5523 18 13C18 12.4477 17.5523 12 17 12C16.4477 12 16 12.4477 16 13C16 13.5523 16.4477 14 17 14ZM17 18C17.5523 18 18 17.5523 18 17C18 16.4477 17.5523 16 17 16C16.4477 16 16 16.4477 16 17C16 17.5523 16.4477 18 17 18ZM13 13C13 13.5523 12.5523 14 12 14C11.4477 14 11 13.5523 11 13C11 12.4477 11.4477 12 12 12C12.5523 12 13 12.4477 13 13ZM13 17C13 17.5523 12.5523 18 12 18C11.4477 18 11 17.5523 11 17C11 16.4477 11.4477 16 12 16C12.5523 16 13 16.4477 13 17ZM7 14C7.55228 14 8 13.5523 8 13C8 12.4477 7.55228 12 7 12C6.44772 12 6 12.4477 6 13C6 13.5523 6.44772 14 7 14ZM7 18C7.55228 18 8 17.5523 8 17C8 16.4477 7.55228 16 7 16C6.44772 16 6 16.4477 6 17C6 17.5523 6.44772 18 7 18Z\"\n          fill=\"#000000\"\n        />\n      </Svg>\n    </View>\n  );\n}\n\nexport function MedalIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 297.334 297.334\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <G>\n          <Polygon points=\"172.667,64 206.687,0 90.623,0 124.649,64 \" />\n          <Path d=\"M227.904,8.293c-2.553-4.837-6.726-4.834-9.272,0.006l-55.839,106.095c20.009,2.892,38.11,11.76,52.427,24.735 l36.208-68.682c2.551-4.838,2.549-12.754-0.004-17.591L227.904,8.293z\" />\n          <Path d=\"M134.518,114.35L78.7,8.299c-2.547-4.84-6.72-4.843-9.272-0.006L45.909,52.856c-2.552,4.837-2.554,12.753-0.004,17.591 l36.102,68.48C96.362,125.996,114.491,117.181,134.518,114.35z\" />\n          <Path d=\"M148.502,128.279c-46.685,0-84.529,37.844-84.529,84.528c0,46.682,37.845,84.526,84.529,84.526 c46.682,0,84.526-37.845,84.526-84.526C233.028,166.123,195.184,128.279,148.502,128.279z M148.502,273.125 c-33.262,0-60.32-27.059-60.32-60.317c0-33.261,27.059-60.319,60.32-60.319c33.259,0,60.316,27.059,60.316,60.319 C208.819,246.066,181.761,273.125,148.502,273.125z\" />\n          <Path d=\"M148.502,167.404c-25.038,0-45.404,20.367-45.404,45.403c0,25.033,20.366,45.4,45.404,45.4 c25.033,0,45.399-20.367,45.399-45.4C193.902,187.771,173.535,167.404,148.502,167.404z\" />\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function BookIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg width={width} height={height} style={style} viewBox=\"0 0 512 512\">\n      <Path d=\"m202.24 74c-36.13-17.25-86.63-25.7-154.24-26a31.36 31.36 0 0 0 -17.92 5.33 32 32 0 0 0 -14.08 26.57v286.1c0 19.34 13.76 33.93 32 33.93 71.07 0 142.36 6.64 185.06 47a4.11 4.11 0 0 0 6.94-3v-337.11a15.89 15.89 0 0 0 -5.46-12 143 143 0 0 0 -32.3-20.82z\" />\n      <Path d=\"m481.92 53.3a31.33 31.33 0 0 0 -17.92-5.3c-67.61.3-118.11 8.71-154.24 26a143.31 143.31 0 0 0 -32.31 20.78 15.93 15.93 0 0 0 -5.45 12v337.13a3.93 3.93 0 0 0 6.68 2.81c25.67-25.5 70.72-46.82 185.36-46.81a32 32 0 0 0 32-32v-288a32 32 0 0 0 -14.12-26.61z\" />\n    </Svg>\n  );\n}\n\nexport function GovernmentIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"black\"\n    >\n      <Path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.5528 1.10557C11.8343 0.964809 12.1657 0.964809 12.4472 1.10557L22.4472 6.10557C22.862 6.31298 23.0798 6.77838 22.9732 7.22975C22.8667 7.68112 22.4638 8 22 8H1.99998C1.5362 8 1.13328 7.68112 1.02673 7.22975C0.920172 6.77838 1.13795 6.31298 1.55276 6.10557L11.5528 1.10557ZM6.23604 6H17.7639L12 3.11803L6.23604 6ZM5.99998 9C6.55226 9 6.99998 9.44772 6.99998 10V15C6.99998 15.5523 6.55226 16 5.99998 16C5.44769 16 4.99998 15.5523 4.99998 15V10C4.99998 9.44772 5.44769 9 5.99998 9ZM9.99998 9C10.5523 9 11 9.44772 11 10V15C11 15.5523 10.5523 16 9.99998 16C9.44769 16 8.99998 15.5523 8.99998 15V10C8.99998 9.44772 9.44769 9 9.99998 9ZM14 9C14.5523 9 15 9.44772 15 10V15C15 15.5523 14.5523 16 14 16C13.4477 16 13 15.5523 13 15V10C13 9.44772 13.4477 9 14 9ZM18 9C18.5523 9 19 9.44772 19 10V15C19 15.5523 18.5523 16 18 16C17.4477 16 17 15.5523 17 15V10C17 9.44772 17.4477 9 18 9ZM2.99998 18C2.99998 17.4477 3.44769 17 3.99998 17H20C20.5523 17 21 17.4477 21 18C21 18.5523 20.5523 19 20 19H3.99998C3.44769 19 2.99998 18.5523 2.99998 18ZM0.999976 21C0.999976 20.4477 1.44769 20 1.99998 20H22C22.5523 20 23 20.4477 23 21C23 21.5523 22.5523 22 22 22H1.99998C1.44769 22 0.999976 21.5523 0.999976 21Z\"\n        fill=\"#000000\"\n      />\n    </Svg>\n  );\n}\n\nexport function HomeIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 460.298 460.297\"\n    >\n      <Path\n        d=\"M230.149,120.939L65.986,256.274c0,0.191-0.048,0.472-0.144,0.855c-0.094,0.38-0.144,0.656-0.144,0.852v137.041\n      c0,4.948,1.809,9.236,5.426,12.847c3.616,3.613,7.898,5.431,12.847,5.431h109.63V303.664h73.097v109.64h109.629\n      c4.948,0,9.236-1.814,12.847-5.435c3.617-3.607,5.432-7.898,5.432-12.847V257.981c0-0.76-0.104-1.334-0.288-1.707L230.149,120.939\n      z\"\n      />\n      <Path\n        d=\"M457.122,225.438L394.6,173.476V56.989c0-2.663-0.856-4.853-2.574-6.567c-1.704-1.712-3.894-2.568-6.563-2.568h-54.816\n      c-2.666,0-4.855,0.856-6.57,2.568c-1.711,1.714-2.566,3.905-2.566,6.567v55.673l-69.662-58.245\n      c-6.084-4.949-13.318-7.423-21.694-7.423c-8.375,0-15.608,2.474-21.698,7.423L3.172,225.438c-1.903,1.52-2.946,3.566-3.14,6.136\n      c-0.193,2.568,0.472,4.811,1.997,6.713l17.701,21.128c1.525,1.712,3.521,2.759,5.996,3.142c2.285,0.192,4.57-0.476,6.855-1.998\n      L230.149,95.817l197.57,164.741c1.526,1.328,3.521,1.991,5.996,1.991h0.858c2.471-0.376,4.463-1.43,5.996-3.138l17.703-21.125\n      c1.522-1.906,2.189-4.145,1.991-6.716C460.068,229.007,459.021,226.961,457.122,225.438z\"\n      />\n    </Svg>\n  );\n}\n\nexport function UpIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 330 330\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          id=\"XMLID_224_\"\n          d=\"M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394 l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393 C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function DownIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 330 330\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          id=\"XMLID_225_\"\n          d=\"M325.607,79.393c-5.857-5.857-15.355-5.858-21.213,0.001l-139.39,139.393L25.607,79.393 c-5.857-5.857-15.355-5.858-21.213,0.001c-5.858,5.858-5.858,15.355,0,21.213l150.004,150c2.813,2.813,6.628,4.393,10.606,4.393 s7.794-1.581,10.606-4.394l149.996-150C331.465,94.749,331.465,85.251,325.607,79.393z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function AddIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 309.059 309.059\"\n      fill=\"#000000\"\n    >\n      <G strokeWidth=\"0\" />\n      <G strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <G>\n        <G>\n          <G>\n            <Path\n              fill=\"#010002\"\n              d=\"M280.71,126.181h-97.822V28.338C182.889,12.711,170.172,0,154.529,0S126.17,12.711,126.17,28.338 v97.843H28.359C12.722,126.181,0,138.903,0,154.529c0,15.621,12.717,28.338,28.359,28.338h97.811v97.843 c0,15.632,12.711,28.348,28.359,28.348c15.643,0,28.359-12.717,28.359-28.348v-97.843h97.822 c15.632,0,28.348-12.717,28.348-28.338C309.059,138.903,296.342,126.181,280.71,126.181z\"\n            />\n          </G>\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function CloseIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G strokeWidth=\"0\" />\n      <G strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <G>\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.29289 5.29289C5.68342 4.90237 6.31658 4.90237 6.70711 5.29289L12 10.5858L17.2929 5.29289C17.6834 4.90237 18.3166 4.90237 18.7071 5.29289C19.0976 5.68342 19.0976 6.31658 18.7071 6.70711L13.4142 12L18.7071 17.2929C19.0976 17.6834 19.0976 18.3166 18.7071 18.7071C18.3166 19.0976 17.6834 19.0976 17.2929 18.7071L12 13.4142L6.70711 18.7071C6.31658 19.0976 5.68342 19.0976 5.29289 18.7071C4.90237 18.3166 4.90237 17.6834 5.29289 17.2929L10.5858 12L5.29289 6.70711C4.90237 6.31658 4.90237 5.68342 5.29289 5.29289Z\"\n          fill=\"#0F1729\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ChevronLeft({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 16 16\"\n      {...props}\n    >\n      <Path\n        fillRule=\"evenodd\"\n        d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\n      />\n    </Svg>\n  );\n}\n\nexport function ChevronRight({ width, height, style }: iconProps) {\n  return (\n    <Svg width={width} height={height} style={style} viewBox=\"0 0 16 16\">\n      <Path\n        fillRule=\"evenodd\"\n        d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"\n      />\n    </Svg>\n  );\n}\n\nexport function FolderIcon({ width, height, style }: iconProps) {\n  return (\n    <View>\n      <Svg\n        width={width}\n        height={height}\n        style={style}\n        stroke=\"currentColor\"\n        fill=\"currentColor\"\n        strokeWidth=\"0\"\n        viewBox=\"0 0 48 48\"\n      >\n        <Path\n          fill=\"#FFA000\"\n          d=\"M40,12H22l-4-4H8c-2.2,0-4,1.8-4,4v8h40v-4C44,13.8,42.2,12,40,12z\"\n        />\n        <Path\n          fill=\"#FFCA28\"\n          d=\"M40,12H8c-2.2,0-4,1.8-4,4v20c0,2.2,1.8,4,4,4h32c2.2,0,4-1.8,4-4V16C44,13.8,42.2,12,40,12z\"\n        />\n      </Svg>\n    </View>\n  );\n}\n\nexport function DocumentIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      viewBox=\"0 0 48 48\"\n    >\n      <Polygon fill=\"#90CAF9\" points=\"40,45 8,45 8,3 30,3 40,13\" />\n      <Polygon fill=\"#E1F5FE\" points=\"38.5,14 29,14 29,4.5\" />\n      <G fill=\"#1976D2\">\n        <Rect x=\"16\" y=\"21\" width=\"17\" height=\"2\" />\n        <Rect x=\"16\" y=\"25\" width=\"13\" height=\"2\" />\n        <Rect x=\"16\" y=\"29\" width=\"17\" height=\"2\" />\n        <Rect x=\"16\" y=\"33\" width=\"13\" height=\"2\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function SportsIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n      viewBox=\"0 0 64 64\"\n      aria-hidden\n      preserveAspectRatio=\"xMidYMid meet\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M59.284 4.714C58.27 3.701 55.587 2 49.022 2c-2.741 0-5.859.307-9.27.912a57.369 57.369 0 0 0-9.213 2.413c-6.229 2.221-11.512 5.47-15.698 9.658c-4.19 4.192-7.438 9.474-9.654 15.701c-1.031 2.889-1.843 5.988-2.413 9.211c-2.141 12.084.643 16.993 2.494 18.843C6.486 59.956 9.527 62 16.204 62h.001c2.369 0 5.029-.26 7.904-.769c3.236-.574 6.335-1.387 9.208-2.413c6.231-2.22 11.514-5.469 15.702-9.657c4.188-4.191 7.437-9.475 9.655-15.703c1.025-2.879 1.836-5.979 2.411-9.21c2.478-13.974-.753-18.483-1.801-19.534M33.041 24.832c-.987-.988.544-2.52 1.532-1.532l2.299 2.299c1.133-1.131 2.172-2.17 3.064-3.064l-2.3-2.299c-.988-.988.545-2.52 1.534-1.533l2.298 2.3l1.377-1.377c.986-.989 2.518.543 1.532 1.531l-1.378 1.378l2.296 2.298c.989.987-.543 2.519-1.529 1.532l-2.299-2.298l-3.063 3.064l2.298 2.298c.988.988-.546 2.52-1.531 1.533l-2.299-2.298l-3.064 3.065l2.297 2.297c.987.989-.543 2.519-1.531 1.532l-2.297-2.298l-3.064 3.064c.766.766 1.532 1.531 2.297 2.298c.988.987-.545 2.519-1.532 1.533l-2.297-2.299l-3.064 3.064l2.297 2.299c.988.987-.543 2.519-1.531 1.53l-2.297-2.297c-.655.652-1.136 1.135-1.379 1.377c-.987.987-2.518-.544-1.532-1.533l1.378-1.377c-.767-.767-1.533-1.532-2.297-2.298c-.988-.988.543-2.521 1.529-1.533l2.299 2.3l3.063-3.064l-2.299-2.299c-.986-.988.546-2.521 1.533-1.533l2.299 2.298l3.063-3.064l-2.297-2.297c-.989-.989.544-2.52 1.529-1.533l2.299 2.3l3.066-3.065l-2.299-2.299m-9.276 34.462c-.414.074-.813.131-1.217.193c-3.615-2.093-7.055-4.731-10.176-7.855c-3.122-3.12-5.761-6.563-7.853-10.176c.063-.403.118-.795.193-1.218a55.744 55.744 0 0 1 1.933-7.7c1.94 5.356 5.28 10.557 9.773 15.05c4.49 4.492 9.689 7.833 15.046 9.774a56.191 56.191 0 0 1-7.699 1.932m33.454-27.691c-1.942-5.356-5.282-10.554-9.775-15.046c-4.49-4.493-9.69-7.833-15.048-9.775a56.153 56.153 0 0 1 7.701-1.933c.414-.074.81-.129 1.215-.194c3.614 2.094 7.056 4.732 10.18 7.854c3.122 3.126 5.762 6.57 7.855 10.187c-.063.399-.123.794-.197 1.208a56.411 56.411 0 0 1-1.931 7.699\"\n          fill=\"#000000\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function CopyIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 32 32\"\n      id=\"Layer_1\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path d=\"M27.2,8.22H23.78V5.42A3.42,3.42,0,0,0,20.36,2H5.42A3.42,3.42,0,0,0,2,5.42V20.36a3.43,3.43,0,0,0,3.42,3.42h2.8V27.2A2.81,2.81,0,0,0,11,30H27.2A2.81,2.81,0,0,0,30,27.2V11A2.81,2.81,0,0,0,27.2,8.22ZM5.42,21.91a1.55,1.55,0,0,1-1.55-1.55V5.42A1.54,1.54,0,0,1,5.42,3.87H20.36a1.55,1.55,0,0,1,1.55,1.55v2.8H11A2.81,2.81,0,0,0,8.22,11V21.91ZM28.13,27.2a.93.93,0,0,1-.93.93H11a.93.93,0,0,1-.93-.93V11a.93.93,0,0,1,.93-.93H27.2a.93.93,0,0,1,.93.93Z\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PersonIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 512 512\"\n    >\n      <Path d=\"M258.9,48C141.92,46.42,46.42,141.92,48,258.9,49.56,371.09,140.91,462.44,253.1,464c117,1.6,212.48-93.9,210.88-210.88C462.44,140.91,371.09,49.56,258.9,48ZM385.32,375.25a4,4,0,0,1-6.14-.32,124.27,124.27,0,0,0-32.35-29.59C321.37,329,289.11,320,256,320s-65.37,9-90.83,25.34a124.24,124.24,0,0,0-32.35,29.58,4,4,0,0,1-6.14.32A175.32,175.32,0,0,1,80,259C78.37,161.69,158.22,80.24,255.57,80S432,158.81,432,256A175.32,175.32,0,0,1,385.32,375.25Z\" />\n      <Path d=\"M256,144c-19.72,0-37.55,7.39-50.22,20.82s-19,32-17.57,51.93C191.11,256,221.52,288,256,288s64.83-32,67.79-71.24c1.48-19.74-4.8-38.14-17.68-51.82C293.39,151.44,275.59,144,256,144Z\" />\n    </Svg>\n  );\n}\n\nexport function GearIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Path\n        clipRule=\"evenodd\"\n        d=\"M17.2994 10.4527L19.2267 10.7677C19.3846 10.7935 19.5003 10.9298 19.5 11.0896V12.883C19.5 13.0412 19.3865 13.1768 19.2303 13.2042L17.3004 13.543C17.1885 13.9298 17.0349 14.3022 16.8415 14.6543L17.9823 16.2382C18.0759 16.3679 18.0612 16.5463 17.9483 16.6595L16.6804 17.9283C16.5682 18.0401 16.3921 18.0561 16.2623 17.9645L14.6627 16.8424C14.3099 17.0387 13.9352 17.1952 13.5442 17.3103L13.2034 19.231C13.176 19.3865 13.0406 19.5 12.8825 19.5H11.0888C10.9294 19.5 10.7934 19.3849 10.7676 19.228L10.4493 17.3168C10.059 17.204 9.6823 17.0485 9.32585 16.8525L7.73767 17.9648C7.60821 18.0558 7.43178 18.0401 7.31992 17.9283L6.05198 16.6595C5.93947 16.5463 5.9248 16.3686 6.01741 16.2391L7.13958 14.6697C6.94163 14.3116 6.78444 13.9337 6.67062 13.5414L4.76905 13.2042C4.61349 13.1765 4.5 13.0412 4.5 12.883V11.0896C4.5 10.9304 4.61544 10.7941 4.77263 10.768L6.67421 10.4514C6.78868 10.0582 6.94586 9.68022 7.14316 9.32315L6.0347 7.73739C5.94371 7.60793 5.95937 7.43185 6.07122 7.32L7.33883 6.0525C7.452 5.94 7.62908 5.925 7.7592 6.01793L9.33433 7.14293C9.68817 6.94924 10.0639 6.795 10.4552 6.6825L10.767 4.77359C10.7927 4.61576 10.929 4.5 11.0888 4.5H12.8825C13.041 4.5 13.1763 4.61413 13.2037 4.77L13.5399 6.68935C13.929 6.8025 14.304 6.95837 14.6591 7.15467L16.2385 6.01957C16.3683 5.92598 16.5464 5.94065 16.6595 6.05348L17.9278 7.32098C18.0397 7.43315 18.0553 7.60957 17.9643 7.73902L16.8392 9.34239C17.0323 9.69424 17.1865 10.066 17.2994 10.4527ZM9.71725 12C9.71725 13.2607 10.7393 14.2826 12.0001 14.2826C13.2608 14.2826 14.2829 13.2607 14.2829 12C14.2829 10.7394 13.2608 9.71742 12.0001 9.71742C10.7393 9.71742 9.71725 10.7394 9.71725 12Z\"\n        stroke=\"#000000\"\n      />\n    </Svg>\n  );\n}\n\nexport function GraduationHatIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Path\n        d=\"M7.54004 11.77L12 14L19 10.5M7.54004 11.77V17.77M7.54004 11.77L12 9.54004M7.54004 11.77L5 10.5M7.54004 17.77V21M7.54004 17.77L12 20L19 16.5V10.5M7.54004 17.77L5 16.5V10.5M19 10.5L22 9L12 4L2 9L5 10.5\"\n        stroke=\"#000000\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n}\n\nexport function WarningIcon({\n  width,\n  height,\n  style,\n  outlineColor,\n}: {\n  width: number;\n  height: number;\n  style?: StyleProp<ViewStyle>;\n  outlineColor?: string;\n}) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Circle cx=\"12\" cy=\"17\" r=\"1\" fill=\"#000000\" />\n      <Path\n        d=\"M12 10L12 14\"\n        stroke=\"#000000\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <Path\n        d=\"M3.44722 18.1056L10.2111 4.57771C10.9482 3.10361 13.0518 3.10362 13.7889 4.57771L20.5528 18.1056C21.2177 19.4354 20.2507 21 18.7639 21H5.23607C3.7493 21 2.78231 19.4354 3.44722 18.1056Z\"\n        stroke={outlineColor || '#000000'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n}\n\nexport function SearchIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      id=\"Capa_1\"\n      viewBox=\"0 0 488.4 488.4\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <G>\n          <G>\n            <Path d=\"M0,203.25c0,112.1,91.2,203.2,203.2,203.2c51.6,0,98.8-19.4,134.7-51.2l129.5,129.5c2.4,2.4,5.5,3.6,8.7,3.6 s6.3-1.2,8.7-3.6c4.8-4.8,4.8-12.5,0-17.3l-129.6-129.5c31.8-35.9,51.2-83,51.2-134.7c0-112.1-91.2-203.2-203.2-203.2 S0,91.15,0,203.25z M381.9,203.25c0,98.5-80.2,178.7-178.7,178.7s-178.7-80.2-178.7-178.7s80.2-178.7,178.7-178.7 S381.9,104.65,381.9,203.25z\" />\n          </G>\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function WordIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-1712.086\"\n            x2=\"13.832\"\n            y2=\"-1695.914\"\n            gradientTransform=\"translate(0 1720)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#2368c4\" />\n            <Stop offset=\"0.5\" stopColor=\"#1a5dbe\" />\n            <Stop offset=\"1\" stopColor=\"#1146ac\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M28.806,3H9.705A1.192,1.192,0,0,0,8.512,4.191h0V9.5l11.069,3.25L30,9.5V4.191A1.192,1.192,0,0,0,28.806,3Z\"\n          fill=\"#41a5ee\"\n        />\n        <Path d=\"M30,9.5H8.512V16l11.069,1.95L30,16Z\" fill=\"#2b7cd3\" />\n        <Path d=\"M8.512,16v6.5L18.93,23.8,30,22.5V16Z\" fill=\"#185abd\" />\n        <Path\n          d=\"M9.705,29h19.1A1.192,1.192,0,0,0,30,27.809h0V22.5H8.512v5.309A1.192,1.192,0,0,0,9.705,29Z\"\n          fill=\"#103f91\"\n        />\n        <Path\n          d=\"M16.434,8.2H8.512V24.45h7.922a1.2,1.2,0,0,0,1.194-1.191V9.391A1.2,1.2,0,0,0,16.434,8.2Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V25.1h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V23.8h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.132,8.85H8.512V23.8h6.62a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.132,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"#215091\"\n        />\n        <Path\n          d=\"M6.9,17.988c.023.184.039.344.046.481h.028c.01-.13.032-.287.065-.47s.062-.338.089-.465l1.255-5.407h1.624l1.3,5.326a7.761,7.761,0,0,1,.162,1h.022a7.6,7.6,0,0,1,.135-.975l1.039-5.358h1.477l-1.824,7.748H10.591L9.354,14.742q-.054-.222-.122-.578t-.084-.52H9.127q-.021.189-.084.561c-.042.249-.075.432-.1.552L7.78,19.871H6.024L4.19,12.127h1.5l1.131,5.418A4.469,4.469,0,0,1,6.9,17.988Z\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PowerpointIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-1748.086\"\n            x2=\"13.832\"\n            y2=\"-1731.914\"\n            gradientTransform=\"translate(0 1756)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#ca4c28\" />\n            <Stop offset=\"0.5\" stopColor=\"#c5401e\" />\n            <Stop offset=\"1\" stopColor=\"#b62f14\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M18.93,17.3,16.977,3h-.146A12.9,12.9,0,0,0,3.953,15.854V16Z\"\n          fill=\"#ed6c47\"\n        />\n        <Path\n          d=\"M17.123,3h-.146V16l6.511,2.6L30,16v-.146A12.9,12.9,0,0,0,17.123,3Z\"\n          fill=\"#ff8f6b\"\n        />\n        <Path\n          d=\"M30,16v.143A12.905,12.905,0,0,1,17.12,29h-.287A12.907,12.907,0,0,1,3.953,16.143V16Z\"\n          fill=\"#d35230\"\n        />\n        <Path\n          d=\"M17.628,9.389V23.26a1.2,1.2,0,0,1-.742,1.1,1.16,1.16,0,0,1-.45.091H7.027c-.182-.208-.358-.429-.521-.65a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85c.143-.221.293-.442.456-.65h9.93A1.2,1.2,0,0,1,17.628,9.389Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.977,10.04V23.911a1.15,1.15,0,0,1-.091.448,1.2,1.2,0,0,1-1.1.741H7.62q-.309-.314-.593-.65c-.182-.208-.358-.429-.521-.65a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.735A1.2,1.2,0,0,1,16.977,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.977,10.04V22.611A1.2,1.2,0,0,1,15.785,23.8H6.506a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.735A1.2,1.2,0,0,1,16.977,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.326,10.04V22.611A1.2,1.2,0,0,1,15.134,23.8H6.506a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.084A1.2,1.2,0,0,1,16.326,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"#c5401e\"\n        />\n        <Path\n          d=\"M9.293,12.028a3.287,3.287,0,0,1,2.174.636,2.27,2.27,0,0,1,.756,1.841,2.555,2.555,0,0,1-.373,1.376,2.49,2.49,0,0,1-1.059.935A3.607,3.607,0,0,1,9.2,17.15H7.687v2.8H6.141V12.028ZM7.686,15.94H9.017a1.735,1.735,0,0,0,1.177-.351,1.3,1.3,0,0,0,.4-1.025q0-1.309-1.525-1.31H7.686V15.94Z\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ExcelIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-2092.086\"\n            x2=\"13.832\"\n            y2=\"-2075.914\"\n            gradientTransform=\"translate(0 2100)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#18884f\" />\n            <Stop offset=\"0.5\" stopColor=\"#117e43\" />\n            <Stop offset=\"1\" stopColor=\"#0b6631\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M19.581,15.35,8.512,13.4V27.809A1.192,1.192,0,0,0,9.705,29h19.1A1.192,1.192,0,0,0,30,27.809h0V22.5Z\"\n          fill=\"#185c37\"\n        />\n        <Path\n          d=\"M19.581,3H9.705A1.192,1.192,0,0,0,8.512,4.191h0V9.5L19.581,16l5.861,1.95L30,16V9.5Z\"\n          fill=\"#21a366\"\n        />\n        <Path d=\"M8.512,9.5H19.581V16H8.512Z\" fill=\"#107c41\" />\n        <Path\n          d=\"M16.434,8.2H8.512V24.45h7.922a1.2,1.2,0,0,0,1.194-1.191V9.391A1.2,1.2,0,0,0,16.434,8.2Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V25.1h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V23.8h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.132,8.85H8.512V23.8h6.62a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.132,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"url(#a)\"\n        />\n        <Path\n          d=\"M5.7,19.873l2.511-3.884-2.3-3.862H7.758L9.013,14.6c.116.234.2.408.238.524h.017c.082-.188.169-.369.26-.546l1.342-2.447h1.7l-2.359,3.84,2.419,3.905H10.821l-1.45-2.711A2.355,2.355,0,0,1,9.2,16.8H9.176a1.688,1.688,0,0,1-.168.351L7.515,19.873Z\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M28.806,3H19.581V9.5H30V4.191A1.192,1.192,0,0,0,28.806,3Z\"\n          fill=\"#33c481\"\n        />\n        <Path d=\"M19.581,16H30v6.5H19.581Z\" fill=\"#107c41\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function VideoIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M18 3H6C3.79086 3 2 4.79086 2 7V17C2 19.2091 3.79086 21 6 21H18C20.2091 21 22 19.2091 22 17V7C22 4.79086 20.2091 3 18 3Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M10.28 8.03994C9.19003 8.42994 9 10.5199 9 12.0399C9 13.5599 9.19003 15.5999 10.28 16.0399C11.37 16.4799 16 13.7499 16 12.0399C16 10.3299 11.44 7.61994 10.28 8.03994Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PDFIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M24.1,2.072h0l5.564,5.8V29.928H8.879V30H29.735V7.945L24.1,2.072\"\n          fill=\"#909090\"\n        />\n        <Path d=\"M24.031,2H8.808V29.928H29.664V7.873L24.03,2\" fill=\"#f4f4f4\" />\n        <Path d=\"M8.655,3.5H2.265v6.827h20.1V3.5H8.655\" fill=\"#7a7b7c\" />\n        <Path d=\"M22.472,10.211H2.395V3.379H22.472v6.832\" fill=\"#dd2025\" />\n        <Path\n          d=\"M9.052,4.534h-.03l-.207,0H7.745v4.8H8.773V7.715L9,7.728a2.042,2.042,0,0,0,.647-.117,1.427,1.427,0,0,0,.493-.291,1.224,1.224,0,0,0,.335-.454,2.13,2.13,0,0,0,.105-.908,2.237,2.237,0,0,0-.114-.644,1.173,1.173,0,0,0-.687-.65A2.149,2.149,0,0,0,9.37,4.56a2.232,2.232,0,0,0-.319-.026M8.862,6.828l-.089,0V5.348h.193a.57.57,0,0,1,.459.181.92.92,0,0,1,.183.558c0,.246,0,.469-.222.626a.942.942,0,0,1-.524.114\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M12.533,4.521c-.111,0-.219.008-.295.011L12,4.538h-.78v4.8h.918a2.677,2.677,0,0,0,1.028-.175,1.71,1.71,0,0,0,.68-.491,1.939,1.939,0,0,0,.373-.749,3.728,3.728,0,0,0,.114-.949,4.416,4.416,0,0,0-.087-1.127,1.777,1.777,0,0,0-.4-.733,1.63,1.63,0,0,0-.535-.4,2.413,2.413,0,0,0-.549-.178,1.282,1.282,0,0,0-.228-.017m-.182,3.937-.1,0V5.392h.013a1.062,1.062,0,0,1,.6.107,1.2,1.2,0,0,1,.324.4,1.3,1.3,0,0,1,.142.526c.009.22,0,.4,0,.549a2.926,2.926,0,0,1-.033.513,1.756,1.756,0,0,1-.169.5,1.13,1.13,0,0,1-.363.36.673.673,0,0,1-.416.106\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M17.43,4.538H15v4.8h1.028V7.434h1.3V6.542h-1.3V5.43h1.4V4.538\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M21.781,20.255s3.188-.578,3.188.511S22.994,21.412,21.781,20.255Zm-2.357.083a7.543,7.543,0,0,0-1.473.489l.4-.9c.4-.9.815-2.127.815-2.127a14.216,14.216,0,0,0,1.658,2.252,13.033,13.033,0,0,0-1.4.288Zm-1.262-6.5c0-.949.307-1.208.546-1.208s.508.115.517.939a10.787,10.787,0,0,1-.517,2.434A4.426,4.426,0,0,1,18.161,13.841ZM13.513,24.354c-.978-.585,2.051-2.386,2.6-2.444C16.11,21.911,14.537,24.966,13.513,24.354ZM25.9,20.895c-.01-.1-.1-1.207-2.07-1.16a14.228,14.228,0,0,0-2.453.173,12.542,12.542,0,0,1-2.012-2.655,11.76,11.76,0,0,0,.623-3.1c-.029-1.2-.316-1.888-1.236-1.878s-1.054.815-.933,2.013a9.309,9.309,0,0,0,.665,2.338s-.425,1.323-.987,2.639-.946,2.006-.946,2.006a9.622,9.622,0,0,0-2.725,1.4c-.824.767-1.159,1.356-.725,1.945.374.508,1.683.623,2.853-.91a22.549,22.549,0,0,0,1.7-2.492s1.784-.489,2.339-.623,1.226-.24,1.226-.24,1.629,1.639,3.2,1.581,1.495-.939,1.485-1.035\"\n          fill=\"#dd2025\"\n        />\n        <Path d=\"M23.954,2.077V7.95h5.633L23.954,2.077Z\" fill=\"#909090\" />\n        <Path d=\"M24.031,2V7.873h5.633L24.031,2Z\" fill=\"#f4f4f4\" />\n        <Path\n          d=\"M8.975,4.457h-.03l-.207,0H7.668v4.8H8.7V7.639l.228.013a2.042,2.042,0,0,0,.647-.117,1.428,1.428,0,0,0,.493-.291A1.224,1.224,0,0,0,10.4,6.79a2.13,2.13,0,0,0,.105-.908,2.237,2.237,0,0,0-.114-.644,1.173,1.173,0,0,0-.687-.65,2.149,2.149,0,0,0-.411-.105,2.232,2.232,0,0,0-.319-.026M8.785,6.751l-.089,0V5.271H8.89a.57.57,0,0,1,.459.181.92.92,0,0,1,.183.558c0,.246,0,.469-.222.626a.942.942,0,0,1-.524.114\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M12.456,4.444c-.111,0-.219.008-.295.011l-.235.006h-.78v4.8h.918a2.677,2.677,0,0,0,1.028-.175,1.71,1.71,0,0,0,.68-.491,1.939,1.939,0,0,0,.373-.749,3.728,3.728,0,0,0,.114-.949,4.416,4.416,0,0,0-.087-1.127,1.777,1.777,0,0,0-.4-.733,1.63,1.63,0,0,0-.535-.4,2.413,2.413,0,0,0-.549-.178,1.282,1.282,0,0,0-.228-.017m-.182,3.937-.1,0V5.315h.013a1.062,1.062,0,0,1,.6.107,1.2,1.2,0,0,1,.324.4,1.3,1.3,0,0,1,.142.526c.009.22,0,.4,0,.549a2.926,2.926,0,0,1-.033.513,1.756,1.756,0,0,1-.169.5,1.13,1.13,0,0,1-.363.36.673.673,0,0,1-.416.106\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M17.353,4.461h-2.43v4.8h1.028V7.357h1.3V6.465h-1.3V5.353h1.4V4.461\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ImageIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M14.2639 15.9375L12.5958 14.2834C11.7909 13.4851 11.3884 13.086 10.9266 12.9401C10.5204 12.8118 10.0838 12.8165 9.68048 12.9536C9.22188 13.1095 8.82814 13.5172 8.04068 14.3326L4.04409 18.2801M14.2639 15.9375L14.6053 15.599C15.4112 14.7998 15.8141 14.4002 16.2765 14.2543C16.6831 14.126 17.12 14.1311 17.5236 14.2687C17.9824 14.4251 18.3761 14.8339 19.1634 15.6514L20 16.4934M14.2639 15.9375L18.275 19.9565M18.275 19.9565C17.9176 20 17.4543 20 16.8 20H7.2C6.07989 20 5.51984 20 5.09202 19.782C4.71569 19.5903 4.40973 19.2843 4.21799 18.908C4.12796 18.7313 4.07512 18.5321 4.04409 18.2801M18.275 19.9565C18.5293 19.9256 18.7301 19.8727 18.908 19.782C19.2843 19.5903 19.5903 19.2843 19.782 18.908C20 18.4802 20 17.9201 20 16.8V16.4934M4.04409 18.2801C4 17.9221 4 17.4575 4 16.8V7.2C4 6.0799 4 5.51984 4.21799 5.09202C4.40973 4.71569 4.71569 4.40973 5.09202 4.21799C5.51984 4 6.07989 4 7.2 4H16.8C17.9201 4 18.4802 4 18.908 4.21799C19.2843 4.40973 19.5903 4.71569 19.782 5.09202C20 5.51984 20 6.0799 20 7.2V16.4934M17 8.99989C17 10.1045 16.1046 10.9999 15 10.9999C13.8954 10.9999 13 10.1045 13 8.99989C13 7.89532 13.8954 6.99989 15 6.99989C16.1046 6.99989 17 7.89532 17 8.99989Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function AudioIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M4.15838 13.9306C3.44537 12.7423 3.44537 11.2577 4.15838 10.0694C4.37596 9.70674 4.73641 9.45272 5.1511 9.36978L6.84413 9.03117C6.94499 9.011 7.03591 8.95691 7.10176 8.87788L9.17085 6.39498C10.3534 4.97592 10.9447 4.26638 11.4723 4.45742C12 4.64846 12 5.57207 12 7.41928L12 16.5807C12 18.4279 12 19.3515 11.4723 19.5426C10.9447 19.7336 10.3534 19.0241 9.17085 17.605L7.10176 15.1221C7.03591 15.0431 6.94499 14.989 6.84413 14.9688L5.1511 14.6302C4.73641 14.5473 4.37596 14.2933 4.15838 13.9306Z\"\n          fill=\"#222222\"\n        />\n        <Path\n          d=\"M14.5355 8.46447C15.4684 9.39732 15.9948 10.6611 16 11.9803C16.0052 13.2996 15.4888 14.5674 14.5633 15.5076\"\n          stroke=\"#222222\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <Path\n          d=\"M18.6569 6.34314C20.1494 7.83572 20.9916 9.85769 20.9999 11.9685C21.0083 14.0793 20.182 16.1078 18.7012 17.6121\"\n          stroke=\"#222222\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function OneNoteIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M8 23H32V28C32 29.1046 31.1046 30 30 30H10C8.89543 30 8 29.1046 8 28V23Z\"\n          fill=\"#5D29A1\"\n        />\n        <Rect x=\"8\" y=\"16\" width=\"24\" height=\"7\" fill=\"#7F32CC\" />\n        <Rect x=\"8\" y=\"9\" width=\"24\" height=\"7\" fill=\"#9A40D6\" />\n        <Path\n          d=\"M10 2C8.89543 2 8 2.89543 8 4V28C8 29.1046 8.89543 30 10 30H24V9H32V4C32 2.89543 31.1046 2 30 2H10Z\"\n          fill=\"url(#paint0_linear_87_7733)\"\n        />\n        <Path\n          d=\"M8 12C8 10.3431 9.34315 9 11 9H17C18.6569 9 20 10.3431 20 12V24C20 25.6569 18.6569 27 17 27H8V12Z\"\n          fill=\"#000000\"\n          fillOpacity={0.3}\n        />\n        <Rect\n          y=\"7\"\n          width=\"18\"\n          height=\"18\"\n          rx=\"2\"\n          fill=\"url(#paint1_linear_87_7733)\"\n        />\n        <Path\n          d=\"M13 21V11H10.8893V16.8286L6.9631 11H5V21H7.08118V14.9571L11.155 21H13Z\"\n          fill={Colors.white}\n        />\n        <Defs>\n          <LinearGradient\n            id=\"paint0_linear_87_7733\"\n            x1=\"8\"\n            y1=\"16\"\n            x2=\"24.5\"\n            y2=\"16\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop stop-color=\"#8C42AC\" />\n            <Stop offset=\"1\" stopColor=\"#C36DEF\" />\n          </LinearGradient>\n          <LinearGradient\n            id=\"paint1_linear_87_7733\"\n            x1=\"0\"\n            y1=\"16\"\n            x2=\"19\"\n            y2=\"16\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop stop-color=\"#44176C\" />\n            <Stop offset=\"1\" stopColor=\"#621F9C\" />\n          </LinearGradient>\n        </Defs>\n      </G>\n    </Svg>\n  );\n}\n\nexport function GraphAPILogo({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      id=\"Layer_1\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 48 48\"\n      width={width}\n      height={height}\n      style={style}\n    >\n      <G>\n        <Defs>\n          <ClipPath id=\"SVGID_2_\">\n            <Path\n              id=\"SVGID_1_\"\n              d=\"M34.9,3.2H13.1c-0.7,0-1.4,0.4-1.8,1L0.5,23c-0.4,0.6-0.4,1.4,0,2.1l10.9,18.7c0.4,0.6,1.1,1,1.8,1h21.7c0.7,0,1.4-0.4,1.8-1L47.5,25c0.4-0.6,0.4-1.4,0-2.1L36.7,4.3C36.3,3.6,35.6,3.2,34.9,3.2z\"\n            />\n          </ClipPath>\n        </Defs>\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.3,3.1 15.6,11.1 35.4,3.1\"\n        />\n        <Polygon\n          fill=\"#0078D4\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.3,3.1 15.6,11.1 0.2,23.3 0.2,3.1\"\n        />\n        <Polygon\n          fill=\"#0364B8\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"-0.8,24 15.6,11.1 16.5,37.1\"\n        />\n        <Polygon\n          fill=\"#14447D\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"-0.8,24 16.5,37.1 11.5,44.8 0.2,45.2\"\n        />\n        <Polygon\n          fill=\"#0F335E\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.5,44.8 16.5,37.1 36.2,45.2\"\n        />\n        <Polygon\n          fill=\"#0364B8\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"16.5,37.1 36.7,24 36.2,45.2\"\n        />\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"16.5,37.1 15.6,11.1 36.7,24\"\n        />\n        <Polygon\n          fill=\"#50D9FF\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"15.6,11.1 36.2,2.8 36.7,24\"\n        />\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"36.7,24 36.2,2.8 48.1,3.1 48.1,24\"\n        />\n        <Polygon\n          fill=\"#0078D4\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"36.7,24 36.2,45.9 47.5,45.9 48.1,24\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function StudentSearchIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M18.5 19.5L20 21M11 21H5.6C5.03995 21 4.75992 21 4.54601 20.891C4.35785 20.7951 4.20487 20.6422 4.10899 20.454C4 20.2401 4 19.9601 4 19.4V17.6841C4 17.0485 4 16.7306 4.04798 16.4656C4.27087 15.2344 5.23442 14.2709 6.46558 14.048C6.5425 14.0341 6.6237 14.0242 6.71575 14.0172C6.94079 14 7.05331 13.9914 7.20361 14.0026C7.35983 14.0143 7.4472 14.0297 7.59797 14.0722C7.74302 14.1131 8.00429 14.2315 8.52682 14.4682C9.13692 14.7446 9.8015 14.9218 10.5 14.9795M19 17.5C19 18.8807 17.8807 20 16.5 20C15.1193 20 14 18.8807 14 17.5C14 16.1193 15.1193 15 16.5 15C17.8807 15 19 16.1193 19 17.5ZM15 7C15 9.20914 13.2091 11 11 11C8.79086 11 7 9.20914 7 7C7 4.79086 8.79086 3 11 3C13.2091 3 15 4.79086 15 7Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function TimeIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M12 6V12\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M16.24 16.24L12 12\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function TrashIcon({\n  width,\n  height,\n  style,\n  props,\n  color,\n}: colorIconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M4 6H20L18.4199 20.2209C18.3074 21.2337 17.4512 22 16.4321 22H7.56786C6.54876 22 5.69264 21.2337 5.5801 20.2209L4 6Z\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M7.34491 3.14716C7.67506 2.44685 8.37973 2 9.15396 2H14.846C15.6203 2 16.3249 2.44685 16.6551 3.14716L18 6H6L7.34491 3.14716Z\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M2 6H22\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M10 11V16\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M14 11V16\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function OfflineIcon({\n  width,\n  height,\n  style,\n  props,\n  color,\n}: colorIconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G>\n        <Path\n          d=\"M1.33309 8.07433C0.92156 8.44266 0.886539 9.07485 1.25487 9.48638C1.62319 9.89791 2.25539 9.93293 2.66691 9.5646L1.33309 8.07433ZM21.3331 9.5646C21.7446 9.93293 22.3768 9.89791 22.7451 9.48638C23.1135 9.07485 23.0784 8.44266 22.6669 8.07433L21.3331 9.5646ZM12 19C11.4477 19 11 19.4477 11 20C11 20.5523 11.4477 21 12 21V19ZM12.01 21C12.5623 21 13.01 20.5523 13.01 20C13.01 19.4477 12.5623 19 12.01 19V21ZM14.6905 17.04C15.099 17.4116 15.7315 17.3817 16.1031 16.9732C16.4748 16.5646 16.4448 15.9322 16.0363 15.5605L14.6905 17.04ZM18.0539 13.3403C18.4624 13.7119 19.0949 13.682 19.4665 13.2734C19.8381 12.8649 19.8082 12.2324 19.3997 11.8608L18.0539 13.3403ZM7.96372 15.5605C7.55517 15.9322 7.52524 16.5646 7.89687 16.9732C8.2685 17.3817 8.90095 17.4116 9.3095 17.04L7.96372 15.5605ZM4.60034 11.8608C4.19179 12.2324 4.16185 12.8649 4.53348 13.2734C4.90511 13.682 5.53756 13.7119 5.94611 13.3403L4.60034 11.8608ZM10.5705 4.06305C10.0204 4.1118 9.61391 4.59729 9.66266 5.14741C9.71141 5.69754 10.1969 6.10399 10.747 6.05525L10.5705 4.06305ZM17.3393 10.3798C16.8567 10.1114 16.2478 10.285 15.9794 10.7677C15.711 11.2504 15.8847 11.8593 16.3673 12.1277L17.3393 10.3798ZM3.70711 2.29289C3.31658 1.90237 2.68342 1.90237 2.29289 2.29289C1.90237 2.68342 1.90237 3.31658 2.29289 3.70711L3.70711 2.29289ZM20.2929 21.7071C20.6834 22.0976 21.3166 22.0976 21.7071 21.7071C22.0976 21.3166 22.0976 20.6834 21.7071 20.2929L20.2929 21.7071ZM12 6C15.5863 6 18.8556 7.34716 21.3331 9.5646L22.6669 8.07433C19.8369 5.54138 16.0972 4 12 4V6ZM12 21H12.01V19H12V21ZM12 16C13.0367 16 13.9793 16.3931 14.6905 17.04L16.0363 15.5605C14.9713 14.5918 13.5536 14 12 14V16ZM9.3095 17.04C10.0207 16.3931 10.9633 16 12 16V14C10.4464 14 9.02872 14.5918 7.96372 15.5605L9.3095 17.04ZM10.747 6.05525C11.1596 6.01869 11.5775 6 12 6V4C11.5185 4 11.0417 4.0213 10.5705 4.06305L10.747 6.05525ZM16.3673 12.1277C16.9757 12.466 17.5412 12.874 18.0539 13.3403L19.3997 11.8608C18.7751 11.2927 18.0844 10.7941 17.3393 10.3798L16.3673 12.1277ZM2.29289 3.70711L5.46648 6.8807L6.8807 5.46648L3.70711 2.29289L2.29289 3.70711ZM2.66691 9.5646C3.81213 8.53961 5.12648 7.70074 6.56232 7.09494L5.78486 5.25224C4.14251 5.94517 2.64069 6.904 1.33309 8.07433L2.66691 9.5646ZM5.46648 6.8807L9.46042 10.8746L10.8746 9.46042L6.8807 5.46648L5.46648 6.8807ZM9.46042 10.8746L20.2929 21.7071L21.7071 20.2929L10.8746 9.46042L9.46042 10.8746ZM5.94611 13.3403C7.15939 12.2367 8.67355 11.4612 10.3496 11.1508L9.98543 9.18424C7.93271 9.5644 6.08108 10.5139 4.60034 11.8608L5.94611 13.3403Z\"\n          fill={color || Colors.black}\n        />\n      </G>\n    </Svg>\n  );\n}\n\n// Text Icons https://www.svgrepo.com/collection/ui-and-text-editing-icons/\nexport function BoldIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          d=\"M16.5,14H11V9h5.5c1.4,0,2.5,1.1,2.5,2.5v0C19,12.9,17.9,14,16.5,14z\"\n        />\n        <Path\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          d=\"M18.5,23H11v-5h7.5c1.4,0,2.5,1.1,2.5,2.5v0C21,21.9,19.9,23,18.5,23z\"\n        />\n        <Path\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          d=\"M22,15c0.7-1,1-2.2,1-3.5C23,7.9,20.1,5,16.5,5h-1h-1H7v22h7.5h1h3c3.6,0,6.5-2.9,6.5-6.5 C25,18.2,23.8,16.2,22,15z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ItalicIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Italic_Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"10\"\n          y1=\"27\"\n          x2=\"18\"\n          y2=\"27\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"14\"\n          y1=\"5\"\n          x2=\"22\"\n          y2=\"5\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"14\"\n          y1=\"27\"\n          x2=\"18\"\n          y2=\"5\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function StrikeThroughIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"7\"\n          y1=\"16\"\n          x2=\"26\"\n          y2=\"16\"\n        />\n        <Path\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          d=\"M11,21.5c0,3,2.5,5.5,5.5,5.5s5.5-2.5,5.5-5.5S19.5,16,16.5,16S11,13.5,11,10.5S13.5,5,16.5,5S22,7.5,22,10.5\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function UnderlineIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"28\"\n          x2=\"29\"\n          y2=\"28\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"5\"\n          y1=\"23\"\n          x2=\"9\"\n          y2=\"23\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"23\"\n          y1=\"23\"\n          x2=\"27\"\n          y2=\"23\"\n        />\n        <Polyline\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          points=\"7,23 16,4 25,23 \"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"10\"\n          y1=\"17\"\n          x2=\"22\"\n          y2=\"17\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function RightAlignmentIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"29\"\n          y1=\"4\"\n          x2=\"13\"\n          y2=\"4\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"29\"\n          y1=\"10\"\n          x2=\"3\"\n          y2=\"10\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"29\"\n          y1=\"16\"\n          x2=\"13\"\n          y2=\"16\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"29\"\n          y1=\"22\"\n          x2=\"3\"\n          y2=\"22\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"29\"\n          y1=\"28\"\n          x2=\"13\"\n          y2=\"28\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function LeftAlignmentIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"4\"\n          x2=\"19\"\n          y2=\"4\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"10\"\n          x2=\"29\"\n          y2=\"10\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"16\"\n          x2=\"19\"\n          y2=\"16\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"22\"\n          x2=\"29\"\n          y2=\"22\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"28\"\n          x2=\"19\"\n          y2=\"28\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function CenterAlignmentIcon({\n  width,\n  height,\n  style,\n  props,\n}: iconProps) {\n  return (\n    <Svg\n      id=\"Icons\"\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"8\"\n          y1=\"4\"\n          x2=\"24\"\n          y2=\"4\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"10\"\n          x2=\"29\"\n          y2=\"10\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"8\"\n          y1=\"16\"\n          x2=\"24\"\n          y2=\"16\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"3\"\n          y1=\"22\"\n          x2=\"29\"\n          y2=\"22\"\n        />\n        <Line\n          fill=\"none\"\n          stroke=\"#000000\"\n          strokeWidth={2}\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n          strokeMiterlimit={10}\n          x1=\"8\"\n          y1=\"28\"\n          x2=\"24\"\n          y2=\"28\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\n// function MessagingIcon() {\n//     return (\n//         <Svg  viewBox=\"0 0 498.000000 268.000000\"preserveAspectRatio=\"xMidYMid meet\">\n//             <G transform=\"translate(0.000000,268.000000) scale(0.100000,-0.100000)\" fill=\"#000000\" stroke=\"none\">\n//                 <Path d=\"M1140 2481 c-50 -16 -89 -41 -128 -86 -74 -84 -72 -67 -72 -730 l0\n//                 -591 -30 -45 c-16 -24 -54 -73 -84 -109 -64 -75 -116 -196 -116 -266 0 -104\n//                 50 -147 187 -160 95 -9 158 8 246 66 115 76 187 148 232 234 l40 76 438 0 437\n//                 0 0 -95 c0 -150 47 -241 154 -298 41 -22 45 -22 791 -27 l750 -5 100 -69 c55\n//                 -37 108 -75 117 -83 25 -22 144 -53 205 -53 47 0 58 4 92 36 44 39 66 91 57\n//                 130 -8 29 -67 124 -89 143 -9 7 -30 35 -48 63 l-32 50 2 466 c2 537 2 540 -76\n//                 623 -82 87 -92 89 -533 89 l-380 0 0 210 c0 250 -9 289 -89 363 -87 81 -23 77\n//                 -1150 76 -548 0 -1007 -4 -1021 -8z m2051 -164 c18 -12 39 -34 46 -47 18 -36\n//                 18 -1144 0 -1180 -7 -13 -28 -35 -46 -47 l-34 -23 -857 0 -857 0 -63 -32 c-34\n//                 -18 -70 -44 -78 -58 -59 -96 -89 -134 -150 -191 -73 -70 -158 -119 -204 -119\n//                 -40 0 -94 25 -107 48 -17 31 -13 81 8 116 11 17 55 63 98 102 55 50 87 89 108\n//                 130 l30 59 5 596 c5 651 2 612 65 651 29 17 77 18 1016 18 l986 0 34 -23z\n//                 m986 -647 c64 -38 63 -33 63 -527 0 -518 -11 -463 118 -598 63 -65 72 -80 72\n//                 -112 0 -50 -32 -83 -79 -83 -45 0 -104 38 -161 105 -59 69 -104 102 -164 122\n//                 -46 16 -125 18 -782 23 -714 5 -732 5 -754 25 -39 36 -50 69 -50 160 l0 86 62\n//                 -3 61 -3 1 -55 1 -55 738 -3 737 -2 0 75 0 75 -390 0 -389 0 49 46 c85 80 90\n//                 103 90 449 l0 295 373 0 c351 0 374 -1 404 -20z\"/>\n//                 <Path d=\"M1470 1945 l0 -75 715 0 715 0 0 75 0 75 -715 0 -715 0 0 -75z\"/>\n//                 <Path d=\"M1460 1605 l0 -75 430 0 430 0 0 75 0 75 -430 0 -430 0 0 -75z\"/>\n//                 <Path d=\"M2580 1605 l0 -75 160 0 160 0 0 75 0 75 -160 0 -160 0 0 -75z\"/>\n//                 <Path d=\"M1720 1285 l0 -75 650 0 650 0 0 75 0 75 -650 0 -650 0 0 -75z\"/>\n//                 <Path d=\"M3460 1495 l0 -75 290 0 290 0 0 75 0 75 -290 0 -290 0 0 -75z\"/>\n//                 <Path d=\"M3510 1155 l0 -75 155 0 155 0 0 75 0 75 -155 0 -155 0 0 -75z\"/>\n//                 <Path d=\"M3900 1155 l0 -75 65 0 65 0 0 75 0 75 -65 0 -65 0 0 -75z\"/>\n//             </G>\n//         </Svg>\n//     )\n// }\n","import { StyleSheet, ViewStyle } from 'react-native';\nimport React, { useEffect } from 'react';\nimport Svg, { G, Path } from 'react-native-svg';\nimport Animated, {\n  interpolateColor,\n  useAnimatedProps,\n  useSharedValue,\n  withDelay,\n  withRepeat,\n  withTiming,\n} from 'react-native-reanimated';\n\n// \"M7.706 0.290 C 7.484 0.362,7.356 0.490,7.294 0.699 C 7.259 0.816,7.253 1.088,7.253 2.508 C 7.253 4.389,7.251 4.365,7.443 4.557 C 7.700 4.813,8.300 4.813,8.557 4.557 C 8.749 4.365,8.747 4.389,8.747 2.508 C 8.747 0.688,8.744 0.656,8.596 0.480 C 8.472 0.333,8.339 0.284,8.040 0.276 C 7.893 0.272,7.743 0.278,7.706 0.290\"\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\n\nfunction ChipView({ d, index }: { d: string; index: number }) {\n  const progress = useSharedValue(0);\n  useEffect(() => {\n    progress.value = withDelay(\n      ((index + 1) / 8) * 1000,\n      withRepeat(withTiming(1, { duration: 500 }), 0, true),\n    );\n  }, []);\n  const animatedProp = useAnimatedProps(() => {\n    return {\n      fill: interpolateColor(progress.value, [0, 1], ['white', '#69717d']),\n    };\n  });\n\n  return (\n    <AnimatedPath\n      key={`Chip_Key_${index}`}\n      id={`Chip_${index}`}\n      d={d}\n      stroke=\"none\"\n      translate={[0]}\n      fillRule=\"evenodd\"\n      animatedProps={animatedProp}\n    />\n  );\n}\n\nexport default function ProgressView({\n  width,\n  height,\n  style,\n}: {\n  width: number;\n  height: number;\n  style?: ViewStyle;\n}) {\n  const paths = [\n    'M7.706 0.290 C 7.484 0.362,7.356 0.490,7.294 0.699 C 7.259 0.816,7.253 1.088,7.253 2.508 C 7.253 4.389,7.251 4.365,7.443 4.557 C 7.700 4.813,8.300 4.813,8.557 4.557 C 8.749 4.365,8.747 4.389,8.747 2.508 C 8.747 0.688,8.744 0.656,8.596 0.480 C 8.472 0.333,8.339 0.284,8.040 0.276 C 7.893 0.272,7.743 0.278,7.706 0.290',\n    'M2.753 2.266 C 2.595 2.338,2.362 2.566,2.281 2.728 C 2.197 2.897,2.193 3.085,2.269 3.253 C 2.343 3.418,4.667 5.750,4.850 5.843 C 5.109 5.976,5.375 5.911,5.643 5.649 C 5.907 5.391,5.977 5.111,5.843 4.850 C 5.750 4.667,3.418 2.343,3.253 2.269 C 3.101 2.200,2.901 2.199,2.753 2.266',\n    'M0.699 7.292 C 0.404 7.385,0.258 7.620,0.258 7.999 C 0.259 8.386,0.403 8.618,0.698 8.706 C 0.816 8.741,1.079 8.747,2.508 8.747 C 3.997 8.747,4.196 8.742,4.318 8.702 C 4.498 8.644,4.644 8.498,4.702 8.318 C 4.788 8.053,4.745 7.677,4.608 7.491 C 4.578 7.451,4.492 7.384,4.417 7.343 L 4.280 7.267 2.547 7.261 C 1.152 7.257,0.791 7.263,0.699 7.292',\n    'M4.853 10.282 C 4.730 10.339,4.520 10.536,3.518 11.541 C 2.597 12.464,2.316 12.762,2.271 12.860 C 2.195 13.025,2.196 13.216,2.272 13.378 C 2.342 13.528,2.572 13.764,2.727 13.845 C 2.884 13.927,3.117 13.926,3.280 13.843 C 3.447 13.757,5.757 11.447,5.843 11.280 C 5.926 11.118,5.927 10.884,5.846 10.729 C 5.764 10.572,5.552 10.364,5.392 10.283 C 5.213 10.192,5.048 10.192,4.853 10.282',\n    'M7.745 11.277 C 7.620 11.309,7.451 11.412,7.392 11.492 C 7.254 11.678,7.253 11.691,7.253 13.489 C 7.253 14.921,7.259 15.184,7.294 15.302 C 7.382 15.597,7.615 15.741,8.000 15.741 C 8.385 15.741,8.618 15.597,8.706 15.302 C 8.768 15.090,8.767 11.875,8.704 11.690 C 8.644 11.514,8.575 11.430,8.420 11.346 C 8.310 11.286,8.246 11.271,8.057 11.264 C 7.930 11.259,7.790 11.265,7.745 11.277',\n    'M10.753 10.266 C 10.595 10.338,10.362 10.566,10.281 10.728 C 10.197 10.897,10.193 11.085,10.269 11.253 C 10.343 11.418,12.667 13.750,12.850 13.843 C 13.109 13.976,13.375 13.911,13.643 13.649 C 13.907 13.391,13.977 13.111,13.843 12.850 C 13.750 12.667,11.418 10.343,11.253 10.269 C 11.101 10.200,10.901 10.199,10.753 10.266',\n    'M11.745 7.278 C 11.622 7.308,11.452 7.411,11.392 7.492 C 11.255 7.677,11.212 8.053,11.298 8.318 C 11.356 8.498,11.502 8.644,11.682 8.702 C 11.804 8.742,12.003 8.747,13.492 8.747 C 14.921 8.747,15.184 8.741,15.302 8.706 C 15.597 8.618,15.741 8.386,15.742 7.999 C 15.742 7.614,15.595 7.383,15.290 7.291 C 15.187 7.260,14.864 7.254,13.496 7.256 C 12.578 7.258,11.790 7.268,11.745 7.278',\n    'M12.853 2.282 C 12.730 2.339,12.520 2.536,11.518 3.541 C 10.597 4.464,10.316 4.762,10.271 4.860 C 10.195 5.025,10.196 5.216,10.272 5.378 C 10.342 5.528,10.572 5.764,10.727 5.845 C 10.884 5.927,11.117 5.926,11.280 5.843 C 11.447 5.757,13.757 3.447,13.843 3.280 C 13.926 3.118,13.927 2.884,13.846 2.729 C 13.764 2.572,13.552 2.364,13.392 2.283 C 13.213 2.192,13.048 2.192,12.853 2.282',\n  ];\n\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        {paths.map((path, index) => (\n          <ChipView key={`Chip_Key_Holder_${index}`} d={path} index={index} />\n        ))}\n      </G>\n    </Svg>\n  );\n}","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { View, Text, Pressable, Image } from 'react-native';\nimport React, {\n  useCallback,\n  useEffect,\n  useImperativeHandle,\n  useState,\n} from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { RootState } from './Redux/store';\nimport { safeAreaColorsSlice } from './Redux/reducers/safeAreaColorsReducer';\nimport { GearIcon } from './UI/Icons/Icons';\nimport { Colors } from './types';\nimport ProgressView from './UI/ProgressView';\n\nexport default function Login({\n  onGetAuthToken,\n  onGetGovernmentAuthToken,\n  width,\n  isLoading,\n}: {\n  onGetAuthToken: () => void;\n  onGetGovernmentAuthToken: () => void;\n  width: number;\n  isLoading: boolean;\n}) {\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const [isBottonHover, setIsButtonHover] = useState<boolean>(false);\n  const [isGovernmentHover, setIsGovernmentHover] = useState<boolean>(false);\n  const [fontSize, setFontSize] = useState<number>(0);\n  const [isShowingGovernmentLogin, setIsShowingGovernmentLogin] =\n    useState<boolean>(false);\n  const insets = useSafeAreaInsets();\n  const dispatch = useDispatch();\n\n  useCallback(\n    async function setSafeAreaColors() {\n      dispatch(safeAreaColorsSlice.actions.setSafeAreaColorTop(Colors.maroon));\n      dispatch(\n        safeAreaColorsSlice.actions.setSafeAreaColorBottom(Colors.maroon),\n      );\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    const heightIsGreater: boolean = width < height;\n    if (heightIsGreater) {\n      setFontSize(width / 4);\n    } else {\n      setFontSize(height / 3);\n    }\n  }, [height, width]);\n  // Font\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../assets/fonts/BukhariScript.ttf'),\n    'Gochi Hand': require('../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      style={{\n        backgroundColor: Colors.maroon,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height,\n        width,\n        overflow: 'hidden',\n        top: -insets.top,\n      }}\n      onLongPress={() => {\n        setIsShowingGovernmentLogin(true);\n      }}\n      delayLongPress={5000}\n    >\n      <View\n        id=\"Content_Area\"\n        style={{\n          width: width < height ? width : height,\n          height: width < height ? width : height,\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}\n      >\n        <View\n          style={{\n            width: fontSize * 1.65,\n            height: fontSize,\n            flexDirection: 'row',\n          }}\n          id=\"Text_Container\"\n        >\n          <Image\n            source={require('../assets/images/PaulyLogo.png')}\n            resizeMode=\"contain\"\n            style={{\n              width: fontSize,\n              height: fontSize,\n              position: 'absolute',\n              left: -fontSize * 0.2,\n            }}\n          />\n          <Text\n            style={{\n              position: 'absolute',\n              left: fontSize * 0.5,\n              top: fontSize * 0.22,\n              fontFamily: 'Gochi Hand',\n              fontSize: fontSize - fontSize / 3,\n              textShadowColor: 'rgba(0, 0, 0, 1)',\n              textShadowOffset: { width: 4, height: 5 },\n              textShadowRadius: 0,\n              color: Colors.white,\n            }}\n            selectable={false}\n          >\n            auly\n          </Text>\n        </View>\n        <Text\n          style={{ color: 'white', marginTop: 25, fontFamily: 'BukhariScript' }}\n        >\n          23/24 Saint Paul's High School Student Council\n        </Text>\n        <Pressable\n          onPress={async () => {\n            onGetAuthToken();\n          }}\n          onHoverIn={() => {\n            setIsButtonHover(true);\n          }}\n          onHoverOut={() => {\n            setIsButtonHover(false);\n          }}\n          style={{\n            height: height * 0.09,\n            width: width * 0.5,\n            borderRadius: 50,\n            backgroundColor: isBottonHover ? Colors.darkGray : Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            shadowColor: isBottonHover ? Colors.white : 'black',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n            marginTop: width < height ? width * 0.05 : height * 0.05,\n          }}\n        >\n          {isLoading ? (\n            <ProgressView width={14} height={14} />\n          ) : (\n            <Text\n              style={{\n                textAlign: 'center',\n                color: isBottonHover ? Colors.white : 'black',\n                fontWeight: 'bold',\n              }}\n            >\n              LOGIN\n            </Text>\n          )}\n        </Pressable>\n        {isShowingGovernmentLogin ? (\n          <Pressable\n            onPress={async () => {\n              onGetGovernmentAuthToken();\n            }}\n            onHoverIn={() => {\n              setIsGovernmentHover(true);\n            }}\n            onHoverOut={() => {\n              setIsGovernmentHover(false);\n            }}\n            style={{\n              height: height * 0.09,\n              width: width * 0.5,\n              borderRadius: 50,\n              backgroundColor: isGovernmentHover\n                ? Colors.darkGray\n                : Colors.white,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              shadowColor: isBottonHover ? Colors.white : 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              marginTop: width < height ? width * 0.1 : height * 0.1,\n              flexDirection: 'row',\n            }}\n          >\n            <GearIcon width={18} height={18} />\n            <Text\n              style={{\n                textAlign: 'center',\n                color: isBottonHover ? Colors.white : 'black',\n                fontWeight: 'bold',\n              }}\n            >\n              LOGIN AS ADMIN\n            </Text>\n          </Pressable>\n        ) : null}\n      </View>\n      <Text\n        style={{\n          position: 'absolute',\n          bottom: 4,\n          fontSize: height * 0.02,\n          fontFamily: 'Roboto',\n          color: Colors.white,\n        }}\n      >\n        A.M.D.G\n      </Text>\n    </Pressable>\n  );\n}\n","// July 21 2023\n// Andrew Mainella\n// Calendar functions\n\nexport function getDaysInMonth(input: Date): number {\n  const d = new Date();\n  d.setFullYear(input.getFullYear(), input.getMonth() + 1, 0);\n  return d.getDate();\n}\n\nexport function getDay(value: number, startdate: number): number | undefined {\n  let offset: number = 0;\n  const let1: number = value / 5.0;\n  const let2: number = Math.floor(let1);\n  const let4: number = let2 * 2;\n  offset += let4;\n  const result: number = value - startdate + 2 + offset;\n  const month = new Date();\n  const d = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n  const DayInt = d.getDate();\n  if (result >= DayInt + 1) {\n    return undefined;\n  }\n  return result;\n}\n\nexport function findFirstDayinMonth(currentTime: Date): number {\n  const year = currentTime.getFullYear();\n  const month = currentTime.getMonth();\n  const weekDay = new Date(year, month).getDay();\n  return weekDay;\n  // Returns a which weekday day is the first day of the month.\n  // Sunday is 0, Saturday is 6\n}\n\nexport function isDateToday(dateToCheck: Date) {\n  // Get today's date\n  const today = new Date();\n\n  // Compare the components of the dateToCheck with today's date\n  const isSameDate =\n    dateToCheck.getDate() === today.getDate() &&\n    dateToCheck.getMonth() === today.getMonth() &&\n    dateToCheck.getFullYear() === today.getFullYear();\n\n  // Return true if the dateToCheck is today, otherwise return false\n  return isSameDate;\n}\n\n// July 17 2023\n// Andrew Mainella\n//\n// Converting a year to a school year.\n// The year converted is the year of the graduating class\n//\n// For example 2024 would return 2023-2024\n\nexport function convertYearToSchoolYear(year: number) {\n  return `${year - 1}-${year}`;\n}\n\nexport function calculateIfShowing(value: string, Time: Date): boolean {\n  // TO DO shorten\n  if (isDateToday(Time)) {\n    const hourInt = Time.getHours();\n    const minuiteInt = Time.getMinutes();\n    if (minuiteInt + 15 >= 60) {\n      let resepctiveTime: string = `${hourInt > 12}`\n        ? (hourInt - 12).toString()\n        : hourInt.toString();\n      resepctiveTime += hourInt > 12 ? 'PM' : 'AM';\n      if (resepctiveTime === value) {\n        return false;\n      }\n      return true;\n    }\n    if (minuiteInt - 15 <= 0) {\n      let resepctiveTime: string = `${hourInt > 12}`\n        ? (hourInt - 12).toString()\n        : hourInt.toString();\n      resepctiveTime += hourInt > 12 ? 'PM' : 'AM';\n      if (resepctiveTime === value) {\n        return false;\n      }\n      return true;\n    }\n    return true;\n  }\n  return true;\n}\n\nexport function findTimeOffset(time: Date, height: number): number {\n  const hourWidth = height * 0.1;\n  const minutieWidth = (height * 0.1) / 60;\n  const hourInt = time.getHours();\n  const minuiteInt = time.getMinutes();\n  const returnOffset = hourWidth * hourInt + minutieWidth * minuiteInt;\n  return returnOffset;\n}\n\n// Ryan was here April 13, 2023\n// Andrew was here April 13, 2023\n\nexport function computeEventHeight(\n  fromDate: Date,\n  toDate: Date,\n  height: number,\n): number {\n  let delta = toDate.getTime() - fromDate.getTime();\n  if (delta >= 86400000) {\n    delta = 86400000;\n  }\n\n  const deltaHours = delta / 3600000;\n  const deltaRemaining = delta % 3600000;\n  const deltaMinutes = deltaRemaining / 60;\n\n  const HourHeight = height * 0.1;\n  const MinuteHeight = (height * 0.1) / 60;\n\n  const ReturnOffset = HourHeight * deltaHours + MinuteHeight * deltaMinutes;\n  return ReturnOffset;\n}\n\nfunction getHorizontalOffset() {}\n","/*\n  Andrew Mainella\n  21 October 2023\n  Pauly\n  See README.md for more information about the setup process and what to put in each of these values\n*/\n// The org wide group id is the id of a group (teams) that every user is apart of.\n// This allows pauly to access calendar information that is common (an event that is set out by admin) among users.\n\nexport const orgWideGroupID: string = 'd2c0dd90-a426-4539-882c-aa87e5787a92';\n\nexport const tenantId: string = '551df04d-543a-4d61-955e-e4294c4cf950';\nexport const clientId: string = '08624b03-1aa6-40c4-8fb3-149c39026dff';\n\nexport const domainName: string = '@8td1tk.onmicrosoft.com';\nexport const paulyDomain: string =\n  'https://polite-plant-0871d590f.4.azurestaticapps.net';\n\n// DO NOT CHANGE SCOPES\n// See README.md for more imformation about the scopes.\nexport const scopes = [\n  'User.Read',\n  'User.ReadBasic.All',\n  'Sites.Read.All',\n  'Sites.Manage.All',\n  'ChannelMessage.Read.All',\n  'Chat.ReadWrite',\n  'Calendars.ReadWrite',\n  'Team.ReadBasic.All',\n  'Group.ReadWrite.All',\n  'Tasks.ReadWrite',\n  'Channel.ReadBasic.All',\n  'Application.ReadWrite.All',\n  'TeamMember.Read.All',\n];\n\nexport const youtubeDataKey = 'AIzaSyCO1po5qtWDKRQ7koQd07Xo6u13Yp-hPEE';\n\nexport const youtubeUploadsId = 'UU8HbRWjbR0xjOeE6OlQ1sLA';\n\nexport const raindropToken = '8ea167d6-0792-4b10-a3a1-e8571743c3e6';\n","import { Platform } from 'react-native';\nimport store from '../../Redux/store';\nimport { authenticationCallSlice } from '../../Redux/reducers/authenticationCallReducer';\n\nexport default async function callMsGraph(\n  url: string,\n  method?: 'GET' | 'POST' | 'PATCH' | 'DELETE' | 'PUT',\n  body?: string | Blob,\n  headersIn?: { key: string; value: string }[],\n  secondAuth?: boolean,\n): Promise<Response> {\n  const headers: Headers = new Headers();\n  const bearer = `Bearer ${store.getState().authenticationToken}`;\n\n  headers.append('Authorization', bearer);\n  headers.append('Content-Type', 'application/json');\n\n  if (headersIn !== undefined) {\n    for (\n      let headerIndex = 0;\n      headerIndex < headersIn.length;\n      headerIndex += 1\n    ) {\n      headers.append(headersIn[headerIndex].key, headersIn[headerIndex].value);\n    }\n  }\n\n  const options = {\n    method: method || 'GET',\n    headers,\n    body,\n  };\n\n  let outUrl = url;\n\n  if (Platform.OS !== 'web') {\n    const urlArray = url.split('%20');\n    outUrl = '';\n    for (let index = 0; index < urlArray.length; index += 1) {\n      if (index !== 0) {\n        outUrl += ` ${urlArray[index]}`;\n      } else {\n        outUrl += urlArray[index];\n      }\n    }\n  }\n\n  const response = await fetch(outUrl, options);\n  if (response.status === 401) {\n    if (secondAuth === undefined) {\n      store.dispatch(\n        authenticationCallSlice.actions.setAuthenticationCallIncrement(),\n      );\n      const previousValue: string = store.getState().authenticationToken;\n      return new Promise(resolve => {\n        const unsubscribe = store.subscribe(async () => {\n          const newValue = store.getState().authenticationToken;\n          if (newValue !== previousValue) {\n            const result = await callMsGraph(\n              url,\n              method,\n              body,\n              headersIn,\n              true,\n            );\n            resolve(result);\n            unsubscribe(); // Unsubscribe after getting the new result\n          }\n        });\n      });\n    }\n    return response;\n  }\n  return response;\n}\n","import { loadingStateEnum } from '../../types';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function largeBatch(\n  defaultBatchData?: { id: string; method: 'GET' | 'POST'; url: string }[][],\n  createData?: {\n    firstUrl: string;\n    secondUrl: string;\n    keys: { array?: string[]; map?: Map<string, unknown> };\n    method: 'GET' | 'POST';\n  },\n): Promise<{ result: loadingStateEnum; data?: batchResponseType[] }> {\n  let data: { id: string; method: 'GET' | 'POST'; url: string }[][] = [];\n  if (defaultBatchData) {\n    data = defaultBatchData;\n  } else if (createData) {\n    let batchIndex = 0;\n    if (createData.keys.array !== undefined) {\n      for (\n        let createDataIndex = 0;\n        createDataIndex < createData.keys.array.length;\n        createDataIndex += 1\n      ) {\n        if (batchIndex >= data.length) {\n          data.push([]);\n        }\n        data[batchIndex].push({\n          id: (createDataIndex + 1).toString(),\n          method: createData.method,\n          url: `${createData.firstUrl}${createData.keys.array[createDataIndex]}${createData.secondUrl}`,\n        });\n        if (createDataIndex % 19 === 0) {\n          batchIndex += 1;\n        }\n      }\n    } else if (createData.keys.map !== undefined) {\n      const createDataIndexMap = 0;\n      createData.keys.map.forEach((value, key) => {\n        if (batchIndex >= data.length) {\n          data.push([]);\n        }\n        data[batchIndex].push({\n          id: (createDataIndexMap + 1).toString(),\n          method: createData.method,\n          url: `${createData.firstUrl}${key}${createData.secondUrl}`,\n        });\n        if (createDataIndexMap % 19 === 0) {\n          batchIndex += 1;\n        }\n      });\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const output: batchResponseType[] = [];\n  for (let index = 0; index < data.length; index += 1) {\n    const batchData = {\n      requests: data[index],\n    };\n    const result = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/$batch',\n      'POST',\n      JSON.stringify(batchData),\n      [{ key: 'Accept', value: 'application/json' }],\n    );\n    if (result.ok) {\n      const batchResultData = await result.json();\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultData.responses.length;\n        batchIndex += 1\n      ) {\n        output.push({\n          method: 'GET',\n          id: batchResultData.responses[batchIndex].id,\n          headers: batchResultData.responses[batchIndex].headers,\n          body: batchResultData.responses[batchIndex].body,\n          status: batchResultData.responses[batchIndex].status,\n        });\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: output };\n}\n","import { loadingStateEnum } from '../../types';\n\nexport default function createUUID() {\n  let dt = new Date().getTime();\n  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (dt + Math.random() * 16) % 16;\n    dt = Math.floor(dt / 16);\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return uuid;\n}\n\n// Get text from a loadingStateEnum\nexport function getTextState(\n  state: loadingStateEnum,\n  labels?: {\n    cannotStart?: string;\n    notStarted?: string;\n    failed?: string;\n    loading?: string;\n    offline?: string;\n    success?: string;\n  },\n): string {\n  if (state === loadingStateEnum.cannotStart) {\n    return labels?.cannotStart ? labels.cannotStart : 'Cannot Start';\n  }\n  if (state === loadingStateEnum.notStarted) {\n    return labels?.notStarted ? labels.notStarted : 'Start';\n  }\n  if (state === loadingStateEnum.failed) {\n    return labels?.failed ? labels.failed : 'Failed';\n  }\n  if (state === loadingStateEnum.loading) {\n    return labels?.loading ? labels.loading : 'Loading';\n  }\n  if (state === loadingStateEnum.offline) {\n    return labels?.offline ? labels.offline : 'Offline';\n  }\n  if (state === loadingStateEnum.success) {\n    return labels?.success ? labels.success : 'Success';\n  }\n  return 'Something Went Wrong';\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getDressCode(\n  dressCodeId: string,\n): Promise<{ result: loadingStateEnum; data?: dressCodeType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeData,dressCodeIncentivesData,dressCodeName,dressCodeId)&$select=id&$filter=fields/dressCodeId%20eq%20'${dressCodeId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== 1) {\n      return { result: loadingStateEnum.failed };\n    }\n    try {\n      const dressCodeData: dressCodeDataType[] = JSON.parse(\n        data.value[0].fields.dressCodeData,\n      );\n      const dressCodeIncentivesData: dressCodeIncentiveType[] = JSON.parse(\n        data.value[0].fields.dressCodeIncentivesData,\n      );\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.dressCodeName,\n          id: data.value[0].fields.dressCodeId,\n          listId: data.value[0].id,\n          dressCodeData,\n          dressCodeIncentives: dressCodeIncentivesData,\n        },\n      };\n    } catch (e) {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n}\n","// Andrew Mainella\n// Pauly\n\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport { Colors, loadingStateEnum, semesters } from '../../types';\nimport store from '../../Redux/store';\nimport batchRequest from '../ultility/batchRequest';\nimport createUUID from '../ultility/createUUID';\nimport getDressCode from '../homepage/getDressCode';\n\n// Defaults to org wide events\nexport async function getGraphEvents(\n  url?: string,\n  referenceUrl?: string,\n): Promise<{\n  result: loadingStateEnum;\n  events?: eventType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    url !== undefined\n      ? url\n      : `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties&$select=id,subject,start,end,isAllDay,singleValueExtendedProperties`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newEvents: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      const { singleValueExtendedProperties } = data.value[index];\n      const eventType: string | undefined =\n        data.value[index].singleValueExtendedProperties !== undefined\n          ? singleValueExtendedProperties.find(\n              (e: { id: string; value: string }) => {\n                return e.id === eventTypeExtensionID;\n              },\n            )?.value\n          : undefined;\n      const eventData: string | undefined =\n        data.value[index].singleValueExtendedProperties !== undefined\n          ? singleValueExtendedProperties.find(\n              (e: { id: string; value: string }) => {\n                return e.id === eventDataExtensionID;\n              },\n            )?.value\n          : undefined;\n      newEvents.push({\n        id: data.value[index].id,\n        name: data.value[index].subject,\n        startTime: data.value[index].start.dateTime,\n        endTime: data.value[index].end.dateTime,\n        allDay: data.value[index].isAllDay,\n        eventColor: Colors.white,\n        paulyEventType:\n          eventType === 'schoolYear'\n            ? 'schoolYear'\n            : eventType === 'schoolDay'\n            ? 'schoolDay'\n            : undefined,\n        paulyEventData: eventData,\n        microsoftEvent: true,\n        microsoftReference:\n          referenceUrl !== undefined\n            ? referenceUrl + data.value[index].id\n            : `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      events: newEvents,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// Gets an event from paulys team\nexport async function getEvent(\n  id: string,\n): Promise<{ result: loadingStateEnum; data?: eventType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${id}?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${store.getState().paulyList.eventDataExtensionId}')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const event: eventType = {\n      id: data.id,\n      name: data.subject,\n      startTime: data.start.dateTime,\n      endTime: data.end.dateTime,\n      allDay: data.isAllDay,\n      eventColor: Colors.white,\n      microsoftEvent: true,\n      microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.id}`,\n    };\n    if (data.singleValueExtendedProperties !== undefined) {\n      const eventData: { id: string; value: string }[] =\n        data.singleValueExtendedProperties;\n      const eventType = eventData.find(e => {\n        return e.id === store.getState().paulyList.eventTypeExtensionId;\n      })?.value;\n      event.paulyEventType =\n        eventType === 'schoolDay'\n          ? 'schoolDay'\n          : eventType === 'schoolYear'\n          ? 'schoolYear'\n          : undefined;\n      event.paulyEventData = eventData.find(e => {\n        return e.id === store.getState().paulyList.eventDataExtensionId;\n      })?.value;\n    }\n    return { result: loadingStateEnum.success, data: event };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSchedule(id: string): Promise<{\n  result: loadingStateEnum;\n  schedule?: scheduleType;\n  listItemId?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.scheduleListId\n    }/items?expand=fields($select=scheduleProperName,scheduleDescriptiveName,scheduleData,scheduleId,scheduleColor)&$filter=fields/scheduleId%20eq%20'${id}'&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== undefined) {\n      if (data.value.length === 1) {\n        const resultSchedule: scheduleType = {\n          properName: data.value[0].fields.scheduleProperName,\n          descriptiveName: data.value[0].fields.scheduleDescriptiveName,\n          periods: JSON.parse(\n            data.value[0].fields.scheduleData,\n          ) as periodType[],\n          id: data.value[0].fields.scheduleId,\n          color: data.value[0].fields.scheduleColor,\n        };\n        return {\n          result: loadingStateEnum.success,\n          schedule: resultSchedule,\n          listItemId: data.value[0].id,\n        };\n      }\n      return { result: loadingStateEnum.failed, schedule: undefined };\n    }\n    return { result: loadingStateEnum.failed, schedule: undefined };\n  }\n  return { result: loadingStateEnum.failed, schedule: undefined };\n}\n\nexport async function getSchedules(): Promise<{\n  result: loadingStateEnum;\n  data?: scheduleType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.scheduleListId}/items?expand=fields`,\n  );\n  if (result.ok) {\n    const dataResult = await result.json();\n    if (\n      dataResult.value.length !== undefined &&\n      dataResult.value.length !== null\n    ) {\n      const newLoadedSchedules: scheduleType[] = [];\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        try {\n          const scheduleData = JSON.parse(\n            dataResult.value[index].fields.scheduleData,\n          ) as periodType[];\n          newLoadedSchedules.push({\n            properName: dataResult.value[index].fields.scheduleProperName,\n            descriptiveName:\n              dataResult.value[index].fields.scheduleDescriptiveName,\n            id: dataResult.value[index].fields.scheduleId,\n            periods: scheduleData,\n            color: dataResult.value[index].fields.scheduleColor,\n          });\n        } catch {\n          return { result: loadingStateEnum.failed };\n          // TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n        }\n      }\n      return {\n        result: loadingStateEnum.success,\n        data: newLoadedSchedules,\n        nextLink: dataResult['@odata.nextLink'],\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getTimetable(\n  timetableId: string,\n): Promise<{ result: loadingStateEnum; timetable?: timetableType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.timetablesListId\n    }/items?expand=fields&$filter=fields/timetableId%20eq%20'${timetableId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== undefined) {\n      if (data.value.length === 1) {\n        try {\n          const scheduleData: string[] = JSON.parse(\n            data.value[0].fields.timetableDataSchedules,\n          );\n          const newSchedules: scheduleType[] = [];\n          for (let index = 0; index < scheduleData.length; index += 1) {\n            const result = await getSchedule(scheduleData[index]);\n            if (\n              result.result === loadingStateEnum.success &&\n              result.schedule !== undefined\n            ) {\n              newSchedules.push(result.schedule);\n            } else {\n              return { result: loadingStateEnum.failed };\n            }\n          }\n          const dressCodeResult = await getDressCode(\n            data.value[0].fields.timetableDressCodeId,\n          );\n          if (\n            dressCodeResult.result === loadingStateEnum.success &&\n            dressCodeResult.data !== undefined\n          ) {\n            const resultingTimetable: timetableType = {\n              name: data.value[0].fields.timetableName,\n              id: data.value[0].fields.timetableId,\n              schedules: newSchedules,\n              days: JSON.parse(data.value[0].fields.timetableDataDays),\n              dressCode: dressCodeResult.data,\n            };\n            return {\n              result: loadingStateEnum.success,\n              timetable: resultingTimetable,\n            };\n          }\n          return { result: loadingStateEnum.failed };\n        } catch (e) {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n}\n\nexport async function getSchoolDay(\n  selectedDate: Date,\n): Promise<{ result: loadingStateEnum; event?: eventType }> {\n  const startDate: string = `${new Date(\n    Date.UTC(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth(),\n      selectedDate.getDate(),\n      0,\n    ),\n  )\n    .toISOString()\n    .slice(0, -1)}0000`;\n  const endDate: string = `${new Date(\n    Date.UTC(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth(),\n      selectedDate.getDate() + 1,\n      0,\n    ),\n  )\n    .toISOString()\n    .slice(0, -1)}0000`;\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${\n      store.getState().paulyList.eventDataExtensionId\n    }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20and%20ep/value%20eq%20'schoolDay')%20and%20start/dateTime%20eq%20'${startDate}'%20and%20end/dateTime%20eq%20'${endDate}'`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      if (data.value[index].singleValueExtendedProperties !== undefined) {\n        const eventData: { id: string; value: string }[] =\n          data.value[index].singleValueExtendedProperties;\n        if (eventData !== undefined) {\n          if (\n            eventData.find(e => {\n              return e.id === eventTypeExtensionID;\n            })?.value === 'schoolDay'\n          ) {\n            const event: eventType = {\n              id: data.value[index].id,\n              name: data.value[index].subject,\n              startTime: data.value[index].start.dateTime,\n              endTime: data.value[index].end.dateTime,\n              allDay: data.value[index].isAllDay,\n              eventColor: Colors.white,\n              microsoftEvent: true,\n              microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n              paulyEventType:\n                eventData.find(e => {\n                  return e.id === eventTypeExtensionID;\n                })?.value === 'schoolDay'\n                  ? 'schoolDay'\n                  : undefined,\n              paulyEventData: eventData.find(e => {\n                return e.id === eventDataExtensionID;\n              })?.value,\n            };\n            return { result: loadingStateEnum.success, event };\n          }\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSchoolDays(date: Date): Promise<{\n  result: loadingStateEnum;\n  data?: eventType[];\n  nextLink?: string;\n}> {\n  const firstDay = `${\n    new Date(date.getFullYear(), date.getMonth(), 1)\n      .toISOString()\n      .replace(/.\\d+Z$/g, 'Z')\n      .split(/[T ]/i, 1)[0]\n  }T00:00:00.0000000`;\n  const lastDay = `${\n    new Date(date.getFullYear(), date.getMonth() + 1, 1)\n      .toISOString()\n      .replace(/.\\d+Z$/g, 'Z')\n      .split(/[T ]/i, 1)[0]\n  }T00:00:00.0000000`;\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendarView?startDateTime=${firstDay}&endDateTime=${lastDay}&$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${\n      store.getState().paulyList.eventDataExtensionId\n    }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20and%20ep/value%20eq%20'schoolDay')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const scheduleIds = new Map<string, number>();\n    const schoolYearIds = new Map<string, number>();\n    for (let index = 0; index < data.value.length; index += 1) {\n      const outputIds: schoolDayDataCompressedType = JSON.parse(\n        data.value[index].singleValueExtendedProperties.find(\n          (e: { id: string; value: string }) => {\n            return e.id === store.getState().paulyList.eventDataExtensionId;\n          },\n        ).value,\n      );\n      scheduleIds.set(outputIds.scheduleId, 0);\n      schoolYearIds.set(outputIds.schoolYearEventId, 0);\n    }\n    // Get batch data\n\n    const batchRequestResultSchedule = await batchRequest(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.scheduleListId\n      }/items?expand=fields($select=scheduleProperName,scheduleDescriptiveName,scheduleColor,scheduleData,scheduleId)&$filter=fields/scheduleId%20eq%20'`,\n      secondUrl: `'&$select=id`,\n      method: 'GET',\n      keys: {\n        map: scheduleIds,\n      },\n    });\n\n    if (\n      batchRequestResultSchedule.result !== loadingStateEnum.success ||\n      batchRequestResultSchedule.data === undefined\n    ) {\n      return { result: loadingStateEnum.failed };\n    }\n    const schedules = new Map<string, scheduleType>();\n    for (\n      let scheudleIndex = 0;\n      scheudleIndex < batchRequestResultSchedule.data.length;\n      scheudleIndex += 1\n    ) {\n      const resultScheduleData =\n        batchRequestResultSchedule.data[scheudleIndex].body;\n      if (\n        batchRequestResultSchedule.data[scheudleIndex].status === 200 &&\n        resultScheduleData !== undefined\n      ) {\n        // TO DO fix status code\n        if (resultScheduleData.value.length === 1) {\n          const scheduleResponseData = resultScheduleData.value[0].fields;\n          try {\n            schedules.set(scheduleResponseData.scheduleId, {\n              properName: scheduleResponseData.scheduleProperName,\n              descriptiveName: scheduleResponseData.scheduleDescriptiveName,\n              periods: JSON.parse(scheduleResponseData.scheduleData),\n              id: scheduleResponseData.scheduleId,\n              color: scheduleResponseData.scheduleColor,\n            });\n          } catch {\n            return { result: loadingStateEnum.failed };\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n\n    const timetableResult = await getTimetablesFromSchoolYears(\n      schoolYearIds,\n      schedules,\n    );\n    if (\n      timetableResult.result !== loadingStateEnum.success ||\n      timetableResult.data === undefined\n    ) {\n      return { result: loadingStateEnum.failed };\n    }\n\n    const schoolDaysResult: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const outputIds: schoolDayDataCompressedType = JSON.parse(\n        data.value[index].singleValueExtendedProperties.find(\n          (e: { id: string; value: string }) => {\n            return e.id === store.getState().paulyList.eventDataExtensionId;\n          },\n        ).value,\n      );\n      const schedule = schedules.get(outputIds.scheduleId);\n      const timetable = timetableResult.data.get(outputIds.schoolYearEventId);\n      const dressCode = timetable?.dressCode.dressCodeData.find(e => {\n        return e.id === outputIds.dressCodeId;\n      });\n      const schoolDay = timetable?.days.find(e => {\n        return e.id === outputIds.schoolDayId;\n      });\n      if (\n        schedule !== undefined &&\n        timetable !== undefined &&\n        dressCode !== undefined &&\n        schoolDay !== undefined\n      ) {\n        schoolDaysResult.push({\n          id: data.value[index].id,\n          name: data.value[index].subject,\n          startTime: data.value[index].start.dateTime,\n          endTime: data.value[index].end.dateTime,\n          eventColor: schedule.color,\n          microsoftEvent: true,\n          allDay: !!data.value[index].isAllDay,\n          schoolDayData: {\n            schoolDayData: schoolDay,\n            schedule,\n            dressCode,\n            semester: outputIds.semester,\n            dressCodeIncentiveId: outputIds.dressCodeIncentiveId,\n          },\n        });\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: schoolDaysResult,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// This function gets both school years and their timetable data\nasync function getTimetablesFromSchoolYears(\n  schoolYearIds: Map<string, number>,\n  schedules: Map<string, scheduleType>,\n): Promise<{ result: loadingStateEnum; data?: Map<string, timetableType> }> {\n  // Get School Years\n  const batchRequestResultSchoolYear = await batchRequest(undefined, {\n    firstUrl: `/groups/${orgWideGroupID}/calendar/events/`,\n    secondUrl: `?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${store.getState().paulyList.eventDataExtensionId}')`,\n    method: 'GET',\n    keys: {\n      map: schoolYearIds,\n    },\n  });\n\n  if (\n    batchRequestResultSchoolYear.data === undefined ||\n    batchRequestResultSchoolYear.result !== loadingStateEnum.success\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const timetableIds = new Map<string, string[]>();\n  for (\n    let schoolYearIndex = 0;\n    schoolYearIndex < batchRequestResultSchoolYear.data.length;\n    schoolYearIndex += 1\n  ) {\n    if (batchRequestResultSchoolYear.data[schoolYearIndex].status === 200) {\n      // TO DO fix status code\n      const schoolYearResponseData: { id: string; value: string }[] =\n        batchRequestResultSchoolYear.data[schoolYearIndex].body\n          .singleValueExtendedProperties;\n      const schoolYearData = schoolYearResponseData.find(e => {\n        return e.id === store.getState().paulyList.eventDataExtensionId;\n      });\n      if (schoolYearData !== undefined) {\n        try {\n          const perviousTimetable = timetableIds.get(schoolYearData.value);\n          if (perviousTimetable !== undefined) {\n            timetableIds.set(schoolYearData.value, [\n              ...perviousTimetable,\n              batchRequestResultSchoolYear.data[schoolYearIndex].body.id,\n            ]);\n          } else {\n            timetableIds.set(schoolYearData.value, [\n              batchRequestResultSchoolYear.data[schoolYearIndex].body.id,\n            ]);\n          }\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  // Get timetables\n  const batchRequestResultTimetable = await batchRequest(undefined, {\n    firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n      store.getState().paulyList.timetablesListId\n    }/items?expand=fields($select=timetableName,timetableId,timetableDataDays,timetableDataSchedules,timetableDefaultScheduleId,timetableDressCodeId)&$filter=fields/timetableId%20eq%20'`,\n    secondUrl: `'&$select=id`,\n    method: 'GET',\n    keys: {\n      map: timetableIds,\n    },\n  });\n\n  if (\n    batchRequestResultTimetable.result !== loadingStateEnum.success ||\n    batchRequestResultTimetable.data === undefined\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const dressCodeIds = new Map<string, number>();\n  for (\n    let responseIndex = 0;\n    responseIndex < batchRequestResultTimetable.data.length;\n    responseIndex += 1\n  ) {\n    if (\n      batchRequestResultTimetable.data[responseIndex].status === 200 &&\n      batchRequestResultTimetable.data[responseIndex] !== undefined\n    ) {\n      // TO DO fix status code\n      if (\n        batchRequestResultTimetable.data[responseIndex].body.value.length === 1\n      ) {\n        try {\n          dressCodeIds.set(\n            batchRequestResultTimetable.data[responseIndex].body.value[0].fields\n              .timetableDressCodeId,\n            0,\n          );\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  // Get dress code data\n  const batchRequestResultDressCode = await batchRequest(undefined, {\n    firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeData,dressCodeIncentivesData,dressCodeName,dressCodeId)&$select=id&$filter=fields/dressCodeId%20eq%20'`,\n    secondUrl: `'&$top=1`,\n    method: 'GET',\n    keys: {\n      map: dressCodeIds,\n    },\n  });\n\n  if (\n    batchRequestResultDressCode.data === undefined ||\n    batchRequestResultDressCode.result !== loadingStateEnum.success\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const dressCodes = new Map<string, dressCodeType>();\n  for (\n    let dressCodeIndex = 0;\n    dressCodeIndex < batchRequestResultDressCode.data.length;\n    dressCodeIndex += 1\n  ) {\n    if (\n      batchRequestResultDressCode.data[dressCodeIndex].status === 200 &&\n      batchRequestResultDressCode.data[dressCodeIndex].body !== undefined\n    ) {\n      batchRequestResultDressCode.data[dressCodeIndex].body;\n      if (\n        batchRequestResultDressCode.data[dressCodeIndex].body?.value.length ===\n        1\n      ) {\n        try {\n          dressCodes.set(\n            batchRequestResultDressCode.data[dressCodeIndex].body?.value[0]\n              .fields.dressCodeId,\n            {\n              name: batchRequestResultDressCode.data[dressCodeIndex].body\n                .value[0].fields.dressCodeName,\n              id: batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                .fields.dressCodeId,\n              dressCodeData: JSON.parse(\n                batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                  .fields.dressCodeData,\n              ),\n              dressCodeIncentives:\n                batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                  .fields.dressCodeIncentivesData,\n            },\n          );\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  const timetables = new Map<string, timetableType>();\n  for (\n    let timetableIndex = 0;\n    timetableIndex < batchRequestResultTimetable.data.length;\n    timetableIndex += 1\n  ) {\n    const resultTimetableData =\n      batchRequestResultTimetable.data[timetableIndex].body;\n    if (\n      batchRequestResultTimetable.data[timetableIndex].status === 200 &&\n      resultTimetableData !== undefined\n    ) {\n      if (resultTimetableData.value.length === 1) {\n        const timetableData = resultTimetableData.value[0].fields;\n        const dressCode = dressCodes.get(timetableData.timetableDressCodeId);\n        const timetableSchedules: scheduleType[] = [];\n        const scheduleIds: string[] = JSON.parse(\n          timetableData.timetableDataSchedules,\n        );\n\n        for (\n          let scheduleIndex = 0;\n          scheduleIndex < scheduleIds.length;\n          scheduleIndex += 1\n        ) {\n          const newSchedule = schedules.get(scheduleIds[scheduleIndex]);\n          if (newSchedule !== undefined) {\n            timetableSchedules.push(newSchedule);\n          }\n        }\n        if (dressCode !== undefined) {\n          timetables.set(timetableData.timetableId, {\n            name: timetableData.timetableName,\n            id: timetableData.timetableId,\n            schedules: timetableSchedules,\n            days: JSON.parse(timetableData.timetableDataDays),\n            dressCode,\n          });\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  const outputTimetables = new Map<string, timetableType>();\n  timetables.forEach((value, key) => {\n    const timetablesArray = timetableIds.get(key);\n    if (timetablesArray) {\n      timetablesArray.forEach(item => {\n        outputTimetables.set(item, value);\n      });\n    }\n  });\n\n  return { result: loadingStateEnum.success, data: outputTimetables };\n}\n\nexport async function createDressCode(\n  dressCodeName: string,\n  dressCodeData: dressCodeDataType[],\n): Promise<loadingStateEnum> {\n  const dressCodeId = createUUID();\n  const data = {\n    fields: {\n      Title: dressCodeId,\n      dressCodeId,\n      dressCodeName,\n      dressCodeData: JSON.stringify(dressCodeData),\n      dressCodeIncentivesData: '[]',\n    },\n  };\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.dressCodeListId}/items`,\n    'POST',\n    JSON.stringify(data),\n  );\n  if (result.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  MonthView.tsx\n  This is the componet used on the home page of the app\n*/\nimport React, { useEffect, useState } from 'react';\nimport { View, Text } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  findFirstDayinMonth,\n  getDay,\n  getDaysInMonth,\n} from '../Functions/calendar/calendarFunctions';\nimport { getSchoolDays } from '../Functions/calendar/calendarFunctionsGraph';\nimport { RootState } from '../Redux/store';\nimport { monthViewSlice } from '../Redux/reducers/monthViewReducer';\nimport { Colors, loadingStateEnum } from '../types';\n\nfunction MonthBlock({\n  value,\n  width,\n  height,\n  startDate,\n  daySelected,\n}: {\n  value: number;\n  width: number;\n  height: number;\n  startDate: number;\n  daySelected: number;\n}) {\n  const textval: number = getDay(value, startDate) ?? 0;\n  const day = new Date().getDate();\n  const monthViewData = useSelector((state: RootState) => state.monthView).find(\n    e => {\n      return new Date(e.startTime).getDate() === textval;\n    },\n  );\n  return (\n    <View\n      style={{\n        width,\n        height,\n        borderColor: 'black',\n        borderWidth: 2,\n      }}\n      id=\"This\"\n    >\n      {value >= startDate - 1 && value <= daySelected && textval !== 0 ? (\n        <View\n          style={{\n            width,\n            position: 'absolute',\n            height,\n            borderColor: 'black',\n            backgroundColor:\n              day == textval\n                ? 'red'\n                : day >= textval + 1\n                ? 'gray'\n                : monthViewData !== undefined\n                ? monthViewData.eventColor\n                : Colors.white,\n          }}\n        />\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.white,\n            width,\n            height,\n          }}\n        />\n      )}\n      {textval >= 1 ? (\n        <View\n          id=\"Text\"\n          style={{\n            width,\n            height,\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            position: 'absolute',\n          }}\n        >\n          {monthViewData !== undefined ? (\n            <>\n              {monthViewData.schoolDayData !== undefined ? (\n                <>\n                  <Text\n                    style={{\n                      color: 'black',\n                      fontSize: 10,\n                      fontWeight: 'bold',\n                      position: 'absolute',\n                      top: 1,\n                      right: 3,\n                    }}\n                  >\n                    {monthViewData.schoolDayData.schoolDayData.shorthand}\n                  </Text>\n                  <Text style={{ color: 'black' }}>{textval}</Text>\n                </>\n              ) : (\n                <Text style={{ color: 'black', zIndex: 2 }}>{textval}</Text>\n              )}\n            </>\n          ) : (\n            <Text id=\"This is text\" style={{ color: 'black', zIndex: 2 }}>\n              {textval}\n            </Text>\n          )}\n        </View>\n      ) : null}\n    </View>\n  );\n}\n\nexport default function MonthView({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const Count = getDaysInMonth(new Date());\n  const StartDate = findFirstDayinMonth(new Date());\n  const [daySelected, setDaySelected] = useState<number>(\n    Count + StartDate - 2 - (Count / 7) * 2,\n  );\n  const thirtyValue = [...Array(30).keys()];\n  const monthViewData = useSelector((state: RootState) => state.monthView);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    if (monthViewData.length <= 0) {\n      const result = await getSchoolDays(new Date());\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        dispatch(monthViewSlice.actions.setMonthViewData(result.data));\n      }\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        width,\n        height,\n      }}\n    >\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Monday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Tuesday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Wednesday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Thursday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Friday\n        </Text>\n      </View>\n      {thirtyValue.map((value: number) => (\n        <View\n          style={{\n            width: width * 0.2,\n            height: height * 0.145,\n            overflow: 'hidden',\n          }}\n          key={value}\n        >\n          <MonthBlock\n            value={value}\n            width={width * 0.2}\n            height={height * 0.145}\n            startDate={StartDate}\n            daySelected={daySelected}\n          />\n        </View>\n      ))}\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport { loadingStateEnum } from '../../types';\nimport { paulyDataSlice } from '../../Redux/reducers/paulyDataReducer';\n\nexport default async function getCurrentPaulyData() {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.paulyDataListId}/items/1/fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (\n      data.animationSpeed !== undefined &&\n      data.message !== undefined &&\n      data.powerpointId !== undefined\n    ) {\n      const fileResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/shares/${data.powerpointId}/driveItem/content?format=pdf`,\n        'GET',\n        undefined,\n        [{ key: 'Prefer', value: 'redeemSharingLink' }],\n      ); // `https://graph.microsoft.com/v1.0/shares/${data[\"powerpointId\"]}/root?$select=@microsoft.graph.downloadUrl`\n      if (fileResult.ok) {\n        const dataBlob = await fileResult.blob();\n        const urlOut = URL.createObjectURL(dataBlob);\n        const outputResult = {\n          powerpointBlob: urlOut,\n          powerpointShare: data.powerpointId,\n          message: data.message,\n          animationSpeed: data.animationSpeed,\n          paulyDataState: loadingStateEnum.success,\n        };\n        store.dispatch(paulyDataSlice.actions.setPaulyData(outputResult));\n      } else {\n        store.dispatch(\n          paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n        );\n      }\n    } else {\n      store.dispatch(\n        paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    store.dispatch(\n      paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n    );\n  }\n}\n","import { View, Text, Animated, Easing, Platform } from 'react-native';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Colors } from '../types';\n\nexport default function ScrollingTextAnimation({\n  text,\n  width,\n  height,\n}: {\n  text: string;\n  width: number;\n  height: number;\n}) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [childWidth, setChildWidth] = useState<number>(0);\n  const mainLoop = (childWidthLoop: number) => {\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(pan, {\n          toValue: -childWidthLoop,\n          duration: 5000,\n          delay: 0,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        }),\n        Animated.timing(pan, {\n          toValue: 0,\n          duration: 0,\n          delay: 0,\n          useNativeDriver: false,\n        }),\n      ]),\n    ).start();\n  };\n\n  useEffect(() => {\n    if (childWidth !== 0) {\n      mainLoop(childWidth);\n    }\n  }, [childWidth, mainLoop]);\n\n  // Font\n  const [fontsLoaded] = useFonts({\n    GochiHand: require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View style={{ width, height, overflow: 'hidden' }}>\n      {childWidth !== 0 ? (\n        <Animated.View style={{ transform: [{ translateX: pan }] }}>\n          <View\n            style={{\n              width: childWidth + childWidth * 0.01,\n              height,\n              overflow: 'hidden',\n              position: 'absolute',\n              left: childWidth + childWidth * 0.01,\n            }}\n          >\n            <Text\n              style={{\n                fontFamily: 'GochiHand',\n                color: Colors.white,\n                fontSize: height,\n                height,\n              }}\n            >\n              {text}\n            </Text>\n          </View>\n          <View\n            style={{\n              width: childWidth + childWidth * 0.01,\n              height,\n              position: 'absolute',\n              left: 0,\n            }}\n          >\n            <Text\n              style={{\n                fontFamily: 'GochiHand',\n                color: Colors.white,\n                fontSize: height,\n                height,\n                position: 'absolute',\n              }}\n            >\n              {text}\n            </Text>\n          </View>\n        </Animated.View>\n      ) : (\n        <ScrollView style={{ width: 99999999 }} horizontal>\n          <Text\n            numberOfLines={1}\n            onLayout={e => {\n              setChildWidth(e.nativeEvent.layout.width);\n            }}\n            adjustsFontSizeToFit={!(Platform.OS === 'ios')}\n            style={{\n              fontFamily: 'GochiHand',\n              color: Colors.white,\n              fontSize: height,\n              height,\n            }}\n          >\n            {text}\n          </Text>\n        </ScrollView>\n      )}\n    </View>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useEffect, useCallback } from 'react';\nimport { View, Text, Image, Pressable } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useNavigate } from 'react-router-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MonthView from './MonthView';\nimport store, { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport getCurrentPaulyData from '../Functions/homepage/getCurrentPaulyData';\nimport ProgressView from '../UI/ProgressView';\nimport { BookIcon, MedalIcon, PersonIcon } from '../UI/Icons/Icons';\nimport ScrollingTextAnimation from '../UI/ScrollingTextAnimation';\nimport { Colors, loadingStateEnum } from '../types';\n\nexport default function HomePage() {\n  const navigate = useNavigate();\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const authenticationToken = useSelector(\n    (state: RootState) => state.authenticationToken,\n  );\n  const { message, paulyDataState } = useSelector(\n    (state: RootState) => state.paulyData,\n  );\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const dispatch = useDispatch();\n  const insets = useSafeAreaInsets();\n\n  async function loadData() {\n    await getCurrentPaulyData();\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.maroon,\n        bottom: Colors.maroon,\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    if (\n      store.getState().authenticationToken !== '' &&\n      store.getState().paulyList.siteId !== ''\n    ) {\n      loadData();\n    }\n  }, [authenticationToken, siteId]);\n\n  useEffect(() => {\n    if (currentBreakPoint > 0) {\n      navigate('/notifications');\n    }\n  }, [currentBreakPoint]);\n\n  // Font\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n    GochiHand: require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ backgroundColor: Colors.maroon, overflow: 'hidden' }}>\n        <Pressable\n          style={{ width: width * 1.0, height: height * 0.08 }}\n          onPress={() => {\n            navigate('/notifications');\n          }}\n        >\n          {paulyDataState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width: width * 1.0,\n                height: height * 0.08,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={width < height * 0.08 ? width * 0.1 : height * 0.07}\n                height={width < height * 0.08 ? width * 0.1 : height * 0.07}\n              />\n            </View>\n          ) : (\n            <>\n              {paulyDataState === loadingStateEnum.success ? (\n                <>\n                  {message !== '' ? (\n                    <ScrollingTextAnimation\n                      width={width * 1.0}\n                      height={height * 0.08}\n                      text={message}\n                    />\n                  ) : null}\n                </>\n              ) : (\n                <Text>Failed</Text>\n              )}\n            </>\n          )}\n        </Pressable>\n        <Pressable\n          onPress={() => {\n            navigate('/calendar');\n          }}\n          style={{ width: width * 0.999, height: height * 0.42 }}\n        >\n          <View>\n            <View\n              style={{\n                width: width * 1.0,\n                height: height * 0.05,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n                borderTopColor: 'black',\n                borderTopWidth: 2,\n                borderBottomColor: 'black',\n                borderBottomWidth: 2,\n              }}\n            >\n              <Text style={{ margin: 'auto', color: Colors.white }}>\n                Calendar\n              </Text>\n            </View>\n            <MonthView width={width * 1.0} height={height * 0.37} />\n          </View>\n        </Pressable>\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 1.0,\n            height: height * 0.25,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/commissions');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                  zIndex: 1,\n                }}\n              />\n              <MedalIcon\n                width={width * 0.5}\n                height={height * 0.23}\n                style={{ position: 'absolute', top: height * 0.01, zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              navigate('/sports');\n            }}\n            style={{ borderColor: 'black', borderWidth: 2 }}\n          >\n            <View\n              style={{\n                backgroundColor: Colors.maroon,\n                width: width * 0.5,\n                height: height * 0.25,\n                borderTopWidth: 1,\n                borderTopColor: 'black',\n                zIndex: 1,\n              }}\n            />\n            <Image\n              source={require('../../assets/images/Football.png')}\n              resizeMode=\"contain\"\n              width={width * 0.3}\n              height={height * 0.25}\n              style={{\n                zIndex: 2,\n                height: height * 0.25,\n                width: width * 0.5,\n                position: 'absolute',\n                aspectRatio: '1/1',\n              }}\n            />\n          </Pressable>\n        </View>\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 1.0,\n            height: height * 0.25,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/resources');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                  zIndex: 1,\n                }}\n              />\n              <BookIcon\n                width={width * 0.5}\n                height={height * 0.25}\n                style={{ position: 'absolute', zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              navigate('/profile');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                }}\n              />\n              <PersonIcon\n                width={width * 0.5}\n                height={height * 0.25}\n                style={{ position: 'absolute', zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n        </View>\n      </View>\n      <View\n        style={{\n          position: 'absolute',\n          backgroundColor: 'black',\n          width: 4,\n          left: width / 2 + 2,\n          bottom: -insets.bottom,\n          height: insets.bottom,\n        }}\n      />\n    </>\n  );\n}\n","import * as Location from 'expo-location';\nimport { getDistance } from 'geolib';\nimport { locationStateEnum } from '../../types';\n\nexport default async function getUsersLocation(\n  commission: commissionType,\n): Promise<{ result: locationStateEnum; data?: locationCoords }> {\n  const { status } = await Location.requestForegroundPermissionsAsync();\n  if (status !== 'granted') {\n    return { result: locationStateEnum.permissionDenied };\n  }\n\n  const location = await Location.getCurrentPositionAsync();\n  if (!location.mocked) {\n    if (\n      commission.coordinateLat !== undefined &&\n      commission.coordinateLng !== undefined &&\n      commission.proximity !== undefined\n    ) {\n      const prox = getDistance(\n        { lat: location.coords.latitude, lng: location.coords.longitude },\n        {\n          latitude: commission?.coordinateLat,\n          longitude: commission?.coordinateLng,\n        },\n      );\n      if (prox <= commission.proximity) {\n        return {\n          result: locationStateEnum.success,\n          data: {\n            latCoordinate: location.coords.latitude,\n            lngCoordinate: location.coords.longitude,\n          },\n        };\n      }\n      return { result: locationStateEnum.notCloseEnough };\n    }\n  } else {\n    return { result: locationStateEnum.mockedLocation };\n  }\n  return { result: locationStateEnum.notStarted };\n}\n","import { orgWideGroupID, paulyDomain } from '../../PaulyConfig';\nimport { loadingStateEnum } from '../../types';\nimport createUUID from '../ultility/createUUID';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nasync function b64toBlob(\n  b64Data: string,\n  contentType = '',\n  sliceSize = 512,\n): Promise<Blob | undefined> {\n  const result = await fetch(b64Data);\n  if (result.ok) {\n    return await result.blob();\n  }\n  return undefined;\n}\n\nexport async function addImage(\n  base64: string,\n): Promise<{ result: loadingStateEnum; data?: string }> {\n  const fileBlob = await b64toBlob(base64);\n  if (fileBlob !== undefined) {\n    const types: any = {\n      'image/bmp': '.bmp',\n      'image/gif': '.gif',\n      'image/jpeg': '.jpg',\n      'image/png': '.png',\n      'image/webp': '.webp',\n    };\n    if (types[fileBlob.type] !== undefined) {\n      const rootIdResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/me/drive/root?$select=id',\n      );\n      if (rootIdResult.ok) {\n        const rootIdData = await rootIdResult.json();\n        const imageUUID = createUUID();\n        const resumableSessionData = {\n          item: {\n            '@microsoft.graph.conflictBehavior': 'rename',\n            name: `Pauly_Image_${imageUUID}_Submission${types[fileBlob.type]}`,\n          },\n          deferCommit: true,\n        };\n        const resumableSessionResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/me/drive/items/${\n            rootIdData.id\n          }:/Pauly_Image_${imageUUID}_Submission${\n            types[fileBlob.type]\n          }:/createUploadSession`,\n          'POST',\n          JSON.stringify(resumableSessionData),\n        );\n        if (resumableSessionResult.ok) {\n          const resumableSessionResultData =\n            await resumableSessionResult.json();\n          const { uploadUrl } = resumableSessionResultData;\n          if (resumableSessionResultData.nextExpectedRanges.length === 1) {\n            const nextExpectedRange: string =\n              resumableSessionResultData.nextExpectedRanges[0];\n            let remaining: number = fileBlob.size;\n            let uploaded: number = 0;\n            if (nextExpectedRange === `${uploaded}-`) {\n              while (remaining > 0) {\n                // TO DO Check that this works\n                const uploadBlob = fileBlob.slice(\n                  uploaded,\n                  remaining >= 5242880 ? 5242880 : remaining,\n                );\n                uploaded += remaining >= 5242880 ? 5242880 : remaining;\n\n                const uploadResult = await fetch(uploadUrl, {\n                  headers: {\n                    'Content-Length': uploadBlob.size.toString(),\n                    'Content-Range': `bytes ${\n                      uploaded - (remaining >= 5242880 ? 5242880 : remaining)\n                    }-${remaining >= 5242880 ? uploaded : uploaded - 1}/${\n                      fileBlob.size\n                    }`,\n                  },\n                  method: 'PUT',\n                  body: uploadBlob,\n                });\n                remaining -= remaining >= 5242880 ? 5242880 : remaining;\n                if (uploadResult.ok) {\n                } else {\n                  return { result: loadingStateEnum.failed };\n                }\n              }\n              const uploadCompleteResult = await fetch(uploadUrl, {\n                headers: {\n                  'Content-Length': '0',\n                },\n                method: 'POST',\n              });\n              if (uploadCompleteResult.ok) {\n                const uploadCompleteResultData =\n                  await uploadCompleteResult.json();\n                const createLinkMainData = {\n                  type: 'view',\n                  scope: 'organization',\n                };\n                const createLinkResult = await callMsGraph(\n                  `https://graph.microsoft.com/v1.0/me/drive/items/${uploadCompleteResultData.id}/createLink`,\n                  'POST',\n                  JSON.stringify(createLinkMainData),\n                );\n                if (createLinkResult.ok) {\n                  const createLinkData = await createLinkResult.json();\n                  return {\n                    result: loadingStateEnum.success,\n                    data: createLinkData.shareId,\n                  };\n                }\n                return { result: loadingStateEnum.failed };\n              }\n              return { result: loadingStateEnum.failed };\n            }\n            return { result: loadingStateEnum.failed };\n          }\n          return { result: loadingStateEnum.failed };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function claimCommissionPost(\n  auth: string,\n  commissionId: string,\n  imageShare?: string,\n  location?: locationCoords,\n): Promise<loadingStateEnum> {\n  let outResult: string = '';\n  if (location) {\n    outResult += `&latCoordinate=${location.latCoordinate}&lngCoordinate=${location.lngCoordinate}`;\n  }\n  if (imageShare) {\n    outResult += `&imageShare=${imageShare}`;\n  }\n  const bearer = `Bearer ${auth}`;\n  try {\n    const result = await fetch(\n      `${paulyDomain}/api/SubmitCommission?orgWideGroupId=${orgWideGroupID}&commissionId=${commissionId}${outResult}`,\n      {\n        headers: {\n          Authorization: bearer,\n        },\n      },\n    );\n    if (result.ok) {\n      return loadingStateEnum.success;\n    }\n    return loadingStateEnum.failed;\n  } catch {\n    return loadingStateEnum.failed;\n  }\n}\n","import { useMsal } from '@azure/msal-react';\nimport React, { useState } from 'react';\nimport { Pressable, View, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport { clientId } from '../../PaulyConfig';\nimport getUsersLocation from '../../Functions/commissions/getLocation';\nimport {\n  addImage,\n  claimCommissionPost,\n} from '../../Functions/commissions/claimCommissionsFunctions';\nimport {\n  commissionTypeEnum,\n  loadingStateEnum,\n  locationStateEnum,\n} from '../../types';\nimport ProgressView from '../../UI/ProgressView';\n\nexport default function CommissionClaim({\n  commission,\n  imageData,\n}: {\n  commission: commissionType;\n  imageData?: string;\n}) {\n  const [claimCommissionState, setClaimCommissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const { instance } = useMsal();\n\n  async function claimCommission() {\n    setClaimCommissionState(loadingStateEnum.loading);\n    const apiResult = await instance.acquireTokenSilent({\n      scopes: [`api://${clientId}/api/Test`],\n    });\n    let outImageUrl: string = '';\n    if (\n      (commission.value === commissionTypeEnum.Image ||\n        commission.value === commissionTypeEnum.ImageLocation) &&\n      imageData !== undefined\n    ) {\n      const outImage = await addImage(imageData);\n      if (\n        outImage.result === loadingStateEnum.success &&\n        outImage.data !== undefined\n      ) {\n        outImageUrl = outImage.data;\n      } else {\n        setClaimCommissionState(loadingStateEnum.failed);\n        return;\n      }\n    }\n    if (\n      commission.value === commissionTypeEnum.ImageLocation ||\n      commission.value === commissionTypeEnum.Location\n    ) {\n      const locationResult = await getUsersLocation(commission);\n      if (\n        locationResult.result === locationStateEnum.success &&\n        locationResult.data !== undefined\n      ) {\n        const result = await claimCommissionPost(\n          apiResult.accessToken,\n          commission.commissionId,\n          outImageUrl !== '' ? outImageUrl : undefined,\n          locationResult.data,\n        );\n        setClaimCommissionState(result);\n      } else {\n        setClaimCommissionState(loadingStateEnum.failed);\n      }\n    } else {\n      const result = await claimCommissionPost(\n        apiResult.accessToken,\n        commission.commissionId,\n        outImageUrl !== '' ? outImageUrl : undefined,\n        undefined,\n      );\n      setClaimCommissionState(result);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => {\n        claimCommission();\n      }}\n      style={{\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: '#ededed',\n        width: width * 0.7,\n        borderRadius: 15,\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {claimCommissionState === loadingStateEnum.loading ? (\n        <View style={{ margin: 10 }}>\n          <ProgressView width={24} height={24} />\n        </View>\n      ) : (\n        <Text style={{ margin: 10, fontWeight: 'bold' }}>\n          {claimCommissionState === loadingStateEnum.notStarted\n            ? 'CLAIM COMMISSION'\n            : claimCommissionState === loadingStateEnum.success\n            ? 'SUBMISSION SENT'\n            : 'FAILED TO SEND SUBMISSION'}\n        </Text>\n      )}\n    </Pressable>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getCommission(\n  commissionId: string,\n): Promise<{ result: loadingStateEnum; data?: commissionType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.commissionListId\n    }/items?expand=fields&$filter=fields/commissionID%20eq%20'${commissionId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== 1) {\n      // Not found\n      return { result: loadingStateEnum.failed };\n    }\n    const dataResult: commissionType = {\n      itemId: data.value[0].id,\n      title: data.value[0].fields.Title,\n      startDate: data.value[0].fields.startDate,\n      endDate: data.value[0].fields.endDate,\n      points: data.value[0].fields.points,\n      hidden: data.value[0].fields.hidden,\n      commissionId: data.value[0].fields.commissionID,\n      proximity: data.value[0].fields.proximity,\n      coordinateLat: data.value[0].fields.coordinateLat,\n      coordinateLng: data.value[0].fields.coordinateLng,\n      postData: {\n        teamId: data.value[0].fields.postTeamId,\n        channelId: data.value[0].fields.postChannelId,\n        postId: data.value[0].fields.postId,\n      },\n      timed: false,\n      maxNumberOfClaims: 0,\n      allowMultipleSubmissions: false,\n      value: data.value[0].fields.value - 1,\n      submissionsCount: 0,\n      claimCount: 0,\n      reviewedCount: 0,\n    };\n    return { result: loadingStateEnum.success, data: dataResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Platform, ViewStyle } from 'react-native';\nimport React, { useState } from 'react';\nimport WebView from 'react-native-webview';\n\nexport default function WebViewCross({\n  html,\n  height,\n  rawHtml,\n  style,\n  width,\n}:\n  | {\n      html: string | undefined;\n      width: number;\n      rawHtml?: undefined;\n      height?: undefined;\n      style?: ViewStyle | undefined;\n    }\n  | {\n      rawHtml: string | undefined;\n      width: number;\n      height: number;\n      html?: undefined;\n      style?: ViewStyle | undefined;\n    }) {\n  const jsCode =\n    \"window.ReactNativeWebView.postMessage(document.getElementById('pauly-main').clientHeight)\";\n  // document.getElementById('pauly-main').innerHTML\n  const [adaptHeight, setAdaptHeight] = useState<number>(0);\n  if (html === undefined && rawHtml === undefined) {\n    return null\n  }\n\n  if (Platform.OS !== 'web') {\n    return <WebView\n      source={{\n        html:\n          rawHtml ||\n          `<!DOCTYPE html>\n        <html>\n        <head>\n          <style>\n            body {font-weight: normal; font-family: Arial; font-size: 55px}\n            div {font-weight: normal; font-family: Arial}\n          </style>\n        </head>\n        <body>\n          <div id=\"pauly-main\">\n            ${html}\n          </div>\n        </body>\n        </html>`,\n      }}\n      style={[\n        {\n          margin: 10,\n          height: height || adaptHeight + 10,\n          width,\n        },\n        style,\n      ]}\n      automaticallyAdjustContentInsets={false}\n      javaScriptEnabled\n      injectedJavaScript={jsCode}\n      onMessage={event =>\n        setAdaptHeight(parseFloat(event.nativeEvent.data) / 3)\n      }\n    />\n  } else {\n    return (\n      <View style={[{ margin: 10 }, style]}>\n        {html !== undefined ? (\n          <div dangerouslySetInnerHTML={{ __html: html }} />\n        ) : (\n          <>{rawHtml !== undefined ? { rawHtml } : null}</>\n        )}\n      </View>\n    )\n  }\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { View, Text, Pressable, Image } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport CommissionClaim from './CommissionClaim';\nimport getCommission from '../../Functions/commissions/getCommission';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport ProgressView from '../../UI/ProgressView';\nimport { CloseIcon } from '../../UI/Icons/Icons';\nimport WebViewCross from '../../UI/WebViewCross';\nimport { Colors, commissionTypeEnum, loadingStateEnum } from '../../types';\n\nenum CameraResult {\n  notStarted,\n  loading,\n  success,\n  permissionDenied,\n  goToSettings,\n  failed,\n}\n\nexport default function CommissionsView({\n  id,\n  onClose,\n}: {\n  id: string;\n  onClose: () => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [commissionData, setCommissionData] = useState<\n    commissionType | undefined\n  >(undefined);\n  const [commissionState, setCommissionState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [messageState, setMessageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [messageData, setMessageData] = useState<string>('');\n  const [imageUri, setImageUri] = useState<string>('');\n  const [takeImageState, setTakeImageState] = useState<CameraResult>(\n    CameraResult.notStarted,\n  );\n  const [pickImageState, setPickerImageState] = useState<CameraResult>(\n    CameraResult.notStarted,\n  );\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const [evaluatedOverflow, setEvaluatedOverflow] = useState<boolean>(false);\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function getPost(teamId: string, channelId: string, messageId: string) {\n    setMessageState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages/${messageId}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      setMessageData(data.body.content);\n      setMessageState(loadingStateEnum.success);\n    } else {\n      setMessageState(loadingStateEnum.failed);\n    }\n  }\n\n  async function getCommissionInformation() {\n    const result = await getCommission(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCommissionData(result.data);\n      if (result.data?.postData !== undefined) {\n        getPost(\n          result.data.postData.teamId,\n          result.data.postData.channelId,\n          result.data.postData.postId,\n        );\n      }\n    }\n    setCommissionState(result.result);\n  }\n\n  async function pickImage() {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsMultipleSelection: false,\n      allowsEditing: false,\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n    });\n    if (!result.canceled) {\n      if (result.assets.length === 1) {\n        setImageUri(result.assets[0].uri);\n        Image.getSize(\n          result.assets[0].uri,\n          (imageMeasureWidth, imageMeasureHeight) => {\n            const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n            setImageHeight(width * 0.7 * heightPerWidth);\n          },\n        );\n        setPickerImageState(CameraResult.success);\n      } else {\n        setPickerImageState(CameraResult.failed);\n      }\n    } else {\n      setPickerImageState(CameraResult.notStarted);\n    }\n  }\n  const [status, requestPermission] = ImagePicker.useCameraPermissions();\n\n  async function takeImage() {\n    setTakeImageState(CameraResult.loading);\n    if (status?.status === ImagePicker.PermissionStatus.GRANTED) {\n      const result = await ImagePicker.launchCameraAsync({\n        allowsEditing: false,\n        allowsMultipleSelection: false,\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      });\n      if (!result.canceled) {\n        if (result.assets.length === 1) {\n          setImageUri(result.assets[0].uri);\n          Image.getSize(\n            result.assets[0].uri,\n            (imageMeasureWidth, imageMeasureHeight) => {\n              const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n              setImageHeight(width * 0.7 * heightPerWidth);\n            },\n          );\n          setTakeImageState(CameraResult.success);\n        } else {\n          setTakeImageState(CameraResult.failed);\n        }\n      } else {\n        setTakeImageState(CameraResult.notStarted);\n      }\n    } else if (status?.canAskAgain) {\n      const permissionResult = await requestPermission();\n      if (permissionResult.granted) {\n        takeImage();\n      } else {\n        setTakeImageState(CameraResult.permissionDenied);\n      }\n    } else {\n      setTakeImageState(CameraResult.goToSettings);\n    }\n  }\n\n  useEffect(() => {\n    getCommissionInformation();\n  }, [id]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        width: width * 0.9,\n        height: height * 0.8,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n      }}\n    >\n      {commissionState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            height: height * 0.8,\n            width: width * 0.9,\n            alignItems: 'center',\n            justifyContent: 'center',\n            alignContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width * 0.8 < height * 0.7 ? width * 0.4 : height * 0.35}\n            height={width * 0.8 < height * 0.7 ? width * 0.4 : height * 0.35}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {commissionState === loadingStateEnum.success &&\n          commissionData !== undefined ? (\n            <View>\n              <View style={{ height: height * 0.1, overflow: 'hidden' }}>\n                <Pressable\n                  onPress={() => onClose()}\n                  style={{ marginTop: 10, marginLeft: 10 }}\n                >\n                  <CloseIcon\n                    width={width < height ? width * 0.05 : height * 0.05}\n                    height={width < height ? width * 0.05 : height * 0.05}\n                  />\n                </Pressable>\n                <View\n                  style={{\n                    width: width * 0.9,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Text style={{ fontSize: height * 0.03 }}>\n                    Commission: {commissionData.title}\n                  </Text>\n                </View>\n              </View>\n              <ScrollView\n                style={{ height: isOverflowing ? height * 0.6 : height * 0.7 }}\n              >\n                <View\n                  onLayout={e => {\n                    if (e.nativeEvent.layout.height >= height * 0.6) {\n                      setIsOverflowing(true);\n                      setEvaluatedOverflow(true);\n                    } else if (!evaluatedOverflow) {\n                      setIsOverflowing(false);\n                    }\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: 'row',\n                      margin: 10,\n                      backgroundColor: Colors.maroon,\n                      borderRadius: 15,\n                      shadowOffset: { width: 2, height: 3 },\n                    }}\n                  >\n                    <View style={{ margin: 10, flexDirection: 'row' }}>\n                      <Image\n                        source={require('../../../assets/images/PaulyLogo.png')}\n                        resizeMode=\"contain\"\n                        style={{ width: 50, height: 50 }}\n                      />\n                      <Text\n                        style={{\n                          fontSize: 45,\n                          color: Colors.white,\n                          fontFamily: 'BukhariScript',\n                          width: 100,\n                          paddingLeft: 10,\n                        }}\n                      >\n                        {commissionData.points}\n                      </Text>\n                    </View>\n                  </View>\n                  <View style={{ marginLeft: width * 0.05 }}>\n                    <WebViewCross html={messageData} width={width * 0.7} />\n                  </View>\n                  {commissionData.value === commissionTypeEnum.Image ||\n                  commissionData.value === commissionTypeEnum.ImageLocation ? (\n                    <>\n                      {imageUri !== '' ? (\n                        <Image\n                          source={{ uri: imageUri }}\n                          width={width * 0.7}\n                          resizeMode=\"center\"\n                          style={{\n                            width: width * 0.7,\n                            height: imageHeight,\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: '#FFFFFF',\n                            shadowOffset: { width: 0, height: 1 },\n                            shadowOpacity: 0.8,\n                            shadowRadius: 10,\n                            borderRadius: 15,\n                          }}\n                        />\n                      ) : (\n                        <View\n                          style={{\n                            width: width * 0.7,\n                            height: height * 0.3,\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: '#FFFFFF',\n                            shadowOffset: { width: 0, height: 1 },\n                            shadowOpacity: 0.8,\n                            shadowRadius: 10,\n                            borderRadius: 15,\n                          }}\n                        >\n                          <Text>No Photo Selected</Text>\n                        </View>\n                      )}\n                      <Pressable\n                        onPress={() => takeImage()}\n                        style={{\n                          marginLeft: 'auto',\n                          marginRight: 'auto',\n                          marginTop: 15,\n                          backgroundColor: '#ededed',\n                          width: width * 0.7,\n                          borderRadius: 15,\n                          alignItems: 'center',\n                          alignContent: 'center',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        {takeImageState === CameraResult.loading ? (\n                          <ProgressView\n                            width={14}\n                            height={14}\n                            style={{ margin: 10 }}\n                          />\n                        ) : (\n                          <Text style={{ margin: 10, fontWeight: 'bold' }}>\n                            {takeImageState === CameraResult.notStarted\n                              ? 'TAKE PHOTO'\n                              : takeImageState === CameraResult.goToSettings\n                              ? 'Go To Settings And Give Camera Permissions'\n                              : takeImageState === CameraResult.permissionDenied\n                              ? 'Permission Denied'\n                              : takeImageState === CameraResult.success\n                              ? 'TAKE DIFFERENT PHOTO'\n                              : 'AN ERROR OCCURED'}\n                          </Text>\n                        )}\n                      </Pressable>\n                      <Pressable\n                        onPress={() => pickImage()}\n                        style={{\n                          marginLeft: 'auto',\n                          marginRight: 'auto',\n                          marginTop: 10,\n                          backgroundColor: '#ededed',\n                          width: width * 0.7,\n                          borderRadius: 15,\n                          alignItems: 'center',\n                          alignContent: 'center',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        {pickImageState === CameraResult.loading ? (\n                          <ProgressView\n                            width={14}\n                            height={14}\n                            style={{ margin: 10 }}\n                          />\n                        ) : (\n                          <Text style={{ margin: 10, fontWeight: 'bold' }}>\n                            {pickImageState === CameraResult.notStarted\n                              ? 'CHOOSE PHOTO'\n                              : pickImageState === CameraResult.permissionDenied\n                              ? 'Permission Denied'\n                              : pickImageState === CameraResult.success\n                              ? 'USE A DIFFERENT PHOTO'\n                              : 'AN ERROR OCCURED'}\n                          </Text>\n                        )}\n                      </Pressable>\n                    </>\n                  ) : null}\n                  {isOverflowing ? null : (\n                    <View style={{ marginTop: 10, marginBottom: 10 }}>\n                      <CommissionClaim commission={commissionData} />\n                    </View>\n                  )}\n                </View>\n              </ScrollView>\n              {isOverflowing ? (\n                <View\n                  style={{\n                    height: height * 0.1,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <CommissionClaim\n                    commission={commissionData}\n                    imageData={imageUri !== '' ? imageUri : undefined}\n                  />\n                </View>\n              ) : null}\n            </View>\n          ) : (\n            <View>\n              <Text>Something Went Wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\n// Gets points when given an array of commission ids\nasync function getPointsBatch(\n  commissions: string[],\n): Promise<{ result: loadingStateEnum; points: number }> {\n  const outputRequests: { id: string; method: string; url: string }[] = [];\n  for (let index = 0; index < commissions.length; index += 1) {\n    outputRequests.push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?$expand=fields&$filter=fields/commissionID%20eq%20'${\n        commissions[index]\n      }' `,\n      // ?$expand=fields&$filter=fields/commissionID%20eq%20'${commissions[index]}'\n    });\n  }\n  const batchData = {\n    requests: outputRequests,\n  };\n\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/$batch',\n    'POST',\n    JSON.stringify(batchData),\n    [{ key: 'Accept', value: 'application/json' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    let pointsResult = 0;\n    for (\n      let requestIndex = 0;\n      requestIndex < data.responses.length;\n      requestIndex += 1\n    ) {\n      if (data.responses[requestIndex].status === 200) {\n        for (\n          let index = 0;\n          index < data.responses[requestIndex].body.value.length;\n          index += 1\n        ) {\n          pointsResult +=\n            data.responses[requestIndex].body.value[index].fields.points;\n        }\n      } else {\n        return { result: loadingStateEnum.failed, points: 0 };\n      }\n    }\n    return { result: loadingStateEnum.success, points: pointsResult };\n  }\n  return { result: loadingStateEnum.failed, points: 0 };\n}\n\nexport default async function getPoints(): Promise<{\n  result: loadingStateEnum;\n  data?: number;\n}> {\n  let nextUrl = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.commissionSubmissionsListId\n  }/items?expand=fields&$filter=fields/userId%20eq%20'${\n    store.getState().microsoftProfileData.id\n  }'%20and%20fields/submissionApproved%20ne%20false`;\n  let points: number = 0;\n  let commissions: string[] = [];\n  while (nextUrl !== '') {\n    const submissionResultClaimed = await callMsGraph(nextUrl);\n    if (!submissionResultClaimed.ok) {\n      return { result: loadingStateEnum.failed };\n    }\n    const submissionResultClaimedData = await submissionResultClaimed.json();\n    for (\n      let index = 0;\n      index < submissionResultClaimedData.value.length;\n      index += 1\n    ) {\n      if (\n        submissionResultClaimedData.value[0].fields.submissionApproved === true\n      ) {\n        commissions.push(\n          submissionResultClaimedData.value[0].fields.commissionId,\n        );\n        if (commissions.length >= 20) {\n          const batchResult = await getPointsBatch(commissions);\n          if (batchResult.result !== loadingStateEnum.success) {\n            return { result: loadingStateEnum.failed };\n          }\n          points += batchResult.points;\n          commissions = [];\n        }\n      }\n    }\n    if (submissionResultClaimedData['@odata.nextLink'] !== undefined) {\n      nextUrl = submissionResultClaimedData['@odata.nextLink'];\n    } else {\n      nextUrl = '';\n      if (commissions.length !== 0) {\n        const batchResult = await getPointsBatch(commissions);\n        if (batchResult.result !== loadingStateEnum.success) {\n          return { result: loadingStateEnum.failed };\n        }\n        points += batchResult.points;\n      }\n    }\n  }\n  return { result: loadingStateEnum.success, data: points };\n}\n","import { commissionsSlice } from '../../Redux/reducers/commissionsReducer';\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction getFilter(\n  startDate?: { date: Date; filter: 'ge' | 'le' },\n  endDate?: { date: Date; filter: 'ge' | 'le' },\n) {\n  const startDateString = startDate?.date.toISOString().replace(/.\\d+Z$/g, 'Z');\n  const endDateString = endDate?.date.toISOString().replace(/.\\d+Z$/g, 'Z');\n  if (startDate || endDate) {\n    let filter = '&$filter=';\n    if (startDate) {\n      filter += `fields/startDate%20${startDate.filter}%20${startDateString}`;\n    }\n    if (endDate) {\n      filter += startDate\n        ? `&fields/endDate%20le%20${endDateString}`\n        : `fields/endDate%20${endDate.filter}%20${endDateString}`;\n    }\n  } else {\n    return '';\n  }\n}\n\nasync function getSubmissions(commissionIds: string[]): Promise<{\n  result: loadingStateEnum;\n  data?: Map<\n    string,\n    { claimCount: number; submissionsCount: number; reviewedCount: number }\n  >;\n}> {\n  const outputRequests: { id: string; method: string; url: string }[][] = [[]];\n  for (let index = 0; index < commissionIds.length; index += 1) {\n    outputRequests[Math.floor(index / 20)].push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionSubmissionsListId\n      }/items?expand=fields(select=commissionId,submissions)`,\n    });\n    if (index % 20 === 0) {\n      outputRequests.push([]);\n    }\n  }\n  const outputMap = new Map<\n    string,\n    { claimCount: number; submissionsCount: number; reviewedCount: number }\n  >();\n  for (let index = 0; outputRequests.length < index; index += 1) {\n    const requestData = {\n      requests: outputRequests[index],\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.commissionListId}/items`,\n      'POST',\n      JSON.stringify(requestData),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      for (\n        let responseIndex = 0;\n        responseIndex < data.responses.length;\n        responseIndex += 1\n      ) {\n        if (data.responses[responseIndex].status === 200) {\n          for (\n            let dataIndex = 0;\n            dataIndex < data.respone[index].body.length;\n            dataIndex += 1\n          ) {\n            if (data.respone[index].body['@odata.nextLink'] !== undefined) {\n              if (outputRequests[outputRequests.length - 1].length < 20) {\n                outputRequests[outputRequests.length - 1].push({\n                  id: outputRequests[\n                    outputRequests.length - 1\n                  ].length.toString(),\n                  method: 'GET',\n                  url: data.respone[index].body['@odata.nextLink'],\n                });\n              } else {\n                outputRequests.push([]);\n                outputRequests[outputRequests.length - 1].push({\n                  id: outputRequests[\n                    outputRequests.length - 1\n                  ].length.toString(),\n                  method: 'GET',\n                  url: data.respone[index].body['@odata.nextLink'],\n                });\n              }\n            }\n            for (\n              let valueIndex = 0;\n              valueIndex < data.respone[index].body.value.length;\n              valueIndex += 1\n            ) {\n              if (\n                outputMap.has(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                )\n              ) {\n                const mapData = outputMap.get(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                );\n                if (mapData !== undefined) {\n                  const subApproved =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionApproved;\n                  const subReviewed =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionReviewed;\n                  outputMap.set(\n                    data.respone[index].body.value[valueIndex].commissionId,\n                    {\n                      submissionsCount: (mapData.submissionsCount += 1),\n                      claimCount: subApproved\n                        ? (mapData.claimCount += 1)\n                        : mapData.claimCount,\n                      reviewedCount: subReviewed\n                        ? (mapData.reviewedCount += 1)\n                        : mapData.reviewedCount,\n                    },\n                  );\n                } else {\n                  const subApproved =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionApproved;\n                  const subReviewed =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionReviewed;\n                  outputMap.set(\n                    data.respone[index].body.value[valueIndex].commissionId,\n                    {\n                      submissionsCount: 1,\n                      claimCount: subApproved ? 1 : 0,\n                      reviewedCount: subReviewed ? 1 : 0,\n                    },\n                  );\n                }\n              } else {\n                const subApproved =\n                  data.respone[index].body.value[valueIndex].submissionApproved;\n                const subReviewed =\n                  data.respone[index].body.value[valueIndex].submissionReviewed;\n                outputMap.set(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                  {\n                    submissionsCount: 1,\n                    claimCount: subApproved ? 1 : 0,\n                    reviewedCount: subReviewed ? 1 : 0,\n                  },\n                );\n              }\n            }\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  return { result: loadingStateEnum.success, data: outputMap };\n}\n\nexport default async function getCommissions(\n  nextLink?: string,\n  startDate?: { date: Date; filter: 'ge' | 'le' },\n  endDate?: { date: Date; filter: 'ge' | 'le' },\n  claimed?: boolean,\n): Promise<{\n  result: loadingStateEnum;\n  data?: commissionType[];\n  nextLink?: string;\n}> {\n  if (nextLink === undefined) {\n    store.dispatch(commissionsSlice.actions.setCommissionNextLink(undefined));\n  }\n  if (claimed === true) {\n    const result = await getUnclaimedCommissions();\n    return { result: result.result, data: result.data };\n  }\n  const filter = getFilter(startDate, endDate);\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?expand=fields${filter}`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const commissionsIds: string[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        commissionsIds.push(data.value[index].fields.commissionId);\n      }\n      const submissions = await getSubmissions(commissionsIds);\n      if (\n        submissions.result === loadingStateEnum.success &&\n        submissions.data !== undefined\n      ) {\n        const resultCommissions: commissionType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          const submissionData = submissions.data.get(\n            data.value[index].fields.commissionID as string,\n          );\n          resultCommissions.push({\n            itemId: data.value[index].id,\n            title: data.value[index].fields.Title,\n            startDate: data.value[index].fields.startDate,\n            endDate: data.value[index].fields.endDate,\n            claimCount: submissionData ? submissionData.claimCount : 0,\n            submissionsCount: submissionData\n              ? submissionData.submissionsCount\n              : 0,\n            reviewedCount: submissionData ? submissionData.reviewedCount : 0,\n            points: data.value[index].fields.points as number,\n            proximity: data.value[index].fields.proximity as number,\n            commissionId: data.value[index].fields.commissionID as string,\n            hidden: data.value[index].fields.hidden,\n            timed: data.value[index].fields.timed,\n            maxNumberOfClaims: data.value[index].fields.maxNumberOfClaims,\n            allowMultipleSubmissions:\n              data.value[index].fields.allowMultipleSubmissions,\n            value: data.value[index].fields.hidden - 1,\n          });\n        }\n        return {\n          result: loadingStateEnum.success,\n          data: resultCommissions,\n          nextLink: data['@odata.nextLink'],\n        };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\ntype unclaimedCommissionSubmissionType = {\n  commissionId: string;\n  submissions: number;\n};\n\n// Get Claimed Commmissions\n\n// Gets points when given an array of commission ids\nasync function getCommissionsBatch(\n  commissions: unclaimedCommissionSubmissionType[],\n): Promise<{ result: loadingStateEnum; data?: commissionType[] }> {\n  const outputRequests: { id: string; method: string; url: string }[] = [];\n  for (let index = 0; index < commissions.length; index += 1) {\n    outputRequests.push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?$expand=fields&$filter=fields/commissionID%20eq%20'${\n        commissions[index]\n      }' `,\n    });\n  }\n  const batchData = {\n    requests: outputRequests,\n  };\n\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/$batch',\n    'POST',\n    JSON.stringify(batchData),\n    [{ key: 'Accept', value: 'application/json' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const commissionsResult: commissionType[] = [];\n    for (\n      let requestIndex = 0;\n      requestIndex < data.responses.length;\n      requestIndex += 1\n    ) {\n      if (data.responses[requestIndex].status === 200) {\n        for (\n          let index = 0;\n          index < data.responses[requestIndex].body.value.length;\n          index += 1\n        ) {\n          commissionsResult.push({\n            itemId: data.responses[requestIndex].body.value[index].id,\n            title: data.responses[requestIndex].body.value[index].fields.Title,\n            startDate:\n              data.responses[requestIndex].body.value[index].fields.startDate,\n            endDate:\n              data.responses[requestIndex].body.value[index].fields.endDate,\n            submissionsCount:\n              commissions[parseInt(data.responses[requestIndex].id) - 1]\n                .submissions,\n            claimCount: 0,\n            reviewedCount: 0, // TO DO fix\n            points: data.responses[requestIndex].body.value[index].fields\n              .points as number,\n            proximity: data.responses[requestIndex].body.value[index].fields\n              .proximity as number,\n            commissionId: data.responses[requestIndex].body.value[index].fields\n              .commissionID as string,\n            hidden:\n              data.responses[requestIndex].body.value[index].fields.hidden,\n            timed: data.responses[requestIndex].body.value[index].fields.timed,\n            maxNumberOfClaims:\n              data.responses[requestIndex].body.value[index].fields\n                .maxNumberOfClaims,\n            allowMultipleSubmissions:\n              data.responses[requestIndex].body.value[index].fields\n                .allowMultipleSubmissions,\n            value:\n              data.responses[requestIndex].body.value[index].fields.hidden - 1,\n          });\n        }\n      } else {\n        return { result: loadingStateEnum.failed, data: commissionsResult };\n      }\n    }\n    return { result: loadingStateEnum.success, data: commissionsResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getUnclaimedCommissions(): Promise<{\n  result: loadingStateEnum;\n  data?: commissionType[];\n}> {\n  let nextUrl = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.commissionSubmissionsListId\n  }/items?expand=fields&$filter=fields/userId%20eq%20'${\n    store.getState().microsoftProfileData.id\n  }'%20and%20fields/submissionApproved%20ne%20false`;\n  // The first value in the map is the commission id and the second is the submissions count b/c all are unclaimed\n  const commissionsMap = new Map<string, number>();\n  while (nextUrl !== '') {\n    const submissionResultClaimed = await callMsGraph(nextUrl);\n    if (!submissionResultClaimed.ok) {\n      return { result: loadingStateEnum.failed };\n    }\n    const submissionResultClaimedData = await submissionResultClaimed.json();\n    for (\n      let index = 0;\n      index < submissionResultClaimedData.value.length;\n      index += 1\n    ) {\n      if (\n        submissionResultClaimedData.value[index].fields.submissionApproved ===\n        false\n      ) {\n        if (\n          commissionsMap.has(\n            submissionResultClaimedData.value[index].fields.commissionId,\n          )\n        ) {\n          const count = commissionsMap.get(\n            submissionResultClaimedData.value[index].fields.commissionId,\n          );\n          if (count !== undefined) {\n            commissionsMap.set(\n              submissionResultClaimedData.value[index].fields.commissionId,\n              count + 1,\n            );\n          }\n        } else {\n          commissionsMap.set(\n            submissionResultClaimedData.value[index].fields.commissionId,\n            1,\n          );\n        }\n      }\n    }\n    if (submissionResultClaimedData['@odata.nextLink'] !== undefined) {\n      nextUrl = submissionResultClaimedData['@odata.nextLink'];\n    } else {\n      nextUrl = '';\n    }\n  }\n  const commissionsBatchData: unclaimedCommissionSubmissionType[][] = [[]];\n  let batchIndex = 0;\n  commissionsMap.forEach((value, key) => {\n    commissionsBatchData[batchIndex].push({\n      commissionId: key,\n      submissions: value,\n    });\n    if (commissionsBatchData[batchIndex].length >= 20) {\n      commissionsBatchData.push([]);\n      batchIndex += 1;\n    }\n  });\n\n  let outCommissions: commissionType[] = [];\n  for (let index = 0; index < commissionsBatchData.length; index += 1) {\n    const result = await getCommissionsBatch(commissionsBatchData[index]);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      outCommissions = [...outCommissions, ...result.data];\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: outCommissions };\n}\n","import { View, Text, Pressable, ViewStyle } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { ChevronLeft } from './Icons/Icons';\n\nexport default function BackButton({\n  to,\n  style,\n}: {\n  to: string;\n  style?: ViewStyle;\n}) {\n  const navigate = useNavigate();\n  return (\n    <Pressable\n      style={[\n        {\n          position: 'absolute',\n          flexDirection: 'row',\n          top: 0,\n          left: 5,\n          zIndex: 100,\n        },\n        style,\n      ]}\n      onPress={() => navigate(to)}\n    >\n      <ChevronLeft width={14} height={14} />\n      <Text>Back</Text>\n    </Pressable>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  FlatList,\n  Pressable,\n  ScrollView,\n  Text,\n  View,\n  Image,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CommissionsView from './CommissionsView';\nimport { commissionsSlice } from '../../Redux/reducers/commissionsReducer';\nimport { RootState } from '../../Redux/store';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport getPoints from '../../Functions/commissions/getPoints';\nimport getCommissions from '../../Functions/commissions/getCommissions';\nimport ProgressView from '../../UI/ProgressView';\nimport BackButton from '../../UI/BackButton';\nimport { Colors, loadingStateEnum } from '../../types';\n\nexport default function Commissions() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const { commissionNextLink } = useSelector(\n    (state: RootState) => state.commissions,\n  );\n  const { currentCommissions, selectedCommission, commissionsState, points } =\n    useSelector((state: RootState) => state.commissions);\n\n  const [isHoverPicker, setIsHoverPicker] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  // Loading States\n\n  async function loadData() {\n    const pointResult = await getPoints();\n    if (\n      pointResult.result === loadingStateEnum.success &&\n      pointResult.data !== undefined\n    ) {\n      dispatch(commissionsSlice.actions.setPoints(pointResult.data));\n      const commissionsResult = await getCommissions();\n      if (\n        (commissionsResult.result === loadingStateEnum.success,\n        commissionsResult.data !== undefined)\n      ) {\n        dispatch(\n          commissionsSlice.actions.setCurrentCommissions(\n            commissionsResult.data,\n          ),\n        );\n      }\n      dispatch(\n        commissionsSlice.actions.setCommissionNextLink(\n          commissionsResult.nextLink,\n        ),\n      );\n      dispatch(\n        commissionsSlice.actions.setCommissionsState(commissionsResult.result),\n      );\n    } else {\n      dispatch(\n        commissionsSlice.actions.setCommissionsState(pointResult.result),\n      );\n    }\n    // TO DO pagination\n  }\n\n  async function loadCommissionData(\n    startDate?: { date: Date; filter: 'ge' | 'le' },\n    endDate?: { date: Date; filter: 'ge' | 'le' },\n    claimed?: boolean,\n    nextLink?: string,\n  ) {\n    dispatch(\n      commissionsSlice.actions.setCommissionsState(loadingStateEnum.loading),\n    );\n    const result = await getCommissions(nextLink, startDate, endDate, claimed);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      dispatch(commissionsSlice.actions.setCurrentCommissions(result.data));\n    }\n    dispatch(commissionsSlice.actions.setCommissionsState(result.result));\n    dispatch(commissionsSlice.actions.setCommissionNextLink(result.nextLink));\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (siteId !== '') {\n      loadData();\n    }\n  }, [siteId]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ width, height, backgroundColor: Colors.white }}>\n        <View\n          style={{\n            width,\n            height: height * 0.1,\n            backgroundColor: Colors.darkGray,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n          <Text\n            style={{\n              fontFamily: 'BukhariScript',\n              fontSize: 25,\n              color: Colors.white,\n            }}\n          >\n            Commissions\n          </Text>\n        </View>\n        <View style={{ height: isHoverPicker ? height * 0.8 : height * 0.85 }}>\n          {commissionsState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height: height * 0.9,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={width < height ? width * 0.1 : height * 0.1}\n                height={width < height ? width * 0.1 : height * 0.1}\n              />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              {commissionsState === loadingStateEnum.success ? (\n                <FlatList\n                  style={{ height: height * 0.9 }}\n                  data={[undefined, ...currentCommissions]}\n                  renderItem={({ item, index }) => (\n                    <>\n                      {index === 0 ? (\n                        <View\n                          style={{\n                            flexDirection: 'row',\n                            margin: 10,\n                            backgroundColor: Colors.maroon,\n                            borderRadius: 15,\n                            shadowOffset: { width: 2, height: 3 },\n                          }}\n                        >\n                          <View style={{ margin: 10, flexDirection: 'row' }}>\n                            <Image\n                              source={require('../../../assets/images/PaulyLogo.png')}\n                              resizeMode=\"contain\"\n                              style={{ width: 50, height: 50 }}\n                            />\n                            <Text\n                              numberOfLines={1}\n                              adjustsFontSizeToFit\n                              style={{\n                                fontSize: 45,\n                                color: Colors.white,\n                                fontFamily: 'BukhariScript',\n                                width: 100,\n                                paddingLeft: 10,\n                              }}\n                            >\n                              {points}\n                            </Text>\n                          </View>\n                        </View>\n                      ) : (\n                        <>\n                          {item !== undefined ? (\n                            <Pressable\n                              onPress={() => {\n                                dispatch(\n                                  commissionsSlice.actions.setSelectedCommission(\n                                    item.commissionId,\n                                  ),\n                                );\n                              }}\n                              key={`Link_${item.commissionId}`}\n                              style={{ backgroundColor: 'transparent' }}\n                            >\n                              <View\n                                key={item.commissionId}\n                                style={{\n                                  borderRadius: 15,\n                                  marginLeft: width * 0.025,\n                                  elevation: 2,\n                                  marginRight: width * 0.025,\n                                  marginTop: height * 0.02,\n                                  backgroundColor: Colors.white,\n                                  shadowColor: 'black',\n                                  shadowOffset: { width: 1, height: 1 },\n                                  shadowOpacity: 1,\n                                  shadowRadius: 5,\n                                }}\n                              >\n                                <View style={{ margin: 10 }}>\n                                  <Text>{item.title}</Text>\n                                  {item.timed &&\n                                  item.startDate !== undefined ? (\n                                    <Text>\n                                      {new Date(\n                                        item.startDate,\n                                      ).toLocaleDateString('en-US', {\n                                        month: 'long',\n                                        day: 'numeric',\n                                        minute: 'numeric',\n                                      })}\n                                    </Text>\n                                  ) : null}\n                                </View>\n                              </View>\n                            </Pressable>\n                          ) : null}\n                        </>\n                      )}\n                    </>\n                  )}\n                  keyExtractor={item => `${item?.commissionId}_${createUUID()}`}\n                  onEndReachedThreshold={1}\n                  onEndReached={() => {\n                    if (commissionNextLink !== undefined) {\n                      loadCommissionData(\n                        undefined,\n                        undefined,\n                        undefined,\n                        commissionNextLink,\n                      );\n                    }\n                  }}\n                  initialNumToRender={currentCommissions.length}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </View>\n          )}\n        </View>\n        <Pressable\n          style={{ height: isHoverPicker ? height * 0.1 : height * 0.05 }}\n          onHoverIn={() => {\n            setIsHoverPicker(true);\n          }}\n          onHoverOut={() => {\n            setIsHoverPicker(false);\n          }}\n        >\n          <ScrollView\n            horizontal\n            style={{\n              height: isHoverPicker ? height * 0.1 : height * 0.05,\n              width,\n              backgroundColor: Colors.white,\n            }}\n            showsHorizontalScrollIndicator={false}\n          >\n            <PickerPiece\n              text=\"All\"\n              onPress={() => {\n                loadCommissionData();\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Current\"\n              onPress={() => {\n                loadCommissionData(\n                  { date: new Date(), filter: 'ge' },\n                  { date: new Date(), filter: 'le' },\n                );\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Past\"\n              onPress={() => {\n                loadCommissionData(\n                  { date: new Date(), filter: 'le' },\n                  { date: new Date(), filter: 'le' },\n                );\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Claimed\"\n              onPress={() => {\n                loadCommissionData(undefined, undefined, true);\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Future\"\n              onPress={() => {\n                loadCommissionData(undefined, {\n                  date: new Date(),\n                  filter: 'ge',\n                });\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n          </ScrollView>\n        </Pressable>\n      </View>\n      <View\n        style={{\n          position: 'absolute',\n          zIndex: 2,\n          top: height * 0.1,\n          left: width * 0.05,\n        }}\n      >\n        {selectedCommission !== '' ? (\n          <CommissionsView\n            id={selectedCommission}\n            onClose={() =>\n              dispatch(commissionsSlice.actions.setSelectedCommission(''))\n            }\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nfunction PickerPiece({\n  text,\n  isHoverPicker,\n  setIsHoverPicker,\n  onPress,\n}: {\n  text: string;\n  onPress: () => void;\n  isHoverPicker: boolean;\n  setIsHoverPicker: (item: boolean) => void;\n}) {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      onPress={() => {\n        onPress();\n      }}\n      onHoverIn={() => {\n        setIsHoverPicker(true);\n        setIsSelected(true);\n      }}\n      onHoverOut={() => setIsSelected(false)}\n      style={{\n        height: isHoverPicker ? height * 0.1 : height * 0.05,\n        width: isSelected\n          ? currentBreakPoint >= 2\n            ? width * 0.3\n            : width * 0.6\n          : currentBreakPoint >= 2\n          ? width * 0.2\n          : width * 0.4,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          height: isHoverPicker ? height * 0.06 : height * 0.03,\n          width: isSelected\n            ? currentBreakPoint >= 2\n              ? width * 0.28\n              : width * 0.46\n            : currentBreakPoint >= 2\n            ? width * 0.18\n            : width * 0.36,\n          marginLeft: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          marginRight: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          backgroundColor: Colors.darkGray,\n          borderRadius: 15,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white }}>{text}</Text>\n      </View>\n    </Pressable>\n  );\n}\n","import { taskDeltaSlice } from '../../Redux/reducers/tasksReducers';\nimport store from '../../Redux/store';\nimport {\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction convertStringToTaskStatus(status: string): taskStatusEnum {\n  if (status === 'notStarted') {\n    return taskStatusEnum.notStarted;\n  }\n  if (status === 'inProgress') {\n    return taskStatusEnum.inProgress;\n  }\n  if (status === 'completed') {\n    return taskStatusEnum.completed;\n  }\n  if (status === 'waitingOnOthers') {\n    return taskStatusEnum.waitingOnOthers;\n  }\n  return taskStatusEnum.deferred;\n}\n\nfunction convertStringToImportance(importance: string): taskImportanceEnum {\n  if (importance === 'high') {\n    return taskImportanceEnum.high;\n  }\n  if (importance === 'low') {\n    return taskImportanceEnum.low;\n  }\n  return taskImportanceEnum.normal;\n}\n\n// deltaRunAgain is send if the delta link has failed or the responce 410 meaning syncronization is needed.\nexport default async function getUsersTasks(\n  deltaRunAgain?: boolean,\n): Promise<{ result: loadingStateEnum; data?: taskType[] }> {\n  let deltaMode = false;\n  if (store.getState().tasksDeltaLink !== '' && deltaRunAgain !== true) {\n    deltaMode = true;\n  }\n  const url = deltaMode\n    ? store.getState().tasksDeltaLink\n    : 'https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/delta';\n  const tasksResult = await callMsGraph(url);\n  if (tasksResult.ok) {\n    const taskData = await tasksResult.json();\n    if (taskData['@odata.deltaLink'] !== undefined) {\n      store.dispatch(\n        taskDeltaSlice.actions.setTaskDeltaLink(taskData['@odata.deltaLink']),\n      );\n    }\n    const resultTasks: taskType[] = [];\n    for (let index = 0; index < taskData.value.length; index += 1) {\n      resultTasks.push({\n        name: taskData.value[index].title,\n        id: taskData.value[index].id,\n        importance: convertStringToImportance(taskData.value[index].importance),\n        status: convertStringToTaskStatus(taskData.value[index].status),\n        excess: false,\n      });\n    }\n    resultTasks.unshift({\n      name: '',\n      importance: taskImportanceEnum.normal,\n      id: '',\n      status: taskStatusEnum.notStarted,\n      excess: true,\n    });\n    return { result: loadingStateEnum.success, data: resultTasks };\n  }\n  if (deltaMode) {\n    const secondAttempt = await getUsersTasks(true);\n    return secondAttempt;\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  getInsightData.ts\n\n  used to get insight files that are used on the notification page.\n*/\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getInsightData(): Promise<insightResult> {\n  // Get used https://learn.microsoft.com/en-us/graph/api/insights-list-used?view=graph-rest-1.0&tabs=http\n  const usedResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/insights/used?$select=resourceReference,resourceVisualization',\n  );\n  const userOutData: attachment[] = [];\n  let userState: loadingStateEnum = loadingStateEnum.loading; // State of getting users data\n  if (usedResult.ok) {\n    // Check if result success\n    const userData = await usedResult.json();\n    for (let index = 0; index < userData.value.length; index += 1) {\n      userOutData.push({\n        webUrl: userData.value[index].resourceReference.webUrl,\n        id: userData.value[index].resourceReference.id,\n        title: userData.value[index].resourceVisualization.title,\n        type: userData.value[index].resourceVisualization.type,\n      });\n    }\n    userState = loadingStateEnum.success;\n  } else {\n    userState = loadingStateEnum.failed;\n  }\n\n  // Get trending https://learn.microsoft.com/en-us/graph/api/insights-list-trending?view=graph-rest-1.0&tabs=http\n  const trendingResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/insights/trending?$select=resourceReference,resourceVisualization',\n  );\n  const trendingOutData: attachment[] = [];\n  let trendingState = loadingStateEnum.loading; // state of getting trendings data\n  if (trendingResult.ok) {\n    const trendingData = await trendingResult.json();\n    for (let index = 0; index < trendingData.value.length; index += 1) {\n      trendingOutData.push({\n        webUrl: trendingData.value[index].resourceReference.webUrl,\n        id: trendingData.value[index].resourceReference.id,\n        title: trendingData.value[index].resourceVisualization.title,\n        type: trendingData.value[index].resourceVisualization.type,\n      });\n    }\n    trendingState = loadingStateEnum.success;\n  } else {\n    trendingState = loadingStateEnum.failed;\n  }\n  return {\n    userState,\n    trendingState,\n    userData: userOutData,\n    trendingData: trendingOutData,\n  };\n}\n","import React from 'react';\nimport Animated, {\n  SharedValue,\n  useAnimatedProps,\n} from 'react-native-reanimated';\nimport { Path } from 'react-native-svg';\n\nexport default function AnimatedCheckMarkPath({\n  progress,\n  checkMarkColor,\n  checked,\n}: {\n  progress: SharedValue<number>;\n  checkMarkColor: any;\n  checked: boolean;\n}) {\n  const AnimatedPath = Animated.createAnimatedComponent(Path);\n  const checkMarkAnimation = useAnimatedProps(() => {\n    const strokeDashoffset = 1000 * progress.value;\n    return { strokeDashoffset };\n  });\n  return (\n    <AnimatedPath\n      animatedProps={checkMarkAnimation}\n      d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\n      stroke={checkMarkColor}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n      strokeWidth={5}\n      strokeDasharray={1000}\n      strokeMiterlimit={10}\n    />\n  );\n}\n","// Original Code from https://github.com/Rakha112/react-native-custom-checkbox/blob/main/src/components/CustomCheckBox.js\n\nimport React from 'react';\nimport Svg, { Circle } from 'react-native-svg';\nimport { Easing, useDerivedValue, withTiming } from 'react-native-reanimated';\nimport { View } from 'react-native';\nimport AnimatedCheckMarkPath from './AnimatedCheckMarkPath';\n\nexport default function CustomCheckBox({\n  checked,\n  checkMarkColor,\n  height,\n  width,\n  strokeDasharray,\n}: {\n  checked: boolean;\n  checkMarkColor: string;\n  height: number;\n  width: number;\n  strokeDasharray?: number;\n}) {\n  const progress = useDerivedValue(() => {\n    return withTiming(checked ? 0 : 1, {\n      duration: 1500,\n      easing: Easing.inOut(Easing.bezierFn(0.5, -0.02, 0.92, 0.37)),\n    });\n  });\n\n  return (\n    <View>\n      <Svg width={width} height={height} viewBox=\"0 0 52 52\">\n        <AnimatedCheckMarkPath\n          progress={progress}\n          checkMarkColor={checkMarkColor}\n          checked={checked}\n        />\n        <Circle\n          cx=\"26\"\n          cy=\"26\"\n          r=\"20\"\n          stroke=\"black\"\n          strokeDasharray={strokeDasharray}\n          strokeWidth=\"2\"\n          fill=\"none\"\n        />\n      </Svg>\n    </View>\n  );\n}\n","import { Image } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport * as PDFJS from 'pdfjs-dist';\nimport { useSelector } from 'react-redux';\nimport { DocumentInitParameters } from 'pdfjs-dist/types/src/display/api';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport store, { RootState } from '../../Redux/store';\nimport { pdfDataSlice } from '../../Redux/reducers/pdfDataReducer';\n\nPDFJS.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${PDFJS.version}/legacy/build/pdf.worker.min.js`;\n\nexport default function PDFView({ width }: { width: number }) {\n  const { powerpointBlob } = useSelector((state: RootState) => state.paulyData);\n  const { images, pageNumber } = useSelector(\n    (state: RootState) => state.pdfData,\n  );\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function convertPdfToImages(url: string) {\n    const imagesArray: string[] = [];\n    const dataResult = await fetch(url);\n    if (dataResult.ok) {\n      const blob = await dataResult.blob();\n      const file = new Blob([blob], { type: 'application/pdf' });\n      const fileURL = URL.createObjectURL(file);\n      const docInitParams: DocumentInitParameters = { url: fileURL };\n\n      const pdf = await PDFJS.getDocument(docInitParams).promise;\n      const canvas = document.createElement('canvas'); // Fail\n      for (let i = 0; i < pdf.numPages; i += 1) {\n        const page = await pdf.getPage(i + 1);\n        const viewport = page.getViewport({ scale: 1 });\n        const context = canvas.getContext('2d'); // Fail\n        canvas.height = viewport.height; // Fail\n        canvas.width = viewport.width; // Fail\n        if (context !== null) {\n          await page.render({ canvasContext: context, viewport }).promise;\n          imagesArray.push(canvas.toDataURL());\n        }\n      }\n      canvas.remove();\n      store.dispatch(pdfDataSlice.actions.setImages(imagesArray));\n    }\n  }\n\n  useEffect(() => {\n    convertPdfToImages(powerpointBlob);\n  }, [powerpointBlob]);\n\n  const singleTap = Gesture.Tap().onEnd((_event, success) => {\n    if (success) {\n      if (pageNumber + 1 < images.length) {\n        store.dispatch(pdfDataSlice.actions.increasePageNumber());\n      } else {\n        store.dispatch(pdfDataSlice.actions.setPageNumber(0));\n      }\n    }\n  });\n  const doubleTap = Gesture.Tap()\n    .numberOfTaps(2)\n    .onEnd((_event, success) => {\n      if (success) {\n        if (pageNumber - 1 >= 1) {\n          store.dispatch(pdfDataSlice.actions.decreasePageNumber());\n        } else if (images.length >= 1) {\n          store.dispatch(pdfDataSlice.actions.setPageNumber(images.length - 1));\n        }\n      }\n    });\n\n  const taps = Gesture.Exclusive(doubleTap, singleTap);\n\n  const fling = Gesture.Fling().onEnd(() => {\n    if (pageNumber + 1 < images.length) {\n      store.dispatch(pdfDataSlice.actions.increasePageNumber());\n    } else {\n      store.dispatch(pdfDataSlice.actions.setPageNumber(pageNumber - 1));\n    }\n  });\n\n  const compound = Gesture.Simultaneous(fling, taps);\n\n  useEffect(() => {\n    if (pageNumber < images.length) {\n      Image.getSize(\n        images[pageNumber],\n        (imageMeasureWidth, imageMeasureHeight) => {\n          const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n          setImageHeight(width * heightPerWidth);\n        },\n      );\n    }\n  }, [pageNumber, images, width]);\n\n  return (\n    <>\n      {pageNumber < images.length ? (\n        <GestureDetector gesture={compound}>\n          <Image\n            source={{ uri: images[pageNumber], width }}\n            style={{ borderRadius: 15, width, height: imageHeight }}\n            height={imageHeight}\n            width={width}\n          />\n        </GestureDetector>\n      ) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { Shape, SvgProps } from 'react-native-svg';\nimport {\n  AudioIcon,\n  DocumentIcon,\n  ExcelIcon,\n  FolderIcon,\n  ImageIcon,\n  OneNoteIcon,\n  PDFIcon,\n  PowerpointIcon,\n  VideoIcon,\n  WordIcon,\n} from './Icons';\n\ninterface iconProps {\n  width: number;\n  height: number;\n  mimeType: string;\n  style?: StyleProp<ViewStyle> | undefined;\n  props?: Shape<SvgProps> | undefined;\n}\n\nconst wordTypes = [\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n];\nconst excelTypes = [\n  'application/ms-excel',\n  'application/msexcel',\n  'application/vnd.ms-excel',\n];\nconst powerpointTypes = [\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'application/vnd.ms-powerpoint',\n  'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n  'application/vnd.openxmlformats-officedocument.presentationml.template',\n];\n\nexport default function MimeTypeIcon({\n  width,\n  height,\n  style,\n  props,\n  mimeType,\n}: iconProps) {\n  return (\n    <>\n      {mimeType.split('/')[0] === 'image' ? (\n        <ImageIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] === 'application' ? (\n        <>\n          {wordTypes.includes(mimeType) ? (\n            <WordIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {excelTypes.includes(mimeType) ? (\n            <ExcelIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'application/pdf' ? (\n            <PDFIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {powerpointTypes.includes(mimeType) ? (\n            <PowerpointIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {wordTypes.includes(mimeType) &&\n          excelTypes.includes(mimeType) &&\n          mimeType !== 'application/pdf' &&\n          mimeType !== 'application/vnd.ms-powerpoint' ? (\n            <DocumentIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n        </>\n      ) : null}\n      {mimeType.split('/')[0] === 'audio' ? (\n        <AudioIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] === 'video' ? (\n        <VideoIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType === 'folder' ? (\n        <FolderIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] !== 'image' &&\n      mimeType.split('/')[0] !== 'application' &&\n      mimeType.split('/')[0] !== 'audio' &&\n      mimeType.split('/')[0] !== 'video' &&\n      mimeType !== 'folder' ? (\n        <>\n          {mimeType === 'PowerPoint' ? (\n            <PowerpointIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Word' ? (\n            <WordIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Excel' ? (\n            <ExcelIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Pdf' ? (\n            <PDFIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'OneNote' || mimeType === 'OneNotePage' ? (\n            <OneNoteIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Audio' ? (\n            <AudioIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Video' ? (\n            <VideoIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Image' ? (\n            <ImageIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Folder' ? (\n            <FolderIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType !== 'PowerPoint' &&\n          mimeType !== 'Word' &&\n          mimeType !== 'OneNote' &&\n          mimeType !== 'OneNotePage' &&\n          mimeType !== 'Audio' &&\n          mimeType !== 'Video' &&\n          mimeType !== 'Image' &&\n          mimeType !== 'Folder' ? (\n            <DocumentIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n        </>\n      ) : null}\n    </>\n  );\n}\n","import store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { homepageDataSlice } from '../Redux/reducers/homepageDataReducer';\nimport {\n  getEvent,\n  getSchoolDay,\n  getTimetable,\n  getSchedule,\n} from './calendar/calendarFunctionsGraph';\nimport { Colors, loadingStateEnum, semesters } from '../types';\n\nexport async function getRooms(\n  nextLink?: string,\n  search?: string,\n): Promise<{ result: loadingStateEnum; data?: roomType[]; nextLink?: string }> {\n  const searchFilter = search\n    ? `&$filter=fields/roomName%20eq%20${search}`\n    : ''; // TODO deal with search filter\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.roomListId\n      }/items?expand=fields${searchFilter}`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultArray: roomType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultArray.push({\n        name: data.value[index].fields.roomName,\n        id: data.value[index].fields.roomId,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: resultArray,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getRoom(\n  roomId: string,\n): Promise<{ result: loadingStateEnum; data?: roomType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.roomListId\n    }/items?expand=fields&fields/roomId%20eq%20'${roomId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length === 0) {\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.roomName,\n          id: data.value[0].feilds.ro0mId,\n        },\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getClasses(): Promise<{\n  result: loadingStateEnum;\n  data?: classType[];\n}> {\n  let classQuery: string = `https://graph.microsoft.com/v1.0/me/joinedTeams?$select=id`;\n  const batchDataRequests: { id: string; method: string; url: string }[][] = [\n    [],\n  ];\n  while (classQuery !== undefined) {\n    const classResult = await callMsGraph(classQuery);\n    if (classResult.ok) {\n      const classData = await classResult.json();\n      classQuery = classData['@odata.nextLink'];\n\n      // Batch Request perfroming a get request on each class group\n\n      // Format Data\n      for (let index = 0; index < classData.value.length; index += 1) {\n        batchDataRequests[Math.floor(index / 20)].push({\n          id: (index + 1).toString(),\n          method: 'GET',\n          url: `/groups/${classData.value[index].id}?$select=displayName,id,${\n            store.getState().paulyList.classExtensionId\n          }`,\n        });\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  // Run Queries\n  const batchHeaders = new Headers();\n  batchHeaders.append('Accept', 'application/json');\n  const classes: classType[] = [];\n  for (let index = 0; index < batchDataRequests.length; index += 1) {\n    const batchData = {\n      requests: batchDataRequests[index],\n    };\n    const batchResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/$batch',\n      'POST',\n      JSON.stringify(batchData),\n    );\n    if (batchResult.ok) {\n      const batchResultData = await batchResult.json();\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultData.responses.length;\n        batchIndex += 1\n      ) {\n        if (batchResultData.responses[batchIndex].status === 200) {\n          if (\n            batchResultData.responses[batchIndex].body[\n              store.getState().paulyList.classExtensionId\n            ] !== undefined\n          ) {\n            classes.push({\n              name: batchResultData.responses[batchIndex].body.displayName,\n              id: batchResultData.responses[batchIndex].body.id,\n              periods: JSON.parse(\n                batchResultData.responses[batchIndex].body[\n                  store.getState().paulyList.classExtensionId\n                ].periodData,\n              ),\n              room: {\n                name: '',\n                id: '',\n              },\n              schoolYearId: '',\n              semester: semesters.semesterOne,\n            });\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: classes };\n}\n\nexport async function getClassEvents(\n  scheduleId: string,\n  semester: semesters,\n  schoolYearEventId: string,\n  schoolDay: schoolDayType,\n  date: Date,\n): Promise<{ result: loadingStateEnum; data?: eventType[] }> {\n  const scheduleResult = await getSchedule(scheduleId);\n  const classResult = await getClasses();\n  if (\n    scheduleResult.result === loadingStateEnum.success &&\n    classResult.result === loadingStateEnum.success &&\n    classResult.data !== undefined &&\n    scheduleResult.schedule !== undefined\n  ) {\n    const outputEvents: eventType[] = [];\n    for (let index = 0; index < classResult.data.length; index += 1) {\n      if (\n        classResult.data[index].schoolYearId === schoolYearEventId &&\n        classResult.data[index].semester === semester\n      ) {\n        // This check should never fail\n        if (classResult.data[index].periods.length > schoolDay.order) {\n          // Find Time\n          const period: number =\n            classResult.data[index].periods[schoolDay.order];\n          const periodData = scheduleResult.schedule.periods[period];\n          const startDate: Date = new Date(date.toISOString());\n          startDate.setHours(periodData.startHour);\n          startDate.setMinutes(periodData.startMinute);\n          startDate.setSeconds(0);\n          const endDate: Date = date;\n          endDate.setHours(periodData.endHour);\n          endDate.setMinutes(periodData.endMinute);\n          endDate.setSeconds(0);\n          outputEvents.push({\n            id: classResult.data[index].id,\n            name: classResult.data[index].name,\n            startTime: startDate.toISOString(),\n            endTime: endDate.toISOString(),\n            eventColor: Colors.white,\n            microsoftEvent: false,\n            allDay: false,\n          });\n        }\n      }\n    }\n    outputEvents.sort((a, b) => {\n      return new Date(a.startTime).getTime() - new Date(b.startTime).getTime();\n    });\n    return { result: loadingStateEnum.success, data: outputEvents };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getClassEventsFromDay(\n  date?: Date,\n): Promise<{ result: loadingStateEnum; data?: eventType[] }> {\n  const result = await getSchoolDay(date || new Date());\n  if (\n    result.result === loadingStateEnum.success &&\n    result.event !== undefined &&\n    result.event.paulyEventData !== undefined\n  ) {\n    const outputIds: schoolDayDataCompressedType = JSON.parse(\n      result.event.paulyEventData,\n    );\n    const eventResult = await getEvent(outputIds.schoolYearEventId);\n    if (\n      eventResult.result === loadingStateEnum.success &&\n      eventResult.data !== undefined &&\n      eventResult.data?.paulyEventData !== undefined\n    ) {\n      const timetableResult = await getTimetable(\n        eventResult.data.paulyEventData,\n      );\n      if (\n        timetableResult.result === loadingStateEnum.success &&\n        timetableResult.timetable !== undefined\n      ) {\n        const schoolDay = timetableResult.timetable.days.find(\n          (e: { id: string }) => {\n            return e.id === outputIds.schoolDayId;\n          },\n        );\n        const schedule = timetableResult.timetable.schedules.find(\n          (e: { id: string }) => {\n            return e.id === outputIds.scheduleId;\n          },\n        );\n        const dressCode =\n          timetableResult.timetable.dressCode.dressCodeData.find(\n            (e: { id: string }) => {\n              return e.id === outputIds.dressCodeId;\n            },\n          );\n        const dressCodeIncentive =\n          timetableResult.timetable.dressCode.dressCodeIncentives.find(\n            (e: { id: string }) => {\n              return e.id === outputIds?.dressCodeIncentiveId;\n            },\n          );\n        if (\n          schoolDay !== undefined &&\n          schedule !== undefined &&\n          dressCode !== undefined\n        ) {\n          store.dispatch(\n            homepageDataSlice.actions.setSchoolDayData({\n              schoolDay,\n              schedule,\n              dressCode,\n              semester: outputIds.semester,\n              dressCodeIncentive,\n            }),\n          );\n          if (schedule !== undefined) {\n            const classResult = await getClassEvents(\n              schedule.id,\n              outputIds.semester,\n              outputIds.schoolYearEventId,\n              schoolDay,\n              new Date(result.event.startTime),\n            );\n            if (\n              classResult.result === loadingStateEnum.success &&\n              classResult.data !== undefined\n            ) {\n              if (classResult.data.length >= 1) {\n                const startTimeDate = new Date(classResult.data[0].startTime);\n                const hourTime =\n                  (startTimeDate.getHours() % 12) + 1 <= 9\n                    ? `0${(startTimeDate.getHours() % 12) + 1}`\n                    : (startTimeDate.getHours() % 12) + 1;\n                const monthTime =\n                  startTimeDate.getMinutes() <= 9\n                    ? `0${startTimeDate.getMinutes()}`\n                    : startTimeDate.getMinutes().toString();\n                store.dispatch(\n                  homepageDataSlice.actions.setStartTime(\n                    `${hourTime}:${monthTime}`,\n                  ),\n                );\n              }\n              return {\n                result: loadingStateEnum.success,\n                data: classResult.data,\n              };\n            }\n            return { result: loadingStateEnum.failed };\n          }\n          return { result: loadingStateEnum.failed };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  18 October 2023\n  Pauly\n*/\n\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  Linking,\n  ScrollView,\n  ListRenderItemInfo,\n  Switch,\n  Animated,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport { FlatList } from 'react-native-gesture-handler';\nimport store, { RootState } from '../Redux/store';\nimport getCurrentPaulyData from '../Functions/homepage/getCurrentPaulyData';\nimport {\n  Colors,\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../types';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport getUsersTasks from '../Functions/homepage/getUsersTasks';\nimport ProgressView from '../UI/ProgressView';\nimport getInsightData from '../Functions/homepage/getInsightData';\nimport CustomCheckBox from '../UI/CheckMark/CustomCheckBox';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport { homepageDataSlice } from '../Redux/reducers/homepageDataReducer';\nimport PDFView from '../UI/PDF/PDFView';\nimport BackButton from '../UI/BackButton';\nimport MimeTypeIcon from '../UI/Icons/MimeTypeIcon';\nimport { getClassEventsFromDay } from '../Functions/classesFunctions';\nimport { TrashIcon } from '../UI/Icons/Icons';\n\n// Get Messages\n// Last Chat Message Channels Included\n\n// Pauly\n// Overview Message\n// Powerpoint\n\n// Insights\n// Quick Access To files\n\n// Calendar\n// Calendar Overview\n// Calendar Widget\n// Dress Code\n\n// Tasks\n\n// Wants\n// Assignments (problem is hard to test)\n\nexport default function Notifications() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const { message } = useSelector((state: RootState) => state.paulyData);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    if (siteId !== '') {\n      // Calendar Data\n      getClassEventsFromDay();\n\n      // Insights\n      const insightResult = await getInsightData();\n      dispatch(\n        homepageDataSlice.actions.setTrendingData(insightResult.trendingData),\n      );\n      dispatch(\n        homepageDataSlice.actions.setTrendingState(insightResult.trendingState),\n      );\n      dispatch(homepageDataSlice.actions.setUserData(insightResult.userData));\n      dispatch(homepageDataSlice.actions.setUserState(insightResult.userState));\n\n      // Pauly Data\n      await getCurrentPaulyData();\n\n      // List Data\n      const taskResult = await getUsersTasks();\n      if (\n        taskResult.result === loadingStateEnum.success &&\n        taskResult.data !== undefined\n      ) {\n        dispatch(homepageDataSlice.actions.setUserTasks(taskResult.data));\n      }\n      dispatch(homepageDataSlice.actions.setTaskState(taskResult.result));\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, [siteId]);\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.white,\n        bottom: Colors.white,\n      }),\n    );\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    'Comfortaa-Regular': require('../../assets/fonts/Comfortaa-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      {currentBreakPoint === 0 ? <BackButton to=\"/\" /> : null}\n      <View\n        style={{\n          width,\n          height: height * 0.1,\n          marginTop: currentBreakPoint === 0 ? 10 : 0,\n        }}\n      >\n        <View\n          style={{\n            width: width * 0.9,\n            height: height * 0.07,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 15,\n            backgroundColor: Colors.darkGray,\n            marginLeft: width * 0.05,\n            marginRight: width * 0.05,\n            marginTop: height * 0.015,\n            marginBottom: height * 0.015,\n          }}\n        >\n          <Text\n            style={{ color: Colors.white, fontFamily: 'Comfortaa-Regular' }}\n          >\n            {message}\n          </Text>\n        </View>\n      </View>\n      {currentBreakPoint === 0 ? (\n        <>\n          <WidgetView width={width * 0.9} height={height * 0.3} />\n          <BoardBlock />\n        </>\n      ) : (\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 0.9,\n            marginLeft: width * 0.05,\n          }}\n        >\n          <BoardBlock />\n          <View style={{ marginTop: height * 0.03 }}>\n            <WidgetView width={width * 0.2} height={height * 0.2} />\n          </View>\n        </View>\n      )}\n      <TaskBlock />\n      <InsightsBlock />\n    </ScrollView>\n  );\n}\n\nfunction WidgetView({ width, height }: { width: number; height: number }) {\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { schoolDayData, startTime } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  const dow: string[] = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  return (\n    <View\n      style={{\n        backgroundColor: Colors.maroon,\n        width,\n        height,\n        borderRadius: 15,\n        marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n      }}\n    >\n      <View\n        style={{\n          width,\n          height: height / 3,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white, fontSize: height / 6 }}>\n          {dow[new Date().getDay()]}\n        </Text>\n      </View>\n      {schoolDayData !== undefined ? (\n        <>\n          <View\n            style={{\n              backgroundColor: Colors.darkGray,\n              alignItems: 'center',\n              alignContent: 'center',\n              justifyContent: 'center',\n              width,\n              height: height / 6,\n            }}\n          >\n            <Text style={{ color: Colors.white }}>\n              {schoolDayData?.schedule.descriptiveName}\n            </Text>\n          </View>\n          <View style={{ flexDirection: 'row', height: height / 2 }}>\n            <View\n              style={{\n                height: height * 0.5,\n                width: width * 0.3,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Text\n                style={{\n                  color: Colors.white,\n                  fontWeight: 'bold',\n                  fontSize: height * 0.4,\n                }}\n              >\n                {schoolDayData?.schoolDay.shorthand}\n              </Text>\n            </View>\n            <View\n              style={{\n                height: height * 0.5,\n                width: width * 0.7,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Text style={{ color: Colors.white, fontSize: height / 3 }}>\n                {startTime}\n              </Text>\n            </View>\n          </View>\n        </>\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.darkGray,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            width,\n            height: height / 2,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>No School</Text>\n        </View>\n      )}\n    </View>\n  );\n}\n\nfunction TaskBlock() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { taskState, userTasks, isShowingCompleteTasks } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <View style={{ width }}>\n      <Text\n        style={{\n          fontSize: 24,\n          marginLeft: width * 0.05,\n          marginTop: height * 0.03,\n          marginBottom: height * 0.02,\n        }}\n      >\n        Tasks\n      </Text>\n      <View\n        style={{\n          shadowColor: 'black',\n          width: width * 0.9,\n          marginLeft: width * 0.05,\n          backgroundColor: Colors.white,\n          marginRight: width * 0.05,\n          height: height * 0.5,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ flexDirection: 'row', marginLeft: 10, marginTop: 5 }}>\n          <Text>Show Completed:</Text>\n          <Switch\n            trackColor={{ false: Colors.lightGray, true: Colors.darkGray }}\n            thumbColor={\n              isShowingCompleteTasks ? Colors.maroon : Colors.darkGray\n            }\n            ios_backgroundColor={Colors.lightGray}\n            onValueChange={e => {\n              store.dispatch(\n                homepageDataSlice.actions.setIsShowingCompletedTasks(e),\n              );\n            }}\n            value={isShowingCompleteTasks}\n            style={{ marginLeft: 5 }}\n          />\n        </View>\n        <ScrollView style={{ margin: 10, height: height * 0.5 - 20 }}>\n          {taskState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.5 - 20,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={\n                  width * 0.9 < height * 0.5 - 20\n                    ? width * 0.45\n                    : height * 0.25 - 20\n                }\n                height={\n                  width * 0.9 < height * 0.5 - 20\n                    ? width * 0.45\n                    : height * 0.25 - 20\n                }\n              />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {taskState === loadingStateEnum.success ? (\n                <FlatList\n                  data={userTasks}\n                  renderItem={task => (\n                    <TaskItem task={task} key={`User_Task_${task.item.id}`} />\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nfunction DeleteTask({\n  onDelete,\n}: {\n  onDelete: () => void;\n  e: Animated.AnimatedInterpolation<string | number>;\n}) {\n  return (\n    <Pressable\n      onPress={() => onDelete()}\n      style={{\n        paddingLeft: 10,\n        paddingRight: 10,\n        backgroundColor: Colors.danger,\n      }}\n    >\n      <TrashIcon width={14} height={14} />\n    </Pressable>\n  );\n}\n\nfunction TaskItem({ task }: { task: ListRenderItemInfo<taskType> }) {\n  const [checked, setChecked] = useState<boolean>(\n    task.item.status === taskStatusEnum.completed,\n  );\n  const [updateTaskState, setUpdateTaskState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const { userTasks, isShowingCompleteTasks } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  const [currentText, setCurrentText] = useState(task.item.name);\n  const [mounted, setMounted] = useState(false);\n  const dispatch = useDispatch();\n\n  async function updateTaskStatus(status: taskStatusEnum) {\n    setUpdateTaskState(loadingStateEnum.loading);\n    const data = {\n      status:\n        status === taskStatusEnum.notStarted\n          ? 'notStarted'\n          : status === taskStatusEnum.inProgress\n          ? 'inProgress'\n          : status === taskStatusEnum.completed\n          ? 'completed'\n          : status === taskStatusEnum.waitingOnOthers\n          ? 'waitingOnOthers'\n          : 'deferred',\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const newItem: any = {};\n      Object.assign(newItem, task.item);\n      newItem.status = status;\n      dispatch(\n        homepageDataSlice.actions.updateUserTask({\n          index: task.index,\n          task: newItem,\n        }),\n      );\n      setUpdateTaskState(loadingStateEnum.success);\n    } else {\n      setUpdateTaskState(loadingStateEnum.failed);\n    }\n  }\n\n  async function updateText() {\n    const data = {\n      title: userTasks[task.index].name,\n    };\n    if (task.item.excess === false) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setUpdateTaskState(loadingStateEnum.success);\n      } else {\n        setUpdateTaskState(loadingStateEnum.failed);\n      }\n    } else {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        const data = await result.json();\n        dispatch(\n          homepageDataSlice.actions.updateUserTask({\n            task: {\n              name: task.item.name,\n              id: data.id,\n              importance:\n                data.importance === 'high'\n                  ? taskImportanceEnum.high\n                  : data.importance === 'low'\n                  ? taskImportanceEnum.low\n                  : taskImportanceEnum.normal,\n              status:\n                data.status === 'notStarted'\n                  ? taskStatusEnum.notStarted\n                  : data.status === 'inProgress'\n                  ? taskStatusEnum.inProgress\n                  : data.status === 'completed'\n                  ? taskStatusEnum.completed\n                  : data.status === 'waitingOnOthers'\n                  ? taskStatusEnum.waitingOnOthers\n                  : taskStatusEnum.deferred,\n              excess: false,\n            },\n            index: task.index,\n          }),\n        );\n        dispatch(\n          homepageDataSlice.actions.unshiftUserTask({\n            name: '',\n            importance: taskImportanceEnum.normal,\n            id: '',\n            status: taskStatusEnum.notStarted,\n            excess: true,\n          }),\n        );\n        setUpdateTaskState(loadingStateEnum.success);\n      } else {\n        setUpdateTaskState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function deleteTask() {\n    if (task !== undefined) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        const index = store\n          .getState()\n          .homepageData.userTasks.findIndex(e => e.id === task.item.id);\n        if (index !== -1) {\n          dispatch(homepageDataSlice.actions.popUserTask(index));\n        }\n      } else {\n      }\n    }\n  }\n\n  async function checkUpdateText() {\n    setUpdateTaskState(loadingStateEnum.loading);\n    const taskNameSave =\n      store.getState().homepageData.userTasks[task.index].name;\n    setTimeout(() => {\n      if (\n        store.getState().homepageData.userTasks[task.index].name ===\n        taskNameSave\n      ) {\n        updateText();\n      }\n    }, 1500);\n  }\n\n  useEffect(() => {\n    if (mounted) {\n      checkUpdateText();\n    } else {\n      setMounted(true);\n    }\n  }, [currentText]);\n\n  return (\n    <>\n      {isShowingCompleteTasks ||\n      task.item.status !== taskStatusEnum.completed ? (\n        <Swipeable\n          renderRightActions={e => (\n            <>\n              {task.item.excess ? null : (\n                <DeleteTask e={e} onDelete={() => deleteTask()} />\n              )}\n            </>\n          )}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              width: width * 0.9,\n              paddingTop: 5,\n              paddingBottom: 5,\n            }}\n          >\n            <Pressable\n              onPress={() => {\n                setChecked(!checked);\n                if (!checked) {\n                  updateTaskStatus(taskStatusEnum.completed);\n                } else {\n                  updateTaskStatus(taskStatusEnum.notStarted);\n                }\n              }}\n            >\n              <CustomCheckBox\n                checked={checked}\n                checkMarkColor=\"blue\"\n                strokeDasharray={task.item.excess ? 5 : undefined}\n                height={20}\n                width={20}\n              />\n            </Pressable>\n            <View\n              style={{\n                justifyContent: 'center',\n                alignItems: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <TextInput\n                value={task.item.name}\n                onChangeText={e => {\n                  const newTask: taskType = {\n                    name: task.item.name,\n                    id: task.item.id,\n                    importance: task.item.importance,\n                    status: task.item.status,\n                    excess: task.item.excess,\n                  };\n                  newTask.name = e;\n                  dispatch(\n                    homepageDataSlice.actions.updateUserTask({\n                      task: newTask,\n                      index: task.index,\n                    }),\n                  );\n                  setCurrentText(e);\n                }}\n                multiline\n                numberOfLines={1}\n                style={{ width: width * 0.9 - 40 }}\n              />\n            </View>\n          </View>\n        </Swipeable>\n      ) : null}\n    </>\n  );\n}\n\nfunction BoardBlock() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { powerpointBlob, paulyDataState } = useSelector(\n    (state: RootState) => state.paulyData,\n  );\n  return (\n    <>\n      {paulyDataState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n            height: height * 0.3,\n            borderRadius: 15,\n            marginTop: height * 0.03,\n            marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n            marginRight: width * 0.05,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: Colors.white,\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n          }}\n        >\n          <ProgressView width={100} height={100} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {paulyDataState === loadingStateEnum.success ? (\n            <>\n              {powerpointBlob !== '' ? (\n                <View\n                  style={{\n                    width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n                    borderRadius: 15,\n                    marginTop: height * 0.03,\n                    marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                    marginRight:\n                      currentBreakPoint === 0 ? width * 0.05 : width * 0.03,\n                    backgroundColor: Colors.white,\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.8,\n                    shadowRadius: 10,\n                  }}\n                >\n                  <PDFView\n                    width={currentBreakPoint === 0 ? width * 0.9 : width * 0.7}\n                  />\n                </View>\n              ) : (\n                <View\n                  style={{\n                    width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n                    height: height * 0.3,\n                    marginTop: height * 0.03,\n                    marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                    marginRight:\n                      currentBreakPoint === 0 ? width * 0.05 : width * 0.03,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    backgroundColor: '#FFFFFF',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.8,\n                    shadowRadius: 10,\n                    borderRadius: 15,\n                  }}\n                >\n                  <ProgressView width={100} height={100} />\n                  <Text>Loading</Text>\n                </View>\n              )}\n            </>\n          ) : (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.3,\n                marginTop: height * 0.03,\n                marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                backgroundColor: '#FFFFFF',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.8,\n                shadowRadius: 10,\n                borderRadius: 15,\n              }}\n            >\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction InsightsBlock() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  return (\n    <>\n      {currentBreakPoint <= 0 ? (\n        <>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Recent Files\n          </Text>\n          <View\n            style={{\n              marginLeft: width * 0.05,\n              marginRight: width * 0.05,\n              width: width * 0.9,\n              height: height * 0.3,\n              backgroundColor: Colors.white,\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n            }}\n          >\n            <TrendingFiles width={width * 0.9} />\n          </View>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Popular Files\n          </Text>\n          <View\n            style={{\n              marginLeft: width * 0.05,\n              marginRight: width * 0.05,\n              width: width * 0.9,\n              height: height * 0.3,\n              backgroundColor: Colors.white,\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n              marginBottom: height * 0.05,\n            }}\n          >\n            <PopularFiles width={width * 0.9} />\n          </View>\n        </>\n      ) : (\n        <>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Files\n          </Text>\n          <View\n            style={{\n              width: width * 0.9,\n              flexDirection: 'row',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              marginTop: height * 0.025,\n              marginBottom: height * 0.025,\n              backgroundColor: Colors.white,\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ width: width * 0.45, overflow: 'scroll' }}>\n              <TrendingFiles width={width * 0.45} />\n            </View>\n            <View style={{ width: width * 0.45, overflow: 'visible' }}>\n              <PopularFiles width={width * 0.45} />\n            </View>\n          </View>\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PopularFiles({ width }: { width: number }) {\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const { trendingData, trendingState } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <>\n      {trendingState === loadingStateEnum.loading ? (\n        <View>\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <ScrollView style={{ height: height * 0.3, width }}>\n          {trendingState === loadingStateEnum.success ? (\n            <>\n              {trendingData.map(data => (\n                <Pressable\n                  key={`User_Insight_${data.id}`}\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(data.webUrl);\n                  }}\n                >\n                  <View style={{ margin: 10, flexDirection: 'row' }}>\n                    <MimeTypeIcon width={14} height={14} mimeType={data.type} />\n                    <Text>{data.title}</Text>\n                  </View>\n                </Pressable>\n              ))}\n            </>\n          ) : (\n            <Text>Failed To Load</Text>\n          )}\n        </ScrollView>\n      )}\n    </>\n  );\n}\n\nfunction TrendingFiles({ width }: { width: number }) {\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const { userState, userData } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <ScrollView style={{ height: height * 0.3, width }}>\n      {userState === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : (\n        <View>\n          {userState === loadingStateEnum.success ? (\n            <View>\n              {userData.map(data => (\n                <Pressable\n                  key={`User_Insight_${data.id}`}\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(data.webUrl);\n                  }}\n                >\n                  <View style={{ margin: 10, flexDirection: 'row' }}>\n                    <MimeTypeIcon width={14} height={14} mimeType={data.type} />\n                    <Text>{data.title}</Text>\n                  </View>\n                </Pressable>\n              ))}\n            </View>\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </View>\n      )}\n    </ScrollView>\n  );\n}\n","import { loadingStateEnum, resourceMode, resourceResponce } from '../types';\nimport store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { resourcesSlice } from '../Redux/reducers/resourcesReducer';\nimport { raindropToken } from '../PaulyConfig';\n\nexport function convertResourceModeString(convert?: resourceMode): string {\n  if (convert === resourceMode.sports) {\n    return 'sports';\n  }\n  if (convert === resourceMode.advancement) {\n    return 'advancement';\n  }\n  if (convert === resourceMode.schoolEvents) {\n    return 'schoolEvents';\n  }\n  if (convert === resourceMode.annoucments) {\n    return 'annoucments';\n  }\n  if (convert === resourceMode.fitness) {\n    return 'fitness';\n  }\n  return 'files';\n}\n\nasync function getResourceFollows() {\n  let nextLink = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.resourceListId\n  }/items?expand=fields($select=resourceGroupId,resourceConversationId)&$select=id`;\n  while (nextLink !== '') {\n    const result = await callMsGraph(nextLink);\n    if (result.ok) {\n      const data = await result.json();\n      if (data['@odata.nextLink'] !== undefined) {\n        nextLink = data['@odata.nextLink'];\n      } else {\n        nextLink = '';\n      }\n      const output: resourceFollowType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        output.push({\n          teamId: data.value[index].fields.resourceGroupId,\n          channelId: data.value[index].fields.resourceConversationId,\n        });\n      }\n      store.dispatch(resourcesSlice.actions.setResourceFollow(output));\n    } else {\n      store.dispatch(\n        resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n      );\n      return;\n    }\n  }\n}\n\nasync function getAttachments(\n  teamId: string,\n  channelId: string,\n  attachments: any[],\n): Promise<attachment[]> {\n  const attachmentsOut: attachment[] = [];\n  for (\n    let attachmentIndex = 0;\n    attachmentIndex < attachments.length;\n    attachmentIndex += 1\n  ) {\n    if (attachments[attachmentIndex].contentType === 'reference') {\n      const attachmentResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/filesFolder`,\n      );\n      if (attachmentResult.ok) {\n        const attachmentData = await attachmentResult.json();\n        const attachmentGetResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/drives/${attachmentData.parentReference.driveId}/items/${attachments[attachmentIndex].id}`,\n        );\n        if (attachmentGetResult.ok) {\n          const attachmentGetResultData = await attachmentGetResult.json();\n          attachments.push({\n            webUrl: attachmentGetResultData.webUrl,\n            id: attachmentGetResultData.id,\n            title: attachmentGetResultData.name,\n            type: attachmentGetResultData.file.mimeType,\n          });\n        }\n      }\n    }\n  }\n  return attachmentsOut;\n}\n\nexport async function getResources(category?: resourceMode) {\n  store.dispatch(\n    resourcesSlice.actions.setResourcesState(loadingStateEnum.loading),\n  );\n  await getResourceFollows();\n  const categoryString = convertResourceModeString(category);\n  const categoryFilter = category\n    ? `&$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.resourceExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.resourceExtensionId\n      }'%20and%20ep/value%20eq%20'${categoryString}')`\n    : '';\n  const output: resourceDataType[] = [];\n  const batchDataRequests: { id: string; method: string; url: string }[][] = [\n    [],\n  ];\n  let batchCount = 0;\n  for (\n    let index = 0;\n    index < store.getState().resources.resourceFollow.length;\n    index += 1\n  ) {\n    // resourceGroupId\n    batchDataRequests[batchCount].push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/teams/${\n        store.getState().resources.resourceFollow[index].teamId\n      }/channels/${\n        store.getState().resources.resourceFollow[index].channelId\n      }/messages${categoryFilter}`,\n    });\n    if (store.getState().resources.resourceFollow.length % 20 === 0) {\n      batchDataRequests.push([]);\n      batchCount += 1;\n    }\n  }\n  for (let index = 0; index < batchDataRequests.length; index += 1) {\n    const batchData = {\n      requests: batchDataRequests[index],\n    };\n    if (batchDataRequests[index].length !== 0) {\n      const resourceRsp = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (resourceRsp.ok) {\n        const resourceResponceData = await resourceRsp.json();\n        for (\n          let responceIndex = 0;\n          responceIndex < resourceResponceData.responses.length;\n          responceIndex += 1\n        ) {\n          if (resourceResponceData.responses[responceIndex].status === 200) {\n            const resourceResponceDataBody =\n              resourceResponceData.responses[responceIndex].body;\n            for (\n              let dataIndex = 0;\n              dataIndex < resourceResponceDataBody.value.length;\n              dataIndex += 1\n            ) {\n              if (\n                resourceResponceData.responses[responceIndex].body.value[\n                  dataIndex\n                ].body.content !== '<systemEventMessage/>'\n              ) {\n                const attachments = await getAttachments(\n                  resourceResponceDataBody.value[dataIndex].channelIdentity\n                    .teamId,\n                  resourceResponceDataBody.value[dataIndex].channelIdentity\n                    .channelId,\n                  resourceResponceDataBody.value[dataIndex].attachments,\n                );\n                const outputData: resourceDataType = {\n                  teamId:\n                    store.getState().resources.resourceFollow[\n                      parseInt(\n                        resourceResponceData.responses[responceIndex].id,\n                      ) - 1\n                    ].teamId,\n                  conversationId:\n                    store.getState().resources.resourceFollow[\n                      parseInt(\n                        resourceResponceData.responses[responceIndex].id,\n                      ) - 1\n                    ].channelId,\n                  id: resourceResponceData.responses[responceIndex].body.value[\n                    dataIndex\n                  ].id,\n                  body: resourceResponceData.responses[responceIndex].body\n                    .value[dataIndex].body.content,\n                  html:\n                    resourceResponceData.responses[responceIndex].body.value[\n                      dataIndex\n                    ].body.contentType === 'html',\n                  attachments:\n                    attachments.length >= 1 ? attachments : undefined,\n                };\n                output.push(outputData);\n              }\n            }\n          }\n        }\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n        return;\n      }\n    }\n  }\n  store.dispatch(\n    resourcesSlice.actions.setResources({\n      resources: output,\n      loadingState: loadingStateEnum.success,\n    }),\n  );\n}\n\nexport async function getResourcesSearch(search: string) {\n  store.dispatch(\n    resourcesSlice.actions.setResourcesState(loadingStateEnum.loading),\n  );\n  const searchPayload = {\n    requests: [\n      {\n        entityTypes: ['chatMessage'],\n        query: {\n          queryString: search,\n        },\n        from: 0,\n        size: 15,\n        enableTopResults: true,\n      },\n    ],\n  };\n  const searchResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/search/query',\n    'POST',\n    JSON.stringify(searchPayload),\n  );\n  if (searchResult.ok) {\n    const searchData = await searchResult.json();\n    const batchDataRequests: { id: string; method: string; url: string }[] = [];\n    if (searchData.value.length === 1) {\n      if (searchData.value[0].hitsContainers.length === 1) {\n        for (\n          let index = 0;\n          index < searchData.value[0].hitsContainers[0].hits.length;\n          index += 1\n        ) {\n          if (\n            searchData.value[0].hitsContainers[0].hits[index].resource\n              .channelIdentity !== undefined\n          ) {\n            const resourceIndex = store\n              .getState()\n              .resources.resourceFollow.findIndex(e => {\n                return (\n                  e.channelId ===\n                  searchData.value[0].hitsContainers[0].hits[index].resource\n                    .channelIdentity.channelId\n                );\n              });\n            if (resourceIndex !== -1) {\n              batchDataRequests.push({\n                id: batchDataRequests.length.toString() + 1,\n                method: 'GET',\n                url: `/teams/${searchData.value[0].hitsContainers[0].hits[index].resource.channelIdentity.teamId}/channels/${searchData.value[0].hitsContainers[0].hits[index].resource.channelIdentity.channelId}/messages/${searchData.value[0].hitsContainers[0].hits[index].resource.id}`,\n              });\n            } else {\n              store.dispatch(\n                resourcesSlice.actions.setResourcesState(\n                  loadingStateEnum.failed,\n                ),\n              );\n              return;\n            }\n          }\n        }\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n        return;\n      }\n\n      const batchData = {\n        requests: batchDataRequests,\n      };\n      const batchResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (batchResult.ok) {\n        const batchResultData = await batchResult.json();\n        const outputData: resourceDataType[] = [];\n        for (\n          let batchIndex = 0;\n          batchIndex < batchResultData.responses.length;\n          batchIndex += 1\n        ) {\n          if (batchResultData.responses[batchIndex].status === 200) {\n            // TO DO fix ok code\n            outputData.push({\n              teamId:\n                batchResultData.responses[batchIndex].body.channelIdentity\n                  .teamId,\n              conversationId:\n                batchResultData.responses[batchIndex].body.channelIdentity\n                  .channelId,\n              id: batchResultData.responses[batchIndex].body.id,\n              body: batchResultData.responses[batchIndex].body.body.content,\n              html:\n                batchResultData.responses[batchIndex].body.body.contentType ===\n                'html',\n            });\n          } else {\n            store.dispatch(\n              resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n            );\n            return;\n          }\n        }\n        store.dispatch(\n          resourcesSlice.actions.setResources({\n            resources: outputData,\n            loadingState: loadingStateEnum.success,\n          }),\n        );\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n      }\n    } else {\n      store.dispatch(\n        resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    store.dispatch(\n      resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n    );\n  }\n}\n\nexport default async function getResource(\n  groupId: string,\n  conversationId: string,\n): Promise<{ result: resourceResponce; itemId?: string }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.resourceListId\n    }/items?expand=fields&$filter=fields/resourceGroupId%20eq%20'${groupId}'%20and%20fields/resourceConversationId%20eq%20'${conversationId}'`,\n  );\n  if (!result.ok) {\n    return { result: resourceResponce.failed };\n  }\n  const data = await result.json();\n  if (data.value.length === 1) {\n    return { result: resourceResponce.found, itemId: data.value[0].id };\n  }\n  if (data.value.length === 0) {\n    return { result: resourceResponce.notFound };\n  }\n  return { result: resourceResponce.failed };\n}\n\nexport async function getScholarships(): Promise<\n  | { result: loadingStateEnum.failed }\n  | { result: loadingStateEnum.success; data: scholarship[] }\n> {\n  // https://developer.raindrop.io/v1/authentication/token\n  // https://developer.raindrop.io/v1/raindrops/multiple\n  const result = await fetch(\n    'https://api.raindrop.io/rest/v1/raindrops/37695900',\n    {\n      headers: {\n        Authorization: `Bearer ${raindropToken}`,\n      },\n    },\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const scholarships: scholarship[] = [];\n    for (let index = 0; index < data.items.length; index += 1) {\n      scholarships.push({\n        title: data.items[index].title,\n        note: data.items[index].note,\n        link: data.items[index].link,\n        cover: data.items[index].cover,\n      });\n    }\n    return { result: loadingStateEnum.success, data: scholarships };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getNewsPosts(nextLink?: string | undefined): Promise<\n  | { result: loadingStateEnum.failed }\n  | {\n      result: loadingStateEnum.success;\n      data: newsPost[];\n      nextLink?: string | undefined;\n    }\n> {\n  const result = await fetch(\n    `https://public-api.wordpress.com/rest/v1.1/sites/thecrusadernews.ca/posts${\n      nextLink !== undefined ? `?${nextLink}` : ''\n    }`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const outputPosts: newsPost[] = [];\n    for (let index = 0; index < data.posts.length; index += 1) {\n      outputPosts.push({\n        title: data.posts[index].title,\n        excerpt: data.posts[index].excerpt,\n        content: data.posts[index].content,\n        id: data.posts[index].id,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: outputPosts,\n      nextLink: data.meta.next_page,\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, FlatList, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Colors, loadingStateEnum } from '../types';\nimport ProgressView from '../UI/ProgressView';\nimport WebViewCross from '../UI/WebViewCross';\nimport { RootState } from '../Redux/store';\nimport { CloseIcon } from '../UI/Icons/Icons';\nimport { getNewsPosts } from '../Functions/getResources';\n\nexport default function ResourcesNews({\n  isHoverPicker,\n}: {\n  isHoverPicker: boolean;\n}) {\n  const [posts, setPosts] = useState<newsPost[]>([]);\n  const [postState, setPostState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedPost, setSelectedPost] = useState<newsPost | undefined>(\n    undefined,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [nextLink, setNextLink] = useState<undefined | string>(undefined);\n\n  async function loadArticles() {\n    const result = await getNewsPosts(nextLink);\n    if (result.result === loadingStateEnum.success) {\n      setPosts([...posts, ...result.data]);\n      setNextLink(result.nextLink);\n      setPostState(loadingStateEnum.success);\n    } else {\n      setPostState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadArticles();\n  }, []);\n\n  return (\n    <>\n      {selectedPost !== undefined ? (\n        <ScrollView\n          style={{\n            width,\n            height: isHoverPicker ? height * 0.75 : height * 0.8,\n            backgroundColor: Colors.lightGray,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              setSelectedPost(undefined);\n            }}\n          >\n            <CloseIcon width={14} height={14} />\n          </Pressable>\n          <Text>{selectedPost.title}</Text>\n          <WebViewCross html={selectedPost.content} width={width * 0.9} />\n        </ScrollView>\n      ) : (\n        <>\n          {postState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height: isHoverPicker ? height * 0.75 : height * 0.8,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n                backgroundColor: Colors.lightGray,\n              }}\n            >\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {postState === loadingStateEnum.success ? (\n                <FlatList\n                  data={posts}\n                  renderItem={post => (\n                    <Pressable\n                      onPress={() => {\n                        setSelectedPost(post.item);\n                      }}\n                      style={{\n                        backgroundColor: Colors.white,\n                        borderRadius: 15,\n                        marginLeft: 10,\n                        marginRight: 10,\n                        margin: 5,\n                      }}\n                    >\n                      <Text style={{ marginLeft: 10, marginTop: 5 }}>\n                        {post.item.title}\n                      </Text>\n                      <WebViewCross\n                        style={{ marginTop: 2 }}\n                        width={width * 0.6}\n                        html={post.item.excerpt}\n                      />\n                    </Pressable>\n                  )}\n                  onEndReached={() => {\n                    if (nextLink !== undefined) {\n                      loadArticles();\n                    }\n                  }}\n                  style={{\n                    width,\n                    height: isHoverPicker ? height * 0.75 : height * 0.8,\n                    backgroundColor: Colors.lightGray,\n                  }}\n                />\n              ) : (\n                <View\n                  style={{\n                    width,\n                    height: isHoverPicker ? height * 0.75 : height * 0.8,\n                    backgroundColor: Colors.lightGray,\n                  }}\n                >\n                  <Text>Failed to load</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  Resources.tsx\n  This is the main component for the resources section of pauly.\n  See README.md for more information about the resources section.\n*/\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts } from 'expo-font';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  TextInput,\n  Platform,\n  Pressable,\n  Linking,\n  FlatList,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport store, { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport { resourcesSlice } from '../Redux/reducers/resourcesReducer';\nimport createUUID, { getTextState } from '../Functions/ultility/createUUID';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport {\n  convertResourceModeString,\n  getResources,\n  getResourcesSearch,\n  getScholarships,\n} from '../Functions/getResources';\nimport { CloseIcon, SearchIcon } from '../UI/Icons/Icons';\nimport WebViewCross from '../UI/WebViewCross';\nimport BackButton from '../UI/BackButton';\nimport ProgressView from '../UI/ProgressView';\nimport MimeTypeIcon from '../UI/Icons/MimeTypeIcon';\nimport { Colors, loadingStateEnum, resourceMode } from '../types';\nimport ResourcesNews from './ResourcesNews';\n\n// Resources\n// -> Sports\n// -> Advancement Board\n// -> Schedule Annoucments\n// -> School Events\n// -> Annoucments\n// -> News (special from crusader news weebly)\n\nfunction PickerPiece({\n  text,\n  item,\n  isHoverPicker,\n  setIsHoverPicker,\n}: {\n  text: string;\n  item: resourceMode;\n  isHoverPicker: boolean;\n  setIsHoverPicker: (item: boolean) => void;\n}) {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { selectedResourceMode } = useSelector(\n    (state: RootState) => state.resources,\n  );\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  return (\n    <Pressable\n      onPress={() => {\n        dispatch(resourcesSlice.actions.setSelectedResourceMode(item));\n      }}\n      onHoverIn={() => {\n        setIsHoverPicker(true);\n        setIsSelected(true);\n      }}\n      onHoverOut={() => setIsSelected(false)}\n      style={{\n        height: isHoverPicker ? height * 0.1 : height * 0.05,\n        width: isSelected\n          ? currentBreakPoint >= 2\n            ? width * 0.3\n            : width * 0.6\n          : currentBreakPoint >= 2\n          ? width * 0.2\n          : width * 0.4,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.white,\n      }}\n    >\n      <View\n        style={{\n          height: isHoverPicker ? height * 0.06 : height * 0.03,\n          width: isSelected\n            ? currentBreakPoint >= 2\n              ? width * 0.28\n              : width * 0.46\n            : currentBreakPoint >= 2\n            ? width * 0.18\n            : width * 0.36,\n          marginLeft: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          marginRight: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          backgroundColor: Colors.darkGray,\n          borderWidth: item !== selectedResourceMode ? 0 : 2,\n          borderColor: 'black',\n          borderRadius: 15,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white }}>{text}</Text>\n      </View>\n    </Pressable>\n  );\n}\n\nfunction checkIfResourceDataJustAttachment(body: string): boolean {\n  if (body.length === 67) {\n    const start = body.slice(0, 15);\n    const end = body.slice(53, 67);\n    if (start === '<attachment id=' && end === '></attachment>') {\n      return false;\n    }\n    return true;\n  }\n  return true;\n}\n\nfunction ResourceBlock({\n  resource,\n  setIsShowingCategoryView,\n  setSelectedPost,\n}: {\n  resource: ListRenderItemInfo<resourceDataType>;\n  setIsShowingCategoryView: (item: boolean) => void;\n  setSelectedPost: (item: {\n    teamId: string;\n    conversationId: string;\n    messageId: string;\n  }) => void;\n}) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  return (\n    <View>\n      {isGovernmentMode ? (\n        <Pressable\n          onPress={() => {\n            setIsShowingCategoryView(true);\n            setSelectedPost({\n              teamId: resource.item.teamId,\n              conversationId: resource.item.conversationId,\n              messageId: resource.item.id,\n            });\n          }}\n          style={{\n            width: width * 0.8,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            backgroundColor: Colors.white,\n            borderRadius: 15,\n            marginBottom: height * 0.01,\n          }}\n        >\n          {resource.item.body !== '' &&\n          checkIfResourceDataJustAttachment(resource.item.body) ? (\n            <WebViewCross\n              width={width * 0.8 - 20}\n              html={\n                resource.item.html\n                  ? resource.item.body\n                  : `<div><div>${resource.item.body}</div></div>`\n              }\n            />\n          ) : null}\n          {resource.item.attachments !== undefined ? (\n            <View\n              style={{\n                marginLeft: 10,\n                marginBottom: 10,\n                marginRight: 10,\n                marginTop:\n                  resource.item.body === '' ||\n                  !checkIfResourceDataJustAttachment(resource.item.body)\n                    ? 10\n                    : 0,\n                overflow: 'scroll',\n              }}\n            >\n              {resource.item.attachments?.map(attachment => (\n                <Pressable\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(attachment.webUrl);\n                  }}\n                >\n                  <MimeTypeIcon\n                    width={14}\n                    height={14}\n                    mimeType={attachment.type}\n                  />\n                  <Text>{attachment.title}</Text>\n                </Pressable>\n              ))}\n            </View>\n          ) : null}\n        </Pressable>\n      ) : (\n        <View\n          style={{\n            width: width * 0.8,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            backgroundColor: Colors.white,\n            borderRadius: 15,\n            marginBottom: height * 0.01,\n          }}\n        >\n          {resource.item.body !== '' &&\n          checkIfResourceDataJustAttachment(resource.item.body) ? (\n            <WebViewCross\n              width={width * 0.8 - 20}\n              html={\n                resource.item.html\n                  ? resource.item.body\n                  : `<div><div>${resource.item.body}</div></div>`\n              }\n            />\n          ) : null}\n          {resource.item.attachments !== undefined ? (\n            <View\n              style={{\n                marginLeft: 10,\n                marginBottom: 10,\n                marginRight: 10,\n                marginTop:\n                  resource.item.body === '' ||\n                  !checkIfResourceDataJustAttachment(resource.item.body)\n                    ? 10\n                    : 0,\n                overflow: 'scroll',\n              }}\n            >\n              {resource.item.attachments.map(attachment => (\n                <Pressable\n                  key={attachment.id}\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(attachment.webUrl);\n                  }}\n                >\n                  <MimeTypeIcon\n                    width={14}\n                    height={14}\n                    mimeType={attachment.type}\n                  />\n                  <Text>{attachment.title}</Text>\n                </Pressable>\n              ))}\n            </View>\n          ) : null}\n        </View>\n      )}\n    </View>\n  );\n}\n\nfunction ScholarshipBlock({ item }: { item: ListRenderItemInfo<scholarship> }) {\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const [height, setHeight] = useState<number>(0);\n  useEffect(() => {\n    Image.getSize(item.item.cover, (imgWidth, imgHeight) => {\n      const aspect = imgWidth / imgHeight;\n      setHeight((width - 10) / aspect);\n    });\n  }, []);\n  return (\n    <Pressable\n      onPress={() => {\n        Linking.openURL(item.item.link);\n      }}\n      style={{\n        margin: 5,\n        borderRadius: 15,\n        overflow: 'hidden',\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Image\n        source={{ uri: item.item.cover }}\n        style={{ width: width - 10, height }}\n      />\n      <Text style={{ fontSize: 16, margin: 5, marginLeft: 10 }}>\n        {item.item.title}\n      </Text>\n      <Text style={{ marginBottom: 10, margin: 10 }}>{item.item.note}</Text>\n    </Pressable>\n  );\n}\n\nfunction ResourceScholarships({ isHoverPicker }: { isHoverPicker: boolean }) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [scholarState, setScholarState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [scholarships, setScholarships] = useState<scholarship[]>([]);\n\n  async function loadData() {\n    const result = await getScholarships();\n    if (result.result === loadingStateEnum.success) {\n      setScholarships(result.data);\n      setScholarState(loadingStateEnum.success);\n    } else {\n      setScholarState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <>\n      {scholarState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            height: isHoverPicker ? height * 0.75 : height * 0.8,\n            width,\n            backgroundColor: Colors.lightGray,\n          }}\n        >\n          <ProgressView width={14} height={14} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {scholarState === loadingStateEnum.success ? (\n            <FlatList\n              data={scholarships}\n              renderItem={item => <ScholarshipBlock item={item} />}\n              style={{\n                height: isHoverPicker ? height * 0.75 : height * 0.8,\n                width,\n                backgroundColor: Colors.lightGray,\n              }}\n            />\n          ) : (\n            <View\n              style={{\n                height: isHoverPicker ? height * 0.75 : height * 0.8,\n                width,\n                backgroundColor: Colors.lightGray,\n              }}\n            >\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default function Resources() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { resources, loadingState, selectedResourceMode } = useSelector(\n    (state: RootState) => state.resources,\n  );\n  const [isHoverPicker, setIsHoverPicker] = useState<boolean>(false);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const [isShowingCategoryView, setIsShowingCategoryView] =\n    useState<boolean>(false);\n  const [selectedPost, setSelectedPost] = useState<\n    undefined | { teamId: string; conversationId: string; messageId: string }\n  >(undefined);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    getResources(selectedResourceMode);\n  }, [selectedResourceMode]);\n\n  // Fonts\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ height, width }}>\n        <View\n          style={{\n            height: height * 0.1,\n            width,\n            backgroundColor: Colors.darkGray,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n          <Text style={{ fontFamily: 'BukhariScript', color: Colors.white }}>\n            Resources\n          </Text>\n        </View>\n        <SearchBox />\n        <View\n          style={{\n            width,\n            height: height * 0.05,\n            backgroundColor: Colors.lightGray,\n          }}\n        />\n        <>\n          {selectedResourceMode === resourceMode.news ? (\n            <ResourcesNews isHoverPicker={isHoverPicker} />\n          ) : (\n            <>\n              {selectedResourceMode === resourceMode.scholarships ? (\n                <ResourceScholarships isHoverPicker={isHoverPicker} />\n              ) : (\n                <View\n                  style={{\n                    height: isHoverPicker ? height * 0.75 : height * 0.8,\n                    width,\n                    backgroundColor: Colors.lightGray,\n                  }}\n                >\n                  <>\n                    {loadingState === loadingStateEnum.loading ? (\n                      <View\n                        style={{\n                          width,\n                          height: isHoverPicker ? height * 0.75 : height * 0.8,\n                          alignContent: 'center',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        <ProgressView\n                          width={width < height ? width * 0.05 : height * 0.05}\n                          height={width < height ? width * 0.05 : height * 0.05}\n                        />\n                        <Text>Loading</Text>\n                      </View>\n                    ) : (\n                      <>\n                        {loadingState === loadingStateEnum.success ? (\n                          <FlatList\n                            data={resources}\n                            renderItem={resource => (\n                              <ResourceBlock\n                                resource={resource}\n                                key={resource.item.id}\n                                setIsShowingCategoryView={\n                                  setIsShowingCategoryView\n                                }\n                                setSelectedPost={setSelectedPost}\n                              />\n                            )}\n                          />\n                        ) : (\n                          <Text>Failed</Text>\n                        )}\n                      </>\n                    )}\n                  </>\n                </View>\n              )}\n            </>\n          )}\n        </>\n        <Pressable\n          style={{ height: isHoverPicker ? height * 0.1 : height * 0.05 }}\n          onHoverIn={() => {\n            setIsHoverPicker(true);\n          }}\n          onHoverOut={() => {\n            setIsHoverPicker(false);\n          }}\n        >\n          <ScrollView\n            horizontal\n            style={{\n              height: isHoverPicker ? height * 0.1 : height * 0.05,\n              width,\n              backgroundColor: Colors.white,\n            }}\n            showsHorizontalScrollIndicator={false}\n          >\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Home\"\n              item={resourceMode.home}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Sports\"\n              item={resourceMode.sports}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Advancement\"\n              item={resourceMode.advancement}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"School Events\"\n              item={resourceMode.schoolEvents}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Annoucments\"\n              item={resourceMode.annoucments}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Fitness\"\n              item={resourceMode.fitness}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Files\"\n              item={resourceMode.files}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Crusader News\"\n              item={resourceMode.news}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Scholarships\"\n              item={resourceMode.scholarships}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n          </ScrollView>\n        </Pressable>\n      </View>\n      {isGovernmentMode &&\n      isShowingCategoryView &&\n      selectedPost !== undefined ? (\n        <GovernmentCategoryView\n          teamId={selectedPost.teamId}\n          channelId={selectedPost.conversationId}\n          messageId={selectedPost.messageId}\n          onClose={() => setIsShowingCategoryView(false)}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction GovernmentCategoryView({\n  teamId,\n  channelId,\n  messageId,\n  onClose,\n}: {\n  teamId: string;\n  channelId: string;\n  messageId: string;\n  onClose: () => void;\n}) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [categoryState, setCategoryState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [selectedCategory, setSelectedCategory] = useState<resourceMode>(\n    resourceMode.home,\n  );\n  async function addCategory() {\n    setCategoryState(loadingStateEnum.loading);\n    const data = {\n      singleValueExtendedProperties: [\n        {\n          id: store.getState().paulyList.resourceExtensionId,\n          value: convertResourceModeString(selectedCategory),\n        },\n      ],\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages/${messageId}`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      setCategoryState(loadingStateEnum.success);\n    } else {\n      setCategoryState(loadingStateEnum.failed);\n    }\n  }\n  return (\n    <View\n      style={{\n        height: height * 0.9,\n        width: width * 0.8,\n        position: 'absolute',\n        top: height * 0.05,\n        left: width * 0.1,\n        backgroundColor: Colors.white,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n      }}\n    >\n      <Pressable\n        onPress={() => onClose()}\n        style={{ position: 'absolute', left: 20, top: 20 }}\n      >\n        <CloseIcon width={12} height={12} />\n      </Pressable>\n      <View\n        style={{\n          width: width * 0.8,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <Text>Categories</Text>\n      </View>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.sports)}\n        style={{\n          marginLeft: width * 0.05,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.sports\n              ? Colors.lightGray\n              : Colors.white,\n        }}\n      >\n        <Text>Sports</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.advancement)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.advancement\n              ? Colors.lightGray\n              : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Advancement</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.schoolEvents)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.schoolEvents\n              ? Colors.lightGray\n              : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>School Events</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.annoucments)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.annoucments\n              ? Colors.lightGray\n              : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Annoucments</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.fitness)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.fitness\n              ? Colors.lightGray\n              : Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Fitness</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.files)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.files\n              ? Colors.lightGray\n              : Colors.white,\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Files</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          addCategory();\n        }}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: Colors.white,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>{getTextState(categoryState, { notStarted: 'Confirm' })}</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nfunction SearchBox() {\n  // Dimentsions\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [mounted, setMounted] = useState<boolean>(false);\n  const { searchValue } = useSelector((state: RootState) => state.resources);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false); // Boolean true if text overflowing. This is telling the search icon to show or not.\n  const style = Platform.OS === 'web' ? { outlineStyle: 'none' } : undefined; // Style to remove ourline around textbox on web\n  const dispatch = useDispatch();\n\n  // Getting search results on value chage\n  useEffect(() => {\n    if (mounted) {\n      // Checking so that this isn't called on start\n      const searchValueSave = searchValue; // saving value to check if change in 1.5 s\n      setTimeout(() => {\n        // Waiting 1.5s\n        if (store.getState().resources.searchValue === searchValueSave) {\n          // Checking if value changed\n          getResourcesSearch(searchValue); // getting search data\n        }\n      }, 1500);\n    } else {\n      setMounted(true); // Setting that it has been called on start\n    }\n  }, [searchValue]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.1 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchValue}\n            onChangeText={e => {\n              dispatch(resourcesSlice.actions.setSearchValue(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchValue}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { useMsal } from '@azure/msal-react';\nimport {\n  DiscoveryDocument,\n  revokeAsync,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts } from 'expo-font';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { View, Text, Pressable, Platform, Image } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { tenantId } from '../../PaulyConfig';\nimport store, { RootState } from '../../Redux/store';\nimport { authenticationTokenSlice } from '../../Redux/reducers/authenticationTokenReducer';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport {\n  GearIcon,\n  GovernmentIcon,\n  PersonIcon,\n  StudentSearchIcon,\n} from '../../UI/Icons/Icons';\nimport BackButton from '../../UI/BackButton';\nimport { Colors, loadingStateEnum } from '../../types';\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n\nexport default function Settings() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { uri, displayName } = useSelector(\n    (state: RootState) => state.microsoftProfileData,\n  );\n  const [imageLoadState, setImageLoadState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.maroon,\n        bottom: Colors.maroon,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentBreakPoint >= 1) {\n      navigate('/');\n    }\n  }, [currentBreakPoint]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View>\n      <BackButton to=\"/\" />\n      <View\n        style={{\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: height * 0.2,\n          marginTop: height * 0.025,\n          marginBottom: height * 0.02,\n        }}\n      >\n        <GearIcon\n          width={width < height ? width * 0.3 : height * 0.2}\n          height={width < height ? width * 0.3 : height * 0.2}\n          style={{ position: 'absolute', left: width * 0.2 }}\n        />\n        <Text\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: 45,\n            color: Colors.white,\n          }}\n        >\n          Settings\n        </Text>\n      </View>\n      <View\n        style={{\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {uri !== '' && imageLoadState !== loadingStateEnum.failed ? (\n          <Image\n            source={{ uri }}\n            onError={e => {\n              setImageLoadState(loadingStateEnum.failed);\n            }}\n            style={{\n              width: width * 0.3,\n              height: width * 0.3,\n              borderRadius: width * 0.25,\n            }}\n          />\n        ) : (\n          <PersonIcon width={width * 0.4} height={width * 0.4} />\n        )}\n        <Text\n          style={{\n            color: Colors.white,\n            fontWeight: 'bold',\n            fontSize: 24,\n            marginTop: height * 0.05,\n          }}\n        >\n          {displayName}\n        </Text>\n      </View>\n      <Pressable\n        onPress={() => {\n          signOut();\n        }}\n        style={{\n          width: width * 0.8,\n          height: height * 0.08,\n          borderRadius: 15,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 2, height: 4 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <Text style={{ fontWeight: 'bold' }}>SIGN OUT</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          navigate('/students');\n        }}\n        style={{\n          width: width * 0.8,\n          height: height * 0.08,\n          borderRadius: 15,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 2, height: 4 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n          alignItems: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <StudentSearchIcon\n          width={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n          height={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n          style={{ marginLeft: width * 0.025 }}\n        />\n        <Text>Students</Text>\n      </Pressable>\n      {isGovernmentMode ? (\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government');\n          }}\n          style={{\n            width: width * 0.8,\n            height: height * 0.08,\n            borderRadius: 15,\n            shadowColor: Colors.black,\n            shadowOffset: { width: 2, height: 4 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            flexDirection: 'row',\n            backgroundColor: Colors.white,\n            alignItems: 'center',\n            marginTop: height * 0.05,\n          }}\n        >\n          <GovernmentIcon\n            width={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n            height={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n            style={{ marginLeft: width * 0.025 }}\n          />\n          <Text>Government</Text>\n        </Pressable>\n      ) : null}\n    </View>\n  );\n}\n","import {\n  View,\n  Text,\n  Image,\n  ImageSourcePropType,\n  Pressable,\n} from 'react-native';\nimport React, { ReactNode, useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useSelector } from 'react-redux';\nimport {\n  BookIcon,\n  CalendarIcon,\n  GearIcon,\n  GraduationHatIcon,\n  GraphAPILogo,\n  HomeIcon,\n  MedalIcon,\n  StudentSearchIcon,\n} from '../../../UI/Icons/Icons';\nimport { RootState } from '../../../Redux/store';\nimport { Colors } from '../../../types';\n\nfunction Block({\n  height,\n  width,\n  text,\n  imageSource,\n  children,\n  onPress,\n}: {\n  height: number;\n  width: number;\n  text: string;\n  imageSource?: ImageSourcePropType;\n  children?: ReactNode;\n  onPress: () => void;\n}) {\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      style={{\n        height,\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: isSelected ? Colors.lightGray : Colors.darkGray,\n        borderRadius: 5,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 5,\n      }}\n      onHoverIn={() => {\n        setIsSelected(true);\n      }}\n      onHoverOut={() => {\n        setIsSelected(false);\n      }}\n      onPress={() => onPress()}\n    >\n      {imageSource !== undefined && (\n        <Image\n          source={imageSource}\n          style={{ width: width * 0.5, height: height * 0.5 }}\n          resizeMode=\"center\"\n        />\n      )}\n      {imageSource === undefined && children !== undefined && (\n        <View style={{ width: width * 0.5, height: height * 0.5 }}>\n          <>{children}</>\n        </View>\n      )}\n      <Text style={{ color: isSelected ? Colors.black : Colors.white }}>\n        {text}\n      </Text>\n    </Pressable>\n  );\n}\n\nexport default function Government() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isGovernmentMode) {\n      navigate('/');\n    }\n  }, []);\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../../assets/fonts/BukhariScript.ttf'),\n  });\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  const [mainWidth, setMainWidth] = useState<number>(0);\n  useEffect(() => {\n    const fivePercent = width * 0.05;\n    const remainder = (width * 0.8) % (100 + fivePercent);\n    setMainWidth(width * 0.8 - remainder - fivePercent);\n  }, [width]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      {currentBreakPoint <= 0 ? (\n        <Pressable onPress={() => navigate('/profile/')}>\n          <Text>Back</Text>\n        </Pressable>\n      ) : null}\n      <View\n        style={{\n          height: height * 0.2,\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={1}\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: height * 0.09,\n            height: height * 0.13,\n            width: width * 0.8,\n            textAlign: 'center',\n            textAlignVertical: 'center',\n            verticalAlign: 'middle',\n          }}\n        >\n          Government\n        </Text>\n      </View>\n      <View\n        style={{\n          height: height * 0.75,\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <View\n          style={{\n            height: height * 0.75,\n            width: mainWidth,\n            flexDirection: 'row',\n            alignContent: 'flex-start',\n            flexWrap: 'wrap',\n            rowGap: height * 0.05,\n            columnGap: width * 0.05,\n          }}\n        >\n          <Block\n            onPress={() => navigate('/profile/government/graph/list')}\n            width={100}\n            height={100}\n            text=\"Graph\"\n          >\n            <GraphAPILogo width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/commissions')}\n            width={100}\n            height={100}\n            text=\"Commissions\"\n          >\n            <MedalIcon width={50} height={50} />\n          </Block>\n          <Block\n            width={100}\n            height={100}\n            text=\"Sports\"\n            imageSource={require('../../../../assets/images/Football.png')}\n            onPress={() => navigate('/profile/government/sports')}\n          />\n          <Block\n            onPress={() => navigate('/profile/government/homepage')}\n            width={100}\n            height={100}\n            text=\"Homepage\"\n          >\n            <HomeIcon width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/calendar')}\n            width={100}\n            height={100}\n            text=\"Calendar\"\n          >\n            <CalendarIcon width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/classes')}\n            width={100}\n            height={100}\n            text=\"Classes\"\n          >\n            <GraduationHatIcon width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/admin')}\n            width={100}\n            height={100}\n            text=\"Admin\"\n          >\n            <GearIcon width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/resources')}\n            width={100}\n            height={100}\n            text=\"Resources\"\n          >\n            <BookIcon width={50} height={50} />\n          </Block>\n          <Block\n            onPress={() => navigate('/profile/government/students')}\n            width={100}\n            height={100}\n            text=\"Students\"\n          >\n            <StudentSearchIcon width={50} height={50} />\n          </Block>\n        </View>\n      </View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// June 19 2023\n// Picker with animated black line\n\nimport React, { ReactNode, useRef, useEffect, Children } from 'react';\nimport { View, Pressable, Animated } from 'react-native';\n// import styles from './Picker.module.css'\n\ninterface PickerWrapperProps {\n  selectedIndex: number;\n  onSetSelectedIndex: (item: number) => void;\n  children: ReactNode;\n  width: number;\n  height: number;\n}\n\nconst PickerWrapper: React.FC<PickerWrapperProps> = ({\n  selectedIndex,\n  onSetSelectedIndex,\n  children,\n  width,\n  height,\n}) => {\n  const pan = useRef(new Animated.Value(0)).current;\n  const compoentWidth = width / Children.count(children);\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedIndex * compoentWidth);\n  }, []);\n\n  return (\n    <View style={{ flexDirection: 'row', height: height * 0.8, width }}>\n      {React.Children.map(children, (child, index) => (\n        <View\n          style={{\n            position: 'absolute',\n            transform: [{ translateX: index * compoentWidth }],\n            width: compoentWidth,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              onSetSelectedIndex(index);\n              fadeIn(index);\n            }}\n          >\n            {child}\n          </Pressable>\n        </View>\n      ))}\n      <Animated.View\n        style={{\n          transform: [{ translateX: pan }],\n        }}\n      >\n        <View\n          style={{\n            height: height * 0.2,\n            width: compoentWidth,\n            backgroundColor: 'black',\n            top: height * 0.6,\n            borderRadius: 5,\n            position: 'absolute',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default PickerWrapper;\n","import { loadingStateEnum, resourceResponce } from '../types';\nimport getResource from './getResources';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function getTeams(nextLink?: string): Promise<{\n  result: loadingStateEnum;\n  data?: groupType[];\n  nextLink?: string;\n}> {\n  const groupResult = await callMsGraph(\n    nextLink || 'https://graph.microsoft.com/v1.0/me/joinedTeams',\n  );\n  if (groupResult.ok) {\n    const groupResultData = await groupResult.json();\n    if (groupResultData.value !== undefined) {\n      const outputData: groupType[] = [];\n      for (let index = 0; index < groupResultData.value.length; index += 1) {\n        outputData.push({\n          name: groupResultData.value[index].displayName,\n          id: groupResultData.value[index].id,\n        });\n      }\n      return {\n        result: loadingStateEnum.success,\n        data: outputData,\n        nextLink: groupResultData['@odata.nextLink'],\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getChannels(\n  teamId: string,\n  nextLink?: string,\n): Promise<{\n  result: loadingStateEnum;\n  data?: channelType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${teamId}/allChannels`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const output: channelType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      output.push({\n        id: data.value[index].id,\n        displayName: data.value[index].displayName,\n        selected: false,\n        loading: false,\n        error: false,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getPosts(\n  teamId: string,\n  channelId: string,\n): Promise<{\n  result: loadingStateEnum;\n  data?: resourceDataType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const output: resourceDataType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      output.push({\n        id: data.value[index].id,\n        body: data.value[index].body.content,\n        teamId: data.value[index].channelIdentity.teamId,\n        conversationId: data.value[index].channelIdentity.channelId,\n        html: false,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// Id group id\nexport async function getResourceChannels(\n  id: string,\n): Promise<\n  | { result: loadingStateEnum.success; data: channelType[] }\n  | { result: loadingStateEnum.failed }\n> {\n  const getResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${id}/allChannels`,\n  );\n  const channelResult: channelType[] = [];\n  if (getResult.ok) {\n    const getResultData = await getResult.json();\n    const channelGetResultsAwait: Promise<{\n      result: resourceResponce;\n      itemId?: string | undefined;\n    }>[] = [];\n    for (\n      let indexResult = 0;\n      indexResult < getResultData.value.length;\n      indexResult += 1\n    ) {\n      channelGetResultsAwait.push(\n        getResource(id, getResultData.value[indexResult].id),\n      );\n    }\n    const channelGetResults: {\n      result: resourceResponce;\n      itemId?: string | undefined;\n    }[] = await Promise.all(channelGetResultsAwait);\n    for (let index = 0; index < channelGetResults.length; index += 1) {\n      channelResult.push({\n        id: getResultData.value[index].id,\n        selected: channelGetResults[index].result === resourceResponce.found,\n        loading: false,\n        displayName: getResultData.value[index].displayName,\n        error: channelGetResults[index].result === resourceResponce.failed,\n      });\n    }\n    return { result: loadingStateEnum.success, data: channelResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport PickerWrapper from '../../../../UI/Pickers/Picker';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { clientId } from '../../../../PaulyConfig';\nimport { getTeams } from '../../../../Functions/microsoftGroupsFunctions';\n\ntype listType = {\n  displayName: string;\n  listId: string;\n  name: string;\n};\n\ntype extensionType = {\n  description: string;\n  id: string;\n};\n\nenum graphMode {\n  list,\n  group,\n  extension,\n}\n\nexport default function MicrosoftGraphOverview() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [lists, setLists] = useState<listType[]>([]);\n  const [groups, setGroups] = useState<groupType[]>([]);\n  const [extensions, setExtensions] = useState<extensionType[]>([]);\n  const [applicationExtensions, setApplicationExtensions] = useState<\n    extensionType[]\n  >([]);\n  const [selectedGraphMode, setSelectedGraphMode] = useState<graphMode>(\n    graphMode.list,\n  );\n  const { mode } = useParams();\n\n  // loading states\n  const [groupLoadingState, setGroupLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [listLoadingState, setListLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [schemaLoadingState, setSchemaLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n\n  async function getLists() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n    ); // sites/8td1tk.onmicrosoft.com/sites\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value !== undefined) {\n        const incomingLists: listType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          incomingLists.push({\n            displayName: data.value[index].displayName,\n            listId: data.value[index].id,\n            name: data.value[index].name,\n          });\n        }\n        setLists(incomingLists);\n        setListLoadingState(loadingStateEnum.success);\n      } else {\n        setListLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setListLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  // async function searchGroups(search: string) {\n  //   const groupResult = await callMsGraph(\n  //     `https://graph.microsoft.com/v1.0/groups?$filter=startswith(displayName,'${search}')`,\n  //   );\n  // }\n\n  async function loadData() {\n    const groupResult = await getTeams(\n      'https://graph.microsoft.com/v1.0/groups',\n    );\n    if (\n      groupResult.result === loadingStateEnum.success &&\n      groupResult.data !== undefined\n    ) {\n      setGroups(groupResult.data);\n    }\n    setGroupLoadingState(groupResult.result);\n  }\n\n  async function getExtensions() {\n    let schemaExtensionsUrl = `https://graph.microsoft.com/v1.0/schemaExtensions?$filter=owner%20eq%20'${clientId}'`;\n    const resultData: extensionType[] = [];\n    while (schemaExtensionsUrl !== '') {\n      const result = await callMsGraph(schemaExtensionsUrl);\n      if (!result.ok) {\n        setSchemaLoadingState(loadingStateEnum.failed);\n        return;\n      }\n      const data = await result.json();\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          description: data.value[index].description,\n          id: data.value[index].id,\n        });\n      }\n      if (data['@odata.nextLink'] !== undefined) {\n        schemaExtensionsUrl = data['@odata.nextLink'];\n      } else {\n        schemaExtensionsUrl = '';\n      }\n    }\n    setApplicationExtensions(resultData);\n\n    const applicationResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/schemaExtensions',\n    );\n    if (applicationResult.ok) {\n      const applicationData = await applicationResult.json();\n      const resultData: extensionType[] = [];\n      for (let index = 0; index < applicationData.value.length; index += 1) {\n        resultData.push({\n          description: applicationData.value[index].description,\n          id: applicationData.value[index].id,\n        });\n      }\n      setExtensions(resultData);\n      setSchemaLoadingState(loadingStateEnum.success);\n    } else {\n      setSchemaLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (mode === 'list') {\n      setSelectedGraphMode(graphMode.list);\n    } else if (mode === 'group') {\n      setSelectedGraphMode(graphMode.group);\n    } else if (mode === 'extension') {\n      setSelectedGraphMode(graphMode.extension);\n    }\n  }, [mode]);\n\n  useEffect(() => {\n    getLists();\n    loadData();\n    getExtensions();\n  }, []);\n\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <Link to=\"/profile/government\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Microsoft Graph Overview</Text>\n      <PickerWrapper\n        selectedIndex={selectedGraphMode}\n        onSetSelectedIndex={setSelectedGraphMode}\n        width={width}\n        height={30}\n      >\n        <Text>Lists</Text>\n        <Text>Groups</Text>\n        <Text>Extensions</Text>\n      </PickerWrapper>\n      <ScrollView style={{ height: height * 0.6 }}>\n        {selectedGraphMode === graphMode.list ? (\n          <View>\n            {listLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {listLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    {lists.map((item: listType) => (\n                      <Link\n                        key={`${item.listId}Link`}\n                        to={`/profile/government/graph/list/edit/${item.listId}`}\n                      >\n                        <View key={item.listId}>\n                          {\n                            // TO DO PRODuction fix these ids\n                            item.listId !==\n                              '2b86ba89-0262-4906-9247-bfd1260fb68e' &&\n                            item.listId !==\n                              '1f4cd053-dd6b-4e40-bb9b-803cbc74e872' ? (\n                              <View\n                                style={{\n                                  marginBottom: 5,\n                                  borderColor: 'black',\n                                  borderWidth: 5,\n                                }}\n                              >\n                                <Text>{item.displayName}</Text>\n                                <Text>{item.listId}</Text>\n                              </View>\n                            ) : null\n                          }\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n        {selectedGraphMode === graphMode.group ? (\n          <View>\n            {groupLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {groupLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    {groups.map(group => (\n                      <Link\n                        to={`/profile/government/graph/group/edit/${group.id}`}\n                        key={`group_${group.id}`}\n                      >\n                        <View>\n                          <Text>{group.name}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n        {selectedGraphMode === graphMode.extension ? (\n          <View>\n            {schemaLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {schemaLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    <View style={{ margin: 10 }}>\n                      <Text>Application Extensions</Text>\n                    </View>\n                    {applicationExtensions.map(extension => (\n                      <Link\n                        to={`/profile/government/graph/extension/edit/${extension.id}`}\n                        key={`extension_${extension.id}`}\n                        style={{ borderWidth: 2, borderColor: 'black' }}\n                      >\n                        <View>\n                          <Text>{extension.id}</Text>\n                          <Text>{extension.description}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                    <View style={{ margin: 10 }}>\n                      <Text>Tenant Extensions</Text>\n                    </View>\n                    {extensions.map(extension => (\n                      <Link\n                        to={`/profile/government/graph/extension/edit/${extension.id}`}\n                        key={`extension_${extension.id}`}\n                        style={{ borderWidth: 2, borderColor: 'black' }}\n                      >\n                        <View>\n                          <Text>{extension.id}</Text>\n                          <Text>{extension.description}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n      </ScrollView>\n      <Link to=\"/profile/government/graph/list/create\">\n        <Text>Create List</Text>\n      </Link>\n    </View>\n  );\n}\n","import { View, Text, Button, TextInput, Pressable } from 'react-native';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { RootState } from '../../../../Redux/store';\n\ntype MicrosoftGraphColumnDefinitions =\n  | 'text'\n  | 'number'\n  | 'boolean'\n  | 'calculated'\n  | 'choice'\n  | 'columnGroup'\n  | 'contentApprovalStatus'\n  | 'currency'\n  | 'dateTime'\n  | 'defaultValue'\n  | 'description'\n  | 'displayName'\n  | 'enforceUniqueValues'\n  | 'geolocation'\n  | 'hidden';\n\ntype ColumnItem = {\n  name: string;\n  key: MicrosoftGraphColumnDefinitions;\n  data: any;\n};\n\nexport default function MicrosoftGraphCreateList() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n\n  const [columns, setColumns] = useState<ColumnItem[]>([]);\n\n  const [listName, setListName] = useState<string>('');\n  const [isListHidden, setIsListHidden] = useState<boolean>(false);\n  const [isShowingTypeWindow, setIsShowingTypeWindow] =\n    useState<boolean>(false);\n\n  // Colum Properties\n  const [selectedColumnType, setSelectedColumnType] =\n    useState<MicrosoftGraphColumnDefinitions>('text');\n  const [enforceUniqueValues, setEnforceUniqueValues] =\n    useState<boolean>(false);\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n  const [columnDescription, setColumnDescription] = useState<string>('');\n  const [newColumnName, setNewColumnName] = useState<string>('');\n\n  async function createList() {\n    const columnData: object[] = [];\n\n    for (let index = 0; index < columns.length; index += 1) {\n      const { key } = columns[index];\n      const newData: object = {\n        name: columns[index].name,\n        text: {},\n      };\n      columnData.push(newData);\n    }\n\n    const listData = {\n      displayName: listName,\n      columns: columnData,\n      list: {\n        contentTypesEnabled: false,\n        hidden: false,\n        template: ' genericList',\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n      'POST',\n      JSON.stringify(listData),\n    );\n\n    const data = await result.json();\n  }\n  return (\n    <View style={{ width }}>\n      <Link to=\"/profile/government/graph\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Microsoft Graph Create</Text>\n      <Text>List Name</Text>\n      <TextInput value={listName} onChangeText={text => setListName(text)} />\n      <View style={{ height: height * 0.75 }}>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Name</Text>\n          <Text>Type</Text>\n        </View>\n        {columns.map((item: ColumnItem) => (\n          <View style={{ flexDirection: 'row' }}>\n            <Text>{item.name} </Text>\n            <Text>{item.key}</Text>\n          </View>\n        ))}\n      </View>\n      {isShowingTypeWindow ? (\n        <View style={{ height: 100, position: 'absolute', zIndex: 2 }}>\n          <Button\n            title=\"Text\"\n            onPress={() => {\n              setSelectedColumnType('text');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Number\"\n            onPress={() => {\n              setSelectedColumnType('number');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Boolean\"\n            onPress={() => {\n              setSelectedColumnType('boolean');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Calculated\"\n            onPress={() => {\n              setSelectedColumnType('calculated');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Location\"\n            onPress={() => {\n              setSelectedColumnType('geolocation');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Choice\"\n            onPress={() => {\n              setSelectedColumnType('choice');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Column Group\"\n            onPress={() => {\n              setSelectedColumnType('columnGroup');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Content Approval Status\"\n            onPress={() => {\n              setSelectedColumnType('contentApprovalStatus');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Currency\"\n            onPress={() => {\n              setSelectedColumnType('currency');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Date\"\n            onPress={() => {\n              setSelectedColumnType('dateTime');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n        </View>\n      ) : null}\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Hidden: </Text>\n        <Pressable\n          onPress={() => {\n            setIsHidden(!isHidden);\n          }}\n        >\n          <Text>{isHidden ? 'X' : 'O'}</Text>\n        </Pressable>\n        <TextInput\n          value={newColumnName}\n          onChangeText={text => setNewColumnName(text)}\n        />\n      </View>\n      <Button\n        title={selectedColumnType}\n        onPress={() => {\n          setIsShowingTypeWindow(!isShowingTypeWindow);\n        }}\n      />\n      <Button\n        title=\"Add Column\"\n        onPress={() => {\n          let columnData = {};\n          if (selectedColumnType === 'text') {\n            columnData = {\n              allowMultipleLines: true,\n              appendChangesToExistingText: false,\n              linesForEditing: 6,\n              maxLength: 300,\n              textType: 'richText',\n            };\n          }\n          const newColumn = {\n            name: newColumnName,\n            key: selectedColumnType,\n            data: columnData,\n          };\n          setNewColumnName('');\n          setColumns([...columns, newColumn]);\n        }}\n      />\n      <Button\n        title=\"Create List\"\n        onPress={() => {\n          createList();\n        }}\n      />\n      <View style={{ flexDirection: 'row' }}>\n        <Text>List Hidden: </Text>\n        <Pressable\n          onPress={() => {\n            setIsListHidden(!isListHidden);\n          }}\n        >\n          <Text>{isListHidden ? 'X' : 'O'}</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum, submissionTypeEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction convertSubmissionTypeToFilter(\n  submissionType: submissionTypeEnum,\n): string {\n  if (submissionType === submissionTypeEnum.approved) {\n    return '%20and%20fields/submissionApproved%20ne%20false';\n  }\n  if (submissionType === submissionTypeEnum.unApproved) {\n    return '%20and%20fields/submissionApproved%20eq%20false';\n  }\n  if (submissionType === submissionTypeEnum.unReviewed) {\n    return '%20and%20fields/submissionReviewed%20eq%20false';\n  }\n  return '';\n}\n\nexport default async function getSubmissions(\n  commissionId: string,\n  submissionType: submissionTypeEnum,\n): Promise<{\n  result: loadingStateEnum;\n  data?: submissionType[];\n  nextLink?: string;\n  count?: number;\n}> {\n  const filter: string = convertSubmissionTypeToFilter(submissionType);\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.commissionSubmissionsListId\n    }/items?expand=fields&$select=id&$filter=fields/commissionId%20eq%20'${commissionId}'${filter}`,\n    'GET',\n  );\n  if (result.ok) {\n    const data = await result.json();\n\n    // Get Users\n    const batchRequests: { id: string; method: string; url: string }[][] = [];\n    const users: any = {};\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (index % 20 === 0) {\n        batchRequests.push([]);\n      }\n      batchRequests[Math.floor(index / 20)].push({\n        id: (index + 1).toString(),\n        method: 'GET',\n        url: `/users/${data.value[index].fields.userId}?$select=id,displayName`,\n      });\n    }\n    for (let index = 0; index < batchRequests.length; index += 1) {\n      const batchData = {\n        requests: batchRequests[index],\n      };\n      const batchHeaders = new Headers();\n      batchHeaders.append('Accept', 'application/json');\n      const batchResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n      );\n      if (result.ok) {\n        const batchResultData = await batchResult.json();\n        for (\n          let batchIndex = 0;\n          batchIndex < batchResultData.responses.length;\n          batchIndex += 1\n        ) {\n          if (batchResultData.responses[batchIndex].status === 200) {\n            Object.defineProperty(\n              users,\n              batchResultData.responses[batchIndex].body.id,\n              {\n                value: batchResultData.responses[batchIndex].body.displayName,\n              },\n            );\n          } else {\n            return { result: loadingStateEnum.failed };\n          }\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n\n    // Return Output\n    const output: submissionType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const name = users[data.value[index].fields.userId];\n      if (name !== undefined) {\n        output.push({\n          userName: name,\n          submissionTime: data.value[index].fields.submittedTime,\n          id: data.value[index].fields.submissionId,\n          itemId: data.value[index].id,\n          approved: data.value[index].fields.submissionApproved,\n          reviewed: data.value[index].fields.submissionReviewed,\n          submissionImage:\n            data.value[index].fields.submissionData !== undefined\n              ? JSON.parse(data.value[index].fields.submissionData).imageShare\n              : undefined,\n        });\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n      count: data.value.length,\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport getCommissions from '../../../../Functions/commissions/getCommissions';\nimport getSubmissions from '../../../../Functions/commissions/getSubmissions';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  loadingStateEnum,\n  submissionTypeEnum,\n} from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentCommissions() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [commissions, setCommissions] = useState<commissionType[]>([]);\n  const [commissionsState, setCommissionsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getCommissions();\n    if (result.result === loadingStateEnum.success) {\n      if (result.data !== undefined) {\n        setCommissions(result.data);\n      }\n      // TO DO pagination\n    }\n    setCommissionsState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government');\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n        <View\n          style={{\n            width,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Commissions</Text>\n        </View>\n      </View>\n      <View style={{ height: height * 0.85 }}>\n        {commissionsState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <>\n            {commissionsState === loadingStateEnum.success ? (\n              <ScrollView style={{ height: height * 0.85 }}>\n                {commissions.map(commission => (\n                  <CommissionBlock\n                    key={`Commission_${\n                      commission.commissionId\n                    }_${createUUID()}`}\n                    commission={commission}\n                  />\n                ))}\n              </ScrollView>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ height: height * 0.05 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government/commissions/create');\n          }}\n        >\n          <Text>Create New Commission</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction CommissionBlock({ commission }: { commission: commissionType }) {\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [unclaimedState, setUnclaimedState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [unclaimedCount, setUnclaimedCount] = useState<string>('0');\n\n  async function loadData() {\n    const result = await getSubmissions(\n      commission.commissionId,\n      submissionTypeEnum.unReviewed,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.count !== undefined\n    ) {\n      if (result.count >= 50) {\n        setUnclaimedCount(`${result.count.toString()}+`);\n      } else {\n        setUnclaimedCount(result.count.toString());\n      }\n    }\n    setUnclaimedState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <Pressable\n      onPress={() =>\n        navigate(`/profile/government/commissions/${commission.commissionId}`)\n      }\n      key={`Commission_${commission.commissionId}_${createUUID()}`}\n      style={{\n        margin: 10,\n        borderRadius: 15,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n      }}\n    >\n      <View style={{ margin: 10 }}>\n        <Text selectable={false}>{commission.title}</Text>\n      </View>\n      {unclaimedCount !== '0' ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: 'red',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>{unclaimedCount}</Text>\n        </View>\n      ) : null}\n      {unclaimedState === loadingStateEnum.loading ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: '#FF6700',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <ProgressView width={10} height={10} />\n        </View>\n      ) : null}\n      {unclaimedState === loadingStateEnum.failed ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: 'red',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>!</Text>\n        </View>\n      ) : null}\n    </Pressable>\n  );\n}\n","import { View, Text, Animated, Pressable } from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Colors } from '../../types';\n\ntype PickerWrapperProps = {\n  selectedIndex: number;\n  setSelectedIndex: (item: number) => void;\n  options: string[];\n  width: number;\n  height: number;\n};\n\nexport default function SegmentedPicker({\n  width,\n  height,\n  selectedIndex,\n  setSelectedIndex,\n  options,\n}: PickerWrapperProps) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [compoentWidth, setComponentWidth] = useState(width / 3);\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth + compoentWidth * 0.005,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedIndex * compoentWidth + compoentWidth * 0.005);\n  }, []);\n\n  useEffect(() => {\n    setComponentWidth(width / options.length);\n    pan.setValue(selectedIndex * compoentWidth + compoentWidth * 0.005);\n  }, [width]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        height,\n        width,\n        backgroundColor: '#7d7d7d',\n        borderRadius: 20,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n      }}\n    >\n      {options.map((option, index) => (\n        <Pressable\n          onPress={() => {\n            setSelectedIndex(index);\n            fadeIn(index);\n          }}\n          style={{\n            position: 'absolute',\n            width: compoentWidth,\n            height,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            transform: [{ translateX: index * compoentWidth }],\n          }}\n        >\n          <Text\n            adjustsFontSizeToFit\n            style={{\n              textAlignVertical: 'center',\n              textAlign: 'center',\n              width: compoentWidth,\n            }}\n          >\n            {option}\n          </Text>\n        </Pressable>\n      ))}\n      <Animated.View style={{ transform: [{ translateX: pan }], zIndex: -1 }}>\n        <View\n          style={{\n            height: height * 0.95,\n            width: compoentWidth - compoentWidth * 0.01,\n            backgroundColor: Colors.white,\n            top: height * 0.025,\n            borderRadius: 20,\n            position: 'absolute',\n            zIndex: -1,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  Marker,\n  Circle,\n} from '@react-google-maps/api';\n\nconst center = {\n  lat: 49.85663823299096,\n  lng: -97.22659526509193,\n};\n\ntype LatLngLiteral = google.maps.LatLngLiteral;\n\nexport default function MapWeb({\n  proximity,\n  onSetSelectedPositionIn,\n  width,\n  height,\n}: {\n  proximity: number;\n  onSetSelectedPositionIn: (item: { lat: number; lng: number }) => void;\n  width: number;\n  height: number;\n}) {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyAltyD_LL0kbe84kyMRxgRmoH74Spi5rvw', // TO DO put this into a loval env\n  });\n  const [selectedPosition, setSelectedPosition] = useState<LatLngLiteral>();\n  const [containerStyle, setContainerStyle] = useState<{\n    width: string;\n    height: string;\n  }>({\n    width: '400px',\n    height: '400px',\n  });\n\n  useEffect(() => {\n    setContainerStyle({\n      width: `${width.toString()}px`,\n      height: `${height.toString()}px`,\n    });\n  }, [width, height]);\n\n  // const [map, setMap] = React.useState(null)\n\n  // const onLoad = React.useCallback(function callback(map) {\n  //   // This is just an example of getting and using the map instance!!! don't just blindly copy!\n  //   const bounds = new window.google.maps.LatLngBounds(center);\n  //   map.fitBounds(bounds);\n\n  //   setMap(map)\n  // }, [])\n\n  // const onUnmount = React.useCallback(function callback(map) {\n  //   setMap(null)\n  // }, [])\n\n  return isLoaded ? (\n    <div style={{ width, height }}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={15}\n        onClick={ev => {\n          onSetSelectedPositionIn({\n            lat: ev.latLng!.lat(),\n            lng: ev.latLng!.lng(),\n          });\n          setSelectedPosition({ lat: ev.latLng!.lat(), lng: ev.latLng!.lng() });\n        }}\n      >\n        {/* Child components, such as markers, info windows, etc. */}\n        {selectedPosition && <Marker position={selectedPosition} />}\n        {selectedPosition && (\n          <Circle center={selectedPosition} radius={proximity} />\n        )}\n      </GoogleMap>\n    </div>\n  ) : (\n    <></>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  PanResponder,\n  Animated,\n  PanResponderGestureState,\n} from 'react-native';\n\ninterface BoxProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  box: {\n    backgroundColor: 'blue',\n    borderRadius: 5,\n    position: 'absolute',\n  },\n});\n\nfunction Box({\n  width,\n  height,\n  value,\n  onValueChange,\n  containerWidth,\n}: BoxProps): React.JSX.Element {\n  const pan = useRef(new Animated.Value(value)).current;\n  const valueRef = useRef({ currentValue: value });\n  const containerWidthRef = useRef({ currentValue: value });\n  const lastValue = useRef({ currentValue: value });\n  useEffect(() => {\n    containerWidthRef.current.currentValue = containerWidth;\n  }, [containerWidth]);\n  useEffect(() => {\n    valueRef.current.currentValue = value;\n  }, [value]);\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderMove: (\n        evt: unknown,\n        gestureState: PanResponderGestureState,\n      ) => {\n        const { dx } = gestureState;\n        const valueRead = valueRef.current.currentValue;\n        let adding =\n          lastValue.current.currentValue > 0\n            ? dx - lastValue.current.currentValue\n            : dx + lastValue.current.currentValue;\n        adding /= width - height / 2;\n        lastValue.current.currentValue = dx;\n        const newValue = valueRead + adding;\n\n        if (newValue <= 1 && newValue >= 0) {\n          valueRef.current.currentValue = newValue;\n          onValueChange(newValue);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: newValue * width });\n        } else if (newValue < 0) {\n          valueRef.current.currentValue = 0;\n          onValueChange(0);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: 0 });\n        } else if (newValue > 1) {\n          valueRef.current.currentValue = 1;\n          onValueChange(1);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: width - height / 2 });\n        }\n      },\n      onPanResponderRelease: () => {\n        pan.setValue(valueRef.current.currentValue * width);\n        lastValue.current.currentValue = 0;\n      },\n    }),\n  ).current;\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            width: height / 2,\n            height: height / 2,\n            transform: [{ translateX: pan }],\n          },\n        ]}\n        {...panResponder.panHandlers}\n      />\n    </View>\n  );\n};\n\ninterface SliderProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number; // This is the width of the screen\n}\n\nexport default function Slider({\n  width,\n  height,\n  value,\n  onValueChange,\n  containerWidth,\n}: SliderProps) {\n  return (\n    <View\n      style={{\n        width,\n        height,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          width,\n          height: height > 10 ? height : 10,\n          backgroundColor: 'black',\n        }}\n      >\n        <Box\n          width={width}\n          height={height}\n          value={value}\n          onValueChange={onValueChange}\n          containerWidth={containerWidth}\n        />\n      </View>\n    </View>\n  );\n}\n","import { loadingStateEnum, dataContentTypeOptions } from '../../types';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function getFileWithShareID(\n  shareID: string,\n  index: number,\n): Promise<\n  | {\n      result: loadingStateEnum.failed;\n    }\n  | {\n      result: loadingStateEnum.success;\n      index: number;\n      url?: string;\n      contentType?: dataContentTypeOptions;\n    }\n> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/shares/${shareID}/driveItem`,\n    'GET',\n    undefined,\n    [{ key: 'Prefer', value: 'redeemSharingLink' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (\n      data['@microsoft.graph.downloadUrl'] !== undefined &&\n      data['@microsoft.graph.downloadUrl'] !== null\n    ) {\n      if (data.file.mimeType.slice(0, 5) === 'image') {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.image,\n          index,\n        };\n      }\n      if (data.file.mimeType === 'video/mp4') {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.video,\n          index,\n        };\n      }\n      if (\n        data.file.mimeType ===\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n      ) {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.pdf,\n          index,\n        };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import store from '../../Redux/store';\nimport { commissionTypeEnum, loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function updateCommission(\n  isCreating: boolean,\n  commissionName: string,\n  isTimed: boolean,\n  points: number,\n  isHidden: boolean,\n  maxNumberOfClaims: number,\n  allowMultipleSubmissions: boolean,\n  selectedCommissionType: number,\n  selectedPostId: string,\n  selectedTeamId: string,\n  selectedChannelId: string,\n  startDate: Date,\n  endDate: Date,\n  commissionId: string,\n  proximity: number,\n  selectedPositionIn: { lat: number; lng: number },\n  commissionItemId: string,\n): Promise<loadingStateEnum> {\n  const data: any = {\n    fields: {\n      // All Commissions\n      Title: commissionName,\n      timed: isTimed,\n      points,\n      hidden: isHidden,\n      maxNumberOfClaims,\n      allowMultipleSubmissions,\n      commissionID: commissionId,\n      value: selectedCommissionType + 1,\n    },\n  };\n  if (selectedPostId !== '') {\n    data.fields.postTeamId = selectedTeamId;\n    data.fields.postChannelId = selectedChannelId;\n    data.fields.postId = selectedPostId;\n  }\n  if (isTimed) {\n    data.fields.startDate = startDate.toISOString().replace(/.\\d+Z$/g, 'Z');\n    data.fields.endDate = endDate.toISOString().replace(/.\\d+Z$/g, 'Z');\n  }\n  if (\n    selectedCommissionType === commissionTypeEnum.Location ||\n    selectedCommissionType === commissionTypeEnum.ImageLocation\n  ) {\n    data.fields.proximity = proximity;\n    data.fields.coordinateLat = selectedPositionIn.lat;\n    data.fields.coordinateLng = selectedPositionIn.lng;\n  }\n  if (selectedCommissionType === commissionTypeEnum.QRCode) {\n    data.fields.qrCodeData = '[]';\n  }\n\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.commissionListId}/items${\n      !isCreating ? `/${commissionItemId}` : ''\n    }`,\n    isCreating ? 'POST' : 'PATCH',\n    JSON.stringify(data),\n  );\n  if (result.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  ScrollView,\n  Pressable,\n  Switch,\n  Image,\n} from 'react-native';\nimport { useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { DatePickerModal, TimePickerModal } from 'react-native-paper-dates';\nimport store, { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  commissionTypeEnum,\n  loadingStateEnum,\n  submissionTypeEnum,\n} from '../../../../types';\nimport SegmentedPicker from '../../../../UI/Pickers/SegmentedPicker';\nimport ProgressView from '../../../../UI/ProgressView';\nimport WebViewCross from '../../../../UI/WebViewCross';\nimport { CloseIcon } from '../../../../UI/Icons/Icons';\nimport MapWeb from '../../../../UI/Map/Map.web';\nimport Slider from '../../../../UI/Slider';\nimport BackButton from '../../../../UI/BackButton';\nimport {\n  getChannels,\n  getPosts,\n  getTeams,\n} from '../../../../Functions/microsoftGroupsFunctions';\nimport getCommission from '../../../../Functions/commissions/getCommission';\nimport getSubmissions from '../../../../Functions/commissions/getSubmissions';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID, {\n  getTextState,\n} from '../../../../Functions/ultility/createUUID';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\nimport updateCommission from '../../../../Functions/commissions/updateCommission';\n\nenum datePickingMode {\n  none,\n  startTime,\n  endTime,\n  startDate,\n  endDate,\n}\n\nexport default function GovernmentEditCommission() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { commissionListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n\n  const [submitCommissionState, setSubmitCommissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const [selectedCommissionType, setSelectedCommissionType] =\n    useState<commissionTypeEnum>(commissionTypeEnum.Issued);\n\n  const [commissionName, setCommissionName] = useState<string>('');\n  const [proximity, setProximity] = useState<number>(0);\n  const [points, setPoints] = useState<number>(0);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n\n  const [currentDatePickingMode, setCurrentDatePickingMode] =\n    useState<datePickingMode>(datePickingMode.none);\n\n  const [selectedPositionIn, setSelectedPositionIn] = useState<{\n    lat: number;\n    lng: number;\n  }>({ lat: 49.85663823299096, lng: -97.22659526509193 });\n  const [maxNumberOfClaims, setMaxNumberOfClaims] = useState<number>(1);\n  const [allowMultipleSubmissions, setAllowMultipleSubmissions] =\n    useState<boolean>(false);\n  const [isTimed, setIsTimed] = useState<boolean>(true);\n\n  const [commissionItemId, setCommissionItemId] = useState<string>('');\n\n  const [getCommissionResult, setGetCommissionResult] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [deleteCommissionResult, setDeleteCommissionResult] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [selectedTeamId, setSelectedTeamId] = useState<string>('');\n  const [selectedChannelId, setSelectedChannelId] = useState<string>('');\n  const [selectedPostId, setSelectedPostId] = useState<string>('');\n\n  const [isCreating, setIsCreating] = useState<boolean>(false);\n\n  const { id } = useParams();\n\n  async function loadData() {\n    if (id !== undefined) {\n      const result = await getCommission(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        // TO DO add all values\n        setCommissionItemId(result.data.itemId);\n        setCommissionName(result.data.title);\n        setAllowMultipleSubmissions(result.data.allowMultipleSubmissions);\n        setIsHidden(result.data.hidden);\n        setMaxNumberOfClaims(result.data.maxNumberOfClaims);\n        setIsTimed(result.data.timed);\n        setPoints(result.data.points);\n      }\n      setGetCommissionResult(result.result);\n    }\n  }\n  async function deleteCommission() {\n    if (\n      commissionItemId === '' ||\n      deleteCommissionResult === loadingStateEnum.loading ||\n      deleteCommissionResult === loadingStateEnum.success\n    ) {\n      return;\n    }\n    setDeleteCommissionResult(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${commissionListId}/items/${commissionItemId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n      const deleteList = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}`,\n        'DELETE',\n      );\n      if (deleteList.ok) {\n        setDeleteCommissionResult(loadingStateEnum.success);\n      } else {\n        setDeleteCommissionResult(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteCommissionResult(loadingStateEnum.failed);\n    }\n  }\n  useEffect(() => {\n    if (id !== 'create') {\n      loadData();\n    } else {\n      setIsCreating(true);\n    }\n  }, []);\n\n  async function loadUpdateCommission() {\n    if (\n      (submitCommissionState === loadingStateEnum.failed ||\n        submitCommissionState === loadingStateEnum.notStarted) &&\n      id !== undefined\n    ) {\n      setSubmitCommissionState(loadingStateEnum.loading);\n      const result = await updateCommission(\n        isCreating,\n        commissionName,\n        isTimed,\n        points,\n        isHidden,\n        maxNumberOfClaims,\n        allowMultipleSubmissions,\n        selectedCommissionType,\n        selectedPostId,\n        selectedTeamId,\n        selectedChannelId,\n        startDate,\n        endDate,\n        id !== 'create' ? id : createUUID(),\n        proximity,\n        selectedPositionIn,\n        commissionItemId,\n      );\n      setSubmitCommissionState(result);\n    }\n  }\n\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        width,\n        height,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <ScrollView style={{ height, width, zIndex: 1 }}>\n        <BackButton to=\"/profile/government/commissions\" />\n        <View\n          style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>{isCreating ? 'Create New' : 'Edit'} Commission</Text>\n        </View>\n        <View\n          style={{\n            width,\n            height: height * 0.15,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <SegmentedPicker\n            selectedIndex={selectedCommissionType}\n            setSelectedIndex={setSelectedCommissionType}\n            options={[\n              'Issued',\n              'Location',\n              'Image',\n              'Image and Location',\n              'QRCode',\n            ]}\n            width={width * 0.8}\n            height={height * 0.1}\n          />\n        </View>\n        <Text>Commission Name</Text>\n        <TextInput\n          value={commissionName}\n          onChangeText={text => setCommissionName(text)}\n          placeholder=\"Commission Name\"\n        />\n        {selectedCommissionType === commissionTypeEnum.ImageLocation ||\n        selectedCommissionType === commissionTypeEnum.Location ? (\n          <View>\n            <View\n              style={{\n                width,\n                height: height * 0.3,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <MapWeb\n                proximity={proximity}\n                selectedPositionIn={selectedPositionIn}\n                onSetSelectedPositionIn={setSelectedPositionIn}\n                width={width * 0.8}\n                height={height * 0.3}\n              />\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Proximity</Text>\n              <TextInput\n                keyboardType=\"numeric\"\n                onChangeText={text => setProximity(parseFloat(text))}\n                value={proximity.toString()}\n                maxLength={10} // setting limit of input\n              />\n            </View>\n            <View\n              style={{\n                width,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Slider\n                width={width * 0.9}\n                height={50}\n                value={proximity / 1000}\n                onValueChange={value => {\n                  setProximity(value * 1000);\n                }}\n                containerWidth={width}\n              />\n            </View>\n          </View>\n        ) : null}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Timed: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isTimed ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setIsTimed(e);\n            }}\n            value={isTimed}\n          />\n        </View>\n        {isTimed ? (\n          <View>\n            <View\n              style={{\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width,\n              }}\n            >\n              <Text>Start Date</Text>\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.startDate);\n                }}\n              >\n                <Text>Pick Start Time</Text>\n              </Pressable>\n              <TimePickerModal\n                hours={new Date(startDate).getHours()}\n                minutes={new Date(startDate).getMinutes()}\n                visible={currentDatePickingMode === datePickingMode.startDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                onConfirm={e => {\n                  const newDate = new Date(startDate);\n                  newDate.setHours(e.hours);\n                  newDate.setMinutes(e.minutes);\n                  setStartDate(newDate);\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.startDate);\n                }}\n              >\n                <Text>Pick Start Date</Text>\n              </Pressable>\n              <DatePickerModal\n                locale=\"en\"\n                mode=\"single\"\n                label=\"Select Date\"\n                visible={currentDatePickingMode === datePickingMode.startDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                date={new Date(endDate)}\n                onConfirm={e => {\n                  if (e.date !== undefined) {\n                    const oldDate = new Date(endDate);\n                    const newDate = new Date(\n                      e.date.getFullYear(),\n                      e.date.getMonth(),\n                      e.date.getDate(),\n                      oldDate.getHours(),\n                      oldDate.getMinutes(),\n                    );\n                    setStartDate(newDate);\n                  }\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n            </View>\n            <View\n              style={{\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width,\n              }}\n            >\n              <Text>End Date</Text>\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.endDate);\n                }}\n              >\n                <Text>Pick End Time</Text>\n              </Pressable>\n              <TimePickerModal\n                hours={new Date(endDate).getHours()}\n                minutes={new Date(endDate).getMinutes()}\n                visible={currentDatePickingMode === datePickingMode.endTime}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                onConfirm={e => {\n                  const newDate = new Date(startDate);\n                  newDate.setHours(e.hours);\n                  newDate.setMinutes(e.minutes);\n                  setEndDate(newDate);\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.endDate);\n                }}\n              >\n                <Text>Pick End Date</Text>\n              </Pressable>\n              <DatePickerModal\n                locale=\"en\"\n                mode=\"single\"\n                label=\"Select Date\"\n                visible={currentDatePickingMode === datePickingMode.endDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                date={new Date(endDate)}\n                onConfirm={e => {\n                  if (e.date !== undefined) {\n                    const oldDate = new Date(endDate);\n                    const newDate = new Date(\n                      e.date.getFullYear(),\n                      e.date.getMonth(),\n                      e.date.getDate(),\n                      oldDate.getHours(),\n                      oldDate.getMinutes(),\n                    );\n                    setEndDate(newDate);\n                  }\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n            </View>\n          </View>\n        ) : null}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Points: </Text>\n          <TextInput\n            keyboardType=\"numeric\"\n            onChangeText={text => {\n              if (text === '') {\n                setPoints(0);\n              } else {\n                setPoints(parseFloat(text));\n              }\n            }}\n            value={points.toString()}\n            maxLength={10} // setting limit of input\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Allow Multiple Submissions: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={allowMultipleSubmissions ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setAllowMultipleSubmissions(e);\n            }}\n            value={allowMultipleSubmissions}\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Is Hidden: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isHidden ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setIsHidden(e);\n            }}\n            value={isHidden}\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Max number of claims: </Text>\n          <TextInput\n            value={maxNumberOfClaims.toString()}\n            onChangeText={e => {\n              if (e !== '') {\n                setMaxNumberOfClaims(parseFloat(e));\n              } else {\n                setMaxNumberOfClaims(0);\n              }\n            }}\n            inputMode=\"numeric\"\n          />\n        </View>\n        <Text>Post</Text>\n        <PostSelectionContainer\n          width={width}\n          height={height * 0.4}\n          selectedTeamId={selectedTeamId}\n          selectedPostId={selectedPostId}\n          setSelectedTeamId={setSelectedTeamId}\n          selectedChannelId={selectedChannelId}\n          setSelectedChannelId={setSelectedChannelId}\n          setSelectedPostId={setSelectedPostId}\n        />\n        {!isCreating && id !== undefined ? (\n          <View\n            style={{ marginTop: 10, marginBottom: 10, height: height * 0.5 }}\n          >\n            <CommissionSubmissions\n              commissionId={id}\n              width={width}\n              height={height * 0.5}\n            />\n          </View>\n        ) : null}\n        <Pressable\n          onPress={() => {\n            loadUpdateCommission();\n          }}\n        >\n          <Text>\n            {submitCommissionState === loadingStateEnum.notStarted\n              ? isCreating\n                ? 'Create Commission'\n                : 'Save Changes'\n              : submitCommissionState === loadingStateEnum.loading\n              ? 'Loading'\n              : submitCommissionState === loadingStateEnum.success\n              ? 'Success'\n              : 'Failed'}\n          </Text>\n        </Pressable>\n        {!isCreating ? (\n          <Pressable\n            onPress={() => {\n              deleteCommission();\n            }}\n          >\n            <Text>\n              {getTextState(deleteCommissionResult, {\n                notStarted: 'Delete Commission',\n                success: 'Deleted Commission',\n                failed: 'Failed To Delete Commission',\n              })}\n            </Text>\n          </Pressable>\n        ) : null}\n      </ScrollView>\n\n      {/* <View style={{height: height * 0.8, width: width * 0.8, position: \"absolute\", left: width * 0.1, top: height * 0.1, zIndex: 2, backgroundColor: (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? Colors.white:\"transparent\", borderRadius: 15, shadowColor: (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? \"black\":\"transparent\", shadowOffset: { width: 0, height: 1 }, shadowOpacity: 0.8, shadowRadius: 10, alignItems: \"center\", justifyContent: \"center\", alignContent: \"center\"}} pointerEvents={(currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? 'auto':'none'}>\n        { (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ?\n          <DatePicker \n            selectedDate={(currentDatePickingMode === datePickingMode.start) ? startDate:endDate} \n            onSetSelectedDate={(date) => {if (currentDatePickingMode === datePickingMode.end) {setEndDate(date)} else if (currentDatePickingMode === datePickingMode.start) {setStartDate(date)}}}\n            width={width * 0.7} height={height * 0.7} onCancel={() => {setCurrentDatePickingMode(datePickingMode.none)}}\n          />:null\n        }\n      </View> */}\n    </View>\n  );\n}\n\nenum postPickingMode {\n  team,\n  channel,\n  post,\n}\n\nfunction PostSelectionContainer({\n  width,\n  height,\n  selectedChannelId,\n  selectedTeamId,\n  selectedPostId,\n  setSelectedChannelId,\n  setSelectedPostId,\n  setSelectedTeamId,\n}: {\n  width: number;\n  height: number;\n  selectedTeamId: string;\n  selectedPostId: string;\n  setSelectedTeamId: (item: string) => void;\n  selectedChannelId: string;\n  setSelectedChannelId: (item: string) => void;\n  setSelectedPostId: (item: string) => void;\n}) {\n  const [currentPostPickingMode, setCurrentPostPickingMode] =\n    useState<postPickingMode>(postPickingMode.team);\n  return (\n    <>\n      {currentPostPickingMode === postPickingMode.team ? (\n        <GroupSelection\n          width={width}\n          height={height}\n          onSelect={e => {\n            setSelectedTeamId(e);\n            setCurrentPostPickingMode(postPickingMode.channel);\n          }}\n        />\n      ) : null}\n      {currentPostPickingMode === postPickingMode.channel ? (\n        <ChannelSelection\n          width={width}\n          height={height}\n          teamId={selectedTeamId}\n          onSelect={e => {\n            setSelectedChannelId(e);\n            setCurrentPostPickingMode(postPickingMode.post);\n          }}\n          onBack={() => {\n            setSelectedChannelId('');\n            setSelectedTeamId('');\n            setCurrentPostPickingMode(postPickingMode.team);\n          }}\n        />\n      ) : null}\n      {currentPostPickingMode === postPickingMode.post ? (\n        <PostSelection\n          width={width}\n          height={height}\n          teamId={selectedTeamId}\n          channelId={selectedChannelId}\n          selectedPostId={selectedPostId}\n          onSelect={setSelectedPostId}\n          onBack={() => {\n            setSelectedPostId('');\n            setSelectedChannelId('');\n            setCurrentPostPickingMode(postPickingMode.channel);\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction GroupSelection({\n  width,\n  height,\n  onSelect,\n}: {\n  width: number;\n  height: number;\n  onSelect: (item: string) => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [groupsState, setGroupsState] = useState(loadingStateEnum.loading);\n  const [groups, setGroups] = useState<groupType[]>([]);\n  async function loadData() {\n    const result = await getTeams();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setGroups(result.data);\n    }\n    setGroupsState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {groupsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {groupsState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              {groups.map(group => (\n                <Pressable\n                  key={`Group_${group.id}`}\n                  onPress={() => {\n                    onSelect(group.id);\n                  }}\n                >\n                  <Text>{group.name}</Text>\n                </Pressable>\n              ))}\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Groups</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction ChannelSelection({\n  width,\n  height,\n  teamId,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  teamId: string;\n  onSelect: (item: string) => void;\n  onBack: () => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [channelState, setChannelState] = useState(loadingStateEnum.loading);\n  const [channels, setChannels] = useState<channelType[]>([]);\n  async function loadData() {\n    const result = await getChannels(teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setChannels(result.data);\n    }\n    setChannelState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {channelState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {channelState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              <Pressable onPress={() => onBack()}>\n                <Text>Back</Text>\n              </Pressable>\n              {channels.map(channel => (\n                <Pressable\n                  key={`Channel_${channel.id}`}\n                  onPress={() => {\n                    onSelect(channel.id);\n                  }}\n                  style={{ width, alignItems: 'center' }}\n                >\n                  <Text>{channel.displayName}</Text>\n                </Pressable>\n              ))}\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Channels</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PostSelection({\n  width,\n  height,\n  teamId,\n  channelId,\n  selectedPostId,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  teamId: string;\n  channelId: string;\n  selectedPostId: string;\n  onSelect: (item: string) => void;\n  onBack: () => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [postsState, setPostsState] = useState(loadingStateEnum.loading);\n  const [posts, setPosts] = useState<resourceDataType[]>([]);\n  async function loadData() {\n    const result = await getPosts(teamId, channelId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setPosts(result.data);\n    }\n    setPostsState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {postsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {postsState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              <Pressable onPress={() => onBack()}>\n                <Text>Back</Text>\n              </Pressable>\n              <FlatList\n                data={posts}\n                renderItem={post => (\n                  <>\n                    {post.item.body !== '<systemEventMessage/>' ? (\n                      <Pressable\n                        key={`Post_${post.item.id}`}\n                        onPress={() => {\n                          onSelect(post.item.id);\n                        }}\n                        style={{\n                          padding: 5,\n                          margin: 5,\n                          backgroundColor:\n                            selectedPostId === post.item.id\n                              ? Colors.lightGray\n                              : Colors.white,\n                        }}\n                      >\n                        <WebViewCross\n                          html={post.item.body}\n                          width={width * 0.9}\n                        />\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              />\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Posts</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction CommissionSubmissions({\n  commissionId,\n  width,\n  height,\n}: {\n  commissionId: string;\n  width: number;\n  height: number;\n}) {\n  // Loading State\n  const [submissiosState, setSubmissionsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const [submissions, setSubmissions] = useState<submissionType[]>([]);\n  const [selectedSubmissionMode, setSelectedSubmissionMode] =\n    useState<submissionTypeEnum>(submissionTypeEnum.unApproved);\n\n  const [selectedSubmission, setSelectedSubmisson] = useState<\n    submissionType | undefined\n  >(undefined);\n\n  async function loadData() {\n    setSubmissionsState(loadingStateEnum.loading);\n    const result = await getSubmissions(commissionId, selectedSubmissionMode);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSubmissions(result.data);\n      setSubmissionsState(result.result);\n      if (result.count === 0) {\n        const secondResult = await getSubmissions(\n          commissionId,\n          submissionTypeEnum.unApproved,\n        );\n        if (\n          secondResult.result === loadingStateEnum.success &&\n          secondResult.data !== undefined\n        ) {\n          setSubmissions(result.data);\n          setSubmissionsState(secondResult.result);\n        }\n      }\n    } else {\n      setSubmissionsState(result.result);\n    }\n  }\n  useEffect(() => {\n    loadData();\n  }, [selectedSubmissionMode]);\n  return (\n    <>\n      {submissiosState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {submissiosState === loadingStateEnum.success ? (\n            <View style={{ width, height }}>\n              <View style={{ flexDirection: 'row' }}>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.all)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>All</Text>\n                </Pressable>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.unApproved)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>Unapproved</Text>\n                </Pressable>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.approved)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>Approved</Text>\n                </Pressable>\n              </View>\n              <FlatList\n                data={submissions}\n                renderItem={submission => (\n                  <Pressable\n                    style={{ margin: 10 }}\n                    onPress={() => setSelectedSubmisson(submission.item)}\n                  >\n                    <Text>{submission.item.userName}</Text>\n                    <Text>\n                      {new Date(\n                        submission.item.submissionTime,\n                      ).toLocaleDateString('en-US', {\n                        weekday: 'long',\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                        hour: 'numeric',\n                        minute: 'numeric',\n                        second: 'numeric',\n                      })}\n                    </Text>\n                  </Pressable>\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Failed To Load Submissions</Text>\n            </View>\n          )}\n        </>\n      )}\n      {selectedSubmission !== undefined ? (\n        <SubmissionView\n          width={width}\n          height={height}\n          setSubmissionData={() => {}}\n          submissionData={selectedSubmission}\n          onClose={() => setSelectedSubmisson(undefined)}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction SubmissionView({\n  width,\n  height,\n  submissionData,\n  onClose,\n  setSubmissionData,\n}: {\n  width: number;\n  height: number;\n  submissionData: submissionType;\n  onClose: () => void;\n  setSubmissionData: (item: submissionType) => void;\n}) {\n  const [changeState, setChangeState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [imageState, setImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [imageUri, setImageUri] = useState<string>('');\n  const [imgHeight, setImgHeight] = useState<number>(0);\n\n  async function changeSubmissionApproved() {\n    setChangeState(loadingStateEnum.loading);\n    const data = {\n      fields: {\n        submissionApproved: !submissionData.approved,\n        submissionReviewed: true,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.commissionSubmissionsListId}/items/${\n        submissionData.itemId\n      }`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      setChangeState(loadingStateEnum.success);\n    } else {\n      setChangeState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadImage() {\n    if (submissionData.submissionImage !== undefined) {\n      setImageState(loadingStateEnum.loading);\n      const shareResult = await getFileWithShareID(\n        submissionData.submissionImage,\n        0,\n      );\n      if (\n        shareResult.result === loadingStateEnum.success &&\n        shareResult.url !== undefined\n      ) {\n        setImageUri(shareResult.url);\n        setImageState(shareResult.result);\n        Image.getSize(\n          shareResult.url,\n          (imageMeasureWidth, imageMeasureHeight) => {\n            const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n            setImgHeight(width * 0.7 * heightPerWidth);\n          },\n        );\n      }\n      setImageState(shareResult.result);\n    }\n  }\n\n  useEffect(() => {\n    loadImage();\n  }, []);\n\n  return (\n    <View\n      style={{\n        width: width * 0.8,\n        height: height * 0.8,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n        position: 'absolute',\n        left: width * 0.1,\n        top: height * 0.1,\n        zIndex: 2,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Pressable onPress={() => onClose()} style={{ margin: 10 }}>\n        <CloseIcon width={12} height={12} />\n      </Pressable>\n      <View\n        style={{\n          width: width * 0.8,\n          alignContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text>Submission</Text>\n        <Text>By: {submissionData.userName}</Text>\n        <Text>\n          Time:{' '}\n          {new Date(submissionData.submissionTime).toLocaleDateString('en-US', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n          })}\n        </Text>\n        <Text>Approved: {submissionData.approved ? 'TURE' : 'FALSE'}</Text>\n        <Text>Reviewed: {submissionData.reviewed ? 'TRUE' : 'FALSE'}</Text>\n        <Text>Id: {submissionData.id}</Text>\n        {submissionData.submissionImage ? (\n          <>\n            {imageState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width: width * 0.8,\n                  height: height * 0.8,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={\n                    width * 0.8 < height * 0.8 ? width * 0.3 : height * 0.3\n                  }\n                  height={\n                    width * 0.8 < height * 0.8 ? width * 0.3 : height * 0.3\n                  }\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {imageState === loadingStateEnum.success ? (\n                  <Image\n                    source={{ uri: imageUri }}\n                    width={width * 0.7}\n                    resizeMode=\"center\"\n                    style={{\n                      width: width * 0.7,\n                      height: imgHeight,\n                      marginLeft: 'auto',\n                      marginRight: 'auto',\n                      alignContent: 'center',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      backgroundColor: '#FFFFFF',\n                      shadowOffset: { width: 0, height: 1 },\n                      shadowOpacity: 0.8,\n                      shadowRadius: 10,\n                      borderRadius: 15,\n                    }}\n                  />\n                ) : (\n                  <Text>Failed to load image</Text>\n                )}\n              </>\n            )}\n          </>\n        ) : null}\n      </View>\n      <Pressable onPress={() => changeSubmissionApproved()}>\n        <Text>\n          {changeState === loadingStateEnum.notStarted\n            ? submissionData.approved\n              ? 'REMOVE APPROVAL'\n              : 'APPROVE'\n            : changeState === loadingStateEnum.loading\n            ? 'Loading'\n            : changeState === loadingStateEnum.success\n            ? 'Success'\n            : 'Failed'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport {\n  dataContentTypeOptions,\n  loadingStateEnum,\n  postType,\n} from '../../types';\nimport batchRequest from '../ultility/batchRequest';\nimport getFileWithShareID from '../ultility/getFileWithShareID';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport async function getSports(): Promise<{\n  result: loadingStateEnum;\n  data?: sportType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsListId\n    }/items?expand=fields($select=sportName,sportId,sportSvg)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const resultData: sportType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          name: data.value[index].fields.sportName,\n          id: data.value[index].fields.sportId,\n          svgData: data.value[index].fields.sportSvg,\n        });\n      }\n      return { result: loadingStateEnum.success, data: resultData };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSportsTeams(\n  sportId: string,\n): Promise<{ result: loadingStateEnum; data?: sportTeamType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${sportId}/items?expand=fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const resultData: sportTeamType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          teamName: data.value[index].fields.teamName,\n          season: data.value[index].fields.season,\n          teamId: data.value[index].fields.teamId,\n        });\n      }\n      return { result: loadingStateEnum.success, data: resultData };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSport(\n  id: string,\n): Promise<{ result: loadingStateEnum; data?: sportType; listId?: string }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsListId\n    }/items?$expand=fields&$filter=fields/sportId%20eq%20'${id}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length === 1) {\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.sportName,\n          id: data.value[0].fields.sportId,\n          svgData: data.value[0].fields.sportSvg,\n        },\n        listId: data.value[0].fields.id,\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// Andrew Mainella\n// October 7 2023\n// Pauly get submissions for sports\nexport default async function getSubmissions(): Promise<{\n  result: loadingStateEnum;\n  data?: mediaSubmissionType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsSubmissionsListId\n    }/items?expand=fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newMediaSubmissions: mediaSubmissionType[] = [];\n    if (data.value !== undefined) {\n      for (let index = 0; index < data.value.length; index += 1) {\n        newMediaSubmissions.push({\n          Title: data.value[index].fields.Title,\n          user: data.value[index].fields.User,\n          submissionId: data.value[index].fields.submissionId,\n          accepted: data.value[index].fields.accepted,\n          fileId: data.value[index].fields.fileId,\n          itemID: data.value[index].id,\n          selectedSportId: data.value[index].fields.selectedSportId,\n          selectedTeamId: data.value[index].fields.selectedTeamId,\n          reviewed: data.value[index].fields.reviewed,\n          fileType: data.value[index].fields.fileType,\n        });\n      }\n      return { result: loadingStateEnum.success, data: newMediaSubmissions };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSportsContent(\n  team?: string,\n): Promise<{ result: loadingStateEnum; sports?: sportPost[] }> {\n  const filter = team ? `&$filter=fields/selectedTeamId%20eq%20'${team}'` : '';\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsApprovedSubmissionsListId\n    }/items?expand=fields($select=fileId,caption,selectedSportId,selectedTeamId,fileType)${filter}&$select=id`,\n  );\n  if (result.ok) {\n    const dataResult = await result.json();\n    if (dataResult.value.length !== undefined) {\n      const newSportsPosts: sportPost[] = [];\n      const shareResultsPromise: Promise<\n        | {\n            result: loadingStateEnum.success;\n            index: number;\n            url?: string | undefined;\n            contentType?: dataContentTypeOptions | undefined;\n          }\n        | { result: loadingStateEnum.failed }\n      >[] = [];\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        if (\n          dataResult.value[index].fields.fileType === postType.microsoftFile\n        ) {\n          shareResultsPromise.push(\n            getFileWithShareID(dataResult.value[index].fields.fileId, index),\n          );\n        }\n      }\n      const shareResults: (\n        | {\n            result: loadingStateEnum.success;\n            index: number;\n            url?: string | undefined;\n            contentType?: dataContentTypeOptions | undefined;\n          }\n        | { result: loadingStateEnum.failed }\n      )[] = await Promise.all(shareResultsPromise);\n\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        const item = shareResults.find(e => {\n          if (e.result === loadingStateEnum.success) {\n            return e.index === index;\n          }\n          return false;\n        });\n        if (item !== undefined) {\n          if (item.result === loadingStateEnum.success) {\n            const fileType = item.contentType;\n            if (\n              shareResults[index].result === loadingStateEnum.success &&\n              fileType !== undefined &&\n              item.url !== undefined\n            ) {\n              newSportsPosts.push({\n                caption: dataResult.value[index].fields.caption,\n                data: {\n                  fileId: item.url,\n                  fileType,\n                  postType: postType.microsoftFile,\n                },\n              });\n            } else {\n              return { result: loadingStateEnum.failed };\n            }\n          }\n        } else if (\n          dataResult.value[index].fields.fileType === postType.youtubeVideo\n        ) {\n          newSportsPosts.push({\n            caption: dataResult.value[index].fields.caption,\n            data: {\n              fileId: dataResult.value[index].fields.fileId,\n              postType: postType.youtubeVideo,\n            },\n          });\n        }\n      }\n      return { result: loadingStateEnum.success, sports: newSportsPosts };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  const data = await result.json();\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getRoster(\n  teamId: string,\n): Promise<{ result: loadingStateEnum; data?: rosterType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${teamId}/items?$expand=fields($select=playerId,position,playerNumber,posts,imageShareId)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const batchData: { id: string; method: 'GET' | 'POST'; url: string }[][] =\n      [];\n    let batchIndex = -1;\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (index % 20 === 0) {\n        batchIndex += 1;\n        batchData.push([]);\n      }\n      batchData[batchIndex].push({\n        id: (index + 1 - 20 * batchIndex).toString(),\n        method: 'GET',\n        url: `/users/${data.value[index].fields.playerId}`,\n      });\n    }\n    const batchResult = await batchRequest(batchData);\n    if (\n      batchResult.result === loadingStateEnum.success &&\n      batchResult.data !== undefined\n    ) {\n      const outUsers: microsoftUserType[] = [];\n      for (let index = 0; index < batchResult.data.length; index += 1) {\n        if (batchResult.data[index].status === 200) {\n          // TO DO check okay response code\n          outUsers.push({\n            id: batchResult.data[index].body?.id,\n            displayName: batchResult.data[index].body?.displayName,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      const outputRosters: rosterType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        const userData = outUsers.find(e => {\n          return e.id === data.value[index].fields.playerId;\n        });\n        if (userData !== undefined) {\n          outputRosters.push({\n            name: userData.displayName,\n            id: data.value[index].fields.playerId,\n            imageShareId: data.value[index].fields.imageShareId,\n            position: data.value[index].fields.position,\n            playerNumber: data.value[index].fields.playerNumber,\n            posts:\n              data.value[index].fields.posts !== undefined\n                ? JSON.parse(data.value[index].fields.posts)\n                : undefined,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      return { result: loadingStateEnum.success, data: outputRosters };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View } from 'react-native';\nimport React from 'react';\n\nexport default function SVGXml({\n  xml,\n  height,\n  width,\n}: {\n  xml: string;\n  width: number;\n  height: number;\n}) {\n  return (\n    <View style={{ height, width }}>\n      <div dangerouslySetInnerHTML={{ __html: xml }} />\n    </View>\n  );\n}\n","//https://stackoverflow.com/questions/54017100/how-to-integrate-youtube-iframe-api-in-reactjs-solution\nimport PropTypes from 'prop-types';\nimport React from 'react';\n\nclass YouTubeVideo extends React.PureComponent {\n  static propTypes = {\n    id: PropTypes.string.isRequired,\n    width: PropTypes.number.isRequired,\n    height: PropTypes.number.isRequired,\n  };\n\n  componentDidMount = () => {\n    // On mount, check to see if the API script is already loaded\n\n    if (!window.YT) { // If not, load the script asynchronously\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\n      window.onYouTubeIframeAPIReady = this.loadVideo;\n\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n    } else { // If script is already there, load the video directly\n      this.loadVideo();\n    }\n  };\n\n  loadVideo = () => {\n    const { id } = this.props;\n\n    // the Player object is created uniquely based on the id in props\n    this.player = new window.YT.Player(`youtube-player-${id}`, {\n      videoId: id,\n      height: `100%`,\n      width: `100%`,\n      playerVars: {\n        'playsinline': 1,\n        'loop': 1,\n        'rel':0\n      },\n      events: {\n        onReady: this.onPlayerReady,\n      },\n    });\n  };\n\n  onPlayerReady = event => {\n    event.target.playVideo();\n  };\n\n  render = () => {\n    const { id } = this.props;\n    return (\n      <div id={`youtube-player-${id}`} />\n    );\n  };\n}\n\nexport default YouTubeVideo;","import { View, Platform } from 'react-native';\nimport React from 'react';\nimport WebView from 'react-native-webview';\nimport YoutubeWeb from './youtubeIframeFunction';\n\nexport default function SportsYoutube({\n  videoId,\n  width,\n  height,\n}: {\n  videoId: string;\n  width: number;\n  height?: number | undefined;\n}) {\n  if (Platform.OS === 'web') {\n    return (\n      <View style={{ width, height: height || (width / 16) * 9 }}>\n        <YoutubeWeb\n          id={videoId}\n          width={width}\n          height={height || (width / 16) * 9}\n        />\n      </View>\n    )\n  } else {\n    return (\n      <WebView\n        source={{\n          html: `\n          <!DOCTYPE html>\n          <html>\n            <head>\n              <meta name=\"viewport\" content=\"width=device-width\">\n              <style>\n                body {\n                  margin: 0px;\n                  height: ${height || (width / 16) * 9}px;\n                }\n              </style>\n            </head>\n            <body>\n              <!-- 1. The <iframe> (and video player) will replace this <div> tag. -->\n              <div id=\"player\" className=\"player\"></div>\n          \n              <script>\n                // 2. This code loads the IFrame Player API code asynchronously.\n                var tag = document.createElement('script');\n          \n                tag.src = \"https://www.youtube.com/iframe_api\";\n                var firstScriptTag = document.getElementsByTagName('script')[0];\n                firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n          \n                // 3. This function creates an <iframe> (and YouTube player)\n                //    after the API code downloads.\n                var player;\n                function onYouTubeIframeAPIReady() {\n                  player = new YT.Player('player', {\n                    height: '${height || (width / 16) * 9}',\n                    width: '${width}',\n                    videoId: '${videoId}',\n                    playerVars: {\n                      'playsinline': 1,\n                      'loop': 1,\n                      'rel':0,\n                      'playsinline':1\n                    },\n                    events: {\n                      'onReady': onPlayerReady,\n                      'onStateChange': onPlayerStateChange\n                    }\n                  });\n                }\n          \n                // 4. The API will call this function when the video player is ready.\n                function onPlayerReady(event) {\n                  event.target.playVideo();\n                }\n          \n                // 5. The API calls this function when the player's state changes.\n                //    The function indicates that when playing a video (state=1),\n                //    the player should play for six seconds and then stop.\n                var done = false;\n                function onPlayerStateChange(event) {\n                  if (event.data == YT.PlayerState.PLAYING && !done) {\n                    setTimeout(stopVideo, 6000);\n                    done = true;\n                  }\n                }\n                function stopVideo() {\n                  player.stopVideo();\n                }\n              </script>\n            </body>\n          </html>\n        `,\n        }}\n        style={{\n          width,\n          height: height || (width / 16) * 9,\n          position: 'absolute',\n        }}\n        automaticallyAdjustContentInsets={false}\n        scrollEnabled={false}\n        scalesPageToFit={false}\n        allowsInlineMediaPlayback\n      />\n    )\n  }\n}\n","import { ResizeMode, Video } from 'expo-av';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  ScrollView,\n  Pressable,\n  FlatList,\n  ListRenderItemInfo,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport {\n  getRoster,\n  getSports,\n  getSportsContent,\n  getSportsTeams,\n} from '../Functions/sports/sportsFunctions';\nimport getFileWithShareID from '../Functions/ultility/getFileWithShareID';\nimport SegmentedPicker from '../UI/Pickers/SegmentedPicker';\nimport SVGXml from '../UI/SVGXml/SVGXml';\nimport BackButton from '../UI/BackButton';\nimport ProgressView from '../UI/ProgressView';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n  postType,\n} from '../types';\nimport SportsYoutube from '../UI/SportsYoutube';\n\nexport default function Sports() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [sportsPosts, setSportsPosts] = useState<sportPost[]>([]);\n  const [loadingResult, setLoadingResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [sportsState, setSportsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [teamsState, setTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedSport, setSelectedSport] = useState<sportType | undefined>(\n    undefined,\n  );\n  const [selectedTeam, setSelectedTeam] = useState<sportTeamType | undefined>(\n    undefined,\n  );\n  const [isShowingTeams, setIsShowingTeams] = useState<boolean>(false);\n  const [sports, setSports] = useState<sportType[]>([]);\n  const [isShowingRoster, setIsShowingRoster] = useState<boolean>(false);\n  const [sportsTeams, setSportsTeams] = useState<sportTeamType[]>([]);\n  const dispatch = useDispatch();\n\n  async function loadSports() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSports(result.data);\n    }\n    setSportsState(result.result);\n  }\n\n  async function loadTeams(sport: sportType) {\n    const result = await getSportsTeams(sport.id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSportsTeams(result.data);\n    }\n    setTeamsState(result.result);\n  }\n\n  async function loadSportsContent() {\n    const result = await getSportsContent(selectedTeam?.teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.sports !== undefined\n    ) {\n      setSportsPosts(result.sports);\n    }\n    setLoadingResult(result.result);\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n    loadSports();\n  }, []);\n\n  useEffect(() => {\n    loadSportsContent();\n  }, [selectedTeam]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        backgroundColor: Colors.white,\n        overflow: 'hidden',\n      }}\n    >\n      <View\n        style={{\n          height: height * 0.1,\n          width,\n          backgroundColor: Colors.darkGray,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n        <Text\n          style={{\n            fontFamily: 'BukhariScript',\n            color: 'white',\n            fontSize: height * 0.06,\n          }}\n        >\n          Sports\n        </Text>\n      </View>\n      <ScrollView\n        style={{\n          height: isShowingTeams ? height * 0.1 : 24,\n          width,\n        }}\n        horizontal\n      >\n        <View>\n          {sportsState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height: isShowingTeams ? height * 0.05 : height * 0.1,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView width={15} height={15} />\n            </View>\n          ) : (\n            <>\n              {sportsState === loadingStateEnum.success ? (\n                <View\n                  style={{\n                    flexDirection: 'row',\n                    height: isShowingTeams ? height * 0.05 : 32,\n                  }}\n                >\n                  <Pressable\n                    style={{\n                      backgroundColor: Colors.darkGray,\n                      borderWidth: selectedSport === undefined ? 3 : 0,\n                      borderColor: 'black',\n                      borderRadius: 15,\n                      alignContent: 'center',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      marginLeft: 3,\n                      marginTop: 3,\n                      padding: isShowingTeams ? 5 : 10,\n                      height: isShowingTeams ? 32 : 42,\n                    }}\n                    onPress={() => {\n                      setSelectedTeam(undefined);\n                      setSportsTeams([]);\n                      setSelectedSport(undefined);\n                      setIsShowingRoster(false);\n                      setIsShowingTeams(false);\n                    }}\n                  >\n                    <Text\n                      style={{\n                        color: Colors.white,\n                      }}\n                    >\n                      Highlights\n                    </Text>\n                  </Pressable>\n                  {sports.map(sport => (\n                    <Pressable\n                      key={`SportButton_${sport.id}`}\n                      onPress={() => {\n                        setSelectedSport(sport);\n                        loadTeams(sport);\n                        setIsShowingTeams(true);\n                        setIsShowingRoster(false);\n                      }}\n                      style={{\n                        backgroundColor: Colors.darkGray,\n                        borderWidth: selectedSport?.id === sport.id ? 3 : 0,\n                        borderColor: 'black',\n                        borderRadius: 15,\n                        alignContent: 'center',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                        marginLeft: 3,\n                        marginTop: 3,\n                        height: isShowingTeams ? 32 : 42,\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: 'row',\n                          alignContent: 'center',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          marginLeft: 10,\n                        }}\n                      >\n                        <SVGXml xml={sport.svgData} width={20} height={20} />\n                        <Text\n                          style={{\n                            margin: isShowingTeams ? 5 : 10,\n                            color: Colors.white,\n                            marginBottom:\n                              sport.id === selectedSport?.id &&\n                              selectedTeam !== undefined &&\n                              !isShowingTeams\n                                ? 0\n                                : isShowingTeams\n                                ? 5\n                                : 10,\n                          }}\n                        >\n                          {sport.name}\n                        </Text>\n                        {sport.id === selectedSport?.id &&\n                        selectedTeam !== undefined &&\n                        !isShowingTeams ? (\n                          <View>\n                            <Text\n                              style={{\n                                color: Colors.white,\n                                marginBottom: 5,\n                                marginLeft: 2,\n                                marginRight: 10,\n                              }}\n                            >\n                              {selectedTeam?.teamName}\n                            </Text>\n                          </View>\n                        ) : null}\n                      </View>\n                    </Pressable>\n                  ))}\n                </View>\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n          {isShowingTeams ? (\n            <View style={{ flexDirection: 'row' }}>\n              {sportsState === loadingStateEnum.loading ? (\n                <View\n                  style={{\n                    width,\n                    height: height * 0.05,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <ProgressView width={15} height={15} />\n                </View>\n              ) : (\n                <>\n                  {sportsState === loadingStateEnum.success ? (\n                    <>\n                      {sportsTeams.map(team => (\n                        <Pressable\n                          key={`SportTeam_${team.teamId}`}\n                          onPress={() => {\n                            setSelectedTeam(team);\n                            setIsShowingTeams(false);\n                            setIsShowingRoster(false);\n                          }}\n                          style={{\n                            backgroundColor: Colors.darkGray,\n                            borderRadius: 15,\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            marginLeft: 3,\n                            marginTop: 3,\n                          }}\n                        >\n                          <Text style={{ margin: 5, color: Colors.white }}>\n                            {team.teamName}\n                          </Text>\n                        </Pressable>\n                      ))}\n                    </>\n                  ) : (\n                    <Text>Failed to load Sports</Text>\n                  )}\n                </>\n              )}\n            </View>\n          ) : null}\n        </View>\n      </ScrollView>\n      {loadingResult === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height: height * 0.8 + (isShowingTeams ? 0 : height * 0.1 - 34),\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.25 : height * 0.25}\n            height={width < height ? width * 0.5 : height * 0.5}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingResult === loadingStateEnum.success ? (\n            <View style={{ height: height * 0.8 }}>\n              {selectedTeam !== undefined ? (\n                <View style={{ marginLeft: 5, marginRight: 10, marginTop: 10 }}>\n                  <SegmentedPicker\n                    selectedIndex={isShowingRoster ? 1 : 0}\n                    setSelectedIndex={e => {\n                      if (e === 0) {\n                        setIsShowingRoster(false);\n                      } else if (e === 1) {\n                        setIsShowingRoster(true);\n                      }\n                    }}\n                    options={['Highlights', 'Roster']}\n                    width={width - 16}\n                    height={25}\n                  />\n                </View>\n              ) : null}\n              {isShowingRoster && selectedTeam !== undefined ? (\n                <RosterView\n                  teamId={selectedTeam.teamId}\n                  width={width}\n                  height={height * 0.7}\n                />\n              ) : (\n                <FlatList\n                  data={sportsPosts}\n                  renderItem={post => <SportsPostBlock post={post} />}\n                />\n              )}\n            </View>\n          ) : (\n            <View>\n              <Text>Something went wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n\nfunction SportsPostBlock({ post }: { post: ListRenderItemInfo<sportPost> }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <View\n      key={`Sport_${post.item.data.fileId}`}\n      style={{\n        width: width * 0.9,\n        height:\n          post.item.data.postType === postType.youtubeVideo\n            ? ((width * 0.9) / 16) * 9\n            : height * 0.4,\n        backgroundColor: Colors.white,\n        elevation: 2,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 10,\n        marginLeft: width * 0.05,\n        marginRight: width * 0.05,\n        marginTop: height * 0.05,\n        borderRadius: 15,\n      }}\n    >\n      <View\n        style={{\n          overflow: 'hidden',\n          width: width * 0.9,\n          height:\n            post.item.data.postType === postType.youtubeVideo\n              ? ((width * 0.9) / 16) * 9\n              : height * 0.4,\n          borderRadius: 15,\n        }}\n      >\n        {post.item.data.postType === postType.microsoftFile ? (\n          <>\n            {post.item.data.fileType === dataContentTypeOptions.image ? (\n              <View>\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: 5,\n                    bottom: 5,\n                    zIndex: 100,\n                  }}\n                >\n                  {post.item.caption}\n                </Text>\n                <Image\n                  style={{\n                    width: width * 0.9,\n                    height: height * 0.4,\n                    marginLeft: width * 0.05,\n                    marginRight: width * 0.05,\n                    borderRadius: 15,\n                  }}\n                  source={{ uri: post.item.data.fileId }}\n                />\n              </View>\n            ) : null}\n            {post.item.data.fileType === dataContentTypeOptions.video ? (\n              <View>\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: 5,\n                    bottom: 5,\n                    zIndex: 100,\n                  }}\n                >\n                  {post.item.caption}\n                </Text>\n                <Video\n                  useNativeControls\n                  source={{ uri: post.item.data.fileId }}\n                  resizeMode={ResizeMode.COVER}\n                  style={{\n                    width: width * 0.9,\n                    height: height * 0.4,\n                    alignSelf: 'stretch',\n                    borderRadius: 15,\n                  }}\n                  videoStyle={{\n                    width: width * 0.9,\n                    height: height * 0.4,\n                    borderRadius: 15,\n                  }}\n                />\n              </View>\n            ) : null}\n          </>\n        ) : null}\n        {post.item.data.postType === postType.youtubeVideo ? (\n          <SportsYoutube width={width * 0.9} videoId={post.item.data.fileId} />\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nfunction RosterView({\n  teamId,\n  width,\n  height,\n}: {\n  teamId: string;\n  width: number;\n  height: number;\n}) {\n  const [rosterLoadingState, setRosterLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [roster, setRoster] = useState<rosterType[]>([]);\n\n  async function loadRoster() {\n    const result = await getRoster(teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRoster(result.data);\n    }\n    setRosterLoadingState(result.result);\n  }\n\n  useEffect(() => {\n    loadRoster();\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      {rosterLoadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <ProgressView width={width * 0.1} height={height * 0.1} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {rosterLoadingState === loadingStateEnum.success ? (\n            <View>\n              <View\n                style={{ flexDirection: 'row', marginTop: 10, marginBottom: 5 }}\n              >\n                <Text style={{ marginLeft: 35, width: width * 0.4 }}>\n                  Player\n                </Text>\n                <Text style={{ width: width * 0.3 }}>Player Number</Text>\n                <Text>Position</Text>\n              </View>\n              <FlatList\n                data={roster}\n                renderItem={item => (\n                  <View\n                    style={{\n                      backgroundColor:\n                        item.index % 2 === 0 ? Colors.white : Colors.lightGray,\n                    }}\n                  >\n                    <View style={{ flexDirection: 'row', margin: 10 }}>\n                      <RosterImage id={item.item.imageShareId} />\n                      <Text style={{ marginLeft: 5, width: width * 0.4 }}>\n                        {item.item.name}\n                      </Text>\n                      {item.item.playerNumber !== undefined ? (\n                        <Text style={{ width: width * 0.3 }}>\n                          {item.item.playerNumber}\n                        </Text>\n                      ) : null}\n                      {item.item.position !== undefined ? (\n                        <Text>{item.item.position}</Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Something went wrong loading the roster</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction RosterImage({ id }: { id?: string }) {\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const [imageState, setImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  async function loadData(imageId: string) {\n    setImageState(loadingStateEnum.loading);\n    const result = await getFileWithShareID(imageId, 0);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.url !== undefined\n    ) {\n      setImageUrl(result.url);\n      setImageState(loadingStateEnum.success);\n    } else {\n      setImageState(loadingStateEnum.failed);\n    }\n  }\n  useEffect(() => {\n    if (id !== undefined) {\n      loadData(id);\n    }\n  }, [id]);\n\n  return (\n    <>\n      {imageState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width: 20,\n            height: 20,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={14} height={14} />\n        </View>\n      ) : (\n        <>\n          {imageState === loadingStateEnum.success ? (\n            <View>\n              <Image\n                source={{ uri: imageUrl }}\n                style={{ width: 20, height: 20, borderRadius: 10 }}\n              />\n            </View>\n          ) : (\n            <>\n              {imageState === loadingStateEnum.notStarted ? (\n                <View style={{ width: 20, height: 20 }} />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","//\n//  DayView.tsx\n//  Pauly\n//\n//  Created by Andrew Mainella on 2023-07-21.\n//\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { View, ScrollView, useColorScheme, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport {\n  calculateIfShowing,\n  computeEventHeight,\n  findTimeOffset,\n  isDateToday,\n} from '../../Functions/calendar/calendarFunctions';\nimport { RootState } from '../../Redux/store';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum } from '../../types';\nimport { getClassEventsFromDay } from '../../Functions/classesFunctions';\n\nexport default function DayView({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const colorScheme = useColorScheme();\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const [heightOffsetTop, setHeightOffsetTop] = useState<number>(0);\n  const [currentMinuteInt, setCurrentMinuteInt] = useState<number>(0);\n  const [currentTime, setCurrentTime] = useState<string>('12:00');\n  const [isShowingTime, setIsShowingTime] = useState<boolean>(true);\n  const [hourLength, setHourLength] = useState<number>(0);\n  const hoursText: string[] = [\n    '12AM',\n    '1AM',\n    '2AM',\n    '3AM',\n    '4AM',\n    '5AM',\n    '6AM',\n    '7AM',\n    '8AM',\n    '9AM',\n    '10AM',\n    '11AM',\n    '12PM',\n    '1PM',\n    '2PM',\n    '3PM',\n    '4PM',\n    '5PM',\n    '6PM',\n    '7PM',\n    '8PM',\n    '9PM',\n    '10PM',\n    '11PM',\n  ];\n  const mainScrollRef = useRef<ScrollView>(null);\n  const [eventsPane, setEventsPane] = useState<number[][]>([[]]); // This is a sorted 2d array for calculating the horizintal shift of an event\n  const [schoolEvents, setSchoolEvents] = useState<eventType[]>();\n\n  function setCurrentTimeFunction(hour: number, minuite: number) {\n    if (minuite.toString().length == 1) {\n      if (hour == 12) {\n        setCurrentTime(`12:0${minuite.toString()}`);\n      } else {\n        setCurrentTime(`${(hour % 12).toString()}:0${minuite.toString()}`);\n      }\n    } else if (hour == 12) {\n      setCurrentTime(`12:${minuite}`);\n    } else {\n      setCurrentTime(`${(hour % 12).toString()}:${minuite.toString()}`);\n    }\n  }\n\n  function loadCalendarContent() {\n    const currentDate = new Date();\n    const resultHeightTopOffset = findTimeOffset(currentDate, height);\n    setHeightOffsetTop(resultHeightTopOffset);\n    const minuiteInt: number = currentDate.getMinutes();\n    setCurrentMinuteInt(minuiteInt);\n    const hourInt = currentDate.getHours();\n    setCurrentTimeFunction(hourInt, minuiteInt);\n    mainScrollRef.current?.scrollTo({\n      x: 0,\n      y: resultHeightTopOffset,\n      animated: false,\n    });\n  }\n\n  function updateOnTimeChange() {\n    const minuiteInt = new Date().getMinutes();\n    if (currentMinuteInt != minuiteInt!) {\n      setCurrentMinuteInt(minuiteInt);\n\n      const hourInt = new Date().getHours();\n      if (minuiteInt.toString().length == 1) {\n        setCurrentTimeFunction(hourInt, minuiteInt);\n      } else {\n        setCurrentTimeFunction(hourInt, minuiteInt);\n      }\n      setHeightOffsetTop(findTimeOffset(new Date(), height));\n    }\n  }\n\n  // https://stackoverflow.com/questions/65049812/how-to-call-a-function-every-minute-in-a-react-component\n  // Upadtes every second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updateOnTimeChange();\n    }, 1000);\n\n    return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\n  }, []);\n\n  useEffect(() => {\n    setHourLength(height * 0.1);\n    loadCalendarContent();\n  }, []);\n\n  async function getClassesEvents() {\n    const result = await getClassEventsFromDay();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSchoolEvents(result.data);\n    }\n  }\n\n  useEffect(() => {\n    getClassesEvents();\n  }, [selectedDate]);\n\n  return (\n    <ScrollView\n      style={{ height, width, backgroundColor: Colors.white }}\n      ref={mainScrollRef}\n    >\n      <>\n        {isShowingTime ? (\n          <>\n            {hoursText.map(value => (\n              <View\n                key={`${value}_${createUUID()}`}\n                style={{ flexDirection: 'row', height: hourLength }}\n              >\n                {calculateIfShowing(value, new Date(selectedDate)) ? (\n                  <Text\n                    style={{\n                      color: colorScheme == 'dark' ? Colors.white : 'black',\n                    }}\n                  >\n                    {value}\n                  </Text>\n                ) : null}\n                <View\n                  style={{\n                    backgroundColor: 'black',\n                    width: width * 0.9,\n                    height: 6,\n                    position: 'absolute',\n                    right: 0,\n                    borderRadius: 25,\n                  }}\n                />\n              </View>\n            ))}\n          </>\n        ) : null}\n      </>\n      {currentEvents.map(event => (\n        <>\n          {event.allDay ||\n          new Date(event.endTime).getFullYear() !==\n            new Date(selectedDate).getFullYear() ||\n          new Date(event.endTime).getMonth() !==\n            new Date(selectedDate).getMonth() ||\n          new Date(event.endTime).getDate() !==\n            new Date(selectedDate).getDate() ? null : (\n            <EventBlock\n              event={event}\n              width={width}\n              height={height}\n              eventPane={eventsPane}\n              setEventPane={setEventsPane}\n            />\n          )}\n        </>\n      ))}\n      {schoolEvents?.map(event => (\n        <EventBlock\n          event={event}\n          width={width}\n          height={height}\n          eventPane={eventsPane}\n          setEventPane={setEventsPane}\n        />\n      ))}\n      {new Date(selectedDate).getDate() === new Date().getDate() &&\n      new Date(selectedDate).getMonth() === new Date().getMonth() &&\n      new Date(selectedDate).getFullYear() === new Date().getFullYear() ? (\n        <View\n          style={{\n            position: 'absolute',\n            top: heightOffsetTop,\n            height: height * 0.005,\n            width,\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}\n        >\n          <Text style={{ color: 'red', zIndex: 2 }}>{currentTime}</Text>\n          <View\n            style={{\n              backgroundColor: 'red',\n              width: width * 0.914,\n              height: 6,\n              position: 'absolute',\n              right: 0,\n            }}\n          />\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nfunction EventBlock({\n  event,\n  width,\n  height,\n  eventPane,\n  setEventPane,\n}: {\n  event: eventType;\n  width: number;\n  height: number;\n  eventPane: number[][];\n  setEventPane: (item: number[][]) => void;\n}) {\n  const EventHeight = computeEventHeight(\n    new Date(event.startTime),\n    new Date(event.endTime),\n    height,\n  );\n  const Offset = findTimeOffset(new Date(event.startTime), height);\n  const [horizontalShift, setHorizontalShift] = useState<number>(0);\n  function calculateHorizontalShift() {\n    let handeled = false;\n    for (\n      let horizontalCheck = 0;\n      horizontalCheck < eventPane.length;\n      horizontalCheck += 1\n    ) {\n      const beforeIndex = eventPane[horizontalCheck].findIndex(\n        e => e >= Offset,\n      );\n      if (beforeIndex !== -1) {\n        if (beforeIndex - 1 < eventPane[horizontalCheck].length) {\n          if (eventPane[horizontalCheck][beforeIndex - 1] <= Offset) {\n            // Fail Check Next Hoizontal Array\n            continue;\n          } else {\n            // Everything Checks Out\n            const afterIndex = eventPane[horizontalCheck].findIndex(\n              e => e >= Offset + EventHeight,\n            );\n            if (afterIndex !== -1) {\n              if (afterIndex - 1 < eventPane[horizontalCheck].length) {\n                if (\n                  eventPane[horizontalCheck][afterIndex - 1] <=\n                  Offset + EventHeight\n                ) {\n                  // Fails check next horizontal array\n                  continue;\n                } else {\n                  // All Good\n                  eventPane[horizontalCheck].push(Offset);\n                  eventPane[horizontalCheck].push(Offset + EventHeight);\n                  eventPane[horizontalCheck].sort();\n                  handeled = true;\n                  break;\n                }\n              } else {\n                // Error\n                continue;\n              }\n            } else {\n              // All Good\n              const newEvents: number[][] = eventPane;\n              newEvents[horizontalCheck].push(Offset);\n              newEvents[horizontalCheck].push(Offset + EventHeight);\n              // [...eventPane[horizontalCheck], Offset, Offset + EventHeight])\n              eventPane[horizontalCheck].sort();\n              handeled = true;\n              break;\n            }\n          }\n        } else {\n          // Error\n          continue;\n        }\n      } else {\n        eventPane[horizontalCheck].push(Offset);\n        eventPane[horizontalCheck].push(Offset + EventHeight);\n        eventPane[horizontalCheck].sort();\n        handeled = true;\n        break;\n      }\n    }\n\n    if (!handeled) {\n      eventPane.push([]);\n      eventPane[eventPane.length - 1].push(Offset);\n      eventPane[eventPane.length - 1].push(Offset + EventHeight);\n    }\n    setHorizontalShift(width * horizontalCheck);\n  }\n\n  useEffect(() => {\n    calculateHorizontalShift();\n  }, []);\n\n  return (\n    <View\n      key={`Event_${createUUID()}`}\n      style={{\n        width: width * 0.9,\n        height: EventHeight,\n        top: Offset,\n        position: 'absolute',\n        right: 0,\n        borderColor: Colors.maroon,\n        borderLeftWidth: 3,\n      }}\n    >\n      <View\n        style={{\n          width: width * 0.9,\n          height: EventHeight,\n          position: 'absolute',\n          backgroundColor: event.eventColor,\n          opacity: 0.3,\n          zIndex: -1,\n        }}\n      />\n      <Text style={{ opacity: 1 }}>{event.name}</Text>\n      <Text>\n        {new Date(event.startTime).toLocaleString('en-us', {\n          hour: 'numeric',\n          minute: 'numeric',\n        })}{' '}\n        to{' '}\n        {new Date(event.endTime).toLocaleString('en-us', {\n          hour: 'numeric',\n          minute: 'numeric',\n        })}\n      </Text>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DayView from './DayView';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport { RootState } from '../../Redux/store';\nimport { selectedDateSlice } from '../../Redux/reducers/selectedDateReducer';\nimport { Colors } from '../../types';\nimport { ChevronLeft, ChevronRight } from '../../UI/Icons/Icons';\n\nexport default function Week({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const selectedDateRedux: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  const [daysOfWeek, setDaysOfWeek] = useState<Date[]>([]);\n  const dispatch = useDispatch();\n  function getDOW(selectedDate: Date) {\n    const week: Date[] = [];\n    // Starting Monday not Sunday\n    selectedDate.setDate(selectedDate.getDate() - selectedDate.getDay());\n    for (let i = 0; i < 7; i += 1) {\n      week.push(new Date(selectedDate));\n      selectedDate.setDate(selectedDate.getDate() + 1);\n    }\n    return week;\n  }\n  useEffect(() => {\n    setDaysOfWeek(getDOW(new Date(selectedDateRedux)));\n  }, [selectedDateRedux]);\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View>\n        {/* 768 TO DO get dimentiosn value */}\n        {false ? (\n          <View />\n        ) : (\n          <View>\n            <View\n              style={{\n                flexDirection: 'row',\n                height: width * 0.142857142857143,\n                width,\n              }}\n            >\n              <Pressable\n                style={{ margin: width * 0.01111111111111111 }}\n                onPress={() => {\n                  const d = new Date(selectedDateRedux);\n                  d.setDate(d.getDate() - 7);\n                  dispatch(\n                    selectedDateSlice.actions.setSelectedDate(d.toISOString()),\n                  );\n                }}\n              >\n                <ChevronLeft\n                  width={width * 0.08888888888888889}\n                  height={width * 0.08888888888888889}\n                />\n              </Pressable>\n              {daysOfWeek.map(day => (\n                <Pressable\n                  onPress={() => {\n                    dispatch(\n                      selectedDateSlice.actions.setSelectedDate(\n                        day.toISOString(),\n                      ),\n                    );\n                  }}\n                  key={`${day.getDay()}_${createUUID()}`}\n                  style={{\n                    width: width * 0.08888888888888889,\n                    height: width * 0.08888888888888889,\n                    margin: width * 0.01111111111111111,\n                    borderRadius: 50,\n                    backgroundColor: Colors.darkGray,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    borderColor:\n                      day.getDate() === new Date(selectedDateRedux).getDate()\n                        ? 'black'\n                        : Colors.maroon,\n                    borderWidth:\n                      new Date().getDate() === day.getDate() ||\n                      day.getDate() === new Date(selectedDateRedux).getDate()\n                        ? 5\n                        : 0,\n                  }}\n                >\n                  <Text style={{ color: Colors.white }}>{day.getDate()}</Text>\n                </Pressable>\n              ))}\n              <Pressable\n                style={{ margin: width * 0.01111111111111111 }}\n                onPress={() => {\n                  const d = new Date(selectedDateRedux);\n                  d.setDate(d.getDate() + 7);\n                  dispatch(\n                    selectedDateSlice.actions.setSelectedDate(d.toISOString()),\n                  );\n                }}\n              >\n                <ChevronRight\n                  width={width * 0.08888888888888889}\n                  height={width * 0.08888888888888889}\n                />\n              </Pressable>\n            </View>\n          </View>\n        )}\n      </View>\n      <View\n        style={{\n          height: false ? height : height - width * 0.179,\n          width,\n          alignContent: 'center',\n          alignItems: 'center',\n          backgroundColor: Colors.white,\n        }}\n      >\n        <DayView\n          width={width * 0.95}\n          height={false ? height * 0.757 : height}\n        />\n      </View>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport { RootState } from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\n\nexport default function SelectTimetable({\n  governmentMode,\n  onSelect,\n}: {\n  governmentMode: boolean;\n  onSelect?: (item: timetableStringType) => void;\n}) {\n  const { timetablesListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [loadedTimetables, setLoadedTimetables] = useState<\n    timetableStringType[]\n  >([]);\n  const navigate = useNavigate();\n\n  async function getTimetables() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${timetablesListId}/items?expand=fields`,\n    );\n    if (result.ok) {\n      const dataResult = await result.json();\n      if (\n        dataResult.value.length !== undefined &&\n        dataResult.value.length !== null\n      ) {\n        const newLoadedTimetables: timetableStringType[] = [];\n        for (let index = 0; index < dataResult.value.length; index += 1) {\n          try {\n            newLoadedTimetables.push({\n              name: dataResult.value[index].fields.timetableName,\n              id: dataResult.value[index].fields.timetableId,\n            });\n          } catch (e) {\n            // TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n          }\n        }\n        setLoadedTimetables(newLoadedTimetables);\n        setLoadingState(loadingStateEnum.success);\n      }\n    } else {\n      setLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getTimetables();\n  }, []);\n\n  return (\n    <View>\n      {loadingState === loadingStateEnum.loading ? <Text>Loading</Text> : null}\n      {loadingState === loadingStateEnum.success ? (\n        <View>\n          {loadedTimetables.map(timetable => (\n            <Pressable\n              key={`Timetable_${timetable.id}`}\n              onPress={() => {\n                if (governmentMode) {\n                  navigate(\n                    `/profile/government/calendar/timetable/${timetable.id}`,\n                  );\n                } else if (onSelect !== undefined) {\n                  onSelect(timetable);\n                }\n              }}\n            >\n              <View>\n                <Text>{timetable.name}</Text>\n              </View>\n            </Pressable>\n          ))}\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.failed ? <Text>Failure</Text> : null}\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, ScrollView } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport {\n  getGraphEvents,\n  getTimetable,\n} from '../../Functions/calendar/calendarFunctionsGraph';\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport store, { RootState } from '../../Redux/store';\nimport { loadingStateEnum, semesters } from '../../types';\n\nenum pickSchoolDayMode {\n  schoolYear,\n  schoolDay,\n  schedule,\n  dressCode,\n  semester,\n  dressCodeIncentives,\n}\n\nexport default function SelectSchoolDayData({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const [schoolDayMode, setSchoolDayMode] = useState<pickSchoolDayMode>(\n    pickSchoolDayMode.schoolYear,\n  );\n  const [timetableState, setTimetableState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [timetable, setTimetable] = useState<timetableType | undefined>(\n    undefined,\n  );\n  const { selectedSchoolDayData, selectedSchoolYear } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const dispatch = useDispatch();\n\n  async function loadData(id: string) {\n    setTimetableState(loadingStateEnum.loading);\n    const result = await getTimetable(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.timetable !== undefined\n    ) {\n      setTimetable(result.timetable);\n      setTimetableState(loadingStateEnum.success);\n    } else {\n      setTimetableState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (\n      selectedSchoolYear !== undefined &&\n      timetable === undefined &&\n      selectedSchoolYear.paulyEventData !== undefined\n    ) {\n      loadData(selectedSchoolYear.paulyEventData);\n    }\n  }, [schoolDayMode, selectedSchoolYear]);\n\n  return (\n    <View style={{ width, height }}>\n      {schoolDayMode === pickSchoolDayMode.schoolYear ? (\n        <SchoolYearsSelect\n          onSelect={() => setSchoolDayMode(pickSchoolDayMode.schoolDay)}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.schoolDay ? (\n        <SchoolDaySelect\n          width={width}\n          height={height}\n          timetable={timetable}\n          loadingState={timetableState}\n          onSelect={() => {\n            setSchoolDayMode(pickSchoolDayMode.schedule);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schoolYear);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.schedule &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <ScheduleSelect\n          schedules={timetable.schedules}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: e,\n                dressCode: selectedSchoolDayData.dressCode,\n                semester: selectedSchoolDayData.semester,\n              }),\n            );\n            setSchoolDayMode(pickSchoolDayMode.dressCode);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schoolDay);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.dressCode &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <DressCodeSelect\n          dressCodeData={timetable.dressCode.dressCodeData}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: selectedSchoolDayData.schedule,\n                dressCode: e,\n                semester: selectedSchoolDayData.semester,\n              }),\n            );\n            setSchoolDayMode(pickSchoolDayMode.semester);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schedule);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.semester &&\n      selectedSchoolDayData !== undefined ? (\n        <View>\n          <Pressable\n            onPress={() => {\n              setSchoolDayMode(pickSchoolDayMode.dressCode);\n            }}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setSelectedSchoolDayData({\n                  schoolDay: selectedSchoolDayData.schoolDay,\n                  schedule: selectedSchoolDayData.schedule,\n                  dressCode: selectedSchoolDayData.dressCode,\n                  semester: semesters.semesterOne,\n                }),\n              );\n              setSchoolDayMode(pickSchoolDayMode.dressCodeIncentives);\n            }}\n          >\n            <Text>Semester One</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setSelectedSchoolDayData({\n                  schoolDay: selectedSchoolDayData.schoolDay,\n                  schedule: selectedSchoolDayData.schedule,\n                  dressCode: selectedSchoolDayData.dressCode,\n                  semester: semesters.semesterTwo,\n                }),\n              );\n              setSchoolDayMode(pickSchoolDayMode.dressCodeIncentives);\n            }}\n          >\n            <Text>Semester Two</Text>\n          </Pressable>\n        </View>\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.dressCodeIncentives &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <DressCodeIncentivesSelect\n          dressCodeIncentivesData={timetable.dressCode.dressCodeIncentives}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: selectedSchoolDayData.schedule,\n                dressCode: selectedSchoolDayData.dressCode,\n                semester: selectedSchoolDayData.semester,\n                dressCodeIncentive: e,\n              }),\n            );\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.semester);\n          }}\n        />\n      ) : null}\n    </View>\n  );\n}\n\nfunction SchoolYearsSelect({ onSelect }: { onSelect: () => void }) {\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [currentEventsSchoolYear, setCurrentEventsSchoolYear] = useState<\n    eventType[]\n  >([]);\n  const dispatch = useDispatch();\n\n  async function getData() {\n    const result = await getGraphEvents(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20or%20id%20eq%20'${\n        store.getState().paulyList.eventDataExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20and%20ep/value%20eq%20'schoolYear')`,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.events !== undefined\n    ) {\n      let outputEvents: eventType[] = result.events;\n      let url: string = result.nextLink !== undefined ? result.nextLink : '';\n      let notFound: boolean = result.nextLink !== undefined;\n      while (notFound) {\n        const furtherResult = await getGraphEvents(url);\n        if (\n          furtherResult.result === loadingStateEnum.success &&\n          furtherResult.events !== undefined\n        ) {\n          outputEvents = [...outputEvents, ...furtherResult.events];\n          url =\n            furtherResult.nextLink !== undefined ? furtherResult.nextLink : '';\n          notFound = furtherResult.nextLink !== undefined;\n        } else {\n          notFound = false;\n        }\n      }\n      setCurrentEventsSchoolYear(outputEvents);\n      setLoadingState(loadingStateEnum.success);\n    } else {\n      setLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <View>\n      <ScrollView>\n        {loadingState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {loadingState === loadingStateEnum.success ? (\n              <View>\n                {currentEventsSchoolYear.map(event => (\n                  <Pressable\n                    key={`School_Year_${createUUID()}`}\n                    onPress={() => {\n                      dispatch(\n                        addEventSlice.actions.setSelectedSchoolYear(event),\n                      );\n                      onSelect();\n                    }}\n                  >\n                    <View>\n                      <Text style={{ margin: 10 }}>{event.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction SchoolDaySelect({\n  width,\n  height,\n  timetable,\n  loadingState,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  timetable: timetableType | undefined;\n  loadingState: loadingStateEnum;\n  onSelect: () => void;\n  onBack: () => void;\n}) {\n  const dispatch = useDispatch();\n  return (\n    <View>\n      <Pressable\n        onPress={() => {\n          onBack();\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <ScrollView style={{ width, height }}>\n        {loadingState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <>\n            {loadingState === loadingStateEnum.success &&\n            timetable !== undefined ? (\n              <>\n                {timetable.days.map(day => (\n                  <Pressable\n                    key={`Day_${day.id}`}\n                    onPress={() => {\n                      onSelect();\n                      dispatch(\n                        addEventSlice.actions.setSelectedSchoolDayData({\n                          schoolDay: day,\n                          schedule: {\n                            properName: '',\n                            descriptiveName: '',\n                            periods: [],\n                            id: '',\n                            color: '',\n                          },\n                          dressCode: {\n                            name: '',\n                            description: '',\n                            id: '',\n                          },\n                          semester: semesters.semesterOne,\n                        }),\n                      );\n                    }}\n                  >\n                    <View>\n                      <Text>{day.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction ScheduleSelect({\n  schedules,\n  onSelect,\n}: {\n  schedules: scheduleType[];\n  onSelect: (item: scheduleType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      {schedules.map(schedule => (\n        <Pressable\n          key={`Schedule_${schedule.id}`}\n          onPress={() => {\n            onSelect(schedule);\n          }}\n        >\n          <View>\n            <Text>{schedule.properName}</Text>\n          </View>\n        </Pressable>\n      ))}\n    </View>\n  );\n}\n\nfunction DressCodeSelect({\n  dressCodeData,\n  onSelect,\n  onBack,\n}: {\n  dressCodeData: dressCodeDataType[];\n  onSelect: (item: dressCodeDataType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      <Pressable\n        onPress={() => {\n          onBack();\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      {dressCodeData.map(data => (\n        <Pressable\n          onPress={() => {\n            onSelect(data);\n          }}\n        >\n          <Text>{data.name}</Text>\n        </Pressable>\n      ))}\n    </View>\n  );\n}\n\nfunction DressCodeIncentivesSelect({\n  dressCodeIncentivesData,\n}: {\n  dressCodeIncentivesData: dressCodeIncentiveType[];\n  onSelect: (item: dressCodeIncentiveType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      {dressCodeIncentivesData.map(incentive => (\n        <View>\n          <Text>{incentive.name}</Text>\n        </View>\n      ))}\n      <Text>None</Text>\n    </View>\n  );\n}\n","import { orgWideGroupID } from '../PaulyConfig';\nimport { addEventSlice } from '../Redux/reducers/addEventReducer';\nimport { currentEventsSlice } from '../Redux/reducers/currentEventReducer';\nimport store from '../Redux/store';\nimport { Colors, loadingStateEnum, paulyEventType } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport default async function createEvent(): Promise<undefined> {\n  if (store.getState().addEvent.selectedEventType === paulyEventType.personal) {\n    const data: any = {\n      subject: store.getState().addEvent.eventName,\n      start: {\n        dateTime: store.getState().addEvent.startDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n      end: {\n        dateTime: store.getState().addEvent.endDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n    };\n    if (store.getState().addEvent.allDay) {\n      data.start.dateTime = `${\n        store\n          .getState()\n          .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.end.dateTime = `${\n        store\n          .getState()\n          .addEvent.endDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.isAllDay = true;\n    }\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/me/events`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const dataOut = await result.json();\n      const resultEvent: eventType = {\n        id: dataOut.id,\n        name: dataOut.subject,\n        startTime: dataOut.start.dateTime,\n        endTime: dataOut.end.dateTime,\n        eventColor: Colors.white,\n        microsoftEvent: true,\n        microsoftReference: `https://graph.microsoft.com/v1.0/me/events/${dataOut.id}`,\n        allDay: false,\n      };\n      store.dispatch(currentEventsSlice.actions.pushEvent(resultEvent));\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.success),\n      );\n    } else {\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    const data: any = {\n      subject: store.getState().addEvent.eventName,\n      start: {\n        dateTime: store.getState().addEvent.startDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n      end: {\n        dateTime: store.getState().addEvent.endDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n    };\n    const schoolDay = store.getState().addEvent.selectedSchoolDayData;\n    const schoolYearId = store.getState().addEvent.selectedSchoolYear?.id;\n    if (\n      store.getState().addEvent.selectedEventType === paulyEventType.schoolDay\n    ) {\n      if (schoolDay !== undefined) {\n        if (store.getState().addEvent.selectedSchoolDayData === undefined) {\n          store.dispatch(\n            addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n          );\n          return;\n        }\n        data.start.dateTime = `${\n          store\n            .getState()\n            .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n            .split(/[T ]/i, 1)[0]\n        }T00:00:00.0000000`;\n        const newEndDate = new Date(store.getState().addEvent.startDate);\n        newEndDate.setDate(\n          new Date(store.getState().addEvent.startDate).getDate() + 1,\n        );\n        data.end.dateTime = `${\n          newEndDate\n            .toISOString()\n            .replace(/.\\d+Z$/g, 'Z')\n            .split(/[T ]/i, 1)[0]\n        }T00:00:00.0000000`;\n        data.isAllDay = true;\n        data.subject = `${schoolDay.schoolDay.name} ${schoolDay.schedule.properName}`;\n      } else {\n        store.dispatch(\n          addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n        );\n      }\n    } else if (store.getState().addEvent.allDay) {\n      data.start.dateTime = `${\n        store\n          .getState()\n          .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.end.dateTime = `${\n        store\n          .getState()\n          .addEvent.endDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.isAllDay = true;\n    }\n    if (\n      store.getState().addEvent.selectedEventType === paulyEventType.schoolYear\n    ) {\n      data.singleValueExtendedProperties = [\n        {\n          id: store.getState().paulyList.eventTypeExtensionId,\n          value: 'schoolYear',\n        },\n        {\n          id: store.getState().paulyList.eventDataExtensionId,\n          value: store.getState().addEvent.selectedTimetable.id,\n        },\n      ];\n    } else if (\n      store.getState().addEvent.selectedEventType ===\n        paulyEventType.schoolDay &&\n      schoolDay !== undefined &&\n      schoolYearId !== undefined\n    ) {\n      const selectedSchoolDayDataCompressed: schoolDayDataCompressedType = {\n        schoolDayId: schoolDay.schoolDay.id,\n        scheduleId: schoolDay.schedule.id,\n        dressCodeId: schoolDay.dressCode.id,\n        semester: schoolDay.semester,\n        dressCodeIncentiveId:\n          schoolDay.dressCodeIncentive?.id === undefined\n            ? ''\n            : schoolDay.dressCodeIncentive?.id,\n        schoolYearEventId: schoolYearId,\n      };\n      data.singleValueExtendedProperties = [\n        {\n          id: store.getState().paulyList.eventTypeExtensionId,\n          value: 'schoolDay',\n        },\n        {\n          id: store.getState().paulyList.eventDataExtensionId,\n          value: JSON.stringify(selectedSchoolDayDataCompressed),\n        },\n      ];\n    }\n    if (store.getState().addEvent.recurringEvent) {\n    }\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const dataOut = await result.json();\n      const resultEvent: eventType = {\n        id: dataOut.id,\n        name: dataOut.subject,\n        startTime: dataOut.start.dateTime,\n        endTime: dataOut.end.dateTime,\n        eventColor: Colors.white,\n        paulyEventType:\n          store.getState().addEvent.selectedEventType ===\n          paulyEventType.schoolDay\n            ? 'schoolDay'\n            : store.getState().addEvent.selectedEventType ===\n              paulyEventType.schoolYear\n            ? 'schoolYear'\n            : undefined,\n        paulyEventData:\n          store.getState().addEvent.selectedEventType ===\n          paulyEventType.schoolDay\n            ? JSON.stringify(store.getState().addEvent.selectedSchoolDayData)\n            : store.getState().addEvent.selectedEventType ===\n              paulyEventType.schoolYear\n            ? store.getState().addEvent.selectedTimetable.id\n            : undefined,\n        microsoftEvent: true,\n        microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${dataOut.id}`,\n        allDay: false,\n      };\n      store.dispatch(currentEventsSlice.actions.pushEvent(resultEvent));\n      store.dispatch(addEventSlice.actions.setSelectedSchoolDayData(undefined));\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.success),\n      );\n    } else {\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n      );\n    }\n  }\n}\n","/*\n  Andrew Mainella\n  October 18 2023\n  Pauly\n  AddEvent.tsx\n*/\n\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Pressable, View, Text, Switch, TextInput } from 'react-native';\nimport { TimePickerModal, DatePickerModal } from 'react-native-paper-dates';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport { currentEventsSlice } from '../../Redux/reducers/currentEventReducer';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport SelectTimetable from './SelectTimetable';\nimport SelectSchoolDayData from './SelectSchoolDayData';\nimport { Colors, loadingStateEnum, paulyEventType } from '../../types';\nimport PickerWrapper from '../../UI/Pickers/Picker';\nimport { CalendarIcon, CloseIcon, TimeIcon } from '../../UI/Icons/Icons';\nimport updateEvent from '../../Functions/updateEvent';\nimport { getTextState } from '../../Functions/ultility/createUUID';\n\nfunction GovernmentCalendarOptions({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const { selectedEventType, selectedTimetable, selectedSchoolYear } =\n    useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <View>\n        <PickerWrapper\n          selectedIndex={selectedEventType}\n          onSetSelectedIndex={e => {\n            dispatch(addEventSlice.actions.setSelectedEventType(e));\n          }}\n          width={width}\n          height={height * 0.05}\n        >\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Personal\">\n            Personal\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Regular\">\n            Regular\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Day\">\n            School Day{' '}\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Year\">\n            School Year\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Council\">\n            Student Council\n          </Text>\n        </PickerWrapper>\n      </View>\n      {selectedEventType === paulyEventType.schoolDay ? (\n        <View style={{ width, height: 100 }}>\n          <Text>\n            Selected School Year:{' '}\n            {selectedSchoolYear ? selectedSchoolYear.name : 'None selected'}\n          </Text>\n          <SelectSchoolDayData width={width} height={100} />\n        </View>\n      ) : null}\n      {selectedEventType === paulyEventType.schoolYear ? (\n        <View>\n          <Text>\n            Selected Timetable:{' '}\n            {selectedTimetable ? selectedTimetable.name : 'Unselected'}\n          </Text>\n          <SelectTimetable\n            governmentMode={false}\n            onSelect={e => {\n              dispatch(addEventSlice.actions.setSelectedTimetable(e));\n            }}\n          />\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nfunction DateAndTimeSection({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const {\n    selectedEventType,\n    eventName,\n    allDay,\n    startDate,\n    endDate,\n    isPickingStartDate,\n    isPickingEndDate,\n  } = useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n  const [endDatePickerVisable, setEndDatePickerVisable] =\n    useState<boolean>(false);\n  const [startDatePickerVisable, setStartDatePickerVisable] =\n    useState<boolean>(false);\n  return (\n    <View>\n      <DatePickerModal\n        locale=\"en\"\n        mode=\"single\"\n        label=\"Select Date\"\n        visible={isPickingStartDate}\n        onDismiss={() =>\n          dispatch(addEventSlice.actions.setIsPickingStartDate(false))\n        }\n        date={new Date(startDate)}\n        onConfirm={e => {\n          if (e.date !== undefined) {\n            const oldDate = new Date(startDate);\n            dispatch(\n              addEventSlice.actions.setStartDate(\n                new Date(\n                  e.date.getFullYear(),\n                  e.date.getMonth(),\n                  e.date.getDate(),\n                  oldDate.getHours(),\n                  oldDate.getMinutes(),\n                ).toISOString(),\n              ),\n            );\n          }\n          dispatch(addEventSlice.actions.setIsPickingStartDate(false));\n        }}\n      />\n      <DatePickerModal\n        locale=\"\"\n        mode=\"single\"\n        label=\"Select Date\"\n        visible={isPickingEndDate}\n        onDismiss={() =>\n          dispatch(addEventSlice.actions.setIsPickingEndDate(false))\n        }\n        date={new Date(endDate)}\n        onConfirm={e => {\n          if (e.date !== undefined) {\n            const oldDate = new Date(endDate);\n            const newDate = new Date(\n              e.date.getFullYear(),\n              e.date.getMonth(),\n              e.date.getDate(),\n              oldDate.getHours(),\n              oldDate.getMinutes(),\n            ).toISOString();\n            dispatch(addEventSlice.actions.setEndDate(newDate));\n          }\n          dispatch(addEventSlice.actions.setIsPickingEndDate(false));\n        }}\n      />\n      {selectedEventType === paulyEventType.schoolDay ? null : (\n        <View>\n          <TextInput\n            value={eventName}\n            onChangeText={e => {\n              dispatch(addEventSlice.actions.setEventName(e));\n            }}\n            placeholder=\"Event Name\"\n            style={{\n              width: width * 0.8,\n              height: height * 0.05,\n              borderBottomColor: '#000000',\n              borderBottomWidth: 1,\n              marginLeft: width * 0.01,\n            }}\n          />\n          {selectedEventType !== paulyEventType.schoolYear ? (\n            <View\n              style={{ flexDirection: 'row', marginTop: 7, marginBottom: 7 }}\n            >\n              <Text>All Day</Text>\n              <Switch\n                trackColor={{ false: '#767577', true: '#81b0ff' }}\n                thumbColor={allDay ? '#f5dd4b' : '#f4f3f4'}\n                ios_backgroundColor=\"#3e3e3e\"\n                onValueChange={e => {\n                  dispatch(addEventSlice.actions.setAllDay(e));\n                }}\n                value={allDay}\n                style={{ marginLeft: 10 }}\n              />\n            </View>\n          ) : null}\n        </View>\n      )}\n      <Text>\n        {selectedEventType === paulyEventType.schoolDay ? '' : 'Start '}Date\n      </Text>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={{ flexDirection: 'row', margin: 10 }}>\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsPickingStartDate(true));\n            }}\n          >\n            <Text>\n              {new Date(startDate).toLocaleString('en-us', { month: 'long' })}{' '}\n              {new Date(startDate).getDate()}{' '}\n              {new Date(startDate).getFullYear()}{' '}\n            </Text>\n          </Pressable>\n          {!allDay ? (\n            <Pressable\n              onPress={() => {\n                setStartDatePickerVisable(true);\n              }}\n            >\n              <Text>\n                {new Date(startDate).getHours() % 12 || 12}:\n                {new Date(startDate).getMinutes().toString().length === 1\n                  ? `0${new Date(startDate).getMinutes()}`\n                  : new Date(startDate).getMinutes()}{' '}\n                {new Date(startDate).getHours() >= 12 ? 'pm' : 'am'}\n              </Text>\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsPickingStartDate(true));\n            }}\n          >\n            <CalendarIcon width={24} height={15} />\n          </Pressable>\n        </View>\n        {allDay ? null : (\n          <View style={{ margin: 5 }}>\n            <Pressable\n              onPress={() => {\n                setStartDatePickerVisable(true);\n              }}\n              style={{\n                height: 26.4,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <TimeIcon width={15} height={15} />\n            </Pressable>\n            <TimePickerModal\n              hours={new Date(startDate).getHours()}\n              minutes={new Date(startDate).getMinutes()}\n              visible={startDatePickerVisable}\n              onDismiss={() => setStartDatePickerVisable(false)}\n              onConfirm={e => {\n                const newDate = new Date(startDate);\n                newDate.setHours(e.hours);\n                newDate.setMinutes(e.minutes);\n                dispatch(\n                  addEventSlice.actions.setStartDate(newDate.toISOString()),\n                );\n                setStartDatePickerVisable(false);\n              }}\n            />\n          </View>\n        )}\n      </View>\n      {selectedEventType === paulyEventType.schoolDay ? null : (\n        <View>\n          <Text>End Date</Text>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flexDirection: 'row', margin: 10 }}>\n              <Pressable\n                onPress={() => {\n                  dispatch(addEventSlice.actions.setIsPickingEndDate(true));\n                }}\n              >\n                <Text>\n                  {new Date(endDate).toLocaleString('en-us', { month: 'long' })}{' '}\n                  {new Date(endDate).getDate()}{' '}\n                  {new Date(endDate).getFullYear()}{' '}\n                </Text>\n              </Pressable>\n              {!allDay ? (\n                <Pressable\n                  onPress={() => {\n                    setEndDatePickerVisable(true);\n                  }}\n                >\n                  <Text>\n                    {new Date(endDate).getHours() % 12 || 12}:\n                    {new Date(endDate).getMinutes().toString().length === 1\n                      ? `0${new Date(endDate).getMinutes()}`\n                      : new Date(endDate).getMinutes()}{' '}\n                    {new Date(endDate).getHours() >= 12 ? 'pm' : 'am'}\n                  </Text>\n                </Pressable>\n              ) : null}\n              <Pressable\n                onPress={() => {\n                  dispatch(addEventSlice.actions.setIsPickingEndDate(true));\n                }}\n              >\n                <CalendarIcon width={24} height={15} />\n              </Pressable>\n            </View>\n            {allDay ? null : (\n              <View style={{ margin: 5 }}>\n                <Pressable\n                  onPress={() => {\n                    setEndDatePickerVisable(true);\n                  }}\n                  style={{\n                    height: 26.4,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <TimeIcon width={15} height={15} />\n                </Pressable>\n                <TimePickerModal\n                  hours={new Date(endDate).getHours()}\n                  minutes={new Date(endDate).getMinutes()}\n                  visible={endDatePickerVisable}\n                  onDismiss={() => setEndDatePickerVisable(false)}\n                  onConfirm={e => {\n                    const newDate = new Date(endDate);\n                    newDate.setHours(e.hours);\n                    newDate.setMinutes(e.minutes);\n                    dispatch(\n                      addEventSlice.actions.setEndDate(newDate.toISOString()),\n                    );\n                    setEndDatePickerVisable(false);\n                  }}\n                />\n              </View>\n            )}\n          </View>\n        </View>\n      )}\n    </View>\n  );\n}\n\nexport default function AddEvent({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { selectedEventType, isEditing, selectedEvent, createEventState } =\n    useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (\n      selectedEventType === paulyEventType.schoolDay ||\n      selectedEventType === paulyEventType.schoolYear\n    ) {\n      dispatch(addEventSlice.actions.setAllDay(true));\n    }\n  }, [dispatch, selectedEventType]);\n\n  async function deleteEvent() {\n    if (\n      selectedEvent !== undefined &&\n      selectedEvent.microsoftEvent &&\n      selectedEvent.microsoftReference !== undefined\n    ) {\n      const deleteEventResult = await callMsGraph(\n        selectedEvent.microsoftReference,\n        'DELETE',\n      );\n      if (deleteEventResult.ok) {\n        const index = currentEvents.findIndex(e => {\n          return e.id === selectedEvent.id;\n        });\n        dispatch(currentEventsSlice.actions.removeCurrentEvent(index));\n        dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n      } else {\n        // TO DO throw error\n      }\n    }\n  }\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        backgroundColor: Colors.white,\n        width: width + 30,\n        height,\n        borderRadius: 5,\n        borderWidth: 5,\n      }}\n    >\n      <View style={{ margin: 10, width }}>\n        <Pressable\n          onPress={() => {\n            dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n            dispatch(\n              addEventSlice.actions.setCreateEventState(\n                loadingStateEnum.notStarted,\n              ),\n            );\n          }}\n        >\n          <CloseIcon width={10} height={10} />\n        </Pressable>\n        <Text style={{ fontFamily: 'BukhariScript' }}>Add Event</Text>\n        <DateAndTimeSection width={width} height={height} />\n        {isGovernmentMode ? (\n          <GovernmentCalendarOptions width={width} height={height} />\n        ) : null}\n        <View\n          style={{\n            width,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setCreateEventState(\n                  loadingStateEnum.loading,\n                ),\n              );\n              updateEvent();\n            }}\n            style={{\n              width: 100,\n              height: 50,\n              backgroundColor: '#00a4db',\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 15,\n              shadowColor: '#000',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 2,\n            }}\n          >\n            <Text style={{ zIndex: -1 }}>\n              {getTextState(createEventState, {\n                notStarted: isEditing ? 'Save' : 'Create',\n              })}\n            </Text>\n          </Pressable>\n        </View>\n        {isEditing ? (\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n              deleteEvent();\n            }}\n            style={{\n              width: 100,\n              height: 50,\n              backgroundColor: '#00a4db',\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 15,\n              shadowColor: '#000',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 2,\n            }}\n          >\n            <Text style={{ zIndex: -1 }}>Delete</Text>\n          </Pressable>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Animated, Pressable } from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addEventSlice } from '../Redux/reducers/addEventReducer';\nimport { RootState } from '../Redux/store';\nimport { Colors } from '../types';\n\ninterface PickerWrapperProps {\n  width: number;\n  height: number;\n}\n\nenum calendarMode {\n  month,\n  week,\n  day,\n}\n\nexport default function CalendarTypePicker({\n  width,\n  height,\n}: PickerWrapperProps) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [compoentWidth, setComponentWidth] = useState(width / 3);\n  const { selectedCalendarMode } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const dispatch = useDispatch();\n\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth + compoentWidth * 0.005,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedCalendarMode * compoentWidth + compoentWidth * 0.005);\n  }, []);\n\n  useEffect(() => {\n    setComponentWidth(width / 3);\n    pan.setValue(selectedCalendarMode * compoentWidth + compoentWidth * 0.005);\n  }, [width]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        height,\n        width,\n        backgroundColor: '#7d7d7d',\n        borderRadius: 20,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.month),\n          );\n          fadeIn(0);\n        }}\n        style={{\n          position: 'absolute',\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Month\n        </Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.week),\n          );\n          fadeIn(1);\n        }}\n        style={{\n          position: 'absolute',\n          transform: [{ translateX: 1 * compoentWidth }],\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Week\n        </Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.day),\n          );\n          fadeIn(2);\n        }}\n        style={{\n          position: 'absolute',\n          transform: [{ translateX: 2 * compoentWidth }],\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Day\n        </Text>\n      </Pressable>\n      <Animated.View style={{ transform: [{ translateX: pan }], zIndex: -1 }}>\n        <View\n          style={{\n            height: height * 0.95,\n            width: compoentWidth - compoentWidth * 0.01,\n            backgroundColor: Colors.white,\n            top: height * 0.025,\n            borderRadius: 20,\n            position: 'absolute',\n            zIndex: -1,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// Pauly\n// October 2 2023\n\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport { currentEventsSlice } from '../../Redux/reducers/currentEventReducer';\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport { getGraphEvents } from './calendarFunctionsGraph';\n\nexport default async function getEvents() {\n  // date the user picks\n  const selectedDate = new Date(store.getState().selectedDate);\n  // Start of month that the selected date is in\n  const startDate = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth(),\n    1,\n  );\n  // End of month that the selected date is in\n  const endDate = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth() + 1,\n    1,\n  );\n\n  // Personal Calendar\n  let outputEvents: eventType[] = [];\n  // This code is pulled from add events School Years Select\n  let nextUrl: string = `https://graph.microsoft.com/v1.0/me/calendarView?startDateTime=${startDate.toISOString()}&endDateTime=${endDate.toISOString()}`;\n  while (nextUrl !== '') {\n    const furtherResult = await getGraphEvents(\n      nextUrl,\n      'https://graph.microsoft.com/v1.0/me/events/',\n    );\n    if (\n      furtherResult.result === loadingStateEnum.success &&\n      furtherResult.events !== undefined\n    ) {\n      outputEvents = [...outputEvents, ...furtherResult.events];\n      if (furtherResult.nextLink === undefined) {\n        nextUrl = '';\n        break;\n      } else {\n        nextUrl = furtherResult.nextLink;\n      }\n    } else {\n      nextUrl = '';\n      break;\n    }\n  }\n\n  // OrgWideEvents\n  // This code is pulled from add events School Years Select\n  let url: string = `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$filter=start/dateTime%20ge%20'${startDate.toISOString()}'%20and%20end/dateTime%20le%20'${endDate.toISOString()}'`;\n  while (url !== '') {\n    const furtherResult = await getGraphEvents(\n      url,\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/`,\n    );\n    if (\n      furtherResult.result === loadingStateEnum.success &&\n      furtherResult.events !== undefined\n    ) {\n      outputEvents = [...outputEvents, ...furtherResult.events];\n      url = furtherResult.nextLink !== undefined ? furtherResult.nextLink : '';\n    } else {\n      url = '';\n    }\n  }\n\n  store.dispatch(currentEventsSlice.actions.setCurrentEvents(outputEvents));\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  ScrollView,\n  useWindowDimensions,\n  FlatList,\n  ListRenderItemInfo,\n} from 'react-native';\nimport React, { useCallback, useEffect } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findFirstDayinMonth } from '../../Functions/calendar/calendarFunctions';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport DayView from './DayView';\nimport Week from './Week';\nimport AddEvent from './AddEvent';\nimport CalendarTypePicker from '../../UI/CalendarTypePicker';\nimport { AddIcon, ChevronLeft, ChevronRight } from '../../UI/Icons/Icons';\nimport { RootState } from '../../Redux/store';\nimport { selectedDateSlice } from '../../Redux/reducers/selectedDateReducer';\nimport { Colors, calendarMode } from '../../types';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport BackButton from '../../UI/BackButton';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport { monthDataSlice } from '../../Redux/reducers/monthDataReducer';\nimport { getClasses } from '../../Functions/classesFunctions';\nimport getEvents from '../../Functions/calendar/getEvents';\n\nfunction getBackgroundColor(selectedDate: string, dayData: number): string {\n  if (dayData === new Date(selectedDate).getDate()) {\n    return Colors.lightGray;\n  }\n  if (\n    dayData === new Date().getDate() &&\n    new Date(selectedDate).getMonth() === new Date().getMonth() &&\n    new Date(selectedDate).getFullYear() === new Date().getFullYear()\n  ) {\n    return Colors.darkGray;\n  }\n  return Colors.white;\n}\n\nfunction getTextBackgroundColor(selectedDate: string, dayData: number): string {\n  if (\n    dayData === new Date().getDate() &&\n    new Date(selectedDate).getMonth() === new Date().getMonth() &&\n    new Date(selectedDate).getFullYear() === new Date().getFullYear() &&\n    new Date(selectedDate).getDate() !== dayData\n  ) {\n    return Colors.white;\n  }\n  return Colors.black;\n}\n\nfunction isCalendarTextColor(selectedDate: string, day: number): boolean {\n  const date = new Date(selectedDate);\n  date.setDate(day);\n  if (new Date().toDateString() === date.toDateString()) {\n    return true;\n  }\n  return false;\n}\n\nfunction CalendarCardView({\n  value,\n  width,\n  height,\n  calendarWidth,\n}: {\n  value: ListRenderItemInfo<monthDataType>;\n  width: number;\n  height: number;\n  calendarWidth: number;\n}) {\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const dispatch = useDispatch();\n  function pressCalendar() {\n    const d = new Date();\n    d.setFullYear(\n      new Date(selectedDate).getFullYear(),\n      new Date(selectedDate).getMonth(),\n      value.item.dayData,\n    );\n    dispatch(selectedDateSlice.actions.setSelectedDate(d.toISOString()));\n  }\n  if (calendarWidth <= 519 && value.item.showing) {\n    return (\n      <Pressable\n        style={{\n          width,\n          height,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderRadius: height / 2,\n          backgroundColor: getBackgroundColor(selectedDate, value.item.dayData),\n        }}\n        onPress={() => pressCalendar()}\n      >\n        <Text\n          style={{\n            color: getTextBackgroundColor(selectedDate, value.item.dayData),\n          }}\n        >\n          {value.item.dayData}\n        </Text>\n        {value.item.events.length >= 1 ? (\n          <View\n            style={{\n              backgroundColor: 'black',\n              borderRadius: 50,\n              width: width < height ? width * 0.25 : height * 0.25,\n              height: width < height ? width * 0.25 : height * 0.25,\n            }}\n          />\n        ) : (\n          <View\n            style={{\n              backgroundColor: 'transparent',\n              borderRadius: 50,\n              width: width < height ? width * 0.25 : height * 0.25,\n              height: width < height ? width * 0.25 : height * 0.25,\n            }}\n          />\n        )}\n      </Pressable>\n    );\n  }\n  if (calendarWidth <= 519) {\n    return <View style={{ width, height }} />;\n  }\n  if (value.item.showing) {\n    return (\n      <Pressable\n        style={{\n          width,\n          height,\n          borderWidth: 1,\n          borderTopWidth: value.index < 7 ? 2 : 1,\n          borderColor: Colors.lightGray,\n          padding: 2,\n        }}\n        onPress={() => {\n          pressCalendar();\n          dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n          const startDate = new Date(selectedDate);\n          startDate.setDate(value.item.dayData);\n          const endDate = new Date(selectedDate);\n          endDate.setDate(value.item.dayData);\n          endDate.setHours(endDate.getHours() + 1);\n          dispatch(addEventSlice.actions.setStartDate(startDate));\n          dispatch(addEventSlice.actions.setEndDate(endDate));\n        }}\n      >\n        <View\n          style={{\n            borderRadius: 50,\n            width: 16,\n            height: 16,\n            backgroundColor: isCalendarTextColor(\n              selectedDate,\n              value.item.dayData,\n            )\n              ? 'red'\n              : 'transparent',\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <Text\n            style={{\n              color: isCalendarTextColor(selectedDate, value.item.dayData)\n                ? Colors.white\n                : Colors.black,\n              fontWeight: isCalendarTextColor(selectedDate, value.item.dayData)\n                ? 'bold'\n                : 'normal',\n            }}\n          >\n            {value.item.dayData}\n          </Text>\n        </View>\n        <ScrollView style={{ width, height: height * 0.8 }}>\n          {value.item.events.map((event: eventType) => (\n            <Pressable\n              key={`Calendar_Event_${event.id}`}\n              onPress={() => {\n                dispatch(addEventSlice.actions.setIsEditing(true));\n                dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n                dispatch(addEventSlice.actions.setSelectedEvent(event));\n              }}\n            >\n              <Text style={{ fontSize: 10 }}>{event.name}</Text>\n            </Pressable>\n          ))}\n        </ScrollView>\n      </Pressable>\n    );\n  }\n  return (\n    <View\n      style={{\n        width,\n        height,\n        borderWidth: 1,\n        borderTopWidth: value.index < 7 ? 2 : 1,\n        borderColor: Colors.lightGray,\n      }}\n    />\n  );\n}\n\nfunction MonthView({ width, height }: { width: number; height: number }) {\n  const daysInWeek: { DOW: string; id: string }[] = [\n    { DOW: 'Sun', id: createUUID() },\n    { DOW: 'Mon', id: createUUID() },\n    { DOW: 'Tue', id: createUUID() },\n    { DOW: 'Wen', id: createUUID() },\n    { DOW: 'Thu', id: createUUID() },\n    { DOW: 'Fri', id: createUUID() },\n    { DOW: 'Sat', id: createUUID() },\n  ];\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const selectedDate: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  const monthData = useSelector((state: RootState) => state.monthData);\n  const { fontScale } = useWindowDimensions();\n\n  const dispatch = useDispatch();\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  function getMonthData(selectedDate: Date) {\n    // Check if this month\n    const lastDay = new Date(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth() + 1,\n      0,\n    );\n    const firstDayWeek = findFirstDayinMonth(selectedDate);\n    const monthDataResult: monthDataType[] = [];\n    for (let index = 0; index < 42; index += 1) {\n      if (index >= firstDayWeek && index - firstDayWeek < lastDay.getDate()) {\n        // In the current month\n        const events: eventType[] = []; // The result events of that day\n\n        // Check is the current date\n        const checkStart: Date = new Date(\n          selectedDate.getFullYear(),\n          selectedDate.getMonth(),\n          index - firstDayWeek + 1,\n          0,\n          0,\n        );\n        const checkEnd: Date = new Date(\n          selectedDate.getFullYear(),\n          selectedDate.getMonth(),\n          index - firstDayWeek + 2,\n          0,\n          0,\n        );\n        for (\n          let indexEvent = 0;\n          indexEvent < currentEvents.length;\n          indexEvent += 1\n        ) {\n          const event: eventType = currentEvents[indexEvent]; // Event to be checked\n\n          const startTimeDate = new Date(event.startTime); // String to date\n          const endTimeDate = new Date(event.endTime); // String to date\n\n          // First check if starts before date and ends after or on day\n          if (startTimeDate <= checkStart && endTimeDate > checkStart) {\n            events.push(event);\n          } else if (startTimeDate > checkStart && startTimeDate < checkEnd) {\n            // Second check if starts on day\n            events.push(event);\n          }\n        }\n        monthDataResult.push({\n          showing: true,\n          dayData: index - firstDayWeek + 1,\n          id: createUUID(),\n          events,\n        });\n      } else {\n        monthDataResult.push({\n          showing: false,\n          dayData: 0,\n          id: createUUID(),\n          events: [],\n        });\n      }\n    }\n    dispatch(monthDataSlice.actions.setMonthData(monthDataResult));\n  }\n\n  useEffect(() => {\n    getMonthData(new Date(selectedDate));\n  }, [selectedDate, currentEvents]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View\n        style={{\n          height: (height - 20) / 7,\n          width,\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}\n        key=\"Calendar_Header\"\n      >\n        <View\n          style={{\n            flexDirection: 'row',\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            width: width * 0.9,\n          }}\n        >\n          <View\n            style={{\n              width: width * 0.9 * 0.6,\n              flexDirection: 'row',\n              marginRight: 'auto',\n            }}\n          >\n            <Text\n              numberOfLines={1}\n              adjustsFontSizeToFit\n              style={{ fontSize: 30 }}\n            >\n              {new Date(selectedDate).toLocaleString('en-us', {\n                month: 'long',\n              })}{' '}\n              {new Date(selectedDate).getFullYear()}\n            </Text>\n          </View>\n          {new Date(selectedDate).toDateString() !==\n          new Date().toDateString() ? (\n            <Pressable\n              style={{\n                width: width * 0.9 * 0.2,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n              onPress={() => {\n                dispatch(\n                  selectedDateSlice.actions.setSelectedDate(\n                    new Date().toISOString(),\n                  ),\n                );\n              }}\n            >\n              <Text style={{ color: 'black', fontSize: 12 / fontScale }}>\n                Today\n              </Text>\n            </Pressable>\n          ) : (\n            <View style={{ width: width * 0.9 * 0.2 }} />\n          )}\n          {/* This is left chevron */}\n          <Pressable\n            onPress={() => {\n              const d = new Date();\n              d.setFullYear(\n                new Date(selectedDate).getMonth() === 1\n                  ? new Date(selectedDate).getFullYear() - 1\n                  : new Date(selectedDate).getFullYear(),\n                new Date(selectedDate).getMonth() === 1\n                  ? 12\n                  : new Date(selectedDate).getMonth() - 1,\n                new Date(selectedDate).getDay(),\n              );\n              dispatch(\n                selectedDateSlice.actions.setSelectedDate(d.toISOString()),\n              );\n            }}\n            style={{ marginTop: 'auto', marginBottom: 'auto' }}\n          >\n            <ChevronLeft width={14} height={14} />\n          </Pressable>\n          {/* This is right chevron */}\n          <Pressable\n            onPress={() => {\n              const d = new Date();\n              d.setFullYear(\n                new Date(selectedDate).getMonth() === 12\n                  ? new Date(selectedDate).getFullYear() + 1\n                  : new Date(selectedDate).getFullYear(),\n                new Date(selectedDate).getMonth() === 12\n                  ? 1\n                  : new Date(selectedDate).getMonth() + 1,\n                new Date(selectedDate).getDay(),\n              );\n              dispatch(\n                selectedDateSlice.actions.setSelectedDate(d.toISOString()),\n              );\n            }}\n            style={{ marginTop: 'auto', marginBottom: 'auto' }}\n          >\n            <ChevronRight width={14} height={14} />\n          </Pressable>\n        </View>\n      </View>\n      <View style={{ width }} key=\"Calendar_Body\">\n        <View style={{ flexDirection: 'row' }}>\n          {daysInWeek.map(DOW => (\n            <View\n              key={`DOW_${DOW.id})}`}\n              style={{\n                width: width / 7,\n                height: 20,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Text style={{ color: 'black' }} selectable={false}>\n                {DOW.DOW}\n              </Text>\n            </View>\n          ))}\n        </View>\n        <FlatList\n          data={monthData}\n          renderItem={value => (\n            <CalendarCardView\n              width={width / 7}\n              height={(height - 20) / 7}\n              value={value}\n              calendarWidth={width}\n              key={`CalendarButton_${value.item.id}`}\n            />\n          )}\n          numColumns={7}\n          scrollEnabled={false}\n        />\n      </View>\n    </>\n  );\n}\n\nfunction TopView({ width, height }: { width: number; height: number }) {\n  const dispatch = useDispatch();\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        height,\n        width,\n      }}\n    >\n      <View\n        style={{\n          width:\n            width * 0.45 -\n            (width * 0.1 < height ? width * 0.15 : height + width * 0.025),\n          height,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={1}\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: currentBreakPoint === 0 ? height * 0.35 : height * 0.7,\n            width: width * 0.4,\n            height: currentBreakPoint === 0 ? height * 0.5 : height * 0.9,\n            color: Colors.white,\n            textAlign: 'center',\n            verticalAlign: 'middle',\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          Calendar\n        </Text>\n      </View>\n      <View style={{ width: width * 0.55 }}>\n        <View style={{ marginLeft: width * 0.05 }}>\n          <CalendarTypePicker\n            width={width * 0.5}\n            height={width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6}\n          />\n        </View>\n      </View>\n      <View\n        style={{ width: width * 0.1 < height * 0.6 ? width * 0.15 : height }}\n      >\n        <Pressable\n          onPress={() => {\n            dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n            dispatch(addEventSlice.actions.setIsEditing(false));\n            dispatch(addEventSlice.actions.setSelectedEvent(undefined));\n          }}\n          style={{\n            height: width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6,\n            width: width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            borderRadius: 50,\n            backgroundColor: '#7d7d7d',\n            shadowColor: '#000',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 1,\n            marginLeft: width * 0.025,\n            marginRight: width * 0.025,\n          }}\n        >\n          <AddIcon\n            width={width * 0.1 < height * 0.6 ? width * 0.05 : height * 0.4}\n            height={width * 0.1 < height * 0.6 ? width * 0.05 : height * 0.4}\n          />\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction MonthViewMain({ width, height }: { width: number; height: number }) {\n  const monthData = useSelector((state: RootState) => state.monthData);\n  const selectedDate: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  return (\n    <>\n      {/* Chosing between large mode with each day having expanded calendars and reduced mode with list of events on each day. */}\n      {width <= 519 ? (\n        <ScrollView\n          style={{\n            backgroundColor: Colors.white,\n            height,\n            width,\n          }}\n        >\n          <MonthView width={width} height={height * 0.8} />\n          {new Date(selectedDate).getDate() <= monthData.length ? (\n            <>\n              {monthData[new Date(selectedDate).getDate() - 1].events.map(\n                event => (\n                  <View key={event.id}>\n                    <Text>{event.name}</Text>\n                  </View>\n                ),\n              )}\n            </>\n          ) : null}\n        </ScrollView>\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.white,\n            height,\n            width,\n          }}\n        >\n          <MonthView width={width} height={height} />\n        </View>\n      )}\n    </>\n  );\n}\n\nexport default function Calendar() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { selectedCalendarMode, isShowingAddDate } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, [dispatch]);\n\n  // This is the main (only) process that updates the events\n  // In the month view month data is calculate but the events come from this hook and the month view is a decendant of this view.\n  useEffect(() => {\n    getEvents();\n    getClasses();\n  }, [selectedDate]);\n\n  // Fonts\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View>\n      <View style={{ height: height * 0.1, backgroundColor: Colors.darkGray }}>\n        {currentBreakPoint >= 1 ? null : (\n          <BackButton to=\"/\" style={{ zIndex: 100 }} />\n        )}\n        <TopView width={width} height={height * 0.1} />\n      </View>\n      <View style={{ height: height * 0.9 }}>\n        {selectedCalendarMode === calendarMode.month ? (\n          <View\n            style={{\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              backgroundColor: Colors.white,\n            }}\n          >\n            <MonthViewMain width={width} height={height * 0.9} />\n          </View>\n        ) : null}\n        {selectedCalendarMode === calendarMode.week ? (\n          <Week width={width * 1.0} height={height * 0.9} />\n        ) : null}\n        {selectedCalendarMode === calendarMode.day ? (\n          <View\n            style={{\n              width,\n              height: height * 0.9,\n              alignItems: 'center',\n              alignContent: 'center',\n              justifyContent: 'center',\n              backgroundColor: Colors.white,\n            }}\n          >\n            <DayView width={width * 0.9} height={height * 0.9} />\n          </View>\n        ) : null}\n      </View>\n      {isShowingAddDate ? (\n        <View\n          style={{\n            zIndex: 2,\n            position: 'absolute',\n            left: width * 0.05 + (width >= 576 ? width * 0.3 : 0) / 2,\n            top: height * 0.1,\n          }}\n        >\n          <AddEvent\n            width={width * 0.9 - (width >= 576 ? width * 0.3 : 0)}\n            height={height * 0.8}\n          />\n        </View>\n      ) : null}\n    </View>\n  );\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  GovernmentHandleFileSubmissions.tsx\n*/\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useNavigate } from 'react-router-native';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport { loadingStateEnum } from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\nimport getSubmissions from '../../../../Functions/sports/sportsFunctions';\n\nexport default function GovernmentHandleFileSubmissions({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const [currentMediaSubmissions, setCurrentMediaSubmissions] = useState<\n    mediaSubmissionType[]\n  >([]);\n  const [loadingSubmissionsState, setLoadingSubmissionsState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const navigate = useNavigate();\n\n  async function loadData() {\n    // sports functions\n    const result = await getSubmissions();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentMediaSubmissions(result.data);\n    }\n    setLoadingSubmissionsState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {loadingSubmissionsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <ProgressView width={0} height={0} />\n          <Text>loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingSubmissionsState === loadingStateEnum.success ? (\n            <View style={{ width, height, overflow: 'hidden' }}>\n              <Text>HandleFileSubmissions</Text>\n              <FlatList\n                data={currentMediaSubmissions}\n                renderItem={item => (\n                  <Pressable\n                    key={`Submission_${item.item.submissionId}_${createUUID()}`}\n                    onPress={() =>\n                      navigate(\n                        `/profile/government/sports/post/review/${item.item.submissionId}`,\n                      )\n                    }\n                    style={{ borderColor: 'black', borderWidth: 2 }}\n                  >\n                    <Text>{item.item.Title}</Text>\n                    <Text>Accepted: {item.item.accepted ? 'Yes' : 'No'}</Text>\n                    <Text>Reviewed: {item.item.reviewed ? 'Yes' : 'No'}</Text>\n                    <Text>{item.item.user}</Text>\n                  </Pressable>\n                )}\n              />\n            </View>\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { Button } from 'react-native-paper';\nimport GovernmentHandleFileSubmissions from './GovernmentHandleFileSubmissions';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getSports } from '../../../../Functions/sports/sportsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentSports() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [currentSports, setCurrentSports] = useState<sportType[]>([]);\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentSports(result.data);\n    }\n    setDataResult(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government/');\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n        <Text style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n          Government Sports\n        </Text>\n      </View>\n      <View style={{ height: height * 0.4 }}>\n        {dataResult === loadingStateEnum.loading ? (\n          <View\n            style={{\n              height: height * 0.4,\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView\n              width={height * 0.4 < width ? height * 0.1 : width * 0.4}\n              height={height * 0.4 < width ? height * 0.1 : width * 0.4}\n            />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {dataResult === loadingStateEnum.success ? (\n              <View>\n                {currentSports.map(item => (\n                  <Pressable\n                    onPress={() => {\n                      navigate(\n                        `/profile/government/sports/team/${item.name}/${item.id}`,\n                      );\n                    }}\n                    key={item.id}\n                  >\n                    <View>\n                      <Text>{item.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <View>\n                <Text>Error</Text>\n              </View>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ height: height * 0.1, overflow: 'hidden' }}>\n        <Button onPress={() => navigate('/profile/government/sports/create')}>\n          Create Sport\n        </Button>\n        <Button\n          onPress={() => navigate('/profile/government/sports/post/create')}\n        >\n          Create Post\n        </Button>\n      </View>\n      <GovernmentHandleFileSubmissions width={width} height={height * 0.4} />\n    </View>\n  );\n}\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, Pressable } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../../../../Redux/store';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport SVGXml from '../../../../UI/SVGXml/SVGXml';\n\nexport default function GovernmentCreateNewSport() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [sportName, setSportName] = useState<string>('');\n  const { siteId, sportsListId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const [svgData, setSvgData] = useState<string>('');\n  const [createSportLoadingState, setCreateSportLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const navigate = useNavigate();\n\n  async function createSport() {\n    setCreateSportLoadingState(loadingStateEnum.loading);\n    const newSportID: string = createUUID();\n    const data = {\n      fields: {\n        Title: '',\n        sportName,\n        sportId: newSportID,\n        sportSvg: svgData,\n      },\n    };\n    const listData = {\n      displayName: newSportID,\n      columns: [\n        {\n          name: 'teamName',\n          text: {},\n          required: true,\n        },\n        {\n          name: 'season',\n          number: {},\n          required: true,\n        },\n        {\n          name: 'teamId',\n          text: {},\n          required: true,\n          indexed: true,\n          enforceUniqueValues: true,\n        },\n        {\n          name: 'microsoftTeamId',\n          text: {},\n        },\n      ],\n      list: {\n        template: ' genericList',\n      },\n    };\n    const resultList = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n      'POST',\n      JSON.stringify(listData),\n    );\n    if (resultList.ok) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${sportsListId}/items`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateSportLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateSportLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setCreateSportLoadingState(loadingStateEnum.failed);\n    }\n  }\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/sports');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Create New Sport</Text>\n      <Text>Sport Name</Text>\n      <TextInput value={sportName} onChangeText={setSportName} />\n      <TextInput\n        value={svgData}\n        onChangeText={e => {\n          setSvgData(e);\n        }}\n        multiline\n        numberOfLines={25}\n      />\n      <SVGXml xml={svgData} width={100} height={100} />\n      <Pressable\n        onPress={() => {\n          if (sportName !== '' && svgData !== '') {\n            createSport();\n          }\n        }}\n      >\n        <Text>\n          {createSportLoadingState === loadingStateEnum.notStarted\n            ? 'Create'\n            : createSportLoadingState === loadingStateEnum.loading\n            ? 'Loading'\n            : createSportLoadingState === loadingStateEnum.success\n            ? 'Created Sport!'\n            : 'Failed to create sport.'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, Modal, TextInput } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport {\n  getSport,\n  getSportsTeams,\n} from '../../../../Functions/sports/sportsFunctions';\nimport { WarningIcon } from '../../../../UI/Icons/Icons';\nimport SVGXml from '../../../../UI/SVGXml/SVGXml';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nfunction SportsUpdateModel({\n  isPickingSvg,\n  setIsPickingSvg,\n  id,\n}: {\n  isPickingSvg: boolean;\n  setIsPickingSvg: (item: boolean) => void;\n  id: string;\n}) {\n  const [svgData, setSvgData] = useState<string>('');\n  const [listId, setListId] = useState<string>('');\n  const [getSportState, setGetSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [updateSportState, setUpdateSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  async function updateSport() {\n    setUpdateSportState(loadingStateEnum.loading);\n    const updateData = {\n      fields: {\n        sportSvg: svgData,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.sportsListId}/items/${listId}`,\n      'PATCH',\n      JSON.stringify(updateData),\n    );\n    if (result.ok) {\n      setUpdateSportState(loadingStateEnum.success);\n    } else {\n      const data = await result.json();\n      setUpdateSportState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadSport() {\n    const result = await getSport(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined &&\n      result.listId !== undefined\n    ) {\n      setListId(result.listId);\n      setSvgData(result.data.svgData);\n      setGetSportState(loadingStateEnum.success);\n    } else {\n      setGetSportState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadSport();\n  }, []);\n\n  return (\n    <Modal\n      visible={isPickingSvg}\n      animationType=\"slide\"\n      style={{ backgroundColor: Colors.white }}\n    >\n      {getSportState === loadingStateEnum.loading ? (\n        <View>\n          <Text>Loading</Text>\n          <Pressable onPress={() => setIsPickingSvg(false)}>\n            <Text>Dismiss</Text>\n          </Pressable>\n        </View>\n      ) : (\n        <>\n          {getSportState === loadingStateEnum.success ? (\n            <View>\n              <Text>Svg</Text>\n              <View style={{ width: 100, height: 100, overflow: 'hidden' }}>\n                <SVGXml xml={svgData} width={100} height={100} />\n              </View>\n              <TextInput\n                value={svgData}\n                onChangeText={e => {\n                  setSvgData(e);\n                }}\n                multiline\n                numberOfLines={25}\n              />\n              <Pressable onPress={() => updateSport()}>\n                <Text>\n                  {getTextState(updateSportState, { notStarted: 'Confirm' })}\n                </Text>\n              </Pressable>\n              <Pressable onPress={() => setIsPickingSvg(false)}>\n                <Text>Dismiss</Text>\n              </Pressable>\n            </View>\n          ) : (\n            <View>\n              <Text>Failed</Text>\n              <Pressable onPress={() => setIsPickingSvg(false)}>\n                <Text>Dismiss</Text>\n              </Pressable>\n            </View>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n}\n\nexport default function GovernmentSportsTeams() {\n  const { sport, id } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [currentTeams, setCurrentTeams] = useState<sportTeamType[]>([]);\n  const [deleteSportState, setDeleteSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const [isPickingSvg, setIsPickingSvg] = useState<boolean>(false);\n\n  async function deleteSport() {\n    setDeleteSportState(loadingStateEnum.loading);\n    const listResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${id}`,\n      'DELETE',\n    );\n    if (listResult.ok) {\n      const getSportResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.sportsListId\n        }/items?$expand=fields&$filter=fields/sportId%20eq%20'${id}'&$select=id`,\n      );\n      if (getSportResult.ok) {\n        const getSportData = await getSportResult.json();\n        if (getSportData.value.length === 1) {\n          const itemDeleteResult = await callMsGraph(\n            `https://graph.microsoft.com/v1.0/sites/${\n              store.getState().paulyList.siteId\n            }/lists/${store.getState().paulyList.sportsListId}/items/${\n              getSportData.value[0].id\n            }`,\n            'DELETE',\n          );\n          if (itemDeleteResult.ok) {\n            setDeleteSportState(loadingStateEnum.success);\n          } else {\n            setDeleteSportState(loadingStateEnum.failed);\n          }\n        } else {\n          setDeleteSportState(loadingStateEnum.failed);\n        }\n      } else {\n        setDeleteSportState(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteSportState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadData() {\n    if (id !== undefined) {\n      const result = await getSportsTeams(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setCurrentTeams(result.data);\n      }\n      setDataResult(result.result);\n    } else {\n      setDataResult(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government/sports')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>{sport} Teams</Text>\n      <Pressable\n        style={{ borderRadius: 15, backgroundColor: 'red' }}\n        onPress={() => {\n          if (\n            deleteSportState === loadingStateEnum.notStarted ||\n            deleteSportState === loadingStateEnum.failed\n          ) {\n            deleteSport();\n          }\n        }}\n      >\n        <View style={{ flexDirection: 'row', margin: 10 }}>\n          <WarningIcon width={14} height={14} />\n          <Text>\n            {deleteSportState === loadingStateEnum.loading\n              ? 'Loading'\n              : deleteSportState === loadingStateEnum.notStarted\n              ? 'Delete Sport'\n              : deleteSportState === loadingStateEnum.success\n              ? 'Sport Deleted'\n              : 'Failed To Delete Sport'}\n          </Text>\n        </View>\n      </Pressable>\n      <Pressable onPress={() => setIsPickingSvg(true)}>\n        <Text>Pick Svg</Text>\n      </Pressable>\n      {id !== undefined ? (\n        <SportsUpdateModel\n          isPickingSvg={isPickingSvg}\n          setIsPickingSvg={setIsPickingSvg}\n          id={id}\n        />\n      ) : null}\n      <View>\n        {dataResult === loadingStateEnum.loading ? (\n          <View>\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {dataResult === loadingStateEnum.success ? (\n              <FlatList\n                data={currentTeams}\n                renderItem={item => (\n                  <Pressable\n                    key={`TeamBlock_${item.item.teamId}`}\n                    onPress={() =>\n                      navigate(\n                        `/profile/government/sports/team/${sport}/${id}/${item.item.teamId}`,\n                      )\n                    }\n                  >\n                    <Text style={{ margin: 10 }}>{item.item.teamName}</Text>\n                  </Pressable>\n                )}\n              />\n            ) : (\n              <View>\n                <Text>Error</Text>\n              </View>\n            )}\n          </>\n        )}\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate(`/profile/government/sports/team/${sport}/${id}/create`)\n        }\n      >\n        <Text>Create New Team</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { loadingStateEnum } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function getUserMicrosoftFiles(\n  path: string,\n): Promise<{ result: loadingStateEnum; data?: microsoftFileType[] }> {\n  const result = await callMsGraph(path);\n  if (result.ok) {\n    const data = await result.json();\n    const newFiles: microsoftFileType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      newFiles.push({\n        name: data.value[index].name,\n        id: data.value[index].id,\n        lastModified: data.value[index].lastModifiedDateTime,\n        folder: data.value[index].folder !== undefined,\n        parentDriveId: data.value[index].parentReference.driveId,\n        parentPath: data.value[index].parentReference.path,\n        itemGraphPath: data.value[index].folder === undefined ? path : 'FOLDER',\n        callPath: `https://graph.microsoft.com/v1.0/me/drives/${data.value[index].parentReference.driveId}/items/${data.value[index].id}`,\n        type:\n          data.value[index].folder === undefined\n            ? data.value[index].file.mimeType\n            : 'folder',\n      });\n    }\n    return { result: loadingStateEnum.success, data: newFiles };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getUserTeams(): Promise<\n  | { result: loadingStateEnum.success; data: teamsGroupType[] }\n  | { result: loadingStateEnum.failed }\n> {\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/joinedTeams',\n  ); // TODO make sure this works on live tenancy\n  if (result.ok) {\n    const data = await result.json();\n    const newData: teamsGroupType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (data.value[index] !== undefined) {\n        newData.push({\n          teamName: data.value[index].displayName,\n          teamId: data.value[index].id,\n          teamDescription: data.value[index].description,\n        });\n      }\n    }\n    return { result: loadingStateEnum.success, data: newData };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Pressable,\n  View,\n  Text,\n  TextInput,\n  ScrollView,\n  FlatList,\n} from 'react-native';\nimport Picker from './Pickers/Picker';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport MimeTypeIcon from './Icons/MimeTypeIcon';\nimport createUUID from '../Functions/ultility/createUUID';\nimport {\n  getUserMicrosoftFiles,\n  getUserTeams,\n} from '../Functions/microsoftFilePickerFunctions';\nimport { Colors, loadingStateEnum } from '../types';\nimport ProgressView from './ProgressView';\n\nenum MicrosoftUploadModeType {\n  ShareLink,\n  Personal,\n  Site,\n}\n\nexport default function ({\n  onSetIsShowingUpload,\n  onSetIsShowingMicrosoftUpload,\n  onSelectedFile,\n  height,\n  width,\n}: {\n  height: number;\n  width: number;\n  onSetIsShowingUpload?: (item: boolean) => void | undefined;\n  onSetIsShowingMicrosoftUpload?: (item: boolean) => void | undefined;\n  onSelectedFile: (item: microsoftFileType) => void;\n}) {\n  const [usersTeams, setUsersTeams] = useState<teamsGroupType[]>([]);\n  const [selectedMicrosoftUploadMode, setSelectedMicrosoftUploadMode] =\n    useState<MicrosoftUploadModeType>(MicrosoftUploadModeType.Personal);\n  const [shareLinkString, setShareLinkString] = useState<string>('');\n\n  async function loadUserTeams() {\n    const result = await getUserTeams();\n    if (result.result === loadingStateEnum.success) {\n      setUsersTeams(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadUserTeams();\n  }, []);\n\n  async function getShareFile(shareLink: string) {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/shares/${shareLink}/driveItem?$select=content.downloadUrl`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      onSelectedFile({\n        name: '',\n        id: '',\n        lastModified: '',\n        folder: false,\n        parentDriveId: '',\n        parentPath: '',\n        itemGraphPath: '',\n        callPath: '',\n        type: '',\n      });\n    }\n  }\n\n  return (\n    <View style={{ height, width }}>\n      <View style={{ flexDirection: 'row' }}>\n        <Text style={{ textAlign: 'left' }}>Upload File From Microsoft</Text>\n        {onSetIsShowingMicrosoftUpload === undefined ||\n        onSetIsShowingUpload === undefined ? null : (\n          <Pressable\n            onPress={() => {\n              onSetIsShowingUpload(false);\n              onSetIsShowingMicrosoftUpload(false);\n            }}\n          >\n            <View>\n              <Text>Back</Text>\n            </View>\n          </Pressable>\n        )}\n      </View>\n      <View>\n        <View style={{ width }}>\n          <Picker\n            selectedIndex={\n              selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal\n                ? 0\n                : selectedMicrosoftUploadMode ===\n                  MicrosoftUploadModeType.ShareLink\n                ? 1\n                : 2\n            }\n            onSetSelectedIndex={(item: number) => {\n              item === 0\n                ? setSelectedMicrosoftUploadMode(\n                    MicrosoftUploadModeType.Personal,\n                  )\n                : item === 1\n                ? setSelectedMicrosoftUploadMode(\n                    MicrosoftUploadModeType.ShareLink,\n                  )\n                : setSelectedMicrosoftUploadMode(MicrosoftUploadModeType.Site);\n            }}\n            width={width}\n            height={30}\n          >\n            <Text style={{ margin: 0, padding: 0 }}>Personal</Text>\n            <Text style={{ margin: 0, padding: 0 }}>Link</Text>\n            <Text style={{ margin: 0, padding: 0 }}>Teams</Text>\n          </Picker>\n        </View>\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal ? (\n          <PersonalBlock\n            height={height}\n            width={width}\n            onSelectedFile={onSelectedFile}\n          />\n        ) : null}\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.ShareLink ? (\n          <View>\n            <View>\n              <Text>Share Link</Text>\n              <TextInput\n                placeholder=\"Share Link\"\n                value={shareLinkString}\n                onChangeText={e => {\n                  setShareLinkString(e);\n                }}\n              />\n            </View>\n            <Pressable\n              onPress={() => {\n                // TO DO make this work\n                let base64Value = btoa(shareLinkString);\n                base64Value.replace('/', '_');\n                base64Value.replace('+', '-');\n                base64Value.trimEnd();\n                base64Value = `u!${base64Value}`;\n                getShareFile(base64Value);\n              }}\n            >\n              <Text>Submit</Text>\n            </Pressable>\n          </View>\n        ) : null}\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.Site ? (\n          <TeamsBlock userTeams={usersTeams} height={height} />\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nenum teamFileMode {\n  team,\n  channel,\n  file,\n}\n\nfunction TeamsBlock({\n  userTeams,\n  height,\n}: {\n  userTeams: teamsGroupType[];\n  height: number;\n}) {\n  const [selectedTeamFileMode, setSelectedTeamFileMode] =\n    useState<teamFileMode>(teamFileMode.team);\n  return (\n    <FlatList\n      data={userTeams}\n      renderItem={team => (\n        <View>\n          {team.item.teamName !== 'Student Password Policy' &&\n          team.item.teamName !== \"St Paul's High School\" &&\n          team.item.teamName !== 'Adobe_Student' &&\n          team.item.teamName !== 'O365 Student A3 License Assignment' &&\n          team.item.teamName !== 'Student' ? (\n            <View>\n              <Text>{team.item.teamName}</Text>\n            </View>\n          ) : null}\n        </View>\n      )}\n      style={{ height: height * 0.8 }}\n    />\n  );\n}\n\nfunction PersonalBlock({\n  height,\n  width,\n  onSelectedFile,\n}: {\n  height: number;\n  width: number;\n  onSelectedFile: (item: microsoftFileType) => void;\n}) {\n  const [usersFiles, setUsersFies] = useState<microsoftFileType[]>([]);\n  const [microsoftPath, setMicrosoftPath] = useState<string>(\n    'https://graph.microsoft.com/v1.0/me/drive/root/children',\n  );\n  const [fileBackAvaliable, setFilesBackAvaliable] = useState<boolean>(false);\n  const [getFilesState, setGetFilesState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadGetUserMicrosoftFiles(path: string) {\n    setGetFilesState(loadingStateEnum.loading);\n    const result = await getUserMicrosoftFiles(path);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setUsersFies(result.data);\n      setGetFilesState(loadingStateEnum.success);\n    } else {\n      setGetFilesState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadGetUserMicrosoftFiles(microsoftPath);\n  }, []);\n\n  return (\n    <ScrollView style={{ height: height - 20 }}>\n      {fileBackAvaliable ? (\n        <Pressable\n          onPress={() => {\n            const microsftPathArray = microsoftPath.split('/');\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            let outputString = '';\n            for (let index = 0; index < microsftPathArray.length; index += 11) {\n              outputString += `${microsftPathArray[index]}/`;\n            }\n            outputString += '/items/root/children';\n            setMicrosoftPath(outputString);\n            loadGetUserMicrosoftFiles(outputString);\n            setFilesBackAvaliable(false);\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n      ) : null}\n      <>\n        {getFilesState === loadingStateEnum.loading ? (\n          <View\n            style={{\n              width,\n              height,\n              backgroundColor: Colors.white,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView width={14} height={14} />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {getFilesState === loadingStateEnum.success ? (\n              <FlatList\n                data={usersFiles}\n                renderItem={file => (\n                  <Pressable\n                    onPress={() => {\n                      if (file.item.folder) {\n                        setMicrosoftPath(\n                          `https://graph.microsoft.com/v1.0/drives/${file.item.parentDriveId}/items/${file.item.id}/children`,\n                        );\n                        loadGetUserMicrosoftFiles(\n                          `https://graph.microsoft.com/v1.0/drives/${file.item.parentDriveId}/items/${file.item.id}/children`,\n                        );\n                        setFilesBackAvaliable(true);\n                      } else {\n                        onSelectedFile(file.item);\n                      }\n                    }}\n                    key={`Users_${file.item.id}_${createUUID()}`}\n                  >\n                    <View style={{ flexDirection: 'row', margin: 5 }}>\n                      <MimeTypeIcon\n                        width={20}\n                        height={20}\n                        mimeType={file.item.type}\n                      />\n                      <Text style={{ padding: 0, margin: 0 }}>\n                        {file.item.name}\n                      </Text>\n                    </View>\n                  </Pressable>\n                )}\n              />\n            ) : (\n              <Text>Failed to load</Text>\n            )}\n          </>\n        )}\n      </>\n    </ScrollView>\n  );\n}\n","import {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { convertYearToSchoolYear } from '../../../../Functions/calendar/calendarFunctions';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n} from '../../../../types';\nimport store, { RootState } from '../../../../Redux/store';\nimport { getTeams } from '../../../../Functions/microsoftGroupsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\nimport MicrosoftFilePicker from '../../../../UI/MicrosoftFilePicker';\nimport { CloseIcon } from '../../../../UI/Icons/Icons';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\n\nexport default function GovernmentCreateNewTeam() {\n  const { sport, id, teamId } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const navigate = useNavigate();\n\n  const [createTeamLoadingState, setCreateTeamLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [teamDataState, setTeamDataState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [isCreatingTeam, setIsCreatingTeam] = useState<boolean>(true);\n\n  // Team Data\n  const [teamName, setTeamName] = useState<string>('');\n  const [season, setSeason] = useState<number>(new Date().getFullYear());\n  const [teamListItemId, setTeamListItemId] = useState<string>('');\n\n  const [teamsState, setTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [teams, setTeams] = useState<groupType[]>([]);\n  const [teamsNextLink, setTeamsNextLink] = useState<undefined | string>(\n    undefined,\n  );\n  const [selectedMicrosoftTeam, setSelectedMicrosoftTeam] = useState<\n    groupType | undefined\n  >(undefined);\n  const [isSelectingFile, setIsSelectingFile] = useState<boolean>(false);\n  const [selectedFile, setSelectedFile] = useState<string>('');\n\n  async function loadMicrosftTeams() {\n    const result = await getTeams(\n      \"https://graph.microsoft.com/v1.0/groups?$filter=resourceProvisioningOptions/Any(x:x%20eq%20'Team')\",\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setTeams(result.data);\n      setTeamsNextLink(result.nextLink);\n    }\n    setTeamsState(result.result);\n  }\n\n  async function updateTeam() {\n    // This function will also create a team\n    setCreateTeamLoadingState(loadingStateEnum.loading);\n    if (!isCreatingTeam) {\n      let data: object = {\n        fields: {\n          teamName,\n          season,\n        },\n      };\n      if (selectedMicrosoftTeam !== undefined) {\n        data = {\n          fields: {\n            teamName,\n            season,\n            microsoftTeamId: selectedMicrosoftTeam.id,\n          },\n        };\n      }\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items/${teamListItemId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateTeamLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTeamLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      const newTeamId = createUUID();\n      let data: object = {\n        fields: {\n          Title: '',\n          teamName,\n          season,\n          teamId: newTeamId,\n        },\n      };\n      if (selectedMicrosoftTeam !== undefined) {\n        data = {\n          fields: {\n            teamName,\n            season,\n            teamId: newTeamId,\n            microsoftTeamId: selectedMicrosoftTeam.id,\n          },\n        };\n      }\n      const listData = {\n        displayName: newTeamId,\n        columns: [\n          {\n            name: 'playerId', // This is any member of the rester\n            text: {},\n            required: true,\n            indexed: true,\n            enforceUniqueValues: true,\n          },\n          {\n            name: 'position',\n            text: {},\n          },\n          {\n            name: 'playerNumber',\n            text: {},\n          },\n          {\n            name: 'posts',\n            text: { allowMultipleLines: true },\n          },\n          {\n            name: 'imageShareId',\n            text: {},\n          },\n        ],\n        list: {\n          template: ' genericList',\n        },\n      };\n\n      const batchData = {\n        requests: [\n          {\n            id: '1',\n            method: 'POST',\n            url: `/sites/${siteId}/lists/${id}/items`,\n            body: data,\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n          {\n            id: '2',\n            method: 'POST',\n            dependsOn: ['1'],\n            url: `/sites/${siteId}/lists`,\n            body: listData,\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        ],\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/$batch`,\n        'POST',\n        JSON.stringify(batchData),\n      );\n      if (result.ok) {\n        setCreateTeamLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTeamLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function deleteTeam() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items/${teamListItemId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n    } else {\n    }\n  }\n\n  async function getMicrosoftTeam(\n    getMicrosoftTeamId: string,\n  ): Promise<{ result: loadingStateEnum; data?: groupType }> {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${getMicrosoftTeamId}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.displayName,\n          id: data.id,\n        },\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n\n  async function getTeamData() {\n    setTeamDataState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items?expand=fields($select=teamId,teamName,season,microsoftTeamId)&$filter=fields/teamId%20eq%20'${teamId}'&$select=id`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length === 1) {\n        setTeamName(data.value[0].fields.teamName);\n        setSeason(data.value[0].fields.season);\n        setTeamListItemId(data.value[0].id);\n        if (data.value[0].fields.microsoftTeamId !== undefined) {\n          const teamResult = await getMicrosoftTeam(\n            data.value[0].fields.microsoftTeamId,\n          );\n          if (\n            teamResult.result === loadingStateEnum.success &&\n            teamResult.data !== undefined\n          ) {\n            setSelectedMicrosoftTeam(teamResult.data);\n            setTeamDataState(loadingStateEnum.success);\n          } else {\n            setTeamDataState(loadingStateEnum.failed);\n          }\n        } else {\n          setTeamDataState(loadingStateEnum.success);\n        }\n      } else {\n        setTeamDataState(loadingStateEnum.failed);\n      }\n    } else {\n      setTeamDataState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadMicrosftTeams();\n  }, []);\n\n  useEffect(() => {\n    if (teamId === 'create') {\n      setIsCreatingTeam(true);\n    } else {\n      setIsCreatingTeam(false);\n      getTeamData();\n    }\n  }, [teamId]);\n\n  return (\n    <>\n      {isCreatingTeam || teamDataState === loadingStateEnum.success ? (\n        <ScrollView\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() =>\n              navigate(`/profile/government/sports/team/${sport}/${id}`)\n            }\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <View>\n            <Text>\n              {isCreatingTeam\n                ? `Create a new ${sport} team`\n                : `Edit the ${teamName} ${sport} Team`}\n            </Text>\n          </View>\n          <View\n            style={{\n              margin: 10,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: '#FFFFFF',\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 5 }}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text>Team Name:</Text>\n                <TextInput\n                  value={teamName}\n                  onChangeText={text => setTeamName(text)}\n                  placeholder=\"Team Name\"\n                />\n              </View>\n              <View>\n                <Text>Season</Text>\n                <Text>{convertYearToSchoolYear(season)}</Text>\n                <TextInput\n                  keyboardType=\"numeric\"\n                  onChangeText={text => {\n                    if (text === '') {\n                      setSeason(0);\n                    } else {\n                      setSeason(parseFloat(text));\n                    }\n                  }}\n                  value={season.toString()}\n                  maxLength={10} // setting limit of input\n                />\n              </View>\n            </View>\n          </View>\n          <View\n            style={{\n              height: height * 0.5,\n              margin: 10,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: '#FFFFFF',\n              borderRadius: 15,\n            }}\n          >\n            <View\n              style={{\n                margin: 10,\n                shadowColor: 'black',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.8,\n                shadowRadius: 10,\n                backgroundColor: '#FFFFFF',\n                borderRadius: 15,\n              }}\n            >\n              <View style={{ margin: 5 }}>\n                <Text>Selected Team</Text>\n                {selectedMicrosoftTeam !== undefined ? (\n                  <Pressable\n                    onPress={() => {\n                      setSelectedMicrosoftTeam(undefined);\n                    }}\n                  >\n                    <Text>{selectedMicrosoftTeam.name}</Text>\n                  </Pressable>\n                ) : (\n                  <Text>NO TEAM SELECTED</Text>\n                )}\n              </View>\n            </View>\n            <View style={{ marginLeft: 5, marginRight: 5 }}>\n              <FlatList\n                data={teams}\n                renderItem={team => (\n                  <>\n                    {team.item.id !== selectedMicrosoftTeam?.id ? (\n                      <Pressable\n                        key={`Team_${team.item.id}_${createUUID()}`}\n                        onPress={() => {\n                          setSelectedMicrosoftTeam(team.item);\n                        }}\n                      >\n                        <Text>{team.item.name}</Text>\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              />\n            </View>\n          </View>\n          {selectedMicrosoftTeam === undefined ? (\n            <View>\n              <Text>Select a team in order to get a roster</Text>\n            </View>\n          ) : (\n            <>\n              {isCreatingTeam || teamId === undefined ? (\n                <View>\n                  <Text>\n                    Please Create the team and return later to finish the roster\n                  </Text>\n                </View>\n              ) : (\n                <View>\n                  <Text>Roster</Text>\n                  <RosterBlock\n                    microsoftTeamId={selectedMicrosoftTeam.id}\n                    width={100}\n                    height={100}\n                    teamId={teamId}\n                    selectedFile={selectedFile}\n                    setIsSelectingFile={setIsSelectingFile}\n                    setSelectedFile={setSelectedFile}\n                    isSelectingFile={isSelectingFile}\n                  />\n                </View>\n              )}\n            </>\n          )}\n\n          <Pressable\n            style={{\n              margin: 10,\n              backgroundColor: 'red',\n              borderRadius: 15,\n              zIndex: -100,\n            }}\n            onPress={() => deleteTeam()}\n          >\n            <Text style={{ margin: 10 }}>Delete Team</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              if (createTeamLoadingState === loadingStateEnum.notStarted) {\n                updateTeam();\n              } else if (createTeamLoadingState === loadingStateEnum.failed) {\n                setCreateTeamLoadingState(loadingStateEnum.notStarted);\n              }\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {createTeamLoadingState === loadingStateEnum.notStarted\n                ? isCreatingTeam\n                  ? 'CREATE TEAM'\n                  : 'UPDATE TEAM'\n                : createTeamLoadingState === loadingStateEnum.loading\n                ? 'LOADING'\n                : createTeamLoadingState === loadingStateEnum.success\n                ? 'SUCCESS'\n                : 'FAILED'}\n            </Text>\n          </Pressable>\n        </ScrollView>\n      ) : (\n        <>\n          {teamDataState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView width={width * 0.1} height={height * 0.1} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              <Pressable\n                onPress={() => {\n                  navigate(`/profile/government/sports/team/${sport}/${id}`);\n                }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n      {isSelectingFile ? (\n        <RosterSelectFile\n          setIsSelectingFile={setIsSelectingFile}\n          setSelectedFile={setSelectedFile}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction RosterBlock({\n  microsoftTeamId,\n  width,\n  height,\n  teamId,\n  setIsSelectingFile,\n  selectedFile,\n  isSelectingFile,\n  setSelectedFile,\n}: {\n  microsoftTeamId: string;\n  width: number;\n  height: number;\n  teamId: string;\n  selectedFile: string;\n  setSelectedFile: (item: string) => void;\n  isSelectingFile: boolean;\n  setIsSelectingFile: (item: boolean) => void;\n}) {\n  const [membersState, setMembersState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [members, setMembers] = useState<governmentRosterType[]>([]);\n\n  async function getMembers() {\n    const teamResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${teamId}/items?$expand=fields($select=playerId,position,playerNumber,posts,imageShareId)&$select=id`,\n    );\n    if (teamResult.ok) {\n      const teamResultData = await teamResult.json();\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/teams/${microsoftTeamId}/members`,\n      );\n      if (result.ok) {\n        const data = await result.json();\n        const users: microsoftUserType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          users.push({\n            id: data.value[index].userId,\n            displayName: data.value[index].displayName,\n          });\n        }\n        const rosters: governmentRosterType[] = [];\n        for (\n          let teamIndex = 0;\n          teamIndex < teamResultData.value.length;\n          teamIndex += 1\n        ) {\n          const userData = users.findIndex(e => {\n            return e.id === teamResultData.value[teamIndex].fields.playerId;\n          });\n          if (userData !== -1) {\n            rosters.push({\n              name: users[userData].displayName,\n              id: teamResultData.value[teamIndex].fields.playerId,\n              listItemId: teamResultData.value[teamIndex].id,\n              imageShareId: teamResultData.value[teamIndex].fields.imageShareId,\n              position: teamResultData.value[teamIndex].fields.position,\n              playerNumber: teamResultData.value[teamIndex].fields.playerNumber,\n              posts:\n                teamResultData.value[teamIndex].fields.posts !== undefined\n                  ? JSON.parse(\n                      teamResultData.value[teamIndex].fields.playerNumber,\n                    )\n                  : undefined,\n            });\n            const save = users[0];\n            users[0] = users[userData];\n            users[userData] = save;\n            users.shift();\n          }\n        }\n\n        for (let index = 0; index < users.length; index += 1) {\n          rosters.push({\n            name: users[index].displayName,\n            id: users[index].id,\n          });\n        }\n        setMembers(rosters);\n        setMembersState(loadingStateEnum.success);\n      } else {\n        setMembersState(loadingStateEnum.failed);\n      }\n    } else {\n      setMembersState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getMembers();\n  }, []);\n\n  return (\n    <>\n      {membersState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={width * 0.1} height={height * 0.1} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {membersState === loadingStateEnum.success ? (\n            <View>\n              <FlatList\n                data={members}\n                renderItem={member => (\n                  <RosterBlockItem\n                    members={members}\n                    setMembers={setMembers}\n                    member={member}\n                    teamId={teamId}\n                    selectedFile={selectedFile}\n                    setIsSelectingFile={setIsSelectingFile}\n                    setSelectedFile={setSelectedFile}\n                    isSelectingFile={isSelectingFile}\n                  />\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction RosterBlockItem({\n  member,\n  members,\n  setMembers,\n  teamId,\n  setIsSelectingFile,\n  isSelectingFile,\n  selectedFile,\n  setSelectedFile,\n}: {\n  members: governmentRosterType[];\n  setMembers: (item: governmentRosterType[]) => void;\n  member: ListRenderItemInfo<governmentRosterType>;\n  teamId: string;\n  selectedFile: string;\n  setSelectedFile: (item: string) => void;\n  isSelectingFile: boolean;\n  setIsSelectingFile: (item: boolean) => void;\n}) {\n  const [rosterState, setRosterState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [callingSelectedFile, setIsCallingSelectedFile] =\n    useState<boolean>(false);\n  const [imageUrl, setImageUrl] = useState<string>('');\n\n  async function createMemberItem(member: governmentRosterType) {\n    const index = members.findIndex(e => {\n      return e.id === member.id;\n    });\n    if (index === -1) {\n      setRosterState(loadingStateEnum.failed);\n      return;\n    }\n    setRosterState(loadingStateEnum.loading);\n    const data = {\n      fields: {\n        playerNumber: member.playerNumber,\n        position: member.position,\n        playerId: member.id,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${teamId}/items`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      const save = members;\n      save[index].listItemId = data.id;\n      setMembers(save);\n      setRosterState(loadingStateEnum.success);\n    } else {\n      setRosterState(loadingStateEnum.failed);\n    }\n  }\n\n  async function updatePlayerData(member: governmentRosterType) {\n    if (member.listItemId !== undefined) {\n      setRosterState(loadingStateEnum.loading);\n      const data = {\n        fields: {\n          playerNumber: member.playerNumber,\n          position: member.position,\n          imageShareId: member.imageShareId,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${teamId}/items/${member.listItemId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setRosterState(loadingStateEnum.success);\n      } else {\n        setRosterState(loadingStateEnum.failed);\n      }\n    } else {\n      createMemberItem(member);\n    }\n  }\n\n  useEffect(() => {\n    if (callingSelectedFile) {\n      const save = members;\n      save[member.index].imageShareId = selectedFile;\n      setSelectedFile('');\n      setMembers(save);\n      updatePlayerData(save[member.index]);\n    }\n    if (isSelectingFile === false) {\n      setIsCallingSelectedFile(false);\n    }\n  }, [isSelectingFile, selectedFile]);\n\n  async function loadImage() {\n    if (member.item.imageShareId !== undefined) {\n      const result = await getFileWithShareID(member.item.imageShareId, 0);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.url &&\n        result.contentType === dataContentTypeOptions.image\n      ) {\n        setImageUrl(result.url);\n      } else {\n        setImageUrl('');\n      }\n    } else {\n      setImageUrl('');\n    }\n  }\n\n  useEffect(() => {\n    loadImage();\n  }, [member.item.imageShareId]);\n\n  return (\n    <View\n      key={`Member_${member.item.id}_${createUUID()}`}\n      style={{ margin: 5 }}\n    >\n      <View>\n        {rosterState === loadingStateEnum.loading ? (\n          <ProgressView width={14} height={14} />\n        ) : (\n          <>\n            {rosterState === loadingStateEnum.success ||\n            rosterState === loadingStateEnum.notStarted ? (\n              <View\n                style={{\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                  backgroundColor: 'green',\n                }}\n              />\n            ) : (\n              <View\n                style={{\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                  backgroundColor: 'red',\n                }}\n              />\n            )}\n          </>\n        )}\n      </View>\n      <Text>{member.item.name}</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Player Number:</Text>\n        <TextInput\n          value={member.item.playerNumber}\n          onChangeText={e => {\n            const save = members;\n            save[member.index].playerNumber = e;\n            setMembers([...save]);\n          }}\n          onFocus={() => {}}\n          onBlur={() => {\n            updatePlayerData(member.item);\n          }}\n        />\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Position:</Text>\n        <TextInput\n          value={member.item.position}\n          onChangeText={e => {\n            const save = members;\n            save[member.index].position = e;\n            setMembers([...save]);\n          }}\n          onBlur={() => {\n            updatePlayerData(member.item);\n          }}\n        />\n      </View>\n      {imageUrl !== '' ? (\n        <Image source={{ uri: imageUrl }} style={{ width: 100, height: 100 }} />\n      ) : null}\n      <Pressable\n        onPress={() => {\n          setIsSelectingFile(true);\n          setIsCallingSelectedFile(true);\n        }}\n      >\n        <Text>Choose Player Image</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nfunction RosterSelectFile({\n  setIsSelectingFile,\n  setSelectedFile,\n}: {\n  setIsSelectingFile: (item: boolean) => void;\n  setSelectedFile: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#ededed',\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setIsSelectingFile(false);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <View\n        style={{\n          height: height * 0.8,\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          backgroundColor: Colors.white,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          <MicrosoftFilePicker\n            height={height * 0.8 - 5}\n            width={width * 0.8 - 5}\n            onSelectedFile={async file => {\n              const data = {\n                type: 'view',\n                scope: 'organization',\n              };\n              const result = await callMsGraph(\n                `${file.callPath}/createLink`,\n                'POST',\n                JSON.stringify(data),\n              );\n              if (result.ok) {\n                const data = await result.json();\n                if (data.shareId !== undefined) {\n                  setSelectedFile(data.shareId);\n                  setIsSelectingFile(false);\n                } else {\n                  setIsSelectingFile(false);\n                }\n              } else {\n                setIsSelectingFile(false);\n              }\n            }}\n          />\n        </View>\n      </View>\n    </View>\n  );\n}\n","import { loadingStateEnum } from '../types';\n\nexport async function getYoutubeVideos(pageToken?: string | undefined): Promise<\n  | {\n      result: loadingStateEnum.success;\n      data: youtubeVideoType[];\n      nextPageToken?: undefined | string;\n    }\n  | { result: loadingStateEnum.failed }\n> {\n  const result = await fetch(\n    `https://www.googleapis.com/youtube/v3/playlistItems?playlistId=UU8HbRWjbR0xjOeE6OlQ1sLA&part=contentDetails,id,snippet${\n      pageToken ? `&pageToken=${pageToken}` : ''\n    }&key=AIzaSyAeyX34-ADpLxnfUIJk_osy5pgCvO3MtTY`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultData: youtubeVideoType[] = [];\n    for (let index = 0; index < data.items.length; index += 1) {\n      resultData.push({\n        thumbnail: data.items[index].snippet.thumbnails.high.url,\n        title: data.items[index].snippet.title,\n        videoId: data.items[index].contentDetails.videoId,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: resultData,\n      nextPageToken: data.nextPageToken,\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  FlatList,\n  Image,\n} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { SegmentedButtons } from 'react-native-paper';\nimport MicrosoftFilePicker from '../../../../UI/MicrosoftFilePicker';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum, postType } from '../../../../types';\nimport {\n  getSports,\n  getSportsTeams,\n} from '../../../../Functions/sports/sportsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\nimport { getYoutubeVideos } from '../../../../Functions/youtubeFunctions';\n\nfunction YoutubeVideosSelector({\n  onSelect,\n}: {\n  onSelect: (item: string) => void;\n}) {\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const [ytVideos, setytVideos] = useState<youtubeVideoType[]>([]);\n  const [ytState, setytState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [nextPage, setNextPage] = useState<string | undefined>(undefined);\n\n  async function loadData() {\n    const result = await getYoutubeVideos(nextPage);\n    if (result.result == loadingStateEnum.success) {\n      setytVideos([...ytVideos, ...result.data]);\n      setNextPage(result.nextPageToken);\n      setytState(loadingStateEnum.success);\n    } else {\n      setytState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <>\n      {ytState === loadingStateEnum.loading ? (\n        <View>\n          <ProgressView width={14} height={14} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {ytState === loadingStateEnum.success ? (\n            <FlatList\n              data={ytVideos}\n              renderItem={video => (\n                <Pressable\n                  onPress={() => {\n                    onSelect(video.item.videoId);\n                  }}\n                >\n                  <Image\n                    source={{ uri: video.item.thumbnail }}\n                    style={{ width, height: (width / 16) * 9 }}\n                  />\n                  <Text>{video.item.title}</Text>\n                </Pressable>\n              )}\n              style={{ width, height: 500 }}\n              onEndReached={() => loadData()}\n            />\n          ) : (\n            <View style={{ width, height: 500 }}>\n              <Text>Something Went Wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nexport default function GovernmentSportsTeamAddPost() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [fileId, setFileId] = useState<string>('');\n  const [postName, setPostName] = useState<string>('');\n  const [postSubmissionState, setPostSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const navigate = useNavigate();\n  const [selectedSportId, setSelectedSportId] = useState<string>('');\n  const [selectedTeamId, setSelectedTeamId] = useState<string>('');\n  const [postMode, setPostMode] = useState(postType.microsoftFile);\n\n  async function getShareLink(item: microsoftFileType) {\n    const itemPathArray = item.itemGraphPath.split('/');\n    if (itemPathArray[itemPathArray.length - 1] === 'children') {\n      const data = {\n        type: 'view',\n        scope: 'organization',\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/drives/${item.parentDriveId}/items/${item.id}/createLink`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        const dataOut = await result.json();\n        setFileId(dataOut.shareId);\n      } else {\n      }\n    }\n  }\n  async function createFileSubmission() {\n    if (fileId !== '' && selectedTeamId !== '') {\n      setPostSubmissionState(loadingStateEnum.loading);\n      const userIdResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/me',\n      );\n      if (userIdResult.ok) {\n        const userData = await userIdResult.json();\n        const submissionID = createUUID();\n        const data = {\n          fields: {\n            Title: postName,\n            fileId,\n            fileType: postMode, // This is the post mode Type\n            accepted: false,\n            user: userData.id,\n            timeCreated: new Date().toISOString(),\n            submissionId: submissionID,\n            reviewed: false,\n            selectedSportId,\n            selectedTeamId,\n          },\n        };\n        const result = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${\n            store.getState().paulyList.sportsSubmissionsListId\n          }/items`,\n          'POST',\n          JSON.stringify(data),\n        );\n        if (result.ok) {\n          setPostSubmissionState(loadingStateEnum.success);\n        } else {\n          setPostSubmissionState(loadingStateEnum.failed);\n        }\n      } else {\n        setPostSubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/sports');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Add Sports Team Post</Text>\n      <TextInput\n        value={postName}\n        onChangeText={e => {\n          setPostName(e);\n        }}\n      />\n      <PickSportTeam\n        height={400}\n        width={width}\n        onSelect={e => {\n          setSelectedSportId(e.sportId);\n          setSelectedTeamId(e.teamId);\n        }}\n        onBack={() => {\n          setSelectedSportId('');\n          setSelectedTeamId('');\n        }}\n      />\n      <SegmentedButtons\n        value={postMode.toString()}\n        onValueChange={e => setPostMode(parseInt(e))}\n        buttons={[\n          {\n            value: postType.microsoftFile.toString(),\n            label: 'Microsoft File',\n          },\n          {\n            value: postType.youtubeVideo.toString(),\n            label: 'Youtube Video',\n          },\n        ]}\n      />\n      {postMode == postType.microsoftFile ? (\n        <MicrosoftFilePicker\n          onSelectedFile={(item: microsoftFileType) => {\n            getShareLink(item);\n          }}\n          height={500}\n          width={width}\n        />\n      ) : null}\n      {postMode == postType.youtubeVideo ? (\n        <YoutubeVideosSelector onSelect={setFileId} />\n      ) : null}\n      {fileId !== '' ? (\n        <Pressable\n          onPress={() => {\n            if (\n              postSubmissionState === loadingStateEnum.notStarted &&\n              fileId !== '' &&\n              selectedTeamId !== ''\n            ) {\n              createFileSubmission();\n            }\n          }}\n        >\n          <Text>\n            {fileId !== '' && selectedTeamId !== '' ? 'Submit' : 'Select Team'}\n          </Text>\n        </Pressable>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.failed ? (\n        <Text>Failure</Text>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.success ? (\n        <Text>Success</Text>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nfunction PickSportTeam({\n  width,\n  height,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  onSelect: (item: { sportId: string; teamId: string }) => void;\n  onBack: () => void;\n}) {\n  const [currentSports, setCurrentSports] = useState<sportType[]>([]);\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedSport, setSelectedSport] = useState<sportType | undefined>(\n    undefined,\n  );\n  const [sportsTeams, setSportTeams] = useState<sportTeamType[]>([]);\n  const [sportTeamState, setSportTeamState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadData() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentSports(result.data);\n    }\n    setDataResult(result.result);\n  }\n\n  async function loadTeams() {\n    if (selectedSport !== undefined) {\n      setSportTeamState(loadingStateEnum.loading);\n      const result = await getSportsTeams(selectedSport.id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setSportTeams(result.data);\n      }\n      setSportTeamState(result.result);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    loadTeams();\n  }, [selectedSport]);\n\n  return (\n    <View style={{ width, height }}>\n      <>\n        {sportsTeams === undefined ||\n        sportTeamState === loadingStateEnum.notStarted ? (\n          <>\n            {dataResult === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.1 : height * 0.1}\n                  height={width < height ? width * 0.1 : height * 0.1}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {dataResult === loadingStateEnum.success ? (\n                  <>\n                    {currentSports.map((item, id) => (\n                      <Pressable\n                        key={id}\n                        onPress={() => setSelectedSport(item)}\n                      >\n                        <View>\n                          <Text>{item.name}</Text>\n                        </View>\n                      </Pressable>\n                    ))}\n                  </>\n                ) : (\n                  <View>\n                    <Text>Error</Text>\n                  </View>\n                )}\n              </>\n            )}\n          </>\n        ) : (\n          <>\n            {sportTeamState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.1 : height * 0.1}\n                  height={width < height ? width * 0.1 : height * 0.1}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {sportTeamState === loadingStateEnum.success &&\n                selectedSport !== undefined ? (\n                  <View>\n                    <Pressable\n                      onPress={() => {\n                        setSelectedSport(undefined);\n                        setSportTeamState(loadingStateEnum.notStarted);\n                        setSportTeams([]);\n                        onBack();\n                      }}\n                    >\n                      <Text>Back</Text>\n                    </Pressable>\n                    {sportsTeams.map((item, id) => (\n                      <Pressable\n                        key={id}\n                        onPress={() =>\n                          onSelect({\n                            sportId: selectedSport.id,\n                            teamId: item.teamId,\n                          })\n                        }\n                      >\n                        <View>\n                          <Text>{item.teamName}</Text>\n                        </View>\n                      </Pressable>\n                    ))}\n                  </View>\n                ) : (\n                  <View>\n                    <Text>Error</Text>\n                  </View>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </>\n    </View>\n  );\n}\n","import { View, Text, Image, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ResizeMode, Video } from 'expo-av';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\nimport store, { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n  postType,\n} from '../../../../types';\nimport SportsYoutube from '../../../../UI/SportsYoutube';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nfunction getDenyText(reviewed: boolean, accepted: boolean) {\n  if (!reviewed && !accepted) {\n    ('SubmissionDenied');\n  } else {\n    return 'Deny';\n  }\n}\n\nexport default function GovernmentReviewFileSubmission() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const { submissionID } = useParams();\n  const [dataURL, setDataURL] = useState<string>('');\n  const [dataContentType, setDataContentType] =\n    useState<dataContentTypeOptions>(dataContentTypeOptions.unknown);\n  const [currentSubmissionInfomration, setCurrentSubmissionInformation] =\n    useState<mediaSubmissionType | undefined>(undefined);\n  const navigate = useNavigate();\n\n  // Loading States\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [approveSubmissionState, setApproveSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [denySubmissionState, setDenySubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [deleteState, setDeleteState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function deleteSubmission(itemID: string) {\n    setDeleteState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.sportsSubmissionsListId\n      }/items/${itemID}`,\n      'DELETE',\n    ); // TO DO fix list ids\n    if (result.ok) {\n      // TO DO Check if submission has been approved before\n      // Remove from approved submissions\n      setDeleteState(loadingStateEnum.success);\n    } else {\n      setDeleteState(loadingStateEnum.failed);\n    }\n  }\n\n  async function getSubmissionInformation() {\n    if (submissionID !== undefined) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.sportsSubmissionsListId\n        }/items?expand=fields&filter=fields/submissionId%20eq%20'${submissionID}'`,\n      );\n      if (result.ok) {\n        const data = await result.json();\n        if (data.value !== undefined) {\n          if (data.value.length === 1) {\n            // All things are working\n            setCurrentSubmissionInformation({\n              Title: data.value[0].fields.Title,\n              user: data.value[0].fields.user,\n              submissionId: data.value[0].fields.submissionId,\n              accepted: data.value[0].fields.accepted,\n              fileId: data.value[0].fields.fileId,\n              fileType: data.value[0].fields.fileType,\n              itemID: data.value[0].id,\n              selectedSportId: data.value[0].fields.selectedSportId,\n              selectedTeamId: data.value[0].fields.selectedTeamId,\n              reviewed: data.value[0].fields.reviewed,\n            });\n            setLoadingState(loadingStateEnum.success);\n          } else {\n            setLoadingState(loadingStateEnum.failed);\n          }\n        } else {\n          setLoadingState(loadingStateEnum.failed);\n        }\n      } else {\n        setLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function approveSubmission() {\n    if (currentSubmissionInfomration) {\n      setApproveSubmissionState(loadingStateEnum.loading);\n      const data = {\n        requests: [\n          {\n            id: '1',\n            method: 'POST',\n            url: `/sites/${store.getState().paulyList.siteId}/lists/${\n              store.getState().paulyList.sportsApprovedSubmissionsListId\n            }/items`,\n            body: {\n              fields: {\n                Title: currentSubmissionInfomration.Title,\n                fileId: currentSubmissionInfomration.fileId,\n                fileType: currentSubmissionInfomration.fileType,\n                caption: currentSubmissionInfomration.Title,\n                submissionId: currentSubmissionInfomration.submissionId,\n                selectedSportId: currentSubmissionInfomration.selectedSportId,\n                selectedTeamId: currentSubmissionInfomration.selectedTeamId,\n              },\n            },\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n          {\n            id: '2',\n            method: 'PATCH',\n            url: `/sites/${store.getState().paulyList.siteId}/lists/${\n              store.getState().paulyList.sportsSubmissionsListId\n            }/items/${currentSubmissionInfomration.itemID}`,\n            body: {\n              fields: { accepted: true, reviewed: true },\n            },\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        ],\n      };\n      const result = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(data),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (result.ok) {\n        const newInformation = currentSubmissionInfomration;\n        newInformation.accepted = true;\n        newInformation.reviewed = true;\n        setCurrentSubmissionInformation(currentSubmissionInfomration);\n        setApproveSubmissionState(loadingStateEnum.success);\n      } else {\n        setApproveSubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function denySubmission() {\n    if (currentSubmissionInfomration) {\n      const data = {\n        fields: {\n          accepted: false,\n          reviewed: true,\n        },\n      };\n      setDenySubmissionState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `/sites/${store.getState().paulyList.siteId}/lists/${\n          store.getState().paulyList.sportsSubmissionsListId\n        }/items/${currentSubmissionInfomration.itemID}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setDenySubmissionState(loadingStateEnum.success);\n      } else {\n        setDenySubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function loadFile() {\n    if (currentSubmissionInfomration !== undefined) {\n      if (currentSubmissionInfomration.fileType === postType.microsoftFile) {\n        const result = await getFileWithShareID(\n          currentSubmissionInfomration.fileId,\n          0,\n        );\n        if (\n          result.result === loadingStateEnum.success &&\n          result.url !== undefined &&\n          result.contentType !== undefined\n        ) {\n          setDataURL(result.url);\n          setDataContentType(result.contentType);\n        }\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (submissionID !== undefined) {\n      getSubmissionInformation();\n    }\n  }, [submissionID]);\n\n  useEffect(() => {\n    loadFile();\n  }, [currentSubmissionInfomration]);\n\n  return (\n    <>\n      {loadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingState === loadingStateEnum.success &&\n          currentSubmissionInfomration !== undefined ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n              }}\n            >\n              <Pressable onPress={() => navigate('/profile/government/sports')}>\n                <Text>Back</Text>\n              </Pressable>\n              <Text>GovernmentReviewFileSubmission</Text>\n              {dataURL !== '' && (\n                <View>\n                  {dataContentType === dataContentTypeOptions.image ? (\n                    <Image\n                      height={100}\n                      style={{ height: 100 }}\n                      source={{ uri: dataURL }}\n                    />\n                  ) : null}\n                  {dataContentType === dataContentTypeOptions.video ? (\n                    <Video\n                      useNativeControls\n                      source={{ uri: dataURL }}\n                      resizeMode={ResizeMode.COVER}\n                      style={{\n                        width: width * 0.9,\n                        height: height * 0.4,\n                        alignSelf: 'stretch',\n                        marginLeft: width * 0.05,\n                        marginRight: width * 0.05,\n                      }}\n                      videoStyle={{ width: width * 0.9, height: height * 0.4 }}\n                    />\n                  ) : null}\n                </View>\n              )}\n              {currentSubmissionInfomration.fileType ===\n              postType.youtubeVideo ? (\n                <View style={{ height: ((width * 0.9) / 16) * 9 }}>\n                  <SportsYoutube\n                    videoId={currentSubmissionInfomration.fileId}\n                    width={width * 0.9}\n                  />\n                </View>\n              ) : null}\n              <Pressable\n                onPress={() => {\n                  if (currentSubmissionInfomration) {\n                    deleteSubmission(currentSubmissionInfomration.itemID);\n                  }\n                }}\n              >\n                <Text>Remove File Submission</Text>\n              </Pressable>\n              <Pressable\n                onPress={() => {\n                  approveSubmission();\n                }}\n              >\n                <Text>\n                  {approveSubmissionState === loadingStateEnum.loading\n                    ? 'Loading'\n                    : approveSubmissionState === loadingStateEnum.success ||\n                      approveSubmissionState === loadingStateEnum.notStarted\n                    ? currentSubmissionInfomration.reviewed\n                      ? currentSubmissionInfomration.accepted\n                        ? 'Submission Approved'\n                        : 'Approve'\n                      : 'Approve'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n              <Pressable onPress={() => denySubmission()}>\n                <Text>\n                  {getTextState(denySubmissionState, {\n                    success: getDenyText(\n                      currentSubmissionInfomration.reviewed,\n                      currentSubmissionInfomration.accepted,\n                    ),\n                    notStarted: getDenyText(\n                      currentSubmissionInfomration.reviewed,\n                      currentSubmissionInfomration.accepted,\n                    ),\n                  })}\n                </Text>\n              </Pressable>\n            </View>\n          ) : (\n            <View style={{ width, height }}>\n              <Pressable onPress={() => navigate('/profile/government/sports')}>\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../Redux/store';\nimport { Colors } from '../../../../types';\n\nexport default function GovernmentCalendar() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  return (\n    <View\n      style={{\n        width,\n        height,\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable onPress={() => navigate('/profile/government/')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Government Calendar</Text>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/schedule')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Schedule</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/timetable')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Timetables</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/dresscode')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Dress Code</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport { getSchedules } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\nexport default function GovernmentSchedule() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [loadedSchedules, setLoadedSchedules] = useState<scheduleType[]>([]);\n  const navigate = useNavigate();\n\n  async function loadSchedules() {\n    const result = await getSchedules();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setLoadedSchedules(result.data);\n    }\n    setLoadingState(result.result);\n  }\n\n  useEffect(() => {\n    loadSchedules();\n  }, []);\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government/calendar')}>\n          <Text>Back</Text>\n        </Pressable>\n        <View\n          style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Schedules</Text>\n        </View>\n      </View>\n      {loadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height: height * 0.8,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={15} height={15} />\n          <Text>Loading</Text>\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.success ? (\n        <View style={{ height: height * 0.8 }}>\n          {loadedSchedules.length >= 1 ? (\n            <FlatList\n              data={loadedSchedules}\n              renderItem={schedule => (\n                <Pressable\n                  style={{\n                    backgroundColor: Colors.white,\n                    shadowColor: 'black',\n                    shadowOffset: { width: 1, height: 1 },\n                    shadowOpacity: 1,\n                    shadowRadius: 5,\n                    margin: 10,\n                    marginBottom: 0,\n                    borderRadius: 15,\n                  }}\n                  onPress={() =>\n                    navigate(\n                      `/profile/government/calendar/schedule/${schedule.item.id}`,\n                    )\n                  }\n                  key={schedule.item.id}\n                >\n                  <Text style={{ margin: 10 }}>{schedule.item.properName}</Text>\n                </Pressable>\n              )}\n            />\n          ) : (\n            <Text>No Schedule</Text>\n          )}\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.failed ? <Text>Failure</Text> : null}\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/schedule/create')}\n        style={{\n          backgroundColor: Colors.white,\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n          marginLeft: 5,\n          marginRight: 5,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Create New</Text>\n      </Pressable>\n    </ScrollView>\n  );\n}\n","// Andrew Mainella\n// October 14 2023\n// Pauly\n// GovernmentTimetable.tsx\n//\n// An timetable selector that direcets to creating a new timetable or editing one.\n//\n\nimport { View, Text, Pressable } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport SelectTimetable from '../../../../Calendar/SelectTimetable';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors } from '../../../../../types';\n\nexport default function GovernmentTimetable() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government/calendar/')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Timetables</Text>\n      </View>\n      <View style={{ height: height * 0.85 }}>\n        <SelectTimetable governmentMode />\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate('/profile/government/calendar/timetable/create')\n        }\n      >\n        <Text>Create New</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, TextInput, Button, Pressable, Modal } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { TimePickerModal, he } from 'react-native-paper-dates';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Animated, {\n  interpolateColor,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\nimport ColorPicker, {\n  Preview,\n  Panel1,\n  HueSlider,\n  OpacitySlider,\n  Swatches,\n  RenderThumbProps,\n  InputWidget,\n} from 'reanimated-color-picker';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport store, { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport { CloseIcon, WarningIcon } from '../../../../../UI/Icons/Icons';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport { getSchedule } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\nfunction isValidHexaCode(input: string) {\n  // Define the regular expression pattern for a valid hexadecimal color code\n  // It matches either a 6-character or 3-character code, preceded by a #\n  const hexaPattern = /^#(?:[0-9a-fA-F]{3,4}){1,2}$/;\n\n  // Test the input against the pattern using the test() method\n  return hexaPattern.test(input);\n}\n\n// NOTE: period length cannot be longer than 20\nexport default function GovernmentSchedule() {\n  const { id } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [scheduleListId, setScheduleListId] = useState<string | undefined>(\n    undefined,\n  );\n\n  const [scheduleProperName, setScheduleProperName] = useState<string>('');\n  const [scheduleDescriptiveName, setScheduleDescriptiveName] =\n    useState<string>('');\n  const [newPeriods, setNewPeriods] = useState<periodType[]>([]);\n  const [color, setColor] = useState<string>('#ffffff');\n\n  const [isPickingColor, setIsPickingColor] = useState<boolean>(false);\n  const [isCreatingSchedule, setIsCreatingSchedule] = useState<boolean>(false);\n\n  const [createScheduleLoadingState, setCreateScheduleLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [loadScheduleState, setLoadScheduleState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [deleteState, setDeleteState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const navigate = useNavigate();\n  async function submitSchedule() {\n    setCreateScheduleLoadingState(loadingStateEnum.loading);\n    if (isCreatingSchedule) {\n      const data = {\n        fields: {\n          Title: scheduleProperName,\n          scheduleId: createUUID(),\n          scheduleProperName,\n          scheduleDescriptiveName,\n          scheduleColor: color,\n          scheduleData: JSON.stringify(newPeriods),\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.scheduleListId}/items`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateScheduleLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateScheduleLoadingState(loadingStateEnum.failed);\n      }\n    } else if (scheduleListId !== undefined) {\n      const data = {\n        fields: {\n          Title: scheduleProperName,\n          scheduleProperName,\n          scheduleDescriptiveName,\n          scheduleColor: color,\n          scheduleData: JSON.stringify(newPeriods),\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.scheduleListId\n        }/items/${scheduleListId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateScheduleLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateScheduleLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setCreateScheduleLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  async function deleteFunction() {\n    if (scheduleListId !== undefined) {\n      setDeleteState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.scheduleListId\n        }/items/${scheduleListId}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        setDeleteState(loadingStateEnum.success);\n      } else {\n        setDeleteState(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadFunction() {\n    if (id !== undefined) {\n      const result = await getSchedule(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.schedule !== undefined\n      ) {\n        setScheduleProperName(result.schedule.properName);\n        setScheduleDescriptiveName(result.schedule.descriptiveName);\n        setColor(result.schedule.color);\n        setNewPeriods(result.schedule.periods);\n        setScheduleListId(result.listItemId);\n      }\n      setLoadScheduleState(result.result);\n    } else {\n      setLoadScheduleState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (id === 'create') {\n      setIsCreatingSchedule(true);\n    } else {\n      loadFunction();\n    }\n  }, []);\n\n  return (\n    <>\n      {(isCreatingSchedule || loadScheduleState === loadingStateEnum.success) &&\n      deleteState !== loadingStateEnum.success ? (\n        <ScrollView\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/profile/government/calendar/schedule');\n            }}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <View\n            style={{\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Text>{isCreatingSchedule ? 'Create' : 'Edit'} Schedule</Text>\n          </View>\n          <View style={{ height: height * 0.2 }}>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Proper Name:</Text>\n              <TextInput\n                style={{ width }}\n                value={scheduleProperName}\n                onChangeText={setScheduleProperName}\n                placeholder=\"Proper Name ex. Schedule One\"\n              />\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Descriptive Name:</Text>\n              <TextInput\n                style={{ width }}\n                value={scheduleDescriptiveName}\n                onChangeText={setScheduleDescriptiveName}\n                placeholder=\"Descriptive Name ex. Regular Schedule\"\n              />\n            </View>\n            <View\n              style={{ margin: 5, borderRadius: 5, backgroundColor: '#FF6700' }}\n            >\n              <View style={{ margin: 10, flexDirection: 'row' }}>\n                <WarningIcon width={14} height={14} />\n                <Text>\n                  Keep descriptive name short as it is used in the calendar\n                  widget\n                </Text>\n              </View>\n            </View>\n          </View>\n          <Text>New Periods</Text>\n          <ScrollView style={{ height: height * 0.5 }}>\n            {newPeriods.map(period => (\n              <PeriodBlock\n                period={period}\n                periods={newPeriods}\n                onSetNewPeriods={out => {\n                  setNewPeriods([...out]);\n                }}\n              />\n            ))}\n          </ScrollView>\n          {newPeriods.length < 20 ? (\n            <Pressable\n              onPress={() => {\n                setNewPeriods([\n                  ...newPeriods,\n                  {\n                    startHour: new Date().getHours(),\n                    startMinute: new Date().getMinutes(),\n                    endHour: new Date().getHours(),\n                    endMinute: new Date().getMinutes(),\n                    id: createUUID(),\n                  },\n                ]);\n              }}\n            >\n              <Text>Add Period</Text>\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => setIsPickingColor(true)}\n            style={{\n              margin: 10,\n              backgroundColor: '#FFFFFF',\n              shadowColor: 'black',\n              shadowOffset: { width: 1, height: 1 },\n              shadowOpacity: 1,\n              shadowRadius: 5,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              <Text>Color</Text>\n              <View style={{ flexDirection: 'row', marginTop: 10 }}>\n                <View\n                  style={{\n                    width: 32.4,\n                    height: 32.4,\n                    backgroundColor: color,\n                    borderRadius: 7,\n                    borderWidth: 2,\n                    borderColor: Colors.black,\n                  }}\n                />\n                <Pressable style={{ marginLeft: 5 }}>\n                  <ColorPicker\n                    style={{ width: width - 77.4, height: 16.5 }}\n                    value={color}\n                    onComplete={e => setColor(e.hex)}\n                  >\n                    <InputWidget\n                      disableAlphaChannel\n                      defaultFormat=\"HEX\"\n                      formats={['HEX']}\n                      inputTitleStyle={{ display: 'none' }}\n                    />\n                  </ColorPicker>\n                </Pressable>\n                <Modal visible={isPickingColor} animationType=\"slide\">\n                  <View\n                    style={{\n                      alignContent: 'center',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      width,\n                      height,\n                    }}\n                  >\n                    <Pressable\n                      onPress={() => setIsPickingColor(false)}\n                      style={{\n                        position: 'absolute',\n                        top: height * 0.1,\n                        left: width * 0.1,\n                      }}\n                    >\n                      <CloseIcon width={14} height={14} />\n                    </Pressable>\n                    <ColorPicker\n                      style={{ width: width * 0.7 }}\n                      value={color}\n                      onComplete={e => setColor(e.hex)}\n                    >\n                      <View style={{ flexDirection: 'row' }}>\n                        <Preview\n                          hideText\n                          hideInitialColor\n                          style={{\n                            width: width * 0.1,\n                            height: height * 0.5,\n                            borderTopRightRadius: 0,\n                            borderBottomRightRadius: 0,\n                          }}\n                        />\n                        <View\n                          style={{\n                            borderTopRightRadius: 5,\n                            borderBottomRightRadius: 5,\n                            overflow: 'hidden',\n                          }}\n                        >\n                          <Panel1\n                            style={{\n                              width: width * 0.6,\n                              height: height * 0.5,\n                              borderRadius: 0,\n                            }}\n                            renderThumb={e => (\n                              <CustomColorThumb e={e} diameter={15} />\n                            )}\n                          />\n                        </View>\n                      </View>\n                      <HueSlider\n                        renderThumb={e => <CustomColorThumb e={e} />}\n                        style={{ height: 30, marginTop: 10 }}\n                      />\n                    </ColorPicker>\n                    <Pressable\n                      style={{\n                        marginTop: 10,\n                        backgroundColor: Colors.darkGray,\n                        borderRadius: 15,\n                        width: width * 0.5,\n                        alignContent: 'center',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                      }}\n                      onPress={() => setIsPickingColor(false)}\n                    >\n                      <Text style={{ margin: 10, color: Colors.white }}>\n                        OK\n                      </Text>\n                    </Pressable>\n                  </View>\n                </Modal>\n              </View>\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              if (\n                createScheduleLoadingState === loadingStateEnum.notStarted &&\n                isValidHexaCode(color)\n              ) {\n                submitSchedule();\n              }\n            }}\n            style={{\n              margin: 10,\n              backgroundColor: Colors.white,\n              shadowColor: 'black',\n              shadowOffset: { width: 1, height: 1 },\n              shadowOpacity: 1,\n              shadowRadius: 5,\n              borderRadius: 15,\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {!isValidHexaCode(color)\n                ? 'Cannot Start'\n                : createScheduleLoadingState === loadingStateEnum.notStarted\n                ? `${isCreatingSchedule ? 'Create' : 'Save'} Schedule`\n                : createScheduleLoadingState === loadingStateEnum.loading\n                ? 'Loading'\n                : createScheduleLoadingState === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {!isCreatingSchedule ? (\n            <Pressable\n              onPress={() => deleteFunction()}\n              style={{\n                margin: 10,\n                backgroundColor: Colors.danger,\n                borderRadius: 15,\n              }}\n            >\n              <Text style={{ margin: 10 }}>\n                {deleteState == loadingStateEnum.notStarted\n                  ? 'DELETE'\n                  : deleteState === loadingStateEnum.loading\n                  ? 'LOADING'\n                  : 'FAILED'}\n              </Text>\n            </Pressable>\n          ) : null}\n        </ScrollView>\n      ) : (\n        <>\n          {loadScheduleState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Pressable\n                onPress={() => {\n                  navigate('/profile/government/calendar/schedule');\n                }}\n                style={{ position: 'absolute', top: 0, left: 0 }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <ProgressView width={width * 0.1} height={height * 0.1} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {deleteState === loadingStateEnum.success ? (\n                <View\n                  style={{\n                    width,\n                    height,\n                    backgroundColor: Colors.white,\n                  }}\n                >\n                  <Pressable\n                    onPress={() => {\n                      navigate('/profile/government/calendar/schedule');\n                    }}\n                  >\n                    <Text>Back</Text>\n                  </Pressable>\n                  <Text>Schedule Deleted</Text>\n                </View>\n              ) : (\n                <View\n                  style={{\n                    width,\n                    height,\n                    backgroundColor: Colors.white,\n                  }}\n                >\n                  <Pressable\n                    onPress={() => {\n                      navigate('/profile/government/calendar/schedule');\n                    }}\n                  >\n                    <Text>Back</Text>\n                  </Pressable>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PeriodBlock({\n  period,\n  periods,\n  onSetNewPeriods,\n}: {\n  period: periodType;\n  periods: periodType[];\n  onSetNewPeriods: (item: periodType[]) => void;\n}) {\n  const [isSelectingStartTime, setIsSelectingStartTime] =\n    useState<boolean>(false);\n  const [isSelectingEndTime, setIsSelectingEndTime] = useState<boolean>(false);\n\n  function deleteItem(period: periodType) {\n    const newNewPeriodsArray: periodType[] = periods;\n    if (newNewPeriodsArray.length === 1) {\n      newNewPeriodsArray.pop();\n      onSetNewPeriods(newNewPeriodsArray);\n    } else {\n      const indexToRemove = newNewPeriodsArray.findIndex(e => {\n        return e.id === period.id;\n      });\n      if (indexToRemove !== -1) {\n        newNewPeriodsArray.splice(indexToRemove, indexToRemove);\n      } else {\n        // TO DO something went wrong this should not be possible though\n      }\n      onSetNewPeriods(newNewPeriodsArray);\n    }\n  }\n  return (\n    <View\n      key={`Period_${period.id}_${createUUID()}`}\n      style={{\n        margin: 10,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n        marginLeft: 5,\n        marginRight: 5,\n      }}\n    >\n      <View style={{ margin: 10 }}>\n        <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n          <Text>\n            {period.startHour}:{period.startMinute}\n          </Text>\n          <Pressable onPress={() => setIsSelectingStartTime(true)}>\n            <Text>Pick start time</Text>\n          </Pressable>\n        </View>\n        <TimePickerModal\n          hours={period.startHour}\n          minutes={period.startMinute}\n          visible={isSelectingStartTime}\n          onDismiss={() => setIsSelectingStartTime(false)}\n          onConfirm={e => {\n            const newPeriods: periodType[] = periods;\n            const update = newPeriods.findIndex(e => {\n              return e.id === period.id;\n            });\n            if (update !== -1) {\n              newPeriods[update].startHour = e.hours;\n              newPeriods[update].startMinute = e.minutes;\n              onSetNewPeriods([...newPeriods]);\n              setIsSelectingStartTime(false);\n            } else {\n              // TO DO failed\n              setIsSelectingStartTime(false);\n            }\n          }}\n        />\n        <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n          <Text>\n            {period.endHour}:{period.endMinute}\n          </Text>\n          <Pressable onPress={() => setIsSelectingEndTime(true)}>\n            <Text>Pick end time</Text>\n          </Pressable>\n        </View>\n        <TimePickerModal\n          hours={period.endHour}\n          minutes={period.endMinute}\n          visible={isSelectingEndTime}\n          onDismiss={() => setIsSelectingEndTime(false)}\n          onConfirm={e => {\n            const newPeriods: periodType[] = periods;\n            const update = newPeriods.findIndex(e => {\n              return e.id === period.id;\n            });\n            if (update !== -1) {\n              newPeriods[update].endHour = e.hours;\n              newPeriods[update].endMinute = e.minutes;\n              onSetNewPeriods([...newPeriods]);\n              setIsSelectingEndTime(false);\n            } else {\n              // TO DO failed\n              setIsSelectingEndTime(false);\n            }\n          }}\n        />\n        <Pressable\n          onPress={() => deleteItem(period)}\n          style={{ backgroundColor: 'red', borderRadius: 15 }}\n        >\n          <Text style={{ margin: 10 }}>Remove</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction CustomColorThumb({\n  e,\n  diameter,\n}: {\n  e: RenderThumbProps;\n  diameter?: number;\n}) {\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: e.currentColor.value,\n    };\n  });\n\n  return (\n    <Animated.View\n      style={[\n        {\n          width: diameter || 35,\n          height: diameter || 35,\n          borderRadius: diameter ? diameter / 2 : 20,\n          borderWidth: 2,\n          borderColor: 'white',\n        },\n        animatedStyle,\n        e.positionStyle,\n      ]}\n    />\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, ScrollView, FlatList } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../../../../Redux/store';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum, semesters } from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentClasses() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [classState, setClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [classes, setClasses] = useState<classType[]>([]);\n\n  async function getClasses() {\n    const groupResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/groups',\n    );\n    if (groupResult.ok) {\n      const groupResultData = await groupResult.json();\n      if (groupResultData.value !== undefined) {\n        const outputData: classType[] = [];\n        for (let index = 0; index < groupResultData.value.length; index += 1) {\n          outputData.push({\n            name: groupResultData.value[index].displayName,\n            id: groupResultData.value[index].id,\n            periods: [],\n            room: {\n              name: '',\n              id: '',\n            },\n            schoolYearId: '',\n            semester: semesters.semesterOne,\n          });\n        }\n        setClasses(outputData);\n        setClassState(loadingStateEnum.success);\n      } else {\n        setClassState(loadingStateEnum.failed);\n      }\n    } else {\n      setClassState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getClasses();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View>\n        <Pressable onPress={() => navigate('/profile/government/')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Classes</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.85 }}>\n        <>\n          {classState === loadingStateEnum.loading ? (\n            <View>\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {classState === loadingStateEnum.success ? (\n                <FlatList\n                  data={classes}\n                  renderItem={classMap => (\n                    <Pressable\n                      key={`Class_${classMap.item.id}_${createUUID()}`}\n                      onPress={() => {\n                        navigate(\n                          `/profile/government/classes/edit/${classMap.item.id}`,\n                        );\n                      }}\n                      style={{\n                        backgroundColor: '#FFFFFF',\n                        shadowColor: 'black',\n                        shadowOffset: { width: 1, height: 1 },\n                        shadowOpacity: 1,\n                        shadowRadius: 5,\n                        borderRadius: 15,\n                        margin: 10,\n                      }}\n                    >\n                      <Text style={{ margin: 10 }}>{classMap.item.name}</Text>\n                    </Pressable>\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      </ScrollView>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room');\n        }}\n      >\n        <Text>Rooms</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { orgWideGroupID } from '../../PaulyConfig';\nimport store from '../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getSchoolYears(nextLink?: string): Promise<{\n  result: loadingStateEnum;\n  events?: eventType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20or%20id%20eq%20'${\n        store.getState().paulyList.eventDataExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20and%20ep/value%20eq%20'schoolDay')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newEvents: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      if (data.value[index].singleValueExtendedProperties !== undefined) {\n        const eventData: { id: string; value: string }[] =\n          data.value[index].singleValueExtendedProperties;\n        if (\n          eventData.find(e => {\n            return e.id === eventTypeExtensionID;\n          })?.value === 'schoolYear'\n        ) {\n          newEvents.push({\n            id: data.value[index].id,\n            name: data.value[index].subject,\n            startTime: data.value[index].start.dateTime,\n            endTime: data.value[index].end.dateTime,\n            allDay: data.value[index].isAllDay,\n            eventColor: Colors.white,\n            paulyEventType:\n              eventData.find(e => {\n                return e.id === eventTypeExtensionID;\n              })?.value === 'schoolYear'\n                ? 'schoolYear'\n                : undefined,\n            paulyEventData: eventData.find(e => {\n              return e.id === eventDataExtensionID;\n            })?.value,\n            microsoftEvent: true,\n            microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n          });\n        }\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      events: newEvents,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable, StyleProp, ViewStyle } from 'react-native';\nimport React, { ReactNode, useEffect, useState } from 'react';\n\n// On set selected index returns 0 for the first child that is passed down\n\nexport default function Dropdown({\n  children,\n  onSetSelectedIndex,\n  style,\n  selectedIndex,\n  expandedStyle,\n  options,\n  setExpanded,\n  expanded,\n}: {\n  children: ReactNode;\n  selectedIndex: number;\n  onSetSelectedIndex: (item: number) => void;\n  style?: StyleProp<ViewStyle>;\n  expandedStyle?: StyleProp<ViewStyle>;\n  options?: string[];\n  setExpanded?: (item: boolean) => void;\n  expanded?: boolean;\n}) {\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  useEffect(() => {\n    if (expanded !== undefined) {\n      setIsExpanded(expanded);\n    }\n  }, [expanded]);\n  return (\n    <>\n      {isExpanded ? (\n        <View style={[expandedStyle, { position: 'absolute' }]}>\n          {options ? (\n            <>\n              {options.map((option, index) => (\n                <Pressable\n                  key={`Option_${index}`}\n                  onPress={() => {\n                    onSetSelectedIndex(index);\n                    setIsExpanded(false);\n                    if (setExpanded) {\n                      setExpanded(false);\n                    }\n                  }}\n                >\n                  <Text>{option}</Text>\n                </Pressable>\n              ))}\n            </>\n          ) : (\n            <>\n              {React.Children.map(children, (child, index) => (\n                <Pressable\n                  key={`Option_${index}`}\n                  onPress={() => {\n                    onSetSelectedIndex(index);\n                    setIsExpanded(false);\n                    if (setExpanded) {\n                      setExpanded(true);\n                    }\n                  }}\n                >\n                  <>{child}</>\n                </Pressable>\n              ))}\n            </>\n          )}\n        </View>\n      ) : (\n        <Pressable\n          onPress={() => {\n            setIsExpanded(true);\n            if (setExpanded) {\n              setExpanded(true);\n            }\n          }}\n          style={style}\n        >\n          {options ? (\n            <Text>{options[selectedIndex]}</Text>\n          ) : (\n            <>{children[selectedIndex]}</>\n          )}\n        </Pressable>\n      )}\n    </>\n  );\n}\n","import { View, Text, TextInput, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-native';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum, semesters } from '../../../../types';\nimport getSchoolYears from '../../../../Functions/calendar/getSchoolYears';\nimport SegmentedPicker from '../../../../UI/Pickers/SegmentedPicker';\nimport {\n  getEvent,\n  getTimetable,\n} from '../../../../Functions/calendar/calendarFunctionsGraph';\nimport { CloseIcon, WarningIcon } from '../../../../UI/Icons/Icons';\nimport Dropdown from '../../../../UI/Dropdown';\nimport { getRoom, getRooms } from '../../../../Functions/classesFunctions';\n\nexport default function GovernmentClassesEdit() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [selectedSemester, setSelectedSemester] = useState<semesters>(\n    semesters.semesterOne,\n  );\n\n  const [className, setClassName] = useState<string>('');\n\n  // Rooms States\n  const [roomSearchText, setRoomSearchText] = useState<string>('');\n  const [roomsNextLink, setRoomsNextLink] = useState<string | undefined>(\n    undefined,\n  );\n  const [rooms, setRooms] = useState<roomType[]>([]);\n  const [roomsState, setRoomsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedRoom, setSelectedRoom] = useState<roomType | undefined>(\n    undefined,\n  );\n\n  // School Years State\n  const [schoolYearState, setSchoolYearState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [schoolYearNextLink, setSchoolYearNextLink] = useState<\n    string | undefined\n  >(undefined);\n  const [schoolYears, setSchoolYears] = useState<eventType[]>([]);\n  const [selectedSchoolYear, setSelectedSchoolYear] = useState<\n    eventType | undefined\n  >(undefined);\n\n  const [timetableState, setTimetableState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [selectedTimetable, setSelectedTimetable] = useState<\n    timetableType | undefined\n  >(undefined);\n\n  const [classState, setClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const [updateClassState, setUpdateClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [isShowingClassConfirmMenu, setIsShowingClassConfirmMenu] =\n    useState<boolean>(false);\n\n  const [periods, setPeriods] = useState<number[]>([]);\n\n  async function getClass() {\n    setClassState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}?$select=${\n        store.getState().paulyList.classExtensionId\n      },displayName`,\n    ); // TO DO change to class\n    if (result.ok) {\n      const data = await result.json();\n      const extensionData = data[store.getState().paulyList.classExtensionId];\n      if (extensionData !== undefined) {\n        setClassName(extensionData.className);\n        setSelectedSemester(parseInt(extensionData.semesterId));\n        setPeriods(JSON.parse(extensionData.periodData));\n        const eventResult = await getEvent(extensionData.schoolYearEventId);\n        const roomResult = await getRoom(extensionData.roomId);\n        if (\n          eventResult.result === loadingStateEnum.success &&\n          roomResult.result === loadingStateEnum.success &&\n          eventResult.data !== undefined &&\n          roomResult.data !== undefined\n        ) {\n          setSelectedRoom(roomResult.data);\n          setSelectedSchoolYear(eventResult.data);\n        } else {\n          setClassState(loadingStateEnum.failed);\n        }\n      } else {\n        setClassName(data.displayName);\n      }\n      setClassState(loadingStateEnum.success);\n    } else {\n      setClassState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadRooms() {\n    // TO DO figure out if there will be performance issuses in continually getting next page\n    const result = await getRooms(\n      roomsNextLink,\n      roomSearchText !== '' ? roomSearchText : undefined,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRooms(result.data);\n    }\n    setRoomsState(result.result);\n    setRoomsNextLink(result.nextLink);\n  }\n\n  async function loadSchoolYears() {\n    const result = await getSchoolYears(schoolYearNextLink);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.events !== undefined\n    ) {\n      setSchoolYears(result.events);\n    }\n    setSchoolYearState(result.result);\n    setSchoolYearNextLink(result.nextLink);\n  }\n\n  async function loadTimetable() {\n    if (\n      selectedSchoolYear !== undefined &&\n      selectedSchoolYear.paulyEventData !== undefined\n    ) {\n      setTimetableState(loadingStateEnum.loading);\n      const result = await getTimetable(selectedSchoolYear.paulyEventData);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.timetable !== undefined\n      ) {\n        if (result.timetable.days.length !== periods.length) {\n          const newArray = Array.from(Array(result.timetable.days.length));\n          newArray.fill(0, 0, newArray.length);\n          setPeriods(newArray);\n        }\n        setSelectedTimetable(result.timetable);\n      }\n      setTimetableState(result.result);\n    }\n  }\n\n  useEffect(() => {\n    loadTimetable();\n  }, [selectedSchoolYear]);\n\n  useEffect(() => {\n    getClass();\n  }, []);\n\n  async function updateClass() {\n    if (selectedRoom !== undefined && selectedSchoolYear !== undefined) {\n      setUpdateClassState(loadingStateEnum.loading);\n      const data = {};\n      Object.defineProperty(data, store.getState().paulyList.classExtensionId, {\n        value: {\n          className,\n          schoolYearEventId: selectedSchoolYear.id,\n          semesterId: selectedSemester.toString(),\n          roomId: selectedRoom.id,\n          periodData: JSON.stringify(periods),\n        },\n      });\n\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/groups/${id}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setUpdateClassState(loadingStateEnum.success);\n      } else {\n        setUpdateClassState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  useEffect(() => {\n    loadRooms();\n  }, [roomSearchText]);\n\n  useEffect(() => {\n    loadSchoolYears();\n  }, []);\n\n  return (\n    <>\n      <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n        {classState === loadingStateEnum.loading ? (\n          <View>\n            <Pressable\n              onPress={() => {\n                navigate('/profile/government/classes');\n              }}\n            >\n              <Text>Back</Text>\n            </Pressable>\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <View>\n            {classState === loadingStateEnum.success ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  backgroundColor: Colors.white,\n                }}\n              >\n                <Pressable\n                  onPress={() => {\n                    navigate('/profile/government/classes');\n                  }}\n                >\n                  <Text>Back</Text>\n                </Pressable>\n                <Text>Add Class Data</Text>\n                <View>\n                  <Text>Name:</Text>\n                  <TextInput value={className} onChangeText={setClassName} />\n                </View>\n                <Text>School Years</Text>\n                <View style={{ height: height * 0.3 }}>\n                  {schoolYearState === loadingStateEnum.loading ? (\n                    <Text>Loading</Text>\n                  ) : (\n                    <View>\n                      {schoolYearState === loadingStateEnum.success ? (\n                        <ScrollView style={{ height: height * 0.3 }}>\n                          {schoolYears.map(year => (\n                            <Pressable\n                              onPress={() => {\n                                setSelectedSchoolYear(year);\n                              }}\n                            >\n                              <Text>{year.name}</Text>\n                            </Pressable>\n                          ))}\n                        </ScrollView>\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <View\n                  style={{ height: height * 0.3, marginBottom: height * 0.1 }}\n                >\n                  <Text>Periods</Text>\n                  <Text>{periods.toString()}</Text>\n                  {timetableState === loadingStateEnum.notStarted ? (\n                    <Text>Please pick a school year</Text>\n                  ) : (\n                    <View>\n                      {timetableState === loadingStateEnum.loading ? (\n                        <Text>Loading</Text>\n                      ) : (\n                        <View style={{ zIndex: 100 }}>\n                          {timetableState === loadingStateEnum.success &&\n                          selectedTimetable?.days.length === periods.length ? (\n                            <ScrollView\n                              style={{ height: height * 0.3, zIndex: 100 }}\n                            >\n                              <>\n                                {selectedTimetable.days.map((day, dayIndex) => (\n                                  <DayBlock\n                                    day={day}\n                                    dayIndex={dayIndex}\n                                    periods={periods}\n                                    setPeriods={setPeriods}\n                                    selectedTimetable={selectedTimetable}\n                                  />\n                                ))}\n                              </>\n                            </ScrollView>\n                          ) : (\n                            <Text>Failed</Text>\n                          )}\n                        </View>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <SegmentedPicker\n                  selectedIndex={selectedSemester}\n                  setSelectedIndex={setSelectedSemester}\n                  options={['Semester One', 'Semester Two']}\n                  width={width * 0.85}\n                  height={height * 0.1}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                  {selectedRoom === undefined ? (\n                    <WarningIcon width={12} height={12} outlineColor=\"red\" />\n                  ) : null}\n                  <Text>Select Room</Text>\n                </View>\n                <View style={{ height: height * 0.3 }}>\n                  {roomsState === loadingStateEnum.loading ? (\n                    <Text>Loading</Text>\n                  ) : (\n                    <View>\n                      {roomsState === loadingStateEnum.success ? (\n                        <ScrollView style={{ height: height * 0.3 }}>\n                          {rooms.map(room => (\n                            <Pressable\n                              onPress={() => {\n                                setSelectedRoom(room);\n                              }}\n                            >\n                              <Text>{room.name}</Text>\n                            </Pressable>\n                          ))}\n                        </ScrollView>\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <Pressable\n                  onPress={() => {\n                    setIsShowingClassConfirmMenu(true);\n                  }}\n                >\n                  <Text>Create Class</Text>\n                </Pressable>\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n      {isShowingClassConfirmMenu ? (\n        <View\n          style={{\n            width: width * 0.8,\n            height: height * 0.8,\n            top: height * 0.1,\n            left: width * 0.1,\n            borderRadius: 15,\n            backgroundColor: Colors.white,\n            position: 'absolute',\n            shadowColor: 'black',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              setIsShowingClassConfirmMenu(false);\n            }}\n          >\n            <CloseIcon width={14} height={14} />\n          </Pressable>\n          <Text>Create Class</Text>\n          <Text>Name: {className}</Text>\n          <Text>Room: {selectedRoom?.name}</Text>\n          <Text>School Year: {selectedSchoolYear?.name}</Text>\n          <Text>\n            Semester:{' '}\n            {selectedSemester === semesters.semesterOne ? 'One' : 'Two'}\n          </Text>\n          <Pressable\n            onPress={() => {\n              updateClass();\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {updateClassState === loadingStateEnum.cannotStart\n                ? 'Cannot Update Class'\n                : updateClassState === loadingStateEnum.notStarted\n                ? 'Update Class'\n                : updateClassState === loadingStateEnum.loading\n                ? 'Loading'\n                : updateClassState === loadingStateEnum.success\n                ? 'Updated Class'\n                : 'Failed To Update Class'}\n            </Text>\n          </Pressable>\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nfunction DayBlock({\n  day,\n  periods,\n  dayIndex,\n  setPeriods,\n  selectedTimetable,\n}: {\n  day: schoolDayType;\n  dayIndex: number;\n  periods: number[];\n  setPeriods: (item: number[]) => void;\n  selectedTimetable: timetableType;\n}) {\n  const [selected, setSelected] = useState<boolean>(false);\n  return (\n    <View\n      key={`Day_${day.id}`}\n      style={{ flexDirection: 'row', margin: 10, zIndex: selected ? 200 : 100 }}\n    >\n      <Text>{day.name}</Text>\n      <View>\n        {selectedTimetable?.schedules.length >= 1 &&\n        periods.length >= dayIndex ? (\n          <Dropdown\n            selectedIndex={periods[dayIndex]}\n            onSetSelectedIndex={index => {\n              if (periods.length >= dayIndex) {\n                const newPeriods = periods;\n                newPeriods[dayIndex] = index;\n                setPeriods([...newPeriods]);\n              }\n            }}\n            expanded={selected}\n            setExpanded={e => {\n              setSelected(e);\n            }}\n            style={{ backgroundColor: Colors.white, zIndex: -2 }}\n            expandedStyle={{\n              backgroundColor: 'blue',\n              zIndex: 101,\n              position: 'absolute',\n            }}\n            options={[\n              'unchosen',\n              ...Array.from(selectedTimetable.schedules[0].periods).flatMap(\n                (_item, index) => (index + 1).toString(),\n              ),\n            ]}\n            children=\"\"\n          />\n        ) : (\n          <Text>Something went wrong please reload the page.</Text>\n        )}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput, Button, Switch } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../Functions/ultility/microsoftAssets';\nimport MicrosoftFilePicker from '../../../UI/MicrosoftFilePicker';\nimport store, { RootState } from '../../../Redux/store';\nimport getCurrentPaulyData from '../../../Functions/homepage/getCurrentPaulyData';\nimport { Colors, loadingStateEnum } from '../../../types';\n\nexport default function GovernmentHomePage() {\n  const { paulyDataListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n\n  // Loading States\n  const [loadContentLoadingState, setLoadContentLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [newMessageState, setNewMessageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  // New Data\n  const [newMessageText, setNewMessageText] = useState(\n    store.getState().paulyData.message,\n  );\n  const [newAnimationSpeed, setNewAnnimationSpeed] = useState(\n    store.getState().paulyData.animationSpeed,\n  );\n  const [selectedPowerpoint, setSelectedPowerpoint] = useState<\n    microsoftFileType | undefined\n  >(undefined);\n  const [isAutoUpdatingText, setIsAutoUpdatingText] = useState<boolean>(false);\n\n  async function loadCurrentPaulyData() {\n    await getCurrentPaulyData();\n    setLoadContentLoadingState(loadingStateEnum.success);\n  }\n  async function createShareId(\n    item: microsoftFileType,\n  ): Promise<string | undefined> {\n    const data = {\n      type: 'view',\n      scope: 'organization',\n    };\n    const result = await callMsGraph(\n      `${item.callPath}/createLink`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      return data.shareId;\n    }\n    return undefined;\n  }\n  async function updatePaulyData(key: string, data: string) {\n    const dataOut: any = {};\n    dataOut[key] = data;\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${paulyDataListId}/items/1/fields`,\n      'PATCH',\n      JSON.stringify(dataOut),\n    );\n    if (result.ok) {\n      setNewMessageState(loadingStateEnum.success);\n    } else {\n      setNewMessageState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    const storeText = newMessageText;\n    setTimeout(() => {\n      if (isAutoUpdatingText && newMessageText === storeText) {\n        updatePaulyData('message', newMessageText);\n      }\n    }, 2000);\n  }, [newMessageText]);\n\n  useEffect(() => {\n    loadCurrentPaulyData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text style={{ marginLeft: 'auto', marginRight: 'auto' }}>Home Page</Text>\n      <View>\n        <View style={{ flexDirection: 'row' }}>\n          <TextInput\n            value={newMessageText}\n            onChangeText={e => {\n              setNewMessageText(e);\n            }}\n          />\n        </View>\n        {isAutoUpdatingText ? (\n          <View style={{ height: 14 }} />\n        ) : (\n          <Pressable\n            onPress={() => {\n              updatePaulyData('message', newMessageText);\n            }}\n          >\n            <Text>Update Text</Text>\n          </Pressable>\n        )}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Is auto updating text: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isAutoUpdatingText ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={setIsAutoUpdatingText}\n            value={isAutoUpdatingText}\n          />\n        </View>\n      </View>\n      <View style={{ marginBottom: 20 }}>\n        <View>\n          <Text style={{ margin: 5 }}>\n            Select Powerpoint: {selectedPowerpoint?.name}\n          </Text>\n        </View>\n        <MicrosoftFilePicker\n          height={height * 0.6 - 15}\n          width={width}\n          onSelectedFile={selectedFile => {\n            setSelectedPowerpoint(selectedFile);\n          }}\n        />\n      </View>\n      <Pressable\n        onPress={async () => {\n          if (selectedPowerpoint !== undefined) {\n            const shareId = await createShareId(selectedPowerpoint);\n            if (shareId !== undefined) {\n              updatePaulyData('powerpointId', shareId);\n            }\n          }\n        }}\n      >\n        <Text>Save Changes</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import React, { ReactNode, useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { Image, StyleSheet, View, Pressable, Text } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport store, { RootState } from '../Redux/store';\nimport {\n  BookIcon,\n  CalendarIcon,\n  GovernmentIcon,\n  HomeIcon,\n  MedalIcon,\n  PersonIcon,\n  SportsIcon,\n  StudentSearchIcon,\n} from './Icons/Icons';\nimport { expandedModeSlice } from '../Redux/reducers/expandedModeReducer';\nimport { isShowingProfileBlockSlice } from '../Redux/reducers/isShowingProfileBlockReducer';\nimport { Colors } from '../types';\n\nfunction NavBarBlock({\n  des,\n  expandedMode,\n  blockLength,\n  children,\n  text,\n  width,\n  setIsExpandedMode,\n}: {\n  des: string;\n  expandedMode: boolean;\n  blockLength: number;\n  text: string;\n  children: ReactNode;\n  width: number;\n  setIsExpandedMode: () => void;\n}) {\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const navigation = useNavigate();\n  return (\n    <Pressable\n      style={{\n        height: blockLength,\n        width: expandedMode ? width * 2.5 : width,\n        backgroundColor: isHover ? Colors.darkGray : 'transparent',\n        alignItems: 'center',\n      }}\n      onPress={() => {\n        navigation(des);\n      }}\n      onHoverIn={() => {\n        setIsHover(true);\n        setIsExpandedMode();\n      }}\n      onHoverOut={() => {\n        setIsHover(false);\n      }}\n    >\n      <View\n        style={[\n          styles.LinkStyle,\n          {\n            height: blockLength,\n            width: expandedMode ? blockLength * 2.5 : blockLength,\n            margin: 0,\n            position: expandedMode ? 'absolute' : 'relative',\n            left: expandedMode ? (width - blockLength) / 2 : undefined,\n            alignItems: 'center',\n          },\n        ]}\n      >\n        <View\n          id=\"ViewHigh\"\n          style={{\n            width: expandedMode ? blockLength * 2.5 : blockLength,\n            flexDirection: 'row',\n            margin: 'auto',\n            padding: 0,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View\n            style={[\n              {\n                height: blockLength,\n                width: blockLength,\n                position: expandedMode ? 'absolute' : 'relative',\n                left: expandedMode ? 0 : undefined,\n                alignItems: 'center',\n                justifyContent: 'center',\n              },\n            ]}\n          >\n            <>{children}</>\n          </View>\n          {expandedMode ? (\n            <Text\n              style={{\n                position: 'absolute',\n                left: blockLength,\n                color: Colors.white,\n                marginLeft: 8,\n              }}\n            >\n              {text}\n            </Text>\n          ) : null}\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nexport default function NavBarComponent({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const { uri, displayName } = useSelector(\n    (state: RootState) => state.microsoftProfileData,\n  );\n  const expandedMode = useSelector((state: RootState) => state.expandedMode);\n  const [blockLength, setBlockLength] = useState<number>(0);\n  const [iconLength, setIconLength] = useState<number>(0);\n  const navigation = useNavigate();\n  const dispatch = useDispatch();\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n\n  useEffect(() => {\n    // checking to see if the width or the height is going to be the limiting factor.\n    if (width * 0.6 > (height * 0.6) / 8) {\n      setBlockLength((height * 0.6) / 8);\n    } else {\n      setBlockLength(width * 0.6);\n    }\n    if (width * 0.7 > (height * 0.7) / 8) {\n      setIconLength((height * 0.6) / 8);\n    } else {\n      setIconLength(width * 0.5);\n    }\n  }, [width, height]);\n\n  const [fontsLoaded] = useFonts({\n    'Gochi Hand': require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      id=\"Pressable\"\n      onHoverIn={() => {\n        dispatch(expandedModeSlice.actions.setExpandedMode(true));\n      }}\n      onHoverOut={() => {\n        dispatch(expandedModeSlice.actions.setExpandedMode(false));\n      }}\n    >\n      <View\n        id=\"Main\"\n        style={{\n          backgroundColor: Colors.maroon,\n          height,\n          overflow: 'hidden',\n          width: expandedMode ? width * 2.5 : width,\n          alignItems: 'center',\n        }}\n      >\n        <Pressable\n          style={[\n            styles.LinkStyle,\n            {\n              height: blockLength,\n              width: expandedMode ? width * 2.5 : width,\n              margin: 0,\n              marginTop: blockLength * 0.4,\n              marginBottom: blockLength * 0.4,\n            },\n          ]}\n          onPress={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(!expandedMode));\n          }}\n          onHoverIn={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              height: blockLength,\n              position: expandedMode ? 'absolute' : 'relative',\n              left: expandedMode ? (width - blockLength) / 2 : undefined,\n            }}\n            pointerEvents=\"none\"\n          >\n            <View\n              style={{\n                position: expandedMode ? 'absolute' : 'relative',\n                left: expandedMode ? 0 : undefined,\n              }}\n            >\n              <Image\n                source={require('../../assets/images/PaulyLogo.png')}\n                resizeMode=\"contain\"\n                style={{ width: blockLength, height: blockLength }}\n              />\n            </View>\n            {expandedMode ? (\n              <Text\n                style={{\n                  fontFamily: 'Gochi Hand',\n                  color: Colors.white,\n                  position: 'absolute',\n                  top: blockLength * 0.3,\n                  left: blockLength * 0.65,\n                  fontSize: blockLength * 0.7,\n                  textShadowColor: 'rgba(0, 0, 0, 1)',\n                  textShadowOffset: { width: 4, height: 2 },\n                  textShadowRadius: 0,\n                }}\n                selectable={false}\n              >\n                auly\n              </Text>\n            ) : null}\n          </View>\n        </Pressable>\n        <NavBarBlock\n          des=\"/notifications\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Notifications\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <HomeIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/resources\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Resources\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <BookIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/commissions\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Commissions\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <MedalIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/calendar\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Calendar\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <CalendarIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/sports\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Sports\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <Image\n            source={require('../../assets/images/Football.png')}\n            resizeMode=\"contain\"\n            style={{ width: iconLength, height: iconLength }}\n          />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/students\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Students\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <StudentSearchIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        {isGovernmentMode ? (\n          <NavBarBlock\n            des=\"/profile/government\"\n            expandedMode={expandedMode}\n            blockLength={blockLength}\n            text=\"Government\"\n            width={width}\n            setIsExpandedMode={() => {\n              dispatch(expandedModeSlice.actions.setExpandedMode(true));\n            }}\n          >\n            <GovernmentIcon width={iconLength} height={iconLength} />\n          </NavBarBlock>\n        ) : null}\n        <Pressable\n          onHoverIn={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n          onPress={() => {\n            dispatch(\n              isShowingProfileBlockSlice.actions.setIsShowingProfileBlock(\n                !store.getState().isShowingProfileBlock,\n              ),\n            );\n          }}\n          style={[\n            styles.LinkStyle,\n            {\n              height: blockLength,\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              margin: 0,\n              position: 'absolute',\n              left: expandedMode ? (width - blockLength) / 2 : undefined,\n              bottom: height * 0.05,\n            },\n          ]}\n        >\n          <View\n            style={{\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              height: iconLength,\n              position: expandedMode ? 'absolute' : 'relative',\n              left: expandedMode ? 0 : undefined,\n              flexDirection: 'row',\n            }}\n          >\n            {uri !== '' ? (\n              <Image\n                source={{ uri }}\n                style={{\n                  width: iconLength,\n                  height: iconLength,\n                  borderRadius: iconLength / 2,\n                }}\n              />\n            ) : (\n              <PersonIcon width={iconLength} height={iconLength} />\n            )}\n            <View\n              style={{\n                height: iconLength,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                marginLeft: blockLength - iconLength,\n              }}\n            >\n              {expandedMode ? (\n                <Text\n                  adjustsFontSizeToFit\n                  numberOfLines={1}\n                  style={{\n                    color: Colors.white,\n                    marginLeft: 8,\n                    width: blockLength * 2.5,\n                  }}\n                  selectable={false}\n                >\n                  {displayName}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n        </Pressable>\n      </View>\n    </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  LinkStyle: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 'auto',\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../Redux/store';\nimport { Colors } from '../types';\n\nexport default function PageNotFound() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [isBottonHover, setIsButtonHover] = useState<boolean>(false);\n  const navigate = useNavigate();\n  return (\n    <View\n      style={{\n        width,\n        height,\n        backgroundColor: Colors.white,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Text>Page Not Found</Text>\n      <Pressable\n        onPress={() => {\n          navigate('/');\n        }}\n        onHoverIn={() => {\n          setIsButtonHover(true);\n        }}\n        onHoverOut={() => {\n          setIsButtonHover(false);\n        }}\n        style={{\n          height: height * 0.09,\n          width: width * 0.5,\n          borderRadius: 50,\n          backgroundColor: isBottonHover ? Colors.darkGray : Colors.white,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          shadowColor: isBottonHover ? Colors.white : 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginTop: width < height ? width * 0.1 : height * 0.1,\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            color: isBottonHover ? Colors.white : 'black',\n            fontWeight: 'bold',\n          }}\n        >\n          RETURN HOME\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { clientId } from '../../PaulyConfig';\n\nexport const paulyListData = {\n  displayName: 'PaulyList',\n  // \"name\":\"PaulyList\",\n  columns: [\n    {\n      name: 'studentFilesListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'commissionListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'commissionSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'paulyDataListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsApprovedSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetablesListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'resourceListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'dressCodeListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'roomListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'classExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'eventTypeExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'eventDataExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'resourceExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'userExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'noClassListId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const studentFilesData = {\n  displayName: 'StudentFiles',\n  columns: [\n    {\n      name: 'createdTime',\n      text: {},\n    },\n    {\n      name: 'itemId', // This is the item id not drive item id\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selected',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'userId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const commissionsData = {\n  displayName: 'Commissions',\n  columns: [\n    {\n      name: 'startDate',\n      text: {},\n    },\n    {\n      name: 'endDate',\n      text: {},\n    },\n    {\n      name: 'timed',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'points',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'hidden',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'maxNumberOfClaims',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'allowMultipleSubmissions',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'commissionID',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'value',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'coordinateLat',\n      number: {},\n    },\n    {\n      name: 'coordinateLng',\n      number: {},\n    },\n    {\n      name: 'proximity',\n      number: {},\n    },\n    {\n      name: 'qrCodeData',\n      text: { allowMultipleLines: true },\n    },\n    {\n      name: 'postTeamId',\n      text: {},\n    },\n    {\n      name: 'postChannelId',\n      text: {},\n    },\n    {\n      name: 'postId',\n      text: {},\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const commissionsSubmissionsData = {\n  displayName: 'CommissionsSubmissions',\n  columns: [\n    {\n      name: 'userId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submittedTime',\n      required: true,\n      text: {},\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'submissionApproved',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionReviewed',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'commissionId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionData',\n      text: { allowMultipleLines: true },\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const paulyDataData = {\n  displayName: 'PaulyData',\n  columns: [\n    {\n      name: 'animationSpeed',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'message',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'powerpointId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const scheduleData = {\n  displayName: 'Schedule',\n  columns: [\n    {\n      name: 'scheduleId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'scheduleProperName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleDescriptiveName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleColor',\n      text: { maxLength: 9 },\n      required: true,\n    },\n    {\n      name: 'scheduleData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsData = {\n  displayName: 'Sports',\n  columns: [\n    {\n      name: 'sportName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportSvg',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'sportId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsApprovedSubmissionsData = {\n  displayName: 'SportsApprovedSubmissions',\n  columns: [\n    {\n      name: 'fileId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'fileType',\n      number: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'caption',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedSportId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedTeamId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsSubmissionsData = {\n  displayName: 'SportsSubmissions',\n  columns: [\n    {\n      name: 'accepted',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'reviewed',\n      boolean: {},\n      indexed: true,\n      required: true,\n    },\n    {\n      name: 'user',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timeCreated',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'fileId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'fileType',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'selectedSportId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n    {\n      name: 'selectedTeamId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const timetablesData = {\n  displayName: 'Timetables',\n  columns: [\n    {\n      name: 'timetableName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetableId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'timetableDataDays',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'timetableDataSchedules',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'timetableDefaultScheduleId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetableDressCodeId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const resourceData = {\n  displayName: 'Resources',\n  columns: [\n    {\n      name: 'resourceGroupId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'resourceConversationId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const dressCodeData = {\n  displayName: 'DressCode',\n  columns: [\n    {\n      name: 'dressCodeId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'dressCodeName',\n      text: {},\n    },\n    {\n      name: 'dressCodeData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'dressCodeIncentivesData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const roomData = {\n  displayName: 'Rooms',\n  columns: [\n    {\n      name: 'roomId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'roomName',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const noClassData = {\n  displayName: 'No Class',\n  columns: [\n    {\n      name: 'classGroupId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'classDate',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\n\n// Extensions\nexport const paulyClassExtensionData = {\n  id: 'paulyClass',\n  description: 'Pauly Class Data',\n  targetTypes: ['Group'],\n  owner: clientId,\n  properties: [\n    {\n      name: 'className', // This property will be optional in the future\n      type: 'String',\n    },\n    {\n      name: 'schoolYearEventId',\n      type: 'String',\n    },\n    {\n      name: 'semesterId',\n      type: 'String',\n    },\n    {\n      name: 'roomId',\n      type: 'String',\n    },\n    {\n      name: 'periodData',\n      type: 'String', // An Array as long as the number of days in the cycle\n    },\n  ],\n};\n\n// Add data array\nexport const addDataArray: addDataType[] = [\n  {\n    data: paulyClassExtensionData,\n    urlOne: 'https://graph.microsoft.com/v1.0/schemaExtensions',\n    id: 'classExtensionId',\n  },\n  {\n    data: studentFilesData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'studentFilesListId',\n  },\n  {\n    data: commissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'commissionListId',\n  },\n  {\n    data: commissionsSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'commissionSubmissionsListId',\n  },\n  {\n    data: scheduleData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'scheduleListId',\n  },\n  {\n    data: sportsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsListId',\n  },\n  {\n    data: sportsApprovedSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsApprovedSubmissionsListId',\n  },\n  {\n    data: sportsSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsSubmissionsListId',\n  },\n  {\n    data: timetablesData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'timetablesListId',\n  },\n  {\n    data: resourceData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'resourceListId',\n  },\n  {\n    data: dressCodeData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'dressCodeListId',\n  },\n  {\n    data: roomData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'roomListId',\n  },\n  {\n    data: noClassData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'noClassListId',\n  },\n];\n","import { loadingStateEnum } from '../../types';\nimport createUUID from '../ultility/createUUID';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport {\n  paulyListData,\n  paulyDataData,\n  addDataArray,\n} from './initializePaulyData';\n\nexport async function initializePaulyPartOne(\n  secondUserId: string,\n): Promise<{ result: loadingStateEnum; groupId?: string }> {\n  const currentUsersIdResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me',\n    'GET',\n  );\n  if (currentUsersIdResult.ok) {\n    const currentUsersIdResultData = await currentUsersIdResult.json();\n    const createGroupData = {\n      description: \"Pauly's Team Containing all it's data\",\n      displayName: 'Pauly',\n      groupTypes: ['Unified', 'DynamicMembership'],\n      mailEnabled: true,\n      mailNickname: 'pauly',\n      visibility: 'HiddenMembership',\n      membershipRule: '(user.accountEnabled -eq true)',\n      membershipRuleProcessingState: 'on',\n      'owners@odata.bind': [\n        `https://graph.microsoft.com/v1.0/users/${currentUsersIdResultData.id}`,\n        `https://graph.microsoft.com/v1.0/users/${secondUserId}`,\n      ],\n      securityEnabled: false,\n    };\n    const createGroupResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/groups',\n      'POST',\n      JSON.stringify(createGroupData),\n    );\n    if (createGroupResult.ok) {\n      const createGroupResultData = await createGroupResult.json();\n      return {\n        result: loadingStateEnum.success,\n        groupId: createGroupResultData.id,\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function initializePaulyPartTwo(\n  groupId: string,\n): Promise<loadingStateEnum> {\n  const teamsData = {\n    'template@odata.bind':\n      \"https://graph.microsoft.com/v1.0/teamsTemplates('standard')\",\n    'group@odata.bind': `https://graph.microsoft.com/v1.0/groups('${groupId}')`,\n  };\n  const createTeamResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/teams',\n    'POST',\n    JSON.stringify(teamsData),\n  );\n  if (createTeamResult.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n\nexport async function initializePaulyPartThree(\n  groupId: string,\n  update?: string[],\n): Promise<loadingStateEnum> {\n  const getTeam = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${groupId}`,\n  );\n  if (!getTeam.ok) {\n    return loadingStateEnum.failed;\n  }\n  const getTeamData = await getTeam.json();\n\n  const getRootSiteIdResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${getTeamData.id}/sites/root`,\n  );\n  if (!getRootSiteIdResult.ok) {\n    return loadingStateEnum.failed;\n  }\n  const getRootSiteIdResultData = await getRootSiteIdResult.json();\n\n  const paulyListNewData: { fields: any } = { fields: { Title: 'Main' } };\n\n  // Check if already data\n  let secondRun: boolean = false;\n  const getPaulyListResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items/1?expand=fields`,\n  );\n  if (!getPaulyListResult.ok && getPaulyListResult.status !== 404) {\n    return loadingStateEnum.failed;\n  }\n  const getPaulyListResultData = await getPaulyListResult.json();\n  if (getPaulyListResult.status !== 404) {\n    if (getPaulyListResultData.fields !== undefined) {\n      secondRun = true;\n      if (getPaulyListResultData.fields !== undefined) {\n        if (getPaulyListResultData.fields.paulyDataListId !== undefined) {\n          paulyListNewData.fields.paulyDataListId =\n            getPaulyListResultData.fields.paulyDataListId;\n        }\n      }\n    }\n  }\n\n  // TO DO think about 409 if only half  of list where created and then interuption\n  for (let index = 0; index < addDataArray.length; index += 1) {\n    const callData = addDataArray[index];\n    if (getPaulyListResultData.fields !== undefined) {\n      if (getPaulyListResultData.fields[callData.id] !== undefined) {\n        paulyListNewData.fields[callData.id] =\n          getPaulyListResultData.fields[callData.id];\n      }\n    }\n    if (\n      paulyListNewData.fields[callData.id] === undefined ||\n      update?.includes(callData.id)\n    ) {\n      const result = await callMsGraph(\n        callData.urlTwo !== undefined\n          ? callData.urlOne + getRootSiteIdResultData.id + callData.urlTwo\n          : callData.urlOne,\n        'POST',\n        JSON.stringify(callData.data),\n      );\n      if (!result.ok) {\n        return loadingStateEnum.failed;\n      }\n      const data = await result.json();\n      paulyListNewData.fields[callData.id] = data.id;\n    }\n  }\n  if (getPaulyListResultData.fields !== undefined) {\n    if (getPaulyListResultData.fields.eventTypeExtensionId !== undefined) {\n      paulyListNewData.fields.eventTypeExtensionId =\n        getPaulyListResultData.fields.eventTypeExtensionId;\n    } else {\n      paulyListNewData.fields.eventTypeExtensionId = `String {${createUUID()}} Name eventType`;\n    }\n  } else {\n    paulyListNewData.fields.eventTypeExtensionId = `String {${createUUID()}} Name eventType`;\n  }\n\n  if (getPaulyListResultData.fields !== undefined) {\n    if (getPaulyListResultData.fields.eventDataExtensionId !== undefined) {\n      paulyListNewData.fields.eventDataExtensionId =\n        getPaulyListResultData.fields.eventDataExtensionId;\n    } else {\n      paulyListNewData.fields.eventDataExtensionId = `String {${createUUID()}} Name eventData`;\n    }\n    if (getPaulyListResultData.fields.resourceExtensionId !== undefined) {\n      paulyListNewData.fields.resourceExtensionId =\n        getPaulyListResultData.fields.resourceExtensionId;\n    } else {\n      paulyListNewData.fields.resourceExtensionId = `String {${createUUID()}} Name resourceData`;\n    }\n  } else {\n    paulyListNewData.fields.eventDataExtensionId = `String {${createUUID()}} Name eventData`;\n    paulyListNewData.fields.resourceExtensionId = `String {${createUUID()}} Name resourceData`;\n  }\n\n  if (paulyListNewData.fields.paulyDataListId === undefined) {\n    const paulyDataResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists`,\n      'POST',\n      JSON.stringify(paulyDataData),\n    );\n    if (!paulyDataResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    const paulyDataResultData = await paulyDataResult.json();\n    const paulyDataNewData = {\n      fields: {\n        Title: 'Main',\n        animationSpeed: 10,\n        message: 'Pauly',\n        powerpointId: 'unset',\n      },\n    };\n    const setPaulyDataNewDataResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/${paulyDataResultData.id}/items`,\n      'POST',\n      JSON.stringify(paulyDataNewData),\n    );\n    if (!setPaulyDataNewDataResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    paulyListNewData.fields.paulyDataListId = paulyDataResultData.id;\n  }\n  if (secondRun === false) {\n    const paulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists`,\n      'POST',\n      JSON.stringify(paulyListData),\n    );\n    if (!paulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    const addPaulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items`,\n      'POST',\n      JSON.stringify(paulyListNewData),\n    );\n    if (!addPaulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n  } else {\n    const addPaulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items/1`,\n      'PATCH',\n      JSON.stringify(paulyListNewData),\n    );\n    const ourData = await addPaulyListResult.json();\n    if (!addPaulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n  }\n  return loadingStateEnum.success;\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, TextInput, FlatList } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport {\n  initializePaulyPartOne,\n  initializePaulyPartThree,\n  initializePaulyPartTwo,\n} from '../../../../Functions/initializePauly/initializePauly';\nimport { RootState } from '../../../../Redux/store';\nimport { addDataArray } from '../../../../Functions/initializePauly/initializePaulyData';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\n\nenum initStage {\n  notStarted,\n  partOne,\n  partTwoLoad,\n  partTwo,\n  partThreeLoad,\n  partThree,\n  done,\n}\n\nexport default function GovernmentAdmin() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [selectedUser, setSelectedUser] = useState<\n    microsoftUserType | undefined\n  >(undefined);\n  const [timeLeft, setTimeLeft] = useState<string>('');\n  const [timeElapsed, setTimeElapsed] = useState<string>('Not Started');\n  const [createdGroupId, setCreatedGroupId] = useState<string>('');\n  const [selectedUpdates, setSelectedUpdates] = useState<string[]>([]);\n  const navigate = useNavigate();\n\n  // Start Times\n  const [startTime, setStartTime] = useState<Date>(new Date());\n  const [partOneStartTime, setPartOneStartTime] = useState<Date>(new Date());\n  const [partTwoStartTime, setPartTwoStartTime] = useState<Date>(new Date());\n\n  // Result\n  const [initResult, setInitResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [initTwoResult, setInitTwoResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [initThreeResult, setInitThreeResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [currentInitStage, setCurrentInitStage] = useState<initStage>(\n    initStage.notStarted,\n  );\n\n  async function initializePauly() {\n    if (selectedUser !== undefined) {\n      setStartTime(new Date());\n      setCurrentInitStage(initStage.partOne);\n      setInitResult(loadingStateEnum.loading);\n      const partOneResult = await initializePaulyPartOne(selectedUser.id);\n      if (\n        partOneResult.result === loadingStateEnum.success &&\n        partOneResult.groupId !== undefined\n      ) {\n        setCreatedGroupId(partOneResult.groupId);\n        setCurrentInitStage(initStage.partTwoLoad);\n        setPartOneStartTime(new Date());\n        const partTwoResult = await new Promise<loadingStateEnum>(\n          (resolve, reject) => {\n            setTimeout(async () => {\n              if (partOneResult.groupId !== undefined) {\n                setCurrentInitStage(initStage.partTwo);\n                const secondResult = await initializePaulyPartTwo(\n                  partOneResult.groupId,\n                );\n                resolve(secondResult);\n              } else {\n                setCurrentInitStage(initStage.done);\n                setInitResult(loadingStateEnum.failed);\n                reject();\n              }\n            }, 900000);\n          },\n        );\n        if (partTwoResult === loadingStateEnum.success) {\n          setCurrentInitStage(initStage.partThreeLoad);\n          setPartTwoStartTime(new Date());\n          const partThreeResult = await new Promise<loadingStateEnum>(\n            (resolve, reject) => {\n              setTimeout(async () => {\n                if (partOneResult.groupId !== undefined) {\n                  setCurrentInitStage(initStage.partThree);\n                  const thirdResult = await initializePaulyPartThree(\n                    partOneResult.groupId,\n                  );\n                  resolve(thirdResult);\n                } else {\n                  setCurrentInitStage(initStage.done);\n                  setInitResult(loadingStateEnum.failed);\n                  reject();\n                }\n              }, 900000);\n            },\n          );\n          if (partThreeResult === loadingStateEnum.success) {\n            setInitResult(loadingStateEnum.success);\n            setCurrentInitStage(initStage.done);\n          } else {\n            setCurrentInitStage(initStage.done);\n            setInitResult(loadingStateEnum.failed);\n          }\n        } else {\n          setCurrentInitStage(initStage.done);\n          setInitResult(loadingStateEnum.failed);\n        }\n      } else {\n        setCurrentInitStage(initStage.done);\n        setInitResult(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function initializePaulyFromPartTwo() {\n    if (\n      createdGroupId !== '' &&\n      initTwoResult === loadingStateEnum.notStarted\n    ) {\n      setInitTwoResult(loadingStateEnum.loading);\n      const secondResult = await initializePaulyPartTwo(createdGroupId);\n      if (secondResult === loadingStateEnum.success) {\n        setInitTwoResult(loadingStateEnum.success);\n      } else {\n        setInitTwoResult(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function initializePaulyFromPartThree() {\n    if (\n      createdGroupId !== '' &&\n      initThreeResult === loadingStateEnum.notStarted\n    ) {\n      setStartTime(new Date());\n      setCurrentInitStage(initStage.partThree);\n      setInitThreeResult(loadingStateEnum.loading);\n      const result = await initializePaulyPartThree(\n        createdGroupId,\n        selectedUpdates,\n      );\n      if (result === loadingStateEnum.success) {\n        setInitThreeResult(loadingStateEnum.success);\n        setCurrentInitStage(initStage.done);\n      } else {\n        setInitThreeResult(loadingStateEnum.failed);\n        setCurrentInitStage(initStage.done);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (\n      currentInitStage === initStage.partTwoLoad ||\n      currentInitStage === initStage.partThreeLoad\n    ) {\n      const interval: ReturnType<typeof setInterval> = setInterval(() => {\n        let miliSecondsPassed = new Date().getTime() - startTime.getTime();\n        if (currentInitStage === initStage.partTwoLoad) {\n          miliSecondsPassed = new Date().getTime() - partOneStartTime.getTime();\n        } else if (currentInitStage === initStage.partThreeLoad) {\n          miliSecondsPassed = new Date().getTime() - partTwoStartTime.getTime();\n        }\n\n        const miliSecondsLeft = 900000 - miliSecondsPassed;\n        const totalSecondsLeft = miliSecondsLeft / 1000;\n        let minutesLeft: number = Math.floor(totalSecondsLeft / 60);\n        let secondsLeft: number = Math.ceil(totalSecondsLeft % 60);\n        if (secondsLeft === 60) {\n          minutesLeft += 1;\n          secondsLeft = 0;\n        }\n        let minutesLeftString: string = minutesLeft.toString();\n        let secondsLeftString: string = secondsLeft.toString();\n        if (minutesLeft <= 9) {\n          minutesLeftString = `0${minutesLeftString}`;\n        }\n        if (secondsLeft <= 9) {\n          secondsLeftString = `0${secondsLeft}`;\n        }\n        setTimeLeft(`${minutesLeftString}:${secondsLeftString}`);\n        if (minutesLeft <= -1) {\n          setTimeLeft('0:0');\n          return clearInterval(interval);\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [currentInitStage]);\n\n  useEffect(() => {\n    if (currentInitStage !== initStage.notStarted) {\n      const interval = setInterval(() => {\n        const miliSecondsPast = new Date().getTime() - startTime.getTime();\n\n        const totalSecondsLeft = miliSecondsPast / 1000;\n        const totalMinutesPast: number = Math.floor(totalSecondsLeft / 60);\n        let minutesPast: number = Math.ceil(totalMinutesPast % 60);\n        const hoursPast: number = Math.floor(totalMinutesPast / 60);\n        let secondsPast: number = Math.ceil(totalSecondsLeft % 60);\n        if (secondsPast === 60) {\n          minutesPast += 1;\n          secondsPast = 0;\n        }\n        let hoursLeftString: string = hoursPast.toString();\n        let minutesLeftString: string = minutesPast.toString();\n        let secondsLeftString: string = secondsPast.toString();\n        if (minutesPast <= 9) {\n          minutesLeftString = `0${minutesLeftString}`;\n        }\n        if (secondsPast <= 9) {\n          secondsLeftString = `0${secondsPast}`;\n        }\n        if (hoursPast <= 9) {\n          hoursLeftString = `0${hoursLeftString}`;\n        }\n        setTimeElapsed(\n          `${hoursLeftString}:${minutesLeftString}:${secondsLeftString}`,\n        );\n      }, 1000);\n      if (currentInitStage === initStage.done) {\n        return clearInterval(interval);\n      }\n      return () => clearInterval(interval);\n    }\n  }, [currentInitStage]);\n\n  useEffect(() => {\n    if (\n      createdGroupId !== '' &&\n      (initResult === loadingStateEnum.notStarted ||\n        initResult === loadingStateEnum.cannotStart ||\n        initResult === loadingStateEnum.failed)\n    ) {\n      setInitTwoResult(loadingStateEnum.notStarted);\n      setInitThreeResult(loadingStateEnum.notStarted);\n    }\n  }, [createdGroupId, initResult]);\n\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <View>\n        <Pressable onPress={() => navigate('/profile/government')}>\n          <Text>Back</Text>\n        </Pressable>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <View>\n          <View\n            style={{\n              height: height * 0.25,\n              width: height * 0.1,\n              alignContent: 'center',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partOne ? 'blue' : 'black',\n                borderRadius: 50,\n              }}\n            />\n            <View\n              style={{\n                height: height * 0.025,\n                width: height * 0.05,\n                alignItems: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.025,\n                  width: height * 0.005,\n                  backgroundColor:\n                    currentInitStage === initStage.partTwoLoad\n                      ? 'blue'\n                      : 'black',\n                }}\n              />\n              {currentInitStage === initStage.partTwoLoad ? (\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: height * 0.03,\n                    top: height * 0.01,\n                  }}\n                >\n                  {timeLeft}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partTwo\n                    ? 'blue'\n                    : Colors.black,\n                borderRadius: 50,\n              }}\n            />\n            <View\n              style={{\n                height: height * 0.025,\n                width: height * 0.05,\n                alignItems: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.025,\n                  width: height * 0.005,\n                  backgroundColor:\n                    currentInitStage === initStage.partThreeLoad\n                      ? 'blue'\n                      : Colors.black,\n                }}\n              />\n              {currentInitStage === initStage.partThreeLoad ? (\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: height * 0.03,\n                    top: height * 0.01,\n                  }}\n                >\n                  {timeLeft}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partThree\n                    ? 'blue'\n                    : Colors.black,\n                borderRadius: 50,\n              }}\n            />\n          </View>\n        </View>\n        <View>\n          <UserBlock\n            setSelectedUser={setSelectedUser}\n            setInitResult={setInitResult}\n          />\n          <TextInput\n            value={createdGroupId}\n            onChangeText={setCreatedGroupId}\n            placeholder=\"Group Id\"\n          />\n          <Text>Time Elapsed: {timeElapsed}</Text>\n          <Pressable\n            onPress={() => {\n              if (initResult === loadingStateEnum.notStarted) {\n                initializePauly();\n              }\n            }}\n          >\n            <Text>\n              {initResult === loadingStateEnum.cannotStart\n                ? 'Please Pick a User'\n                : initResult === loadingStateEnum.notStarted\n                ? 'initialize Pauly on New Tenant'\n                : initResult === loadingStateEnum.loading\n                ? `Loading ${timeLeft}`\n                : initResult === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {initTwoResult !== loadingStateEnum.cannotStart ? (\n            <Pressable\n              onPress={() => {\n                initializePaulyFromPartTwo();\n              }}\n            >\n              <Text>\n                {initTwoResult === loadingStateEnum.notStarted\n                  ? 'Start From Part Two'\n                  : initTwoResult === loadingStateEnum.loading\n                  ? 'Loading'\n                  : initTwoResult === loadingStateEnum.success\n                  ? 'Success'\n                  : 'Failed'}\n              </Text>\n            </Pressable>\n          ) : null}\n          {initThreeResult !== loadingStateEnum.cannotStart ? (\n            <View>\n              {addDataArray.map(addData => (\n                <View key={`Add_Data_${addData.id}`}>\n                  {selectedUpdates.includes(addData.id) ? (\n                    <Pressable\n                      style={{\n                        width: width * 0.7,\n                        backgroundColor: Colors.lightGray,\n                      }}\n                      onPress={() => {\n                        const newSelectedUpdates = selectedUpdates;\n                        newSelectedUpdates.filter(e => {\n                          return e !== addData.id;\n                        });\n                        setSelectedUpdates([...newSelectedUpdates]);\n                      }}\n                    >\n                      <View style={{ margin: 5 }}>\n                        <Text>{addData.id}</Text>\n                      </View>\n                    </Pressable>\n                  ) : (\n                    <Pressable\n                      style={{\n                        width: width * 0.7,\n                        backgroundColor: Colors.white,\n                      }}\n                      onPress={() => {\n                        setSelectedUpdates([...selectedUpdates, addData.id]);\n                      }}\n                    >\n                      <View style={{ margin: 5 }}>\n                        <Text>{addData.id}</Text>\n                      </View>\n                    </Pressable>\n                  )}\n                </View>\n              ))}\n              <Pressable\n                onPress={() => {\n                  initializePaulyFromPartThree();\n                }}\n              >\n                <Text>\n                  {initThreeResult === loadingStateEnum.notStarted\n                    ? 'Start From Part Three'\n                    : initThreeResult === loadingStateEnum.loading\n                    ? 'Loading'\n                    : initThreeResult === loadingStateEnum.success\n                    ? 'Success'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n            </View>\n          ) : null}\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction UserBlock({\n  setSelectedUser,\n  setInitResult,\n}: {\n  setSelectedUser: (item: microsoftUserType) => void;\n  setInitResult: (item: loadingStateEnum) => void;\n}) {\n  const [currentUserId, setCurrentUserId] = useState<string>('');\n  const [loadedUsers, setLoadedUsers] = useState<microsoftUserType[]>([]);\n  const [loadUsersResult, setLoadUsersResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [nextLink, setNextLink] = useState<string | undefined>(undefined);\n  const { height } = useSelector((state: RootState) => state.dimentions);\n\n  async function getUserId() {\n    const result = await callMsGraph('https://graph.microsoft.com/v1.0/me');\n    if (result.ok) {\n      const data = await result.json();\n      setCurrentUserId(data.id);\n    }\n  }\n\n  async function getUsers(nextLink?: string) {\n    const result = await callMsGraph(\n      nextLink ||\n        'https://graph.microsoft.com/v1.0/users?$top=10&$select,id,displayName',\n    );\n    if (result.ok) {\n      const data = await result.json();\n      const newUsers: microsoftUserType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        newUsers.push({\n          id: data.value[index].id,\n          displayName: data.value[index].displayName,\n        });\n      }\n      setNextLink(data['@odata.nextLink']);\n      if (nextLink) {\n        setLoadedUsers([...loadedUsers, ...newUsers]);\n      } else {\n        setLoadedUsers(newUsers);\n      }\n      setLoadUsersResult(loadingStateEnum.success);\n    } else {\n      setLoadUsersResult(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getUserId();\n    getUsers();\n  }, []);\n\n  return (\n    <View style={{ height: height * 0.6 }}>\n      {loadUsersResult === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : (\n        <>\n          {loadUsersResult === loadingStateEnum.success ? (\n            <FlatList\n              data={loadedUsers}\n              renderItem={user => (\n                <View key={`User_${user.item.id}`}>\n                  {user.item.id !== currentUserId ? (\n                    <Pressable\n                      onPress={() => {\n                        setSelectedUser(user.item);\n                        setInitResult(loadingStateEnum.notStarted);\n                      }}\n                    >\n                      <View>\n                        <Text>{user.item.displayName}</Text>\n                      </View>\n                    </Pressable>\n                  ) : null}\n                </View>\n              )}\n              onEndReached={() => {\n                if (nextLink !== undefined) {\n                  getUsers(nextLink);\n                }\n              }}\n            />\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { getRooms } from '../../../../Functions/classesFunctions';\n\nexport default function GovernmentRooms() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [roomState, setRoomState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [rooms, setRooms] = useState<roomType[]>([]);\n\n  async function loadData() {\n    const result = await getRooms();\n    setRoomState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRooms(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Rooms</Text>\n      <View>\n        {roomState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {roomState === loadingStateEnum.success ? (\n              <View>\n                {rooms.map(room => (\n                  <View key={`Room_${room.id}`}>\n                    <Text>{room.name}</Text>\n                  </View>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room/create');\n        }}\n      >\n        <Text>Create Room</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput } from 'react-native';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { WarningIcon } from '../../../../UI/Icons/Icons';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID, {\n  getTextState,\n} from '../../../../Functions/ultility/createUUID';\n\nexport default function GovermentRoomsCreate() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [createRoomState, setCreateRoomState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const navigate = useNavigate();\n  const [roomName, setRoomName] = useState<string>('');\n\n  async function createRoom() {\n    if (\n      roomName !== '' &&\n      (createRoomState === loadingStateEnum.notStarted ||\n        createRoomState === loadingStateEnum.failed ||\n        createRoomState === loadingStateEnum.success)\n    ) {\n      setCreateRoomState(loadingStateEnum.loading);\n      const id = createUUID();\n      const items = {\n        fields: {\n          Title: id,\n          roomId: id,\n          roomName,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.roomListId}/items?expand=fields`,\n        'POST',\n        JSON.stringify(items),\n      );\n      if (result.ok) {\n        setCreateRoomState(loadingStateEnum.success);\n      } else {\n        setCreateRoomState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <View\n        style={{\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text>Create Room</Text>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        {roomName === '' ? (\n          <WarningIcon width={14} height={14} outlineColor=\"red\" />\n        ) : null}\n        <TextInput\n          value={roomName}\n          onChangeText={e => {\n            setRoomName(e);\n          }}\n          placeholder=\"Room Name\"\n        />\n      </View>\n      <Pressable\n        onPress={() => {\n          createRoom();\n        }}\n      >\n        <Text>\n          {getTextState(createRoomState, {\n            notStarted: 'Create Room',\n            success: 'Room Created',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Button, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport * as Clipboard from 'expo-clipboard';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { CopyIcon } from '../../../../UI/Icons/Icons';\nimport { RootState } from '../../../../Redux/store';\nimport { Colors } from '../../../../types';\n\nexport default function MicrosoftGraphEditList() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [currentColumns, setCurrentColumns] = useState<listColumnType[]>([]);\n  const { id } = useParams();\n  const [isCoppiedToClipboard, setIsCoppiedToClipboard] =\n    useState<boolean>(false);\n\n  const navigate = useNavigate();\n\n  async function getListItems() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items?expand=fields`,\n    );\n    if (result.ok) {\n      // const data = await result.json();\n    } else {\n    }\n  }\n  async function indexColumn(columnId: string) {\n    const data = {\n      indexed: 'true',\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/columns/${columnId}`,\n      'PATCH',\n      JSON.stringify(data),\n    ); // TO DO fix ids\n    if (result.ok) {\n      const data = await result.json();\n      const newColumnData: listColumnType[] = currentColumns;\n      const index = newColumnData.findIndex(e => {\n        e.id === columnId;\n      });\n      if (index !== -1) {\n        newColumnData[index].indexed = true;\n        setCurrentColumns(newColumnData);\n      } else {\n        // TO DO failed\n      }\n    }\n  }\n  async function getColumns() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/columns`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length !== undefined) {\n        const newCurrentColumns: listColumnType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          newCurrentColumns.push({\n            columnGroup: data.value[index].columnGroup,\n            description: data.value[index].description,\n            displayName: data.value[index].displayName,\n            enforceUniqueValues: data.value[index].enforceUniqueValues,\n            hidden: data.value[index].hidden,\n            id: data.value[index].id,\n            indexed: data.value[index].indexed,\n            name: data.value[index].name,\n            readOnly: data.value[index].readOnly,\n            required: data.value[index].required,\n          });\n        }\n        setCurrentColumns(newCurrentColumns);\n      }\n    } else {\n    }\n  }\n  useEffect(() => {\n    getListItems();\n    getColumns();\n  }, []);\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        width,\n        height,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Pressable onPress={() => navigate('/profile/government/graph/list')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Microsoft Graph Edit List</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>{id}</Text>\n        {isCoppiedToClipboard ? (\n          <Pressable\n            onPress={async () => {\n              await Clipboard.setStringAsync(id);\n            }}\n          >\n            <Text>Copied To Clipboard!</Text>\n          </Pressable>\n        ) : (\n          <Pressable\n            onPress={async () => {\n              await Clipboard.setStringAsync(id);\n              setIsCoppiedToClipboard(true);\n            }}\n          >\n            <CopyIcon width={14} height={14} />\n          </Pressable>\n        )}\n      </View>\n      <View\n        style={{\n          flexDirection: 'row',\n          overflow: 'scroll',\n          height: height * 0.4,\n        }}\n      >\n        {currentColumns.map(item => (\n          <View\n            style={{\n              width: width * 0.3,\n              height: height * 0.4,\n              borderColor: 'black',\n              borderWidth: 2,\n            }}\n          >\n            <Text>{item.displayName}</Text>\n            {item.indexed === false ? (\n              <Button\n                title=\"Index This Propertie\"\n                onPress={() => {\n                  indexColumn(item.id);\n                }}\n              />\n            ) : (\n              <Text>Already Indexed</Text>\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport * as Clipboard from 'expo-clipboard';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { CopyIcon } from '../../../../UI/Icons/Icons';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nexport default function MicrosoftGraphEditGroup() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n\n  const { id } = useParams();\n\n  const [isCoppiedToClipboard, setIsCoppiedToClipboard] =\n    useState<boolean>(false);\n  const [groupLoadingState, setGroupLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const [deleteGroupLoadingState, setDeleteGroupLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function getListItems() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      setGroupLoadingState(loadingStateEnum.success);\n    } else {\n      setGroupLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  async function deleteGroup() {\n    setDeleteGroupLoadingState(loadingStateEnum.loading);\n    const deleteGroupResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}`,\n      'DELETE',\n    );\n    if (deleteGroupResult.ok) {\n      setDeleteGroupLoadingState(loadingStateEnum.success);\n    } else {\n      setDeleteGroupLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getListItems();\n  }, []);\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        height,\n        width,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to=\"/profile/government/graph/group\">\n        <Text>Back</Text>\n      </Link>\n      <Text>MicrosoftGraphEditList</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>{id}</Text>\n        {id !== undefined ? (\n          <>\n            {isCoppiedToClipboard ? (\n              <Pressable\n                onPress={async () => {\n                  await Clipboard.setStringAsync(id);\n                }}\n              >\n                <Text>Copied To Clipboard!</Text>\n              </Pressable>\n            ) : (\n              <Pressable\n                onPress={async () => {\n                  await Clipboard.setStringAsync(id);\n                  setIsCoppiedToClipboard(true);\n                }}\n              >\n                <CopyIcon width={14} height={14} />\n              </Pressable>\n            )}\n          </>\n        ) : null}\n      </View>\n      <Pressable\n        onPress={() => {\n          deleteGroup();\n        }}\n      >\n        <Text>\n          {getTextState(deleteGroupLoadingState, {\n            notStarted: 'Delete Group',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nexport default function MicrosoftGraphEditExtension() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { mode, id } = useParams();\n\n  const [extensionLoadingState, setExtensionLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [deleteExtensionLoadingState, setDeleteExtensionLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const [extensionDescription, setExtensionDescription] = useState<string>('');\n\n  async function getExtension() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/schemaExtensions?$filter=id%20eq%20'${id}'`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length === 1) {\n        setExtensionDescription(data.value[0].description);\n        setExtensionLoadingState(loadingStateEnum.success);\n      } else {\n        setExtensionLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setExtensionLoadingState(loadingStateEnum.failed);\n    }\n  }\n  async function deleteExtension() {\n    if (\n      deleteExtensionLoadingState === loadingStateEnum.notStarted ||\n      deleteExtensionLoadingState === loadingStateEnum.failed\n    ) {\n      setDeleteExtensionLoadingState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/schemaExtensions/${id}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        setDeleteExtensionLoadingState(loadingStateEnum.success);\n      } else {\n        setDeleteExtensionLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        height,\n        width,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to={`/profile/government/graph/${mode}`}>\n        <Text>Back</Text>\n      </Link>\n      <Text>MicrosoftGraphEditExtension</Text>\n      <View />\n      <Pressable\n        onPress={() => {\n          deleteExtension();\n        }}\n      >\n        <Text>\n          {getTextState(deleteExtensionLoadingState, {\n            notStarted: 'Delete Extension',\n            success: 'Successfully Deleted Extension',\n            failed: 'Failed To Delete Extension',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View } from 'react-native';\nimport React from 'react';\nimport { useParams } from 'react-router-native';\nimport MicrosoftGraphEditList from './MicrosoftGraphEditList';\nimport MicrosoftGraphEditGroup from './MicrosoftGraphEditGroup';\nimport MicrosoftGraphEditExtension from './MicrosoftGraphEditExtension';\n\nexport default function MicrosoftGraphEdit() {\n  const { mode } = useParams();\n  return (\n    <View>\n      {mode === 'list' ? <MicrosoftGraphEditList /> : null}\n      {mode === 'group' ? <MicrosoftGraphEditGroup /> : null}\n      {mode === 'extension' ? <MicrosoftGraphEditExtension /> : null}\n    </View>\n  );\n}\n","import { View, Text } from 'react-native';\nimport React from 'react';\nimport {\n  BoldIcon,\n  CenterAlignmentIcon,\n  ItalicIcon,\n  LeftAlignmentIcon,\n  RightAlignmentIcon,\n  StrikeThroughIcon,\n  UnderlineIcon,\n} from '../../../../UI/Icons/Icons';\n\nexport default function TextEditorHeader() {\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <BoldIcon width={14} height={14} style={{ margin: 5 }} />\n      <ItalicIcon width={14} height={14} style={{ margin: 5 }} />\n      <UnderlineIcon width={14} height={14} style={{ margin: 5 }} />\n      <StrikeThroughIcon width={14} height={14} style={{ margin: 5 }} />\n      <LeftAlignmentIcon width={14} height={14} style={{ margin: 5 }} />\n      <CenterAlignmentIcon width={14} height={14} style={{ margin: 5 }} />\n      <RightAlignmentIcon width={14} height={14} style={{ margin: 5 }} />\n    </View>\n  );\n}\n","import { View, Text } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport ReactQuill from 'react-quill';\nimport TextEditorHeader from './TextEditorHeader';\n\nexport default function GovernmentResourcesPost() {\n  const [postData, setPostData] = useState<string>('');\n  return (\n    <View>\n      <Text>Government Resources Post</Text>\n      <TextEditorHeader />\n    </View>\n  );\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  Switch,\n  ScrollView,\n  FlatList,\n  ListRenderItemInfo,\n  Modal,\n} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport store, { RootState } from '../../../Redux/store';\nimport callMsGraph from '../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum, resourceResponce } from '../../../types';\nimport ProgressView from '../../../UI/ProgressView';\nimport getResource from '../../../Functions/getResources';\nimport GovernmentResourcesPost from './GovernmentResourcesPost/GovernmentResourcesPost';\nimport { getChannels } from '../../../Functions/microsoftGroupsFunctions';\n\ntype resourceGroupType = {\n  name: string;\n  id: string;\n};\n\nfunction ChannelBlock({\n  channel,\n  groupId,\n  onUpdate,\n  selectedGroup,\n}: {\n  channel: ListRenderItemInfo<channelType>;\n  groupId: string;\n  onUpdate: (item: channelType) => void;\n  selectedGroup: string;\n}) {\n  const [isSelected, setIsSelected] = useState<boolean>(channel.item.selected);\n  const [isLoading, setIsLoading] = useState<boolean>(channel.item.loading);\n\n  async function addChannel() {\n    const data = {\n      fields: {\n        resourceGroupId: groupId,\n        resourceConversationId: channel.item.id,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.resourceListId}/items`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      onUpdate({\n        ...channel.item,\n        selected: true,\n        loading: false,\n      });\n      setIsSelected(true);\n      setIsLoading(false);\n    } else {\n      onUpdate({\n        ...channel.item,\n        loading: false,\n      });\n      setIsLoading(false);\n    }\n  }\n\n  async function removeChannel() {\n    const itemResult = await getResource(groupId, channel.item.id);\n    if (\n      itemResult.result === resourceResponce.found &&\n      itemResult.itemId !== undefined\n    ) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.resourceListId}/items/${\n          itemResult.itemId\n        }`,\n        'DELETE',\n      );\n      if (result.ok) {\n        onUpdate({\n          ...channel.item,\n          selected: false,\n          loading: false,\n        });\n        setIsSelected(false);\n        setIsLoading(false);\n      } else {\n        onUpdate({\n          ...channel.item,\n          loading: false,\n        });\n        setIsLoading(false);\n      }\n    } else {\n      onUpdate({\n        ...channel.item,\n        loading: false,\n      });\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <View\n      key={`Team_Channel_${channel.item.id}`}\n      style={{ flexDirection: 'row' }}\n    >\n      {isLoading ? (\n        <ProgressView width={12} height={12} />\n      ) : (\n        <View>\n          {selectedGroup === groupId ? (\n            <Switch\n              trackColor={{ false: '#767577', true: '#81b0ff' }}\n              thumbColor={isSelected ? '#f5dd4b' : '#f4f3f4'}\n              ios_backgroundColor=\"#3e3e3e\"\n              onValueChange={e => {\n                onUpdate({\n                  ...channel.item,\n                  loading: true,\n                });\n                setIsLoading(true);\n                if (e === true) {\n                  addChannel();\n                } else {\n                  removeChannel();\n                }\n              }}\n              value={isSelected}\n            />\n          ) : (\n            <View\n              style={{\n                height: 12,\n                width: 12,\n                borderRadius: 50,\n                backgroundColor: channel.item.selected ? 'green' : 'blue',\n              }}\n            />\n          )}\n        </View>\n      )}\n      <Text>{channel.item.displayName}</Text>\n    </View>\n  );\n}\n\nfunction GroupBlock({\n  group,\n  selectedGroup,\n  setSelectedGroup,\n}: {\n  group: resourceGroupType;\n  selectedGroup: string;\n  setSelectedGroup: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [channels, setChannels] = useState<channelType[]>([]);\n  const [channelState, setChannelState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  async function loadChannels() {\n    const result = await getChannels(group.id);\n    if (result.result === loadingStateEnum.success) {\n      setChannels(result.data);\n      setChannelState(loadingStateEnum.success);\n    } else {\n      setChannelState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadChannels();\n  }, []);\n  return (\n    <Pressable\n      key={`Team_${group.id}`}\n      onPress={() => {\n        setSelectedGroup(group.id);\n      }}\n    >\n      <View\n        style={{\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n          marginLeft: width * 0.03,\n          marginRight: width * 0.03,\n          marginTop: height * 0.02,\n          marginBottom: height * 0.02,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          <Text>{group.name}</Text>\n          <Text>Channels</Text>\n          {channelState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.2,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {channelState === loadingStateEnum.success ? (\n                <FlatList\n                  data={channels}\n                  renderItem={channel => (\n                    <ChannelBlock\n                      key={channel.item.id}\n                      channel={channel}\n                      groupId={group.id}\n                      onUpdate={item => {\n                        const newChannels = [...channels];\n                        newChannels[channel.index] = item;\n                        setChannels([...newChannels]);\n                      }}\n                      selectedGroup={selectedGroup}\n                    />\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nexport default function GovernmentResources() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [groups, setGroups] = useState<resourceGroupType[]>([]);\n  const [selectedGroup, setSelectedGroup] = useState<string>('');\n  const [getTeamsState, setGetTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [isShowingEditor, setIsShowingEditor] = useState<boolean>(false);\n  const navigate = useNavigate();\n\n  async function getTeams() {\n    const result = await callMsGraph(\n      \"https://graph.microsoft.com/v1.0/groups?$filter=resourceProvisioningOptions/Any(x:x eq 'Team')\",\n    );\n    if (!result.ok) {\n      setGetTeamsState(loadingStateEnum.failed);\n      return;\n    }\n    const data = await result.json();\n    const resultGroups: resourceGroupType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultGroups.push({\n        name: data.value[index].displayName,\n        id: data.value[index].id,\n      });\n    }\n    setGetTeamsState(loadingStateEnum.success);\n    setGroups(resultGroups);\n  }\n\n  useEffect(() => {\n    getTeams();\n  }, []);\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Government Resources</Text>\n        <Pressable onPress={() => setIsShowingEditor(true)}>\n          <Text>Show</Text>\n        </Pressable>\n        <Modal\n          animationType=\"slide\"\n          visible={isShowingEditor}\n          onRequestClose={() => setIsShowingEditor(false)}\n        >\n          <GovernmentResourcesPost />\n        </Modal>\n      </View>\n      <ScrollView style={{ height: height * 0.9 }}>\n        {getTeamsState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {getTeamsState === loadingStateEnum.success ? (\n              <View>\n                {groups.map(group => (\n                  <GroupBlock\n                    key={group.id}\n                    group={group}\n                    selectedGroup={selectedGroup}\n                    setSelectedGroup={setSelectedGroup}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n","import { View, Text, Pressable, ViewStyle } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport createUUID from '../Functions/ultility/createUUID';\nimport { Colors } from '../types';\n\nexport default function ListItem({\n  to,\n  title,\n  width,\n  caption,\n  onPress,\n  style,\n}: {\n  title: string;\n  width: number;\n  caption?: string | undefined;\n  to?: string | undefined;\n  onPress?: () => void | undefined;\n  style?: ViewStyle | undefined;\n}) {\n  const navigate = useNavigate();\n  return (\n    <Pressable\n      onPress={() => {\n        if (to !== undefined) {\n          navigate(to);\n        }\n        if (onPress !== undefined) {\n          onPress();\n        }\n      }}\n      key={createUUID()}\n      style={[\n        {\n          shadowColor: Colors.black,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n          marginLeft: width * 0.03,\n          marginRight: width * 0.03,\n        },\n        style,\n      ]}\n    >\n      <View style={{ margin: 10 }}>\n        <Text style={{ fontSize: 16 }}>{title}</Text>\n        {caption !== undefined ? (\n          <Text style={{ fontSize: 12 }}>{caption}</Text>\n        ) : null}\n      </View>\n    </Pressable>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getDressCodeData(): Promise<{\n  result: loadingStateEnum;\n  data?: dressCodeType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeName,dressCodeId,dressCodeData)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newDressCodes: dressCodeType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      try {\n        newDressCodes.push({\n          name: data.value[index].fields.dressCodeName,\n          id: data.value[index].fields.dressCodeId,\n          listId: data.value[index].id,\n          dressCodeData: JSON.parse(data.value[index].fields.dressCodeData),\n          dressCodeIncentives: [],\n        });\n      } catch {\n        continue;\n      }\n    }\n    return { result: loadingStateEnum.success, data: newDressCodes };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport ListItem from '../../../../../UI/ListItem';\nimport getDressCodeData from '../../../../../Functions/homepage/getDressCodeData';\n\nexport default function GovernmentDressCode() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [getDressCodeState, setGetDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [dressCodes, setDressCodes] = useState<dressCodeType[]>([]);\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getDressCodeData();\n    setGetDressCodeState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setDressCodes(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government/calendar')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n        Dress Codes\n      </Text>\n      <View>\n        {getDressCodeState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {getDressCodeState === loadingStateEnum.success ? (\n              <View>\n                {dressCodes.map(dressCode => (\n                  <ListItem\n                    key={dressCode.id}\n                    to={`/profile/government/calendar/dresscode/${dressCode.id}`}\n                    title={dressCode.name}\n                    width={width}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate('/profile/government/calendar/dresscode/create')\n        }\n      >\n        <Text>Create Dress Code</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Pressable, View, Text, TextInput } from 'react-native';\nimport React from 'react';\nimport { RootState } from '../../../../../Redux/store';\nimport {\n  CloseIcon,\n  DownIcon,\n  UpIcon,\n  WarningIcon,\n} from '../../../../../UI/Icons/Icons';\n\nexport default function DressCodeBlock({\n  dressCode,\n  index,\n  dressCodeData,\n  setDressCodeData,\n  selectedDressCodeId,\n  setSelectedDressCodeId,\n}: {\n  dressCode: dressCodeDataType;\n  index: number;\n  dressCodeData: dressCodeDataType[];\n  setDressCodeData: (item: dressCodeDataType[]) => void;\n  selectedDressCodeId: string;\n  setSelectedDressCodeId: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <Pressable\n      onPress={() => {\n        setSelectedDressCodeId(dressCode.id);\n      }}\n      style={{\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n        marginLeft: width * 0.03,\n        marginRight: width * 0.03,\n        marginTop: height * 0.02,\n        marginBottom: height * 0.02,\n      }}\n    >\n      <View style={{ margin: 10, flexDirection: 'row' }}>\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            {dressCode.name === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>\n              Name: {selectedDressCodeId === dressCode.id ? '' : dressCode.name}\n            </Text>\n            {selectedDressCodeId === dressCode.id ? (\n              <TextInput\n                placeholder=\"Dress Code Name\"\n                value={dressCode.name}\n                onChangeText={e => {\n                  const newDressCodeData = dressCodeData;\n                  newDressCodeData[index].name = e;\n                  setDressCodeData([...newDressCodeData]);\n                }}\n              />\n            ) : null}\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {dressCode.description === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>\n              Description:{' '}\n              {selectedDressCodeId === dressCode.id\n                ? ''\n                : dressCode.description}\n            </Text>\n            {selectedDressCodeId === dressCode.id ? (\n              <TextInput\n                placeholder=\"Dress Code Description\"\n                value={dressCode.description}\n                onChangeText={e => {\n                  const newDressCodeData = dressCodeData;\n                  newDressCodeData[index].description = e;\n                  setDressCodeData([...newDressCodeData]);\n                }}\n              />\n            ) : null}\n          </View>\n        </View>\n        <View>\n          <UpIcon width={14} height={14} />\n          <DownIcon width={14} height={14} />\n          <CloseIcon width={14} height={14} />\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n","import { View, Text, TextInput, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-native';\nimport store, { RootState } from '../../../../../Redux/store';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport DressCodeBlock from './DressCodeBlock';\nimport { createDressCode } from '../../../../../Functions/calendar/calendarFunctionsGraph';\nimport getDressCode from '../../../../../Functions/homepage/getDressCode';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\n\nexport default function GovernmentDressCodeEdit() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [dressCodeName, setDressCodeName] = useState<string>('');\n  const [dressCodeData, setDressCodeData] = useState<dressCodeDataType[]>([\n    { name: '', description: '', id: createUUID() },\n  ]);\n  const [selectedDressCodeId, setSelectedDressCodeId] = useState<string>('');\n  const [dressCodeListId, setDressCodeListId] = useState<string>('');\n\n  const [createDressCodeState, setCreateDressCodeState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const navigate = useNavigate();\n\n  async function loadCreateDressCode() {\n    const result = await createDressCode(dressCodeName, dressCodeData);\n    setCreateDressCodeState(result);\n  }\n\n  const { id } = useParams();\n\n  const [getDressCodeState, setDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [isCreatingDressCode, setIsCreatingDressCode] =\n    useState<boolean>(false);\n  const [deleteDressCodeState, setDeleteDressCodeState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function deleteDressCode() {\n    setDeleteDressCodeState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.dressCodeListId\n      }/items/${dressCodeListId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n      setDeleteDressCodeState(loadingStateEnum.success);\n    } else {\n      setDeleteDressCodeState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadData() {\n    if (id !== undefined && id !== 'create') {\n      const result = await getDressCode(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setDressCodeListId(result.data.listId);\n        setDressCodeName(result.data.name);\n        setDressCodeData(result.data.dressCodeData);\n        setIsCreatingDressCode(false);\n        setDressCodeState(loadingStateEnum.success);\n      } else {\n        setDressCodeState(loadingStateEnum.failed);\n      }\n    } else if (id === 'create') {\n      setIsCreatingDressCode(true);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, [id]);\n\n  return (\n    <>\n      {isCreatingDressCode || getDressCodeState === loadingStateEnum.success ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() => navigate('/profile/government/calendar/dresscode')}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <Text>Create Dress Code</Text>\n          <Text>Dress Code Name:</Text>\n          <TextInput\n            value={dressCodeName}\n            onChangeText={setDressCodeName}\n            placeholder=\"Dress Code Name\"\n          />\n          <ScrollView style={{ height: height * 0.7 }}>\n            {dressCodeData.map((dressCode, index) => (\n              <DressCodeBlock\n                dressCode={dressCode}\n                dressCodeData={dressCodeData}\n                index={index}\n                setDressCodeData={setDressCodeData}\n                selectedDressCodeId={selectedDressCodeId}\n                setSelectedDressCodeId={setSelectedDressCodeId}\n              />\n            ))}\n          </ScrollView>\n          <Pressable\n            onPress={() => {\n              setDressCodeData([\n                ...dressCodeData,\n                { name: '', description: '', id: createUUID() },\n              ]);\n            }}\n          >\n            <Text>Add</Text>\n          </Pressable>\n          <Pressable onPress={() => loadCreateDressCode()}>\n            <Text>\n              {createDressCodeState === loadingStateEnum.notStarted\n                ? 'Create Dress Code'\n                : createDressCodeState === loadingStateEnum.loading\n                ? 'Loading'\n                : createDressCodeState === loadingStateEnum.success\n                ? 'Created Dress Code'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {!isCreatingDressCode ? (\n            <Pressable style={{ margin: 10 }} onPress={() => deleteDressCode()}>\n              <Text>\n                {deleteDressCodeState === loadingStateEnum.notStarted\n                  ? 'Delete'\n                  : deleteDressCodeState === loadingStateEnum.loading\n                  ? 'Loading'\n                  : deleteDressCodeState === loadingStateEnum.success\n                  ? 'Success'\n                  : 'Failed'}\n              </Text>\n            </Pressable>\n          ) : null}\n        </View>\n      ) : (\n        <>\n          {getDressCodeState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Pressable\n                onPress={() =>\n                  navigate('/profile/government/calendar/dresscode')\n                }\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              <Pressable\n                onPress={() =>\n                  navigate('/profile/government/calendar/dresscode')\n                }\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import {\n  View,\n  Text,\n  TextInput,\n  Button,\n  Pressable,\n  ScrollView,\n} from 'react-native';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport { DownIcon, UpIcon, WarningIcon } from '../../../../../UI/Icons/Icons';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport { RootState } from '../../../../../Redux/store';\nimport getDressCodeData from '../../../../../Functions/homepage/getDressCodeData';\nimport ListItem from '../../../../../UI/ListItem';\nimport { getSchedules } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\n// TO DO longest amount of school days is 20 make sure this is enforced\nexport default function GovernmentTimetableEdit() {\n  const { timetablesListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n\n  // Loading States\n  const [dressCodeState, setDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [createTimetableLoadingState, setCreateTimetableLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  // New Table Data\n  const [timetableName, setTimetableName] = useState<string>('');\n  const [selectedSchedules, setSelectedSchedules] = useState<scheduleType[]>(\n    [],\n  );\n  const [dressCodes, setDressCodes] = useState<dressCodeType[]>([]);\n  const [selectedDressCode, setSelectedDressCode] = useState<\n    dressCodeType | undefined\n  >(undefined);\n  const [schoolDays, setSchoolDays] = useState<schoolDayType[]>([]);\n  const [selectedDefaultSchedule, setSelectedDefaultSchedule] = useState<\n    scheduleType | undefined\n  >(undefined);\n\n  async function createTimetable() {\n    if (\n      selectedDefaultSchedule !== undefined &&\n      selectedDressCode !== undefined\n    ) {\n      // Check to make sure all have the same number of periods\n      for (let index = 0; index < selectedSchedules.length; index += 1) {\n        if (\n          selectedSchedules[index].periods.length !==\n          selectedDefaultSchedule.periods.length\n        ) {\n          setCreateTimetableLoadingState(loadingStateEnum.failed);\n          return;\n        }\n      }\n\n      // Create Timetable\n      setCreateTimetableLoadingState(loadingStateEnum.loading);\n      const scheduals = [];\n      for (let index = 0; index < selectedSchedules.length; index += 1) {\n        scheduals.push(selectedSchedules[index].id);\n      }\n      const data = {\n        fields: {\n          Title: timetableName,\n          timetableName,\n          timetableId: createUUID(),\n          timetableDataSchedules: JSON.stringify(scheduals),\n          timetableDataDays: JSON.stringify(schoolDays),\n          timetableDefaultScheduleId: selectedDefaultSchedule.id,\n          timetableDressCodeId: selectedDressCode.id,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${timetablesListId}/items?expand=fields`,\n        'POST',\n        JSON.stringify(data),\n      ); // TO DO fix site id\n      if (result.ok) {\n        setCreateTimetableLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTimetableLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function getDressCodes() {\n    const result = await getDressCodeData();\n    setDressCodeState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setDressCodes(result.data);\n    }\n  }\n\n  useEffect(() => {\n    getDressCodes();\n  }, []);\n  return (\n    <View\n      style={{\n        height,\n        width,\n        overflow: 'scroll',\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to=\"/profile/government/calendar/timetable/\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Create Timetable</Text>\n      <View style={{ backgroundColor: '#FF6700', borderRadius: 15, margin: 5 }}>\n        <View style={{ margin: 10 }}>\n          <Text>\n            Warning: because of the way that timetables work some properties\n            cannot be edited.\n          </Text>\n          <Text>The dress code you pick cannot change</Text>\n          <Text>\n            Schedules can be added but they have to have the same number of\n            periods\n          </Text>\n          <Text>\n            The number of days in a schedule cannot go up or down only the order\n            and the name can be changed\n          </Text>\n        </View>\n      </View>\n      <View>\n        <TextInput\n          value={timetableName}\n          onChangeText={e => {\n            setTimetableName(e);\n          }}\n          placeholder=\"Timetable Name\"\n        />\n      </View>\n      <ScheduleBlock\n        selectedSchedules={selectedSchedules}\n        setSelectedSchedules={setSelectedSchedules}\n        selectedDefaultSchedule={selectedDefaultSchedule}\n        setSelectedDefaultSchedule={setSelectedDefaultSchedule}\n      />\n      <SchoolDays\n        height={height}\n        schoolDays={schoolDays}\n        setSchoolDays={setSchoolDays}\n      />\n      <Text>Dress Codes</Text>\n      <View>\n        {dressCodeState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {dressCodeState === loadingStateEnum.success ? (\n              <View>\n                {dressCodes.map(dressCode => (\n                  <ListItem\n                    title={dressCode.name}\n                    width={width * 0.8}\n                    onPress={() => {\n                      setSelectedDressCode(dressCode);\n                    }}\n                    style={{\n                      backgroundColor:\n                        selectedDressCode?.id === dressCode.id\n                          ? 'blue'\n                          : Colors.white,\n                    }}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Button\n        title={\n          createTimetableLoadingState === loadingStateEnum.notStarted\n            ? 'Create Timetable'\n            : createTimetableLoadingState === loadingStateEnum.loading\n            ? 'Loading'\n            : createTimetableLoadingState === loadingStateEnum.success\n            ? 'Success'\n            : 'Failed'\n        }\n        onPress={() => {\n          if (createTimetableLoadingState === loadingStateEnum.notStarted) {\n            createTimetable();\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nfunction SchoolDays({\n  height,\n  schoolDays,\n  setSchoolDays,\n}: {\n  height: number;\n  schoolDays: schoolDayType[];\n  setSchoolDays: (item: schoolDayType[]) => void;\n}) {\n  return (\n    <View>\n      <Text>School Days</Text>\n      <ScrollView style={{ height: height * 0.2 }}>\n        {schoolDays.map((item, index) => (\n          <SchoolDayItem\n            item={item}\n            index={index}\n            schoolDays={schoolDays}\n            setSchoolDays={setSchoolDays}\n          />\n        ))}\n      </ScrollView>\n      <Button\n        title=\"Add\"\n        onPress={() => {\n          setSchoolDays([\n            ...schoolDays,\n            {\n              name: '',\n              shorthand: '',\n              id: createUUID(),\n              order:\n                schoolDays.length === 0\n                  ? 0\n                  : schoolDays[schoolDays.length - 1].order + 1,\n            },\n          ]);\n        }}\n      />\n    </View>\n  );\n}\n\nfunction SchoolDayItem({\n  item,\n  index,\n  schoolDays,\n  setSchoolDays,\n}: {\n  item: schoolDayType;\n  index: number;\n  schoolDays: schoolDayType[];\n  setSchoolDays: (item: schoolDayType[]) => void;\n}) {\n  const [selected, setSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      style={{ flexDirection: 'row' }}\n      onHoverIn={() => {\n        setSelected(true);\n      }}\n      onHoverOut={() => {\n        setSelected(false);\n      }}\n    >\n      <View style={{ margin: 10, flexDirection: 'row' }}>\n        <View style={{ marginRight: 'auto' }}>\n          <View style={{ flexDirection: 'row' }}>\n            {item.name === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>Name: </Text>\n            {selected ? (\n              <TextInput\n                value={item.name}\n                onChangeText={e => {\n                  const newSchoolDays = schoolDays;\n                  newSchoolDays[index].name = e;\n                  setSchoolDays([...newSchoolDays]);\n                }}\n              />\n            ) : (\n              <Text>{item.name}</Text>\n            )}\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {item.shorthand === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>Shorthand: </Text>\n            {selected ? (\n              <TextInput\n                maxLength={1}\n                value={item.shorthand}\n                onChangeText={e => {\n                  const newSchoolDays = schoolDays;\n                  newSchoolDays[index].shorthand = e;\n                  setSchoolDays([...newSchoolDays]);\n                }}\n              />\n            ) : (\n              <Text>{item.shorthand}</Text>\n            )}\n          </View>\n        </View>\n        <View>\n          {item.order !== 0 ? (\n            <Pressable\n              onPress={() => {\n                const newSchoolDays = schoolDays;\n                newSchoolDays[index].order = newSchoolDays[index].order - 1;\n                newSchoolDays[index - 1].order =\n                  newSchoolDays[index - 1].order + 1;\n                const saveCurrent = newSchoolDays[index];\n                newSchoolDays[index] = newSchoolDays[index - 1];\n                newSchoolDays[index - 1] = saveCurrent;\n                setSchoolDays([...newSchoolDays]);\n              }}\n            >\n              <UpIcon width={10} height={10} />\n            </Pressable>\n          ) : null}\n          {item.order + 1 < schoolDays.length ? (\n            <Pressable\n              onPress={() => {\n                const newSchoolDays = schoolDays;\n                newSchoolDays[index].order = newSchoolDays[index].order + 1;\n                newSchoolDays[index + 1].order =\n                  newSchoolDays[index + 1].order - 1;\n                const saveCurrent = newSchoolDays[index];\n                newSchoolDays[index] = newSchoolDays[index + 1];\n                newSchoolDays[index + 1] = saveCurrent;\n                setSchoolDays([...newSchoolDays]);\n              }}\n            >\n              <DownIcon width={10} height={10} />\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => {\n              const newSchoolDays = schoolDays;\n              newSchoolDays.splice(index, 1);\n              setSchoolDays([...newSchoolDays]);\n            }}\n          >\n            <Text>X</Text>\n          </Pressable>\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nfunction ScheduleBlock({\n  selectedSchedules,\n  setSelectedSchedules,\n  selectedDefaultSchedule,\n  setSelectedDefaultSchedule,\n}: {\n  selectedSchedules: scheduleType[];\n  setSelectedSchedules: (item: scheduleType[]) => void;\n  selectedDefaultSchedule: scheduleType | undefined;\n  setSelectedDefaultSchedule: (item: scheduleType) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [loadedSchedules, setLoadedSchedules] = useState<scheduleType[]>([]);\n  const [scheduleState, setScheduleState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  async function loadSchedules() {\n    const result = await getSchedules();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setLoadedSchedules(result.data);\n    }\n    setScheduleState(result.result);\n  }\n  useEffect(() => {\n    loadSchedules();\n  }, []);\n  return (\n    <View>\n      <Text>Scheduals</Text>\n      <Text>Selected Schedules</Text>\n      <ScrollView style={{ height: height * 0.4 }}>\n        {selectedSchedules.map(item => (\n          <View\n            style={{ height: height * 0.03 + 16 }}\n            key={`SelectedSchedule_${item.id}`}\n          >\n            <Text>{item.properName}</Text>\n            {selectedDefaultSchedule?.id !== item.id ? (\n              <Pressable\n                onPress={() => {\n                  setSelectedDefaultSchedule(item);\n                }}\n                style={{ backgroundColor: 'blue', height: 16 }}\n              >\n                <Text>Select As Default</Text>\n              </Pressable>\n            ) : null}\n          </View>\n        ))}\n      </ScrollView>\n      <View style={{ alignItems: 'center' }}>\n        <Text>Other Schedules</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.4 }}>\n        {scheduleState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : null}\n        {scheduleState === loadingStateEnum.failed ? <Text>Failed</Text> : null}\n        {scheduleState === loadingStateEnum.success ? (\n          <>\n            {loadedSchedules.map((item, index) => (\n              <>\n                {selectedSchedules.length <= 0 ? (\n                  <Pressable\n                    key={`Timetable_${item.id}_${createUUID()}`}\n                    onPress={() => {\n                      setSelectedSchedules([...selectedSchedules, item]);\n                      const newLoadedSchedules = loadedSchedules.filter(e => {\n                        return e.id !== item.id;\n                      });\n                      setLoadedSchedules([...newLoadedSchedules]);\n                      if (selectedDefaultSchedule === undefined) {\n                        setSelectedDefaultSchedule(item);\n                      }\n                    }}\n                  >\n                    <Text>{item.properName}</Text>\n                  </Pressable>\n                ) : (\n                  <>\n                    {selectedSchedules[0].periods.length ===\n                    item.periods.length ? (\n                      <Pressable\n                        key={`Timetable_${item.id}_${createUUID()}`}\n                        onPress={() => {\n                          setSelectedSchedules([...selectedSchedules, item]);\n                          const newLoadedSchedules = loadedSchedules.filter(\n                            e => {\n                              return e.id !== item.id;\n                            },\n                          );\n                          setLoadedSchedules([...newLoadedSchedules]);\n                          if (selectedDefaultSchedule === undefined) {\n                            setSelectedDefaultSchedule(item);\n                          }\n                        }}\n                      >\n                        <Text>{item.properName}</Text>\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              </>\n            ))}\n          </>\n        ) : null}\n      </ScrollView>\n    </View>\n  );\n}\n","import { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { useMsal } from '@azure/msal-react';\nimport {\n  revokeAsync,\n  DiscoveryDocument,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport React from 'react';\nimport { Text, Platform, Pressable } from 'react-native';\nimport store from '../../Redux/store';\nimport { authenticationTokenSlice } from '../../Redux/reducers/authenticationTokenReducer';\nimport { tenantId } from '../../PaulyConfig';\nimport { Colors } from '../../types';\n\nexport default function ProfileBlock() {\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => signOut()}\n      style={{\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        margin: 5,\n        borderRadius: 15,\n      }}\n    >\n      <Text numberOfLines={1} style={{ fontSize: 20, margin: 10 }}>\n        Sign Out\n      </Text>\n    </Pressable>\n  );\n}\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n","import { loadingStateEnum } from '../types';\nimport { studentSearchSlice } from '../Redux/reducers/studentSearchReducer';\nimport store from '../Redux/store';\nimport largeBatch from './ultility/batchRequest';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { domainName } from '../PaulyConfig';\n\nfunction checkIfStudent(role: string): {\n  result: boolean;\n  grade?: '9' | '10' | '11' | '12';\n} {\n  if (role.length >= 20) {\n    const reversed = role.split('').reverse().join('');\n    const slice = reversed.slice(0, domainName.length);\n    if (slice === domainName.split('').reverse().join('')) {\n      const getMonth = new Date().getMonth();\n      let schoolYear = new Date().getFullYear();\n      if (schoolYear.toString().length >= 4) {\n        if (getMonth > 6) {\n          schoolYear += 1;\n        }\n        const reverseYearTwelve = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearEleven = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearTen = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearNine = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        if (reversed.slice(16, 17) === reverseYearTwelve) {\n          return { result: true, grade: '12' };\n        }\n        if (reversed.slice(16, 17) === reverseYearEleven) {\n          return { result: true, grade: '11' };\n        }\n        if (reversed.slice(16, 17) === reverseYearTen) {\n          return { result: true, grade: '10' };\n        }\n        if (reversed.slice(16, 17) === reverseYearNine) {\n          return { result: true, grade: '9' };\n        }\n        return { result: false };\n      }\n      return { result: false };\n    }\n    return { result: false };\n  }\n  return { result: false };\n}\n\nexport async function getUsers(url?: string, search?: string) {\n  const filter = search ? `&$search=\"displayName:${search}\"` : '';\n\n  const result = await callMsGraph(\n    url ||\n      `https://graph.microsoft.com/v1.0/users?$select=displayName,id,mail${filter}`,\n    'GET',\n    undefined,\n    search ? [{ key: 'ConsistencyLevel', value: 'eventual' }] : undefined,\n  );\n  if (result.ok) {\n    // Getting user Ids from result\n    const data = await result.json();\n    const userIds: string[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      userIds.push(data.value[index].id);\n    }\n\n    // Getting selected user images from student files list in a batch request.\n    const batchResult = await largeBatch(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.studentFilesListId\n      }/items?$expand=fields&$filter=fields/userId%20eq%20'`,\n      secondUrl: \"'%20and%20fields/selected%20eq%20true\",\n      method: 'GET',\n      keys: { array: userIds },\n    });\n    const imagesIdsMap = new Map<string, string>(); // Key is userId, value is image data id\n    const imageIdsArray: string[] = [];\n    if (\n      batchResult.result === loadingStateEnum.success &&\n      batchResult.data !== undefined\n    ) {\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResult.data.length;\n        batchIndex += 1\n      ) {\n        if (batchResult.data[batchIndex].status === 200) {\n          // TO DO OK\n          if (batchResult.data[batchIndex].body.value.length === 1) {\n            // Checking to make suare only one item is selected\n            imagesIdsMap.set(\n              batchResult.data[batchIndex].body.value[0].fields.userId,\n              batchResult.data[batchIndex].body.value[0].fields.itemId,\n            );\n            imageIdsArray.push(\n              batchResult.data[batchIndex].body.value[0].fields.itemId,\n            );\n          }\n        } else {\n          // Batch Response Failed\n          store.dispatch(\n            studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n          );\n          return;\n        }\n      }\n    } else {\n      // Batch Failed\n      store.dispatch(\n        studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n      );\n      return;\n    }\n\n    // Getting downloadUrls for images\n    const batchResultDownloadUrls = await largeBatch(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/drive/items/`,\n      secondUrl: '?$expand=thumbnails($select=c300x400_crop)&$select=id', // ?select=id,content.downloadUrl\n      method: 'GET',\n      keys: { array: imageIdsArray },\n    });\n    const imagesDownloadUrls = new Map<string, string>(); // Key is the item id on the sharepoint and value is the downlad url\n    if (\n      batchResultDownloadUrls.result === loadingStateEnum.success &&\n      batchResultDownloadUrls.data !== undefined\n    ) {\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultDownloadUrls.data.length;\n        batchIndex += 1\n      ) {\n        if (batchResultDownloadUrls.data[batchIndex].status === 200) {\n          // TO DO OK\n          imagesDownloadUrls.set(\n            batchResultDownloadUrls.data[batchIndex].body.id,\n            batchResultDownloadUrls.data[batchIndex].body.thumbnails[0]\n              .c300x400_crop.url,\n          );\n        } else {\n          // Get Image failed\n          store.dispatch(\n            studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n          );\n          return;\n        }\n      }\n    } else {\n      // Getting images batch failed\n      store.dispatch(\n        studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n      );\n      return;\n    }\n\n    const outputUsers: schoolUserType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const imageId = imagesIdsMap.get(data.value[index].id);\n      if (imageId !== undefined) {\n        const imageDownloadUrl = imagesDownloadUrls.get(imageId);\n        if (imageDownloadUrl !== undefined) {\n          outputUsers.push({\n            name: data.value[index].displayName,\n            id: data.value[index].id,\n            mail: data.value[index].mail,\n            role: data.value[index].mail,\n            grade: checkIfStudent(data.value[index].mail).grade,\n            student: checkIfStudent(data.value[index].mail).result,\n            imageDownloadUrl,\n            imageState: loadingStateEnum.notStarted,\n          });\n        } else {\n          outputUsers.push({\n            name: data.value[index].displayName,\n            id: data.value[index].id,\n            mail: data.value[index].mail,\n            role: data.value[index].mail,\n            grade: checkIfStudent(data.value[index].mail).grade,\n            student: checkIfStudent(data.value[index].mail).result,\n            imageDownloadUrl: 'noImage',\n            imageState: loadingStateEnum.cannotStart,\n          });\n        }\n      } else {\n        outputUsers.push({\n          name: data.value[index].displayName,\n          id: data.value[index].id,\n          mail: data.value[index].mail,\n          role: data.value[index].mail,\n          grade: checkIfStudent(data.value[index].mail).grade,\n          student: checkIfStudent(data.value[index].mail).result,\n          imageDownloadUrl: 'noImage',\n          imageState: loadingStateEnum.cannotStart,\n        });\n      }\n    }\n    store.dispatch(studentSearchSlice.actions.setStudentUsers(outputUsers));\n    store.dispatch(\n      studentSearchSlice.actions.setNextLink(data['@odata.nextLink']),\n    );\n    store.dispatch(\n      studentSearchSlice.actions.setUsersState(loadingStateEnum.success),\n    );\n  } else {\n    // Getting users failed\n    store.dispatch(\n      studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n    );\n  }\n}\n\nexport async function getStudentData(\n  userId: string,\n): Promise<{ result: loadingStateEnum; data?: studentInformationType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items?$expand=fields&$filter=fields/userId%20eq%20'${userId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultData: studentInformationType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultData.push({\n        listId: data.value[index].fields.id,\n        driveId: data.value[index].fields.itemId,\n        selected: data.value[index].fields.selected,\n        createdTime: data.value[index].fields.createdTime,\n      });\n    }\n    return { result: loadingStateEnum.success, data: resultData };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function changeStudentSelection(\n  listItemId: string,\n  selectedFileListId: string,\n  fileData: studentInformationType[],\n  fileIndex: number,\n): Promise<{ result: loadingStateEnum; fileData?: studentInformationType[] }> {\n  if (selectedFileListId !== '') {\n    const unselectedIndex = fileData.findIndex(e => {\n      return e.listId === selectedFileListId;\n    });\n    if (unselectedIndex !== -1) {\n      const newFileData = fileData;\n      newFileData[fileIndex].selected = false;\n      const unselectListData = {\n        fields: {\n          selected: false,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.studentFilesListId\n        }/items/${selectedFileListId}`,\n        'PATCH',\n        JSON.stringify(unselectListData),\n      );\n      if (result.ok) {\n        const selectListData = {\n          fields: {\n            selected: true,\n          },\n        };\n        const secondResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${\n            store.getState().paulyList.siteId\n          }/lists/${\n            store.getState().paulyList.studentFilesListId\n          }/items/${listItemId}`,\n          'PATCH',\n          JSON.stringify(selectListData),\n        );\n        if (secondResult.ok) {\n          newFileData[fileIndex].selected = true;\n          return { result: loadingStateEnum.success, fileData: newFileData };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed, fileData: [...newFileData] };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  const selectListData = {\n    fields: {\n      selected: true,\n    },\n  };\n  const secondResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items/${listItemId}`,\n    'PATCH',\n    JSON.stringify(selectListData),\n  );\n  if (secondResult.ok) {\n    const newFileData = fileData;\n    newFileData[fileIndex].selected = true;\n    return { result: loadingStateEnum.success, fileData: [...newFileData] };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function removeStudentSelection(\n  listItemId: string,\n  fileIndex: number,\n  fileData: studentInformationType[],\n): Promise<{ result: loadingStateEnum; fileData?: studentInformationType[] }> {\n  const selectListData = {\n    fields: {\n      selected: false,\n    },\n  };\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items/${listItemId}`,\n    'PATCH',\n    JSON.stringify(selectListData),\n  );\n  if (result.ok) {\n    const newFileData = fileData;\n    newFileData[fileIndex].selected = false;\n    return { result: loadingStateEnum.success, fileData: [...newFileData] };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// This is the number of blocks in a row in the student page.\nexport function getNumberOfBlocks(width: number) {\n  return Math.floor(width / 190) !== 0\n    ? Math.floor(width % 190 >= 0.75 ? width / 190 : (width + 190) / 190)\n    : 1;\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  ViewStyle,\n  Platform,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useNavigate } from 'react-router-native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Colors, loadingStateEnum } from '../types';\nimport store, { RootState } from '../Redux/store';\nimport ProgressView from '../UI/ProgressView';\nimport { PersonIcon, SearchIcon } from '../UI/Icons/Icons';\nimport { studentSearchSlice } from '../Redux/reducers/studentSearchReducer';\nimport BackButton from '../UI/BackButton';\nimport { getNumberOfBlocks, getUsers } from '../Functions/studentFunctions';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport createUUID from '../Functions/ultility/createUUID';\n\nexport default function Students() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { usersState, users, nextLink } = useSelector(\n    (state: RootState) => state.studentSearch,\n  );\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  async function loadUsers() {\n    getUsers();\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  useEffect(() => {\n    if (usersState === loadingStateEnum.loading) {\n      dispatch(\n        safeAreaColorsSlice.actions.setSafeAreaColors({\n          top: Colors.maroon,\n          bottom: Colors.maroon,\n        }),\n      );\n    } else {\n      dispatch(\n        safeAreaColorsSlice.actions.setSafeAreaColors({\n          top: Colors.darkGray,\n          bottom: currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n        }),\n      );\n    }\n  }, [usersState]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      {usersState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor:\n              currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={14} height={14} />\n          <Text style={{ color: Colors.white }}>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {usersState === loadingStateEnum.success ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor:\n                  currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.15,\n                  width,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  backgroundColor: Colors.darkGray,\n                }}\n              >\n                {currentBreakPoint === 0 ? <BackButton to=\"/profile\" /> : null}\n                <Text\n                  style={{ fontFamily: 'BukhariScript', color: Colors.white }}\n                >\n                  Students\n                </Text>\n              </View>\n              <SearchBox\n                getUsers={e => {\n                  if (e !== '') {\n                    getUsers(undefined, e);\n                    dispatch(studentSearchSlice.actions.setNextLink(undefined));\n                  } else {\n                    getUsers();\n                  }\n                }}\n              />\n              <FlatList\n                key={`Students_${createUUID()}`}\n                data={users}\n                renderItem={user => <StudentBlock user={user} />}\n                keyExtractor={item => item.id}\n                numColumns={getNumberOfBlocks(width)}\n                onEndReached={() => {\n                  if (nextLink !== undefined) {\n                    getUsers(nextLink);\n                  }\n                }}\n                style={{ height: height * 0.825 }}\n              />\n            </View>\n          ) : (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor:\n                  currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n              }}\n            >\n              <Pressable\n                onPress={() => {\n                  navigate('/');\n                }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Something went wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction StudentBlock({ user }: { user: ListRenderItemInfo<schoolUserType> }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  async function getImage() {\n    const newUser: any = {};\n    Object.assign(newUser, user.item);\n    if (\n      user.item.imageDownloadUrl !== 'noImage' &&\n      user.item.imageState !== loadingStateEnum.success &&\n      user.item.imageState !== loadingStateEnum.failed &&\n      user.item.imageState !== loadingStateEnum.loading\n    ) {\n      const updateStateUser: any = {};\n      Object.assign(updateStateUser, user.item);\n      updateStateUser.imageState = loadingStateEnum.loading;\n      store.dispatch(\n        studentSearchSlice.actions.setStudentUserByIndex({\n          index: user.index,\n          user: updateStateUser,\n        }),\n      );\n      const result = await callMsGraph(user.item.imageDownloadUrl);\n      if (result.ok) {\n        const data = await result.blob();\n        const urlOut = URL.createObjectURL(data);\n        newUser.imageState = loadingStateEnum.success;\n        newUser.imageDataUrl = urlOut;\n        store.dispatch(\n          studentSearchSlice.actions.setStudentUserByIndex({\n            index: user.index,\n            user: newUser,\n          }),\n        );\n      } else {\n        newUser.imageState = loadingStateEnum.failed;\n        store.dispatch(\n          studentSearchSlice.actions.setStudentUserByIndex({\n            index: user.index,\n            user: newUser,\n          }),\n        );\n      }\n    }\n  }\n\n  useEffect(() => {\n    getImage();\n  }, []);\n\n  function calculateMarginEnds(widthIn: number, side: 'L' | 'R'): number {\n    const numberOfBlocks = getNumberOfBlocks(width);\n    if (user.index % numberOfBlocks === 0) {\n      const widthRemaining = widthIn - (numberOfBlocks - 1) * 190 - 150;\n      if (widthRemaining / 2 >= 120 || side === 'R') {\n        return 20;\n      }\n      return widthRemaining / 2;\n    }\n    if ((user.index + 1) % numberOfBlocks === 0) {\n      const widthRemaining = widthIn - (numberOfBlocks - 1) * 190 - 150;\n      if (widthRemaining / 2 >= 120 || side === 'L') {\n        return 20;\n      }\n      return widthRemaining / 2;\n    }\n    return 20;\n  }\n\n  return (\n    <View\n      key={`StudentBlock_${user.item.id}`}\n      style={{\n        height: 175,\n        width: 150,\n        marginTop: user.index < getNumberOfBlocks(width) ? height * 0.07 : 25,\n        marginBottom: 25,\n        marginLeft: calculateMarginEnds(width, 'L'),\n        marginRight: calculateMarginEnds(width, 'R'),\n        backgroundColor: Colors.white,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n        overflow: 'hidden',\n      }}\n    >\n      <View\n        style={{\n          height: 150,\n          width: 150,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {user.item.imageState === loadingStateEnum.loading ? (\n          <>\n            <ProgressView width={14} height={14} />\n            <Text>Loading</Text>\n          </>\n        ) : (\n          <>\n            {user.item.imageState === loadingStateEnum.success &&\n            user.item.imageDataUrl !== undefined ? (\n              <Image\n                source={{ uri: user.item.imageDataUrl }}\n                style={{ width: 150, height: 150 }}\n              />\n            ) : (\n              <PersonIcon width={150} height={150} />\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ flexDirection: 'row', marginLeft: 5, marginTop: 2 }}>\n        <Text>{user.item.name}</Text>\n        {user.item.student ? <Text>{user.item.grade}</Text> : null}\n      </View>\n    </View>\n  );\n}\n\nfunction SearchBox({ getUsers }: { getUsers: (item: string) => void }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { searchText } = useSelector((state: RootState) => state.studentSearch);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const style: ViewStyle =\n    Platform.OS === 'web' ? { outlineStyle: 'none' } : {};\n  const [mounted, setMounted] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (mounted) {\n      const searchValueSave = searchText;\n      setTimeout(() => {\n        if (store.getState().studentSearch.searchText === searchValueSave) {\n          getUsers(store.getState().studentSearch.searchText);\n        }\n      }, 1500);\n    } else {\n      setMounted(true);\n    }\n  }, [searchText]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.15 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchText}\n            onChangeText={e => {\n              dispatch(studentSearchSlice.actions.setStudentSearch(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: Colors.white }}>{searchText}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import store from '../Redux/store';\nimport { loadingStateEnum } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\n// https://stackoverflow.com/questions/3583724/how-do-i-add-a-delay-in-a-javascript-loop\nconst timer = (ms: number | undefined) =>\n  new Promise(res => setTimeout(res, ms));\n\nexport default async function addImage(\n  userId: string,\n  selectedFile: microsoftFileType,\n): Promise<loadingStateEnum> {\n  // Get Site Root Dirve\n  const siteResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/drive/root`,\n  );\n  if (siteResult.ok) {\n    const siteData = await siteResult.json();\n    // Copy current file to drive\n    const copyPayload = {\n      parentReference: {\n        driveId: siteData.parentReference.driveId,\n        id: siteData.id,\n      },\n    };\n    const copyResult = await callMsGraph(\n      `${selectedFile.callPath}/copy?@microsoft.graph.conflictBehavior=rename`,\n      'POST',\n      JSON.stringify(copyPayload),\n    );\n    if (copyResult.ok) {\n      const copyData = await copyResult.headers.get('Location');\n      let notComplete = true;\n      let resourceId = '';\n\n      while (notComplete) {\n        if (copyData !== null) {\n          const copyFetch = await fetch(copyData);\n          if (copyFetch.ok) {\n            const copyFetchData = await copyFetch.json();\n            if (copyFetchData.status === 'completed') {\n              resourceId = copyFetchData.resourceId;\n              notComplete = false;\n              break;\n            }\n          } else {\n            return loadingStateEnum.failed;\n          }\n        } else {\n          return loadingStateEnum.failed;\n        }\n        await timer(3000);\n      }\n\n      const getItemResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/drive/items/${resourceId}`,\n      );\n      if (getItemResult.ok) {\n        const getItemData = await getItemResult.json();\n        const studentData = {\n          fields: {\n            createdTime: new Date().toISOString(),\n            itemId: getItemData.id,\n            userId,\n            selected: false,\n          },\n        };\n        const studentListResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${\n            store.getState().paulyList.siteId\n          }/lists/${store.getState().paulyList.studentFilesListId}/items`,\n          'POST',\n          JSON.stringify(studentData),\n        );\n        if (studentListResult.ok) {\n          return loadingStateEnum.success;\n        }\n        return loadingStateEnum.failed;\n      }\n      return loadingStateEnum.failed;\n    }\n    return loadingStateEnum.failed;\n  }\n  return loadingStateEnum.failed;\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  ViewStyle,\n  Platform,\n  TextInput,\n  Modal,\n  FlatList,\n  ListRenderItemInfo,\n} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BackButton from '../../../UI/BackButton';\nimport MicrosoftFilePicker from '../../../UI/MicrosoftFilePicker';\nimport store, { RootState } from '../../../Redux/store';\nimport {\n  changeStudentSelection,\n  getStudentData,\n  getUsers,\n  removeStudentSelection,\n} from '../../../Functions/studentFunctions';\nimport { CloseIcon, SearchIcon } from '../../../UI/Icons/Icons';\nimport { studentSearchSlice } from '../../../Redux/reducers/studentSearchReducer';\nimport { Colors, loadingStateEnum } from '../../../types';\nimport ProgressView from '../../../UI/ProgressView';\nimport addImage from '../../../Functions/addImage';\nimport { getTextState } from '../../../Functions/ultility/createUUID';\n\nfunction SelectMainFile({\n  userId,\n  setFilePickingMode,\n}: {\n  userId: string;\n  setFilePickingMode: (item: filePickingModeEnum) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [fileData, setFileData] = useState<studentInformationType[]>([]);\n  const [fileState, setFileState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedFileListId, setSelectedFileListId] = useState<string>('');\n\n  async function loadData() {\n    const result = await getStudentData(userId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setFileState(loadingStateEnum.success);\n      setFileData(result.data);\n      const selectedFileList = result.data.find(e => {\n        return e.selected;\n      });\n      if (selectedFileList !== undefined) {\n        setSelectedFileListId(selectedFileList.listId);\n      }\n    } else {\n      setFileState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        right: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.notStarted);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <View\n        style={{\n          height: height * 0.8,\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          backgroundColor: Colors.white,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          {fileState === loadingStateEnum.loading ? (\n            <View>\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {fileState === loadingStateEnum.success ? (\n                <FlatList\n                  data={fileData}\n                  renderItem={file => (\n                    <StudentSelectFileBlock\n                      key={`${file.item.listId}_${file.item.createdTime}`}\n                      file={file}\n                      setFileData={setFileData}\n                      fileData={fileData}\n                      selectedFileListId={selectedFileListId}\n                      setSelectedFileListId={setSelectedFileListId}\n                    />\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n          <Pressable\n            onPress={() => setFilePickingMode(filePickingModeEnum.create)}\n          >\n            <Text>Create</Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction StudentSelectFileBlock({\n  file,\n  selectedFileListId,\n  setSelectedFileListId,\n  fileData,\n  setFileData,\n}: {\n  file: ListRenderItemInfo<studentInformationType>;\n  setFileData: (item: studentInformationType[]) => void;\n  fileData: studentInformationType[];\n  selectedFileListId: string;\n  setSelectedFileListId: (item: string) => void;\n}) {\n  const [updateState, setUpdateState] = useState(loadingStateEnum.notStarted);\n\n  async function callRemoveSelection() {\n    setUpdateState(loadingStateEnum.loading);\n    const result = await removeStudentSelection(\n      file.item.listId,\n      file.index,\n      fileData,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.fileData !== undefined\n    ) {\n      setSelectedFileListId('');\n      setFileData(result.fileData);\n      setUpdateState(loadingStateEnum.success);\n    } else {\n      setUpdateState(loadingStateEnum.failed);\n    }\n  }\n\n  async function callChangeSelection() {\n    setUpdateState(loadingStateEnum.loading);\n    const result = await changeStudentSelection(\n      file.item.listId,\n      selectedFileListId,\n      fileData,\n      file.index,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.fileData !== undefined\n    ) {\n      setUpdateState(loadingStateEnum.success);\n      setFileData(result.fileData);\n    } else {\n      setUpdateState(loadingStateEnum.failed);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => {\n        if (file.item.selected) {\n          callRemoveSelection();\n        } else {\n          callChangeSelection();\n        }\n      }}\n      style={{\n        backgroundColor: file.item.selected ? Colors.lightGray : Colors.white,\n        borderRadius: 15,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        flexDirection: 'row',\n      }}\n    >\n      <>\n        {updateState === loadingStateEnum.loading ? (\n          <ProgressView width={14} height={14} />\n        ) : (\n          <View\n            style={{\n              width: 14,\n              height: 14,\n              backgroundColor:\n                updateState === loadingStateEnum.success ||\n                loadingStateEnum.notStarted\n                  ? 'green'\n                  : Colors.danger,\n              borderRadius: 7,\n            }}\n          />\n        )}\n      </>\n      <Text style={{ margin: 10 }}>\n        {new Date(file.item.createdTime).toLocaleDateString()}\n      </Text>\n    </Pressable>\n  );\n}\n\nexport default function GovernmentStudents() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { usersState, users } = useSelector(\n    (state: RootState) => state.studentSearch,\n  );\n\n  async function loadUsers() {\n    getUsers();\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <BackButton to=\"/profile/government/\" />\n        <Text style={{ marginTop: 14 }}>Government Students</Text>\n      </View>\n      <SearchBox\n        getUsers={() => {\n          loadUsers();\n        }}\n      />\n      <View style={{ width, height: height * 0.05 }} />\n      <View style={{ height: height * 0.75 }}>\n        {usersState === loadingStateEnum.loading ? (\n          <View\n            style={{\n              width,\n              height: height * 0.8,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView width={12} height={12} />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {usersState === loadingStateEnum.success ? (\n              <FlatList data={users} renderItem={e => <StudentItem e={e} />} />\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ flexDirection: 'row', height: height * 0.1 }}>\n        <Pressable>\n          <Text>Select Folder</Text>\n        </Pressable>\n        <Pressable>\n          <Text>Select Maping Keys</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nenum filePickingModeEnum {\n  notStarted,\n  select,\n  create,\n}\n\nfunction StudentItem({ e }: { e: ListRenderItemInfo<schoolUserType> }) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [filePickingMode, setFilePickingMode] = useState<filePickingModeEnum>(\n    filePickingModeEnum.notStarted,\n  );\n  return (\n    <View style={{ flexDirection: 'row', margin: 5 }}>\n      <Text>{e.item.name}</Text>\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.select);\n        }}\n        style={{ marginLeft: 2 }}\n      >\n        <Text style={{ margin: 2 }}>Choose File</Text>\n      </Pressable>\n      <Modal\n        visible={filePickingMode !== filePickingModeEnum.notStarted}\n        animationType=\"slide\"\n        transparent\n        style={{ width: width * 0.8 }}\n        onRequestClose={() =>\n          setFilePickingMode(filePickingModeEnum.notStarted)\n        }\n      >\n        <Pressable\n          onPress={() => setFilePickingMode(filePickingModeEnum.notStarted)}\n          style={{\n            position: 'absolute',\n            left: 0,\n            height,\n            zIndex: -1,\n            width,\n          }}\n        />\n        <>\n          {filePickingMode === filePickingModeEnum.create ? (\n            <StudentsSelectFile\n              setFilePickingMode={setFilePickingMode}\n              userId={e.item.id}\n            />\n          ) : (\n            <SelectMainFile\n              userId={e.item.id}\n              setFilePickingMode={setFilePickingMode}\n            />\n          )}\n        </>\n      </Modal>\n    </View>\n  );\n}\n\nfunction SearchBox({ getUsers }: { getUsers: (item: string) => void }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { searchText } = useSelector((state: RootState) => state.studentSearch);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const style: ViewStyle =\n    Platform.OS === 'web' ? { outlineStyle: 'none' } : {};\n  const [mounted, setMounted] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (mounted) {\n      const searchValueSave = searchText;\n      setTimeout(() => {\n        if (store.getState().studentSearch.searchText === searchValueSave) {\n          getUsers(store.getState().studentSearch.searchText);\n        }\n      }, 1500);\n    } else {\n      setMounted(true);\n    }\n  }, [searchText]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.1 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchText}\n            onChangeText={e => {\n              dispatch(studentSearchSlice.actions.setStudentSearch(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchText}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction StudentsSelectFile({\n  setFilePickingMode,\n  userId,\n}: {\n  setFilePickingMode: (item: filePickingModeEnum) => void;\n  userId: string;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [isReviewing, setIsReviewing] = useState<boolean>(false);\n  const [selectedFile, setSelectedFile] = useState<\n    microsoftFileType | undefined\n  >(undefined);\n  const [addImageState, setAddImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadAddImage() {\n    if (selectedFile !== undefined) {\n      setAddImageState(loadingStateEnum.loading);\n      const result = await addImage(userId, selectedFile);\n      setAddImageState(result);\n    }\n  }\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        right: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.select);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <>\n        {!isReviewing ? (\n          <View\n            style={{\n              height: height * 0.8,\n              width: width * 0.8,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: Colors.white,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              <MicrosoftFilePicker\n                height={height * 0.8 - 5}\n                width={width * 0.8 - 5}\n                onSelectedFile={file => {\n                  setIsReviewing(true);\n                  setSelectedFile(file);\n                }}\n              />\n            </View>\n          </View>\n        ) : (\n          <View\n            style={{\n              height: height * 0.8,\n              width: width * 0.8,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: Colors.white,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              {selectedFile !== undefined ? (\n                <Pressable\n                  onPress={() => {\n                    loadAddImage();\n                  }}\n                >\n                  <Text>\n                    {getTextState(addImageState, { notStarted: 'Confirm' })}\n                  </Text>\n                </Pressable>\n              ) : null}\n            </View>\n          </View>\n        )}\n      </>\n    </View>\n  );\n}\n","import { View, Text, Platform, Pressable } from 'react-native';\nimport * as Network from 'expo-network';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  DiscoveryDocument,\n  revokeAsync,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport { useMsal } from '@azure/msal-react';\nimport { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { authenticationTokenSlice } from '../Redux/reducers/authenticationTokenReducer';\nimport store, { RootState } from '../Redux/store';\nimport ProgressView from '../UI/ProgressView';\nimport { Colors } from '../types';\nimport { tenantId } from '../PaulyConfig';\nimport { OfflineIcon } from '../UI/Icons/Icons';\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n\nexport default function LoadingView({\n  setOveride,\n  width,\n}: {\n  setOveride: (item: boolean) => void;\n  width: number;\n}) {\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const insets = useSafeAreaInsets();\n  const [isShowingLogout, setIsShowingLogout] = useState<boolean>(false);\n  const [isConnected, setIsConnected] = useState<boolean>(true);\n\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  async function checkIfConnected() {\n    const result = await Network.getNetworkStateAsync();\n    if (result.isInternetReachable) {\n      // Internet reachable\n      setIsConnected(true);\n    } else {\n      setIsConnected(false);\n    }\n  }\n\n  useEffect(() => {\n    checkIfConnected();\n    const intervalId = setInterval(() => {\n      // assign interval to a variable to clear it.\n      checkIfConnected();\n    }, 5000); // 5s\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsShowingLogout(true);\n    }, 10000);\n  }, []);\n\n  return (\n    <View\n      style={{\n        width,\n        top: -insets.top,\n        height,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {isConnected ? (\n        <>\n          <ProgressView width={14} height={14} />\n          <Text style={{ color: Colors.white }}>Loading</Text>\n          {isGovernmentMode ? (\n            <Pressable\n              onPress={() => {\n                setOveride(true);\n              }}\n              style={{ margin: 5 }}\n            >\n              <Text style={{ color: Colors.white }}>Overide</Text>\n            </Pressable>\n          ) : null}\n          {isShowingLogout ? (\n            <Pressable\n              onPress={() => {\n                signOut();\n              }}\n              style={{ margin: 5 }}\n            >\n              <Text style={{ color: Colors.white }}>Logout</Text>\n            </Pressable>\n          ) : null}\n        </>\n      ) : (\n        <OfflineIcon width={50} height={50} color={Colors.white} />\n      )}\n    </View>\n  );\n}\n","import React, { useState } from 'react';\nimport { View, ScaledSize } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport HomePage from './HomePage';\nimport Commissions from './Commissions/Commissions';\nimport Notifications from './Notifications';\nimport Resources from './Resources';\nimport Settings from './Profile/Settings';\nimport Government from './Profile/Government/Government';\nimport MicrosoftGraphOverview from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphOverview';\nimport MicrosoftGraphCreateList from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphCreateList';\nimport GovernmentCommissions from './Profile/Government/GovernmentCommissions/GovernmentCommissions';\nimport GovernmentEditCommission from './Profile/Government/GovernmentCommissions/GovernmentEditCommission';\nimport Sports from './Sports';\nimport Calendar from './Calendar/Calendar';\nimport GovernmentSports from './Profile/Government/GovernmentSports/GovernmentSports';\nimport GovernmentCreateNewSport from './Profile/Government/GovernmentSports/GovernmentCreateNewSport';\nimport GovernmentSportsTeams from './Profile/Government/GovernmentSports/GovernmentSportsTeams';\nimport GovernmentSportTeamEdit from './Profile/Government/GovernmentSports/GovernmentSportTeamEdit';\nimport GovernmentSportsTeamAddPost from './Profile/Government/GovernmentSports/GovernmentSportsTeamAddPost';\nimport GovernmentReviewFileSubmission from './Profile/Government/GovernmentSports/GovernmentReviewFileSubmission';\nimport GovernmentCalendar from './Profile/Government/GovernmentCalendar/GovernmentCalendar';\nimport GovernmentSchedual from './Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentSchedule';\nimport GovernmentTimetable from './Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetable';\nimport GovernmentScheduleEdit from './Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentScheduleEdit';\nimport GovernmentClasses from './Profile/Government/GovernmentClasses/GovernmentClasses';\nimport GovernmentClassesEdit from './Profile/Government/GovernmentClasses/GovernmentClassesEdit';\nimport GovernmentHomePage from './Profile/Government/GovernmentHomePage';\nimport NavBarComponent from '../UI/NavComponent';\nimport PageNotFound from './404Page';\nimport GovernmentAdmin from './Profile/Government/GovernmentAdminCenter/GovernmentAdmin';\nimport GovernmentRooms from './Profile/Government/GovernmentClasses/GovernmentRooms';\nimport GovernmentRoomsCreate from './Profile/Government/GovernmentClasses/GovermentRoomsCreate';\nimport MicrosoftGraphEdit from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphEdit';\nimport GovernmentResources from './Profile/Government/GovernmentResources';\nimport GovernmentDressCode from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCode';\nimport GovernmentDressCodeEdit from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit';\nimport GovernmentTimetableEdit from './Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetableEdit';\nimport { RootState } from '../Redux/store';\nimport ProfileBlock from './Profile/ProfileBlock';\nimport Students from './Students';\nimport GovernmentStudents from './Profile/Government/GovernmentStudents';\nimport { Colors } from '../types';\nimport LoadingScreen from './LoadingScreen';\n\nexport default function AuthenticatedView({\n  dimensions,\n  width,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n  width: number;\n}) {\n  const { height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const authenticationToken = useSelector(\n    (state: RootState) => state.authenticationToken,\n  );\n  const isShowingProfileBlock = useSelector(\n    (state: RootState) => state.isShowingProfileBlock,\n  );\n  const insets = useSafeAreaInsets();\n  const [overide, setOveride] = useState<boolean>(false);\n  if ((siteId !== '' || overide) && authenticationToken !== '') {\n    return (\n      <View style={{ width, top: -insets.top }}>\n        <NativeRouter>\n          <View style={{ flexDirection: 'row', width }}>\n            {currentBreakPoint >= 1 ? (\n              <NavBarComponent\n                width={width * 0.1}\n                height={dimensions.window.height}\n              />\n            ) : null}\n            <View\n              style={{\n                width: currentBreakPoint >= 1 ? width * 0.9 : width,\n                height,\n                backgroundColor: Colors.maroon,\n              }}\n            >\n              <Routes>\n                <Route path=\"/\" element={<HomePage />} />\n                <Route path=\"/sports\" element={<Sports />} />\n                <Route path=\"/notifications\" element={<Notifications />} />\n                <Route path=\"/calendar\" element={<Calendar />} />\n                <Route path=\"/resources\" element={<Resources />} />\n                <Route path=\"/commissions\" element={<Commissions />} />\n                <Route path=\"/profile\" element={<Settings />} />\n                <Route path=\"/students\" element={<Students />} />\n                <Route path=\"/profile/government\" element={<Government />} />\n                <Route\n                  path=\"/profile/government/resources\"\n                  element={<GovernmentResources />}\n                />\n                <Route\n                  path=\"/profile/government/admin\"\n                  element={<GovernmentAdmin />}\n                />\n                <Route\n                  path=\"/profile/government/graph/:mode\"\n                  element={<MicrosoftGraphOverview />}\n                />\n                <Route\n                  path=\"/profile/government/graph/:mode/edit/:id\"\n                  element={<MicrosoftGraphEdit />}\n                />\n                <Route\n                  path=\"/profile/government/graph/:mode/create\"\n                  element={<MicrosoftGraphCreateList />}\n                />\n                <Route\n                  path=\"/profile/government/commissions\"\n                  element={<GovernmentCommissions />}\n                />\n                <Route\n                  path=\"/profile/government/commissions/:id\"\n                  element={<GovernmentEditCommission />}\n                />\n                <Route\n                  path=\"/profile/government/homepage\"\n                  element={<GovernmentHomePage />}\n                />\n                <Route\n                  path=\"/profile/government/students\"\n                  element={<GovernmentStudents />}\n                />\n                <Route\n                  path=\"/profile/government/classes\"\n                  element={<GovernmentClasses />}\n                />\n                <Route\n                  path=\"/profile/government/classes/edit/:id\"\n                  element={<GovernmentClassesEdit />}\n                />\n                <Route\n                  path=\"/profile/government/classes/room\"\n                  element={<GovernmentRooms />}\n                />\n                <Route\n                  path=\"/profile/government/classes/room/create\"\n                  element={<GovernmentRoomsCreate />}\n                />\n                <Route\n                  path=\"/profile/government/calendar\"\n                  element={<GovernmentCalendar />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/schedule\"\n                  element={<GovernmentSchedual />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/schedule/:id\"\n                  element={<GovernmentScheduleEdit />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/timetable\"\n                  element={<GovernmentTimetable />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/timetable/:id\"\n                  element={<GovernmentTimetableEdit />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/dresscode\"\n                  element={<GovernmentDressCode />}\n                />\n                <Route\n                  path=\"/profile/government/calendar/dresscode/:id\"\n                  element={<GovernmentDressCodeEdit />}\n                />\n                <Route\n                  path=\"/profile/government/sports\"\n                  element={<GovernmentSports />}\n                />\n                <Route\n                  path=\"/profile/government/sports/create\"\n                  element={<GovernmentCreateNewSport />}\n                />\n                <Route\n                  path=\"/profile/government/sports/team/:sport/:id\"\n                  element={<GovernmentSportsTeams />}\n                />\n                <Route\n                  path=\"/profile/government/sports/team/:sport/:id/:teamId\"\n                  element={<GovernmentSportTeamEdit />}\n                />\n                <Route\n                  path=\"/profile/government/sports/post/create\"\n                  element={<GovernmentSportsTeamAddPost />}\n                />\n                <Route\n                  path=\"/profile/government/sports/post/review/:submissionID\"\n                  element={<GovernmentReviewFileSubmission />}\n                />\n                <Route path=\"*\" element={<PageNotFound />} />\n              </Routes>\n              {currentBreakPoint >= 1 && isShowingProfileBlock ? (\n                <ProfileBlock />\n              ) : null}\n            </View>\n          </View>\n        </NativeRouter>\n      </View>\n    );\n  }\n  return <LoadingScreen setOveride={setOveride} width={width} />;\n}\n","import callMsGraph from './microsoftAssets';\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport store from '../../Redux/store';\nimport { paulyListSlice } from '../../Redux/reducers/paulyListReducer';\n\nexport default async function getPaulyLists() {\n  const getRootSiteIdResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/sites/root?$select=id`,\n    'GET',\n  );\n  if (getRootSiteIdResult.ok) {\n    const getRootSiteIdResultData = await getRootSiteIdResult.json();\n    const paulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items?expand=fields&$select=id`,\n      'GET',\n    );\n    if (paulyListResult.ok) {\n      const paulyListResultData = await paulyListResult.json();\n      // store.dispatch(paulyListSlice.actions.setPaulyList({siteId: getRootSiteIdResultData[\"id\"], commissionListId: paulyListResultData[\"fields\"][\"commissionListId\"], paulyDataListId: paulyListResultData[\"fields\"][\"paulyDataListId\"], scheduleListId: paulyListResultData[\"fields\"][\"scheduleListId\"], sportsListId: paulyListResultData[\"fields\"][\"sportsListId\"], sportsApprovedSubmissionsListId: paulyListResultData[\"fields\"][\"sportsApprovedSubmissionsListId\"], sportsSubmissionsListId: paulyListResultData[\"fields\"][\"sportsSubmissionsListId\"], timetablesListId: paulyListResultData[\"fields\"][\"timetablesListId\"]}))\n      store.dispatch(\n        paulyListSlice.actions.setPaulyList({\n          siteId: getRootSiteIdResultData.id,\n          studentFilesListId:\n            paulyListResultData.value[0].fields.studentFilesListId,\n          commissionListId:\n            paulyListResultData.value[0].fields.commissionListId,\n          commissionSubmissionsListId:\n            paulyListResultData.value[0].fields.commissionSubmissionsListId,\n          paulyDataListId: paulyListResultData.value[0].fields.paulyDataListId,\n          scheduleListId: paulyListResultData.value[0].fields.scheduleListId,\n          sportsListId: paulyListResultData.value[0].fields.sportsListId,\n          sportsApprovedSubmissionsListId:\n            paulyListResultData.value[0].fields.sportsApprovedSubmissionsListId,\n          sportsSubmissionsListId:\n            paulyListResultData.value[0].fields.sportsSubmissionsListId,\n          timetablesListId:\n            paulyListResultData.value[0].fields.timetablesListId,\n          resourceListId: paulyListResultData.value[0].fields.resourceListId,\n          dressCodeListId: paulyListResultData.value[0].fields.dressCodeListId,\n          eventTypeExtensionId:\n            paulyListResultData.value[0].fields.eventTypeExtensionId,\n          eventDataExtensionId:\n            paulyListResultData.value[0].fields.eventDataExtensionId,\n          classExtensionId:\n            paulyListResultData.value[0].fields.classExtensionId,\n          resourceExtensionId:\n            paulyListResultData.value[0].fields.resourceExtensionId,\n          roomListId: paulyListResultData.value[0].fields.roomListId,\n        }),\n      );\n    } else {\n      // TO DO THIS IS A BIG PROBLEM SHUT DOWN APP BC most of it don't work lost connection to server\n    }\n  } else {\n    // TO DO THIS IS A BIG PROBLEM SHUT DOWN APP BC most of it don't work lost connection to server\n  }\n}\n","import { microsoftProfileDataSlice } from '../../Redux/reducers/microsoftProfileDataReducer';\nimport store from '../../Redux/store';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function getUserProfile() {\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/photo/$value',\n    'GET',\n  );\n  if (result.ok) {\n    const dataBlob = await result.blob();\n    const urlOut = URL.createObjectURL(dataBlob);\n    const profileResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/me',\n      'GET',\n    );\n    if (profileResult.ok) {\n      const profileData = await profileResult.json();\n      store.dispatch(\n        microsoftProfileDataSlice.actions.setMicrosoftProfileData({\n          uri: urlOut,\n          displayName: profileData.displayName,\n          id: profileData.id,\n        }),\n      );\n    }\n  } else {\n    const profileResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/me',\n      'GET',\n    );\n    if (profileResult.ok) {\n      const profileData = await profileResult.json();\n      store.dispatch(\n        microsoftProfileDataSlice.actions.setMicrosoftProfileData({\n          uri: '',\n          displayName: profileData.displayName,\n          id: profileData.id,\n        }),\n      );\n    }\n  }\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { orgWideGroupID } from '../PaulyConfig';\nimport { isGovernmentModeSlice } from '../Redux/reducers/isGovernmentModeReducer';\nimport store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function validateGovernmentMode() {\n  const userResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me?$select=id',\n  );\n  if (userResult.ok) {\n    const userData = await userResult.json();\n    const teamsResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/owners?$filter=id%20eq%20'${userData.id}'`,\n    );\n    if (teamsResult.ok) {\n      const teamsData = await teamsResult.json();\n      if (teamsData.value.length === 1) {\n        if (teamsData.value[0].id === userData.id) {\n          try {\n            await AsyncStorage.setItem(\n              'paulyGovernmentMode',\n              JSON.stringify(true),\n            );\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(true),\n            );\n          } catch (e) {\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          }\n        } else {\n          try {\n            await AsyncStorage.setItem(\n              'paulyGovernmentMode',\n              JSON.stringify(false),\n            );\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          } catch (e) {\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          }\n        }\n      } else {\n        try {\n          await AsyncStorage.setItem(\n            'paulyGovernmentMode',\n            JSON.stringify(false),\n          );\n          store.dispatch(\n            isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n          );\n        } catch (e) {\n          store.dispatch(\n            isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n          );\n        }\n      }\n    } else if (teamsResult.status === 404) {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(true));\n    } else {\n      try {\n        await AsyncStorage.setItem(\n          'paulyGovernmentMode',\n          JSON.stringify(false),\n        );\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      } catch (e) {\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      }\n    }\n  } else {\n    try {\n      await AsyncStorage.setItem('paulyGovernmentMode', JSON.stringify(false));\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    } catch (e) {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    }\n  }\n}\n\nexport async function checkIfGovernmentMode() {\n  try {\n    const value = await AsyncStorage.getItem('paulyGovernmentMode');\n    if (value !== null) {\n      // value previously stored\n      const governmentMode = JSON.parse(value);\n      if (governmentMode) {\n        store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(true));\n      } else {\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      }\n    } else {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    }\n  } catch (e) {\n    // error reading value\n    store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n  }\n}\n\nexport async function setWantGovernment(value: boolean) {\n  if (value) {\n    try {\n      await AsyncStorage.setItem(\n        'paulyWantGovernmentMode',\n        JSON.stringify(true),\n      );\n    } catch (e) {\n      // TO DO deal with error\n    }\n  } else {\n    try {\n      await AsyncStorage.setItem(\n        'paulyWantGovernmentMode',\n        JSON.stringify(false),\n      );\n    } catch (e) {\n      // TO DO deal with error\n    }\n  }\n}\n\nexport async function getWantGovernment(): Promise<boolean> {\n  try {\n    const value = await AsyncStorage.getItem('paulyWantGovernmentMode');\n    if (value !== null) {\n      const result = JSON.parse(value);\n      if (result) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  } catch {\n    return false;\n    // TO DO deal with error\n  }\n}\n","import { SafeAreaView, ScaledSize } from 'react-native';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EventType, PublicClientApplication } from '@azure/msal-browser';\nimport {\n  AuthenticatedTemplate,\n  MsalProvider,\n  UnauthenticatedTemplate,\n  useMsal,\n} from '@azure/msal-react';\nimport Login from '../src/login';\nimport AuthenticatedViewMain from '../src/AuthenticatedView/AuthenticatedViewMain';\nimport { clientId, scopes, tenantId } from '../src/PaulyConfig';\nimport getPaulyLists from '../src/Functions/ultility/getPaulyLists';\nimport getUserProfile from '../src/Functions/ultility/getUserProfile';\nimport { authenticationTokenSlice } from '../src/Redux/reducers/authenticationTokenReducer';\nimport {\n  checkIfGovernmentMode,\n  getWantGovernment,\n  setWantGovernment,\n  validateGovernmentMode,\n} from '../src/Functions/handleGovernmentLogin';\nimport { RootState } from '../src/Redux/store';\n\n// This is for the microsoft authentication.\nconst pca = new PublicClientApplication({\n  auth: {\n    clientId,\n    authority: `https://login.microsoftonline.com/${tenantId}/`,\n    redirectUri:\n      window.location.href !== 'http://localhost:19006'\n        ? 'https://paulysphs.ca'\n        : 'http://localhost:19006',\n  },\n});\n\nfunction AuthDeep({\n  dimensions,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n}) {\n  const { instance } = useMsal();\n  const dispatch = useDispatch();\n  const authenticationCall = useSelector(\n    (state: RootState) => state.authenticationCall,\n  );\n\n  async function getAuthToken(userInitated: boolean, government?: boolean) {\n    // Account selection logic is app dependent. Adjust as needed for different use cases.\n    // Set active acccount on page load\n    if (government !== undefined) {\n      setWantGovernment(government);\n    }\n\n    const accounts = instance.getAllAccounts();\n    if (accounts.length > 0) {\n      instance.setActiveAccount(accounts[0]);\n      const accountResult = await instance.getActiveAccount();\n      if (accountResult !== null) {\n        const result = await instance.acquireTokenSilent({\n          scopes,\n        });\n        dispatch(\n          authenticationTokenSlice.actions.setAuthenticationToken(\n            result.accessToken,\n          ),\n        );\n        getPaulyLists();\n        getUserProfile();\n        if (await getWantGovernment()) {\n          checkIfGovernmentMode();\n        }\n      } else {\n      }\n    }\n\n    instance.addEventCallback((event: any) => {\n      // set active account after redirect\n      if (\n        event.eventType === EventType.LOGIN_SUCCESS &&\n        event.payload.account\n      ) {\n        const { account } = event.payload;\n        instance.setActiveAccount(account);\n      }\n    });\n\n    // handle auth redired/do all initial setup for msal\n    instance\n      .handleRedirectPromise()\n      .then(async authResult => {\n        // Check if user signed in\n        const account = instance.getActiveAccount();\n        if (!account && userInitated) {\n          // redirect anonymous user to login page\n          instance.loginRedirect({\n            scopes,\n          });\n        } else if (account) {\n          if (authResult !== undefined && authResult !== null) {\n            dispatch(\n              authenticationTokenSlice.actions.setAuthenticationToken(\n                authResult.accessToken,\n              ),\n            );\n            if (await getWantGovernment()) {\n              validateGovernmentMode();\n            }\n            getPaulyLists();\n            getUserProfile();\n          }\n        }\n      })\n      .catch(async err => {\n        // TODO: Handle errors\n        try {\n          const result = await instance.acquireTokenSilent({\n            scopes,\n          });\n          dispatch(\n            authenticationTokenSlice.actions.setAuthenticationToken(\n              result.accessToken,\n            ),\n          );\n          if (await getWantGovernment()) {\n            validateGovernmentMode();\n          }\n          getPaulyLists();\n          getUserProfile();\n        } catch (e) {}\n      });\n  }\n\n  useEffect(() => {\n    getAuthToken(false);\n  }, []);\n\n  const refreshToken = async () => {\n    const result = await instance.acquireTokenSilent({\n      scopes,\n    });\n    dispatch(\n      authenticationTokenSlice.actions.setAuthenticationToken(\n        result.accessToken,\n      ),\n    );\n  };\n\n  useEffect(() => {\n    refreshToken();\n  }, [authenticationCall, refreshToken]);\n\n  return (\n    <SafeAreaView\n      style={{\n        width: dimensions.window.width,\n        height: dimensions.window.height,\n        zIndex: 2,\n        position: 'absolute',\n        left: 0,\n        top: 0,\n      }}\n    >\n      <AuthenticatedTemplate>\n        <AuthenticatedViewMain\n          dimensions={dimensions}\n          width={dimensions.window.width}\n        />\n      </AuthenticatedTemplate>\n      <UnauthenticatedTemplate>\n        <Login\n          onGetAuthToken={() => {\n            getAuthToken(true, false);\n          }}\n          onGetGovernmentAuthToken={() => {\n            getAuthToken(true, true);\n          }}\n          width={dimensions.window.width}\n          isLoading={false}\n        />\n      </UnauthenticatedTemplate>\n    </SafeAreaView>\n  );\n}\n\nexport default function AppMain({\n  dimensions,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n}) {\n  return (\n    <MsalProvider instance={pca}>\n      <SafeAreaView\n        style={{\n          width: dimensions.window.width,\n          height: dimensions.window.height,\n          zIndex: 2,\n          position: 'absolute',\n          left: 0,\n          top: 0,\n        }}\n      >\n        <AuthDeep dimensions={dimensions} />\n      </SafeAreaView>\n    </MsalProvider>\n  );\n}\n","/**\n * Pauly React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Dimensions, View } from 'react-native';\nimport { DefaultTheme, PaperProvider } from 'react-native-paper';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Provider, useSelector } from 'react-redux';\n\nimport {\n  SafeAreaProvider,\n  SafeAreaView,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport store, { RootState } from './src/Redux/store';\nimport { dimentionsSlice } from './src/Redux/reducers/dimentionsReducer';\nimport AppMain from './AppMain/AppMain';\nimport { Colors, breakPointMode } from './src/types';\n\nconst windowDimensions = Dimensions.get('window');\nconst screenDimensions = Dimensions.get('screen');\n\nfunction AppCore() {\n  // Dimentions\n  const safeAreaColors = useSelector(\n    (state: RootState) => state.safeAreaColors,\n  );\n  const expandedMode = useSelector((state: RootState) => state.expandedMode);\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [dimensions, setDimensions] = useState({\n    window: windowDimensions,\n    screen: screenDimensions,\n  });\n  const insets = useSafeAreaInsets();\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener(\n      'change',\n      ({ window, screen }) => {\n        setDimensions({ window, screen });\n      },\n    );\n    return () => subscription?.remove();\n  });\n\n  useEffect(() => {\n    const width = dimensions.window.width - insets.left - insets.right;\n    if (width >= 576) {\n      if (expandedMode) {\n        store.dispatch(\n          dimentionsSlice.actions.setDimentionsWidth(width * 0.75),\n        );\n      } else {\n        store.dispatch(dimentionsSlice.actions.setDimentionsWidth(width * 0.9));\n      }\n    }\n  }, [expandedMode]);\n\n  useEffect(() => {\n    const oldWidth = store.getState().dimentions.width;\n    const { height } = store.getState().dimentions;\n    const newWidth = dimensions.window.width - insets.left - insets.right;\n    const newHeight = dimensions.window.height - insets.bottom - insets.top;\n    if (oldWidth !== newWidth) {\n      const oldCurrentBreakPointMode: breakPointMode =\n        store.getState().dimentions.currentBreakPoint;\n      let currentBreakPoint: breakPointMode = breakPointMode.xSmall;\n      if (newWidth >= 1200) {\n        // extraLarge ≥1200px\n        currentBreakPoint = breakPointMode.xLarge;\n      } else if (newWidth >= 992) {\n        // large, ≥992px\n        currentBreakPoint = breakPointMode.large;\n      } else if (newWidth >= 768) {\n        // medium, ≥768px\n        currentBreakPoint = breakPointMode.medium;\n      } else if (newWidth >= 576) {\n        // small, ≥576px\n        currentBreakPoint = breakPointMode.small;\n      } else if (newWidth < 576) {\n        // xSmall,\t<576px\n        currentBreakPoint = breakPointMode.xSmall;\n      }\n      if (oldCurrentBreakPointMode !== currentBreakPoint) {\n        if (newWidth >= 576) {\n          if (expandedMode) {\n            store.dispatch(\n              dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n                width: newWidth * 0.75,\n                currentBreakPoint,\n              }),\n            );\n          } else {\n            store.dispatch(\n              dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n                width: newWidth * 0.9,\n                currentBreakPoint,\n              }),\n            );\n          }\n        } else {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n              width: newWidth,\n              currentBreakPoint,\n            }),\n          );\n        }\n      } else if (newWidth >= 576) {\n        if (expandedMode) {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidth(newWidth * 0.75),\n          );\n        } else {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidth(newWidth * 0.9),\n          );\n        }\n      } else {\n        store.dispatch(dimentionsSlice.actions.setDimentionsWidth(newWidth));\n      }\n    }\n    if (height !== newHeight) {\n      store.dispatch(dimentionsSlice.actions.setDimentionsHeight(newHeight));\n    }\n  }, [dimensions]);\n\n  return (\n    <>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: insets.top,\n          backgroundColor: safeAreaColors.top,\n        }}\n      />\n      <SafeAreaView\n        style={{\n          backgroundColor: safeAreaColors.bottom,\n          width: dimensions.window.width,\n          height: dimensions.window.height - (insets.top + insets.bottom),\n          zIndex: 10,\n          top: insets.top,\n          position: 'absolute',\n        }}\n      >\n        <AppMain dimensions={dimensions} />\n      </SafeAreaView>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: insets.bottom,\n          backgroundColor: safeAreaColors.bottom,\n          position: 'absolute',\n          bottom: 0,\n        }}\n      />\n      {currentBreakPoint >= 1 ? (\n        <View\n          style={{\n            height: dimensions.window.height,\n            width: expandedMode\n              ? dimensions.window.width * 0.25\n              : dimensions.window.width * 0.1,\n            backgroundColor: '#793033',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    // Primary\n    primary: Colors.darkGray, // ALL G\n    primaryContainer: Colors.maroon, // Selected Am Mode\n    onPrimary: Colors.black, // This is special Text\n    onPrimaryContainer: Colors.black,\n    inversePrimary: Colors.white,\n\n    secondary: Colors.black,\n    secondaryContainer: Colors.lightGray, // Back box of selected time or hour\n    onSecondary: Colors.black, // text like if hour or minute is selected\n    onSecondaryContainer: Colors.black,\n\n    // Tertiary\n    tertiary: Colors.darkGray,\n    tertiaryContainer: Colors.darkGray,\n    onTertiary: Colors.darkGray,\n\n    // Background\n    surface: Colors.white, // ALL G\n    surfaceVariant: Colors.lightGray, // ALL G this is the circle\n    onSurfaceVariant: Colors.black, // This is am pm and title text\n    background: Colors.lightGray,\n    onSurface: Colors.black, // This is most text\n    onBackground: Colors.black,\n    backdrop: 'rgba(237, 237, 237, 0.77)',\n\n    outline: Colors.black, // ALL G\n    outlineVariant: Colors.black,\n\n    shadow: Colors.black,\n    scrim: Colors.black,\n  },\n};\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PaperProvider theme={theme}>\n        <SafeAreaProvider>\n          <GestureHandlerRootView style={{ flex: 1 }}>\n            <AppCore />\n          </GestureHandlerRootView>\n        </SafeAreaProvider>\n      </PaperProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [730], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["monthDataSlice","createSlice","name","initialState","reducers","setMonthData","_state","action","payload","setResourcesLastCalled","breakPointMode","loadingStateEnum","postType","dataContentTypeOptions","taskImportanceEnum","taskStatusEnum","resourceResponce","commissionTypeEnum","paulyEventType","recurringType","semesters","submissionTypeEnum","locationStateEnum","calendarMode","resourceMode","Colors","_createClass","_classCallCheck","white","maroon","lightGray","darkGray","black","danger","initalState","top","bottom","safeAreaColorsSlice","setSafeAreaColors","state","setSafeAreaColorTop","_objectSpread","setSafeAreaColorBottom","microsoftProfileDataSlice","uri","displayName","id","setMicrosoftProfileData","currentEventsSlice","setCurrentEvents","_toConsumableArray","pushEvent","concat","removeCurrentEvent","slice","setCurrentEventsLastCalled","Date","toISOString","selectedDateSlice","setSelectedDate","paulyListSlice","siteId","studentFilesListId","commissionListId","commissionSubmissionsListId","paulyDataListId","scheduleListId","sportsListId","sportsApprovedSubmissionsListId","sportsSubmissionsListId","timetablesListId","resourceListId","eventTypeExtensionId","eventDataExtensionId","classExtensionId","resourceExtensionId","dressCodeListId","roomListId","setPaulyList","authenticationTokenSlice","setAuthenticationToken","setAuthenticationRefreshToken","dimentionsSlice","width","height","currentBreakPoint","setDimentionsWidth","setDimentionsWidthCurrentBreakPoint","setDimentionsHeight","setAuthenticationApiToken","taskDeltaSlice","setTaskDeltaLink","tasksDeltaReducer","reducer","tasksReducer","message","animationSpeed","powerpointBlob","powerpointShare","paulyDataState","loading","paulyDataSlice","setPaulyData","setPaulyDataState","initalResourcesState","resources","loadingState","searchValue","resourceFollow","selectedResourceMode","home","resourcesSlice","setResourceData","pushResource","push","setResources","setResourcesState","setSearchValue","setResourceFollow","setSelectedResourceMode","eventName","createEventState","notStarted","isPickingStartDate","isPickingEndDate","allDay","isGovernmentEvent","selectedTimetable","selectedSchoolDayData","undefined","selectedSchoolYear","selectedEventType","personal","recurringEvent","selectedRecurringType","daily","startDate","endDate","isShowingAddDate","isEditing","selectedCalendarMode","month","selectedEvent","addEventSlice","setEventName","setCreateEventState","setIsPickingStartDate","setIsPickingEndDate","setAllDay","setIsGovernmentEvent","setSelectedTimetable","setSelectedSchoolDayData","setSelectedSchoolYear","setSelectedEventType","setRecurringEvent","setSelectedRecurringType","setStartDate","setEndDate","setIsShowingAddDate","setIsEditing","setSelectedCalendarMode","setSelectedEvent","taskState","userState","trendingState","userData","trendingData","userTasks","importance","normal","status","excess","schoolDayData","startTime","isShowingCompleteTasks","homepageDataSlice","setTaskState","setUserState","setTrendingState","setUserData","setTrendingData","setUserTasks","updateUserTask","index","length","task","unshiftUserTask","unshift","popUserTask","splice","setSchoolDayData","setStartTime","setIsShowingCompletedTasks","expandedModeSlice","setExpandedMode","isShowingProfileBlockSlice","setIsShowingProfileBlock","isGovernmentModeSlice","setIsGovernmentMode","commissionsState","points","currentCommissions","selectedCommission","commissionNextLink","commissionsSlice","setCommissionsState","setPoints","setCurrentCommissions","setSelectedCommission","setCommissionNextLink","pdfDataSlice","inject","images","pageNumber","setInject","addImage","setImages","setPageNumber","increasePageNumber","decreasePageNumber","monthViewSlice","setMonthViewData","authenticationCallSlice","setAuthenticationCallIncrement","searchText","users","usersState","nextLink","studentSearchSlice","setStudentSearch","setStudentUsers","setUsersState","setNextLink","setStudentUserByIndex","user","setStudentUserById","findIndex","e","configureStore","addEvent","addEventReducer","authenticationToken","authenticationTokenReducer","authenticationApiToken","authenticationApiTokenReducer","authenticationRefreshToken","authenticationRefreshTokenReducer","authenticationCall","authenticationCallReducer","commissions","commissionsReducer","currentEvents","currentEventsReducer","currentEventsLastCalled","currentEventsLastCalledReducer","dimentions","dimentionsReducer","expandedMode","expandedModeReducer","homepageData","homepageDataReducer","isGovernmentMode","isGovernmentModeReducer","isShowingProfileBlock","isShowingProfileBlockReducer","microsoftProfileData","microsoftProfileDataReducer","monthData","monthDataReducer","monthView","monthViewReducer","paulyData","paulyDataReducer","paulyList","paulyListReducer","pdfData","pdfDataReducer","resourcesReducer","resourcesLastCalled","resourcesLastCallReducer","safeAreaColors","safeAreaColorsReducer","tasks","tasksDeltaLink","selectedDate","selectedDateReducer","studentSearch","studentSearchReducer","middleware","getDefaultMiddleware","immutableCheck","CalendarIcon","_ref","style","_jsx","View","children","_jsxs","Svg","viewBox","fill","Path","d","fillRule","clipRule","MedalIcon","_ref2","G","strokeWidth","strokeLinecap","strokeLinejoin","Polygon","BookIcon","_ref3","GovernmentIcon","_ref4","HomeIcon","_ref5","UpIcon","_ref6","DownIcon","_ref7","AddIcon","_ref8","CloseIcon","_ref9","ChevronLeft","_ref10","props","ChevronRight","_ref11","FolderIcon","_ref12","stroke","DocumentIcon","_ref13","Rect","x","y","CopyIcon","_ref15","PersonIcon","_ref16","GearIcon","_ref17","GraduationHatIcon","_ref18","WarningIcon","_ref19","outlineColor","Circle","cx","cy","r","SearchIcon","_ref20","WordIcon","_ref21","Defs","LinearGradient","x1","y1","x2","y2","gradientTransform","gradientUnits","Stop","offset","stopColor","opacity","PowerpointIcon","_ref22","ExcelIcon","_ref23","VideoIcon","_ref24","PDFIcon","_ref25","ImageIcon","_ref26","AudioIcon","_ref27","OneNoteIcon","_ref28","fillOpacity","rx","GraphAPILogo","_ref29","ClipPath","clipPath","StudentSearchIcon","_ref30","TimeIcon","_ref31","TrashIcon","_ref32","color","OfflineIcon","_ref33","BoldIcon","_ref34","strokeMiterlimit","ItalicIcon","_ref35","Line","StrikeThroughIcon","_ref36","UnderlineIcon","_ref37","Polyline","RightAlignmentIcon","_ref38","LeftAlignmentIcon","_ref39","CenterAlignmentIcon","_ref40","AnimatedPath","Animated","_worklet_9513762084135_init_data","code","location","ChipView","progress","useSharedValue","useEffect","value","withDelay","withRepeat","withTiming","duration","animatedProp","useAnimatedProps","_f","interpolateColor","_closure","__initData","__workletHash","translate","animatedProps","ProgressView","map","path","Login","onGetAuthToken","onGetGovernmentAuthToken","isLoading","useSelector","_useState","useState","_useState2","_slicedToArray","isBottonHover","setIsButtonHover","_useState3","_useState4","isGovernmentHover","setIsGovernmentHover","_useState5","_useState6","fontSize","setFontSize","_useState7","_useState8","isShowingGovernmentLogin","setIsShowingGovernmentLogin","insets","useSafeAreaInsets","dispatch","useDispatch","useCallback","_setSafeAreaColors","_asyncToGenerator","actions","apply","arguments","_useFonts","useFonts","BukhariScript","require","fontsLoaded","SplashScreen","Pressable","backgroundColor","alignContent","alignItems","justifyContent","overflow","onLongPress","delayLongPress","flexDirection","Image","source","resizeMode","position","left","Text","fontFamily","textShadowColor","textShadowOffset","textShadowRadius","selectable","marginTop","onPress","onHoverIn","onHoverOut","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","textAlign","fontWeight","findFirstDayinMonth","currentTime","year","getFullYear","getMonth","getDay","calculateIfShowing","Time","dateToCheck","today","getDate","isDateToday","hourInt","getHours","minuiteInt","getMinutes","resepctiveTime","toString","findTimeOffset","time","minutieWidth","orgWideGroupID","tenantId","clientId","domainName","paulyDomain","scopes","raindropToken","callMsGraph","_x","_x2","_x3","_x4","_x5","_callMsGraph","url","method","body","headersIn","secondAuth","headers","Headers","bearer","store","getState","append","headerIndex","key","options","outUrl","Platform","OS","urlArray","split","response","fetch","previousValue","Promise","resolve","unsubscribe","subscribe","result","largeBatch","_largeBatch","defaultBatchData","createData","data","failed","batchIndex","keys","array","createDataIndex","firstUrl","secondUrl","forEach","output","batchData","requests","JSON","stringify","ok","batchResultData","json","responses","success","createUUID","dt","getTime","replace","c","Math","random","floor","getTextState","labels","cannotStart","offline","getDressCode","_getDressCode","dressCodeId","dressCodeData","parse","fields","dressCodeIncentivesData","dressCodeName","listId","dressCodeIncentives","getGraphEvents","_getGraphEvents","referenceUrl","newEvents","_loop","_singleValueExtendedP","_singleValueExtendedP2","eventTypeExtensionID","eventDataExtensionID","singleValueExtendedProperties","eventType","find","eventData","subject","start","dateTime","endTime","end","isAllDay","eventColor","paulyEventData","microsoftEvent","microsoftReference","events","getEvent","_getEvent","event","_eventData$find","_eventData$find2","getSchedule","_getSchedule","resultSchedule","properName","scheduleProperName","descriptiveName","scheduleDescriptiveName","periods","scheduleData","scheduleId","scheduleColor","schedule","listItemId","getSchedules","_getSchedules","dataResult","newLoadedSchedules","_unused","getTimetable","_getTimetable","timetableId","timetableDataSchedules","newSchedules","dressCodeResult","timetableDressCodeId","resultingTimetable","timetableName","schedules","days","timetableDataDays","dressCode","timetable","_getSchoolDay","UTC","_ret","_loop2","_eventData$find3","_eventData$find4","_eventData$find5","v","_getSchoolDays","date","firstDay","lastDay","scheduleIds","Map","schoolYearIds","outputIds","set","schoolYearEventId","batchRequestResultSchedule","batchRequest","scheudleIndex","resultScheduleData","scheduleResponseData","_unused2","timetableResult","_x8","_x9","_getTimetablesFromSchoolYears","getTimetablesFromSchoolYears","_ret2","schoolDaysResult","_loop3","get","schoolDay","schoolDayId","semester","dressCodeIncentiveId","batchRequestResultSchoolYear","timetableIds","schoolYearIndex","schoolYearData","perviousTimetable","_unused3","batchRequestResultTimetable","dressCodeIds","responseIndex","_unused4","batchRequestResultDressCode","dressCodes","dressCodeIndex","_batchRequestResultDr","_batchRequestResultDr2","_unused5","timetables","timetableIndex","resultTimetableData","timetableData","timetableSchedules","scheduleIndex","newSchedule","outputTimetables","timetablesArray","item","_createDressCode","Title","MonthBlock","_getDay","daySelected","textval","startdate","let1","day","monthViewData","borderColor","borderWidth","_Fragment","right","shorthand","zIndex","MonthView","Count","input","setFullYear","getDaysInMonth","StartDate","thirtyValue","Array","_loadData","_x7","getSchoolDays","loadData","flexWrap","numberOfLines","getCurrentPaulyData","_getCurrentPaulyData","powerpointId","fileResult","dataBlob","blob","outputResult","URL","createObjectURL","ScrollingTextAnimation","text","pan","useRef","Value","current","childWidth","setChildWidth","mainLoop","childWidthLoop","loop","sequence","timing","toValue","delay","easing","Easing","linear","useNativeDriver","GochiHand","transform","translateX","ScrollView","horizontal","onLayout","nativeEvent","layout","adjustsFontSizeToFit","HomePage","navigate","useNavigate","_useSelector2","_useSelector3","borderTopColor","borderTopWidth","borderBottomColor","borderBottomWidth","margin","aspectRatio","_getUsersLocation","commission","Location","requestForegroundPermissionsAsync","permissionDenied","getCurrentPositionAsync","mocked","mockedLocation","coordinateLat","coordinateLng","proximity","getDistance","lat","coords","latitude","lng","longitude","latCoordinate","lngCoordinate","notCloseEnough","_b64toBlob","b64Data","_addImage","base64","fileBlob","b64toBlob","types","type","rootIdResult","rootIdData","imageUUID","resumableSessionData","deferCommit","resumableSessionResult","resumableSessionResultData","uploadUrl","nextExpectedRanges","nextExpectedRange","remaining","size","uploaded","uploadBlob","uploadResult","uploadCompleteResult","uploadCompleteResultData","createLinkResult","scope","createLinkData","shareId","claimCommissionPost","_x6","_claimCommissionPost","auth","commissionId","imageShare","outResult","Authorization","CommissionClaim","imageData","claimCommissionState","setClaimCommissionState","instance","useMsal","_claimCommission","apiResult","acquireTokenSilent","outImageUrl","ImageLocation","outImage","locationResult","getUsersLocation","accessToken","claimCommission","marginLeft","marginRight","getCommission","_getCommission","itemId","title","hidden","commissionID","postData","teamId","postTeamId","channelId","postChannelId","postId","timed","maxNumberOfClaims","allowMultipleSubmissions","submissionsCount","claimCount","reviewedCount","WebViewCross","html","rawHtml","adaptHeight","setAdaptHeight","WebView","automaticallyAdjustContentInsets","javaScriptEnabled","injectedJavaScript","onMessage","parseFloat","dangerouslySetInnerHTML","__html","CameraResult","CommissionsView","onClose","_useSelector","commissionData","setCommissionData","commissionState","setCommissionState","setMessageState","messageData","setMessageData","_useState9","_useState10","imageUri","setImageUri","_useState11","_useState12","takeImageState","setTakeImageState","_useState13","_useState14","pickImageState","setPickerImageState","_useState15","_useState16","isOverflowing","setIsOverflowing","_useState17","_useState18","evaluatedOverflow","setEvaluatedOverflow","_useState19","_useState20","imageHeight","setImageHeight","_getPost","messageId","content","_getCommissionInformation","_result$data","getPost","_pickImage","ImagePicker","launchImageLibraryAsync","allowsMultipleSelection","allowsEditing","mediaTypes","Images","canceled","assets","getSize","imageMeasureWidth","imageMeasureHeight","_ImagePicker$useCamer","useCameraPermissions","_ImagePicker$useCamer2","requestPermission","takeImage","_takeImage","GRANTED","launchCameraAsync","canAskAgain","granted","goToSettings","getCommissionInformation","paddingLeft","pickImage","marginBottom","getPointsBatch","_getPointsBatch","outputRequests","pointsResult","requestIndex","_getPoints","nextUrl","submissionResultClaimed","submissionResultClaimedData","submissionApproved","batchResult","_getSubmissions","commissionIds","outputMap","requestData","dataIndex","respone","valueIndex","has","mapData","subApproved","subReviewed","submissionReviewed","getCommissions","_getCommissions","claimed","_getUnclaimedCommissions","getUnclaimedCommissions","filter","getFilter","commissionsIds","submissions","getSubmissions","resultCommissions","submissionData","getCommissionsBatch","_getCommissionsBatch","commissionsResult","parseInt","commissionsMap","count","commissionsBatchData","outCommissions","BackButton","to","Commissions","_useSelector4","isHoverPicker","setIsHoverPicker","pointResult","getPoints","loadCommissionData","_loadCommissionData","FlatList","renderItem","elevation","toLocaleDateString","minute","keyExtractor","onEndReachedThreshold","onEndReached","initialNumToRender","showsHorizontalScrollIndicator","PickerPiece","_useSelector5","isSelected","setIsSelected","getUsersTasks","_getUsersTasks","deltaRunAgain","deltaMode","tasksResult","taskData","resultTasks","high","low","inProgress","completed","waitingOnOthers","deferred","_getInsightData","usedResult","userOutData","webUrl","resourceReference","resourceVisualization","trendingResult","trendingOutData","_worklet_17468625320245_init_data","AnimatedCheckMarkPath","checkMarkColor","checked","checkMarkAnimation","strokeDashoffset","strokeDasharray","_worklet_8732131500673_init_data","CustomCheckBox","useDerivedValue","inOut","bezierFn","PDFJS","workerSrc","_worklet_7922200678359_init_data","_worklet_4482853661007_init_data","_worklet_11315627200092_init_data","PDFView","_convertPdfToImages","imagesArray","file","Blob","docInitParams","pdf","promise","canvas","document","createElement","i","numPages","page","getPage","viewport","getViewport","scale","context","getContext","render","canvasContext","toDataURL","remove","convertPdfToImages","singleTap","Gesture","Tap","onEnd","_event","doubleTap","numberOfTaps","taps","Exclusive","fling","Fling","compound","Simultaneous","GestureDetector","gesture","wordTypes","excelTypes","powerpointTypes","MimeTypeIcon","mimeType","includes","getRooms","_getRooms","search","searchFilter","resultArray","roomName","roomId","_getRoom","feilds","ro0mId","getClasses","_getClasses","classQuery","batchDataRequests","classResult","classData","classes","periodData","room","schoolYearId","semesterOne","_getClassEvents","scheduleResult","outputEvents","order","period","setHours","startHour","setMinutes","startMinute","setSeconds","endHour","endMinute","sort","a","b","getClassEventsFromDay","_getClassEventsFromDay","getSchoolDay","_eventResult$data","eventResult","dressCodeIncentive","getClassEvents","startTimeDate","hourTime","monthTime","Notifications","insightResult","getInsightData","taskResult","WidgetView","BoardBlock","TaskBlock","InsightsBlock","_useSelector6","_useSelector7","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","TaskItem","DeleteTask","onDelete","paddingRight","setChecked","setUpdateTaskState","_useSelector9","currentText","setCurrentText","mounted","setMounted","updateTaskStatus","_updateTaskStatus","newItem","Object","assign","_updateText","_deleteTask","_checkUpdateText","taskNameSave","setTimeout","updateText","checkUpdateText","Swipeable","renderRightActions","deleteTask","paddingTop","paddingBottom","TextInput","onChangeText","newTask","multiline","_useSelector10","_useSelector11","_useSelector12","TrendingFiles","PopularFiles","_useSelector14","Linking","openURL","_useSelector16","convertResourceModeString","convert","sports","advancement","schoolEvents","annoucments","fitness","_getResourceFollows","resourceGroupId","resourceConversationId","getAttachments","_getAttachments","attachments","attachmentIndex","contentType","attachmentResult","attachmentData","attachmentGetResult","parentReference","driveId","attachmentGetResultData","_getResources","category","getResourceFollows","categoryString","categoryFilter","batchCount","resourceRsp","resourceResponceData","responceIndex","resourceResponceDataBody","channelIdentity","outputData","conversationId","_getResourcesSearch","searchPayload","entityTypes","query","queryString","from","enableTopResults","searchResult","searchData","hitsContainers","hits","resource","getResource","_getResource","groupId","found","notFound","_getScholarships","scholarships","items","note","link","cover","_getNewsPosts","outputPosts","posts","excerpt","meta","next_page","ResourcesNews","setPosts","postState","setPostState","selectedPost","setSelectedPost","loadArticles","_loadArticles","getNewsPosts","post","checkIfResourceDataJustAttachment","ResourceBlock","_resource$item$attach","setIsShowingCategoryView","attachment","ScholarshipBlock","setHeight","imgWidth","imgHeight","ResourceScholarships","scholarState","setScholarState","setScholarships","getScholarships","Resources","isShowingCategoryView","getResources","SearchBox","news","files","GovernmentCategoryView","_useSelector8","categoryState","setCategoryState","selectedCategory","setSelectedCategory","_addCategory","addCategory","_useState21","_useState22","outlineStyle","searchValueSave","getResourcesSearch","placeholder","placeholderTextColor","enterKeyHint","inputMode","alignSelf","signOutWeb","account","logoutPopup","Settings","imageLoadState","setImageLoadState","discovery","useAutoDiscovery","signOut","getActiveAccount","revokeAsync","token","signOutNative","onError","Block","imageSource","Government","mainWidth","setMainWidth","fivePercent","textAlignVertical","verticalAlign","rowGap","columnGap","selectedIndex","onSetSelectedIndex","compoentWidth","Children","setValue","React","child","getTeams","_getTeams","groupResult","groupResultData","getChannels","_getChannels","selected","error","_getPosts","graphMode","MicrosoftGraphOverview","lists","setLists","groups","setGroups","extensions","setExtensions","applicationExtensions","setApplicationExtensions","list","selectedGraphMode","setSelectedGraphMode","mode","useParams","groupLoadingState","setGroupLoadingState","listLoadingState","setListLoadingState","schemaLoadingState","setSchemaLoadingState","_getLists","incomingLists","_getExtensions","schemaExtensionsUrl","resultData","description","applicationResult","applicationData","group","extension","getLists","getExtensions","Link","PickerWrapper","MicrosoftGraphCreateList","columns","setColumns","listName","setListName","isListHidden","setIsListHidden","isShowingTypeWindow","setIsShowingTypeWindow","selectedColumnType","setSelectedColumnType","isHidden","setIsHidden","newColumnName","setNewColumnName","_createList","columnData","newData","listData","contentTypesEnabled","template","Button","allowMultipleLines","appendChangesToExistingText","linesForEditing","maxLength","textType","newColumn","createList","submissionType","approved","unApproved","unReviewed","convertSubmissionTypeToFilter","batchRequests","userId","defineProperty","userName","submissionTime","submittedTime","submissionId","reviewed","submissionImage","GovernmentCommissions","setCommissions","CommissionBlock","unclaimedState","setUnclaimedState","unclaimedCount","setUnclaimedCount","_loadData2","SegmentedPicker","setSelectedIndex","setComponentWidth","option","center","MapWeb","onSetSelectedPositionIn","isLoaded","useJsApiLoader","googleMapsApiKey","selectedPosition","setSelectedPosition","containerStyle","setContainerStyle","GoogleMap","mapContainerStyle","zoom","onClick","ev","latLng","Marker","radius","styles","StyleSheet","create","container","flex","box","Box","containerWidth","valueRef","currentValue","containerWidthRef","lastValue","panResponder","PanResponder","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderMove","evt","gestureState","dx","valueRead","adding","newValue","onPanResponderRelease","panHandlers","Slider","getFileWithShareID","_getFileWithShareID","shareID","image","video","_updateCommission","isCreating","commissionName","isTimed","selectedCommissionType","selectedPostId","selectedTeamId","selectedChannelId","selectedPositionIn","commissionItemId","QRCode","qrCodeData","datePickingMode","GovernmentEditCommission","submitCommissionState","setSubmitCommissionState","Issued","setSelectedCommissionType","setCommissionName","setProximity","none","currentDatePickingMode","setCurrentDatePickingMode","setSelectedPositionIn","setMaxNumberOfClaims","_useState23","_useState24","setAllowMultipleSubmissions","_useState25","_useState26","setIsTimed","_useState27","_useState28","setCommissionItemId","_useState29","_useState30","setGetCommissionResult","_useState31","_useState32","deleteCommissionResult","setDeleteCommissionResult","_useState33","_useState34","setSelectedTeamId","_useState35","_useState36","setSelectedChannelId","_useState37","_useState38","setSelectedPostId","_useState39","_useState40","setIsCreating","_deleteCommission","_loadUpdateCommission","_x10","_x11","_x12","_x13","_x14","_x15","_x16","_x17","updateCommission","keyboardType","TimePickerModal","hours","minutes","visible","onDismiss","onConfirm","newDate","DatePickerModal","locale","label","oldDate","PostSelectionContainer","CommissionSubmissions","loadUpdateCommission","deleteCommission","postPickingMode","_useState41","team","_useState42","currentPostPickingMode","setCurrentPostPickingMode","GroupSelection","onSelect","channel","ChannelSelection","onBack","PostSelection","_useState43","_useState44","_useState45","_useState46","_useState47","_useState48","groupsState","setGroupsState","_useState49","_useState50","_useState51","_useState52","_useState53","_useState54","_useState55","_useState56","channelState","setChannelState","_useState57","_useState58","channels","setChannels","_loadData3","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","postsState","setPostsState","_useState65","_useState66","_loadData4","getPosts","padding","_useState67","_useState68","submissiosState","setSubmissionsState","_useState69","_useState70","setSubmissions","_useState71","_useState72","selectedSubmissionMode","setSelectedSubmissionMode","_useState73","_useState74","selectedSubmission","setSelectedSubmisson","_loadData5","secondResult","all","submission","weekday","hour","second","SubmissionView","setSubmissionData","_useState75","_useState76","changeState","setChangeState","_useState77","_useState78","imageState","setImageState","_useState79","_useState80","_useState81","_useState82","setImgHeight","_changeSubmissionApproved","_loadImage","shareResult","loadImage","changeSubmissionApproved","getSports","_getSports","sportName","sportId","svgData","sportSvg","getSportsTeams","_getSportsTeams","teamName","season","_getSport","newMediaSubmissions","User","accepted","fileId","itemID","selectedSportId","fileType","_getSportsContent","newSportsPosts","shareResultsPromise","microsoftFile","shareResults","_index","caption","youtubeVideo","_getRoster","playerId","outUsers","_batchResult$data$_in","_batchResult$data$_in2","outputRosters","_index3","imageShareId","playerNumber","SVGXml","xml","YouTubeVideo","_React$PureComponent","_inherits","_super","_createSuper","_this","_len","args","_key","call","componentDidMount","window","YT","loadVideo","tag","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","player","Player","videoId","playerVars","onReady","onPlayerReady","target","playVideo","propTypes","PropTypes","isRequired","SportsYoutube","YoutubeWeb","scrollEnabled","scalesPageToFit","allowsInlineMediaPlayback","Sports","sportsPosts","setSportsPosts","loadingResult","setLoadingResult","sportsState","setSportsState","setTeamsState","selectedSport","setSelectedSport","selectedTeam","setSelectedTeam","isShowingTeams","setIsShowingTeams","setSports","isShowingRoster","setIsShowingRoster","sportsTeams","setSportsTeams","_loadSports","_loadTeams","sport","_loadSportsContent","getSportsContent","loadSports","loadSportsContent","loadTeams","RosterView","SportsPostBlock","Video","useNativeControls","ResizeMode","COVER","videoStyle","rosterLoadingState","setRosterLoadingState","roster","setRoster","_loadRoster","getRoster","loadRoster","_useFonts3","RosterImage","imageUrl","setImageUrl","imageId","DayView","colorScheme","useColorScheme","heightOffsetTop","setHeightOffsetTop","currentMinuteInt","setCurrentMinuteInt","setCurrentTime","isShowingTime","hourLength","setHourLength","mainScrollRef","eventsPane","setEventsPane","setSchoolEvents","setCurrentTimeFunction","minuite","_getClassesEvents","interval","setInterval","updateOnTimeChange","clearInterval","_mainScrollRef$curren","currentDate","resultHeightTopOffset","scrollTo","animated","loadCalendarContent","getClassesEvents","ref","EventBlock","eventPane","setEventPane","EventHeight","fromDate","toDate","delta","computeEventHeight","Offset","setHorizontalShift","handeled","horizontalCheck","beforeIndex","afterIndex","calculateHorizontalShift","borderLeftWidth","toLocaleString","Week","selectedDateRedux","daysOfWeek","setDaysOfWeek","week","setDate","getDOW","SelectTimetable","governmentMode","setLoadingState","loadedTimetables","setLoadedTimetables","_getTimetables","newLoadedTimetables","getTimetables","pickSchoolDayMode","SelectSchoolDayData","schoolYear","schoolDayMode","setSchoolDayMode","timetableState","setTimetableState","setTimetable","SchoolYearsSelect","SchoolDaySelect","ScheduleSelect","DressCodeSelect","semesterTwo","DressCodeIncentivesSelect","currentEventsSchoolYear","setCurrentEventsSchoolYear","_getData","furtherResult","getData","incentive","_createEvent","timeZone","dataOut","resultEvent","_store$getState$addEv","newEndDate","_schoolDay$dressCodeI","_schoolDay$dressCodeI2","selectedSchoolDayDataCompressed","GovernmentCalendarOptions","DateAndTimeSection","endDatePickerVisable","setEndDatePickerVisable","startDatePickerVisable","setStartDatePickerVisable","AddEvent","_deleteEvent","updateEvent","deleteEvent","CalendarTypePicker","fadeIn","sqrt","_getEvents","getBackgroundColor","dayData","getTextBackgroundColor","isCalendarTextColor","toDateString","CalendarCardView","calendarWidth","pressCalendar","showing","daysInWeek","DOW","fontScale","useWindowDimensions","firstDayWeek","monthDataResult","checkStart","checkEnd","indexEvent","endTimeDate","getMonthData","numColumns","TopView","MonthViewMain","Calendar","getEvents","GovernmentHandleFileSubmissions","currentMediaSubmissions","setCurrentMediaSubmissions","loadingSubmissionsState","setLoadingSubmissionsState","GovernmentSports","currentSports","setCurrentSports","setDataResult","GovernmentCreateNewSport","setSportName","setSvgData","createSportLoadingState","setCreateSportLoadingState","_createSport","newSportID","required","number","indexed","enforceUniqueValues","createSport","SportsUpdateModel","isPickingSvg","setIsPickingSvg","setListId","getSportState","setGetSportState","updateSportState","setUpdateSportState","_updateSport","updateData","_loadSport","getSport","loadSport","Modal","animationType","updateSport","GovernmentSportsTeams","_useParams","currentTeams","setCurrentTeams","deleteSportState","setDeleteSportState","_deleteSport","getSportResult","getSportData","deleteSport","_getUserMicrosoftFiles","newFiles","lastModified","lastModifiedDateTime","folder","parentDriveId","parentPath","itemGraphPath","callPath","_getUserTeams","teamDescription","MicrosoftUploadModeType","onSetIsShowingUpload","onSetIsShowingMicrosoftUpload","onSelectedFile","usersTeams","setUsersTeams","Personal","selectedMicrosoftUploadMode","setSelectedMicrosoftUploadMode","shareLinkString","setShareLinkString","_loadUserTeams","getUserTeams","_getShareFile","shareLink","loadUserTeams","Picker","ShareLink","Site","PersonalBlock","base64Value","btoa","trimEnd","getShareFile","TeamsBlock","userTeams","teamFileMode","usersFiles","setUsersFies","microsoftPath","setMicrosoftPath","fileBackAvaliable","setFilesBackAvaliable","getFilesState","setGetFilesState","loadGetUserMicrosoftFiles","_loadGetUserMicrosoftFiles","getUserMicrosoftFiles","microsftPathArray","pop","outputString","GovernmentCreateNewTeam","createTeamLoadingState","setCreateTeamLoadingState","teamDataState","setTeamDataState","isCreatingTeam","setIsCreatingTeam","setTeamName","setSeason","teamListItemId","setTeamListItemId","teams","setTeams","setTeamsNextLink","selectedMicrosoftTeam","setSelectedMicrosoftTeam","isSelectingFile","setIsSelectingFile","selectedFile","setSelectedFile","_loadMicrosftTeams","_updateTeam","newTeamId","microsoftTeamId","dependsOn","_deleteTeam","_getMicrosoftTeam","getMicrosoftTeamId","_getTeamData","teamResult","getMicrosoftTeam","loadMicrosftTeams","getTeamData","RosterBlock","deleteTeam","updateTeam","RosterSelectFile","membersState","setMembersState","members","setMembers","_getMembers","teamResultData","rosters","teamIndex","save","shift","getMembers","member","RosterBlockItem","rosterState","setRosterState","callingSelectedFile","setIsCallingSelectedFile","_createMemberItem","updatePlayerData","_updatePlayerData","createMemberItem","onFocus","onBlur","MicrosoftFilePicker","_getYoutubeVideos","pageToken","thumbnail","snippet","thumbnails","contentDetails","nextPageToken","YoutubeVideosSelector","ytVideos","setytVideos","ytState","setytState","nextPage","setNextPage","getYoutubeVideos","GovernmentSportsTeamAddPost","setFileId","postName","setPostName","postSubmissionState","setPostSubmissionState","setSelectedSportId","postMode","setPostMode","_getShareLink","itemPathArray","_createFileSubmission","userIdResult","submissionID","timeCreated","PickSportTeam","SegmentedButtons","buttons","getShareLink","createFileSubmission","setSportTeams","sportTeamState","setSportTeamState","getDenyText","GovernmentReviewFileSubmission","dataURL","setDataURL","unknown","dataContentType","setDataContentType","currentSubmissionInfomration","setCurrentSubmissionInformation","approveSubmissionState","setApproveSubmissionState","denySubmissionState","setDenySubmissionState","setDeleteState","_deleteSubmission","_getSubmissionInformation","_approveSubmission","newInformation","_denySubmission","_loadFile","getSubmissionInformation","loadFile","deleteSubmission","approveSubmission","denySubmission","GovernmentCalendar","GovernmentSchedule","loadedSchedules","setLoadedSchedules","_loadSchedules","loadSchedules","GovernmentTimetable","isValidHexaCode","test","setScheduleListId","setScheduleProperName","setScheduleDescriptiveName","newPeriods","setNewPeriods","setColor","isPickingColor","setIsPickingColor","isCreatingSchedule","setIsCreatingSchedule","createScheduleLoadingState","setCreateScheduleLoadingState","loadScheduleState","setLoadScheduleState","deleteState","_submitSchedule","_deleteFunction","_loadFunction","loadFunction","PeriodBlock","onSetNewPeriods","out","ColorPicker","onComplete","hex","InputWidget","disableAlphaChannel","defaultFormat","formats","inputTitleStyle","display","Preview","hideText","hideInitialColor","borderTopRightRadius","borderBottomRightRadius","Panel1","renderThumb","CustomColorThumb","diameter","HueSlider","submitSchedule","deleteFunction","isSelectingStartTime","setIsSelectingStartTime","isSelectingEndTime","setIsSelectingEndTime","update","newNewPeriodsArray","indexToRemove","deleteItem","_worklet_11564229163699_init_data","animatedStyle","useAnimatedStyle","currentColor","positionStyle","GovernmentClasses","classState","setClassState","setClasses","classMap","_getSchoolYears","Dropdown","expandedStyle","setExpanded","expanded","isExpanded","setIsExpanded","GovernmentClassesEdit","selectedSemester","setSelectedSemester","className","setClassName","roomSearchText","roomsNextLink","setRoomsNextLink","rooms","setRooms","roomsState","setRoomsState","selectedRoom","setSelectedRoom","schoolYearState","setSchoolYearState","schoolYearNextLink","setSchoolYearNextLink","schoolYears","setSchoolYears","updateClassState","setUpdateClassState","isShowingClassConfirmMenu","setIsShowingClassConfirmMenu","setPeriods","_getClass","extensionData","semesterId","roomResult","getRoom","_loadRooms","_loadSchoolYears","getSchoolYears","_loadTimetable","newArray","_updateClass","loadTimetable","getClass","loadRooms","loadSchoolYears","dayIndex","DayBlock","updateClass","setSelected","flatMap","_item","GovernmentHomePage","setLoadContentLoadingState","setNewMessageState","newMessageText","setNewMessageText","selectedPowerpoint","setSelectedPowerpoint","isAutoUpdatingText","setIsAutoUpdatingText","_loadCurrentPaulyData","_createShareId","updatePaulyData","_updatePaulyData","storeText","loadCurrentPaulyData","createShareId","NavBarBlock","des","blockLength","setIsExpandedMode","isHover","setIsHover","navigation","LinkStyle","NavBarComponent","setBlockLength","iconLength","setIconLength","pointerEvents","PageNotFound","paulyListData","paulyDataData","addDataArray","targetTypes","owner","properties","urlOne","boolean","urlTwo","_initializePaulyPartOne","secondUserId","currentUsersIdResult","createGroupData","groupTypes","mailEnabled","mailNickname","visibility","membershipRule","membershipRuleProcessingState","securityEnabled","createGroupResult","createGroupResultData","initializePaulyPartTwo","_initializePaulyPartTwo","teamsData","initializePaulyPartThree","_initializePaulyPartThree","getTeam","getRootSiteIdResult","getRootSiteIdResultData","paulyListNewData","secondRun","getPaulyListResult","getPaulyListResultData","callData","paulyDataResult","paulyDataResultData","addPaulyListResult","initStage","GovernmentAdmin","selectedUser","setSelectedUser","timeLeft","setTimeLeft","timeElapsed","setTimeElapsed","createdGroupId","setCreatedGroupId","selectedUpdates","setSelectedUpdates","partOneStartTime","setPartOneStartTime","partTwoStartTime","setPartTwoStartTime","initResult","setInitResult","initTwoResult","setInitTwoResult","initThreeResult","setInitThreeResult","currentInitStage","setCurrentInitStage","_initializePauly","partOne","partOneResult","initializePaulyPartOne","partTwoLoad","reject","partTwo","done","partThreeLoad","partThree","thirdResult","_initializePaulyFromPartTwo","_initializePaulyFromPartThree","miliSecondsPassed","totalSecondsLeft","minutesLeft","secondsLeft","ceil","minutesLeftString","secondsLeftString","totalMinutesPast","minutesPast","hoursPast","secondsPast","hoursLeftString","UserBlock","initializePauly","initializePaulyFromPartTwo","addData","newSelectedUpdates","initializePaulyFromPartThree","currentUserId","setCurrentUserId","loadedUsers","setLoadedUsers","loadUsersResult","setLoadUsersResult","_getUserId","getUsers","_getUsers","newUsers","getUserId","GovernmentRooms","roomState","setRoomState","GovermentRoomsCreate","createRoomState","setCreateRoomState","setRoomName","_createRoom","createRoom","MicrosoftGraphEditList","currentColumns","setCurrentColumns","isCoppiedToClipboard","setIsCoppiedToClipboard","_getListItems","_indexColumn","columnId","newColumnData","_getColumns","newCurrentColumns","columnGroup","readOnly","getListItems","getColumns","Clipboard","setStringAsync","indexColumn","MicrosoftGraphEditGroup","deleteGroupLoadingState","setDeleteGroupLoadingState","_deleteGroup","deleteGroup","MicrosoftGraphEditExtension","deleteExtensionLoadingState","setDeleteExtensionLoadingState","_deleteExtension","deleteExtension","MicrosoftGraphEdit","TextEditorHeader","GovernmentResourcesPost","ChannelBlock","onUpdate","selectedGroup","setIsLoading","_addChannel","_removeChannel","itemResult","addChannel","removeChannel","GroupBlock","setSelectedGroup","_loadChannels","loadChannels","newChannels","GovernmentResources","getTeamsState","setGetTeamsState","isShowingEditor","setIsShowingEditor","resultGroups","onRequestClose","ListItem","getDressCodeData","_getDressCodeData","newDressCodes","GovernmentDressCode","getDressCodeState","setGetDressCodeState","setDressCodes","DressCodeBlock","setDressCodeData","selectedDressCodeId","setSelectedDressCodeId","newDressCodeData","GovernmentDressCodeEdit","setDressCodeName","setDressCodeListId","createDressCodeState","setCreateDressCodeState","_loadCreateDressCode","createDressCode","setDressCodeState","isCreatingDressCode","setIsCreatingDressCode","deleteDressCodeState","setDeleteDressCodeState","_deleteDressCode","loadCreateDressCode","deleteDressCode","GovernmentTimetableEdit","dressCodeState","createTimetableLoadingState","setCreateTimetableLoadingState","setTimetableName","selectedSchedules","setSelectedSchedules","selectedDressCode","setSelectedDressCode","schoolDays","setSchoolDays","selectedDefaultSchedule","setSelectedDefaultSchedule","_createTimetable","scheduals","timetableDefaultScheduleId","_getDressCodes","getDressCodes","ScheduleBlock","SchoolDays","createTimetable","SchoolDayItem","newSchoolDays","saveCurrent","scheduleState","setScheduleState","ProfileBlock","checkIfStudent","role","reversed","reverse","join","reverseYearTwelve","reverseYearEleven","reverseYearTen","reverseYearNine","grade","userIds","imagesIdsMap","imageIdsArray","batchResultDownloadUrls","imagesDownloadUrls","c300x400_crop","outputUsers","imageDownloadUrl","mail","student","_getStudentData","createdTime","_changeStudentSelection","selectedFileListId","fileData","fileIndex","newFileData","_removeStudentSelection","getNumberOfBlocks","Students","_loadUsers","loadUsers","StudentBlock","_getImage","newUser","updateStateUser","urlOut","imageDataUrl","calculateMarginEnds","widthIn","side","numberOfBlocks","widthRemaining","getImage","timer","ms","res","siteResult","siteData","copyPayload","copyResult","copyData","notComplete","resourceId","copyFetch","copyFetchData","getItemResult","getItemData","studentData","SelectMainFile","setFilePickingMode","setFileData","fileState","setFileState","setSelectedFileListId","getStudentData","selectedFileList","filePickingModeEnum","StudentSelectFileBlock","updateState","setUpdateState","_callRemoveSelection","removeStudentSelection","_callChangeSelection","changeStudentSelection","callRemoveSelection","callChangeSelection","GovernmentStudents","StudentItem","filePickingMode","select","transparent","StudentsSelectFile","isReviewing","setIsReviewing","addImageState","setAddImageState","_loadAddImage","loadAddImage","LoadingView","setOveride","isShowingLogout","setIsShowingLogout","isConnected","setIsConnected","checkIfConnected","_checkIfConnected","Network","getNetworkStateAsync","isInternetReachable","intervalId","AuthenticatedView","dimensions","overide","LoadingScreen","NativeRouter","Routes","Route","element","GovernmentRoomsCreate","GovernmentSchedual","GovernmentScheduleEdit","GovernmentSportTeamEdit","getPaulyLists","_getPaulyLists","paulyListResult","paulyListResultData","getUserProfile","_getUserProfile","profileResult","profileData","validateGovernmentMode","_validateGovernmentMode","userResult","teamsResult","AsyncStorage","setItem","_checkIfGovernmentMode","getItem","_setWantGovernment","getWantGovernment","_getWantGovernment","pca","PublicClientApplication","authority","redirectUri","href","AuthDeep","getAuthToken","_getAuthToken","userInitated","government","setWantGovernment","accounts","getAllAccounts","setActiveAccount","checkIfGovernmentMode","addEventCallback","EventType","LOGIN_SUCCESS","handleRedirectPromise","then","authResult","loginRedirect","catch","err","refreshToken","SafeAreaView","AuthenticatedTemplate","AuthenticatedViewMain","UnauthenticatedTemplate","AppMain","MsalProvider","windowDimensions","Dimensions","screenDimensions","AppCore","screen","setDimensions","subscription","addEventListener","oldWidth","newWidth","newHeight","oldCurrentBreakPointMode","xSmall","xLarge","large","medium","small","theme","DefaultTheme","roundness","colors","primary","primaryContainer","onPrimary","onPrimaryContainer","inversePrimary","secondary","secondaryContainer","onSecondary","onSecondaryContainer","tertiary","tertiaryContainer","onTertiary","surface","surfaceVariant","onSurfaceVariant","background","onSurface","onBackground","backdrop","outline","outlineVariant","shadow","scrim","Provider","PaperProvider","SafeAreaProvider","GestureHandlerRootView","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","t","this","ns","def","indexOf","getOwnPropertyNames","definition","o","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}