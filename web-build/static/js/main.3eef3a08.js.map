{"version":3,"file":"static/js/main.3eef3a08.js","mappings":"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","sources":["src/Redux/reducers/monthDataReducer.ts","src/Redux/reducers/resourcesLastCallReducer.ts","src/types.ts","src/Redux/reducers/safeAreaColorsReducer.ts","src/Redux/reducers/microsoftProfileDataReducer.ts","src/Redux/reducers/currentEventReducer.ts","src/Redux/reducers/currentEventLastCalledReducer.ts","src/Redux/reducers/selectedDateReducer.ts","src/Redux/reducers/paulyListReducer.ts","src/Redux/reducers/authenticationTokenReducer.ts","src/Redux/reducers/authenticationRefreshTokenReducer.ts","src/Redux/reducers/dimentionsReducer.ts","src/Redux/reducers/authenticationApiToken.ts","src/Redux/reducers/tasksReducers.ts","src/Redux/reducers/paulyDataReducer.ts","src/Redux/reducers/resourcesReducer.ts","src/Redux/reducers/addEventReducer.ts","src/Redux/reducers/homepageDataReducer.ts","src/Redux/reducers/expandedModeReducer.ts","src/Redux/reducers/isShowingProfileBlockReducer.ts","src/Redux/reducers/isGovernmentModeReducer.ts","src/Redux/reducers/commissionsReducer.ts","src/Redux/reducers/pdfDataReducer.ts","src/Redux/reducers/monthViewReducer.ts","src/Redux/reducers/authenticationCallReducer.ts","src/Redux/reducers/studentSearchReducer.ts","src/Redux/store.ts","src/UI/Icons/Icons.tsx","src/login.tsx","src/Functions/calendar/calendarFunctions.ts","src/PaulyConfig.ts","src/Functions/Ultility/microsoftAssets.ts","src/Functions/homepage/getDressCode.ts","src/Functions/Ultility/batchRequest.ts","src/Functions/Ultility/createUUID.ts","src/Functions/calendar/calendarFunctionsGraph.ts","src/AuthenticatedView/MonthView.tsx","src/Functions/homepage/getCurrentPaulyData.ts","src/UI/ProgressView.tsx","src/UI/ScrollingTextAnimation.tsx","src/AuthenticatedView/HomePage.tsx","src/Functions/commissions/getLocation.ts","src/Functions/commissions/claimCommissionsFunctions.ts","src/AuthenticatedView/Commissions/CommissionClaim.web.tsx","src/Functions/commissions/getCommission.ts","src/UI/WebViewCross.tsx","src/AuthenticatedView/Commissions/CommissionsView.tsx","src/Functions/commissions/getPoints.ts","src/Functions/commissions/getCommissions.ts","src/UI/BackButton.tsx","src/AuthenticatedView/Commissions/Commissions.tsx","src/Functions/homepage/getUsersTasks.ts","src/Functions/homepage/getInsightData.ts","src/UI/CheckMark/AnimatedCheckMarkPath.tsx","src/UI/CheckMark/CustomCheckBox.tsx","src/UI/PDF/PDFView.web.tsx","src/UI/Icons/MimeTypeIcon.tsx","src/Functions/classesFunctions.ts","src/AuthenticatedView/Notifications.tsx","src/Functions/getResources.ts","src/AuthenticatedView/Resources.tsx","src/AuthenticatedView/Profile/Settings.tsx","src/AuthenticatedView/Profile/Government/Government.tsx","src/UI/Pickers/Picker.tsx","src/Functions/groupsData.ts","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphOverview.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphCreateList.tsx","src/Functions/commissions/getSubmissions.ts","src/AuthenticatedView/Profile/Government/GovernmentCommissions/GovernmentCommissions.tsx","src/UI/Pickers/SegmentedPicker.tsx","src/UI/Map/Map.web.tsx","src/UI/Slider.tsx","src/Functions/Ultility/getFileWithShareID.ts","src/Functions/commissions/updateCommission.ts","src/AuthenticatedView/Profile/Government/GovernmentCommissions/GovernmentEditCommission.tsx","src/Functions/sports/getSportsContent.ts","src/Functions/sports/sportsFunctions.ts","src/Functions/sports/getRoster.ts","src/UI/SVGXml/SVGXml.web.tsx","src/AuthenticatedView/Sports.tsx","src/AuthenticatedView/Calendar/DayView.tsx","src/AuthenticatedView/Calendar/Week.tsx","src/AuthenticatedView/Calendar/SelectTimetable.tsx","src/AuthenticatedView/Calendar/SelectSchoolDayData.tsx","src/Functions/updateEvent.ts","src/AuthenticatedView/Calendar/AddEvent.tsx","src/UI/CalendarTypePicker.tsx","src/Functions/calendar/getEvents.ts","src/AuthenticatedView/Calendar/Calendar.tsx","src/Functions/sports/getSubmissions.ts","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentHandleFileSubmissions.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSports.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentCreateNewSport.tsx","src/Functions/sports/getSport.ts","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportsTeams.tsx","src/Functions/microsoftFilePickerFunctions.ts","src/UI/MicrosoftFilePicker.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportTeamEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportsTeamAddPost.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentReviewFileSubmission.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentCalendar.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentSchedule.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetable.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentScheduleEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClasses.tsx","src/Functions/calendar/getSchoolYears.ts","src/UI/Dropdown.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClassesEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentHomePage.tsx","src/UI/NavComponent.tsx","src/AuthenticatedView/404Page.tsx","src/Functions/initializePauly/initializePaulyData.ts","src/Functions/initializePauly/initializePauly.ts","src/AuthenticatedView/Profile/Government/GovernmentAdminCenter/GovernmentAdmin.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentRooms.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovermentRoomsCreate.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditList.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditGroup.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditExtension.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentResources.tsx","src/UI/ListItem.tsx","src/Functions/homepage/getDressCodeData.ts","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCode.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/DressCodeBlock.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetableEdit.tsx","src/AuthenticatedView/Profile/ProfileBlock.tsx","src/Functions/studentFunctions.ts","src/AuthenticatedView/Students.tsx","src/Functions/addImage.ts","src/AuthenticatedView/Profile/Government/GovernmentStudents.tsx","src/AuthenticatedView/AuthenticatedViewMain.tsx","src/Functions/Ultility/getPaulyLists.ts","src/Functions/Ultility/getUserProfile.ts","src/Functions/handleGovernmentLogin.ts","AppMain/AppMain.web.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: monthDataType[] = [];\n\nexport const monthDataSlice = createSlice({\n  name: 'monthData',\n  initialState: initalState,\n  reducers: {\n    setMonthData: (_state, action: PayloadAction<monthDataType[]>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default monthDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const resourcesLastCalled = createSlice({\n  name: 'resourcesLastCalled',\n  initialState: initalState,\n  reducers: {\n    setResourcesLastCalled: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default resourcesLastCalled.reducer;\n","// Andrew Mainella\n// Pauly\n// October 3 2023\n\n// types.ts\n// Stores all of paulys types\n\n// From https://getbootstrap.com/docs/5.0/layout/breakpoints/\nexport enum breakPointMode {\n  xSmall, // <576px  ->0\n  small, // ≥576px  ->1\n  medium, // ≥768px  ->2\n  large, // ≥992px  ->3\n  xLarge, // ≥1200px ->4\n}\n\nexport enum loadingStateEnum {\n  loading,\n  success,\n  failed,\n  notStarted,\n  cannotStart,\n  offline,\n}\n\nexport enum dataContentTypeOptions {\n  video,\n  image,\n  pdf,\n  unknown,\n}\n\nexport enum taskImportanceEnum {\n  low,\n  normal,\n  high,\n}\n\nexport enum taskStatusEnum {\n  notStarted,\n  inProgress,\n  completed,\n  waitingOnOthers,\n  deferred,\n}\nexport enum resourceResponce {\n  found,\n  notFound,\n  failed,\n}\nexport enum commissionTypeEnum {\n  Issued,\n  Location,\n  Image,\n  ImageLocation,\n  QRCode,\n}\nexport enum paulyEventType {\n  personal,\n  regular,\n  schoolDay,\n  schoolYear,\n  studentCouncil,\n}\n\nexport enum recurringType {\n  daily,\n  weekly,\n  monthly,\n  yearly,\n}\n\nexport enum semesters {\n  semesterOne,\n  semesterTwo,\n}\n\nexport enum submissionTypeEnum {\n  all,\n  unApproved,\n  approved,\n  unReviewed,\n}\n\nexport enum locationStateEnum {\n  success,\n  permissionDenied,\n  notCloseEnough,\n  mockedLocation,\n  notStarted,\n}\n\nexport enum calendarMode {\n  month,\n  week,\n  day,\n}\n\nexport enum resourceMode {\n  home,\n  sports,\n  advancement,\n  schoolEvents,\n  annoucments,\n  fitness,\n  files,\n}\n\ndeclare global {\n  type addDataType = {\n    data: object;\n    urlOne: string;\n    urlTwo?: string;\n    id: string;\n  };\n  type assignmentTypeQuiz = {\n    id: string;\n    title: string;\n    description: string;\n    assignmentEnum: number;\n    documentRef: string;\n    assignmentDuringClass: boolean;\n    selectedMonth?: number;\n    selectedDay?: number;\n    dueDate?: Date;\n  };\n  type batchResponseType = {\n    method: 'GET' | 'POST';\n    id: string;\n    status: number;\n    headers: object | undefined;\n    body: object | undefined;\n  };\n  type calendarCourseType = {\n    name: string;\n    semester: number;\n    dayA: number;\n    dayB: number;\n    dayC: number;\n    dayD: number;\n    noClass: noClassType[];\n    year: number;\n    assignments: assignmentTypeQuiz[];\n  };\n  type channelType = {\n    id: string;\n    displayName: string;\n    selected: boolean;\n    loading: boolean;\n    error: boolean;\n    description?: string;\n  };\n  type classType = {\n    name: string;\n    id: string;\n    room: roomType;\n    schoolYearId: string;\n    semester: semesters;\n    periods: number[];\n  };\n  type commissionType = {\n    itemId: string;\n    title: string;\n    timed: boolean;\n    points: number;\n    hidden: boolean;\n    maxNumberOfClaims: number;\n    allowMultipleSubmissions: boolean;\n    submissionsCount: number;\n    claimCount: number;\n    reviewedCount: number;\n    commissionId: string;\n    value: commissionTypeEnum;\n    startDate?: string;\n    endDate?: string;\n    proximity?: number;\n    coordinateLat?: number;\n    coordinateLng?: number;\n    postData?: {\n      teamId: string;\n      channelId: string;\n      postId: string;\n    };\n  };\n  type dressCodeIncentiveType = {\n    name: string;\n    description: string;\n    requirementsDescription: string;\n    id: string;\n  };\n  type dressCodeDataType = {\n    name: string;\n    description: string;\n    id: string;\n  };\n  type dressCodeType = {\n    name: string;\n    id: string;\n    listId: string;\n    dressCodeData: dressCodeDataType[];\n    dressCodeIncentives: dressCodeIncentiveType[];\n  };\n  type dateProperty = {\n    Date: number;\n    ColorName?: string;\n    SchoolDay?: string;\n    Value?: number;\n  };\n  type groupType = {\n    name: string;\n    id: string;\n  };\n  type governmentRosterType = {\n    name: string;\n    id: string;\n    imageShareId?: string;\n    listItemId?: string;\n    position?: string;\n    playerNumber?: string;\n    posts?: string[];\n  };\n  type headerType = {\n    key: string;\n    value: string;\n  };\n  type locationCoords = {\n    latCoordinate: number;\n    lngCoordinate: number;\n  };\n  type monthDataType = {\n    id: string;\n    showing: boolean;\n    dayData: number;\n    events: eventType[];\n  };\n  type microsoftUserType = {\n    id: string;\n    displayName: string;\n  };\n  type resourceDataType = {\n    teamId: string;\n    conversationId: string;\n    id: string; // message id\n    body: string;\n    html: boolean; // if false is text\n    attachments?: resourceType[];\n  };\n  type resourceFollowType = {\n    teamId: string;\n    channelId: string;\n  };\n  type roomType = {\n    name: string;\n    id: string;\n  };\n  type rosterType = {\n    name: string;\n    id: string;\n    imageShareId?: string;\n    position?: string;\n    playerNumber?: string;\n    posts?: string[];\n  };\n  type schoolDayDataCompressedType = {\n    schoolDayId: string;\n    scheduleId: string;\n    dressCodeId: string;\n    semester: semesters;\n    dressCodeIncentiveId: string;\n    schoolYearEventId: string;\n  };\n  type schoolDayDataType = {\n    schoolDay: schoolDayType;\n    schedule: scheduleType;\n    dressCode: dressCodeDataType;\n    semester: semesters;\n    dressCodeIncentive?: dressCodeIncentiveType;\n  };\n  type schoolDayType = {\n    name: string;\n    shorthand: string;\n    id: string;\n    order: number;\n  };\n  type submissionType = {\n    userName: string;\n    submissionTime: string;\n    id: string;\n    itemId: string;\n    approved: boolean;\n    reviewed: boolean;\n    submissionImage?: string;\n  };\n  type studentInformationType = {\n    listId: string;\n    driveId: string;\n    selected: boolean;\n    createdTime: string;\n  };\n  type sportType = {\n    name: string;\n    id: string;\n    svgData: string;\n  };\n  type sportTeamType = {\n    teamName: string;\n    season: number;\n    teamId: string;\n  };\n  type schoolUserType = {\n    name: string;\n    id: string;\n    mail: string;\n    role: string;\n    grade?: '9' | '10' | '11' | '12';\n    student: boolean;\n    imageDownloadUrl: string;\n    imageState: loadingStateEnum;\n    imageDataUrl?: string;\n  };\n  type taskType = {\n    name: string;\n    id: string;\n    importance: taskImportanceEnum;\n    status: taskStatusEnum;\n    excess: boolean;\n  };\n  type paulyEventTypes = 'schoolDay' | 'schoolYear';\n  type eventType = {\n    id: string;\n    name: string;\n    startTime: string;\n    endTime: string; // This is held in iso format\n    eventColor: string; // This is held in iso format\n    microsoftEvent: boolean;\n    allDay: boolean;\n    paulyEventType?: paulyEventTypes;\n    paulyEventData?: string;\n    microsoftReference?: string;\n    schoolDayData?: {\n      schoolDayData: schoolDayType;\n      schedule: scheduleType;\n      dressCode: dressCodeDataType;\n      semester: semesters;\n      dressCodeIncentiveId?: string;\n    };\n  };\n  type noClassType = {\n    day: number;\n    Month: number;\n    Year: number;\n  };\n  type scheduleType = {\n    properName: string;\n    descriptiveName: string;\n    periods: periodType[];\n    id: string;\n    color: string;\n  };\n  type periodType = {\n    startHour: number;\n    startMinute: number;\n    endHour: number;\n    endMinute: number;\n    id: string;\n  };\n  type teamsGroupType = {\n    teamName: string;\n    teamId: string;\n    teamDescription: string;\n  };\n  type timetableStringType = {\n    name: string;\n    id: string;\n  };\n  type timetableType = {\n    name: string;\n    id: string;\n    schedules: scheduleType[];\n    days: schoolDayType[];\n    dressCode: dressCodeType;\n  };\n  type microsoftFileType = {\n    name: string;\n    id: string;\n    lastModified: string;\n    folder: boolean;\n    parentDriveId: string;\n    parentPath: string;\n    itemGraphPath: string;\n    callPath: string;\n    type: string;\n  };\n  type paulyDataType = {\n    message: string;\n    animationSpeed: number;\n    powerpointBlob: string;\n    powerpointShare: string;\n    paulyDataState: loadingStateEnum;\n  };\n  type paulyListType = {\n    siteId: string;\n    studentFilesListId: string;\n    commissionListId: string;\n    commissionSubmissionsListId: string;\n    paulyDataListId: string;\n    scheduleListId: string;\n    sportsListId: string;\n    sportsApprovedSubmissionsListId: string;\n    sportsSubmissionsListId: string;\n    timetablesListId: string;\n    resourceListId: string;\n    dressCodeListId: string;\n    roomListId: string;\n    eventTypeExtensionId: string;\n    eventDataExtensionId: string;\n    classExtensionId: string;\n    resourceExtensionId: string;\n  };\n  type sportPost = {\n    caption: string;\n    fileID: string;\n    fileType: dataContentTypeOptions;\n  };\n  type resourceType = {\n    webUrl: string;\n    id: string;\n    title: string;\n    type: string;\n  };\n  type insightResult = {\n    userState: loadingStateEnum;\n    trendingState: loadingStateEnum;\n    userData: resourceType[];\n    trendingData: resourceType[];\n  };\n  type listColumnType = {\n    columnGroup: string;\n    description: string;\n    displayName: string;\n    enforceUniqueValues: boolean;\n    hidden: boolean;\n    id: string;\n    indexed: boolean;\n    name: string;\n    readOnly: boolean;\n    required: boolean;\n  };\n  type mediaSubmissionType = {\n    Title: string;\n    user: string;\n    submissionId: string;\n    accepted: boolean;\n    reviewed: boolean;\n    selectedSportId: string;\n    selectedTeamId: string;\n    fileId: string;\n    itemID: string;\n  };\n}\n\nexport class Colors {\n  static white = '#FFFFFF';\n\n  static maroon = '#793033';\n\n  static lightGray = '#ededed';\n\n  static darkGray = '#444444';\n\n  static black = '#000000';\n\n  static danger = 'red';\n}\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Colors } from '../../types';\n\nconst initalState: { top: string; bottom: string } = {\n  top: Colors.maroon,\n  bottom: Colors.maroon,\n};\n\nexport const safeAreaColorsSlice = createSlice({\n  name: 'safeAreaColors',\n  initialState: initalState,\n  reducers: {\n    setSafeAreaColors: (\n      _state,\n      action: PayloadAction<{ top: string; bottom: string }>,\n    ) => {\n      return action.payload;\n    },\n    setSafeAreaColorTop: (state, action: PayloadAction<string>) => {\n      return { ...state, top: action.payload };\n    },\n    setSafeAreaColorBottom: (state, action: PayloadAction<string>) => {\n      return { ...state, bottom: action.payload };\n    },\n  },\n});\n\nexport default safeAreaColorsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: { uri: string; displayName: string; id: string } = {\n  uri: '',\n  displayName: '',\n  id: '',\n};\n\nexport const microsoftProfileDataSlice = createSlice({\n  name: 'microsoftProfileData',\n  initialState: initalState,\n  reducers: {\n    setMicrosoftProfileData: (\n      _state,\n      action: PayloadAction<{ uri: string; displayName: string; id: string }>,\n    ) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default microsoftProfileDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalCalendarState: eventType[] = [];\n\nexport const currentEventsSlice = createSlice({\n  name: 'currentEvents',\n  initialState: initalCalendarState,\n  reducers: {\n    setCurrentEvents: (_state, action: PayloadAction<eventType[]>) => {\n      return [...action.payload];\n    },\n    pushEvent: (state, action: PayloadAction<eventType>) => {\n      return [...state, action.payload];\n    },\n    removeCurrentEvent: (state, action: PayloadAction<number>) => {\n      state.slice(action.payload, 1);\n    },\n  },\n});\n\nexport default currentEventsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const currentEventsLastCalled = createSlice({\n  name: 'currentEventsLastCalled',\n  initialState: initalState,\n  reducers: {\n    setCurrentEventsLastCalled: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default currentEventsLastCalled.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = new Date().toISOString();\n\nexport const selectedDateSlice = createSlice({\n  name: 'selectedDate',\n  initialState: initalState,\n  reducers: {\n    setCurrentEventsLastCalled: (_state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default selectedDateSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: paulyListType = {\n  siteId: '',\n  studentFilesListId: '',\n  commissionListId: '',\n  commissionSubmissionsListId: '',\n  paulyDataListId: '',\n  scheduleListId: '',\n  sportsListId: '',\n  sportsApprovedSubmissionsListId: '',\n  sportsSubmissionsListId: '',\n  timetablesListId: '',\n  resourceListId: '',\n  eventTypeExtensionId: '',\n  eventDataExtensionId: '',\n  classExtensionId: '',\n  resourceExtensionId: '',\n  dressCodeListId: '',\n  roomListId: '',\n};\n\nexport const paulyListSlice = createSlice({\n  name: 'paulyList',\n  initialState: initalState,\n  reducers: {\n    setPaulyList: (_state, action: PayloadAction<paulyListType>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default paulyListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationTokenSlice = createSlice({\n  name: 'authenticationToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationToken: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationTokenSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationRefreshTokenSlice = createSlice({\n  name: 'authenticationRefreshToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationRefreshToken: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationRefreshTokenSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\n// xSmall,\t <576px  ->0\n// small,    ≥576px  ->1\n// medium,   ≥768px  ->2\n// large,    ≥992px  ->3\n// xLarge    ≥1200px ->4\n\nconst initalState: {\n  width: number;\n  height: number;\n  currentBreakPoint: number;\n} = { width: 0, height: 0, currentBreakPoint: 0 };\n\nexport const dimentionsSlice = createSlice({\n  name: 'dimentions',\n  initialState: initalState,\n  reducers: {\n    setDimentionsWidth: (state, action: PayloadAction<number>) => {\n      return {\n        width: action.payload,\n        height: state.height,\n        currentBreakPoint: state.currentBreakPoint,\n      };\n    },\n    setDimentionsWidthCurrentBreakPoint: (\n      state,\n      action: PayloadAction<{ width: number; currentBreakPoint: number }>,\n    ) => {\n      return {\n        width: action.payload.width,\n        height: state.height,\n        currentBreakPoint: action.payload.currentBreakPoint,\n      };\n    },\n    setDimentionsHeight: (state, action: PayloadAction<number>) => {\n      return {\n        width: state.width,\n        height: action.payload,\n        currentBreakPoint: state.currentBreakPoint,\n      };\n    },\n  },\n});\n\nexport default dimentionsSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationApiTokenSlice = createSlice({\n  name: 'authenticationApiToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationApiToken: (_state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationApiTokenSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalStateTaskDeltaLink: string = '';\n\nexport const taskDeltaSlice = createSlice({\n  name: 'taskDeltaLink',\n  initialState: initalStateTaskDeltaLink,\n  reducers: {\n    setTaskDeltaLink: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport const tasksDeltaReducer = taskDeltaSlice.reducer;\n\nconst initalTasksState: string[] = [];\n\nexport const tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: initalTasksState,\n  reducers: {\n    setCurrentEvents: (state, action: PayloadAction<string[]>) => {\n      return [...action.payload];\n    },\n    pushEvent: (state, action: PayloadAction<string>) => {\n      return [...state, action.payload];\n    },\n  },\n});\n\nexport const tasksReducer = tasksSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\nconst initalState: paulyDataType = {\n  message: '',\n  animationSpeed: 0,\n  powerpointBlob: '',\n  powerpointShare: '',\n  paulyDataState: loadingStateEnum.loading,\n};\n\nexport const paulyDataSlice = createSlice({\n  name: 'paulyData',\n  initialState: initalState,\n  reducers: {\n    setPaulyData: (_state, action: PayloadAction<paulyDataType>) => {\n      return action.payload;\n    },\n    setPaulyDataState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, paulyDataState: action.payload };\n    },\n  },\n});\n\nexport default paulyDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum, resourceMode } from '../../types';\n\ntype resourceStoreState = {\n  resources: resourceDataType[];\n  loadingState: loadingStateEnum;\n  searchValue: string;\n  resourceFollow: resourceFollowType[];\n  selectedResourceMode: resourceMode;\n};\n\nconst initalResourcesState: resourceStoreState = {\n  resources: [],\n  loadingState: loadingStateEnum.loading,\n  searchValue: '',\n  resourceFollow: [],\n  selectedResourceMode: resourceMode.home,\n};\n\nexport const resourcesSlice = createSlice({\n  name: 'resources',\n  initialState: initalResourcesState,\n  reducers: {\n    setResourceData: (state, action: PayloadAction<resourceDataType[]>) => {\n      return { ...state, resources: action.payload };\n    },\n    pushResource: (state, action: PayloadAction<resourceDataType>) => {\n      state.resources.push(action.payload);\n    },\n    setResources: (\n      state,\n      action: PayloadAction<{\n        resources: resourceDataType[];\n        loadingState: loadingStateEnum;\n      }>,\n    ) => {\n      return {\n        ...state,\n        loadingState: action.payload.loadingState,\n        resources: action.payload.resources,\n      };\n    },\n    setResourcesState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, loadingState: action.payload };\n    },\n    setSearchValue: (state, action: PayloadAction<string>) => {\n      return { ...state, searchValue: action.payload };\n    },\n    setResourceFollow: (state, action: PayloadAction<resourceFollowType[]>) => {\n      return { ...state, resourceFollow: action.payload };\n    },\n    setSelectedResourceMode: (state, action: PayloadAction<resourceMode>) => {\n      return { ...state, selectedResourceMode: action.payload };\n    },\n  },\n});\n\nexport default resourcesSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport {\n  calendarMode,\n  paulyEventType,\n  recurringType,\n  semesters,\n  loadingStateEnum,\n} from '../../types';\n\ntype addEventStatesType = {\n  eventName: string;\n  createEventState: loadingStateEnum;\n  isPickingStartDate: boolean;\n  isPickingEndDate: boolean;\n  allDay: boolean;\n  isGovernmentEvent: boolean;\n  selectedTimetable: timetableStringType;\n  selectedSchoolDayData: schoolDayDataType | undefined;\n  selectedSchoolYear: eventType | undefined;\n  selectedEventType: paulyEventType;\n  recurringEvent: boolean;\n  selectedRecurringType: recurringType;\n  startDate: string;\n  endDate: string;\n  isShowingAddDate: boolean;\n  isEditing: boolean;\n  selectedCalendarMode: calendarMode;\n  selectedEvent: eventType | undefined;\n};\n\nconst initalState: addEventStatesType = {\n  eventName: '',\n  createEventState: loadingStateEnum.notStarted,\n  isPickingStartDate: false,\n  isPickingEndDate: false,\n  allDay: false,\n  isGovernmentEvent: false,\n  selectedTimetable: {\n    name: '',\n    id: '',\n  },\n  selectedSchoolDayData: undefined,\n  selectedSchoolYear: undefined,\n  selectedEventType: paulyEventType.personal,\n  recurringEvent: false,\n  selectedRecurringType: recurringType.daily,\n  startDate: new Date().toISOString(),\n  endDate: new Date().toISOString(),\n  isShowingAddDate: false,\n  isEditing: false,\n  selectedCalendarMode: calendarMode.month,\n  selectedEvent: undefined,\n};\n\nexport const addEventSlice = createSlice({\n  name: 'addEvent',\n  initialState: initalState,\n  reducers: {\n    setEventName: (state, action: PayloadAction<string>) => {\n      return { ...state, eventName: action.payload };\n    },\n    setCreateEventState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, createEventState: action.payload };\n    },\n    setIsPickingStartDate: (state, action: PayloadAction<boolean>) => {\n      state.isPickingStartDate = action.payload;\n    },\n    setIsPickingEndDate: (state, action: PayloadAction<boolean>) => {\n      state.isPickingEndDate = action.payload;\n    },\n    setAllDay: (state, action: PayloadAction<boolean>) => {\n      return { ...state, allDay: action.payload };\n    },\n    setIsGovernmentEvent: (state, action: PayloadAction<boolean>) => {\n      return { ...state, isGovernmentEvent: action.payload };\n    },\n    setSelectedTimetable: (\n      state,\n      action: PayloadAction<timetableStringType>,\n    ) => {\n      return { ...state, selectedTimetable: action.payload };\n    },\n    setSelectedSchoolDayData: (\n      state,\n      action: PayloadAction<schoolDayDataType | undefined>,\n    ) => {\n      return { ...state, selectedSchoolDayData: action.payload };\n    },\n    setSelectedSchoolYear: (state, action: PayloadAction<eventType>) => {\n      return { ...state, selectedSchoolYear: action.payload };\n    },\n    setSelectedEventType: (state, action: PayloadAction<number>) => {\n      return { ...state, selectedEventType: action.payload };\n    },\n    setRecurringEvent: (state, action: PayloadAction<boolean>) => {\n      return { ...state, recurringEvent: action.payload };\n    },\n    setSelectedRecurringType: (state, action: PayloadAction<recurringType>) => {\n      return { ...state, selectedRecurringType: action.payload };\n    },\n    setStartDate: (state, action: PayloadAction<string | Date>) => {\n      if (typeof action.payload === 'string') {\n        return { ...state, startDate: action.payload };\n      }\n      return { ...state, startDate: action.payload.toISOString() };\n    },\n    setEndDate: (state, action: PayloadAction<string | Date>) => {\n      if (typeof action.payload === 'string') {\n        return { ...state, endDate: action.payload };\n      }\n      return { ...state, endDate: action.payload.toISOString() };\n    },\n    setIsShowingAddDate: (state, action: PayloadAction<boolean>) => {\n      state.isShowingAddDate = action.payload;\n    },\n    setIsEditing: (state, action: PayloadAction<boolean>) => {\n      state.isEditing = action.payload;\n    },\n    setSelectedCalendarMode: (state, action: PayloadAction<calendarMode>) => {\n      state.selectedCalendarMode = action.payload;\n    },\n    setSelectedEvent: (state, action: PayloadAction<eventType | undefined>) => {\n      state.selectedEvent = action.payload;\n    },\n  },\n});\n\nexport default addEventSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport {\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../../types';\n\ntype homepageStatesType = {\n  taskState: loadingStateEnum;\n  userState: loadingStateEnum;\n  trendingState: loadingStateEnum;\n  userData: resourceType[];\n  trendingData: resourceType[];\n  userTasks: taskType[];\n  schoolDayData: undefined | schoolDayDataType;\n  startTime: string;\n  isShowingCompleteTasks: boolean;\n};\n\nconst initalState: homepageStatesType = {\n  taskState: loadingStateEnum.loading,\n  userState: loadingStateEnum.loading,\n  trendingState: loadingStateEnum.loading,\n  userData: [],\n  trendingData: [],\n  userTasks: [\n    {\n      name: '',\n      importance: taskImportanceEnum.normal,\n      id: '',\n      status: taskStatusEnum.notStarted,\n      excess: true,\n    },\n  ],\n  schoolDayData: undefined,\n  startTime: '',\n  isShowingCompleteTasks: false,\n};\n\nexport const homepageDataSlice = createSlice({\n  name: 'homepage',\n  initialState: initalState,\n  reducers: {\n    setTaskState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, taskState: action.payload };\n    },\n    setUserState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, userState: action.payload };\n    },\n    setTrendingState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, trendingState: action.payload };\n    },\n    setUserData: (state, action: PayloadAction<resourceType[]>) => {\n      return { ...state, userData: action.payload };\n    },\n    setTrendingData: (state, action: PayloadAction<resourceType[]>) => {\n      return { ...state, trendingData: action.payload };\n    },\n    setUserTasks: (state, action: PayloadAction<taskType[]>) => {\n      return { ...state, userTasks: action.payload };\n    },\n    updateUserTask: (\n      state,\n      action: PayloadAction<{ task: taskType; index: number }>,\n    ) => {\n      if (action.payload.index < state.userTasks.length) {\n        state.userTasks[action.payload.index] = action.payload.task;\n      } else {\n        return state;\n      }\n    },\n    unshiftUserTask: (state, action: PayloadAction<taskType>) => {\n      state.userTasks.unshift(action.payload);\n    },\n    popUserTask: (state, action: PayloadAction<number>) => {\n      state.userTasks.splice(action.payload, 1);\n    },\n    setSchoolDayData: (state, action: PayloadAction<schoolDayDataType>) => {\n      return { ...state, schoolDayData: action.payload };\n    },\n    setStartTime: (state, action: PayloadAction<string>) => {\n      return { ...state, startTime: action.payload };\n    },\n    setIsShowingCompletedTasks: (state, action: PayloadAction<boolean>) => {\n      return { ...state, isShowingCompleteTasks: action.payload };\n    },\n  },\n});\n\nexport default homepageDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const expandedModeSlice = createSlice({\n  name: 'expandedMode',\n  initialState: initalState,\n  reducers: {\n    setExpandedMode: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default expandedModeSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const isShowingProfileBlockSlice = createSlice({\n  name: 'isShowingProfileBlock',\n  initialState: initalState,\n  reducers: {\n    setIsShowingProfileBlock: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default isShowingProfileBlockSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const isGovernmentModeSlice = createSlice({\n  name: 'isGovernmentMode',\n  initialState: initalState,\n  reducers: {\n    setIsGovernmentMode: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default isGovernmentModeSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\ntype commissionsStateType = {\n  commissionsState: loadingStateEnum;\n  points: number;\n  currentCommissions: commissionType[];\n  selectedCommission: string;\n  commissionNextLink: string | undefined;\n};\n\nconst initalState: commissionsStateType = {\n  commissionsState: loadingStateEnum.loading,\n  points: 0,\n  currentCommissions: [],\n  selectedCommission: '',\n  commissionNextLink: undefined,\n};\n\nexport const commissionsSlice = createSlice({\n  name: 'commissions',\n  initialState: initalState,\n  reducers: {\n    setCommissionsState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, commissionsState: action.payload };\n    },\n    setPoints: (state, action: PayloadAction<number>) => {\n      return { ...state, points: action.payload };\n    },\n    setCurrentCommissions: (state, action: PayloadAction<commissionType[]>) => {\n      return { ...state, currentCommissions: action.payload };\n    },\n    setSelectedCommission: (state, action: PayloadAction<string>) => {\n      return { ...state, selectedCommission: action.payload };\n    },\n    setCommissionNextLink: (\n      state,\n      action: PayloadAction<string | undefined>,\n    ) => {\n      return { ...state, commissionNextLink: action.payload };\n    },\n  },\n});\n\nexport default commissionsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\n// page number is an index meaning first page is 0\nconst initalState: { inject: string; images: string[]; pageNumber: number } = {\n  inject: '',\n  images: [],\n  pageNumber: 0,\n};\n\nexport const pdfDataSlice = createSlice({\n  name: 'pdfData',\n  initialState: initalState,\n  reducers: {\n    setInject: (state, action: PayloadAction<string>) => {\n      state.inject = action.payload;\n      return { ...state, commissionsState: action.payload };\n    },\n    addImage: (state, action: PayloadAction<string>) => {\n      state.images.push(action.payload);\n    },\n    setImages: (state, action: PayloadAction<string[]>) => {\n      return { ...state, images: action.payload };\n    },\n    setPageNumber: (state, action: PayloadAction<number>) => {\n      return { ...state, pageNumber: action.payload };\n    },\n    increasePageNumber: state => {\n      state.pageNumber += 1;\n    },\n    decreasePageNumber: state => {\n      state.pageNumber -= 1;\n    },\n  },\n});\n\nexport default pdfDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: eventType[] = [];\n\nexport const monthViewSlice = createSlice({\n  name: 'monthView',\n  initialState: initalState,\n  reducers: {\n    setMonthViewData: (_state, action: PayloadAction<eventType[]>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default monthViewSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: number = 0;\n\nexport const authenticationCallSlice = createSlice({\n  name: 'authenticationCall',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationCallIncrement: state => {\n      return state + 1;\n    },\n  },\n});\n\nexport default authenticationCallSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\nconst initalState: {\n  searchText: string;\n  users: schoolUserType[];\n  usersState: loadingStateEnum;\n  nextLink: string | undefined;\n} = {\n  searchText: '',\n  users: [],\n  usersState: loadingStateEnum.loading,\n  nextLink: undefined,\n};\n\nexport const studentSearchSlice = createSlice({\n  name: 'studentSearch',\n  initialState: initalState,\n  reducers: {\n    setStudentSearch: (state, action: PayloadAction<string>) => {\n      return { ...state, searchText: action.payload };\n    },\n    setStudentUsers: (state, action: PayloadAction<schoolUserType[]>) => {\n      return { ...state, users: action.payload };\n    },\n    setUsersState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, usersState: action.payload };\n    },\n    setNextLink: (state, action: PayloadAction<string | undefined>) => {\n      return { ...state, nextLink: action.payload };\n    },\n    setStudentUserByIndex: (\n      state,\n      action: PayloadAction<{ index: number; user: schoolUserType }>,\n    ) => {\n      if (action.payload.index < state.users.length) {\n        state.users[action.payload.index] = action.payload.user;\n      }\n    },\n    setStudentUserById: (\n      state,\n      action: PayloadAction<{ id: string; user: schoolUserType }>,\n    ) => {\n      const findIndex = state.users.findIndex(e => {\n        return e.id === action.payload.id;\n      });\n      if (findIndex !== -1) {\n        state.users[findIndex] = action.payload.user;\n      }\n    },\n  },\n});\n\nexport default studentSearchSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport monthDataReducer from './reducers/monthDataReducer';\nimport resourcesLastCallReducer, {\n  resourcesLastCalled,\n} from './reducers/resourcesLastCallReducer';\nimport safeAreaColorsReducer from './reducers/safeAreaColorsReducer';\nimport microsoftProfileDataReducer from './reducers/microsoftProfileDataReducer';\nimport currentEventsReducer from './reducers/currentEventReducer';\nimport currentEventsLastCalledReducer from './reducers/currentEventLastCalledReducer';\nimport selectedDateReducer from './reducers/selectedDateReducer';\nimport paulyListReducer from './reducers/paulyListReducer';\nimport authenticationTokenReducer from './reducers/authenticationTokenReducer';\nimport authenticationRefreshTokenReducer from './reducers/authenticationRefreshTokenReducer';\nimport dimentionsReducer from './reducers/dimentionsReducer';\nimport authenticationApiTokenReducer from './reducers/authenticationApiToken';\nimport { tasksDeltaReducer, tasksReducer } from './reducers/tasksReducers';\nimport paulyDataReducer from './reducers/paulyDataReducer';\nimport resourcesReducer from './reducers/resourcesReducer';\nimport addEventReducer from './reducers/addEventReducer';\nimport homepageDataReducer from './reducers/homepageDataReducer';\nimport expandedModeReducer from './reducers/expandedModeReducer';\nimport isShowingProfileBlockReducer from './reducers/isShowingProfileBlockReducer';\nimport isGovernmentModeReducer from './reducers/isGovernmentModeReducer';\nimport commissionsReducer from './reducers/commissionsReducer';\nimport pdfDataReducer from './reducers/pdfDataReducer';\nimport monthViewReducer from './reducers/monthViewReducer';\nimport authenticationCallReducer from './reducers/authenticationCallReducer';\nimport studentSearchReducer from './reducers/studentSearchReducer';\n\nconst store = configureStore({\n  reducer: {\n    addEvent: addEventReducer,\n    authenticationToken: authenticationTokenReducer,\n    authenticationApiToken: authenticationApiTokenReducer,\n    authenticationRefreshToken: authenticationRefreshTokenReducer,\n    authenticationCall: authenticationCallReducer,\n    commissions: commissionsReducer,\n    currentEvents: currentEventsReducer,\n    currentEventsLastCalled: currentEventsLastCalledReducer,\n    dimentions: dimentionsReducer,\n    expandedMode: expandedModeReducer,\n    homepageData: homepageDataReducer,\n    isGovernmentMode: isGovernmentModeReducer,\n    isShowingProfileBlock: isShowingProfileBlockReducer,\n    microsoftProfileData: microsoftProfileDataReducer,\n    monthData: monthDataReducer,\n    monthView: monthViewReducer,\n    paulyData: paulyDataReducer,\n    paulyList: paulyListReducer,\n    pdfData: pdfDataReducer,\n    resources: resourcesReducer,\n    resourcesLastCalled: resourcesLastCallReducer,\n    safeAreaColors: safeAreaColorsReducer,\n    tasks: tasksReducer,\n    tasksDeltaLink: tasksDeltaReducer,\n    selectedDate: selectedDateReducer,\n    studentSearch: studentSearchReducer,\n  },\n});\n\nexport default store;\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { View, StyleProp, ViewStyle } from 'react-native';\nimport React from 'react';\nimport Svg, {\n  Circle,\n  ClipPath,\n  Defs,\n  G,\n  LinearGradient,\n  Path,\n  Polygon,\n  Rect,\n  Shape,\n  Stop,\n  SvgProps,\n} from 'react-native-svg';\nimport { Colors } from '../../types';\n\ninterface iconProps {\n  width: number;\n  height: number;\n  style?: StyleProp<ViewStyle> | undefined;\n  props?: Shape<SvgProps> | undefined;\n}\n\n// Icons\n// CalendarIcon\n// MedalIcon\n// BookIcon\n// GovernmentIcon\n// HomeIcon\n// UpIcon\n// DownIcon\n// AddIcon\n// CloseIcon\n// ChevronLeft\n// ChevronRight\n// FolderIcon\n// DocumentIcon\n// CopyIcon\n// PersonIcon\n// GearIcon\n// GraduationHatIcon\n// WarningIcon\n// SearchIcon\n\nexport function CalendarIcon({ width, height, style }: iconProps) {\n  return (\n    <View>\n      <Svg\n        width={width}\n        height={height}\n        style={style}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n      >\n        <Path\n          d=\"M7.75 2.5C7.75 2.08579 7.41421 1.75 7 1.75C6.58579 1.75 6.25 2.08579 6.25 2.5V4.07926C4.81067 4.19451 3.86577 4.47737 3.17157 5.17157C2.47737 5.86577 2.19451 6.81067 2.07926 8.25H21.9207C21.8055 6.81067 21.5226 5.86577 20.8284 5.17157C20.1342 4.47737 19.1893 4.19451 17.75 4.07926V2.5C17.75 2.08579 17.4142 1.75 17 1.75C16.5858 1.75 16.25 2.08579 16.25 2.5V4.0129C15.5847 4 14.839 4 14 4H10C9.16097 4 8.41527 4 7.75 4.0129V2.5Z\"\n          fill=\"#000000\"\n        />\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 12C2 11.161 2 10.4153 2.0129 9.75H21.9871C22 10.4153 22 11.161 22 12V14C22 17.7712 22 19.6569 20.8284 20.8284C19.6569 22 17.7712 22 14 22H10C6.22876 22 4.34315 22 3.17157 20.8284C2 19.6569 2 17.7712 2 14V12ZM17 14C17.5523 14 18 13.5523 18 13C18 12.4477 17.5523 12 17 12C16.4477 12 16 12.4477 16 13C16 13.5523 16.4477 14 17 14ZM17 18C17.5523 18 18 17.5523 18 17C18 16.4477 17.5523 16 17 16C16.4477 16 16 16.4477 16 17C16 17.5523 16.4477 18 17 18ZM13 13C13 13.5523 12.5523 14 12 14C11.4477 14 11 13.5523 11 13C11 12.4477 11.4477 12 12 12C12.5523 12 13 12.4477 13 13ZM13 17C13 17.5523 12.5523 18 12 18C11.4477 18 11 17.5523 11 17C11 16.4477 11.4477 16 12 16C12.5523 16 13 16.4477 13 17ZM7 14C7.55228 14 8 13.5523 8 13C8 12.4477 7.55228 12 7 12C6.44772 12 6 12.4477 6 13C6 13.5523 6.44772 14 7 14ZM7 18C7.55228 18 8 17.5523 8 17C8 16.4477 7.55228 16 7 16C6.44772 16 6 16.4477 6 17C6 17.5523 6.44772 18 7 18Z\"\n          fill=\"#000000\"\n        />\n      </Svg>\n    </View>\n  );\n}\n\nexport function MedalIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 297.334 297.334\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <G>\n          <Polygon points=\"172.667,64 206.687,0 90.623,0 124.649,64 \" />\n          <Path d=\"M227.904,8.293c-2.553-4.837-6.726-4.834-9.272,0.006l-55.839,106.095c20.009,2.892,38.11,11.76,52.427,24.735 l36.208-68.682c2.551-4.838,2.549-12.754-0.004-17.591L227.904,8.293z\" />\n          <Path d=\"M134.518,114.35L78.7,8.299c-2.547-4.84-6.72-4.843-9.272-0.006L45.909,52.856c-2.552,4.837-2.554,12.753-0.004,17.591 l36.102,68.48C96.362,125.996,114.491,117.181,134.518,114.35z\" />\n          <Path d=\"M148.502,128.279c-46.685,0-84.529,37.844-84.529,84.528c0,46.682,37.845,84.526,84.529,84.526 c46.682,0,84.526-37.845,84.526-84.526C233.028,166.123,195.184,128.279,148.502,128.279z M148.502,273.125 c-33.262,0-60.32-27.059-60.32-60.317c0-33.261,27.059-60.319,60.32-60.319c33.259,0,60.316,27.059,60.316,60.319 C208.819,246.066,181.761,273.125,148.502,273.125z\" />\n          <Path d=\"M148.502,167.404c-25.038,0-45.404,20.367-45.404,45.403c0,25.033,20.366,45.4,45.404,45.4 c25.033,0,45.399-20.367,45.399-45.4C193.902,187.771,173.535,167.404,148.502,167.404z\" />\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function BookIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg width={width} height={height} style={style} viewBox=\"0 0 512 512\">\n      <Path d=\"m202.24 74c-36.13-17.25-86.63-25.7-154.24-26a31.36 31.36 0 0 0 -17.92 5.33 32 32 0 0 0 -14.08 26.57v286.1c0 19.34 13.76 33.93 32 33.93 71.07 0 142.36 6.64 185.06 47a4.11 4.11 0 0 0 6.94-3v-337.11a15.89 15.89 0 0 0 -5.46-12 143 143 0 0 0 -32.3-20.82z\" />\n      <Path d=\"m481.92 53.3a31.33 31.33 0 0 0 -17.92-5.3c-67.61.3-118.11 8.71-154.24 26a143.31 143.31 0 0 0 -32.31 20.78 15.93 15.93 0 0 0 -5.45 12v337.13a3.93 3.93 0 0 0 6.68 2.81c25.67-25.5 70.72-46.82 185.36-46.81a32 32 0 0 0 32-32v-288a32 32 0 0 0 -14.12-26.61z\" />\n    </Svg>\n  );\n}\n\nexport function GovernmentIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"black\"\n    >\n      <Path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.5528 1.10557C11.8343 0.964809 12.1657 0.964809 12.4472 1.10557L22.4472 6.10557C22.862 6.31298 23.0798 6.77838 22.9732 7.22975C22.8667 7.68112 22.4638 8 22 8H1.99998C1.5362 8 1.13328 7.68112 1.02673 7.22975C0.920172 6.77838 1.13795 6.31298 1.55276 6.10557L11.5528 1.10557ZM6.23604 6H17.7639L12 3.11803L6.23604 6ZM5.99998 9C6.55226 9 6.99998 9.44772 6.99998 10V15C6.99998 15.5523 6.55226 16 5.99998 16C5.44769 16 4.99998 15.5523 4.99998 15V10C4.99998 9.44772 5.44769 9 5.99998 9ZM9.99998 9C10.5523 9 11 9.44772 11 10V15C11 15.5523 10.5523 16 9.99998 16C9.44769 16 8.99998 15.5523 8.99998 15V10C8.99998 9.44772 9.44769 9 9.99998 9ZM14 9C14.5523 9 15 9.44772 15 10V15C15 15.5523 14.5523 16 14 16C13.4477 16 13 15.5523 13 15V10C13 9.44772 13.4477 9 14 9ZM18 9C18.5523 9 19 9.44772 19 10V15C19 15.5523 18.5523 16 18 16C17.4477 16 17 15.5523 17 15V10C17 9.44772 17.4477 9 18 9ZM2.99998 18C2.99998 17.4477 3.44769 17 3.99998 17H20C20.5523 17 21 17.4477 21 18C21 18.5523 20.5523 19 20 19H3.99998C3.44769 19 2.99998 18.5523 2.99998 18ZM0.999976 21C0.999976 20.4477 1.44769 20 1.99998 20H22C22.5523 20 23 20.4477 23 21C23 21.5523 22.5523 22 22 22H1.99998C1.44769 22 0.999976 21.5523 0.999976 21Z\"\n        fill=\"#000000\"\n      />\n    </Svg>\n  );\n}\n\nexport function HomeIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 460.298 460.297\"\n    >\n      <Path\n        d=\"M230.149,120.939L65.986,256.274c0,0.191-0.048,0.472-0.144,0.855c-0.094,0.38-0.144,0.656-0.144,0.852v137.041\n      c0,4.948,1.809,9.236,5.426,12.847c3.616,3.613,7.898,5.431,12.847,5.431h109.63V303.664h73.097v109.64h109.629\n      c4.948,0,9.236-1.814,12.847-5.435c3.617-3.607,5.432-7.898,5.432-12.847V257.981c0-0.76-0.104-1.334-0.288-1.707L230.149,120.939\n      z\"\n      />\n      <Path\n        d=\"M457.122,225.438L394.6,173.476V56.989c0-2.663-0.856-4.853-2.574-6.567c-1.704-1.712-3.894-2.568-6.563-2.568h-54.816\n      c-2.666,0-4.855,0.856-6.57,2.568c-1.711,1.714-2.566,3.905-2.566,6.567v55.673l-69.662-58.245\n      c-6.084-4.949-13.318-7.423-21.694-7.423c-8.375,0-15.608,2.474-21.698,7.423L3.172,225.438c-1.903,1.52-2.946,3.566-3.14,6.136\n      c-0.193,2.568,0.472,4.811,1.997,6.713l17.701,21.128c1.525,1.712,3.521,2.759,5.996,3.142c2.285,0.192,4.57-0.476,6.855-1.998\n      L230.149,95.817l197.57,164.741c1.526,1.328,3.521,1.991,5.996,1.991h0.858c2.471-0.376,4.463-1.43,5.996-3.138l17.703-21.125\n      c1.522-1.906,2.189-4.145,1.991-6.716C460.068,229.007,459.021,226.961,457.122,225.438z\"\n      />\n    </Svg>\n  );\n}\n\nexport function UpIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 330 330\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          id=\"XMLID_224_\"\n          d=\"M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394 l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393 C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function DownIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 330 330\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          id=\"XMLID_225_\"\n          d=\"M325.607,79.393c-5.857-5.857-15.355-5.858-21.213,0.001l-139.39,139.393L25.607,79.393 c-5.857-5.857-15.355-5.858-21.213,0.001c-5.858,5.858-5.858,15.355,0,21.213l150.004,150c2.813,2.813,6.628,4.393,10.606,4.393 s7.794-1.581,10.606-4.394l149.996-150C331.465,94.749,331.465,85.251,325.607,79.393z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function AddIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 309.059 309.059\"\n      fill=\"#000000\"\n    >\n      <G strokeWidth=\"0\" />\n      <G strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <G>\n        <G>\n          <G>\n            <Path\n              fill=\"#010002\"\n              d=\"M280.71,126.181h-97.822V28.338C182.889,12.711,170.172,0,154.529,0S126.17,12.711,126.17,28.338 v97.843H28.359C12.722,126.181,0,138.903,0,154.529c0,15.621,12.717,28.338,28.359,28.338h97.811v97.843 c0,15.632,12.711,28.348,28.359,28.348c15.643,0,28.359-12.717,28.359-28.348v-97.843h97.822 c15.632,0,28.348-12.717,28.348-28.338C309.059,138.903,296.342,126.181,280.71,126.181z\"\n            />\n          </G>\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function CloseIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G strokeWidth=\"0\" />\n      <G strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <G>\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.29289 5.29289C5.68342 4.90237 6.31658 4.90237 6.70711 5.29289L12 10.5858L17.2929 5.29289C17.6834 4.90237 18.3166 4.90237 18.7071 5.29289C19.0976 5.68342 19.0976 6.31658 18.7071 6.70711L13.4142 12L18.7071 17.2929C19.0976 17.6834 19.0976 18.3166 18.7071 18.7071C18.3166 19.0976 17.6834 19.0976 17.2929 18.7071L12 13.4142L6.70711 18.7071C6.31658 19.0976 5.68342 19.0976 5.29289 18.7071C4.90237 18.3166 4.90237 17.6834 5.29289 17.2929L10.5858 12L5.29289 6.70711C4.90237 6.31658 4.90237 5.68342 5.29289 5.29289Z\"\n          fill=\"#0F1729\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ChevronLeft({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 16 16\"\n      {...props}\n    >\n      <Path\n        fillRule=\"evenodd\"\n        d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\n      />\n    </Svg>\n  );\n}\n\nexport function ChevronRight({ width, height, style }: iconProps) {\n  return (\n    <Svg width={width} height={height} style={style} viewBox=\"0 0 16 16\">\n      <Path\n        fillRule=\"evenodd\"\n        d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"\n      />\n    </Svg>\n  );\n}\n\nexport function FolderIcon({ width, height, style }: iconProps) {\n  return (\n    <View>\n      <Svg\n        width={width}\n        height={height}\n        style={style}\n        stroke=\"currentColor\"\n        fill=\"currentColor\"\n        strokeWidth=\"0\"\n        viewBox=\"0 0 48 48\"\n      >\n        <Path\n          fill=\"#FFA000\"\n          d=\"M40,12H22l-4-4H8c-2.2,0-4,1.8-4,4v8h40v-4C44,13.8,42.2,12,40,12z\"\n        />\n        <Path\n          fill=\"#FFCA28\"\n          d=\"M40,12H8c-2.2,0-4,1.8-4,4v20c0,2.2,1.8,4,4,4h32c2.2,0,4-1.8,4-4V16C44,13.8,42.2,12,40,12z\"\n        />\n      </Svg>\n    </View>\n  );\n}\n\nexport function DocumentIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      viewBox=\"0 0 48 48\"\n    >\n      <Polygon fill=\"#90CAF9\" points=\"40,45 8,45 8,3 30,3 40,13\" />\n      <Polygon fill=\"#E1F5FE\" points=\"38.5,14 29,14 29,4.5\" />\n      <G fill=\"#1976D2\">\n        <Rect x=\"16\" y=\"21\" width=\"17\" height=\"2\" />\n        <Rect x=\"16\" y=\"25\" width=\"13\" height=\"2\" />\n        <Rect x=\"16\" y=\"29\" width=\"17\" height=\"2\" />\n        <Rect x=\"16\" y=\"33\" width=\"13\" height=\"2\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function CopyIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 32 32\"\n      id=\"Layer_1\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path d=\"M27.2,8.22H23.78V5.42A3.42,3.42,0,0,0,20.36,2H5.42A3.42,3.42,0,0,0,2,5.42V20.36a3.43,3.43,0,0,0,3.42,3.42h2.8V27.2A2.81,2.81,0,0,0,11,30H27.2A2.81,2.81,0,0,0,30,27.2V11A2.81,2.81,0,0,0,27.2,8.22ZM5.42,21.91a1.55,1.55,0,0,1-1.55-1.55V5.42A1.54,1.54,0,0,1,5.42,3.87H20.36a1.55,1.55,0,0,1,1.55,1.55v2.8H11A2.81,2.81,0,0,0,8.22,11V21.91ZM28.13,27.2a.93.93,0,0,1-.93.93H11a.93.93,0,0,1-.93-.93V11a.93.93,0,0,1,.93-.93H27.2a.93.93,0,0,1,.93.93Z\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PersonIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 512 512\"\n    >\n      <Path d=\"M258.9,48C141.92,46.42,46.42,141.92,48,258.9,49.56,371.09,140.91,462.44,253.1,464c117,1.6,212.48-93.9,210.88-210.88C462.44,140.91,371.09,49.56,258.9,48ZM385.32,375.25a4,4,0,0,1-6.14-.32,124.27,124.27,0,0,0-32.35-29.59C321.37,329,289.11,320,256,320s-65.37,9-90.83,25.34a124.24,124.24,0,0,0-32.35,29.58,4,4,0,0,1-6.14.32A175.32,175.32,0,0,1,80,259C78.37,161.69,158.22,80.24,255.57,80S432,158.81,432,256A175.32,175.32,0,0,1,385.32,375.25Z\" />\n      <Path d=\"M256,144c-19.72,0-37.55,7.39-50.22,20.82s-19,32-17.57,51.93C191.11,256,221.52,288,256,288s64.83-32,67.79-71.24c1.48-19.74-4.8-38.14-17.68-51.82C293.39,151.44,275.59,144,256,144Z\" />\n    </Svg>\n  );\n}\n\nexport function GearIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Path\n        clipRule=\"evenodd\"\n        d=\"M17.2994 10.4527L19.2267 10.7677C19.3846 10.7935 19.5003 10.9298 19.5 11.0896V12.883C19.5 13.0412 19.3865 13.1768 19.2303 13.2042L17.3004 13.543C17.1885 13.9298 17.0349 14.3022 16.8415 14.6543L17.9823 16.2382C18.0759 16.3679 18.0612 16.5463 17.9483 16.6595L16.6804 17.9283C16.5682 18.0401 16.3921 18.0561 16.2623 17.9645L14.6627 16.8424C14.3099 17.0387 13.9352 17.1952 13.5442 17.3103L13.2034 19.231C13.176 19.3865 13.0406 19.5 12.8825 19.5H11.0888C10.9294 19.5 10.7934 19.3849 10.7676 19.228L10.4493 17.3168C10.059 17.204 9.6823 17.0485 9.32585 16.8525L7.73767 17.9648C7.60821 18.0558 7.43178 18.0401 7.31992 17.9283L6.05198 16.6595C5.93947 16.5463 5.9248 16.3686 6.01741 16.2391L7.13958 14.6697C6.94163 14.3116 6.78444 13.9337 6.67062 13.5414L4.76905 13.2042C4.61349 13.1765 4.5 13.0412 4.5 12.883V11.0896C4.5 10.9304 4.61544 10.7941 4.77263 10.768L6.67421 10.4514C6.78868 10.0582 6.94586 9.68022 7.14316 9.32315L6.0347 7.73739C5.94371 7.60793 5.95937 7.43185 6.07122 7.32L7.33883 6.0525C7.452 5.94 7.62908 5.925 7.7592 6.01793L9.33433 7.14293C9.68817 6.94924 10.0639 6.795 10.4552 6.6825L10.767 4.77359C10.7927 4.61576 10.929 4.5 11.0888 4.5H12.8825C13.041 4.5 13.1763 4.61413 13.2037 4.77L13.5399 6.68935C13.929 6.8025 14.304 6.95837 14.6591 7.15467L16.2385 6.01957C16.3683 5.92598 16.5464 5.94065 16.6595 6.05348L17.9278 7.32098C18.0397 7.43315 18.0553 7.60957 17.9643 7.73902L16.8392 9.34239C17.0323 9.69424 17.1865 10.066 17.2994 10.4527ZM9.71725 12C9.71725 13.2607 10.7393 14.2826 12.0001 14.2826C13.2608 14.2826 14.2829 13.2607 14.2829 12C14.2829 10.7394 13.2608 9.71742 12.0001 9.71742C10.7393 9.71742 9.71725 10.7394 9.71725 12Z\"\n        stroke=\"#000000\"\n      />\n    </Svg>\n  );\n}\n\nexport function GraduationHatIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Path\n        d=\"M7.54004 11.77L12 14L19 10.5M7.54004 11.77V17.77M7.54004 11.77L12 9.54004M7.54004 11.77L5 10.5M7.54004 17.77V21M7.54004 17.77L12 20L19 16.5V10.5M7.54004 17.77L5 16.5V10.5M19 10.5L22 9L12 4L2 9L5 10.5\"\n        stroke=\"#000000\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n}\n\nexport function WarningIcon({\n  width,\n  height,\n  style,\n  outlineColor,\n}: {\n  width: number;\n  height: number;\n  style?: StyleProp<ViewStyle>;\n  outlineColor?: string;\n}) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Circle cx=\"12\" cy=\"17\" r=\"1\" fill=\"#000000\" />\n      <Path\n        d=\"M12 10L12 14\"\n        stroke=\"#000000\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <Path\n        d=\"M3.44722 18.1056L10.2111 4.57771C10.9482 3.10361 13.0518 3.10362 13.7889 4.57771L20.5528 18.1056C21.2177 19.4354 20.2507 21 18.7639 21H5.23607C3.7493 21 2.78231 19.4354 3.44722 18.1056Z\"\n        stroke={outlineColor || '#000000'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n}\n\nexport function SearchIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      id=\"Capa_1\"\n      viewBox=\"0 0 488.4 488.4\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <G>\n          <G>\n            <Path d=\"M0,203.25c0,112.1,91.2,203.2,203.2,203.2c51.6,0,98.8-19.4,134.7-51.2l129.5,129.5c2.4,2.4,5.5,3.6,8.7,3.6 s6.3-1.2,8.7-3.6c4.8-4.8,4.8-12.5,0-17.3l-129.6-129.5c31.8-35.9,51.2-83,51.2-134.7c0-112.1-91.2-203.2-203.2-203.2 S0,91.15,0,203.25z M381.9,203.25c0,98.5-80.2,178.7-178.7,178.7s-178.7-80.2-178.7-178.7s80.2-178.7,178.7-178.7 S381.9,104.65,381.9,203.25z\" />\n          </G>\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function WordIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-1712.086\"\n            x2=\"13.832\"\n            y2=\"-1695.914\"\n            gradientTransform=\"translate(0 1720)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#2368c4\" />\n            <Stop offset=\"0.5\" stopColor=\"#1a5dbe\" />\n            <Stop offset=\"1\" stopColor=\"#1146ac\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M28.806,3H9.705A1.192,1.192,0,0,0,8.512,4.191h0V9.5l11.069,3.25L30,9.5V4.191A1.192,1.192,0,0,0,28.806,3Z\"\n          fill=\"#41a5ee\"\n        />\n        <Path d=\"M30,9.5H8.512V16l11.069,1.95L30,16Z\" fill=\"#2b7cd3\" />\n        <Path d=\"M8.512,16v6.5L18.93,23.8,30,22.5V16Z\" fill=\"#185abd\" />\n        <Path\n          d=\"M9.705,29h19.1A1.192,1.192,0,0,0,30,27.809h0V22.5H8.512v5.309A1.192,1.192,0,0,0,9.705,29Z\"\n          fill=\"#103f91\"\n        />\n        <Path\n          d=\"M16.434,8.2H8.512V24.45h7.922a1.2,1.2,0,0,0,1.194-1.191V9.391A1.2,1.2,0,0,0,16.434,8.2Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V25.1h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V23.8h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.132,8.85H8.512V23.8h6.62a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.132,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"#215091\"\n        />\n        <Path\n          d=\"M6.9,17.988c.023.184.039.344.046.481h.028c.01-.13.032-.287.065-.47s.062-.338.089-.465l1.255-5.407h1.624l1.3,5.326a7.761,7.761,0,0,1,.162,1h.022a7.6,7.6,0,0,1,.135-.975l1.039-5.358h1.477l-1.824,7.748H10.591L9.354,14.742q-.054-.222-.122-.578t-.084-.52H9.127q-.021.189-.084.561c-.042.249-.075.432-.1.552L7.78,19.871H6.024L4.19,12.127h1.5l1.131,5.418A4.469,4.469,0,0,1,6.9,17.988Z\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PowerpointIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-1748.086\"\n            x2=\"13.832\"\n            y2=\"-1731.914\"\n            gradientTransform=\"translate(0 1756)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#ca4c28\" />\n            <Stop offset=\"0.5\" stopColor=\"#c5401e\" />\n            <Stop offset=\"1\" stopColor=\"#b62f14\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M18.93,17.3,16.977,3h-.146A12.9,12.9,0,0,0,3.953,15.854V16Z\"\n          fill=\"#ed6c47\"\n        />\n        <Path\n          d=\"M17.123,3h-.146V16l6.511,2.6L30,16v-.146A12.9,12.9,0,0,0,17.123,3Z\"\n          fill=\"#ff8f6b\"\n        />\n        <Path\n          d=\"M30,16v.143A12.905,12.905,0,0,1,17.12,29h-.287A12.907,12.907,0,0,1,3.953,16.143V16Z\"\n          fill=\"#d35230\"\n        />\n        <Path\n          d=\"M17.628,9.389V23.26a1.2,1.2,0,0,1-.742,1.1,1.16,1.16,0,0,1-.45.091H7.027c-.182-.208-.358-.429-.521-.65a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85c.143-.221.293-.442.456-.65h9.93A1.2,1.2,0,0,1,17.628,9.389Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.977,10.04V23.911a1.15,1.15,0,0,1-.091.448,1.2,1.2,0,0,1-1.1.741H7.62q-.309-.314-.593-.65c-.182-.208-.358-.429-.521-.65a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.735A1.2,1.2,0,0,1,16.977,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.977,10.04V22.611A1.2,1.2,0,0,1,15.785,23.8H6.506a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.735A1.2,1.2,0,0,1,16.977,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.326,10.04V22.611A1.2,1.2,0,0,1,15.134,23.8H6.506a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.084A1.2,1.2,0,0,1,16.326,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"#c5401e\"\n        />\n        <Path\n          d=\"M9.293,12.028a3.287,3.287,0,0,1,2.174.636,2.27,2.27,0,0,1,.756,1.841,2.555,2.555,0,0,1-.373,1.376,2.49,2.49,0,0,1-1.059.935A3.607,3.607,0,0,1,9.2,17.15H7.687v2.8H6.141V12.028ZM7.686,15.94H9.017a1.735,1.735,0,0,0,1.177-.351,1.3,1.3,0,0,0,.4-1.025q0-1.309-1.525-1.31H7.686V15.94Z\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ExcelIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-2092.086\"\n            x2=\"13.832\"\n            y2=\"-2075.914\"\n            gradientTransform=\"translate(0 2100)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#18884f\" />\n            <Stop offset=\"0.5\" stopColor=\"#117e43\" />\n            <Stop offset=\"1\" stopColor=\"#0b6631\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M19.581,15.35,8.512,13.4V27.809A1.192,1.192,0,0,0,9.705,29h19.1A1.192,1.192,0,0,0,30,27.809h0V22.5Z\"\n          fill=\"#185c37\"\n        />\n        <Path\n          d=\"M19.581,3H9.705A1.192,1.192,0,0,0,8.512,4.191h0V9.5L19.581,16l5.861,1.95L30,16V9.5Z\"\n          fill=\"#21a366\"\n        />\n        <Path d=\"M8.512,9.5H19.581V16H8.512Z\" fill=\"#107c41\" />\n        <Path\n          d=\"M16.434,8.2H8.512V24.45h7.922a1.2,1.2,0,0,0,1.194-1.191V9.391A1.2,1.2,0,0,0,16.434,8.2Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V25.1h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V23.8h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.132,8.85H8.512V23.8h6.62a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.132,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"url(#a)\"\n        />\n        <Path\n          d=\"M5.7,19.873l2.511-3.884-2.3-3.862H7.758L9.013,14.6c.116.234.2.408.238.524h.017c.082-.188.169-.369.26-.546l1.342-2.447h1.7l-2.359,3.84,2.419,3.905H10.821l-1.45-2.711A2.355,2.355,0,0,1,9.2,16.8H9.176a1.688,1.688,0,0,1-.168.351L7.515,19.873Z\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M28.806,3H19.581V9.5H30V4.191A1.192,1.192,0,0,0,28.806,3Z\"\n          fill=\"#33c481\"\n        />\n        <Path d=\"M19.581,16H30v6.5H19.581Z\" fill=\"#107c41\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function VideoIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M18 3H6C3.79086 3 2 4.79086 2 7V17C2 19.2091 3.79086 21 6 21H18C20.2091 21 22 19.2091 22 17V7C22 4.79086 20.2091 3 18 3Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M10.28 8.03994C9.19003 8.42994 9 10.5199 9 12.0399C9 13.5599 9.19003 15.5999 10.28 16.0399C11.37 16.4799 16 13.7499 16 12.0399C16 10.3299 11.44 7.61994 10.28 8.03994Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PDFIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M24.1,2.072h0l5.564,5.8V29.928H8.879V30H29.735V7.945L24.1,2.072\"\n          fill=\"#909090\"\n        />\n        <Path d=\"M24.031,2H8.808V29.928H29.664V7.873L24.03,2\" fill=\"#f4f4f4\" />\n        <Path d=\"M8.655,3.5H2.265v6.827h20.1V3.5H8.655\" fill=\"#7a7b7c\" />\n        <Path d=\"M22.472,10.211H2.395V3.379H22.472v6.832\" fill=\"#dd2025\" />\n        <Path\n          d=\"M9.052,4.534h-.03l-.207,0H7.745v4.8H8.773V7.715L9,7.728a2.042,2.042,0,0,0,.647-.117,1.427,1.427,0,0,0,.493-.291,1.224,1.224,0,0,0,.335-.454,2.13,2.13,0,0,0,.105-.908,2.237,2.237,0,0,0-.114-.644,1.173,1.173,0,0,0-.687-.65A2.149,2.149,0,0,0,9.37,4.56a2.232,2.232,0,0,0-.319-.026M8.862,6.828l-.089,0V5.348h.193a.57.57,0,0,1,.459.181.92.92,0,0,1,.183.558c0,.246,0,.469-.222.626a.942.942,0,0,1-.524.114\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M12.533,4.521c-.111,0-.219.008-.295.011L12,4.538h-.78v4.8h.918a2.677,2.677,0,0,0,1.028-.175,1.71,1.71,0,0,0,.68-.491,1.939,1.939,0,0,0,.373-.749,3.728,3.728,0,0,0,.114-.949,4.416,4.416,0,0,0-.087-1.127,1.777,1.777,0,0,0-.4-.733,1.63,1.63,0,0,0-.535-.4,2.413,2.413,0,0,0-.549-.178,1.282,1.282,0,0,0-.228-.017m-.182,3.937-.1,0V5.392h.013a1.062,1.062,0,0,1,.6.107,1.2,1.2,0,0,1,.324.4,1.3,1.3,0,0,1,.142.526c.009.22,0,.4,0,.549a2.926,2.926,0,0,1-.033.513,1.756,1.756,0,0,1-.169.5,1.13,1.13,0,0,1-.363.36.673.673,0,0,1-.416.106\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M17.43,4.538H15v4.8h1.028V7.434h1.3V6.542h-1.3V5.43h1.4V4.538\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M21.781,20.255s3.188-.578,3.188.511S22.994,21.412,21.781,20.255Zm-2.357.083a7.543,7.543,0,0,0-1.473.489l.4-.9c.4-.9.815-2.127.815-2.127a14.216,14.216,0,0,0,1.658,2.252,13.033,13.033,0,0,0-1.4.288Zm-1.262-6.5c0-.949.307-1.208.546-1.208s.508.115.517.939a10.787,10.787,0,0,1-.517,2.434A4.426,4.426,0,0,1,18.161,13.841ZM13.513,24.354c-.978-.585,2.051-2.386,2.6-2.444C16.11,21.911,14.537,24.966,13.513,24.354ZM25.9,20.895c-.01-.1-.1-1.207-2.07-1.16a14.228,14.228,0,0,0-2.453.173,12.542,12.542,0,0,1-2.012-2.655,11.76,11.76,0,0,0,.623-3.1c-.029-1.2-.316-1.888-1.236-1.878s-1.054.815-.933,2.013a9.309,9.309,0,0,0,.665,2.338s-.425,1.323-.987,2.639-.946,2.006-.946,2.006a9.622,9.622,0,0,0-2.725,1.4c-.824.767-1.159,1.356-.725,1.945.374.508,1.683.623,2.853-.91a22.549,22.549,0,0,0,1.7-2.492s1.784-.489,2.339-.623,1.226-.24,1.226-.24,1.629,1.639,3.2,1.581,1.495-.939,1.485-1.035\"\n          fill=\"#dd2025\"\n        />\n        <Path d=\"M23.954,2.077V7.95h5.633L23.954,2.077Z\" fill=\"#909090\" />\n        <Path d=\"M24.031,2V7.873h5.633L24.031,2Z\" fill=\"#f4f4f4\" />\n        <Path\n          d=\"M8.975,4.457h-.03l-.207,0H7.668v4.8H8.7V7.639l.228.013a2.042,2.042,0,0,0,.647-.117,1.428,1.428,0,0,0,.493-.291A1.224,1.224,0,0,0,10.4,6.79a2.13,2.13,0,0,0,.105-.908,2.237,2.237,0,0,0-.114-.644,1.173,1.173,0,0,0-.687-.65,2.149,2.149,0,0,0-.411-.105,2.232,2.232,0,0,0-.319-.026M8.785,6.751l-.089,0V5.271H8.89a.57.57,0,0,1,.459.181.92.92,0,0,1,.183.558c0,.246,0,.469-.222.626a.942.942,0,0,1-.524.114\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M12.456,4.444c-.111,0-.219.008-.295.011l-.235.006h-.78v4.8h.918a2.677,2.677,0,0,0,1.028-.175,1.71,1.71,0,0,0,.68-.491,1.939,1.939,0,0,0,.373-.749,3.728,3.728,0,0,0,.114-.949,4.416,4.416,0,0,0-.087-1.127,1.777,1.777,0,0,0-.4-.733,1.63,1.63,0,0,0-.535-.4,2.413,2.413,0,0,0-.549-.178,1.282,1.282,0,0,0-.228-.017m-.182,3.937-.1,0V5.315h.013a1.062,1.062,0,0,1,.6.107,1.2,1.2,0,0,1,.324.4,1.3,1.3,0,0,1,.142.526c.009.22,0,.4,0,.549a2.926,2.926,0,0,1-.033.513,1.756,1.756,0,0,1-.169.5,1.13,1.13,0,0,1-.363.36.673.673,0,0,1-.416.106\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M17.353,4.461h-2.43v4.8h1.028V7.357h1.3V6.465h-1.3V5.353h1.4V4.461\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ImageIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M14.2639 15.9375L12.5958 14.2834C11.7909 13.4851 11.3884 13.086 10.9266 12.9401C10.5204 12.8118 10.0838 12.8165 9.68048 12.9536C9.22188 13.1095 8.82814 13.5172 8.04068 14.3326L4.04409 18.2801M14.2639 15.9375L14.6053 15.599C15.4112 14.7998 15.8141 14.4002 16.2765 14.2543C16.6831 14.126 17.12 14.1311 17.5236 14.2687C17.9824 14.4251 18.3761 14.8339 19.1634 15.6514L20 16.4934M14.2639 15.9375L18.275 19.9565M18.275 19.9565C17.9176 20 17.4543 20 16.8 20H7.2C6.07989 20 5.51984 20 5.09202 19.782C4.71569 19.5903 4.40973 19.2843 4.21799 18.908C4.12796 18.7313 4.07512 18.5321 4.04409 18.2801M18.275 19.9565C18.5293 19.9256 18.7301 19.8727 18.908 19.782C19.2843 19.5903 19.5903 19.2843 19.782 18.908C20 18.4802 20 17.9201 20 16.8V16.4934M4.04409 18.2801C4 17.9221 4 17.4575 4 16.8V7.2C4 6.0799 4 5.51984 4.21799 5.09202C4.40973 4.71569 4.71569 4.40973 5.09202 4.21799C5.51984 4 6.07989 4 7.2 4H16.8C17.9201 4 18.4802 4 18.908 4.21799C19.2843 4.40973 19.5903 4.71569 19.782 5.09202C20 5.51984 20 6.0799 20 7.2V16.4934M17 8.99989C17 10.1045 16.1046 10.9999 15 10.9999C13.8954 10.9999 13 10.1045 13 8.99989C13 7.89532 13.8954 6.99989 15 6.99989C16.1046 6.99989 17 7.89532 17 8.99989Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function AudioIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M4.15838 13.9306C3.44537 12.7423 3.44537 11.2577 4.15838 10.0694C4.37596 9.70674 4.73641 9.45272 5.1511 9.36978L6.84413 9.03117C6.94499 9.011 7.03591 8.95691 7.10176 8.87788L9.17085 6.39498C10.3534 4.97592 10.9447 4.26638 11.4723 4.45742C12 4.64846 12 5.57207 12 7.41928L12 16.5807C12 18.4279 12 19.3515 11.4723 19.5426C10.9447 19.7336 10.3534 19.0241 9.17085 17.605L7.10176 15.1221C7.03591 15.0431 6.94499 14.989 6.84413 14.9688L5.1511 14.6302C4.73641 14.5473 4.37596 14.2933 4.15838 13.9306Z\"\n          fill=\"#222222\"\n        />\n        <Path\n          d=\"M14.5355 8.46447C15.4684 9.39732 15.9948 10.6611 16 11.9803C16.0052 13.2996 15.4888 14.5674 14.5633 15.5076\"\n          stroke=\"#222222\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <Path\n          d=\"M18.6569 6.34314C20.1494 7.83572 20.9916 9.85769 20.9999 11.9685C21.0083 14.0793 20.182 16.1078 18.7012 17.6121\"\n          stroke=\"#222222\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function OneNoteIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M8 23H32V28C32 29.1046 31.1046 30 30 30H10C8.89543 30 8 29.1046 8 28V23Z\"\n          fill=\"#5D29A1\"\n        />\n        <Rect x=\"8\" y=\"16\" width=\"24\" height=\"7\" fill=\"#7F32CC\" />\n        <Rect x=\"8\" y=\"9\" width=\"24\" height=\"7\" fill=\"#9A40D6\" />\n        <Path\n          d=\"M10 2C8.89543 2 8 2.89543 8 4V28C8 29.1046 8.89543 30 10 30H24V9H32V4C32 2.89543 31.1046 2 30 2H10Z\"\n          fill=\"url(#paint0_linear_87_7733)\"\n        />\n        <Path\n          d=\"M8 12C8 10.3431 9.34315 9 11 9H17C18.6569 9 20 10.3431 20 12V24C20 25.6569 18.6569 27 17 27H8V12Z\"\n          fill=\"#000000\"\n          fillOpacity={0.3}\n        />\n        <Rect\n          y=\"7\"\n          width=\"18\"\n          height=\"18\"\n          rx=\"2\"\n          fill=\"url(#paint1_linear_87_7733)\"\n        />\n        <Path\n          d=\"M13 21V11H10.8893V16.8286L6.9631 11H5V21H7.08118V14.9571L11.155 21H13Z\"\n          fill={Colors.white}\n        />\n        <Defs>\n          <LinearGradient\n            id=\"paint0_linear_87_7733\"\n            x1=\"8\"\n            y1=\"16\"\n            x2=\"24.5\"\n            y2=\"16\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop stop-color=\"#8C42AC\" />\n            <Stop offset=\"1\" stopColor=\"#C36DEF\" />\n          </LinearGradient>\n          <LinearGradient\n            id=\"paint1_linear_87_7733\"\n            x1=\"0\"\n            y1=\"16\"\n            x2=\"19\"\n            y2=\"16\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop stop-color=\"#44176C\" />\n            <Stop offset=\"1\" stopColor=\"#621F9C\" />\n          </LinearGradient>\n        </Defs>\n      </G>\n    </Svg>\n  );\n}\n\nexport function GraphAPILogo({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      id=\"Layer_1\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 48 48\"\n      width={width}\n      height={height}\n      style={style}\n    >\n      <G>\n        <Defs>\n          <ClipPath id=\"SVGID_2_\">\n            <Path\n              id=\"SVGID_1_\"\n              d=\"M34.9,3.2H13.1c-0.7,0-1.4,0.4-1.8,1L0.5,23c-0.4,0.6-0.4,1.4,0,2.1l10.9,18.7c0.4,0.6,1.1,1,1.8,1h21.7c0.7,0,1.4-0.4,1.8-1L47.5,25c0.4-0.6,0.4-1.4,0-2.1L36.7,4.3C36.3,3.6,35.6,3.2,34.9,3.2z\"\n            />\n          </ClipPath>\n        </Defs>\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.3,3.1 15.6,11.1 35.4,3.1\"\n        />\n        <Polygon\n          fill=\"#0078D4\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.3,3.1 15.6,11.1 0.2,23.3 0.2,3.1\"\n        />\n        <Polygon\n          fill=\"#0364B8\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"-0.8,24 15.6,11.1 16.5,37.1\"\n        />\n        <Polygon\n          fill=\"#14447D\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"-0.8,24 16.5,37.1 11.5,44.8 0.2,45.2\"\n        />\n        <Polygon\n          fill=\"#0F335E\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.5,44.8 16.5,37.1 36.2,45.2\"\n        />\n        <Polygon\n          fill=\"#0364B8\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"16.5,37.1 36.7,24 36.2,45.2\"\n        />\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"16.5,37.1 15.6,11.1 36.7,24\"\n        />\n        <Polygon\n          fill=\"#50D9FF\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"15.6,11.1 36.2,2.8 36.7,24\"\n        />\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"36.7,24 36.2,2.8 48.1,3.1 48.1,24\"\n        />\n        <Polygon\n          fill=\"#0078D4\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"36.7,24 36.2,45.9 47.5,45.9 48.1,24\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function StudentSearchIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M18.5 19.5L20 21M11 21H5.6C5.03995 21 4.75992 21 4.54601 20.891C4.35785 20.7951 4.20487 20.6422 4.10899 20.454C4 20.2401 4 19.9601 4 19.4V17.6841C4 17.0485 4 16.7306 4.04798 16.4656C4.27087 15.2344 5.23442 14.2709 6.46558 14.048C6.5425 14.0341 6.6237 14.0242 6.71575 14.0172C6.94079 14 7.05331 13.9914 7.20361 14.0026C7.35983 14.0143 7.4472 14.0297 7.59797 14.0722C7.74302 14.1131 8.00429 14.2315 8.52682 14.4682C9.13692 14.7446 9.8015 14.9218 10.5 14.9795M19 17.5C19 18.8807 17.8807 20 16.5 20C15.1193 20 14 18.8807 14 17.5C14 16.1193 15.1193 15 16.5 15C17.8807 15 19 16.1193 19 17.5ZM15 7C15 9.20914 13.2091 11 11 11C8.79086 11 7 9.20914 7 7C7 4.79086 8.79086 3 11 3C13.2091 3 15 4.79086 15 7Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function TimeIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M12 6V12\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M16.24 16.24L12 12\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\ninterface TrashIconProps extends iconProps {\n  color?: string;\n}\n\nexport function TrashIcon({\n  width,\n  height,\n  style,\n  props,\n  color,\n}: TrashIconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M4 6H20L18.4199 20.2209C18.3074 21.2337 17.4512 22 16.4321 22H7.56786C6.54876 22 5.69264 21.2337 5.5801 20.2209L4 6Z\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M7.34491 3.14716C7.67506 2.44685 8.37973 2 9.15396 2H14.846C15.6203 2 16.3249 2.44685 16.6551 3.14716L18 6H6L7.34491 3.14716Z\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M2 6H22\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M10 11V16\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M14 11V16\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\n// function MessagingIcon() {\n//     return (\n//         <Svg  viewBox=\"0 0 498.000000 268.000000\"preserveAspectRatio=\"xMidYMid meet\">\n//             <G transform=\"translate(0.000000,268.000000) scale(0.100000,-0.100000)\" fill=\"#000000\" stroke=\"none\">\n//                 <Path d=\"M1140 2481 c-50 -16 -89 -41 -128 -86 -74 -84 -72 -67 -72 -730 l0\n//                 -591 -30 -45 c-16 -24 -54 -73 -84 -109 -64 -75 -116 -196 -116 -266 0 -104\n//                 50 -147 187 -160 95 -9 158 8 246 66 115 76 187 148 232 234 l40 76 438 0 437\n//                 0 0 -95 c0 -150 47 -241 154 -298 41 -22 45 -22 791 -27 l750 -5 100 -69 c55\n//                 -37 108 -75 117 -83 25 -22 144 -53 205 -53 47 0 58 4 92 36 44 39 66 91 57\n//                 130 -8 29 -67 124 -89 143 -9 7 -30 35 -48 63 l-32 50 2 466 c2 537 2 540 -76\n//                 623 -82 87 -92 89 -533 89 l-380 0 0 210 c0 250 -9 289 -89 363 -87 81 -23 77\n//                 -1150 76 -548 0 -1007 -4 -1021 -8z m2051 -164 c18 -12 39 -34 46 -47 18 -36\n//                 18 -1144 0 -1180 -7 -13 -28 -35 -46 -47 l-34 -23 -857 0 -857 0 -63 -32 c-34\n//                 -18 -70 -44 -78 -58 -59 -96 -89 -134 -150 -191 -73 -70 -158 -119 -204 -119\n//                 -40 0 -94 25 -107 48 -17 31 -13 81 8 116 11 17 55 63 98 102 55 50 87 89 108\n//                 130 l30 59 5 596 c5 651 2 612 65 651 29 17 77 18 1016 18 l986 0 34 -23z\n//                 m986 -647 c64 -38 63 -33 63 -527 0 -518 -11 -463 118 -598 63 -65 72 -80 72\n//                 -112 0 -50 -32 -83 -79 -83 -45 0 -104 38 -161 105 -59 69 -104 102 -164 122\n//                 -46 16 -125 18 -782 23 -714 5 -732 5 -754 25 -39 36 -50 69 -50 160 l0 86 62\n//                 -3 61 -3 1 -55 1 -55 738 -3 737 -2 0 75 0 75 -390 0 -389 0 49 46 c85 80 90\n//                 103 90 449 l0 295 373 0 c351 0 374 -1 404 -20z\"/>\n//                 <Path d=\"M1470 1945 l0 -75 715 0 715 0 0 75 0 75 -715 0 -715 0 0 -75z\"/>\n//                 <Path d=\"M1460 1605 l0 -75 430 0 430 0 0 75 0 75 -430 0 -430 0 0 -75z\"/>\n//                 <Path d=\"M2580 1605 l0 -75 160 0 160 0 0 75 0 75 -160 0 -160 0 0 -75z\"/>\n//                 <Path d=\"M1720 1285 l0 -75 650 0 650 0 0 75 0 75 -650 0 -650 0 0 -75z\"/>\n//                 <Path d=\"M3460 1495 l0 -75 290 0 290 0 0 75 0 75 -290 0 -290 0 0 -75z\"/>\n//                 <Path d=\"M3510 1155 l0 -75 155 0 155 0 0 75 0 75 -155 0 -155 0 0 -75z\"/>\n//                 <Path d=\"M3900 1155 l0 -75 65 0 65 0 0 75 0 75 -65 0 -65 0 0 -75z\"/>\n//             </G>\n//         </Svg>\n//     )\n// }\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { View, Text, Pressable, Image } from 'react-native';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { RootState } from './Redux/store';\nimport { safeAreaColorsSlice } from './Redux/reducers/safeAreaColorsReducer';\nimport { GearIcon } from './UI/Icons/Icons';\nimport { Colors } from './types';\n\nexport default function Login({\n  onGetAuthToken,\n  onGetGovernmentAuthToken,\n  width,\n}: {\n  onGetAuthToken: () => void;\n  onGetGovernmentAuthToken: () => void;\n  width: number;\n}) {\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const [isBottonHover, setIsButtonHover] = useState<boolean>(false);\n  const [isGovernmentHover, setIsGovernmentHover] = useState<boolean>(false);\n  const [fontSize, setFontSize] = useState<number>(0);\n  const [isShowingGovernmentLogin, setIsShowingGovernmentLogin] =\n    useState<boolean>(false);\n  const insets = useSafeAreaInsets();\n  const dispatch = useDispatch();\n\n  useCallback(\n    async function setSafeAreaColors() {\n      dispatch(safeAreaColorsSlice.actions.setSafeAreaColorTop(Colors.maroon));\n      dispatch(\n        safeAreaColorsSlice.actions.setSafeAreaColorBottom(Colors.maroon),\n      );\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    const heightIsGreater: boolean = width < height;\n    if (heightIsGreater) {\n      setFontSize(width / 4);\n    } else {\n      setFontSize(height / 3);\n    }\n  }, [height, width]);\n  // Font\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../assets/fonts/BukhariScript.ttf'),\n    'Gochi Hand': require('../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      style={{\n        backgroundColor: Colors.maroon,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height,\n        width,\n        overflow: 'hidden',\n        top: -insets.top,\n      }}\n      onLongPress={() => {\n        setIsShowingGovernmentLogin(true);\n      }}\n      delayLongPress={5000}\n    >\n      <View\n        id=\"Content_Area\"\n        style={{\n          width: width < height ? width : height,\n          height: width < height ? width : height,\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}\n      >\n        <View\n          style={{\n            width: fontSize * 1.65,\n            height: fontSize,\n            flexDirection: 'row',\n          }}\n          id=\"Text_Container\"\n        >\n          <Image\n            source={require('../assets/images/PaulyLogo.png')}\n            resizeMode=\"contain\"\n            style={{\n              width: fontSize,\n              height: fontSize,\n              position: 'absolute',\n              left: -fontSize * 0.2,\n            }}\n          />\n          <Text\n            style={{\n              position: 'absolute',\n              left: fontSize * 0.5,\n              top: fontSize * 0.22,\n              fontFamily: 'Gochi Hand',\n              fontSize: fontSize - fontSize / 3,\n              textShadowColor: 'rgba(0, 0, 0, 1)',\n              textShadowOffset: { width: 4, height: 5 },\n              textShadowRadius: 0,\n              color: Colors.white,\n            }}\n            selectable={false}\n          >\n            auly\n          </Text>\n        </View>\n        <Text\n          style={{ color: 'white', marginTop: 25, fontFamily: 'BukhariScript' }}\n        >\n          23/24 Saint Paul's High School Student Council\n        </Text>\n        <Pressable\n          onPress={async () => {\n            onGetAuthToken();\n          }}\n          onHoverIn={() => {\n            setIsButtonHover(true);\n          }}\n          onHoverOut={() => {\n            setIsButtonHover(false);\n          }}\n          style={{\n            height: height * 0.09,\n            width: width * 0.5,\n            borderRadius: 50,\n            backgroundColor: isBottonHover ? Colors.darkGray : Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            shadowColor: isBottonHover ? Colors.white : 'black',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n            marginTop: width < height ? width * 0.05 : height * 0.05,\n          }}\n        >\n          <Text\n            style={{\n              textAlign: 'center',\n              color: isBottonHover ? Colors.white : 'black',\n              fontWeight: 'bold',\n            }}\n          >\n            LOGIN\n          </Text>\n        </Pressable>\n        {isShowingGovernmentLogin ? (\n          <Pressable\n            onPress={async () => {\n              onGetGovernmentAuthToken();\n            }}\n            onHoverIn={() => {\n              setIsGovernmentHover(true);\n            }}\n            onHoverOut={() => {\n              setIsGovernmentHover(false);\n            }}\n            style={{\n              height: height * 0.09,\n              width: width * 0.5,\n              borderRadius: 50,\n              backgroundColor: isGovernmentHover\n                ? Colors.darkGray\n                : Colors.white,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              shadowColor: isBottonHover ? Colors.white : 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              marginTop: width < height ? width * 0.1 : height * 0.1,\n              flexDirection: 'row',\n            }}\n          >\n            <GearIcon width={18} height={18} />\n            <Text\n              style={{\n                textAlign: 'center',\n                color: isBottonHover ? Colors.white : 'black',\n                fontWeight: 'bold',\n              }}\n            >\n              LOGIN AS ADMIN\n            </Text>\n          </Pressable>\n        ) : null}\n      </View>\n    </Pressable>\n  );\n}\n","// July 21 2023\n// Andrew Mainella\n// Calendar functions\n\nexport function getDaysInMonth(input: Date): number {\n  const d = new Date();\n  d.setFullYear(input.getFullYear(), input.getMonth() + 1, 0);\n  return d.getDate();\n}\n\nexport function getDay(value: number, startdate: number): number | undefined {\n  let offset: number = 0;\n  const let1: number = value / 5.0;\n  const let2: number = Math.floor(let1);\n  const let4: number = let2 * 2;\n  offset += let4;\n  const result: number = value - startdate + 2 + offset;\n  const month = new Date();\n  const d = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n  const DayInt = d.getDate();\n  if (result >= DayInt + 1) {\n    return undefined;\n  }\n  return result;\n}\n\nexport function findFirstDayinMonth(currentTime: Date): number {\n  const year = currentTime.getFullYear();\n  const month = currentTime.getMonth();\n  const weekDay = new Date(year, month).getDay();\n  return weekDay;\n  // Returns a which weekday day is the first day of the month.\n  // Sunday is 0, Saturday is 6\n}\n\nexport function isDateToday(dateToCheck: Date) {\n  // Get today's date\n  const today = new Date();\n\n  // Compare the components of the dateToCheck with today's date\n  const isSameDate =\n    dateToCheck.getDate() === today.getDate() &&\n    dateToCheck.getMonth() === today.getMonth() &&\n    dateToCheck.getFullYear() === today.getFullYear();\n\n  // Return true if the dateToCheck is today, otherwise return false\n  return isSameDate;\n}\n\n// July 17 2023\n// Andrew Mainella\n//\n// Converting a year to a school year.\n// The year converted is the year of the graduating class\n//\n// For example 2024 would return 2023-2024\n\nexport function convertYearToSchoolYear(year: number) {\n  return `${year - 1}-${year}`;\n}\n\nexport function calculateIfShowing(value: string, Time: Date): boolean {\n  // TO DO shorten\n  if (isDateToday(Time)) {\n    const hourInt = Time.getHours();\n    const minuiteInt = Time.getMinutes();\n    if (minuiteInt + 15 >= 60) {\n      let resepctiveTime: string = `${hourInt > 12}`\n        ? (hourInt - 12).toString()\n        : hourInt.toString();\n      resepctiveTime += hourInt > 12 ? 'PM' : 'AM';\n      if (resepctiveTime === value) {\n        return false;\n      }\n      return true;\n    }\n    if (minuiteInt - 15 <= 0) {\n      let resepctiveTime: string = `${hourInt > 12}`\n        ? (hourInt - 12).toString()\n        : hourInt.toString();\n      resepctiveTime += hourInt > 12 ? 'PM' : 'AM';\n      if (resepctiveTime === value) {\n        return false;\n      }\n      return true;\n    }\n    return true;\n  }\n  return true;\n}\n\nexport function findTimeOffset(time: Date, height: number): number {\n  const hourWidth = height * 0.1;\n  const minutieWidth = (height * 0.1) / 60;\n  const hourInt = time.getHours();\n  const minuiteInt = time.getMinutes();\n  const returnOffset = hourWidth * hourInt + minutieWidth * minuiteInt;\n  return returnOffset;\n}\n\n// Ryan was here April 13, 2023\n// Andrew was here April 13, 2023\n\nexport function computeEventHeight(\n  fromDate: Date,\n  toDate: Date,\n  height: number,\n): number {\n  let delta = toDate.getTime() - fromDate.getTime();\n  if (delta >= 86400000) {\n    delta = 86400000;\n  }\n\n  const deltaHours = delta / 3600000;\n  const deltaRemaining = delta % 3600000;\n  const deltaMinutes = deltaRemaining / 60;\n\n  const HourHeight = height * 0.1;\n  const MinuteHeight = (height * 0.1) / 60;\n\n  const ReturnOffset = HourHeight * deltaHours + MinuteHeight * deltaMinutes;\n  return ReturnOffset;\n}\n\nfunction getHorizontalOffset() {}\n","/*\n  Andrew Mainella\n  21 October 2023\n  Pauly\n  See README.md for more information about the setup process and what to put in each of these values\n*/\n// The org wide group id is the id of a group (teams) that every user is apart of.\n// This allows pauly to access calendar information that is common (an event that is set out by admin) among users.\n\nexport const orgWideGroupID: string = 'd2c0dd90-a426-4539-882c-aa87e5787a92';\n\nexport const tenantId: string = '551df04d-543a-4d61-955e-e4294c4cf950';\nexport const clientId: string = '08624b03-1aa6-40c4-8fb3-149c39026dff';\n\n// DO NOT CHANGE SCOPES\n// See README.md for more imformation about the scopes.\nexport const scopes = [\n  'User.Read',\n  'User.ReadBasic.All',\n  'Sites.Read.All',\n  'Sites.Manage.All',\n  'ChannelMessage.Read.All',\n  'Chat.ReadWrite',\n  'Calendars.ReadWrite',\n  'Team.ReadBasic.All',\n  'Group.ReadWrite.All',\n  'Tasks.ReadWrite',\n  'Channel.ReadBasic.All',\n  'Application.ReadWrite.All',\n  'TeamMember.Read.All',\n];\n","import { Platform } from 'react-native';\nimport store from '../../Redux/store';\nimport { authenticationCallSlice } from '../../Redux/reducers/authenticationCallReducer';\n\nexport default async function callMsGraph(\n  url: string,\n  method?: 'GET' | 'POST' | 'PATCH' | 'DELETE' | 'PUT',\n  body?: string | Blob,\n  headersIn?: { key: string; value: string }[],\n  secondAuth?: boolean,\n): Promise<Response> {\n  const headers: Headers = new Headers();\n  const bearer = `Bearer ${store.getState().authenticationToken}`;\n\n  headers.append('Authorization', bearer);\n  headers.append('Content-Type', 'application/json');\n\n  if (headersIn !== undefined) {\n    for (\n      let headerIndex = 0;\n      headerIndex < headersIn.length;\n      headerIndex += 1\n    ) {\n      headers.append(headersIn[headerIndex].key, headersIn[headerIndex].value);\n    }\n  }\n\n  const options = {\n    method: method || 'GET',\n    headers,\n    body,\n  };\n\n  let outUrl = url;\n\n  if (Platform.OS !== 'web') {\n    const urlArray = url.split('%20');\n    outUrl = '';\n    for (let index = 0; index < urlArray.length; index += 1) {\n      if (index !== 0) {\n        outUrl += ` ${urlArray[index]}`;\n      } else {\n        outUrl += urlArray[index];\n      }\n    }\n  }\n\n  const response = await fetch(outUrl, options);\n  if (response.status === 401) {\n    if (secondAuth === undefined) {\n      store.dispatch(\n        authenticationCallSlice.actions.setAuthenticationCallIncrement(),\n      );\n      const previousValue: string = store.getState().authenticationToken;\n      return new Promise(resolve => {\n        const unsubscribe = store.subscribe(async () => {\n          const newValue = store.getState().authenticationToken;\n          if (newValue !== previousValue) {\n            const result = await callMsGraph(\n              url,\n              method,\n              body,\n              headersIn,\n              true,\n            );\n            resolve(result);\n            unsubscribe(); // Unsubscribe after getting the new result\n          }\n        });\n      });\n    }\n    return response;\n  }\n  return response;\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nexport default async function getDressCode(\n  dressCodeId: string,\n): Promise<{ result: loadingStateEnum; data?: dressCodeType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeData,dressCodeIncentivesData,dressCodeName,dressCodeId)&$select=id&$filter=fields/dressCodeId%20eq%20'${dressCodeId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== 1) {\n      return { result: loadingStateEnum.failed };\n    }\n    try {\n      const dressCodeData: dressCodeDataType[] = JSON.parse(\n        data.value[0].fields.dressCodeData,\n      );\n      const dressCodeIncentivesData: dressCodeIncentiveType[] = JSON.parse(\n        data.value[0].fields.dressCodeIncentivesData,\n      );\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.dressCodeName,\n          id: data.value[0].fields.dressCodeId,\n          listId: data.value[0].id,\n          dressCodeData,\n          dressCodeIncentives: dressCodeIncentivesData,\n        },\n      };\n    } catch (e) {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n}\n","import { loadingStateEnum } from '../../types';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function largeBatch(\n  defaultBatchData?: { id: string; method: 'GET' | 'POST'; url: string }[][],\n  createData?: {\n    firstUrl: string;\n    secondUrl: string;\n    keys: { array?: string[]; map?: Map<string, any> };\n    method: 'GET' | 'POST';\n  },\n): Promise<{ result: loadingStateEnum; data?: batchResponseType[] }> {\n  let data: { id: string; method: 'GET' | 'POST'; url: string }[][] = [];\n  if (defaultBatchData) {\n    data = defaultBatchData;\n  } else if (createData) {\n    let batchIndex = 0;\n    if (createData.keys.array !== undefined) {\n      for (\n        let createDataIndex = 0;\n        createDataIndex < createData.keys.array.length;\n        createDataIndex += 1\n      ) {\n        if (batchIndex >= data.length) {\n          data.push([]);\n        }\n        data[batchIndex].push({\n          id: (createDataIndex + 1).toString(),\n          method: createData.method,\n          url: `${createData.firstUrl}${createData.keys.array[createDataIndex]}${createData.secondUrl}`,\n        });\n        if (createDataIndex % 19 === 0) {\n          batchIndex += 1;\n        }\n      }\n    } else if (createData.keys.map !== undefined) {\n      const createDataIndexMap = 0;\n      createData.keys.map.forEach((value, key) => {\n        if (batchIndex >= data.length) {\n          data.push([]);\n        }\n        data[batchIndex].push({\n          id: (createDataIndexMap + 1).toString(),\n          method: createData.method,\n          url: `${createData.firstUrl}${key}${createData.secondUrl}`,\n        });\n        if (createDataIndexMap % 19 === 0) {\n          batchIndex += 1;\n        }\n      });\n    } else {\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const output: batchResponseType[] = [];\n  for (let index = 0; index < data.length; index += 1) {\n    const batchData = {\n      requests: data[index],\n    };\n    const result = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/$batch',\n      'POST',\n      JSON.stringify(batchData),\n      [{ key: 'Accept', value: 'application/json' }],\n    );\n    if (result.ok) {\n      const batchResultData = await result.json();\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultData.responses.length;\n        batchIndex += 1\n      ) {\n        output.push({\n          method: 'GET',\n          id: batchResultData.responses[batchIndex].id,\n          headers: batchResultData.responses[batchIndex].headers,\n          body: batchResultData.responses[batchIndex].body,\n          status: batchResultData.responses[batchIndex].status,\n        });\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: output };\n}\n","import { loadingStateEnum } from '../../types';\n\nexport default function createUUID() {\n  let dt = new Date().getTime();\n  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return uuid;\n}\n\n// Get text from a loadingStateEnum\nexport function getTextState(\n  state: loadingStateEnum,\n  labels?: {\n    cannotStart?: string;\n    notStarted?: string;\n    failed?: string;\n    loading?: string;\n    offline?: string;\n    success?: string;\n  },\n): string {\n  if (state === loadingStateEnum.cannotStart) {\n    return labels?.cannotStart ? labels.cannotStart : 'Cannot Start';\n  }\n  if (state === loadingStateEnum.notStarted) {\n    return labels?.notStarted ? labels.notStarted : 'Start';\n  }\n  if (state === loadingStateEnum.failed) {\n    return labels?.failed ? labels.failed : 'Failed';\n  }\n  if (state === loadingStateEnum.loading) {\n    return labels?.loading ? labels.loading : 'Loading';\n  }\n  if (state === loadingStateEnum.offline) {\n    return labels?.offline ? labels.offline : 'Offline';\n  }\n  if (state === loadingStateEnum.success) {\n    return labels?.success ? labels.success : 'Success';\n  }\n  return 'Something Went Wrong';\n}\n","import { dressCodeData } from '../initializePauly/initializePaulyData';\n// Andrew Mainella\n// Pauly\n\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport callMsGraph from '../Ultility/microsoftAssets';\nimport { Colors, loadingStateEnum, semesters } from '../../types';\nimport store from '../../Redux/store';\nimport getDressCode from '../homepage/getDressCode';\nimport batchRequest from '../Ultility/batchRequest';\nimport create_UUID from '../Ultility/createUUID';\n\n// Defaults to org wide events\nexport async function getGraphEvents(\n  url?: string,\n  referenceUrl?: string,\n): Promise<{\n  result: loadingStateEnum;\n  events?: eventType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    url !== undefined\n      ? url\n      : `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties&$select=id,subject,start,end,isAllDay,singleValueExtendedProperties`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newEvents: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      const { singleValueExtendedProperties } = data.value[index];\n      const eventType: string | undefined =\n        data.value[index].singleValueExtendedProperties !== undefined\n          ? singleValueExtendedProperties.find(\n              (e: { id: string; value: string }) => {\n                return e.id === eventTypeExtensionID;\n              },\n            )?.value\n          : undefined;\n      const eventData: string | undefined =\n        data.value[index].singleValueExtendedProperties !== undefined\n          ? singleValueExtendedProperties.find(\n              (e: { id: string; value: string }) => {\n                return e.id === eventDataExtensionID;\n              },\n            )?.value\n          : undefined;\n      newEvents.push({\n        id: data.value[index].id,\n        name: data.value[index].subject,\n        startTime: data.value[index].start.dateTime,\n        endTime: data.value[index].end.dateTime,\n        allDay: data.value[index].isAllDay,\n        eventColor: Colors.white,\n        paulyEventType:\n          eventType === 'schoolYear'\n            ? 'schoolYear'\n            : eventType === 'schoolDay'\n            ? 'schoolDay'\n            : undefined,\n        paulyEventData: eventData,\n        microsoftEvent: true,\n        microsoftReference:\n          referenceUrl !== undefined\n            ? referenceUrl + data.value[index].id\n            : `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      events: newEvents,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// Gets an event from paulys team\nexport async function getEvent(\n  id: string,\n): Promise<{ result: loadingStateEnum; data?: eventType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${id}?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${store.getState().paulyList.eventDataExtensionId}')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const event: eventType = {\n      id: data.id,\n      name: data.subject,\n      startTime: data.start.dateTime,\n      endTime: data.end.dateTime,\n      allDay: data.isAllDay,\n      eventColor: Colors.white,\n      microsoftEvent: true,\n      microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.id}`,\n    };\n    if (data.singleValueExtendedProperties !== undefined) {\n      const eventData: { id: string; value: string }[] =\n        data.singleValueExtendedProperties;\n      const eventType = eventData.find(e => {\n        return e.id === store.getState().paulyList.eventTypeExtensionId;\n      })?.value;\n      event.paulyEventType =\n        eventType === 'schoolDay'\n          ? 'schoolDay'\n          : eventType === 'schoolYear'\n          ? 'schoolYear'\n          : undefined;\n      event.paulyEventData = eventData.find(e => {\n        return e.id === store.getState().paulyList.eventDataExtensionId;\n      })?.value;\n    }\n    return { result: loadingStateEnum.success, data: event };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSchedule(id: string): Promise<{\n  result: loadingStateEnum;\n  schedule?: scheduleType;\n  listItemId?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.scheduleListId\n    }/items?expand=fields($select=scheduleProperName,scheduleDescriptiveName,scheduleData,scheduleId,scheduleColor)&$filter=fields/scheduleId%20eq%20'${id}'&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== undefined) {\n      if (data.value.length === 1) {\n        const resultSchedule: scheduleType = {\n          properName: data.value[0].fields.scheduleProperName,\n          descriptiveName: data.value[0].fields.scheduleDescriptiveName,\n          periods: JSON.parse(\n            data.value[0].fields.scheduleData,\n          ) as periodType[],\n          id: data.value[0].fields.scheduleId,\n          color: data.value[0].fields.scheduleColor,\n        };\n        return {\n          result: loadingStateEnum.success,\n          schedule: resultSchedule,\n          listItemId: data.value[0].id,\n        };\n      }\n      return { result: loadingStateEnum.failed, schedule: undefined };\n    }\n    return { result: loadingStateEnum.failed, schedule: undefined };\n  }\n  return { result: loadingStateEnum.failed, schedule: undefined };\n}\n\nexport async function getSchedules(): Promise<{\n  result: loadingStateEnum;\n  data?: scheduleType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.scheduleListId}/items?expand=fields`,\n  );\n  if (result.ok) {\n    const dataResult = await result.json();\n    if (\n      dataResult.value.length !== undefined &&\n      dataResult.value.length !== null\n    ) {\n      const newLoadedSchedules: scheduleType[] = [];\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        try {\n          const scheduleData = JSON.parse(\n            dataResult.value[index].fields.scheduleData,\n          ) as periodType[];\n          newLoadedSchedules.push({\n            properName: dataResult.value[index].fields.scheduleProperName,\n            descriptiveName:\n              dataResult.value[index].fields.scheduleDescriptiveName,\n            id: dataResult.value[index].fields.scheduleId,\n            periods: scheduleData,\n            color: dataResult.value[index].fields.scheduleColor,\n          });\n        } catch {\n          return { result: loadingStateEnum.failed };\n          // TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n        }\n      }\n      return {\n        result: loadingStateEnum.success,\n        data: newLoadedSchedules,\n        nextLink: dataResult['@odata.nextLink'],\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getTimetable(\n  timetableId: string,\n): Promise<{ result: loadingStateEnum; timetable?: timetableType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.timetablesListId\n    }/items?expand=fields&$filter=fields/timetableId%20eq%20'${timetableId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== undefined) {\n      if (data.value.length === 1) {\n        try {\n          const scheduleData: string[] = JSON.parse(\n            data.value[0].fields.timetableDataSchedules,\n          );\n          const newSchedules: scheduleType[] = [];\n          for (let index = 0; index < scheduleData.length; index += 1) {\n            const result = await getSchedule(scheduleData[index]);\n            if (\n              result.result === loadingStateEnum.success &&\n              result.schedule !== undefined\n            ) {\n              newSchedules.push(result.schedule);\n            } else {\n              return { result: loadingStateEnum.failed };\n            }\n          }\n          const dressCodeResult = await getDressCode(\n            data.value[0].fields.timetableDressCodeId,\n          );\n          if (\n            dressCodeResult.result === loadingStateEnum.success &&\n            dressCodeResult.data !== undefined\n          ) {\n            const resultingTimetable: timetableType = {\n              name: data.value[0].fields.timetableName,\n              id: data.value[0].fields.timetableId,\n              schedules: newSchedules,\n              days: JSON.parse(data.value[0].fields.timetableDataDays),\n              dressCode: dressCodeResult.data,\n            };\n            return {\n              result: loadingStateEnum.success,\n              timetable: resultingTimetable,\n            };\n          }\n          return { result: loadingStateEnum.failed };\n        } catch (e) {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n}\n\nexport async function getSchoolDay(\n  selectedDate: Date,\n): Promise<{ result: loadingStateEnum; event?: eventType }> {\n  const startDate: string = `${new Date(\n    Date.UTC(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth(),\n      selectedDate.getDate(),\n      0,\n    ),\n  )\n    .toISOString()\n    .slice(0, -1)}0000`;\n  const endDate: string = `${new Date(\n    Date.UTC(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth(),\n      selectedDate.getDate() + 1,\n      0,\n    ),\n  )\n    .toISOString()\n    .slice(0, -1)}0000`;\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${\n      store.getState().paulyList.eventDataExtensionId\n    }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20and%20ep/value%20eq%20'schoolDay')%20and%20start/dateTime%20eq%20'${startDate}'%20and%20end/dateTime%20eq%20'${endDate}'`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      if (data.value[index].singleValueExtendedProperties !== undefined) {\n        const eventData: { id: string; value: string }[] =\n          data.value[index].singleValueExtendedProperties;\n        if (eventData !== undefined) {\n          if (\n            eventData.find(e => {\n              return e.id === eventTypeExtensionID;\n            })?.value === 'schoolDay'\n          ) {\n            const event: eventType = {\n              id: data.value[index].id,\n              name: data.value[index].subject,\n              startTime: data.value[index].start.dateTime,\n              endTime: data.value[index].end.dateTime,\n              allDay: data.value[index].isAllDay,\n              eventColor: Colors.white,\n              microsoftEvent: true,\n              microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n              paulyEventType:\n                eventData.find(e => {\n                  return e.id === eventTypeExtensionID;\n                })?.value === 'schoolDay'\n                  ? 'schoolDay'\n                  : undefined,\n              paulyEventData: eventData.find(e => {\n                return e.id === eventDataExtensionID;\n              })?.value,\n            };\n            return { result: loadingStateEnum.success, event };\n          }\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSchoolDays(date: Date): Promise<{\n  result: loadingStateEnum;\n  data?: eventType[];\n  nextLink?: string;\n}> {\n  const firstDay = `${\n    new Date(date.getFullYear(), date.getMonth(), 1)\n      .toISOString()\n      .replace(/.\\d+Z$/g, 'Z')\n      .split(/[T ]/i, 1)[0]\n  }T00:00:00.0000000`;\n  const lastDay = `${\n    new Date(date.getFullYear(), date.getMonth() + 1, 1)\n      .toISOString()\n      .replace(/.\\d+Z$/g, 'Z')\n      .split(/[T ]/i, 1)[0]\n  }T00:00:00.0000000`;\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendarView?startDateTime=${firstDay}&endDateTime=${lastDay}&$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${\n      store.getState().paulyList.eventDataExtensionId\n    }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20and%20ep/value%20eq%20'schoolDay')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const scheduleIds = new Map<string, number>();\n    const schoolYearIds = new Map<string, number>();\n    for (let index = 0; index < data.value.length; index += 1) {\n      const outputIds: schoolDayDataCompressedType = JSON.parse(\n        data.value[index].singleValueExtendedProperties.find(\n          (e: { id: string; value: string }) => {\n            return e.id === store.getState().paulyList.eventDataExtensionId;\n          },\n        ).value,\n      );\n      scheduleIds.set(outputIds.scheduleId, 0);\n      schoolYearIds.set(outputIds.schoolYearEventId, 0);\n    }\n    // Get batch data\n\n    const batchRequestResultSchedule = await batchRequest(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.scheduleListId\n      }/items?expand=fields($select=scheduleProperName,scheduleDescriptiveName,scheduleColor,scheduleData,scheduleId)&$filter=fields/scheduleId%20eq%20'`,\n      secondUrl: `'&$select=id`,\n      method: 'GET',\n      keys: {\n        map: scheduleIds,\n      },\n    });\n\n    if (\n      batchRequestResultSchedule.result !== loadingStateEnum.success ||\n      batchRequestResultSchedule.data === undefined\n    ) {\n      return { result: loadingStateEnum.failed };\n    }\n    const schedules = new Map<string, scheduleType>();\n    for (\n      let scheudleIndex = 0;\n      scheudleIndex < batchRequestResultSchedule.data.length;\n      scheudleIndex += 1\n    ) {\n      if (batchRequestResultSchedule.data[scheudleIndex].status === 200) {\n        // TO DO fix status code\n        if (\n          batchRequestResultSchedule.data[scheudleIndex].body.value.length === 1\n        ) {\n          const scheduleResponseData =\n            batchRequestResultSchedule.data[scheudleIndex].body.value[0].fields;\n          try {\n            schedules.set(scheduleResponseData.scheduleId, {\n              properName: scheduleResponseData.scheduleProperName,\n              descriptiveName: scheduleResponseData.scheduleDescriptiveName,\n              periods: JSON.parse(scheduleResponseData.scheduleData),\n              id: scheduleResponseData.scheduleId,\n              color: scheduleResponseData.scheduleColor,\n            });\n          } catch {\n            return { result: loadingStateEnum.failed };\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n\n    const timetableResult = await getTimetablesFromSchoolYears(\n      schoolYearIds,\n      schedules,\n    );\n    if (\n      timetableResult.result !== loadingStateEnum.success ||\n      timetableResult.data === undefined\n    ) {\n      return { result: loadingStateEnum.failed };\n    }\n\n    const schoolDaysResult: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const outputIds: schoolDayDataCompressedType = JSON.parse(\n        data.value[index].singleValueExtendedProperties.find(\n          (e: { id: string; value: string }) => {\n            return e.id === store.getState().paulyList.eventDataExtensionId;\n          },\n        ).value,\n      );\n      const schedule = schedules.get(outputIds.scheduleId);\n      const timetable = timetableResult.data.get(outputIds.schoolYearEventId);\n      const dressCode = timetable?.dressCode.dressCodeData.find(e => {\n        return e.id === outputIds.dressCodeId;\n      });\n      const schoolDay = timetable?.days.find(e => {\n        return e.id === outputIds.schoolDayId;\n      });\n      if (\n        schedule !== undefined &&\n        timetable !== undefined &&\n        dressCode !== undefined &&\n        schoolDay !== undefined\n      ) {\n        schoolDaysResult.push({\n          id: data.value[index].id,\n          name: data.value[index].subject,\n          startTime: data.value[index].start.dateTime,\n          endTime: data.value[index].end.dateTime,\n          eventColor: schedule.color,\n          microsoftEvent: true,\n          allDay: !!data.value[index].isAllDay,\n          schoolDayData: {\n            schoolDayData: schoolDay,\n            schedule,\n            dressCode,\n            semester: outputIds.semester,\n            dressCodeIncentiveId: outputIds.dressCodeIncentiveId,\n          },\n        });\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: schoolDaysResult,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// This function gets both school years and their timetable data\nasync function getTimetablesFromSchoolYears(\n  schoolYearIds: Map<string, number>,\n  schedules: Map<string, scheduleType>,\n): Promise<{ result: loadingStateEnum; data?: Map<string, timetableType> }> {\n  // Get School Years\n  const batchRequestResultSchoolYear = await batchRequest(undefined, {\n    firstUrl: `/groups/${orgWideGroupID}/calendar/events/`,\n    secondUrl: `?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${store.getState().paulyList.eventDataExtensionId}')`,\n    method: 'GET',\n    keys: {\n      map: schoolYearIds,\n    },\n  });\n\n  if (\n    batchRequestResultSchoolYear.data === undefined ||\n    batchRequestResultSchoolYear.result !== loadingStateEnum.success\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const timetableIds = new Map<string, string[]>();\n  for (\n    let schoolYearIndex = 0;\n    schoolYearIndex < batchRequestResultSchoolYear.data.length;\n    schoolYearIndex += 1\n  ) {\n    if (batchRequestResultSchoolYear.data[schoolYearIndex].status === 200) {\n      // TO DO fix status code\n      const schoolYearResponseData: { id: string; value: string }[] =\n        batchRequestResultSchoolYear.data[schoolYearIndex].body\n          .singleValueExtendedProperties;\n      const schoolYearData = schoolYearResponseData.find(e => {\n        return e.id === store.getState().paulyList.eventDataExtensionId;\n      });\n      if (schoolYearData !== undefined) {\n        try {\n          const perviousTimetable = timetableIds.get(schoolYearData.value);\n          if (perviousTimetable !== undefined) {\n            timetableIds.set(schoolYearData.value, [\n              ...perviousTimetable,\n              batchRequestResultSchoolYear.data[schoolYearIndex].body.id,\n            ]);\n          } else {\n            timetableIds.set(schoolYearData.value, [\n              batchRequestResultSchoolYear.data[schoolYearIndex].body.id,\n            ]);\n          }\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  // Get timetables\n  const batchRequestResultTimetable = await batchRequest(undefined, {\n    firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n      store.getState().paulyList.timetablesListId\n    }/items?expand=fields($select=timetableName,timetableId,timetableDataDays,timetableDataSchedules,timetableDefaultScheduleId,timetableDressCodeId)&$filter=fields/timetableId%20eq%20'`,\n    secondUrl: `'&$select=id`,\n    method: 'GET',\n    keys: {\n      map: timetableIds,\n    },\n  });\n\n  if (\n    batchRequestResultTimetable.result !== loadingStateEnum.success ||\n    batchRequestResultTimetable.data === undefined\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const dressCodeIds = new Map<string, number>();\n  for (\n    let responseIndex = 0;\n    responseIndex < batchRequestResultTimetable.data.length;\n    responseIndex += 1\n  ) {\n    if (\n      batchRequestResultTimetable.data[responseIndex].status === 200 &&\n      batchRequestResultTimetable.data[responseIndex] !== undefined\n    ) {\n      // TO DO fix status code\n      if (\n        batchRequestResultTimetable.data[responseIndex].body.value.length === 1\n      ) {\n        try {\n          dressCodeIds.set(\n            batchRequestResultTimetable.data[responseIndex].body.value[0].fields\n              .timetableDressCodeId,\n            0,\n          );\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  // Get dress code data\n  const batchRequestResultDressCode = await batchRequest(undefined, {\n    firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeData,dressCodeIncentivesData,dressCodeName,dressCodeId)&$select=id&$filter=fields/dressCodeId%20eq%20'`,\n    secondUrl: `'&$top=1`,\n    method: 'GET',\n    keys: {\n      map: dressCodeIds,\n    },\n  });\n\n  if (\n    batchRequestResultDressCode.data === undefined ||\n    batchRequestResultDressCode.result !== loadingStateEnum.success\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const dressCodes = new Map<string, dressCodeType>();\n  for (\n    let dressCodeIndex = 0;\n    dressCodeIndex < batchRequestResultDressCode.data.length;\n    dressCodeIndex += 1\n  ) {\n    if (\n      batchRequestResultDressCode.data[dressCodeIndex].status === 200 &&\n      batchRequestResultDressCode.data[dressCodeIndex].body !== undefined\n    ) {\n      batchRequestResultDressCode.data[dressCodeIndex].body;\n      if (\n        batchRequestResultDressCode.data[dressCodeIndex].body?.value.length ===\n        1\n      ) {\n        try {\n          dressCodes.set(\n            batchRequestResultDressCode.data[dressCodeIndex].body?.value[0]\n              .fields.dressCodeId,\n            {\n              name: batchRequestResultDressCode.data[dressCodeIndex].body\n                .value[0].fields.dressCodeName,\n              id: batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                .fields.dressCodeId,\n              dressCodeData: JSON.parse(\n                batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                  .fields.dressCodeData,\n              ),\n              dressCodeIncentives:\n                batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                  .fields.dressCodeIncentivesData,\n            },\n          );\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  const timetables = new Map<string, timetableType>();\n  for (\n    let timetableIndex = 0;\n    timetableIndex < batchRequestResultTimetable.data.length;\n    timetableIndex += 1\n  ) {\n    if (batchRequestResultTimetable.data[timetableIndex].status === 200) {\n      if (\n        batchRequestResultTimetable.data[timetableIndex].body.value.length === 1\n      ) {\n        const timetableData =\n          batchRequestResultTimetable.data[timetableIndex].body.value[0].fields;\n        const dressCode = dressCodes.get(timetableData.timetableDressCodeId);\n        const timetableSchedules: scheduleType[] = [];\n        const scheduleIds: string[] = JSON.parse(\n          timetableData.timetableDataSchedules,\n        );\n\n        for (\n          let scheduleIndex = 0;\n          scheduleIndex < scheduleIds.length;\n          scheduleIndex += 1\n        ) {\n          const newSchedule = schedules.get(scheduleIds[scheduleIndex]);\n          if (newSchedule !== undefined) {\n            timetableSchedules.push(newSchedule);\n          }\n        }\n        if (dressCode !== undefined) {\n          timetables.set(timetableData.timetableId, {\n            name: timetableData.timetableName,\n            id: timetableData.timetableId,\n            schedules: timetableSchedules,\n            days: JSON.parse(timetableData.timetableDataDays),\n            dressCode,\n          });\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  const outputTimetables = new Map<string, timetableType>();\n  timetables.forEach((value, key) => {\n    const timetablesArray = timetableIds.get(key);\n    if (timetablesArray) {\n      timetablesArray.forEach(item => {\n        outputTimetables.set(item, value);\n      });\n    }\n  });\n\n  return { result: loadingStateEnum.success, data: outputTimetables };\n}\n\nexport async function createDressCode(\n  dressCodeName: string,\n  dressCodeData: dressCodeDataType[],\n): Promise<loadingStateEnum> {\n  const dressCodeId = create_UUID();\n  const data = {\n    fields: {\n      Title: dressCodeId,\n      dressCodeId,\n      dressCodeName,\n      dressCodeData: JSON.stringify(dressCodeData),\n      dressCodeIncentivesData: '[]',\n    },\n  };\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.dressCodeListId}/items`,\n    'POST',\n    JSON.stringify(data),\n  );\n  if (result.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  MonthView.tsx\n  This is the componet used on the home page of the app\n*/\nimport React, { useEffect, useState } from 'react';\nimport { View, Text } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  findFirstDayinMonth,\n  getDay,\n  getDaysInMonth,\n} from '../Functions/calendar/calendarFunctions';\nimport { getSchoolDays } from '../Functions/calendar/calendarFunctionsGraph';\nimport { RootState } from '../Redux/store';\nimport { monthViewSlice } from '../Redux/reducers/monthViewReducer';\nimport { Colors, loadingStateEnum } from '../types';\n\nfunction MonthBlock({\n  value,\n  width,\n  height,\n  startDate,\n  daySelected,\n}: {\n  value: number;\n  width: number;\n  height: number;\n  startDate: number;\n  daySelected: number;\n}) {\n  const textval: number = getDay(value, startDate) ?? 0;\n  const day = new Date().getDate();\n  const monthViewData = useSelector((state: RootState) => state.monthView).find(\n    e => {\n      return new Date(e.startTime).getDate() === textval;\n    },\n  );\n  return (\n    <View\n      style={{\n        width,\n        height,\n        borderColor: 'black',\n        borderWidth: 2,\n      }}\n      id=\"This\"\n    >\n      {value >= startDate - 1 && value <= daySelected && textval !== 0 ? (\n        <View\n          style={{\n            width,\n            position: 'absolute',\n            height,\n            borderColor: 'black',\n            backgroundColor:\n              day == textval\n                ? 'red'\n                : day >= textval + 1\n                ? 'gray'\n                : monthViewData !== undefined\n                ? monthViewData.eventColor\n                : Colors.white,\n          }}\n        />\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.white,\n            width,\n            height,\n          }}\n        />\n      )}\n      {textval >= 1 ? (\n        <View\n          id=\"Text\"\n          style={{\n            width,\n            height,\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            position: 'absolute',\n          }}\n        >\n          {monthViewData !== undefined ? (\n            <>\n              {monthViewData.schoolDayData !== undefined ? (\n                <>\n                  <Text\n                    style={{\n                      color: 'black',\n                      fontSize: 10,\n                      fontWeight: 'bold',\n                      position: 'absolute',\n                      top: 1,\n                      right: 3,\n                    }}\n                  >\n                    {monthViewData.schoolDayData.schoolDayData.shorthand}\n                  </Text>\n                  <Text style={{ color: 'black' }}>{textval}</Text>\n                </>\n              ) : (\n                <Text style={{ color: 'black', zIndex: 2 }}>{textval}</Text>\n              )}\n            </>\n          ) : (\n            <Text id=\"This is text\" style={{ color: 'black', zIndex: 2 }}>\n              {textval}\n            </Text>\n          )}\n        </View>\n      ) : null}\n    </View>\n  );\n}\n\nexport default function MonthView({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const Count = getDaysInMonth(new Date());\n  const StartDate = findFirstDayinMonth(new Date());\n  const [daySelected, setDaySelected] = useState<number>(\n    Count + StartDate - 2 - (Count / 7) * 2,\n  );\n  const thirtyValue = [...Array(30).keys()];\n  const monthViewData = useSelector((state: RootState) => state.monthView);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    if (monthViewData.length <= 0) {\n      const result = await getSchoolDays(new Date());\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        dispatch(monthViewSlice.actions.setMonthViewData(result.data));\n      }\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        width,\n        height,\n      }}\n    >\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Monday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Tuesday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Wednesday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Thursday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Friday\n        </Text>\n      </View>\n      {thirtyValue.map((value: number) => (\n        <View\n          style={{\n            width: width * 0.2,\n            height: height * 0.145,\n            overflow: 'hidden',\n          }}\n          key={value}\n        >\n          <MonthBlock\n            value={value}\n            width={width * 0.2}\n            height={height * 0.145}\n            startDate={StartDate}\n            daySelected={daySelected}\n          />\n        </View>\n      ))}\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport callMsGraph from '../Ultility/microsoftAssets';\nimport { loadingStateEnum } from '../../types';\nimport { paulyDataSlice } from '../../Redux/reducers/paulyDataReducer';\n\nexport default async function getCurrentPaulyData() {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.paulyDataListId}/items/1/fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (\n      data.animationSpeed !== undefined &&\n      data.message !== undefined &&\n      data.powerpointId !== undefined\n    ) {\n      const fileResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/shares/${data.powerpointId}/driveItem/content?format=pdf`,\n        'GET',\n        undefined,\n        [{ key: 'Prefer', value: 'redeemSharingLink' }],\n      ); // `https://graph.microsoft.com/v1.0/shares/${data[\"powerpointId\"]}/root?$select=@microsoft.graph.downloadUrl`\n      if (fileResult.ok) {\n        const dataBlob = await fileResult.blob();\n        const urlOut = URL.createObjectURL(dataBlob);\n        const outputResult = {\n          powerpointBlob: urlOut,\n          powerpointShare: data.powerpointId,\n          message: data.message,\n          animationSpeed: data.animationSpeed,\n          paulyDataState: loadingStateEnum.success,\n        };\n        store.dispatch(paulyDataSlice.actions.setPaulyData(outputResult));\n      } else {\n        store.dispatch(\n          paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n        );\n      }\n    } else {\n      store.dispatch(\n        paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    store.dispatch(\n      paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n    );\n  }\n}\n","import { StyleSheet, ViewStyle } from 'react-native';\nimport React, { useEffect } from 'react';\nimport Svg, { G, Path } from 'react-native-svg';\nimport Animated, {\n  interpolateColor,\n  useAnimatedProps,\n  useSharedValue,\n  withDelay,\n  withRepeat,\n  withTiming,\n} from 'react-native-reanimated';\n\n// \"M7.706 0.290 C 7.484 0.362,7.356 0.490,7.294 0.699 C 7.259 0.816,7.253 1.088,7.253 2.508 C 7.253 4.389,7.251 4.365,7.443 4.557 C 7.700 4.813,8.300 4.813,8.557 4.557 C 8.749 4.365,8.747 4.389,8.747 2.508 C 8.747 0.688,8.744 0.656,8.596 0.480 C 8.472 0.333,8.339 0.284,8.040 0.276 C 7.893 0.272,7.743 0.278,7.706 0.290\"\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\n\nfunction ChipView({ d, index }: { d: string; index: number }) {\n  const progress = useSharedValue(0);\n  useEffect(() => {\n    progress.value = withDelay(\n      ((index + 1) / 8) * 1000,\n      withRepeat(withTiming(1, { duration: 500 }), 0, true),\n    );\n  }, []);\n  const animatedProp = useAnimatedProps(() => {\n    return {\n      fill: interpolateColor(progress.value, [0, 1], ['white', '#69717d']),\n    };\n  });\n\n  return (\n    <AnimatedPath\n      key={`Chip_Key_${index}`}\n      id={`Chip_${index}`}\n      d={d}\n      stroke=\"none\"\n      translate={[0]}\n      fillRule=\"evenodd\"\n      animatedProps={animatedProp}\n    />\n  );\n}\n\nexport default function ProgressView({\n  width,\n  height,\n  style,\n}: {\n  width: number;\n  height: number;\n  style?: ViewStyle;\n}) {\n  const paths = [\n    'M7.706 0.290 C 7.484 0.362,7.356 0.490,7.294 0.699 C 7.259 0.816,7.253 1.088,7.253 2.508 C 7.253 4.389,7.251 4.365,7.443 4.557 C 7.700 4.813,8.300 4.813,8.557 4.557 C 8.749 4.365,8.747 4.389,8.747 2.508 C 8.747 0.688,8.744 0.656,8.596 0.480 C 8.472 0.333,8.339 0.284,8.040 0.276 C 7.893 0.272,7.743 0.278,7.706 0.290',\n    'M2.753 2.266 C 2.595 2.338,2.362 2.566,2.281 2.728 C 2.197 2.897,2.193 3.085,2.269 3.253 C 2.343 3.418,4.667 5.750,4.850 5.843 C 5.109 5.976,5.375 5.911,5.643 5.649 C 5.907 5.391,5.977 5.111,5.843 4.850 C 5.750 4.667,3.418 2.343,3.253 2.269 C 3.101 2.200,2.901 2.199,2.753 2.266',\n    'M0.699 7.292 C 0.404 7.385,0.258 7.620,0.258 7.999 C 0.259 8.386,0.403 8.618,0.698 8.706 C 0.816 8.741,1.079 8.747,2.508 8.747 C 3.997 8.747,4.196 8.742,4.318 8.702 C 4.498 8.644,4.644 8.498,4.702 8.318 C 4.788 8.053,4.745 7.677,4.608 7.491 C 4.578 7.451,4.492 7.384,4.417 7.343 L 4.280 7.267 2.547 7.261 C 1.152 7.257,0.791 7.263,0.699 7.292',\n    'M4.853 10.282 C 4.730 10.339,4.520 10.536,3.518 11.541 C 2.597 12.464,2.316 12.762,2.271 12.860 C 2.195 13.025,2.196 13.216,2.272 13.378 C 2.342 13.528,2.572 13.764,2.727 13.845 C 2.884 13.927,3.117 13.926,3.280 13.843 C 3.447 13.757,5.757 11.447,5.843 11.280 C 5.926 11.118,5.927 10.884,5.846 10.729 C 5.764 10.572,5.552 10.364,5.392 10.283 C 5.213 10.192,5.048 10.192,4.853 10.282',\n    'M7.745 11.277 C 7.620 11.309,7.451 11.412,7.392 11.492 C 7.254 11.678,7.253 11.691,7.253 13.489 C 7.253 14.921,7.259 15.184,7.294 15.302 C 7.382 15.597,7.615 15.741,8.000 15.741 C 8.385 15.741,8.618 15.597,8.706 15.302 C 8.768 15.090,8.767 11.875,8.704 11.690 C 8.644 11.514,8.575 11.430,8.420 11.346 C 8.310 11.286,8.246 11.271,8.057 11.264 C 7.930 11.259,7.790 11.265,7.745 11.277',\n    'M10.753 10.266 C 10.595 10.338,10.362 10.566,10.281 10.728 C 10.197 10.897,10.193 11.085,10.269 11.253 C 10.343 11.418,12.667 13.750,12.850 13.843 C 13.109 13.976,13.375 13.911,13.643 13.649 C 13.907 13.391,13.977 13.111,13.843 12.850 C 13.750 12.667,11.418 10.343,11.253 10.269 C 11.101 10.200,10.901 10.199,10.753 10.266',\n    'M11.745 7.278 C 11.622 7.308,11.452 7.411,11.392 7.492 C 11.255 7.677,11.212 8.053,11.298 8.318 C 11.356 8.498,11.502 8.644,11.682 8.702 C 11.804 8.742,12.003 8.747,13.492 8.747 C 14.921 8.747,15.184 8.741,15.302 8.706 C 15.597 8.618,15.741 8.386,15.742 7.999 C 15.742 7.614,15.595 7.383,15.290 7.291 C 15.187 7.260,14.864 7.254,13.496 7.256 C 12.578 7.258,11.790 7.268,11.745 7.278',\n    'M12.853 2.282 C 12.730 2.339,12.520 2.536,11.518 3.541 C 10.597 4.464,10.316 4.762,10.271 4.860 C 10.195 5.025,10.196 5.216,10.272 5.378 C 10.342 5.528,10.572 5.764,10.727 5.845 C 10.884 5.927,11.117 5.926,11.280 5.843 C 11.447 5.757,13.757 3.447,13.843 3.280 C 13.926 3.118,13.927 2.884,13.846 2.729 C 13.764 2.572,13.552 2.364,13.392 2.283 C 13.213 2.192,13.048 2.192,12.853 2.282',\n  ];\n\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        {paths.map((path, index) => (\n          <ChipView key={`Chip_Key_Holder_${index}`} d={path} index={index} />\n        ))}\n      </G>\n    </Svg>\n  );\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n  },\n});\n","import { View, Text, Animated, Easing, Platform } from 'react-native';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Colors } from '../types';\n\nexport default function ScrollingTextAnimation({\n  text,\n  width,\n  height,\n}: {\n  text: string;\n  width: number;\n  height: number;\n}) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [childWidth, setChildWidth] = useState<number>(0);\n  function mainLoop(childWidth: number) {\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(pan, {\n          toValue: -childWidth,\n          duration: 5000,\n          delay: 0,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        }),\n        Animated.timing(pan, {\n          toValue: 0,\n          duration: 0,\n          delay: 0,\n          useNativeDriver: false,\n        }),\n      ]),\n    ).start();\n  }\n\n  useEffect(() => {\n    if (childWidth !== 0) {\n      mainLoop(childWidth);\n    }\n  }, [childWidth]);\n\n  // Font\n  const [fontsLoaded] = useFonts({\n    GochiHand: require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View style={{ width, height, overflow: 'hidden' }}>\n      {childWidth !== 0 ? (\n        <Animated.View style={{ transform: [{ translateX: pan }] }}>\n          <View\n            style={{\n              width: childWidth + childWidth * 0.01,\n              height,\n              overflow: 'hidden',\n              position: 'absolute',\n              left: childWidth + childWidth * 0.01,\n            }}\n          >\n            <Text\n              style={{\n                fontFamily: 'GochiHand',\n                color: Colors.white,\n                fontSize: height,\n                height,\n              }}\n            >\n              {text}\n            </Text>\n          </View>\n          <View\n            style={{\n              width: childWidth + childWidth * 0.01,\n              height,\n              position: 'absolute',\n              left: 0,\n            }}\n          >\n            <Text\n              style={{\n                fontFamily: 'GochiHand',\n                color: Colors.white,\n                fontSize: height,\n                height,\n                position: 'absolute',\n              }}\n            >\n              {text}\n            </Text>\n          </View>\n        </Animated.View>\n      ) : (\n        <ScrollView style={{ width: 99999999 }} horizontal>\n          <Text\n            numberOfLines={1}\n            onLayout={e => {\n              setChildWidth(e.nativeEvent.layout.width);\n            }}\n            adjustsFontSizeToFit={!(Platform.OS === 'ios')}\n            style={{\n              fontFamily: 'GochiHand',\n              color: Colors.white,\n              fontSize: height,\n              height,\n            }}\n          >\n            {text}\n          </Text>\n        </ScrollView>\n      )}\n    </View>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useEffect, useCallback } from 'react';\nimport { View, Text, Image, Pressable } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useNavigate } from 'react-router-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MonthView from './MonthView';\nimport store, { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport getCurrentPaulyData from '../Functions/homepage/getCurrentPaulyData';\nimport ProgressView from '../UI/ProgressView';\nimport { BookIcon, MedalIcon, PersonIcon } from '../UI/Icons/Icons';\nimport ScrollingTextAnimation from '../UI/ScrollingTextAnimation';\nimport { Colors, loadingStateEnum } from '../types';\n\nexport default function HomePage() {\n  const navigate = useNavigate();\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const authenticationToken = useSelector(\n    (state: RootState) => state.authenticationToken,\n  );\n  const { message, paulyDataState } = useSelector(\n    (state: RootState) => state.paulyData,\n  );\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const dispatch = useDispatch();\n  const insets = useSafeAreaInsets();\n\n  async function loadData() {\n    await getCurrentPaulyData();\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.maroon,\n        bottom: Colors.maroon,\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    if (\n      store.getState().authenticationToken !== '' &&\n      store.getState().paulyList.siteId !== ''\n    ) {\n      loadData();\n    }\n  }, [authenticationToken, siteId]);\n\n  useEffect(() => {\n    if (currentBreakPoint > 0) {\n      navigate('/notifications');\n    }\n  }, [currentBreakPoint]);\n\n  // Font\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n    GochiHand: require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ backgroundColor: Colors.maroon, overflow: 'hidden' }}>\n        <Pressable\n          style={{ width: width * 1.0, height: height * 0.08 }}\n          onPress={() => {\n            navigate('/notifications');\n          }}\n        >\n          {paulyDataState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width: width * 1.0,\n                height: height * 0.08,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={width < height * 0.08 ? width * 0.1 : height * 0.07}\n                height={width < height * 0.08 ? width * 0.1 : height * 0.07}\n              />\n            </View>\n          ) : (\n            <>\n              {paulyDataState === loadingStateEnum.success ? (\n                <>\n                  {message !== '' ? (\n                    <ScrollingTextAnimation\n                      width={width * 1.0}\n                      height={height * 0.08}\n                      text={message}\n                    />\n                  ) : null}\n                </>\n              ) : (\n                <Text>Failed</Text>\n              )}\n            </>\n          )}\n        </Pressable>\n        <Pressable\n          onPress={() => {\n            navigate('/calendar');\n          }}\n          style={{ width: width * 0.999, height: height * 0.42 }}\n        >\n          <View>\n            <View\n              style={{\n                width: width * 1.0,\n                height: height * 0.05,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n                borderTopColor: 'black',\n                borderTopWidth: 2,\n                borderBottomColor: 'black',\n                borderBottomWidth: 2,\n              }}\n            >\n              <Text style={{ margin: 'auto', color: Colors.white }}>\n                Calendar\n              </Text>\n            </View>\n            <MonthView width={width * 1.0} height={height * 0.37} />\n          </View>\n        </Pressable>\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 1.0,\n            height: height * 0.25,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/commissions');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                  zIndex: 1,\n                }}\n              />\n              <MedalIcon\n                width={width * 0.5}\n                height={height * 0.23}\n                style={{ position: 'absolute', top: height * 0.01, zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              navigate('/sports');\n            }}\n            style={{ borderColor: 'black', borderWidth: 2 }}\n          >\n            <View\n              style={{\n                backgroundColor: Colors.maroon,\n                width: width * 0.5,\n                height: height * 0.25,\n                borderTopWidth: 1,\n                borderTopColor: 'black',\n                zIndex: 1,\n              }}\n            />\n            <Image\n              source={require('../../assets/images/Football.png')}\n              resizeMode=\"contain\"\n              width={width * 0.3}\n              height={height * 0.25}\n              style={{\n                zIndex: 2,\n                height: height * 0.25,\n                width: width * 0.5,\n                position: 'absolute',\n                aspectRatio: '1/1',\n              }}\n            />\n          </Pressable>\n        </View>\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 1.0,\n            height: height * 0.25,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/resources');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                  zIndex: 1,\n                }}\n              />\n              <BookIcon\n                width={width * 0.5}\n                height={height * 0.25}\n                style={{ position: 'absolute', zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              navigate('/profile');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                }}\n              />\n              <PersonIcon\n                width={width * 0.5}\n                height={height * 0.25}\n                style={{ position: 'absolute', zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n        </View>\n      </View>\n      <View\n        style={{\n          position: 'absolute',\n          backgroundColor: 'black',\n          width: 4,\n          left: width / 2 + 2,\n          bottom: -insets.bottom,\n          height: insets.bottom,\n        }}\n      />\n    </>\n  );\n}\n","import * as Location from 'expo-location';\nimport { getDistance } from 'geolib';\nimport { locationStateEnum } from '../../types';\n\nexport default async function getUsersLocation(\n  commission: commissionType,\n): Promise<{ result: locationStateEnum; data?: locationCoords }> {\n  const { status } = await Location.requestForegroundPermissionsAsync();\n  if (status !== 'granted') {\n    return { result: locationStateEnum.permissionDenied };\n  }\n\n  const location = await Location.getCurrentPositionAsync();\n  if (!location.mocked) {\n    if (\n      commission.coordinateLat !== undefined &&\n      commission.coordinateLng !== undefined &&\n      commission.proximity !== undefined\n    ) {\n      const prox = getDistance(\n        { lat: location.coords.latitude, lng: location.coords.longitude },\n        {\n          latitude: commission?.coordinateLat,\n          longitude: commission?.coordinateLng,\n        },\n      );\n      if (prox <= commission.proximity) {\n        return {\n          result: locationStateEnum.success,\n          data: {\n            latCoordinate: location.coords.latitude,\n            lngCoordinate: location.coords.longitude,\n          },\n        };\n      }\n      return { result: locationStateEnum.notCloseEnough };\n    }\n  } else {\n    return { result: locationStateEnum.mockedLocation };\n  }\n  return { result: locationStateEnum.notStarted };\n}\n","import { orgWideGroupID } from '../../PaulyConfig';\nimport { loadingStateEnum } from '../../types';\nimport create_UUID from '../Ultility/createUUID';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nasync function b64toBlob(\n  b64Data: string,\n  contentType = '',\n  sliceSize = 512,\n): Promise<Blob | undefined> {\n  const result = await fetch(b64Data);\n  if (result.ok) {\n    return await result.blob();\n  }\n  return undefined;\n}\n\nexport async function addImage(\n  base64: string,\n): Promise<{ result: loadingStateEnum; data?: string }> {\n  const fileBlob = await b64toBlob(base64);\n  if (fileBlob !== undefined) {\n    const types: any = {\n      'image/bmp': '.bmp',\n      'image/gif': '.gif',\n      'image/jpeg': '.jpg',\n      'image/png': '.png',\n      'image/webp': '.webp',\n    };\n    if (types[fileBlob.type] !== undefined) {\n      const rootIdResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/me/drive/root?$select=id',\n      );\n      if (rootIdResult.ok) {\n        const rootIdData = await rootIdResult.json();\n        const imageUUID = create_UUID();\n        const resumableSessionData = {\n          item: {\n            '@microsoft.graph.conflictBehavior': 'rename',\n            name: `Pauly_Image_${imageUUID}_Submission${types[fileBlob.type]}`,\n          },\n          deferCommit: true,\n        };\n        const resumableSessionResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/me/drive/items/${\n            rootIdData.id\n          }:/Pauly_Image_${imageUUID}_Submission${\n            types[fileBlob.type]\n          }:/createUploadSession`,\n          'POST',\n          JSON.stringify(resumableSessionData),\n        );\n        if (resumableSessionResult.ok) {\n          const resumableSessionResultData =\n            await resumableSessionResult.json();\n          const { uploadUrl } = resumableSessionResultData;\n          if (resumableSessionResultData.nextExpectedRanges.length === 1) {\n            const nextExpectedRange: string =\n              resumableSessionResultData.nextExpectedRanges[0];\n            let remaining: number = fileBlob.size;\n            let uploaded: number = 0;\n            if (nextExpectedRange === `${uploaded}-`) {\n              while (remaining > 0) {\n                // TO DO Check that this works\n                const uploadBlob = fileBlob.slice(\n                  uploaded,\n                  remaining >= 5242880 ? 5242880 : remaining,\n                );\n                uploaded += remaining >= 5242880 ? 5242880 : remaining;\n\n                const uploadResult = await fetch(uploadUrl, {\n                  headers: {\n                    'Content-Length': uploadBlob.size.toString(),\n                    'Content-Range': `bytes ${\n                      uploaded - (remaining >= 5242880 ? 5242880 : remaining)\n                    }-${remaining >= 5242880 ? uploaded : uploaded - 1}/${\n                      fileBlob.size\n                    }`,\n                  },\n                  method: 'PUT',\n                  body: uploadBlob,\n                });\n                remaining -= remaining >= 5242880 ? 5242880 : remaining;\n                if (uploadResult.ok) {\n                } else {\n                  return { result: loadingStateEnum.failed };\n                }\n              }\n              const uploadCompleteResult = await fetch(uploadUrl, {\n                headers: {\n                  'Content-Length': '0',\n                },\n                method: 'POST',\n              });\n              if (uploadCompleteResult.ok) {\n                const uploadCompleteResultData =\n                  await uploadCompleteResult.json();\n                const createLinkMainData = {\n                  type: 'view',\n                  scope: 'organization',\n                };\n                const createLinkResult = await callMsGraph(\n                  `https://graph.microsoft.com/v1.0/me/drive/items/${uploadCompleteResultData.id}/createLink`,\n                  'POST',\n                  JSON.stringify(createLinkMainData),\n                );\n                if (createLinkResult.ok) {\n                  const createLinkData = await createLinkResult.json();\n                  return {\n                    result: loadingStateEnum.success,\n                    data: createLinkData.shareId,\n                  };\n                }\n                return { result: loadingStateEnum.failed };\n              }\n              return { result: loadingStateEnum.failed };\n            }\n            return { result: loadingStateEnum.failed };\n          }\n          return { result: loadingStateEnum.failed };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function claimCommissionPost(\n  auth: string,\n  commissionId: string,\n  imageShare?: string,\n  location?: locationCoords,\n): Promise<loadingStateEnum> {\n  let outResult: string = '';\n  if (location) {\n    outResult += `&latCoordinate=${location.latCoordinate}&lngCoordinate=${location.lngCoordinate}`;\n  }\n  if (imageShare) {\n    outResult += `&imageShare=${imageShare}`;\n  }\n  const bearer = `Bearer ${auth}`;\n  try {\n    const result = await fetch(\n      `http://localhost:7071/api/SubmitCommission?orgWideGroupId=${orgWideGroupID}&commissionId=${commissionId}${outResult}`,\n      {\n        headers: {\n          Authorization: bearer,\n        },\n      },\n    );\n    if (result.ok) {\n      return loadingStateEnum.success;\n    }\n    return loadingStateEnum.failed;\n  } catch {\n    return loadingStateEnum.failed;\n  }\n}\n","import { useMsal } from '@azure/msal-react';\nimport React, { useState } from 'react';\nimport { Pressable, View, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport { clientId } from '../../PaulyConfig';\nimport getUsersLocation from '../../Functions/commissions/getLocation';\nimport {\n  addImage,\n  claimCommissionPost,\n} from '../../Functions/commissions/claimCommissionsFunctions';\nimport {\n  commissionTypeEnum,\n  loadingStateEnum,\n  locationStateEnum,\n} from '../../types';\nimport ProgressView from '../../UI/ProgressView';\n\nexport default function CommissionClaim({\n  commission,\n  imageData,\n}: {\n  commission: commissionType;\n  imageData?: string;\n}) {\n  const [claimCommissionState, setClaimCommissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const { instance } = useMsal();\n\n  async function claimCommission() {\n    setClaimCommissionState(loadingStateEnum.loading);\n    const apiResult = await instance.acquireTokenSilent({\n      scopes: [`api://${clientId}/api/Test`],\n    });\n    let outImageUrl: string = '';\n    if (\n      (commission.value === commissionTypeEnum.Image ||\n        commission.value === commissionTypeEnum.ImageLocation) &&\n      imageData !== undefined\n    ) {\n      const outImage = await addImage(imageData);\n      if (\n        outImage.result === loadingStateEnum.success &&\n        outImage.data !== undefined\n      ) {\n        outImageUrl = outImage.data;\n      } else {\n        setClaimCommissionState(loadingStateEnum.failed);\n        return;\n      }\n    }\n    if (\n      commission.value === commissionTypeEnum.ImageLocation ||\n      commission.value === commissionTypeEnum.Location\n    ) {\n      const locationResult = await getUsersLocation(commission);\n      if (\n        locationResult.result === locationStateEnum.success &&\n        locationResult.data !== undefined\n      ) {\n        const result = await claimCommissionPost(\n          apiResult.accessToken,\n          commission.commissionId,\n          outImageUrl !== '' ? outImageUrl : undefined,\n          locationResult.data,\n        );\n        setClaimCommissionState(result);\n      } else {\n        setClaimCommissionState(loadingStateEnum.failed);\n      }\n    } else {\n      const result = await claimCommissionPost(\n        apiResult.accessToken,\n        commission.commissionId,\n        outImageUrl !== '' ? outImageUrl : undefined,\n        undefined,\n      );\n      setClaimCommissionState(result);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => {\n        claimCommission();\n      }}\n      style={{\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: '#ededed',\n        width: width * 0.7,\n        borderRadius: 15,\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {claimCommissionState === loadingStateEnum.loading ? (\n        <View style={{ margin: 10 }}>\n          <ProgressView width={24} height={24} />\n        </View>\n      ) : (\n        <Text style={{ margin: 10, fontWeight: 'bold' }}>\n          {claimCommissionState === loadingStateEnum.notStarted\n            ? 'CLAIM COMMISSION'\n            : claimCommissionState === loadingStateEnum.success\n            ? 'SUBMISSION SENT'\n            : 'FAILED TO SEND SUBMISSION'}\n        </Text>\n      )}\n    </Pressable>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nexport default async function getCommission(\n  commissionId: string,\n): Promise<{ result: loadingStateEnum; data?: commissionType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.commissionListId\n    }/items?expand=fields&$filter=fields/commissionID%20eq%20'${commissionId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== 1) {\n      // Not found\n      return { result: loadingStateEnum.failed };\n    }\n    const dataResult: commissionType = {\n      itemId: data.value[0].id,\n      title: data.value[0].fields.Title,\n      startDate: data.value[0].fields.startDate,\n      endDate: data.value[0].fields.endDate,\n      points: data.value[0].fields.points,\n      hidden: data.value[0].fields.hidden,\n      commissionId: data.value[0].fields.commissionID,\n      proximity: data.value[0].fields.proximity,\n      coordinateLat: data.value[0].fields.coordinateLat,\n      coordinateLng: data.value[0].fields.coordinateLng,\n      postData: {\n        teamId: data.value[0].fields.postTeamId,\n        channelId: data.value[0].fields.postChannelId,\n        postId: data.value[0].fields.postId,\n      },\n      timed: false,\n      maxNumberOfClaims: 0,\n      allowMultipleSubmissions: false,\n      value: data.value[0].fields.value - 1,\n      submissionsCount: 0,\n      claimCount: 0,\n      reviewedCount: 0,\n    };\n    return { result: loadingStateEnum.success, data: dataResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Platform } from 'react-native';\nimport React, { useState } from 'react';\nimport WebView from 'react-native-webview';\n\nexport default function WebViewCross({\n  html,\n  width,\n}: {\n  html: string | undefined;\n  width: number;\n}) {\n  const jsCode =\n    \"window.ReactNativeWebView.postMessage(document.getElementById('pauly-main').clientHeight)\";\n  // document.getElementById('pauly-main').innerHTML\n  const [height, setHeight] = useState<number>(0);\n  return (\n    <>\n      {html !== undefined ? (\n        <>\n          {Platform.OS !== 'web' ? (\n            <WebView\n              source={{\n                html: `<!DOCTYPE html>\n              <html>\n              <head>\n                <style>\n                  body {font-weight: normal; font-family: Arial; font-size: 55px}\n                  div {font-weight: normal; font-family: Arial}\n                </style>\n              </head>\n              <body>\n                <div id=\"pauly-main\">\n                  ${html}\n                </div>\n              </body>\n              </html>`,\n              }}\n              style={{ margin: 10, height: height + 10, width }}\n              automaticallyAdjustContentInsets={false}\n              javaScriptEnabled\n              injectedJavaScript={jsCode}\n              onMessage={event =>\n                setHeight(parseFloat(event.nativeEvent.data) / 3)\n              }\n            />\n          ) : (\n            <View style={{ margin: 10 }}>\n              <div dangerouslySetInnerHTML={{ __html: html }} />\n            </View>\n          )}\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { View, Text, Pressable, Image } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport CommissionClaim from './CommissionClaim';\nimport getCommission from '../../Functions/commissions/getCommission';\nimport callMsGraph from '../../Functions/Ultility/microsoftAssets';\nimport ProgressView from '../../UI/ProgressView';\nimport { CloseIcon } from '../../UI/Icons/Icons';\nimport WebViewCross from '../../UI/WebViewCross';\nimport { Colors, commissionTypeEnum, loadingStateEnum } from '../../types';\n\nenum CameraResult {\n  notStarted,\n  loading,\n  success,\n  permissionDenied,\n  goToSettings,\n  failed,\n}\n\nexport default function CommissionsView({\n  id,\n  onClose,\n}: {\n  id: string;\n  onClose: () => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [commissionData, setCommissionData] = useState<\n    commissionType | undefined\n  >(undefined);\n  const [commissionState, setCommissionState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [messageState, setMessageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [messageData, setMessageData] = useState<string>('');\n  const [imageUri, setImageUri] = useState<string>('');\n  const [takeImageState, setTakeImageState] = useState<CameraResult>(\n    CameraResult.notStarted,\n  );\n  const [pickImageState, setPickerImageState] = useState<CameraResult>(\n    CameraResult.notStarted,\n  );\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const [evaluatedOverflow, setEvaluatedOverflow] = useState<boolean>(false);\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function getPost(teamId: string, channelId: string, messageId: string) {\n    setMessageState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages/${messageId}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      setMessageData(data.body.content);\n      setMessageState(loadingStateEnum.success);\n    } else {\n      setMessageState(loadingStateEnum.failed);\n    }\n  }\n\n  async function getCommissionInformation() {\n    const result = await getCommission(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCommissionData(result.data);\n      if (result.data?.postData !== undefined) {\n        getPost(\n          result.data.postData.teamId,\n          result.data.postData.channelId,\n          result.data.postData.postId,\n        );\n      }\n    }\n    setCommissionState(result.result);\n  }\n\n  async function pickImage() {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsMultipleSelection: false,\n      allowsEditing: false,\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n    });\n    if (!result.canceled) {\n      if (result.assets.length === 1) {\n        setImageUri(result.assets[0].uri);\n        Image.getSize(\n          result.assets[0].uri,\n          (imageMeasureWidth, imageMeasureHeight) => {\n            const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n            setImageHeight(width * 0.7 * heightPerWidth);\n          },\n        );\n        setPickerImageState(CameraResult.success);\n      } else {\n        setPickerImageState(CameraResult.failed);\n      }\n    } else {\n      setPickerImageState(CameraResult.notStarted);\n    }\n  }\n  const [status, requestPermission] = ImagePicker.useCameraPermissions();\n\n  async function takeImage() {\n    setTakeImageState(CameraResult.loading);\n    if (status?.status === ImagePicker.PermissionStatus.GRANTED) {\n      const result = await ImagePicker.launchCameraAsync({\n        allowsEditing: false,\n        allowsMultipleSelection: false,\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      });\n      if (!result.canceled) {\n        if (result.assets.length === 1) {\n          setImageUri(result.assets[0].uri);\n          Image.getSize(\n            result.assets[0].uri,\n            (imageMeasureWidth, imageMeasureHeight) => {\n              const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n              setImageHeight(width * 0.7 * heightPerWidth);\n            },\n          );\n          setTakeImageState(CameraResult.success);\n        } else {\n          setTakeImageState(CameraResult.failed);\n        }\n      } else {\n        setTakeImageState(CameraResult.notStarted);\n      }\n    } else if (status?.canAskAgain) {\n      const permissionResult = await requestPermission();\n      if (permissionResult.granted) {\n        takeImage();\n      } else {\n        setTakeImageState(CameraResult.permissionDenied);\n      }\n    } else {\n      setTakeImageState(CameraResult.goToSettings);\n    }\n  }\n\n  useEffect(() => {\n    getCommissionInformation();\n  }, [id]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        width: width * 0.9,\n        height: height * 0.8,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n      }}\n    >\n      {commissionState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            height: height * 0.8,\n            width: width * 0.9,\n            alignItems: 'center',\n            justifyContent: 'center',\n            alignContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width * 0.8 < height * 0.7 ? width * 0.4 : height * 0.35}\n            height={width * 0.8 < height * 0.7 ? width * 0.4 : height * 0.35}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {commissionState === loadingStateEnum.success &&\n          commissionData !== undefined ? (\n            <View>\n              <View style={{ height: height * 0.1, overflow: 'hidden' }}>\n                <Pressable\n                  onPress={() => onClose()}\n                  style={{ marginTop: 10, marginLeft: 10 }}\n                >\n                  <CloseIcon\n                    width={width < height ? width * 0.05 : height * 0.05}\n                    height={width < height ? width * 0.05 : height * 0.05}\n                  />\n                </Pressable>\n                <View\n                  style={{\n                    width: width * 0.9,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Text style={{ fontSize: height * 0.03 }}>\n                    Commission: {commissionData.title}\n                  </Text>\n                </View>\n              </View>\n              <ScrollView\n                style={{ height: isOverflowing ? height * 0.6 : height * 0.7 }}\n              >\n                <View\n                  onLayout={e => {\n                    if (e.nativeEvent.layout.height >= height * 0.6) {\n                      setIsOverflowing(true);\n                      setEvaluatedOverflow(true);\n                    } else if (!evaluatedOverflow) {\n                      setIsOverflowing(false);\n                    }\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: 'row',\n                      margin: 10,\n                      backgroundColor: Colors.maroon,\n                      borderRadius: 15,\n                      shadowOffset: { width: 2, height: 3 },\n                    }}\n                  >\n                    <View style={{ margin: 10, flexDirection: 'row' }}>\n                      <Image\n                        source={require('../../../assets/images/PaulyLogo.png')}\n                        resizeMode=\"contain\"\n                        style={{ width: 50, height: 50 }}\n                      />\n                      <Text\n                        style={{\n                          fontSize: 45,\n                          color: Colors.white,\n                          fontFamily: 'BukhariScript',\n                          width: 100,\n                          paddingLeft: 10,\n                        }}\n                      >\n                        {commissionData.points}\n                      </Text>\n                    </View>\n                  </View>\n                  <View style={{ marginLeft: width * 0.05 }}>\n                    <WebViewCross html={messageData} width={width * 0.7} />\n                  </View>\n                  {commissionData.value === commissionTypeEnum.Image ||\n                  commissionData.value === commissionTypeEnum.ImageLocation ? (\n                    <>\n                      {imageUri !== '' ? (\n                        <Image\n                          source={{ uri: imageUri }}\n                          width={width * 0.7}\n                          resizeMode=\"center\"\n                          style={{\n                            width: width * 0.7,\n                            height: imageHeight,\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: '#FFFFFF',\n                            shadowOffset: { width: 0, height: 1 },\n                            shadowOpacity: 0.8,\n                            shadowRadius: 10,\n                            borderRadius: 15,\n                          }}\n                        />\n                      ) : (\n                        <View\n                          style={{\n                            width: width * 0.7,\n                            height: height * 0.3,\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: '#FFFFFF',\n                            shadowOffset: { width: 0, height: 1 },\n                            shadowOpacity: 0.8,\n                            shadowRadius: 10,\n                            borderRadius: 15,\n                          }}\n                        >\n                          <Text>No Photo Selected</Text>\n                        </View>\n                      )}\n                      <Pressable\n                        onPress={() => takeImage()}\n                        style={{\n                          marginLeft: 'auto',\n                          marginRight: 'auto',\n                          marginTop: 15,\n                          backgroundColor: '#ededed',\n                          width: width * 0.7,\n                          borderRadius: 15,\n                          alignItems: 'center',\n                          alignContent: 'center',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        {takeImageState === CameraResult.loading ? (\n                          <ProgressView\n                            width={14}\n                            height={14}\n                            style={{ margin: 10 }}\n                          />\n                        ) : (\n                          <Text style={{ margin: 10, fontWeight: 'bold' }}>\n                            {takeImageState === CameraResult.notStarted\n                              ? 'TAKE PHOTO'\n                              : takeImageState === CameraResult.goToSettings\n                              ? 'Go To Settings And Give Camera Permissions'\n                              : takeImageState === CameraResult.permissionDenied\n                              ? 'Permission Denied'\n                              : takeImageState === CameraResult.success\n                              ? 'TAKE DIFFERENT PHOTO'\n                              : 'AN ERROR OCCURED'}\n                          </Text>\n                        )}\n                      </Pressable>\n                      <Pressable\n                        onPress={() => pickImage()}\n                        style={{\n                          marginLeft: 'auto',\n                          marginRight: 'auto',\n                          marginTop: 10,\n                          backgroundColor: '#ededed',\n                          width: width * 0.7,\n                          borderRadius: 15,\n                          alignItems: 'center',\n                          alignContent: 'center',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        {pickImageState === CameraResult.loading ? (\n                          <ProgressView\n                            width={14}\n                            height={14}\n                            style={{ margin: 10 }}\n                          />\n                        ) : (\n                          <Text style={{ margin: 10, fontWeight: 'bold' }}>\n                            {pickImageState === CameraResult.notStarted\n                              ? 'CHOOSE PHOTO'\n                              : pickImageState === CameraResult.permissionDenied\n                              ? 'Permission Denied'\n                              : pickImageState === CameraResult.success\n                              ? 'USE A DIFFERENT PHOTO'\n                              : 'AN ERROR OCCURED'}\n                          </Text>\n                        )}\n                      </Pressable>\n                    </>\n                  ) : null}\n                  {isOverflowing ? null : (\n                    <View style={{ marginTop: 10, marginBottom: 10 }}>\n                      <CommissionClaim commission={commissionData} />\n                    </View>\n                  )}\n                </View>\n              </ScrollView>\n              {isOverflowing ? (\n                <View\n                  style={{\n                    height: height * 0.1,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <CommissionClaim\n                    commission={commissionData}\n                    imageData={imageUri !== '' ? imageUri : undefined}\n                  />\n                </View>\n              ) : null}\n            </View>\n          ) : (\n            <View>\n              <Text>Something Went Wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\n// Gets points when given an array of commission ids\nasync function getPointsBatch(\n  commissions: string[],\n): Promise<{ result: loadingStateEnum; points: number }> {\n  const outputRequests: { id: string; method: string; url: string }[] = [];\n  for (let index = 0; index < commissions.length; index += 1) {\n    outputRequests.push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?$expand=fields&$filter=fields/commissionID%20eq%20'${\n        commissions[index]\n      }' `,\n      // ?$expand=fields&$filter=fields/commissionID%20eq%20'${commissions[index]}'\n    });\n  }\n  const batchData = {\n    requests: outputRequests,\n  };\n\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/$batch',\n    'POST',\n    JSON.stringify(batchData),\n    [{ key: 'Accept', value: 'application/json' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    let pointsResult = 0;\n    for (\n      let requestIndex = 0;\n      requestIndex < data.responses.length;\n      requestIndex += 1\n    ) {\n      if (data.responses[requestIndex].status === 200) {\n        for (\n          let index = 0;\n          index < data.responses[requestIndex].body.value.length;\n          index += 1\n        ) {\n          pointsResult +=\n            data.responses[requestIndex].body.value[index].fields.points;\n        }\n      } else {\n        return { result: loadingStateEnum.failed, points: 0 };\n      }\n    }\n    return { result: loadingStateEnum.success, points: pointsResult };\n  }\n  return { result: loadingStateEnum.failed, points: 0 };\n}\n\nexport default async function getPoints(): Promise<{\n  result: loadingStateEnum;\n  data?: number;\n}> {\n  let nextUrl = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.commissionSubmissionsListId\n  }/items?expand=fields&$filter=fields/userId%20eq%20'${\n    store.getState().microsoftProfileData.id\n  }'%20and%20fields/submissionApproved%20ne%20false`;\n  let points: number = 0;\n  let commissions: string[] = [];\n  while (nextUrl !== '') {\n    const submissionResultClaimed = await callMsGraph(nextUrl);\n    if (!submissionResultClaimed.ok) {\n      return { result: loadingStateEnum.failed };\n    }\n    const submissionResultClaimedData = await submissionResultClaimed.json();\n    for (\n      let index = 0;\n      index < submissionResultClaimedData.value.length;\n      index += 1\n    ) {\n      if (\n        submissionResultClaimedData.value[0].fields.submissionApproved === true\n      ) {\n        commissions.push(\n          submissionResultClaimedData.value[0].fields.commissionId,\n        );\n        if (commissions.length >= 20) {\n          const batchResult = await getPointsBatch(commissions);\n          if (batchResult.result !== loadingStateEnum.success) {\n            return { result: loadingStateEnum.failed };\n          }\n          points += batchResult.points;\n          commissions = [];\n        }\n      }\n    }\n    if (submissionResultClaimedData['@odata.nextLink'] !== undefined) {\n      nextUrl = submissionResultClaimedData['@odata.nextLink'];\n    } else {\n      nextUrl = '';\n      if (commissions.length !== 0) {\n        const batchResult = await getPointsBatch(commissions);\n        if (batchResult.result !== loadingStateEnum.success) {\n          return { result: loadingStateEnum.failed };\n        }\n        points += batchResult.points;\n      }\n    }\n  }\n  return { result: loadingStateEnum.success, data: points };\n}\n","import { commissionsSlice } from '../../Redux/reducers/commissionsReducer';\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nfunction getFilter(\n  startDate?: { date: Date; filter: 'ge' | 'le' },\n  endDate?: { date: Date; filter: 'ge' | 'le' },\n) {\n  const startDateString = startDate?.date.toISOString().replace(/.\\d+Z$/g, 'Z');\n  const endDateString = endDate?.date.toISOString().replace(/.\\d+Z$/g, 'Z');\n  if (startDate || endDate) {\n    let filter = '&$filter=';\n    if (startDate) {\n      filter += `fields/startDate%20${startDate.filter}%20${startDateString}`;\n    }\n    if (endDate) {\n      filter += startDate\n        ? `&fields/endDate%20le%20${endDateString}`\n        : `fields/endDate%20${endDate.filter}%20${endDateString}`;\n    }\n  } else {\n    return '';\n  }\n}\n\nasync function getSubmissions(commissionIds: string[]): Promise<{\n  result: loadingStateEnum;\n  data?: Map<\n    string,\n    { claimCount: number; submissionsCount: number; reviewedCount: number }\n  >;\n}> {\n  const outputRequests: { id: string; method: string; url: string }[][] = [[]];\n  for (let index = 0; index < commissionIds.length; index += 1) {\n    outputRequests[Math.floor(index / 20)].push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionSubmissionsListId\n      }/items?expand=fields(select=commissionId,submissions)`,\n    });\n    if (index % 20 === 0) {\n      outputRequests.push([]);\n    }\n  }\n  const outputMap = new Map<\n    string,\n    { claimCount: number; submissionsCount: number; reviewedCount: number }\n  >();\n  for (let index = 0; outputRequests.length < index; index += 1) {\n    const requestData = {\n      requests: outputRequests[index],\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.commissionListId}/items`,\n      'POST',\n      JSON.stringify(requestData),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      for (\n        let responseIndex = 0;\n        responseIndex < data.responses.length;\n        responseIndex += 1\n      ) {\n        if (data.responses[responseIndex].status === 200) {\n          for (\n            let dataIndex = 0;\n            dataIndex < data.respone[index].body.length;\n            dataIndex += 1\n          ) {\n            if (data.respone[index].body['@odata.nextLink'] !== undefined) {\n              if (outputRequests[outputRequests.length - 1].length < 20) {\n                outputRequests[outputRequests.length - 1].push({\n                  id: outputRequests[\n                    outputRequests.length - 1\n                  ].length.toString(),\n                  method: 'GET',\n                  url: data.respone[index].body['@odata.nextLink'],\n                });\n              } else {\n                outputRequests.push([]);\n                outputRequests[outputRequests.length - 1].push({\n                  id: outputRequests[\n                    outputRequests.length - 1\n                  ].length.toString(),\n                  method: 'GET',\n                  url: data.respone[index].body['@odata.nextLink'],\n                });\n              }\n            }\n            for (\n              let valueIndex = 0;\n              valueIndex < data.respone[index].body.value.length;\n              valueIndex += 1\n            ) {\n              if (\n                outputMap.has(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                )\n              ) {\n                const mapData = outputMap.get(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                );\n                if (mapData !== undefined) {\n                  const subApproved =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionApproved;\n                  const subReviewed =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionReviewed;\n                  outputMap.set(\n                    data.respone[index].body.value[valueIndex].commissionId,\n                    {\n                      submissionsCount: (mapData.submissionsCount += 1),\n                      claimCount: subApproved\n                        ? (mapData.claimCount += 1)\n                        : mapData.claimCount,\n                      reviewedCount: subReviewed\n                        ? (mapData.reviewedCount += 1)\n                        : mapData.reviewedCount,\n                    },\n                  );\n                } else {\n                  const subApproved =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionApproved;\n                  const subReviewed =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionReviewed;\n                  outputMap.set(\n                    data.respone[index].body.value[valueIndex].commissionId,\n                    {\n                      submissionsCount: 1,\n                      claimCount: subApproved ? 1 : 0,\n                      reviewedCount: subReviewed ? 1 : 0,\n                    },\n                  );\n                }\n              } else {\n                const subApproved =\n                  data.respone[index].body.value[valueIndex].submissionApproved;\n                const subReviewed =\n                  data.respone[index].body.value[valueIndex].submissionReviewed;\n                outputMap.set(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                  {\n                    submissionsCount: 1,\n                    claimCount: subApproved ? 1 : 0,\n                    reviewedCount: subReviewed ? 1 : 0,\n                  },\n                );\n              }\n            }\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  return { result: loadingStateEnum.success, data: outputMap };\n}\n\nexport default async function getCommissions(\n  nextLink?: string,\n  startDate?: { date: Date; filter: 'ge' | 'le' },\n  endDate?: { date: Date; filter: 'ge' | 'le' },\n  claimed?: boolean,\n): Promise<{\n  result: loadingStateEnum;\n  data?: commissionType[];\n  nextLink?: string;\n}> {\n  if (nextLink === undefined) {\n    store.dispatch(commissionsSlice.actions.setCommissionNextLink(undefined));\n  }\n  if (claimed === true) {\n    const result = await getUnclaimedCommissions();\n    return { result: result.result, data: result.data };\n  }\n  const filter = getFilter(startDate, endDate);\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?expand=fields${filter}`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const commissionsIds: string[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        commissionsIds.push(data.value[index].fields.commissionId);\n      }\n      const submissions = await getSubmissions(commissionsIds);\n      if (\n        submissions.result === loadingStateEnum.success &&\n        submissions.data !== undefined\n      ) {\n        const resultCommissions: commissionType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          const submissionData = submissions.data.get(\n            data.value[index].fields.commissionID as string,\n          );\n          resultCommissions.push({\n            itemId: data.value[index].id,\n            title: data.value[index].fields.Title,\n            startDate: data.value[index].fields.startDate,\n            endDate: data.value[index].fields.endDate,\n            claimCount: submissionData ? submissionData.claimCount : 0,\n            submissionsCount: submissionData\n              ? submissionData.submissionsCount\n              : 0,\n            reviewedCount: submissionData ? submissionData.reviewedCount : 0,\n            points: data.value[index].fields.points as number,\n            proximity: data.value[index].fields.proximity as number,\n            commissionId: data.value[index].fields.commissionID as string,\n            hidden: data.value[index].fields.hidden,\n            timed: data.value[index].fields.timed,\n            maxNumberOfClaims: data.value[index].fields.maxNumberOfClaims,\n            allowMultipleSubmissions:\n              data.value[index].fields.allowMultipleSubmissions,\n            value: data.value[index].fields.hidden - 1,\n          });\n        }\n        return {\n          result: loadingStateEnum.success,\n          data: resultCommissions,\n          nextLink: data['@odata.nextLink'],\n        };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\ntype unclaimedCommissionSubmissionType = {\n  commissionId: string;\n  submissions: number;\n};\n\n// Get Claimed Commmissions\n\n// Gets points when given an array of commission ids\nasync function getCommissionsBatch(\n  commissions: unclaimedCommissionSubmissionType[],\n): Promise<{ result: loadingStateEnum; data?: commissionType[] }> {\n  const outputRequests: { id: string; method: string; url: string }[] = [];\n  for (let index = 0; index < commissions.length; index += 1) {\n    outputRequests.push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?$expand=fields&$filter=fields/commissionID%20eq%20'${\n        commissions[index]\n      }' `,\n    });\n  }\n  const batchData = {\n    requests: outputRequests,\n  };\n\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/$batch',\n    'POST',\n    JSON.stringify(batchData),\n    [{ key: 'Accept', value: 'application/json' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const commissionsResult: commissionType[] = [];\n    for (\n      let requestIndex = 0;\n      requestIndex < data.responses.length;\n      requestIndex += 1\n    ) {\n      if (data.responses[requestIndex].status === 200) {\n        for (\n          let index = 0;\n          index < data.responses[requestIndex].body.value.length;\n          index += 1\n        ) {\n          commissionsResult.push({\n            itemId: data.responses[requestIndex].body.value[index].id,\n            title: data.responses[requestIndex].body.value[index].fields.Title,\n            startDate:\n              data.responses[requestIndex].body.value[index].fields.startDate,\n            endDate:\n              data.responses[requestIndex].body.value[index].fields.endDate,\n            submissionsCount:\n              commissions[parseInt(data.responses[requestIndex].id) - 1]\n                .submissions,\n            claimCount: 0,\n            reviewedCount: 0, // TO DO fix\n            points: data.responses[requestIndex].body.value[index].fields\n              .points as number,\n            proximity: data.responses[requestIndex].body.value[index].fields\n              .proximity as number,\n            commissionId: data.responses[requestIndex].body.value[index].fields\n              .commissionID as string,\n            hidden:\n              data.responses[requestIndex].body.value[index].fields.hidden,\n            timed: data.responses[requestIndex].body.value[index].fields.timed,\n            maxNumberOfClaims:\n              data.responses[requestIndex].body.value[index].fields\n                .maxNumberOfClaims,\n            allowMultipleSubmissions:\n              data.responses[requestIndex].body.value[index].fields\n                .allowMultipleSubmissions,\n            value:\n              data.responses[requestIndex].body.value[index].fields.hidden - 1,\n          });\n        }\n      } else {\n        return { result: loadingStateEnum.failed, data: commissionsResult };\n      }\n    }\n    return { result: loadingStateEnum.success, data: commissionsResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getUnclaimedCommissions(): Promise<{\n  result: loadingStateEnum;\n  data?: commissionType[];\n}> {\n  let nextUrl = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.commissionSubmissionsListId\n  }/items?expand=fields&$filter=fields/userId%20eq%20'${\n    store.getState().microsoftProfileData.id\n  }'%20and%20fields/submissionApproved%20ne%20false`;\n  // The first value in the map is the commission id and the second is the submissions count b/c all are unclaimed\n  const commissionsMap = new Map<string, number>();\n  while (nextUrl !== '') {\n    const submissionResultClaimed = await callMsGraph(nextUrl);\n    if (!submissionResultClaimed.ok) {\n      return { result: loadingStateEnum.failed };\n    }\n    const submissionResultClaimedData = await submissionResultClaimed.json();\n    for (\n      let index = 0;\n      index < submissionResultClaimedData.value.length;\n      index += 1\n    ) {\n      if (\n        submissionResultClaimedData.value[index].fields.submissionApproved ===\n        false\n      ) {\n        if (\n          commissionsMap.has(\n            submissionResultClaimedData.value[index].fields.commissionId,\n          )\n        ) {\n          const count = commissionsMap.get(\n            submissionResultClaimedData.value[index].fields.commissionId,\n          );\n          if (count !== undefined) {\n            commissionsMap.set(\n              submissionResultClaimedData.value[index].fields.commissionId,\n              count + 1,\n            );\n          }\n        } else {\n          commissionsMap.set(\n            submissionResultClaimedData.value[index].fields.commissionId,\n            1,\n          );\n        }\n      }\n    }\n    if (submissionResultClaimedData['@odata.nextLink'] !== undefined) {\n      nextUrl = submissionResultClaimedData['@odata.nextLink'];\n    } else {\n      nextUrl = '';\n    }\n  }\n  const commissionsBatchData: unclaimedCommissionSubmissionType[][] = [[]];\n  let batchIndex = 0;\n  commissionsMap.forEach((value, key) => {\n    commissionsBatchData[batchIndex].push({\n      commissionId: key,\n      submissions: value,\n    });\n    if (commissionsBatchData[batchIndex].length >= 20) {\n      commissionsBatchData.push([]);\n      batchIndex += 1;\n    }\n  });\n\n  let outCommissions: commissionType[] = [];\n  for (let index = 0; index < commissionsBatchData.length; index += 1) {\n    const result = await getCommissionsBatch(commissionsBatchData[index]);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      outCommissions = [...outCommissions, ...result.data];\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: outCommissions };\n}\n","import { View, Text, Pressable, ViewStyle } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { ChevronLeft } from './Icons/Icons';\n\nexport default function BackButton({\n  to,\n  style,\n}: {\n  to: string;\n  style?: ViewStyle;\n}) {\n  const navigate = useNavigate();\n  return (\n    <Pressable\n      style={[\n        {\n          position: 'absolute',\n          flexDirection: 'row',\n          top: 0,\n          left: 5,\n          zIndex: 100,\n        },\n        style,\n      ]}\n      onPress={() => navigate(to)}\n    >\n      <ChevronLeft width={14} height={14} />\n      <Text>Back</Text>\n    </Pressable>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  FlatList,\n  Pressable,\n  ScrollView,\n  Text,\n  View,\n  Image,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CommissionsView from './CommissionsView';\nimport { commissionsSlice } from '../../Redux/reducers/commissionsReducer';\nimport { RootState } from '../../Redux/store';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport create_UUID from '../../Functions/Ultility/createUUID';\nimport getPoints from '../../Functions/commissions/getPoints';\nimport getCommissions from '../../Functions/commissions/getCommissions';\nimport ProgressView from '../../UI/ProgressView';\nimport BackButton from '../../UI/BackButton';\nimport { Colors, loadingStateEnum } from '../../types';\n\nexport default function Commissions() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const { commissionNextLink } = useSelector(\n    (state: RootState) => state.commissions,\n  );\n  const { currentCommissions, selectedCommission, commissionsState, points } =\n    useSelector((state: RootState) => state.commissions);\n\n  const [isHoverPicker, setIsHoverPicker] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  // Loading States\n\n  async function loadData() {\n    const pointResult = await getPoints();\n    if (\n      pointResult.result === loadingStateEnum.success &&\n      pointResult.data !== undefined\n    ) {\n      dispatch(commissionsSlice.actions.setPoints(pointResult.data));\n      const commissionsResult = await getCommissions();\n      if (\n        (commissionsResult.result === loadingStateEnum.success,\n        commissionsResult.data !== undefined)\n      ) {\n        dispatch(\n          commissionsSlice.actions.setCurrentCommissions(\n            commissionsResult.data,\n          ),\n        );\n      }\n      dispatch(\n        commissionsSlice.actions.setCommissionNextLink(\n          commissionsResult.nextLink,\n        ),\n      );\n      dispatch(\n        commissionsSlice.actions.setCommissionsState(commissionsResult.result),\n      );\n    } else {\n      dispatch(\n        commissionsSlice.actions.setCommissionsState(pointResult.result),\n      );\n    }\n    // TO DO pagination\n  }\n\n  async function loadCommissionData(\n    startDate?: { date: Date; filter: 'ge' | 'le' },\n    endDate?: { date: Date; filter: 'ge' | 'le' },\n    claimed?: boolean,\n    nextLink?: string,\n  ) {\n    dispatch(\n      commissionsSlice.actions.setCommissionsState(loadingStateEnum.loading),\n    );\n    const result = await getCommissions(nextLink, startDate, endDate, claimed);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      dispatch(commissionsSlice.actions.setCurrentCommissions(result.data));\n    }\n    dispatch(commissionsSlice.actions.setCommissionsState(result.result));\n    dispatch(commissionsSlice.actions.setCommissionNextLink(result.nextLink));\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    if (siteId !== '') {\n      loadData();\n    }\n  }, [siteId]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ width, height, backgroundColor: Colors.white }}>\n        <View\n          style={{\n            width,\n            height: height * 0.1,\n            backgroundColor: Colors.darkGray,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n          <Text\n            style={{\n              fontFamily: 'BukhariScript',\n              fontSize: 25,\n              color: Colors.white,\n            }}\n          >\n            Commissions\n          </Text>\n        </View>\n        <View style={{ height: isHoverPicker ? height * 0.8 : height * 0.85 }}>\n          {commissionsState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height: height * 0.9,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={width < height ? width * 0.1 : height * 0.1}\n                height={width < height ? width * 0.1 : height * 0.1}\n              />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              {commissionsState === loadingStateEnum.success ? (\n                <FlatList\n                  style={{ height: height * 0.9 }}\n                  data={[undefined, ...currentCommissions]}\n                  renderItem={({ item, index }) => (\n                    <>\n                      {index === 0 ? (\n                        <View\n                          style={{\n                            flexDirection: 'row',\n                            margin: 10,\n                            backgroundColor: Colors.maroon,\n                            borderRadius: 15,\n                            shadowOffset: { width: 2, height: 3 },\n                          }}\n                        >\n                          <View style={{ margin: 10, flexDirection: 'row' }}>\n                            <Image\n                              source={require('../../../assets/images/PaulyLogo.png')}\n                              resizeMode=\"contain\"\n                              style={{ width: 50, height: 50 }}\n                            />\n                            <Text\n                              numberOfLines={1}\n                              adjustsFontSizeToFit\n                              style={{\n                                fontSize: 45,\n                                color: Colors.white,\n                                fontFamily: 'BukhariScript',\n                                width: 100,\n                                paddingLeft: 10,\n                              }}\n                            >\n                              {points}\n                            </Text>\n                          </View>\n                        </View>\n                      ) : (\n                        <>\n                          {item !== undefined ? (\n                            <Pressable\n                              onPress={() => {\n                                dispatch(\n                                  commissionsSlice.actions.setSelectedCommission(\n                                    item.commissionId,\n                                  ),\n                                );\n                              }}\n                              key={`Link_${item.commissionId}`}\n                              style={{ backgroundColor: 'transparent' }}\n                            >\n                              <View\n                                key={item.commissionId}\n                                style={{\n                                  borderRadius: 15,\n                                  marginLeft: width * 0.025,\n                                  elevation: 2,\n                                  marginRight: width * 0.025,\n                                  marginTop: height * 0.02,\n                                  backgroundColor: '#FFFFFF',\n                                  shadowColor: 'black',\n                                  shadowOffset: { width: 1, height: 1 },\n                                  shadowOpacity: 1,\n                                  shadowRadius: 5,\n                                }}\n                              >\n                                <View style={{ margin: 10 }}>\n                                  <Text>{item.title}</Text>\n                                  {item.timed &&\n                                  item.startDate !== undefined ? (\n                                    <Text>\n                                      {new Date(\n                                        item.startDate,\n                                      ).toLocaleDateString('en-US', {\n                                        month: 'long',\n                                        day: 'numeric',\n                                        minute: 'numeric',\n                                      })}\n                                    </Text>\n                                  ) : null}\n                                </View>\n                              </View>\n                            </Pressable>\n                          ) : null}\n                        </>\n                      )}\n                    </>\n                  )}\n                  keyExtractor={item =>\n                    `${item?.commissionId}_${create_UUID()}`\n                  }\n                  onEndReachedThreshold={1}\n                  onEndReached={() => {\n                    if (commissionNextLink !== undefined) {\n                      loadCommissionData(\n                        undefined,\n                        undefined,\n                        undefined,\n                        commissionNextLink,\n                      );\n                    }\n                  }}\n                  initialNumToRender={currentCommissions.length}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </View>\n          )}\n        </View>\n        <Pressable\n          style={{ height: isHoverPicker ? height * 0.1 : height * 0.05 }}\n          onHoverIn={() => {\n            setIsHoverPicker(true);\n          }}\n          onHoverOut={() => {\n            setIsHoverPicker(false);\n          }}\n        >\n          <ScrollView\n            horizontal\n            style={{\n              height: isHoverPicker ? height * 0.1 : height * 0.05,\n              width,\n              backgroundColor: Colors.white,\n            }}\n            showsHorizontalScrollIndicator={false}\n          >\n            <PickerPiece\n              text=\"All\"\n              onPress={() => {\n                loadCommissionData();\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Current\"\n              onPress={() => {\n                loadCommissionData(\n                  { date: new Date(), filter: 'ge' },\n                  { date: new Date(), filter: 'le' },\n                );\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Past\"\n              onPress={() => {\n                loadCommissionData(\n                  { date: new Date(), filter: 'le' },\n                  { date: new Date(), filter: 'le' },\n                );\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Claimed\"\n              onPress={() => {\n                loadCommissionData(undefined, undefined, true);\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Future\"\n              onPress={() => {\n                loadCommissionData(undefined, {\n                  date: new Date(),\n                  filter: 'ge',\n                });\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n          </ScrollView>\n        </Pressable>\n      </View>\n      <View\n        style={{\n          position: 'absolute',\n          zIndex: 2,\n          top: height * 0.1,\n          left: width * 0.05,\n        }}\n      >\n        {selectedCommission !== '' ? (\n          <CommissionsView\n            id={selectedCommission}\n            onClose={() =>\n              dispatch(commissionsSlice.actions.setSelectedCommission(''))\n            }\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nfunction PickerPiece({\n  text,\n  isHoverPicker,\n  setIsHoverPicker,\n  onPress,\n}: {\n  text: string;\n  onPress: () => void;\n  isHoverPicker: boolean;\n  setIsHoverPicker: (item: boolean) => void;\n}) {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      onPress={() => {\n        onPress();\n      }}\n      onHoverIn={() => {\n        setIsHoverPicker(true);\n        setIsSelected(true);\n      }}\n      onHoverOut={() => setIsSelected(false)}\n      style={{\n        height: isHoverPicker ? height * 0.1 : height * 0.05,\n        width: isSelected\n          ? currentBreakPoint >= 2\n            ? width * 0.3\n            : width * 0.6\n          : currentBreakPoint >= 2\n          ? width * 0.2\n          : width * 0.4,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          height: isHoverPicker ? height * 0.06 : height * 0.03,\n          width: isSelected\n            ? currentBreakPoint >= 2\n              ? width * 0.28\n              : width * 0.46\n            : currentBreakPoint >= 2\n            ? width * 0.18\n            : width * 0.36,\n          marginLeft: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          marginRight: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          backgroundColor: Colors.darkGray,\n          borderRadius: 15,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white }}>{text}</Text>\n      </View>\n    </Pressable>\n  );\n}\n","import { taskDeltaSlice } from '../../Redux/reducers/tasksReducers';\nimport store from '../../Redux/store';\nimport {\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nfunction convertStringToTaskStatus(status: string): taskStatusEnum {\n  if (status === 'notStarted') {\n    return taskStatusEnum.notStarted;\n  }\n  if (status === 'inProgress') {\n    return taskStatusEnum.inProgress;\n  }\n  if (status === 'completed') {\n    return taskStatusEnum.completed;\n  }\n  if (status === 'waitingOnOthers') {\n    return taskStatusEnum.waitingOnOthers;\n  }\n  return taskStatusEnum.deferred;\n}\n\nfunction convertStringToImportance(importance: string): taskImportanceEnum {\n  if (importance === 'high') {\n    return taskImportanceEnum.high;\n  }\n  if (importance === 'low') {\n    return taskImportanceEnum.low;\n  }\n  return taskImportanceEnum.normal;\n}\n\n// deltaRunAgain is send if the delta link has failed or the responce 410 meaning syncronization is needed.\nexport default async function getUsersTasks(\n  deltaRunAgain?: boolean,\n): Promise<{ result: loadingStateEnum; data?: taskType[] }> {\n  let deltaMode = false;\n  if (store.getState().tasksDeltaLink !== '' && deltaRunAgain !== true) {\n    deltaMode = true;\n  }\n  const url = deltaMode\n    ? store.getState().tasksDeltaLink\n    : 'https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/delta';\n  const tasksResult = await callMsGraph(url);\n  if (tasksResult.ok) {\n    const taskData = await tasksResult.json();\n    if (taskData['@odata.deltaLink'] !== undefined) {\n      store.dispatch(\n        taskDeltaSlice.actions.setTaskDeltaLink(taskData['@odata.deltaLink']),\n      );\n    }\n    const resultTasks: taskType[] = [];\n    for (let index = 0; index < taskData.value.length; index += 1) {\n      resultTasks.push({\n        name: taskData.value[index].title,\n        id: taskData.value[index].id,\n        importance: convertStringToImportance(taskData.value[index].importance),\n        status: convertStringToTaskStatus(taskData.value[index].status),\n        excess: false,\n      });\n    }\n    resultTasks.unshift({\n      name: '',\n      importance: taskImportanceEnum.normal,\n      id: '',\n      status: taskStatusEnum.notStarted,\n      excess: true,\n    });\n    return { result: loadingStateEnum.success, data: resultTasks };\n  }\n  if (deltaMode) {\n    const secondAttempt = await getUsersTasks(true);\n    return secondAttempt;\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  getInsightData.ts\n\n  used to get insight files that are used on the notification page.\n*/\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nexport default async function getInsightData(): Promise<insightResult> {\n  // Get used https://learn.microsoft.com/en-us/graph/api/insights-list-used?view=graph-rest-1.0&tabs=http\n  const usedResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/insights/used?$select=resourceReference,resourceVisualization',\n  );\n  const userOutData: resourceType[] = [];\n  let userState: loadingStateEnum = loadingStateEnum.loading; // State of getting users data\n  if (usedResult.ok) {\n    // Check if result success\n    const userData = await usedResult.json();\n    for (let index = 0; index < userData.value.length; index += 1) {\n      userOutData.push({\n        webUrl: userData.value[index].resourceReference.webUrl,\n        id: userData.value[index].resourceReference.id,\n        title: userData.value[index].resourceVisualization.title,\n        type: userData.value[index].resourceVisualization.type,\n      });\n    }\n    userState = loadingStateEnum.success;\n  } else {\n    userState = loadingStateEnum.failed;\n  }\n\n  // Get trending https://learn.microsoft.com/en-us/graph/api/insights-list-trending?view=graph-rest-1.0&tabs=http\n  const trendingResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/insights/trending?$select=resourceReference,resourceVisualization',\n  );\n  const trendingOutData: resourceType[] = [];\n  let trendingState = loadingStateEnum.loading; // state of getting trendings data\n  if (trendingResult.ok) {\n    const trendingData = await trendingResult.json();\n    for (let index = 0; index < trendingData.value.length; index += 1) {\n      trendingOutData.push({\n        webUrl: trendingData.value[index].resourceReference.webUrl,\n        id: trendingData.value[index].resourceReference.id,\n        title: trendingData.value[index].resourceVisualization.title,\n        type: trendingData.value[index].resourceVisualization.type,\n      });\n    }\n    trendingState = loadingStateEnum.success;\n  } else {\n    trendingState = loadingStateEnum.failed;\n  }\n  return {\n    userState,\n    trendingState,\n    userData: userOutData,\n    trendingData: trendingOutData,\n  };\n}\n","import React from 'react';\nimport Animated, {\n  SharedValue,\n  useAnimatedProps,\n} from 'react-native-reanimated';\nimport { Path } from 'react-native-svg';\n\nexport default function AnimatedCheckMarkPath({\n  progress,\n  checkMarkColor,\n  checked,\n}: {\n  progress: SharedValue<number>;\n  checkMarkColor: any;\n  checked: boolean;\n}) {\n  const AnimatedPath = Animated.createAnimatedComponent(Path);\n  const checkMarkAnimation = useAnimatedProps(() => {\n    const strokeDashoffset = 1000 * progress.value;\n    return { strokeDashoffset };\n  });\n  return (\n    <AnimatedPath\n      animatedProps={checkMarkAnimation}\n      d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\n      stroke={checkMarkColor}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n      strokeWidth={5}\n      strokeDasharray={1000}\n      strokeMiterlimit={10}\n    />\n  );\n}\n","// Original Code from https://github.com/Rakha112/react-native-custom-checkbox/blob/main/src/components/CustomCheckBox.js\n\nimport React from 'react';\nimport Svg, { Circle } from 'react-native-svg';\nimport { Easing, useDerivedValue, withTiming } from 'react-native-reanimated';\nimport { View } from 'react-native';\nimport AnimatedCheckMarkPath from './AnimatedCheckMarkPath';\n\nexport default function CustomCheckBox({\n  checked,\n  checkMarkColor,\n  height,\n  width,\n  strokeDasharray,\n}: {\n  checked: boolean;\n  checkMarkColor: string;\n  height: number;\n  width: number;\n  strokeDasharray?: number;\n}) {\n  const progress = useDerivedValue(() => {\n    return withTiming(checked ? 0 : 1, {\n      duration: 1500,\n      easing: Easing.inOut(Easing.bezierFn(0.5, -0.02, 0.92, 0.37)),\n    });\n  });\n\n  return (\n    <View>\n      <Svg width={width} height={height} viewBox=\"0 0 52 52\">\n        <AnimatedCheckMarkPath\n          progress={progress}\n          checkMarkColor={checkMarkColor}\n          checked={checked}\n        />\n        <Circle\n          cx=\"26\"\n          cy=\"26\"\n          r=\"20\"\n          stroke=\"black\"\n          strokeDasharray={strokeDasharray}\n          strokeWidth=\"2\"\n          fill=\"none\"\n        />\n      </Svg>\n    </View>\n  );\n}\n","import { Image } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport * as PDFJS from 'pdfjs-dist';\nimport { useSelector } from 'react-redux';\nimport { DocumentInitParameters } from 'pdfjs-dist/types/src/display/api';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport store, { RootState } from '../../Redux/store';\nimport { pdfDataSlice } from '../../Redux/reducers/pdfDataReducer';\n\nPDFJS.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${PDFJS.version}/legacy/build/pdf.worker.min.js`;\n\nexport default function PDFView({ width }: { width: number }) {\n  const { powerpointBlob } = useSelector((state: RootState) => state.paulyData);\n  const { images, pageNumber } = useSelector(\n    (state: RootState) => state.pdfData,\n  );\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function convertPdfToImages(url: string) {\n    const images: string[] = [];\n    const dataResult = await fetch(url);\n    if (dataResult.ok) {\n      const blob = await dataResult.blob();\n      const file = new Blob([blob], { type: 'application/pdf' });\n      const fileURL = URL.createObjectURL(file);\n      const docInitParams: DocumentInitParameters = { url: fileURL };\n\n      const pdf = await PDFJS.getDocument(docInitParams).promise;\n      const canvas = document.createElement('canvas'); // Fail\n      for (let i = 0; i < pdf.numPages; i += 1) {\n        const page = await pdf.getPage(i + 1);\n        const viewport = page.getViewport({ scale: 1 });\n        const context = canvas.getContext('2d'); // Fail\n        canvas.height = viewport.height; // Fail\n        canvas.width = viewport.width; // Fail\n        if (context !== null) {\n          await page.render({ canvasContext: context, viewport }).promise;\n          images.push(canvas.toDataURL());\n        }\n      }\n      canvas.remove();\n      store.dispatch(pdfDataSlice.actions.setImages(images));\n    }\n  }\n\n  useEffect(() => {\n    convertPdfToImages(powerpointBlob);\n  }, [powerpointBlob]);\n\n  const singleTap = Gesture.Tap().onEnd((_event, success) => {\n    if (success) {\n      if (pageNumber + 1 < images.length) {\n        store.dispatch(pdfDataSlice.actions.increasePageNumber());\n      } else {\n        store.dispatch(pdfDataSlice.actions.setPageNumber(0));\n      }\n    }\n  });\n  const doubleTap = Gesture.Tap()\n    .numberOfTaps(2)\n    .onEnd((_event, success) => {\n      if (success) {\n        if (pageNumber - 1 >= 1) {\n          store.dispatch(pdfDataSlice.actions.decreasePageNumber());\n        } else if (images.length >= 1) {\n          store.dispatch(pdfDataSlice.actions.setPageNumber(images.length - 1));\n        }\n      }\n    });\n\n  const taps = Gesture.Exclusive(doubleTap, singleTap);\n\n  const fling = Gesture.Fling().onEnd(() => {\n    if (pageNumber + 1 < images.length) {\n      store.dispatch(pdfDataSlice.actions.increasePageNumber());\n    } else {\n      store.dispatch(pdfDataSlice.actions.setPageNumber(pageNumber - 1));\n    }\n  });\n\n  const compound = Gesture.Simultaneous(fling, taps);\n\n  useEffect(() => {\n    if (pageNumber < images.length) {\n      Image.getSize(\n        images[pageNumber],\n        (imageMeasureWidth, imageMeasureHeight) => {\n          const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n          console.log(width * heightPerWidth);\n          setImageHeight(width * heightPerWidth);\n        },\n      );\n    }\n  }, [pageNumber, images, width]);\n\n  return (\n    <>\n      {pageNumber < images.length ? (\n        <GestureDetector gesture={compound}>\n          <Image\n            source={{ uri: images[pageNumber], width }}\n            style={{ borderRadius: 15, width, height: imageHeight }}\n            height={imageHeight}\n            width={width}\n          />\n        </GestureDetector>\n      ) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { Shape, SvgProps } from 'react-native-svg';\nimport {\n  AudioIcon,\n  DocumentIcon,\n  ExcelIcon,\n  FolderIcon,\n  ImageIcon,\n  OneNoteIcon,\n  PDFIcon,\n  PowerpointIcon,\n  VideoIcon,\n  WordIcon,\n} from './Icons';\n\ninterface iconProps {\n  width: number;\n  height: number;\n  mimeType: string;\n  style?: StyleProp<ViewStyle> | undefined;\n  props?: Shape<SvgProps> | undefined;\n}\n\nconst wordTypes = [\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n];\nconst excelTypes = [\n  'application/ms-excel',\n  'application/msexcel',\n  'application/vnd.ms-excel',\n];\nconst powerpointTypes = [\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'application/vnd.ms-powerpoint',\n  'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n  'application/vnd.openxmlformats-officedocument.presentationml.template',\n];\n\nexport default function MimeTypeIcon({\n  width,\n  height,\n  style,\n  props,\n  mimeType,\n}: iconProps) {\n  return (\n    <>\n      {mimeType.split('/')[0] === 'image' ? (\n        <ImageIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] === 'application' ? (\n        <>\n          {wordTypes.includes(mimeType) ? (\n            <WordIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {excelTypes.includes(mimeType) ? (\n            <ExcelIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'application/pdf' ? (\n            <PDFIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {powerpointTypes.includes(mimeType) ? (\n            <PowerpointIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {wordTypes.includes(mimeType) &&\n          excelTypes.includes(mimeType) &&\n          mimeType !== 'application/pdf' &&\n          mimeType !== 'application/vnd.ms-powerpoint' ? (\n            <DocumentIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n        </>\n      ) : null}\n      {mimeType.split('/')[0] === 'audio' ? (\n        <AudioIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] === 'video' ? (\n        <VideoIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType === 'folder' ? (\n        <FolderIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] !== 'image' &&\n      mimeType.split('/')[0] !== 'application' &&\n      mimeType.split('/')[0] !== 'audio' &&\n      mimeType.split('/')[0] !== 'video' &&\n      mimeType !== 'folder' ? (\n        <>\n          {mimeType === 'PowerPoint' ? (\n            <PowerpointIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Word' ? (\n            <WordIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Excel' ? (\n            <ExcelIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Pdf' ? (\n            <PDFIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'OneNote' || mimeType === 'OneNotePage' ? (\n            <OneNoteIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Audio' ? (\n            <AudioIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Video' ? (\n            <VideoIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Image' ? (\n            <ImageIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Folder' ? (\n            <FolderIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType !== 'PowerPoint' &&\n          mimeType !== 'Word' &&\n          mimeType !== 'OneNote' &&\n          mimeType !== 'OneNotePage' &&\n          mimeType !== 'Audio' &&\n          mimeType !== 'Video' &&\n          mimeType !== 'Image' &&\n          mimeType !== 'Folder' ? (\n            <DocumentIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n        </>\n      ) : null}\n    </>\n  );\n}\n","import store from '../Redux/store';\nimport callMsGraph from './Ultility/microsoftAssets';\nimport { homepageDataSlice } from '../Redux/reducers/homepageDataReducer';\nimport {\n  getEvent,\n  getSchoolDay,\n  getTimetable,\n  getSchedule,\n} from './calendar/calendarFunctionsGraph';\nimport { Colors, loadingStateEnum, semesters } from '../types';\n\nexport async function getRooms(\n  nextLink?: string,\n  search?: string,\n): Promise<{ result: loadingStateEnum; data?: roomType[]; nextLink?: string }> {\n  const searchFilter = search\n    ? `&$filter=fields/roomName%20eq%20${search}`\n    : ''; // TODO deal with search filter\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.roomListId\n      }/items?expand=fields${search}`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultArray: roomType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultArray.push({\n        name: data.value[index].fields.roomName,\n        id: data.value[index].fields.roomId,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: resultArray,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getRoom(\n  roomId: string,\n): Promise<{ result: loadingStateEnum; data?: roomType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.roomListId\n    }/items?expand=fields&fields/roomId%20eq%20'${roomId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length === 0) {\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.roomName,\n          id: data.value[0].feilds.ro0mId,\n        },\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getClasses(): Promise<{\n  result: loadingStateEnum;\n  data?: classType[];\n}> {\n  let classQuery: string = `https://graph.microsoft.com/v1.0/me/joinedTeams?$select=id`;\n  const batchDataRequests: { id: string; method: string; url: string }[][] = [\n    [],\n  ];\n  while (classQuery !== undefined) {\n    const classResult = await callMsGraph(classQuery);\n    if (classResult.ok) {\n      const classData = await classResult.json();\n      classQuery = classData['@odata.nextLink'];\n\n      // Batch Request perfroming a get request on each class group\n\n      // Format Data\n      for (let index = 0; index < classData.value.length; index += 1) {\n        batchDataRequests[Math.floor(index / 20)].push({\n          id: (index + 1).toString(),\n          method: 'GET',\n          url: `/groups/${classData.value[index].id}?$select=displayName,id,${\n            store.getState().paulyList.classExtensionId\n          }`,\n        });\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  // Run Queries\n  const batchHeaders = new Headers();\n  batchHeaders.append('Accept', 'application/json');\n  const classes: classType[] = [];\n  for (let index = 0; index < batchDataRequests.length; index += 1) {\n    const batchData = {\n      requests: batchDataRequests[index],\n    };\n    const batchResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/$batch',\n      'POST',\n      JSON.stringify(batchData),\n    );\n    if (batchResult.ok) {\n      const batchResultData = await batchResult.json();\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultData.responses.length;\n        batchIndex += 1\n      ) {\n        if (batchResultData.responses[batchIndex].status === 200) {\n          if (\n            batchResultData.responses[batchIndex].body[\n              store.getState().paulyList.classExtensionId\n            ] !== undefined\n          ) {\n            classes.push({\n              name: batchResultData.responses[batchIndex].body.displayName,\n              id: batchResultData.responses[batchIndex].body.id,\n              periods: JSON.parse(\n                batchResultData.responses[batchIndex].body[\n                  store.getState().paulyList.classExtensionId\n                ].periodData,\n              ),\n              room: {\n                name: '',\n                id: '',\n              },\n              schoolYearId: '',\n              semester: semesters.semesterOne,\n            });\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: classes };\n}\n\nexport async function getClassEvents(\n  scheduleId: string,\n  semester: semesters,\n  schoolYearEventId: string,\n  schoolDay: schoolDayType,\n  date: Date,\n): Promise<{ result: loadingStateEnum; data?: eventType[] }> {\n  const scheduleResult = await getSchedule(scheduleId);\n  const classResult = await getClasses();\n  if (\n    scheduleResult.result === loadingStateEnum.success &&\n    classResult.result === loadingStateEnum.success &&\n    classResult.data !== undefined &&\n    scheduleResult.schedule !== undefined\n  ) {\n    const outputEvents: eventType[] = [];\n    for (let index = 0; index < classResult.data.length; index += 1) {\n      if (\n        classResult.data[index].schoolYearId === schoolYearEventId &&\n        classResult.data[index].semester === semester\n      ) {\n        // This check should never fail\n        if (classResult.data[index].periods.length > schoolDay.order) {\n          // Find Time\n          const period: number =\n            classResult.data[index].periods[schoolDay.order];\n          const periodData = scheduleResult.schedule.periods[period];\n          const startDate: Date = new Date(date.toISOString());\n          startDate.setHours(periodData.startHour);\n          startDate.setMinutes(periodData.startMinute);\n          startDate.setSeconds(0);\n          const endDate: Date = date;\n          endDate.setHours(periodData.endHour);\n          endDate.setMinutes(periodData.endMinute);\n          endDate.setSeconds(0);\n          outputEvents.push({\n            id: classResult.data[index].id,\n            name: classResult.data[index].name,\n            startTime: startDate.toISOString(),\n            endTime: endDate.toISOString(),\n            eventColor: Colors.white,\n            microsoftEvent: false,\n            allDay: false,\n          });\n        }\n      }\n    }\n    outputEvents.sort((a, b) => {\n      return new Date(a.startTime).getTime() - new Date(b.startTime).getTime();\n    });\n    return { result: loadingStateEnum.success, data: outputEvents };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getClassEventsFromDay(\n  date?: Date,\n): Promise<{ result: loadingStateEnum; data?: eventType[] }> {\n  const result = await getSchoolDay(date || new Date());\n  if (\n    result.result === loadingStateEnum.success &&\n    result.event !== undefined &&\n    result.event.paulyEventData !== undefined\n  ) {\n    const outputIds: schoolDayDataCompressedType = JSON.parse(\n      result.event.paulyEventData,\n    );\n    const eventResult = await getEvent(outputIds.schoolYearEventId);\n    if (\n      eventResult.result === loadingStateEnum.success &&\n      eventResult.data !== undefined &&\n      eventResult.data?.paulyEventData !== undefined\n    ) {\n      const timetableResult = await getTimetable(\n        eventResult.data.paulyEventData,\n      );\n      if (\n        timetableResult.result === loadingStateEnum.success &&\n        timetableResult.timetable !== undefined\n      ) {\n        const schoolDay = timetableResult.timetable.days.find(\n          (e: { id: string }) => {\n            return e.id === outputIds.schoolDayId;\n          },\n        );\n        const schedule = timetableResult.timetable.schedules.find(\n          (e: { id: string }) => {\n            return e.id === outputIds.scheduleId;\n          },\n        );\n        const dressCode =\n          timetableResult.timetable.dressCode.dressCodeData.find(\n            (e: { id: string }) => {\n              return e.id === outputIds.dressCodeId;\n            },\n          );\n        const dressCodeIncentive =\n          timetableResult.timetable.dressCode.dressCodeIncentives.find(\n            (e: { id: string }) => {\n              return e.id === outputIds?.dressCodeIncentiveId;\n            },\n          );\n        if (\n          schoolDay !== undefined &&\n          schedule !== undefined &&\n          dressCode !== undefined\n        ) {\n          store.dispatch(\n            homepageDataSlice.actions.setSchoolDayData({\n              schoolDay,\n              schedule,\n              dressCode,\n              semester: outputIds.semester,\n              dressCodeIncentive,\n            }),\n          );\n          if (schedule !== undefined) {\n            const classResult = await getClassEvents(\n              schedule.id,\n              outputIds.semester,\n              outputIds.schoolYearEventId,\n              schoolDay,\n              new Date(result.event.startTime),\n            );\n            if (\n              classResult.result === loadingStateEnum.success &&\n              classResult.data !== undefined\n            ) {\n              if (classResult.data.length >= 1) {\n                const startTimeDate = new Date(classResult.data[0].startTime);\n                const hourTime =\n                  (startTimeDate.getHours() % 12) + 1 <= 9\n                    ? `0${(startTimeDate.getHours() % 12) + 1}`\n                    : (startTimeDate.getHours() % 12) + 1;\n                const monthTime =\n                  startTimeDate.getMinutes() <= 9\n                    ? `0${startTimeDate.getMinutes()}`\n                    : startTimeDate.getMinutes().toString();\n                store.dispatch(\n                  homepageDataSlice.actions.setStartTime(\n                    `${hourTime}:${monthTime}`,\n                  ),\n                );\n              }\n              return {\n                result: loadingStateEnum.success,\n                data: classResult.data,\n              };\n            }\n            return { result: loadingStateEnum.failed };\n          }\n          return { result: loadingStateEnum.failed };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  18 October 2023\n  Pauly\n*/\n\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  Linking,\n  ScrollView,\n  ListRenderItemInfo,\n  Switch,\n  Animated,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport { FlatList } from 'react-native-gesture-handler';\nimport store, { RootState } from '../Redux/store';\nimport getCurrentPaulyData from '../Functions/homepage/getCurrentPaulyData';\nimport {\n  Colors,\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../types';\nimport callMsGraph from '../Functions/Ultility/microsoftAssets';\nimport getUsersTasks from '../Functions/homepage/getUsersTasks';\nimport ProgressView from '../UI/ProgressView';\nimport getInsightData from '../Functions/homepage/getInsightData';\nimport CustomCheckBox from '../UI/CheckMark/CustomCheckBox';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport { homepageDataSlice } from '../Redux/reducers/homepageDataReducer';\nimport PDFView from '../UI/PDF/PDFView';\nimport BackButton from '../UI/BackButton';\nimport MimeTypeIcon from '../UI/Icons/MimeTypeIcon';\nimport { getClassEventsFromDay } from '../Functions/classesFunctions';\nimport { TrashIcon } from '../UI/Icons/Icons';\n\n// Get Messages\n// Last Chat Message Channels Included\n\n// Pauly\n// Overview Message\n// Powerpoint\n\n// Insights\n// Quick Access To files\n\n// Calendar\n// Calendar Overview\n// Calendar Widget\n// Dress Code\n\n// Tasks\n\n// Wants\n// Assignments (problem is hard to test)\n\nexport default function Notifications() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const { message } = useSelector((state: RootState) => state.paulyData);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    if (siteId !== '') {\n      // Calendar Data\n      getClassEventsFromDay();\n\n      // Insights\n      const insightResult = await getInsightData();\n      dispatch(\n        homepageDataSlice.actions.setTrendingData(insightResult.trendingData),\n      );\n      dispatch(\n        homepageDataSlice.actions.setTrendingState(insightResult.trendingState),\n      );\n      dispatch(homepageDataSlice.actions.setUserData(insightResult.userData));\n      dispatch(homepageDataSlice.actions.setUserState(insightResult.userState));\n\n      // Pauly Data\n      await getCurrentPaulyData();\n\n      // List Data\n      const taskResult = await getUsersTasks();\n      if (\n        taskResult.result === loadingStateEnum.success &&\n        taskResult.data !== undefined\n      ) {\n        dispatch(homepageDataSlice.actions.setUserTasks(taskResult.data));\n      }\n      dispatch(homepageDataSlice.actions.setTaskState(taskResult.result));\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, [siteId]);\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.white,\n        bottom: Colors.white,\n      }),\n    );\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    'Comfortaa-Regular': require('../../assets/fonts/Comfortaa-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      {currentBreakPoint === 0 ? <BackButton to=\"/\" /> : null}\n      <View\n        style={{\n          width,\n          height: height * 0.1,\n          marginTop: currentBreakPoint === 0 ? 10 : 0,\n        }}\n      >\n        <View\n          style={{\n            width: width * 0.9,\n            height: height * 0.07,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 15,\n            backgroundColor: Colors.darkGray,\n            marginLeft: width * 0.05,\n            marginRight: width * 0.05,\n            marginTop: height * 0.015,\n            marginBottom: height * 0.015,\n          }}\n        >\n          <Text\n            style={{ color: Colors.white, fontFamily: 'Comfortaa-Regular' }}\n          >\n            {message}\n          </Text>\n        </View>\n      </View>\n      {currentBreakPoint === 0 ? (\n        <>\n          <WidgetView width={width * 0.9} height={height * 0.3} />\n          <BoardBlock />\n        </>\n      ) : (\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 0.9,\n            marginLeft: width * 0.05,\n          }}\n        >\n          <BoardBlock />\n          <View style={{ marginTop: height * 0.03 }}>\n            <WidgetView width={width * 0.2} height={height * 0.2} />\n          </View>\n        </View>\n      )}\n      <TaskBlock />\n      <InsightsBlock />\n    </ScrollView>\n  );\n}\n\nfunction WidgetView({ width, height }: { width: number; height: number }) {\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { schoolDayData, startTime } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  const dow: string[] = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  return (\n    <View\n      style={{\n        backgroundColor: Colors.maroon,\n        width,\n        height,\n        borderRadius: 15,\n        marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n      }}\n    >\n      <View\n        style={{\n          width,\n          height: height / 3,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white, fontSize: height / 6 }}>\n          {dow[new Date().getDay()]}\n        </Text>\n      </View>\n      {schoolDayData !== undefined ? (\n        <>\n          <View\n            style={{\n              backgroundColor: Colors.darkGray,\n              alignItems: 'center',\n              alignContent: 'center',\n              justifyContent: 'center',\n              width,\n              height: height / 6,\n            }}\n          >\n            <Text style={{ color: Colors.white }}>\n              {schoolDayData?.schedule.descriptiveName}\n            </Text>\n          </View>\n          <View style={{ flexDirection: 'row', height: height / 2 }}>\n            <View\n              style={{\n                height: height * 0.5,\n                width: width * 0.3,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Text\n                style={{\n                  color: Colors.white,\n                  fontWeight: 'bold',\n                  fontSize: height * 0.4,\n                }}\n              >\n                {schoolDayData?.schoolDay.shorthand}\n              </Text>\n            </View>\n            <View\n              style={{\n                height: height * 0.5,\n                width: width * 0.7,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Text style={{ color: Colors.white, fontSize: height / 3 }}>\n                {startTime}\n              </Text>\n            </View>\n          </View>\n        </>\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.darkGray,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            width,\n            height: height / 2,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>No School</Text>\n        </View>\n      )}\n    </View>\n  );\n}\n\nfunction TaskBlock() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { taskState, userTasks, isShowingCompleteTasks } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <View style={{ width }}>\n      <Text\n        style={{\n          fontSize: 24,\n          marginLeft: width * 0.05,\n          marginTop: height * 0.03,\n          marginBottom: height * 0.02,\n        }}\n      >\n        Tasks\n      </Text>\n      <View\n        style={{\n          shadowColor: 'black',\n          width: width * 0.9,\n          marginLeft: width * 0.05,\n          backgroundColor: '#FFFFFF',\n          marginRight: width * 0.05,\n          height: height * 0.5,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ flexDirection: 'row', marginLeft: 10, marginTop: 5 }}>\n          <Text>Show Completed:</Text>\n          <Switch\n            trackColor={{ false: Colors.lightGray, true: Colors.darkGray }}\n            thumbColor={\n              isShowingCompleteTasks ? Colors.maroon : Colors.darkGray\n            }\n            ios_backgroundColor={Colors.lightGray}\n            onValueChange={e => {\n              store.dispatch(\n                homepageDataSlice.actions.setIsShowingCompletedTasks(e),\n              );\n            }}\n            value={isShowingCompleteTasks}\n            style={{ marginLeft: 5 }}\n          />\n        </View>\n        <ScrollView style={{ margin: 10, height: height * 0.5 - 20 }}>\n          {taskState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.5 - 20,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={\n                  width * 0.9 < height * 0.5 - 20\n                    ? width * 0.45\n                    : height * 0.25 - 20\n                }\n                height={\n                  width * 0.9 < height * 0.5 - 20\n                    ? width * 0.45\n                    : height * 0.25 - 20\n                }\n              />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {taskState === loadingStateEnum.success ? (\n                <FlatList\n                  data={userTasks}\n                  renderItem={task => (\n                    <TaskItem task={task} key={`User_Task_${task.item.id}`} />\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nfunction DeleteTask({\n  onDelete,\n}: {\n  onDelete: () => void;\n  e: Animated.AnimatedInterpolation<string | number>;\n}) {\n  return (\n    <Pressable\n      onPress={() => onDelete()}\n      style={{\n        paddingLeft: 10,\n        paddingRight: 10,\n        backgroundColor: Colors.danger,\n      }}\n    >\n      <TrashIcon width={14} height={14} />\n    </Pressable>\n  );\n}\n\nfunction TaskItem({ task }: { task: ListRenderItemInfo<taskType> }) {\n  const [checked, setChecked] = useState<boolean>(\n    task.item.status === taskStatusEnum.completed,\n  );\n  const [updateTaskState, setUpdateTaskState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const { userTasks, isShowingCompleteTasks } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  const [currentText, setCurrentText] = useState(task.item.name);\n  const [mounted, setMounted] = useState(false);\n  const dispatch = useDispatch();\n\n  async function updateTaskStatus(status: taskStatusEnum) {\n    setUpdateTaskState(loadingStateEnum.loading);\n    const data = {\n      status:\n        status === taskStatusEnum.notStarted\n          ? 'notStarted'\n          : status === taskStatusEnum.inProgress\n          ? 'inProgress'\n          : status === taskStatusEnum.completed\n          ? 'completed'\n          : status === taskStatusEnum.waitingOnOthers\n          ? 'waitingOnOthers'\n          : 'deferred',\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const newItem: any = {};\n      Object.assign(newItem, task.item);\n      newItem.status = status;\n      console.log('This is new Item', newItem);\n      dispatch(\n        homepageDataSlice.actions.updateUserTask({\n          index: task.index,\n          task: newItem,\n        }),\n      );\n      setUpdateTaskState(loadingStateEnum.success);\n    } else {\n      setUpdateTaskState(loadingStateEnum.failed);\n    }\n  }\n\n  async function updateText() {\n    const data = {\n      title: userTasks[task.index].name,\n    };\n    if (task.item.excess === false) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setUpdateTaskState(loadingStateEnum.success);\n      } else {\n        setUpdateTaskState(loadingStateEnum.failed);\n      }\n    } else {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        const data = await result.json();\n        dispatch(\n          homepageDataSlice.actions.updateUserTask({\n            task: {\n              name: task.item.name,\n              id: data.id,\n              importance:\n                data.importance === 'high'\n                  ? taskImportanceEnum.high\n                  : data.importance === 'low'\n                  ? taskImportanceEnum.low\n                  : taskImportanceEnum.normal,\n              status:\n                data.status === 'notStarted'\n                  ? taskStatusEnum.notStarted\n                  : data.status === 'inProgress'\n                  ? taskStatusEnum.inProgress\n                  : data.status === 'completed'\n                  ? taskStatusEnum.completed\n                  : data.status === 'waitingOnOthers'\n                  ? taskStatusEnum.waitingOnOthers\n                  : taskStatusEnum.deferred,\n              excess: false,\n            },\n            index: task.index,\n          }),\n        );\n        dispatch(\n          homepageDataSlice.actions.unshiftUserTask({\n            name: '',\n            importance: taskImportanceEnum.normal,\n            id: '',\n            status: taskStatusEnum.notStarted,\n            excess: true,\n          }),\n        );\n        setUpdateTaskState(loadingStateEnum.success);\n      } else {\n        setUpdateTaskState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function deleteTask() {\n    if (task !== undefined) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        const index = store\n          .getState()\n          .homepageData.userTasks.findIndex(e => e.id === task.item.id);\n        if (index !== -1) {\n          dispatch(homepageDataSlice.actions.popUserTask(index));\n        }\n      } else {\n      }\n    }\n  }\n\n  async function checkUpdateText() {\n    setUpdateTaskState(loadingStateEnum.loading);\n    const taskNameSave =\n      store.getState().homepageData.userTasks[task.index].name;\n    setTimeout(() => {\n      if (\n        store.getState().homepageData.userTasks[task.index].name ===\n        taskNameSave\n      ) {\n        updateText();\n      }\n    }, 1500);\n  }\n\n  useEffect(() => {\n    if (mounted) {\n      checkUpdateText();\n    } else {\n      setMounted(true);\n    }\n  }, [currentText]);\n\n  return (\n    <>\n      {isShowingCompleteTasks ||\n      task.item.status !== taskStatusEnum.completed ? (\n        <Swipeable\n          renderRightActions={e => (\n            <>\n              {task.item.excess ? null : (\n                <DeleteTask e={e} onDelete={() => deleteTask()} />\n              )}\n            </>\n          )}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              width: width * 0.9,\n              paddingTop: 5,\n              paddingBottom: 5,\n            }}\n          >\n            <Pressable\n              onPress={() => {\n                setChecked(!checked);\n                if (!checked) {\n                  updateTaskStatus(taskStatusEnum.completed);\n                } else {\n                  updateTaskStatus(taskStatusEnum.notStarted);\n                }\n              }}\n            >\n              <CustomCheckBox\n                checked={checked}\n                checkMarkColor=\"blue\"\n                strokeDasharray={task.item.excess ? 5 : undefined}\n                height={20}\n                width={20}\n              />\n            </Pressable>\n            <View\n              style={{\n                justifyContent: 'center',\n                alignItems: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <TextInput\n                value={task.item.name}\n                onChangeText={e => {\n                  const newTask: taskType = {\n                    name: task.item.name,\n                    id: task.item.id,\n                    importance: task.item.importance,\n                    status: task.item.status,\n                    excess: task.item.excess,\n                  };\n                  newTask.name = e;\n                  dispatch(\n                    homepageDataSlice.actions.updateUserTask({\n                      task: newTask,\n                      index: task.index,\n                    }),\n                  );\n                  setCurrentText(e);\n                }}\n                multiline\n                numberOfLines={1}\n                style={{ width: width * 0.9 - 40 }}\n              />\n            </View>\n          </View>\n        </Swipeable>\n      ) : null}\n    </>\n  );\n}\n\nfunction BoardBlock() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { powerpointBlob, paulyDataState } = useSelector(\n    (state: RootState) => state.paulyData,\n  );\n  return (\n    <>\n      {paulyDataState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n            height: height * 0.3,\n            borderRadius: 15,\n            marginTop: height * 0.03,\n            marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n            marginRight: width * 0.05,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: '#FFFFFF',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n          }}\n        >\n          <ProgressView width={100} height={100} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {paulyDataState === loadingStateEnum.success ? (\n            <>\n              {powerpointBlob !== '' ? (\n                <View\n                  style={{\n                    width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n                    borderRadius: 15,\n                    marginTop: height * 0.03,\n                    marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                    marginRight:\n                      currentBreakPoint === 0 ? width * 0.05 : width * 0.03,\n                    backgroundColor: '#FFFFFF',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.8,\n                    shadowRadius: 10,\n                  }}\n                >\n                  <PDFView\n                    width={currentBreakPoint === 0 ? width * 0.9 : width * 0.7}\n                  />\n                </View>\n              ) : (\n                <View\n                  style={{\n                    width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n                    height: height * 0.3,\n                    marginTop: height * 0.03,\n                    marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                    marginRight:\n                      currentBreakPoint === 0 ? width * 0.05 : width * 0.03,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    backgroundColor: '#FFFFFF',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.8,\n                    shadowRadius: 10,\n                    borderRadius: 15,\n                  }}\n                >\n                  <ProgressView width={100} height={100} />\n                  <Text>Loading</Text>\n                </View>\n              )}\n            </>\n          ) : (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.3,\n                marginTop: height * 0.03,\n                marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                backgroundColor: '#FFFFFF',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.8,\n                shadowRadius: 10,\n                borderRadius: 15,\n              }}\n            >\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction InsightsBlock() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  return (\n    <>\n      {currentBreakPoint <= 0 ? (\n        <>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Recent Files\n          </Text>\n          <View\n            style={{\n              marginLeft: width * 0.05,\n              marginRight: width * 0.05,\n              width: width * 0.9,\n              height: height * 0.3,\n              backgroundColor: '#FFFFFF',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n              overflow: 'scroll',\n            }}\n          >\n            <TrendingFiles />\n          </View>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Popular Files\n          </Text>\n          <View\n            style={{\n              marginLeft: width * 0.05,\n              marginRight: width * 0.05,\n              width: width * 0.9,\n              height: height * 0.3,\n              backgroundColor: '#FFFFFF',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n              marginBottom: height * 0.05,\n              overflow: 'scroll',\n            }}\n          >\n            <PopularFiles />\n          </View>\n        </>\n      ) : (\n        <>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Files\n          </Text>\n          <View\n            style={{\n              width: width * 0.9,\n              flexDirection: 'row',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              marginTop: height * 0.025,\n              marginBottom: height * 0.025,\n              backgroundColor: '#FFFFFF',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ width: width * 0.45, overflow: 'scroll' }}>\n              <TrendingFiles />\n            </View>\n            <View style={{ width: width * 0.45, overflow: 'visible' }}>\n              <PopularFiles />\n            </View>\n          </View>\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PopularFiles() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { trendingData, trendingState } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <>\n      {trendingState === loadingStateEnum.loading ? (\n        <View>\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <ScrollView style={{ height: height * 0.3 }}>\n          {trendingState === loadingStateEnum.success ? (\n            <>\n              {trendingData.map(data => (\n                <Pressable\n                  key={`User_Insight_${data.id}`}\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(data.webUrl);\n                  }}\n                >\n                  <View style={{ margin: 10, flexDirection: 'row' }}>\n                    <MimeTypeIcon width={14} height={14} mimeType={data.type} />\n                    <Text>{data.title}</Text>\n                  </View>\n                </Pressable>\n              ))}\n            </>\n          ) : (\n            <Text>Failed To Load</Text>\n          )}\n        </ScrollView>\n      )}\n    </>\n  );\n}\n\nfunction TrendingFiles() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { userState, userData } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <View style={{ height: height * 0.3, width: width * 0.5 }}>\n      <ScrollView style={{ height: height * 0.3 }}>\n        {userState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {userState === loadingStateEnum.success ? (\n              <View>\n                {userData.map(data => (\n                  <Pressable\n                    key={`User_Insight_${data.id}`}\n                    style={{ flexDirection: 'row' }}\n                    onPress={() => {\n                      Linking.openURL(data.webUrl);\n                    }}\n                  >\n                    <View style={{ margin: 10, flexDirection: 'row' }}>\n                      <MimeTypeIcon\n                        width={14}\n                        height={14}\n                        mimeType={data.type}\n                      />\n                      <Text>{data.title}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n","import { loadingStateEnum, resourceMode, resourceResponce } from '../types';\nimport store from '../Redux/store';\nimport callMsGraph from './Ultility/microsoftAssets';\nimport { resourcesSlice } from '../Redux/reducers/resourcesReducer';\n\nexport function convertResourceModeString(convert?: resourceMode): string {\n  if (convert === resourceMode.sports) {\n    return 'sports';\n  }\n  if (convert === resourceMode.advancement) {\n    return 'advancement';\n  }\n  if (convert === resourceMode.schoolEvents) {\n    return 'schoolEvents';\n  }\n  if (convert === resourceMode.annoucments) {\n    return 'annoucments';\n  }\n  if (convert === resourceMode.fitness) {\n    return 'fitness';\n  }\n  return 'files';\n}\n\nasync function getResourceFollows() {\n  let nextLink = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.resourceListId\n  }/items?expand=fields($select=resourceGroupId,resourceConversationId)&$select=id`;\n  while (nextLink !== '') {\n    const result = await callMsGraph(nextLink);\n    if (result.ok) {\n      const data = await result.json();\n      if (data['@odata.nextLink'] !== undefined) {\n        nextLink = data['@odata.nextLink'];\n      } else {\n        nextLink = '';\n      }\n      const output: resourceFollowType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        output.push({\n          teamId: data.value[index].fields.resourceGroupId,\n          channelId: data.value[index].fields.resourceConversationId,\n        });\n      }\n      store.dispatch(resourcesSlice.actions.setResourceFollow(output));\n    } else {\n      store.dispatch(\n        resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n      );\n      return;\n    }\n  }\n  store.dispatch(\n    resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n  );\n}\n\nexport async function getResources(category?: resourceMode) {\n  await getResourceFollows();\n  const categoryString = convertResourceModeString(category);\n  const categoryFilter = category\n    ? `?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.resourceExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.resourceExtensionId\n      }'%20and%20ep/value%20eq%20'${categoryString}')`\n    : '';\n  const output: resourceDataType[] = [];\n  const batchDataRequests: { id: string; method: string; url: string }[][] = [\n    [],\n  ];\n  let batchCount = 0;\n  for (\n    let index = 0;\n    index < store.getState().resources.resourceFollow.length;\n    index += 1\n  ) {\n    // resourceGroupId\n    batchDataRequests[batchCount].push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/teams/${\n        store.getState().resources.resourceFollow[index].teamId\n      }/channels/${\n        store.getState().resources.resourceFollow[index].channelId\n      }/messages`,\n    });\n    if (store.getState().resources.resourceFollow.length % 20 === 0) {\n      batchDataRequests.push([]);\n      batchCount += 1;\n    }\n  }\n  for (let index = 0; index < batchDataRequests.length; index += 1) {\n    const batchData = {\n      requests: batchDataRequests[index],\n    };\n    if (batchDataRequests[index].length !== 0) {\n      const resourceRsp = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (resourceRsp.ok) {\n        const resourceResponceData = await resourceRsp.json();\n        for (\n          let responceIndex = 0;\n          responceIndex < resourceResponceData.responses.length;\n          responceIndex += 1\n        ) {\n          if (resourceResponceData.responses[responceIndex].status === 200) {\n            for (\n              let dataIndex = 0;\n              dataIndex <\n              resourceResponceData.responses[responceIndex].body.value.length;\n              dataIndex += 1\n            ) {\n              if (\n                resourceResponceData.responses[responceIndex].body.value[\n                  dataIndex\n                ].body.content !== '<systemEventMessage/>'\n              ) {\n                const attachments: resourceType[] = [];\n                for (\n                  let attachmentIndex = 0;\n                  attachmentIndex <\n                  resourceResponceData.responses[responceIndex].body.value[\n                    dataIndex\n                  ].attachments.length;\n                  attachmentIndex += 1\n                ) {\n                  if (\n                    resourceResponceData.responses[responceIndex].body.value[\n                      dataIndex\n                    ].attachments[attachmentIndex].contentType === 'reference'\n                  ) {\n                    const attachmentResult = await callMsGraph(\n                      `https://graph.microsoft.com/v1.0/teams/${resourceResponceData.responses[responceIndex].body.value[dataIndex].channelIdentity.teamId}/channels/${resourceResponceData.responses[responceIndex].body.value[dataIndex].channelIdentity.channelId}/filesFolder`,\n                    );\n                    if (attachmentResult.ok) {\n                      const attachmentData = await attachmentResult.json();\n                      const attachmentGetResult = await callMsGraph(\n                        `https://graph.microsoft.com/v1.0/drives/${attachmentData.parentReference.driveId}/items/${resourceResponceData.responses[responceIndex].body.value[dataIndex].attachments[attachmentIndex].id}`,\n                      );\n                      if (attachmentGetResult.ok) {\n                        const attachmentGetResultData =\n                          await attachmentGetResult.json();\n                        attachments.push({\n                          webUrl: attachmentGetResultData.webUrl,\n                          id: attachmentGetResultData.id,\n                          title: attachmentGetResultData.name,\n                          type: attachmentGetResultData.file.mimeType,\n                        });\n                      }\n                    }\n                  }\n                }\n                const outputData: resourceDataType = {\n                  teamId:\n                    store.getState().resources.resourceFollow[\n                      parseInt(\n                        resourceResponceData.responses[responceIndex].id,\n                      ) - 1\n                    ].teamId,\n                  conversationId:\n                    store.getState().resources.resourceFollow[\n                      parseInt(\n                        resourceResponceData.responses[responceIndex].id,\n                      ) - 1\n                    ].channelId,\n                  id: resourceResponceData.responses[responceIndex].body.value[\n                    dataIndex\n                  ].id,\n                  body: resourceResponceData.responses[responceIndex].body\n                    .value[dataIndex].body.content,\n                  html:\n                    resourceResponceData.responses[responceIndex].body.value[\n                      dataIndex\n                    ].body.contentType === 'html',\n                  attachments:\n                    attachments.length >= 1 ? attachments : undefined,\n                };\n                output.push(outputData);\n              }\n            }\n          }\n        }\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n        return;\n      }\n    }\n  }\n  store.dispatch(\n    resourcesSlice.actions.setResources({\n      resources: output,\n      loadingState: loadingStateEnum.success,\n    }),\n  );\n}\n\nexport async function getResourcesSearch(search: string) {\n  store.dispatch(\n    resourcesSlice.actions.setResourcesState(loadingStateEnum.loading),\n  );\n  const searchPayload = {\n    requests: [\n      {\n        entityTypes: ['chatMessage'],\n        query: {\n          queryString: search,\n        },\n        from: 0,\n        size: 15,\n        enableTopResults: true,\n      },\n    ],\n  };\n  const searchResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/search/query',\n    'POST',\n    JSON.stringify(searchPayload),\n  );\n  if (searchResult.ok) {\n    const searchData = await searchResult.json();\n    const batchDataRequests: { id: string; method: string; url: string }[] = [];\n    if (searchData.value.length === 1) {\n      if (searchData.value[0].hitsContainers.length === 1) {\n        for (\n          let index = 0;\n          index < searchData.value[0].hitsContainers[0].hits.length;\n          index += 1\n        ) {\n          if (\n            searchData.value[0].hitsContainers[0].hits[index].resource\n              .channelIdentity !== undefined\n          ) {\n            const resourceIndex = store\n              .getState()\n              .resources.resourceFollow.findIndex(e => {\n                return (\n                  e.channelId ===\n                  searchData.value[0].hitsContainers[0].hits[index].resource\n                    .channelIdentity.channelId\n                );\n              });\n            if (resourceIndex !== -1) {\n              batchDataRequests.push({\n                id: batchDataRequests.length.toString() + 1,\n                method: 'GET',\n                url: `/teams/${searchData.value[0].hitsContainers[0].hits[index].resource.channelIdentity.teamId}/channels/${searchData.value[0].hitsContainers[0].hits[index].resource.channelIdentity.channelId}/messages/${searchData.value[0].hitsContainers[0].hits[index].resource.id}`,\n              });\n            } else {\n              store.dispatch(\n                resourcesSlice.actions.setResourcesState(\n                  loadingStateEnum.failed,\n                ),\n              );\n              return;\n            }\n          }\n        }\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n        return;\n      }\n\n      const batchData = {\n        requests: batchDataRequests,\n      };\n      const batchResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (batchResult.ok) {\n        const batchResultData = await batchResult.json();\n        const outputData: resourceDataType[] = [];\n        for (\n          let batchIndex = 0;\n          batchIndex < batchResultData.responses.length;\n          batchIndex += 1\n        ) {\n          if (batchResultData.responses[batchIndex].status === 200) {\n            // TO DO fix ok code\n            console.log(batchResultData.responses[batchIndex].body);\n            outputData.push({\n              teamId:\n                batchResultData.responses[batchIndex].body.channelIdentity\n                  .teamId,\n              conversationId:\n                batchResultData.responses[batchIndex].body.channelIdentity\n                  .channelId,\n              id: batchResultData.responses[batchIndex].body.id,\n              body: batchResultData.responses[batchIndex].body.body.content,\n              html:\n                batchResultData.responses[batchIndex].body.body.contentType ===\n                'html',\n            });\n          } else {\n            store.dispatch(\n              resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n            );\n            return;\n          }\n        }\n        store.dispatch(\n          resourcesSlice.actions.setResources({\n            resources: outputData,\n            loadingState: loadingStateEnum.success,\n          }),\n        );\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n      }\n    } else {\n      store.dispatch(\n        resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    store.dispatch(\n      resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n    );\n  }\n}\n\nexport default async function getResource(\n  groupId: string,\n  conversationId: string,\n): Promise<{ result: resourceResponce; itemId?: string }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.resourceListId\n    }/items?expand=fields&$filter=fields/resourceGroupId%20eq%20'${groupId}'%20and%20fields/resourceConversationId%20eq%20'${conversationId}'`,\n  );\n  if (!result.ok) {\n    return { result: resourceResponce.failed };\n  }\n  const data = await result.json();\n  if (data.value.length === 1) {\n    return { result: resourceResponce.found, itemId: data.value[0].id };\n  }\n  if (data.value.length === 0) {\n    return { result: resourceResponce.notFound };\n  }\n  return { result: resourceResponce.failed };\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  Resources.tsx\n  This is the main component for the resources section of pauly.\n  See README.md for more information about the resources section.\n*/\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts } from 'expo-font';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  TextInput,\n  Platform,\n  Pressable,\n  Linking,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport store, { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport { resourcesSlice } from '../Redux/reducers/resourcesReducer';\nimport createUUID, { getTextState } from '../Functions/Ultility/createUUID';\nimport callMsGraph from '../Functions/Ultility/microsoftAssets';\nimport {\n  convertResourceModeString,\n  getResources,\n  getResourcesSearch,\n} from '../Functions/getResources';\nimport { CloseIcon, SearchIcon } from '../UI/Icons/Icons';\nimport WebViewCross from '../UI/WebViewCross';\nimport BackButton from '../UI/BackButton';\nimport ProgressView from '../UI/ProgressView';\nimport MimeTypeIcon from '../UI/Icons/MimeTypeIcon';\nimport { Colors, loadingStateEnum, resourceMode } from '../types';\n\n// Resources\n// -> Sports\n// -> Advancement Board\n// -> Schedule Annoucments\n// -> School Events\n// -> Annoucments\n\nfunction PickerPiece({\n  text,\n  item,\n  isHoverPicker,\n  setIsHoverPicker,\n}: {\n  text: string;\n  item: resourceMode;\n  isHoverPicker: boolean;\n  setIsHoverPicker: (item: boolean) => void;\n}) {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { selectedResourceMode } = useSelector(\n    (state: RootState) => state.resources,\n  );\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  return (\n    <Pressable\n      onPress={() => {\n        dispatch(resourcesSlice.actions.setSelectedResourceMode(item));\n      }}\n      onHoverIn={() => {\n        setIsHoverPicker(true);\n        setIsSelected(true);\n      }}\n      onHoverOut={() => setIsSelected(false)}\n      style={{\n        height: isHoverPicker ? height * 0.1 : height * 0.05,\n        width: isSelected\n          ? currentBreakPoint >= 2\n            ? width * 0.3\n            : width * 0.6\n          : currentBreakPoint >= 2\n          ? width * 0.2\n          : width * 0.4,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#FFFFFF',\n      }}\n    >\n      <View\n        style={{\n          height: isHoverPicker ? height * 0.06 : height * 0.03,\n          width: isSelected\n            ? currentBreakPoint >= 2\n              ? width * 0.28\n              : width * 0.46\n            : currentBreakPoint >= 2\n            ? width * 0.18\n            : width * 0.36,\n          marginLeft: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          marginRight: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          backgroundColor: Colors.darkGray,\n          borderWidth: item !== selectedResourceMode ? 0 : 2,\n          borderColor: 'black',\n          borderRadius: 15,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white }}>{text}</Text>\n      </View>\n    </Pressable>\n  );\n}\n\nfunction checkIfResourceDataJustAttachment(body: string): boolean {\n  if (body.length === 67) {\n    const start = body.slice(0, 15);\n    const end = body.slice(53, 67);\n    if (start === '<attachment id=' && end === '></attachment>') {\n      return false;\n    }\n    return true;\n  }\n  return true;\n}\n\nexport default function Resources() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { resources, loadingState, selectedResourceMode } = useSelector(\n    (state: RootState) => state.resources,\n  );\n  const [isHoverPicker, setIsHoverPicker] = useState<boolean>(false);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const [isShowingCategoryView, setIsShowingCategoryView] =\n    useState<boolean>(false);\n  const [selectedPost, setSelectedPost] = useState<\n    undefined | { teamId: string; conversationId: string; messageId: string }\n  >(undefined);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    await getResources(selectedResourceMode);\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    loadData();\n  }, [selectedResourceMode]);\n\n  // Fonts\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ height, width }}>\n        <View\n          style={{\n            height: height * 0.1,\n            width,\n            backgroundColor: Colors.darkGray,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n          <Text style={{ fontFamily: 'BukhariScript', color: Colors.white }}>\n            Resources\n          </Text>\n        </View>\n        <SearchBox />\n        <View\n          style={{\n            width,\n            height: height * 0.05,\n            backgroundColor: Colors.lightGray,\n          }}\n        />\n        <ScrollView\n          style={{\n            height: isHoverPicker ? height * 0.75 : height * 0.8,\n            backgroundColor: '#ededed',\n          }}\n        >\n          <>\n            {loadingState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height: isHoverPicker ? height * 0.75 : height * 0.8,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.05 : height * 0.05}\n                  height={width < height ? width * 0.05 : height * 0.05}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {loadingState === loadingStateEnum.success ? (\n                  <>\n                    {resources.map(resource => (\n                      <>\n                        {isGovernmentMode ? (\n                          <Pressable\n                            key={`Resource_${resource.id}`}\n                            onPress={() => {\n                              setIsShowingCategoryView(true);\n                              setSelectedPost({\n                                teamId: resource.teamId,\n                                conversationId: resource.conversationId,\n                                messageId: resource.id,\n                              });\n                            }}\n                            style={{\n                              width: width * 0.8,\n                              marginLeft: 'auto',\n                              marginRight: 'auto',\n                              backgroundColor: Colors.white,\n                              borderRadius: 15,\n                              marginBottom: height * 0.01,\n                            }}\n                          >\n                            {resource.body !== '' &&\n                            checkIfResourceDataJustAttachment(resource.body) ? (\n                              <WebViewCross\n                                width={width * 0.8 - 20}\n                                html={\n                                  resource.html\n                                    ? resource.body\n                                    : `<div><div>${resource.body}</div></div>`\n                                }\n                              />\n                            ) : null}\n                            {resource.attachments !== undefined ? (\n                              <View\n                                style={{\n                                  marginLeft: 10,\n                                  marginBottom: 10,\n                                  marginRight: 10,\n                                  marginTop:\n                                    resource.body === '' ||\n                                    !checkIfResourceDataJustAttachment(\n                                      resource.body,\n                                    )\n                                      ? 10\n                                      : 0,\n                                  overflow: 'scroll',\n                                }}\n                              >\n                                {resource.attachments.map(attachment => (\n                                  <Pressable\n                                    style={{ flexDirection: 'row' }}\n                                    onPress={() => {\n                                      Linking.openURL(attachment.webUrl);\n                                    }}\n                                  >\n                                    <MimeTypeIcon\n                                      width={14}\n                                      height={14}\n                                      mimeType={attachment.type}\n                                    />\n                                    <Text>{attachment.title}</Text>\n                                  </Pressable>\n                                ))}\n                              </View>\n                            ) : null}\n                          </Pressable>\n                        ) : (\n                          <View\n                            key={`Resource_${resource.id}`}\n                            style={{\n                              width: width * 0.8,\n                              marginLeft: 'auto',\n                              marginRight: 'auto',\n                              backgroundColor: Colors.white,\n                              borderRadius: 15,\n                              marginBottom: height * 0.01,\n                            }}\n                          >\n                            {resource.body !== '' &&\n                            checkIfResourceDataJustAttachment(resource.body) ? (\n                              <WebViewCross\n                                width={width * 0.8 - 20}\n                                html={\n                                  resource.html\n                                    ? resource.body\n                                    : `<div><div>${resource.body}</div></div>`\n                                }\n                              />\n                            ) : null}\n                            {resource.attachments !== undefined ? (\n                              <View\n                                style={{\n                                  marginLeft: 10,\n                                  marginBottom: 10,\n                                  marginRight: 10,\n                                  marginTop:\n                                    resource.body === '' ||\n                                    !checkIfResourceDataJustAttachment(\n                                      resource.body,\n                                    )\n                                      ? 10\n                                      : 0,\n                                  overflow: 'scroll',\n                                }}\n                              >\n                                {resource.attachments.map(attachment => (\n                                  <Pressable\n                                    key={attachment.id}\n                                    style={{ flexDirection: 'row' }}\n                                    onPress={() => {\n                                      Linking.openURL(attachment.webUrl);\n                                    }}\n                                  >\n                                    <MimeTypeIcon\n                                      width={14}\n                                      height={14}\n                                      mimeType={attachment.type}\n                                    />\n                                    <Text>{attachment.title}</Text>\n                                  </Pressable>\n                                ))}\n                              </View>\n                            ) : null}\n                          </View>\n                        )}\n                      </>\n                    ))}\n                  </>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </>\n            )}\n          </>\n        </ScrollView>\n        <Pressable\n          style={{ height: isHoverPicker ? height * 0.1 : height * 0.05 }}\n          onHoverIn={() => {\n            setIsHoverPicker(true);\n          }}\n          onHoverOut={() => {\n            setIsHoverPicker(false);\n          }}\n        >\n          <ScrollView\n            horizontal\n            style={{\n              height: isHoverPicker ? height * 0.1 : height * 0.05,\n              width,\n              backgroundColor: Colors.white,\n            }}\n            showsHorizontalScrollIndicator={false}\n          >\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Home\"\n              item={resourceMode.home}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Sports\"\n              item={resourceMode.sports}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Advancement\"\n              item={resourceMode.advancement}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"School Events\"\n              item={resourceMode.schoolEvents}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Annoucments\"\n              item={resourceMode.annoucments}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Fitness\"\n              item={resourceMode.fitness}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Files\"\n              item={resourceMode.files}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n          </ScrollView>\n        </Pressable>\n      </View>\n      {isGovernmentMode &&\n      isShowingCategoryView &&\n      selectedPost !== undefined ? (\n        <GovernmentCategoryView\n          teamId={selectedPost.teamId}\n          channelId={selectedPost.conversationId}\n          messageId={selectedPost.messageId}\n          onClose={() => setIsShowingCategoryView(false)}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction GovernmentCategoryView({\n  teamId,\n  channelId,\n  messageId,\n  onClose,\n}: {\n  teamId: string;\n  channelId: string;\n  messageId: string;\n  onClose: () => void;\n}) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [categoryState, setCategoryState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [selectedCategory, setSelectedCategory] = useState<resourceMode>(\n    resourceMode.home,\n  );\n  async function addCategory() {\n    setCategoryState(loadingStateEnum.loading);\n    const data = {\n      singleValueExtendedProperties: [\n        {\n          id: store.getState().paulyList.resourceExtensionId,\n          value: convertResourceModeString(selectedCategory),\n        },\n      ],\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages/${messageId}`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      setCategoryState(loadingStateEnum.success);\n    } else {\n      setCategoryState(loadingStateEnum.failed);\n    }\n  }\n  return (\n    <View\n      style={{\n        height: height * 0.9,\n        width: width * 0.8,\n        position: 'absolute',\n        top: height * 0.05,\n        left: width * 0.1,\n        backgroundColor: '#FFFFFF',\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n      }}\n    >\n      <Pressable onPress={() => onClose()}>\n        <CloseIcon width={12} height={12} />\n      </Pressable>\n      <View\n        style={{\n          width: width * 0.8,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: '#FFFFFF',\n        }}\n      >\n        <Text>Categories</Text>\n      </View>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.sports)}\n        style={{\n          marginLeft: width * 0.05,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.sports ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Sports</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.advancement)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.advancement ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Advancement</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.schoolEvents)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.schoolEvents ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>School Events</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.annoucments)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.annoucments ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Annoucments</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.fitness)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.fitness ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Fitness</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.files)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.files ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Files</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          addCategory();\n        }}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>{getTextState(categoryState, { notStarted: 'Confirm' })}</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nfunction SearchBox() {\n  // Dimentsions\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [mounted, setMounted] = useState<boolean>(false);\n  const { searchValue } = useSelector((state: RootState) => state.resources);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false); // Boolean true if text overflowing. This is telling the search icon to show or not.\n  const style = Platform.OS === 'web' ? { outlineStyle: 'none' } : undefined; // Style to remove ourline around textbox on web\n  const dispatch = useDispatch();\n\n  // Getting search results on value chage\n  useEffect(() => {\n    if (mounted) {\n      // Checking so that this isn't called on start\n      const searchValueSave = searchValue; // saving value to check if change in 1.5 s\n      setTimeout(() => {\n        // Waiting 1.5s\n        if (store.getState().resources.searchValue === searchValueSave) {\n          // Checking if value changed\n          getResourcesSearch(searchValue); // getting search data\n        }\n      }, 1500);\n    } else {\n      setMounted(true); // Setting that it has been called on start\n    }\n  }, [searchValue]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.1 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchValue}\n            onChangeText={e => {\n              dispatch(resourcesSlice.actions.setSearchValue(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchValue}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { useMsal } from '@azure/msal-react';\nimport {\n  DiscoveryDocument,\n  revokeAsync,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts } from 'expo-font';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { View, Text, Pressable, Platform, Image } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { tenantId } from '../../PaulyConfig';\nimport store, { RootState } from '../../Redux/store';\nimport { authenticationTokenSlice } from '../../Redux/reducers/authenticationTokenReducer';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport {\n  GearIcon,\n  GovernmentIcon,\n  PersonIcon,\n  StudentSearchIcon,\n} from '../../UI/Icons/Icons';\nimport BackButton from '../../UI/BackButton';\nimport { Colors, loadingStateEnum } from '../../types';\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n\nexport default function Settings() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { uri, displayName } = useSelector(\n    (state: RootState) => state.microsoftProfileData,\n  );\n  const [imageLoadState, setImageLoadState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.maroon,\n        bottom: Colors.maroon,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentBreakPoint >= 1) {\n      navigate('/');\n    }\n  }, [currentBreakPoint]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View>\n      <BackButton to=\"/\" />\n      <View\n        style={{\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: height * 0.2,\n          marginTop: height * 0.025,\n          marginBottom: height * 0.02,\n        }}\n      >\n        <GearIcon\n          width={width < height ? width * 0.3 : height * 0.2}\n          height={width < height ? width * 0.3 : height * 0.2}\n          style={{ position: 'absolute', left: width * 0.2 }}\n        />\n        <Text\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: 45,\n            color: Colors.white,\n          }}\n        >\n          Settings\n        </Text>\n      </View>\n      <View\n        style={{\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {uri !== '' && imageLoadState !== loadingStateEnum.failed ? (\n          <Image\n            source={{ uri }}\n            onError={e => {\n              setImageLoadState(loadingStateEnum.failed);\n              console.log(e.nativeEvent.error);\n            }}\n            style={{\n              width: width * 0.3,\n              height: width * 0.3,\n              borderRadius: width * 0.25,\n            }}\n          />\n        ) : (\n          <PersonIcon width={width * 0.4} height={width * 0.4} />\n        )}\n        <Text\n          style={{\n            color: Colors.white,\n            fontWeight: 'bold',\n            fontSize: 24,\n            marginTop: height * 0.05,\n          }}\n        >\n          {displayName}\n        </Text>\n      </View>\n      <Pressable\n        onPress={() => {\n          signOut();\n        }}\n        style={{\n          width: width * 0.8,\n          height: height * 0.08,\n          borderRadius: 15,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 2, height: 4 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <Text style={{ fontWeight: 'bold' }}>SIGN OUT</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          navigate('/students');\n        }}\n        style={{\n          width: width * 0.8,\n          height: height * 0.08,\n          borderRadius: 15,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 2, height: 4 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n          alignItems: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <StudentSearchIcon\n          width={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n          height={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n          style={{ marginLeft: width * 0.025 }}\n        />\n        <Text>Students</Text>\n      </Pressable>\n      {isGovernmentMode ? (\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government');\n          }}\n          style={{\n            width: width * 0.8,\n            height: height * 0.08,\n            borderRadius: 15,\n            shadowColor: Colors.black,\n            shadowOffset: { width: 2, height: 4 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            flexDirection: 'row',\n            backgroundColor: Colors.white,\n            alignItems: 'center',\n            marginTop: height * 0.05,\n          }}\n        >\n          <GovernmentIcon\n            width={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n            height={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n            style={{ marginLeft: width * 0.025 }}\n          />\n          <Text>Government</Text>\n        </Pressable>\n      ) : null}\n    </View>\n  );\n}\n","import {\n  View,\n  Text,\n  Dimensions,\n  Image,\n  ImageSourcePropType,\n  Pressable,\n} from 'react-native';\nimport React, {\n  ReactNode,\n  useCallback,\n  useContext,\n  useEffect,\n  useState,\n} from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useSelector } from 'react-redux';\nimport {\n  BookIcon,\n  CalendarIcon,\n  GearIcon,\n  GraduationHatIcon,\n  GraphAPILogo,\n  HomeIcon,\n  MedalIcon,\n  StudentSearchIcon,\n} from '../../../UI/Icons/Icons';\nimport { RootState } from '../../../Redux/store';\nimport { Colors } from '../../../types';\n\nfunction Block({\n  height,\n  width,\n  text,\n  imageSource,\n  children,\n}: {\n  height: number;\n  width: number;\n  text: string;\n  imageSource?: ImageSourcePropType;\n  children?: ReactNode;\n}) {\n  return (\n    <View\n      style={{\n        height,\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.darkGray,\n        borderRadius: 5,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 5,\n      }}\n    >\n      {imageSource !== undefined && (\n        <Image\n          source={imageSource}\n          style={{ width: width * 0.5, height: height * 0.5 }}\n          resizeMode=\"center\"\n        />\n      )}\n      {imageSource === undefined && children !== undefined && (\n        <View style={{ width: width * 0.5, height: height * 0.5 }}>\n          <>{children}</>\n        </View>\n      )}\n      <Text style={{ color: Colors.white }}>{text}</Text>\n    </View>\n  );\n}\n\nexport default function Government() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isGovernmentMode) {\n      navigate('/');\n    }\n  }, []);\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../../assets/fonts/BukhariScript.ttf'),\n  });\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  const [mainWidth, setMainWidth] = useState<number>(0);\n  useEffect(() => {\n    const fivePercent = width * 0.05;\n    const remainder = (width * 0.8) % (100 + fivePercent);\n    setMainWidth(width * 0.8 - remainder - fivePercent);\n  }, [width]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      {currentBreakPoint <= 0 ? (\n        <Pressable onPress={() => navigate('/profile/')}>\n          <Text>Back</Text>\n        </Pressable>\n      ) : null}\n      <View\n        style={{\n          height: height * 0.2,\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={1}\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: height * 0.09,\n            height: height * 0.13,\n            width: width * 0.8,\n            textAlign: 'center',\n            textAlignVertical: 'center',\n            verticalAlign: 'middle',\n          }}\n        >\n          Government\n        </Text>\n      </View>\n      <View\n        style={{\n          height: height * 0.75,\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <View\n          style={{\n            height: height * 0.75,\n            width: mainWidth,\n            flexDirection: 'row',\n            alignContent: 'flex-start',\n            flexWrap: 'wrap',\n            rowGap: height * 0.05,\n            columnGap: width * 0.05,\n          }}\n        >\n          <Pressable onPress={() => navigate('/profile/government/graph/list')}>\n            <Block width={100} height={100} text=\"Graph\">\n              <GraphAPILogo width={50} height={50} />\n            </Block>\n          </Pressable>\n          <Pressable\n            onPress={() => navigate('/profile/government/commissions')}\n          >\n            <Block width={100} height={100} text=\"Commissions\">\n              <MedalIcon width={50} height={50} />\n            </Block>\n          </Pressable>\n          <Pressable onPress={() => navigate('/profile/government/sports')}>\n            <Block\n              width={100}\n              height={100}\n              text=\"Sports\"\n              imageSource={require('../../../../assets/images/Football.png')}\n            />\n          </Pressable>\n          <Pressable onPress={() => navigate('/profile/government/homepage')}>\n            <Block width={100} height={100} text=\"Homepage\">\n              <HomeIcon width={50} height={50} />\n            </Block>\n          </Pressable>\n          <Pressable onPress={() => navigate('/profile/government/calendar')}>\n            <Block width={100} height={100} text=\"Calendar\">\n              <CalendarIcon width={50} height={50} />\n            </Block>\n          </Pressable>\n          <Pressable onPress={() => navigate('/profile/government/classes')}>\n            <Block width={100} height={100} text=\"Classes\">\n              <GraduationHatIcon width={50} height={50} />\n            </Block>\n          </Pressable>\n          <Pressable onPress={() => navigate('/profile/government/admin')}>\n            <Block width={100} height={100} text=\"Admin\">\n              <GearIcon width={50} height={50} />\n            </Block>\n          </Pressable>\n          <Pressable onPress={() => navigate('/profile/government/resources')}>\n            <Block width={100} height={100} text=\"Resources\">\n              <BookIcon width={50} height={50} />\n            </Block>\n          </Pressable>\n          <Pressable onPress={() => navigate('/profile/government/students')}>\n            <Block width={100} height={100} text=\"Students\">\n              <StudentSearchIcon width={50} height={50} />\n            </Block>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// June 19 2023\n// Picker with animated black line\n\nimport React, { useState, ReactNode, useRef, useEffect, Children } from 'react';\nimport { View, Pressable, Animated } from 'react-native';\n// import styles from './Picker.module.css'\n\ninterface PickerWrapperProps {\n  selectedIndex: number;\n  onSetSelectedIndex: (item: number) => void;\n  children: ReactNode;\n  width: number;\n  height: number;\n}\n\nconst PickerWrapper: React.FC<PickerWrapperProps> = ({\n  selectedIndex,\n  onSetSelectedIndex,\n  children,\n  width,\n  height,\n}) => {\n  const pan = useRef(new Animated.Value(0)).current;\n  const compoentWidth = width / Children.count(children);\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedIndex * compoentWidth);\n  }, []);\n\n  return (\n    <View style={{ flexDirection: 'row', height: height * 0.8, width }}>\n      {React.Children.map(children, (child, index) => (\n        <View\n          style={{\n            position: 'absolute',\n            transform: [{ translateX: index * compoentWidth }],\n            width: compoentWidth,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              onSetSelectedIndex(index);\n              fadeIn(index);\n            }}\n          >\n            <>{child}</>\n          </Pressable>\n        </View>\n      ))}\n      <Animated.View\n        style={{\n          transform: [{ translateX: pan }],\n        }}\n      >\n        <View\n          style={{\n            height: height * 0.2,\n            width: compoentWidth,\n            backgroundColor: 'black',\n            top: height * 0.6,\n            borderRadius: 5,\n            position: 'absolute',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default PickerWrapper;\n\n// transform: 'translate3d(' + selectedIndex * 100 + '%, ' + \"0\" + ',0)',\n\n// (selectedValue === index) ?\n// :styles.UnSelectedButtonStyle\n\n// .SelectedButtonStyle{\n//     background: rgba(68, 68, 68, 0.7);\n//     /* nice.. */\n//     border-radius: 30px;\n//     overflow: hidden;\n//     color: black;\n//     z-index: 2;\n//     padding: 0;\n//     margin: 0;\n//     transition: transform .5s ease-in-out;\n//   }\n\n//   .UnSelectedButtonStyle{\n//     overflow: hidden;\n//     text-align: center;\n//     font-size: 18px;\n//     letter-spacing: 1px;\n//     color: black;\n//     position: relative;\n//     border: none;\n//     background: transparent;\n//     grid-row: 1;\n//     z-index: 5;\n//   }\n\n//   .SwitchButtonContainer{\n//     background: rgba(155, 144, 140, 0.128);\n//     padding: 0;\n//     margin: 0;\n//     grid-column: 1;\n//     grid-row: 1;\n//   }\n","import { loadingStateEnum } from '../types';\nimport callMsGraph from './Ultility/microsoftAssets';\n\nexport async function getTeams(nextLink?: string): Promise<{\n  result: loadingStateEnum;\n  data?: groupType[];\n  nextLink?: string;\n}> {\n  const groupResult = await callMsGraph(\n    nextLink || 'https://graph.microsoft.com/v1.0/me/joinedTeams',\n  );\n  if (groupResult.ok) {\n    const groupResultData = await groupResult.json();\n    if (groupResultData.value !== undefined) {\n      const outputData: groupType[] = [];\n      for (let index = 0; index < groupResultData.value.length; index += 1) {\n        outputData.push({\n          name: groupResultData.value[index].displayName,\n          id: groupResultData.value[index].id,\n        });\n      }\n      return {\n        result: loadingStateEnum.success,\n        data: outputData,\n        nextLink: groupResultData['@odata.nextLink'],\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getChannels(\n  teamId: string,\n  nextLink?: string,\n): Promise<{\n  result: loadingStateEnum;\n  data?: channelType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${teamId}/allChannels`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const output: channelType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      output.push({\n        id: data.value[index].id,\n        displayName: data.value[index].displayName,\n        selected: false,\n        loading: false,\n        error: false,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getPosts(\n  teamId: string,\n  channelId: string,\n): Promise<{\n  result: loadingStateEnum;\n  data?: resourceDataType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const output: resourceDataType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      output.push({\n        id: data.value[index].id,\n        body: data.value[index].body.content,\n        teamId: data.value[index].channelIdentity.teamId,\n        conversationId: data.value[index].channelIdentity.channelId,\n        html: false,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport PickerWrapper from '../../../../UI/Pickers/Picker';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { clientId } from '../../../../PaulyConfig';\nimport { getTeams } from '../../../../Functions/groupsData';\n\ntype listType = {\n  displayName: string;\n  listId: string;\n  name: string;\n};\n\ntype extensionType = {\n  description: string;\n  id: string;\n};\n\nenum graphMode {\n  list,\n  group,\n  extension,\n}\n\nexport default function MicrosoftGraphOverview() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [lists, setLists] = useState<listType[]>([]);\n  const [groups, setGroups] = useState<groupType[]>([]);\n  const [extensions, setExtensions] = useState<extensionType[]>([]);\n  const [applicationExtensions, setApplicationExtensions] = useState<\n    extensionType[]\n  >([]);\n  const [selectedGraphMode, setSelectedGraphMode] = useState<graphMode>(\n    graphMode.list,\n  );\n  const { mode } = useParams();\n\n  // loading states\n  const [groupLoadingState, setGroupLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [listLoadingState, setListLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [schemaLoadingState, setSchemaLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n\n  async function getLists() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n    ); // sites/8td1tk.onmicrosoft.com/sites\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value !== undefined) {\n        const incomingLists: listType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          incomingLists.push({\n            displayName: data.value[index].displayName,\n            listId: data.value[index].id,\n            name: data.value[index].name,\n          });\n        }\n        setLists(incomingLists);\n        setListLoadingState(loadingStateEnum.success);\n      } else {\n        setListLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setListLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  // async function searchGroups(search: string) {\n  //   const groupResult = await callMsGraph(\n  //     `https://graph.microsoft.com/v1.0/groups?$filter=startswith(displayName,'${search}')`,\n  //   );\n  // }\n\n  async function loadData() {\n    const groupResult = await getTeams(\n      'https://graph.microsoft.com/v1.0/groups',\n    );\n    if (\n      groupResult.result === loadingStateEnum.success &&\n      groupResult.data !== undefined\n    ) {\n      setGroups(groupResult.data);\n    }\n    setGroupLoadingState(groupResult.result);\n  }\n\n  async function getExtensions() {\n    let schemaExtensionsUrl = `https://graph.microsoft.com/v1.0/schemaExtensions?$filter=owner%20eq%20'${clientId}'`;\n    const resultData: extensionType[] = [];\n    while (schemaExtensionsUrl !== '') {\n      const result = await callMsGraph(schemaExtensionsUrl);\n      if (!result.ok) {\n        setSchemaLoadingState(loadingStateEnum.failed);\n        return;\n      }\n      const data = await result.json();\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          description: data.value[index].description,\n          id: data.value[index].id,\n        });\n      }\n      if (data['@odata.nextLink'] !== undefined) {\n        schemaExtensionsUrl = data['@odata.nextLink'];\n      } else {\n        schemaExtensionsUrl = '';\n      }\n    }\n    setApplicationExtensions(resultData);\n\n    const applicationResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/schemaExtensions',\n    );\n    if (applicationResult.ok) {\n      const applicationData = await applicationResult.json();\n      const resultData: extensionType[] = [];\n      for (let index = 0; index < applicationData.value.length; index += 1) {\n        resultData.push({\n          description: applicationData.value[index].description,\n          id: applicationData.value[index].id,\n        });\n      }\n      setExtensions(resultData);\n      setSchemaLoadingState(loadingStateEnum.success);\n    } else {\n      setSchemaLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (mode === 'list') {\n      setSelectedGraphMode(graphMode.list);\n    } else if (mode === 'group') {\n      setSelectedGraphMode(graphMode.group);\n    } else if (mode === 'extension') {\n      setSelectedGraphMode(graphMode.extension);\n    }\n  }, [mode]);\n\n  useEffect(() => {\n    getLists();\n    loadData();\n    getExtensions();\n  }, []);\n\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <Link to=\"/profile/government\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Microsoft Graph Overview</Text>\n      <PickerWrapper\n        selectedIndex={selectedGraphMode}\n        onSetSelectedIndex={setSelectedGraphMode}\n        width={width}\n        height={30}\n      >\n        <Text>Lists</Text>\n        <Text>Groups</Text>\n        <Text>Extensions</Text>\n      </PickerWrapper>\n      <ScrollView style={{ height: height * 0.6 }}>\n        {selectedGraphMode === graphMode.list ? (\n          <View>\n            {listLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {listLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    {lists.map((item: listType) => (\n                      <Link\n                        key={`${item.listId}Link`}\n                        to={`/profile/government/graph/list/edit/${item.listId}`}\n                      >\n                        <View key={item.listId}>\n                          {\n                            // TO DO PRODuction fix these ids\n                            item.listId !==\n                              '2b86ba89-0262-4906-9247-bfd1260fb68e' &&\n                            item.listId !==\n                              '1f4cd053-dd6b-4e40-bb9b-803cbc74e872' ? (\n                              <View\n                                style={{\n                                  marginBottom: 5,\n                                  borderColor: 'black',\n                                  borderWidth: 5,\n                                }}\n                              >\n                                <Text>{item.displayName}</Text>\n                                <Text>{item.listId}</Text>\n                              </View>\n                            ) : null\n                          }\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n        {selectedGraphMode === graphMode.group ? (\n          <View>\n            {groupLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {groupLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    {groups.map(group => (\n                      <Link\n                        to={`/profile/government/graph/group/edit/${group.id}`}\n                        key={`group_${group.id}`}\n                      >\n                        <View>\n                          <Text>{group.name}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n        {selectedGraphMode === graphMode.extension ? (\n          <View>\n            {schemaLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {schemaLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    <View style={{ margin: 10 }}>\n                      <Text>Application Extensions</Text>\n                    </View>\n                    {applicationExtensions.map(extension => (\n                      <Link\n                        to={`/profile/government/graph/extension/edit/${extension.id}`}\n                        key={`extension_${extension.id}`}\n                        style={{ borderWidth: 2, borderColor: 'black' }}\n                      >\n                        <View>\n                          <Text>{extension.id}</Text>\n                          <Text>{extension.description}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                    <View style={{ margin: 10 }}>\n                      <Text>Tenant Extensions</Text>\n                    </View>\n                    {extensions.map(extension => (\n                      <Link\n                        to={`/profile/government/graph/extension/edit/${extension.id}`}\n                        key={`extension_${extension.id}`}\n                        style={{ borderWidth: 2, borderColor: 'black' }}\n                      >\n                        <View>\n                          <Text>{extension.id}</Text>\n                          <Text>{extension.description}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n      </ScrollView>\n      <Link to=\"/profile/government/graph/list/create\">\n        <Text>Create List</Text>\n      </Link>\n    </View>\n  );\n}\n","import { View, Text, Button, TextInput, Pressable } from 'react-native';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport { RootState } from '../../../../Redux/store';\n\ntype MicrosoftGraphColumnDefinitions =\n  | 'text'\n  | 'number'\n  | 'boolean'\n  | 'calculated'\n  | 'choice'\n  | 'columnGroup'\n  | 'contentApprovalStatus'\n  | 'currency'\n  | 'dateTime'\n  | 'defaultValue'\n  | 'description'\n  | 'displayName'\n  | 'enforceUniqueValues'\n  | 'geolocation'\n  | 'hidden';\n\ntype ColumnItem = {\n  name: string;\n  key: MicrosoftGraphColumnDefinitions;\n  data: any;\n};\n\nexport default function MicrosoftGraphCreateList() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n\n  const [columns, setColumns] = useState<ColumnItem[]>([]);\n\n  const [listName, setListName] = useState<string>('');\n  const [isListHidden, setIsListHidden] = useState<boolean>(false);\n  const [isShowingTypeWindow, setIsShowingTypeWindow] =\n    useState<boolean>(false);\n\n  // Colum Properties\n  const [selectedColumnType, setSelectedColumnType] =\n    useState<MicrosoftGraphColumnDefinitions>('text');\n  const [enforceUniqueValues, setEnforceUniqueValues] =\n    useState<boolean>(false);\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n  const [columnDescription, setColumnDescription] = useState<string>('');\n  const [newColumnName, setNewColumnName] = useState<string>('');\n\n  async function createList() {\n    const columnData: object[] = [];\n\n    for (let index = 0; index < columns.length; index += 1) {\n      const { key } = columns[index];\n      const newData: object = {\n        name: columns[index].name,\n        text: {},\n      };\n      columnData.push(newData);\n    }\n\n    const listData = {\n      displayName: listName,\n      columns: columnData,\n      list: {\n        contentTypesEnabled: false,\n        hidden: false,\n        template: ' genericList',\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n      'POST',\n      JSON.stringify(listData),\n    );\n\n    const data = await result.json();\n  }\n  return (\n    <View style={{ width }}>\n      <Link to=\"/profile/government/graph\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Microsoft Graph Create</Text>\n      <Text>List Name</Text>\n      <TextInput value={listName} onChangeText={text => setListName(text)} />\n      <View style={{ height: height * 0.75 }}>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Name</Text>\n          <Text>Type</Text>\n        </View>\n        {columns.map((item: ColumnItem) => (\n          <View style={{ flexDirection: 'row' }}>\n            <Text>{item.name} </Text>\n            <Text>{item.key}</Text>\n          </View>\n        ))}\n      </View>\n      {isShowingTypeWindow ? (\n        <View style={{ height: 100, position: 'absolute', zIndex: 2 }}>\n          <Button\n            title=\"Text\"\n            onPress={() => {\n              setSelectedColumnType('text');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Number\"\n            onPress={() => {\n              setSelectedColumnType('number');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Boolean\"\n            onPress={() => {\n              setSelectedColumnType('boolean');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Calculated\"\n            onPress={() => {\n              setSelectedColumnType('calculated');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Location\"\n            onPress={() => {\n              setSelectedColumnType('geolocation');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Choice\"\n            onPress={() => {\n              setSelectedColumnType('choice');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Column Group\"\n            onPress={() => {\n              setSelectedColumnType('columnGroup');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Content Approval Status\"\n            onPress={() => {\n              setSelectedColumnType('contentApprovalStatus');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Currency\"\n            onPress={() => {\n              setSelectedColumnType('currency');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Date\"\n            onPress={() => {\n              setSelectedColumnType('dateTime');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n        </View>\n      ) : null}\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Hidden: </Text>\n        <Pressable\n          onPress={() => {\n            setIsHidden(!isHidden);\n          }}\n        >\n          <Text>{isHidden ? 'X' : 'O'}</Text>\n        </Pressable>\n        <TextInput\n          value={newColumnName}\n          onChangeText={text => setNewColumnName(text)}\n        />\n      </View>\n      <Button\n        title={selectedColumnType}\n        onPress={() => {\n          setIsShowingTypeWindow(!isShowingTypeWindow);\n        }}\n      />\n      <Button\n        title=\"Add Column\"\n        onPress={() => {\n          let columnData = {};\n          if (selectedColumnType === 'text') {\n            columnData = {\n              allowMultipleLines: true,\n              appendChangesToExistingText: false,\n              linesForEditing: 6,\n              maxLength: 300,\n              textType: 'richText',\n            };\n          }\n          const newColumn = {\n            name: newColumnName,\n            key: selectedColumnType,\n            data: columnData,\n          };\n          setNewColumnName('');\n          setColumns([...columns, newColumn]);\n        }}\n      />\n      <Button\n        title=\"Create List\"\n        onPress={() => {\n          createList();\n        }}\n      />\n      <View style={{ flexDirection: 'row' }}>\n        <Text>List Hidden: </Text>\n        <Pressable\n          onPress={() => {\n            setIsListHidden(!isListHidden);\n          }}\n        >\n          <Text>{isListHidden ? 'X' : 'O'}</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum, submissionTypeEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nfunction convertSubmissionTypeToFilter(\n  submissionType: submissionTypeEnum,\n): string {\n  if (submissionType === submissionTypeEnum.approved) {\n    return '%20and%20fields/submissionApproved%20ne%20false';\n  }\n  if (submissionType === submissionTypeEnum.unApproved) {\n    return '%20and%20fields/submissionApproved%20eq%20false';\n  }\n  if (submissionType === submissionTypeEnum.unReviewed) {\n    return '%20and%20fields/submissionReviewed%20eq%20false';\n  }\n  return '';\n}\n\nexport default async function getSubmissions(\n  commissionId: string,\n  submissionType: submissionTypeEnum,\n): Promise<{\n  result: loadingStateEnum;\n  data?: submissionType[];\n  nextLink?: string;\n  count?: number;\n}> {\n  const filter: string = convertSubmissionTypeToFilter(submissionType);\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.commissionSubmissionsListId\n    }/items?expand=fields&$select=id&$filter=fields/commissionId%20eq%20'${commissionId}'${filter}`,\n    'GET',\n  );\n  if (result.ok) {\n    const data = await result.json();\n\n    // Get Users\n    const batchRequests: { id: string; method: string; url: string }[][] = [];\n    const users: any = {};\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (index % 20 === 0) {\n        batchRequests.push([]);\n      }\n      batchRequests[Math.floor(index / 20)].push({\n        id: (index + 1).toString(),\n        method: 'GET',\n        url: `/users/${data.value[index].fields.userId}?$select=id,displayName`,\n      });\n    }\n    for (let index = 0; index < batchRequests.length; index += 1) {\n      const batchData = {\n        requests: batchRequests[index],\n      };\n      const batchHeaders = new Headers();\n      batchHeaders.append('Accept', 'application/json');\n      const batchResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n      );\n      if (result.ok) {\n        const batchResultData = await batchResult.json();\n        for (\n          let batchIndex = 0;\n          batchIndex < batchResultData.responses.length;\n          batchIndex += 1\n        ) {\n          if (batchResultData.responses[batchIndex].status === 200) {\n            Object.defineProperty(\n              users,\n              batchResultData.responses[batchIndex].body.id,\n              {\n                value: batchResultData.responses[batchIndex].body.displayName,\n              },\n            );\n          } else {\n            return { result: loadingStateEnum.failed };\n          }\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n\n    // Return Output\n    const output: submissionType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const name = users[data.value[index].fields.userId];\n      if (name !== undefined) {\n        output.push({\n          userName: name,\n          submissionTime: data.value[index].fields.submittedTime,\n          id: data.value[index].fields.submissionId,\n          itemId: data.value[index].id,\n          approved: data.value[index].fields.submissionApproved,\n          reviewed: data.value[index].fields.submissionReviewed,\n          submissionImage:\n            data.value[index].fields.submissionData !== undefined\n              ? JSON.parse(data.value[index].fields.submissionData).imageShare\n              : undefined,\n        });\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n      count: data.value.length,\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport getCommissions from '../../../../Functions/commissions/getCommissions';\nimport getSubmissions from '../../../../Functions/commissions/getSubmissions';\nimport create_UUID from '../../../../Functions/Ultility/createUUID';\nimport { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  loadingStateEnum,\n  submissionTypeEnum,\n} from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentCommissions() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [commissions, setCommissions] = useState<commissionType[]>([]);\n  const [commissionsState, setCommissionsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getCommissions();\n    if (result.result === loadingStateEnum.success) {\n      if (result.data !== undefined) {\n        setCommissions(result.data);\n      }\n      // TO DO pagination\n    }\n    setCommissionsState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government');\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n        <View\n          style={{\n            width,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Commissions</Text>\n        </View>\n      </View>\n      <View style={{ height: height * 0.85 }}>\n        {commissionsState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <>\n            {commissionsState === loadingStateEnum.success ? (\n              <ScrollView style={{ height: height * 0.85 }}>\n                {commissions.map(commission => (\n                  <CommissionBlock\n                    key={`Commission_${\n                      commission.commissionId\n                    }_${create_UUID()}`}\n                    commission={commission}\n                  />\n                ))}\n              </ScrollView>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ height: height * 0.05 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government/commissions/create');\n          }}\n        >\n          <Text>Create New Commission</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction CommissionBlock({ commission }: { commission: commissionType }) {\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [unclaimedState, setUnclaimedState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [unclaimedCount, setUnclaimedCount] = useState<string>('0');\n\n  async function loadData() {\n    const result = await getSubmissions(\n      commission.commissionId,\n      submissionTypeEnum.unReviewed,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.count !== undefined\n    ) {\n      if (result.count >= 50) {\n        setUnclaimedCount(`${result.count.toString()}+`);\n      } else {\n        setUnclaimedCount(result.count.toString());\n      }\n    }\n    setUnclaimedState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <Pressable\n      onPress={() =>\n        navigate(`/profile/government/commissions/${commission.commissionId}`)\n      }\n      key={`Commission_${commission.commissionId}_${create_UUID()}`}\n      style={{\n        margin: 10,\n        borderRadius: 15,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n      }}\n    >\n      <View style={{ margin: 10 }}>\n        <Text selectable={false}>{commission.title}</Text>\n      </View>\n      {unclaimedCount !== '0' ? (\n        <View\n          key={create_UUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: 'red',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>{unclaimedCount}</Text>\n        </View>\n      ) : null}\n      {unclaimedState === loadingStateEnum.loading ? (\n        <View\n          key={create_UUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: '#FF6700',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <ProgressView width={10} height={10} />\n        </View>\n      ) : null}\n      {unclaimedState === loadingStateEnum.failed ? (\n        <View\n          key={create_UUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: 'red',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>!</Text>\n        </View>\n      ) : null}\n    </Pressable>\n  );\n}\n","import { View, Text, Animated, Pressable } from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Colors } from '../../types';\n\ntype PickerWrapperProps = {\n  selectedIndex: number;\n  setSelectedIndex: (item: number) => void;\n  options: string[];\n  width: number;\n  height: number;\n};\n\nexport default function SegmentedPicker({\n  width,\n  height,\n  selectedIndex,\n  setSelectedIndex,\n  options,\n}: PickerWrapperProps) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [compoentWidth, setComponentWidth] = useState(width / 3);\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth + compoentWidth * 0.005,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedIndex * compoentWidth + compoentWidth * 0.005);\n  }, []);\n\n  useEffect(() => {\n    console.log(selectedIndex);\n  }, [selectedIndex]);\n\n  useEffect(() => {\n    setComponentWidth(width / options.length);\n    pan.setValue(selectedIndex * compoentWidth + compoentWidth * 0.005);\n  }, [width]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        height,\n        width,\n        backgroundColor: '#7d7d7d',\n        borderRadius: 20,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n      }}\n    >\n      {options.map((option, index) => (\n        <Pressable\n          onPress={() => {\n            setSelectedIndex(index);\n            fadeIn(index);\n          }}\n          style={{\n            position: 'absolute',\n            width: compoentWidth,\n            height,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            transform: [{ translateX: index * compoentWidth }],\n          }}\n        >\n          <Text\n            adjustsFontSizeToFit\n            style={{\n              textAlignVertical: 'center',\n              textAlign: 'center',\n              width: compoentWidth,\n            }}\n          >\n            {option}\n          </Text>\n        </Pressable>\n      ))}\n      <Animated.View style={{ transform: [{ translateX: pan }], zIndex: -1 }}>\n        <View\n          style={{\n            height: height * 0.95,\n            width: compoentWidth - compoentWidth * 0.01,\n            backgroundColor: Colors.white,\n            top: height * 0.025,\n            borderRadius: 20,\n            position: 'absolute',\n            zIndex: -1,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  Marker,\n  Circle,\n} from '@react-google-maps/api';\n\nconst center = {\n  lat: 49.85663823299096,\n  lng: -97.22659526509193,\n};\n\ntype LatLngLiteral = google.maps.LatLngLiteral;\n\nexport default function MapWeb({\n  proximity,\n  selectedPositionIn,\n  onSetSelectedPositionIn,\n  width,\n  height,\n}: {\n  proximity: number;\n  selectedPositionIn: { lat: number; lng: number };\n  onSetSelectedPositionIn: (item: { lat: number; lng: number }) => void;\n  width: number;\n  height: number;\n}) {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyAltyD_LL0kbe84kyMRxgRmoH74Spi5rvw', // TO DO put this into a loval env\n  });\n  const [selectedPosition, setSelectedPosition] = useState<LatLngLiteral>();\n  const [containerStyle, setContainerStyle] = useState<{\n    width: string;\n    height: string;\n  }>({\n    width: '400px',\n    height: '400px',\n  });\n\n  useEffect(() => {\n    setContainerStyle({\n      width: `${width.toString()}px`,\n      height: `${height.toString()}px`,\n    });\n  }, [width, height]);\n\n  // const [map, setMap] = React.useState(null)\n\n  // const onLoad = React.useCallback(function callback(map) {\n  //   // This is just an example of getting and using the map instance!!! don't just blindly copy!\n  //   const bounds = new window.google.maps.LatLngBounds(center);\n  //   map.fitBounds(bounds);\n\n  //   setMap(map)\n  // }, [])\n\n  // const onUnmount = React.useCallback(function callback(map) {\n  //   setMap(null)\n  // }, [])\n\n  return isLoaded ? (\n    <div style={{ width, height }}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={15}\n        onClick={ev => {\n          onSetSelectedPositionIn({\n            lat: ev.latLng!.lat(),\n            lng: ev.latLng!.lng(),\n          });\n          setSelectedPosition({ lat: ev.latLng!.lat(), lng: ev.latLng!.lng() });\n        }}\n      >\n        {/* Child components, such as markers, info windows, etc. */}\n        {selectedPosition && <Marker position={selectedPosition} />}\n        {selectedPosition && (\n          <Circle center={selectedPosition} radius={proximity} />\n        )}\n      </GoogleMap>\n    </div>\n  ) : (\n    <></>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  PanResponder,\n  Animated,\n  PanResponderGestureState,\n} from 'react-native';\n\ninterface BoxProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  box: {\n    backgroundColor: 'blue',\n    borderRadius: 5,\n    position: 'absolute',\n  },\n});\n\nconst Box: React.FC<BoxProps> = ({\n  width,\n  height,\n  value,\n  onValueChange,\n  containerWidth,\n}) => {\n  const pan = useRef(new Animated.Value(value)).current;\n  const valueRef = useRef({ currentValue: value });\n  const containerWidthRef = useRef({ currentValue: value });\n  const lastValue = useRef({ currentValue: value });\n  useEffect(() => {\n    containerWidthRef.current.currentValue = containerWidth;\n  }, [containerWidth]);\n  useEffect(() => {\n    valueRef.current.currentValue = value;\n  }, [value]);\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderMove: (\n        evt: any,\n        gestureState: PanResponderGestureState,\n      ) => {\n        const { dx } = gestureState;\n        const valueRead = valueRef.current.currentValue;\n        let adding =\n          lastValue.current.currentValue > 0\n            ? dx - lastValue.current.currentValue\n            : dx + lastValue.current.currentValue;\n        adding /= width - height / 2;\n        lastValue.current.currentValue = dx;\n        const newValue = valueRead + adding;\n\n        if (newValue <= 1 && newValue >= 0) {\n          valueRef.current.currentValue = newValue;\n          onValueChange(newValue);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: newValue * width });\n        } else if (newValue < 0) {\n          valueRef.current.currentValue = 0;\n          onValueChange(0);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: 0 });\n        } else if (newValue > 1) {\n          valueRef.current.currentValue = 1;\n          onValueChange(1);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: width - height / 2 });\n        }\n      },\n      onPanResponderRelease: () => {\n        pan.setValue(valueRef.current.currentValue * width);\n        lastValue.current.currentValue = 0;\n      },\n    }),\n  ).current;\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            width: height / 2,\n            height: height / 2,\n            transform: [{ translateX: pan }],\n          },\n        ]}\n        {...panResponder.panHandlers}\n      />\n    </View>\n  );\n};\n\ninterface SliderProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number; // This is the width of the screen\n}\n\nexport default function Slider({\n  width,\n  height,\n  value,\n  onValueChange,\n  containerWidth,\n}: SliderProps) {\n  return (\n    <View\n      style={{\n        width,\n        height,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          width,\n          height: height > 10 ? height : 10,\n          backgroundColor: 'black',\n        }}\n      >\n        <Box\n          width={width}\n          height={height}\n          value={value}\n          onValueChange={onValueChange}\n          containerWidth={containerWidth}\n        />\n      </View>\n    </View>\n  );\n}\n","import { loadingStateEnum, dataContentTypeOptions } from '../../types';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function getFileWithShareID(shareID: string): Promise<{\n  result: loadingStateEnum;\n  url?: string;\n  contentType?: dataContentTypeOptions;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/shares/${shareID}/driveItem`,\n    'GET',\n    undefined,\n    [{ key: 'Prefer', value: 'redeemSharingLink' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (\n      data['@microsoft.graph.downloadUrl'] !== undefined &&\n      data['@microsoft.graph.downloadUrl'] !== null\n    ) {\n      if (data.file.mimeType.slice(0, 5) === 'image') {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.image,\n        };\n      }\n      if (data.file.mimeType === 'video/mp4') {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.video,\n        };\n      }\n      if (\n        data.file.mimeType ===\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n      ) {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.pdf,\n        };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import store from '../../Redux/store';\nimport { commissionTypeEnum, loadingStateEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nexport default async function updateCommission(\n  isCreating: boolean,\n  commissionName: string,\n  isTimed: boolean,\n  points: number,\n  isHidden: boolean,\n  maxNumberOfClaims: number,\n  allowMultipleSubmissions: boolean,\n  selectedCommissionType: number,\n  selectedPostId: string,\n  selectedTeamId: string,\n  selectedChannelId: string,\n  startDate: Date,\n  endDate: Date,\n  commissionId: string,\n  proximity: number,\n  selectedPositionIn: { lat: number; lng: number },\n  commissionItemId: string,\n): Promise<loadingStateEnum> {\n  const data: any = {\n    fields: {\n      // All Commissions\n      Title: commissionName,\n      timed: isTimed,\n      points,\n      hidden: isHidden,\n      maxNumberOfClaims,\n      allowMultipleSubmissions,\n      commissionID: commissionId,\n      value: selectedCommissionType + 1,\n    },\n  };\n  if (selectedPostId !== '') {\n    data.fields.postTeamId = selectedTeamId;\n    data.fields.postChannelId = selectedChannelId;\n    data.fields.postId = selectedPostId;\n  }\n  if (isTimed) {\n    data.fields.startDate = startDate.toISOString().replace(/.\\d+Z$/g, 'Z');\n    data.fields.endDate = endDate.toISOString().replace(/.\\d+Z$/g, 'Z');\n  }\n  if (\n    selectedCommissionType === commissionTypeEnum.Location ||\n    selectedCommissionType === commissionTypeEnum.ImageLocation\n  ) {\n    data.fields.proximity = proximity;\n    data.fields.coordinateLat = selectedPositionIn.lat;\n    data.fields.coordinateLng = selectedPositionIn.lng;\n  }\n  if (selectedCommissionType === commissionTypeEnum.QRCode) {\n    data.fields.qrCodeData = '[]';\n  }\n\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.commissionListId}/items${\n      !isCreating ? `/${commissionItemId}` : ''\n    }`,\n    isCreating ? 'POST' : 'PATCH',\n    JSON.stringify(data),\n  );\n  if (result.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  ScrollView,\n  Pressable,\n  Switch,\n  Image,\n} from 'react-native';\nimport { useParams } from 'react-router-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { DatePickerModal, TimePickerModal } from 'react-native-paper-dates';\nimport store, { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  commissionTypeEnum,\n  loadingStateEnum,\n  submissionTypeEnum,\n} from '../../../../types';\nimport SegmentedPicker from '../../../../UI/Pickers/SegmentedPicker';\nimport ProgressView from '../../../../UI/ProgressView';\nimport WebViewCross from '../../../../UI/WebViewCross';\nimport { CloseIcon } from '../../../../UI/Icons/Icons';\nimport MapWeb from '../../../../UI/Map/Map.web';\nimport Slider from '../../../../UI/Slider';\nimport BackButton from '../../../../UI/BackButton';\nimport {\n  getChannels,\n  getPosts,\n  getTeams,\n} from '../../../../Functions/groupsData';\nimport getCommission from '../../../../Functions/commissions/getCommission';\nimport getSubmissions from '../../../../Functions/commissions/getSubmissions';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport create_UUID from '../../../../Functions/Ultility/createUUID';\nimport getFileWithShareID from '../../../../Functions/Ultility/getFileWithShareID';\nimport updateCommission from '../../../../Functions/commissions/updateCommission';\n\nenum datePickingMode {\n  none,\n  start,\n  end,\n}\n\nexport default function GovernmentEditCommission() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { commissionListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n\n  const [submitCommissionState, setSubmitCommissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const [selectedCommissionType, setSelectedCommissionType] =\n    useState<commissionTypeEnum>(commissionTypeEnum.Issued);\n\n  const [commissionName, setCommissionName] = useState<string>('');\n  const [proximity, setProximity] = useState<number>(0);\n  const [points, setPoints] = useState<number>(0);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n\n  const [currentDatePickingMode, setCurrentDatePickingMode] =\n    useState<datePickingMode>(datePickingMode.none);\n\n  const [selectedPositionIn, setSelectedPositionIn] = useState<{\n    lat: number;\n    lng: number;\n  }>({ lat: 49.85663823299096, lng: -97.22659526509193 });\n  const [maxNumberOfClaims, setMaxNumberOfClaims] = useState<number>(1);\n  const [allowMultipleSubmissions, setAllowMultipleSubmissions] =\n    useState<boolean>(false);\n  const [isTimed, setIsTimed] = useState<boolean>(true);\n\n  const [commissionItemId, setCommissionItemId] = useState<string>('');\n\n  const [getCommissionResult, setGetCommissionResult] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [deleteCommissionResult, setDeleteCommissionResult] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [selectedTeamId, setSelectedTeamId] = useState<string>('');\n  const [selectedChannelId, setSelectedChannelId] = useState<string>('');\n  const [selectedPostId, setSelectedPostId] = useState<string>('');\n  const [endTimePickerVisable, setEndTimePickerVisable] =\n    useState<boolean>(false);\n  const [startTimePickerVisable, setStartTimePickerVisable] =\n    useState<boolean>(false);\n  const [endDatePickerVisable, setEndDatePickerVisable] =\n    useState<boolean>(false);\n  const [startDatePickerVisable, setStartDatePickerVisable] =\n    useState<boolean>(false);\n\n  const [isCreating, setIsCreating] = useState<boolean>(false);\n\n  const { id } = useParams();\n\n  async function loadData() {\n    if (id !== undefined) {\n      const result = await getCommission(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        // TO DO add all values\n        setCommissionItemId(result.data.itemId);\n        setCommissionName(result.data.title);\n        setAllowMultipleSubmissions(result.data.allowMultipleSubmissions);\n        setIsHidden(result.data.hidden);\n        setMaxNumberOfClaims(result.data.maxNumberOfClaims);\n        setIsTimed(result.data.timed);\n        setPoints(result.data.points);\n      }\n      setGetCommissionResult(result.result);\n    }\n  }\n  async function deleteCommission() {\n    if (\n      commissionItemId === '' ||\n      deleteCommissionResult === loadingStateEnum.loading ||\n      deleteCommissionResult === loadingStateEnum.success\n    ) {\n      return;\n    }\n    setDeleteCommissionResult(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${commissionListId}/items/${commissionItemId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n      const deleteList = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}`,\n        'DELETE',\n      );\n      if (deleteList.ok) {\n        setDeleteCommissionResult(loadingStateEnum.success);\n      } else {\n        setDeleteCommissionResult(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteCommissionResult(loadingStateEnum.failed);\n    }\n  }\n  useEffect(() => {\n    if (id !== 'create') {\n      loadData();\n    } else {\n      setIsCreating(true);\n    }\n  }, []);\n\n  async function loadUpdateCommission() {\n    if (\n      (submitCommissionState === loadingStateEnum.failed ||\n        submitCommissionState === loadingStateEnum.notStarted) &&\n      id !== undefined\n    ) {\n      setSubmitCommissionState(loadingStateEnum.loading);\n      const result = await updateCommission(\n        isCreating,\n        commissionName,\n        isTimed,\n        points,\n        isHidden,\n        maxNumberOfClaims,\n        allowMultipleSubmissions,\n        selectedCommissionType,\n        selectedPostId,\n        selectedTeamId,\n        selectedChannelId,\n        startDate,\n        endDate,\n        id !== 'create' ? id : create_UUID(),\n        proximity,\n        selectedPositionIn,\n        commissionItemId,\n      );\n      setSubmitCommissionState(result);\n    }\n  }\n\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        width,\n        height,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <ScrollView style={{ height, width, zIndex: 1 }}>\n        <BackButton to=\"/profile/government/commissions\" />\n        <View\n          style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>{isCreating ? 'Create New' : 'Edit'} Commission</Text>\n        </View>\n        <View\n          style={{\n            width,\n            height: height * 0.15,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <SegmentedPicker\n            selectedIndex={selectedCommissionType}\n            setSelectedIndex={setSelectedCommissionType}\n            options={[\n              'Issued',\n              'Location',\n              'Image',\n              'Image and Location',\n              'QRCode',\n            ]}\n            width={width * 0.8}\n            height={height * 0.1}\n          />\n        </View>\n        <Text>Commission Name</Text>\n        <TextInput\n          value={commissionName}\n          onChangeText={text => setCommissionName(text)}\n          placeholder=\"Commission Name\"\n        />\n        {selectedCommissionType === commissionTypeEnum.ImageLocation ||\n        selectedCommissionType === commissionTypeEnum.Location ? (\n          <View>\n            <View\n              style={{\n                width,\n                height: height * 0.3,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <MapWeb\n                proximity={proximity}\n                selectedPositionIn={selectedPositionIn}\n                onSetSelectedPositionIn={setSelectedPositionIn}\n                width={width * 0.8}\n                height={height * 0.3}\n              />\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Proximity</Text>\n              <TextInput\n                keyboardType=\"numeric\"\n                onChangeText={text => setProximity(parseFloat(text))}\n                value={proximity.toString()}\n                maxLength={10} // setting limit of input\n              />\n            </View>\n            <View\n              style={{\n                width,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Slider\n                width={width * 0.9}\n                height={50}\n                value={proximity / 1000}\n                onValueChange={value => {\n                  setProximity(value * 1000);\n                }}\n                containerWidth={width}\n              />\n            </View>\n          </View>\n        ) : null}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Timed: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isTimed ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setIsTimed(e);\n            }}\n            value={isTimed}\n          />\n        </View>\n        {isTimed ? (\n          <View>\n            <View\n              style={{\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width,\n              }}\n            >\n              <Text>Start Date</Text>\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setStartDatePickerVisable(true);\n                }}\n              >\n                <Text>Pick Start Time</Text>\n              </Pressable>\n              <TimePickerModal\n                hours={new Date(startDate).getHours()}\n                minutes={new Date(startDate).getMinutes()}\n                visible={startTimePickerVisable}\n                onDismiss={() => setStartTimePickerVisable(false)}\n                onConfirm={e => {\n                  const newDate = new Date(startDate);\n                  newDate.setHours(e.hours);\n                  newDate.setMinutes(e.minutes);\n                  setStartDate(newDate);\n                  setStartDatePickerVisable(false);\n                }}\n              />\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.start);\n                }}\n              >\n                <Text>Pick Start Date</Text>\n              </Pressable>\n              <DatePickerModal\n                locale=\"\"\n                mode=\"single\"\n                label=\"Select Date\"\n                visible={startDatePickerVisable}\n                onDismiss={() => setStartDatePickerVisable(false)}\n                date={new Date(endDate)}\n                onConfirm={e => {\n                  if (e.date !== undefined) {\n                    const oldDate = new Date(endDate);\n                    const newDate = new Date(\n                      e.date.getFullYear(),\n                      e.date.getMonth(),\n                      e.date.getDate(),\n                      oldDate.getHours(),\n                      oldDate.getMinutes(),\n                    );\n                    setStartDate(newDate);\n                  }\n                  setStartDatePickerVisable(false);\n                }}\n              />\n            </View>\n            <View\n              style={{\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width,\n              }}\n            >\n              <Text>End Date</Text>\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setStartTimePickerVisable(true);\n                }}\n              >\n                <Text>Pick End Time</Text>\n              </Pressable>\n              <TimePickerModal\n                hours={new Date(endDate).getHours()}\n                minutes={new Date(endDate).getMinutes()}\n                visible={endTimePickerVisable}\n                onDismiss={() => setEndTimePickerVisable(false)}\n                onConfirm={e => {\n                  const newDate = new Date(startDate);\n                  newDate.setHours(e.hours);\n                  newDate.setMinutes(e.minutes);\n                  setEndDate(newDate);\n                  setEndTimePickerVisable(false);\n                }}\n              />\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.end);\n                }}\n              >\n                <Text>Pick End Date</Text>\n              </Pressable>\n              <DatePickerModal\n                locale=\"\"\n                mode=\"single\"\n                label=\"Select Date\"\n                visible={endDatePickerVisable}\n                onDismiss={() => setEndDatePickerVisable(false)}\n                date={new Date(endDate)}\n                onConfirm={e => {\n                  console.log(e.date);\n                  if (e.date !== undefined) {\n                    const oldDate = new Date(endDate);\n                    const newDate = new Date(\n                      e.date.getFullYear(),\n                      e.date.getMonth(),\n                      e.date.getDate(),\n                      oldDate.getHours(),\n                      oldDate.getMinutes(),\n                    );\n                    setEndDate(newDate);\n                  }\n                  setEndDatePickerVisable(false);\n                }}\n              />\n            </View>\n          </View>\n        ) : null}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Points: </Text>\n          <TextInput\n            keyboardType=\"numeric\"\n            onChangeText={text => {\n              if (text === '') {\n                setPoints(0);\n              } else {\n                setPoints(parseFloat(text));\n              }\n            }}\n            value={points.toString()}\n            maxLength={10} // setting limit of input\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Allow Multiple Submissions: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={allowMultipleSubmissions ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setAllowMultipleSubmissions(e);\n            }}\n            value={allowMultipleSubmissions}\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Is Hidden: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isHidden ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setIsHidden(e);\n            }}\n            value={isHidden}\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Max number of claims: </Text>\n          <TextInput\n            value={maxNumberOfClaims.toString()}\n            onChangeText={e => {\n              if (e !== '') {\n                setMaxNumberOfClaims(parseFloat(e));\n              } else {\n                setMaxNumberOfClaims(0);\n              }\n            }}\n            inputMode=\"numeric\"\n          />\n        </View>\n        <Text>Post</Text>\n        <PostSelectionContainer\n          width={width}\n          height={height * 0.4}\n          selectedTeamId={selectedTeamId}\n          setSelectedTeamId={setSelectedTeamId}\n          selectedChannelId={selectedChannelId}\n          setSelectedChannelId={setSelectedChannelId}\n          setSelectedPostId={setSelectedPostId}\n        />\n        {!isCreating && id !== undefined ? (\n          <View\n            style={{ marginTop: 10, marginBottom: 10, height: height * 0.5 }}\n          >\n            <CommissionSubmissions\n              commissionId={id}\n              width={width}\n              height={height * 0.5}\n            />\n          </View>\n        ) : null}\n        <Pressable\n          onPress={() => {\n            loadUpdateCommission();\n          }}\n        >\n          <Text>\n            {submitCommissionState === loadingStateEnum.notStarted\n              ? isCreating\n                ? 'Create Commission'\n                : 'Save Changes'\n              : submitCommissionState === loadingStateEnum.loading\n              ? 'Loading'\n              : submitCommissionState === loadingStateEnum.success\n              ? 'Success'\n              : 'Failed'}\n          </Text>\n        </Pressable>\n        {!isCreating ? (\n          <Pressable\n            onPress={() => {\n              deleteCommission();\n            }}\n          >\n            <Text>\n              {deleteCommissionResult === loadingStateEnum.notStarted\n                ? 'Delete Commission'\n                : deleteCommissionResult === loadingStateEnum.loading\n                ? 'Loading'\n                : deleteCommissionResult === loadingStateEnum.success\n                ? 'Deleted Commission'\n                : 'Failed to Delete Commission'}\n            </Text>\n          </Pressable>\n        ) : null}\n      </ScrollView>\n\n      {/* <View style={{height: height * 0.8, width: width * 0.8, position: \"absolute\", left: width * 0.1, top: height * 0.1, zIndex: 2, backgroundColor: (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? Colors.white:\"transparent\", borderRadius: 15, shadowColor: (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? \"black\":\"transparent\", shadowOffset: { width: 0, height: 1 }, shadowOpacity: 0.8, shadowRadius: 10, alignItems: \"center\", justifyContent: \"center\", alignContent: \"center\"}} pointerEvents={(currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? 'auto':'none'}>\n        { (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ?\n          <DatePicker \n            selectedDate={(currentDatePickingMode === datePickingMode.start) ? startDate:endDate} \n            onSetSelectedDate={(date) => {if (currentDatePickingMode === datePickingMode.end) {setEndDate(date)} else if (currentDatePickingMode === datePickingMode.start) {setStartDate(date)}}}\n            width={width * 0.7} height={height * 0.7} onCancel={() => {setCurrentDatePickingMode(datePickingMode.none)}}\n          />:null\n        }\n      </View> */}\n    </View>\n  );\n}\n\nenum postPickingMode {\n  team,\n  channel,\n  post,\n}\n\nfunction PostSelectionContainer({\n  width,\n  height,\n  selectedChannelId,\n  selectedTeamId,\n  setSelectedChannelId,\n  setSelectedPostId,\n  setSelectedTeamId,\n}: {\n  width: number;\n  height: number;\n  selectedTeamId: string;\n  setSelectedTeamId: (item: string) => void;\n  selectedChannelId: string;\n  setSelectedChannelId: (item: string) => void;\n  setSelectedPostId: (item: string) => void;\n}) {\n  const [currentPostPickingMode, setCurrentPostPickingMode] =\n    useState<postPickingMode>(postPickingMode.team);\n  return (\n    <>\n      {currentPostPickingMode === postPickingMode.team ? (\n        <GroupSelection\n          width={width}\n          height={height}\n          onSelect={e => {\n            setSelectedTeamId(e);\n            setCurrentPostPickingMode(postPickingMode.channel);\n          }}\n        />\n      ) : null}\n      {currentPostPickingMode === postPickingMode.channel ? (\n        <ChannelSelection\n          width={width}\n          height={height}\n          teamId={selectedTeamId}\n          onSelect={e => {\n            setSelectedChannelId(e);\n            setCurrentPostPickingMode(postPickingMode.post);\n          }}\n          onBack={() => {\n            setSelectedChannelId('');\n            setSelectedTeamId('');\n            setCurrentPostPickingMode(postPickingMode.team);\n          }}\n        />\n      ) : null}\n      {currentPostPickingMode === postPickingMode.post ? (\n        <PostSelection\n          width={width}\n          height={height}\n          teamId={selectedTeamId}\n          channelId={selectedChannelId}\n          onSelect={setSelectedPostId}\n          onBack={() => {\n            setSelectedPostId('');\n            setSelectedChannelId('');\n            setCurrentPostPickingMode(postPickingMode.channel);\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction GroupSelection({\n  width,\n  height,\n  onSelect,\n}: {\n  width: number;\n  height: number;\n  onSelect: (item: string) => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [groupsState, setGroupsState] = useState(loadingStateEnum.loading);\n  const [groups, setGroups] = useState<groupType[]>([]);\n  async function loadData() {\n    const result = await getTeams();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setGroups(result.data);\n    }\n    setGroupsState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {groupsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {groupsState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              {groups.map(group => (\n                <Pressable\n                  key={`Group_${group.id}`}\n                  onPress={() => {\n                    onSelect(group.id);\n                  }}\n                >\n                  <Text>{group.name}</Text>\n                </Pressable>\n              ))}\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Groups</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction ChannelSelection({\n  width,\n  height,\n  teamId,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  teamId: string;\n  onSelect: (item: string) => void;\n  onBack: () => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [channelState, setChannelState] = useState(loadingStateEnum.loading);\n  const [channels, setChannels] = useState<channelType[]>([]);\n  async function loadData() {\n    const result = await getChannels(teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setChannels(result.data);\n    }\n    setChannelState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {channelState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {channelState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              <Pressable onPress={() => onBack()}>\n                <Text>Back</Text>\n              </Pressable>\n              {channels.map(channel => (\n                <Pressable\n                  key={`Channel_${channel.id}`}\n                  onPress={() => {\n                    onSelect(channel.id);\n                  }}\n                  style={{ width, alignItems: 'center' }}\n                >\n                  <Text>{channel.displayName}</Text>\n                </Pressable>\n              ))}\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Channels</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PostSelection({\n  width,\n  height,\n  teamId,\n  channelId,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  teamId: string;\n  channelId: string;\n  onSelect: (item: string) => void;\n  onBack: () => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [postsState, setPostsState] = useState(loadingStateEnum.loading);\n  const [posts, setPosts] = useState<resourceDataType[]>([]);\n  async function loadData() {\n    const result = await getPosts(teamId, channelId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setPosts(result.data);\n    }\n    setPostsState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {postsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {postsState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              <Pressable onPress={() => onBack()}>\n                <Text>Back</Text>\n              </Pressable>\n              {posts.map(post => (\n                <>\n                  {post.body !== '<systemEventMessage/>' ? (\n                    <Pressable\n                      key={`Post_${post.id}_${create_UUID()}`}\n                      onPress={() => {\n                        onSelect(post.id);\n                      }}\n                    >\n                      <WebViewCross html={post.body} width={width * 0.9} />\n                    </Pressable>\n                  ) : null}\n                </>\n              ))}\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Posts</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction CommissionSubmissions({\n  commissionId,\n  width,\n  height,\n}: {\n  commissionId: string;\n  width: number;\n  height: number;\n}) {\n  // Loading State\n  const [submissiosState, setSubmissionsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const [submissions, setSubmissions] = useState<submissionType[]>([]);\n  const [selectedSubmissionMode, setSelectedSubmissionMode] =\n    useState<submissionTypeEnum>(submissionTypeEnum.unApproved);\n\n  const [selectedSubmission, setSelectedSubmisson] = useState<\n    submissionType | undefined\n  >(undefined);\n\n  async function loadData() {\n    setSubmissionsState(loadingStateEnum.loading);\n    const result = await getSubmissions(commissionId, selectedSubmissionMode);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSubmissions(result.data);\n      setSubmissionsState(result.result);\n      if (result.count === 0) {\n        const secondResult = await getSubmissions(\n          commissionId,\n          submissionTypeEnum.unApproved,\n        );\n        if (\n          secondResult.result === loadingStateEnum.success &&\n          secondResult.data !== undefined\n        ) {\n          setSubmissions(result.data);\n          setSubmissionsState(secondResult.result);\n        }\n      }\n    } else {\n      setSubmissionsState(result.result);\n    }\n  }\n  useEffect(() => {\n    loadData();\n  }, [selectedSubmissionMode]);\n  return (\n    <>\n      {submissiosState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {submissiosState === loadingStateEnum.success ? (\n            <View style={{ width, height }}>\n              <View style={{ flexDirection: 'row' }}>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.all)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>All</Text>\n                </Pressable>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.unApproved)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>Unapproved</Text>\n                </Pressable>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.approved)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>Approved</Text>\n                </Pressable>\n              </View>\n              <FlatList\n                data={submissions}\n                renderItem={submission => (\n                  <Pressable\n                    style={{ margin: 10 }}\n                    onPress={() => setSelectedSubmisson(submission.item)}\n                  >\n                    <Text>{submission.item.userName}</Text>\n                    <Text>\n                      {new Date(\n                        submission.item.submissionTime,\n                      ).toLocaleDateString('en-US', {\n                        weekday: 'long',\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                        hour: 'numeric',\n                        minute: 'numeric',\n                        second: 'numeric',\n                      })}\n                    </Text>\n                  </Pressable>\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Failed To Load Submissions</Text>\n            </View>\n          )}\n        </>\n      )}\n      {selectedSubmission !== undefined ? (\n        <SubmissionView\n          width={width}\n          height={height}\n          setSubmissionData={() => {}}\n          submissionData={selectedSubmission}\n          onClose={() => setSelectedSubmisson(undefined)}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction SubmissionView({\n  width,\n  height,\n  submissionData,\n  onClose,\n  setSubmissionData,\n}: {\n  width: number;\n  height: number;\n  submissionData: submissionType;\n  onClose: () => void;\n  setSubmissionData: (item: submissionType) => void;\n}) {\n  const [changeState, setChangeState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [imageState, setImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [imageUri, setImageUri] = useState<string>('');\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function changeSubmissionApproved() {\n    setChangeState(loadingStateEnum.loading);\n    const data = {\n      fields: {\n        submissionApproved: !submissionData.approved,\n        submissionReviewed: true,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.commissionSubmissionsListId}/items/${\n        submissionData.itemId\n      }`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      setChangeState(loadingStateEnum.success);\n    } else {\n      setChangeState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadImage() {\n    if (submissionData.submissionImage !== undefined) {\n      setImageState(loadingStateEnum.loading);\n      const shareResult = await getFileWithShareID(\n        submissionData.submissionImage,\n      );\n      if (\n        shareResult.result === loadingStateEnum.success &&\n        shareResult.url !== undefined\n      ) {\n        setImageUri(shareResult.url);\n        setImageState(shareResult.result);\n        Image.getSize(\n          shareResult.url,\n          (imageMeasureWidth, imageMeasureHeight) => {\n            const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n            setImageHeight(width * 0.7 * heightPerWidth);\n          },\n        );\n      }\n      setImageState(shareResult.result);\n    }\n  }\n\n  useEffect(() => {\n    loadImage();\n  }, []);\n\n  return (\n    <View\n      style={{\n        width: width * 0.8,\n        height: height * 0.8,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n        position: 'absolute',\n        left: width * 0.1,\n        top: height * 0.1,\n        zIndex: 2,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Pressable onPress={() => onClose()} style={{ margin: 10 }}>\n        <CloseIcon width={12} height={12} />\n      </Pressable>\n      <View\n        style={{\n          width: width * 0.8,\n          alignContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text>Submission</Text>\n        <Text>By: {submissionData.userName}</Text>\n        <Text>\n          Time:{' '}\n          {new Date(submissionData.submissionTime).toLocaleDateString('en-US', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n          })}\n        </Text>\n        <Text>Approved: {submissionData.approved ? 'TURE' : 'FALSE'}</Text>\n        <Text>Reviewed: {submissionData.reviewed ? 'TRUE' : 'FALSE'}</Text>\n        <Text>Id: {submissionData.id}</Text>\n        {submissionData.submissionImage ? (\n          <>\n            {imageState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width: width * 0.8,\n                  height: height * 0.8,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={\n                    width * 0.8 < height * 0.8 ? width * 0.3 : height * 0.3\n                  }\n                  height={\n                    width * 0.8 < height * 0.8 ? width * 0.3 : height * 0.3\n                  }\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {imageState === loadingStateEnum.success ? (\n                  <Image\n                    source={{ uri: imageUri }}\n                    width={width * 0.7}\n                    resizeMode=\"center\"\n                    style={{\n                      width: width * 0.7,\n                      height: imageHeight,\n                      marginLeft: 'auto',\n                      marginRight: 'auto',\n                      alignContent: 'center',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      backgroundColor: '#FFFFFF',\n                      shadowOffset: { width: 0, height: 1 },\n                      shadowOpacity: 0.8,\n                      shadowRadius: 10,\n                      borderRadius: 15,\n                    }}\n                  />\n                ) : (\n                  <Text>Failed to load image</Text>\n                )}\n              </>\n            )}\n          </>\n        ) : null}\n      </View>\n      <Pressable onPress={() => changeSubmissionApproved()}>\n        <Text>\n          {changeState === loadingStateEnum.notStarted\n            ? submissionData.approved\n              ? 'REMOVE APPROVAL'\n              : 'APPROVE'\n            : changeState === loadingStateEnum.loading\n            ? 'Loading'\n            : changeState === loadingStateEnum.success\n            ? 'Success'\n            : 'Failed'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { dataContentTypeOptions, loadingStateEnum } from '../../types';\nimport getFileWithShareID from '../Ultility/getFileWithShareID';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nexport default async function getSportsContent(\n  team?: string,\n): Promise<{ result: loadingStateEnum; sports?: sportPost[] }> {\n  const filter = team ? `&$filter=fields/selectedTeamId%20eq%20'${team}'` : '';\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsApprovedSubmissionsListId\n    }/items?expand=fields($select=fileId,caption,selectedSportId,selectedTeamId)${filter}&$select=id`,\n  );\n  if (result.ok) {\n    const dataResult = await result.json();\n    if (dataResult.value.length !== undefined) {\n      const newSportsPosts: sportPost[] = [];\n      const shareResultsPromise: Promise<{\n        result: loadingStateEnum;\n        url?: string | undefined;\n        contentType?: dataContentTypeOptions | undefined;\n      }>[] = [];\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        shareResultsPromise.push(\n          getFileWithShareID(dataResult.value[index].fields.fileId),\n        );\n      }\n      const shareResults: {\n        result: loadingStateEnum;\n        url?: string | undefined;\n        contentType?: dataContentTypeOptions | undefined;\n      }[] = await Promise.all(shareResultsPromise);\n      for (let index = 0; index < shareResults.length; index += 1) {\n        const { url } = shareResults[index];\n        const fileType = shareResults[index].contentType;\n        if (\n          shareResults[index].result === loadingStateEnum.success &&\n          fileType !== undefined &&\n          url !== undefined\n        ) {\n          newSportsPosts.push({\n            caption: dataResult.value[index].fields.caption,\n            fileID: url,\n            fileType,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      return { result: loadingStateEnum.success, sports: newSportsPosts };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  const data = await result.json();\n  return { result: loadingStateEnum.failed };\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nexport async function getSports(): Promise<{\n  result: loadingStateEnum;\n  data?: sportType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsListId\n    }/items?expand=fields($select=sportName,sportId,sportSvg)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const resultData: sportType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          name: data.value[index].fields.sportName,\n          id: data.value[index].fields.sportId,\n          svgData: data.value[index].fields.sportSvg,\n        });\n      }\n      return { result: loadingStateEnum.success, data: resultData };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSportsTeams(\n  sportId: string,\n): Promise<{ result: loadingStateEnum; data?: sportTeamType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${sportId}/items?expand=fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const resultData: sportTeamType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          teamName: data.value[index].fields.teamName,\n          season: data.value[index].fields.season,\n          teamId: data.value[index].fields.teamId,\n        });\n      }\n      return { result: loadingStateEnum.success, data: resultData };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport batchRequest from '../Ultility/batchRequest';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nexport default async function getRoster(\n  teamId: string,\n): Promise<{ result: loadingStateEnum; data?: rosterType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${teamId}/items?$expand=fields($select=playerId,position,playerNumber,posts,imageShareId)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const batchData: { id: string; method: 'GET' | 'POST'; url: string }[][] =\n      [];\n    let batchIndex = -1;\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (index % 20 === 0) {\n        batchIndex += 1;\n        batchData.push([]);\n      }\n      batchData[batchIndex].push({\n        id: (index + 1 - 20 * batchIndex).toString(),\n        method: 'GET',\n        url: `/users/${data.value[index].fields.playerId}`,\n      });\n    }\n    const batchResult = await batchRequest(batchData);\n    if (\n      batchResult.result === loadingStateEnum.success &&\n      batchResult.data !== undefined\n    ) {\n      const outUsers: microsoftUserType[] = [];\n      for (let index = 0; index < batchResult.data.length; index += 1) {\n        if (batchResult.data[index].status === 200) {\n          // TO DO check okay response code\n          outUsers.push({\n            id: batchResult.data[index].body.id,\n            displayName: batchResult.data[index].body.displayName,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      const outputRosters: rosterType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        const userData = outUsers.find(e => {\n          return e.id === data.value[index].fields.playerId;\n        });\n        if (userData !== undefined) {\n          outputRosters.push({\n            name: userData.displayName,\n            id: data.value[index].fields.playerId,\n            imageShareId: data.value[index].fields.imageShareId,\n            position: data.value[index].fields.position,\n            playerNumber: data.value[index].fields.playerNumber,\n            posts:\n              data.value[index].fields.posts !== undefined\n                ? JSON.parse(data.value[index].fields.posts)\n                : undefined,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      return { result: loadingStateEnum.success, data: outputRosters };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text } from 'react-native';\nimport React from 'react';\n\nexport default function SVGXml({\n  xml,\n  height,\n  width,\n}: {\n  xml: string;\n  width: number;\n  height: number;\n}) {\n  return (\n    <View style={{ height, width }}>\n      <div dangerouslySetInnerHTML={{ __html: xml }} />\n    </View>\n  );\n}\n","import { ResizeMode, Video } from 'expo-av';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  ScrollView,\n  Pressable,\n  FlatList,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport getSportsContent from '../Functions/sports/getSportsContent';\nimport createUUID from '../Functions/Ultility/createUUID';\nimport { getSports, getSportsTeams } from '../Functions/sports/sportsFunctions';\nimport getRoster from '../Functions/sports/getRoster';\nimport getFileWithShareID from '../Functions/Ultility/getFileWithShareID';\nimport SegmentedPicker from '../UI/Pickers/SegmentedPicker';\nimport SVGXml from '../UI/SVGXml/SVGXml';\nimport BackButton from '../UI/BackButton';\nimport ProgressView from '../UI/ProgressView';\nimport { Colors, dataContentTypeOptions, loadingStateEnum } from '../types';\n\nexport default function Sports() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [sportsPosts, setSportsPosts] = useState<sportPost[]>([]);\n  const [loadingResult, setLoadingResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [sportsState, setSportsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [teamsState, setTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedSport, setSelectedSport] = useState<sportType | undefined>(\n    undefined,\n  );\n  const [selectedTeam, setSelectedTeam] = useState<sportTeamType | undefined>(\n    undefined,\n  );\n  const [isShowingTeams, setIsShowingTeams] = useState<boolean>(false);\n  const [sports, setSports] = useState<sportType[]>([]);\n  const [isShowingRoster, setIsShowingRoster] = useState<boolean>(false);\n  const [sportsTeams, setSportsTeams] = useState<sportTeamType[]>([]);\n  const [sportsSelectHeight, setSportsSelectHeight] = useState<number>(34);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  async function loadSports() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSports(result.data);\n    }\n    setSportsState(result.result);\n  }\n\n  async function loadTeams(sport: sportType) {\n    const result = await getSportsTeams(sport.id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSportsTeams(result.data);\n    }\n    setTeamsState(result.result);\n  }\n\n  async function loadSportsContent() {\n    const result = await getSportsContent(selectedTeam?.teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.sports !== undefined\n    ) {\n      setSportsPosts(result.sports);\n    }\n    setLoadingResult(result.result);\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n    loadSports();\n  }, []);\n\n  useEffect(() => {\n    loadSportsContent();\n  }, [selectedTeam]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        backgroundColor: Colors.white,\n        overflow: 'hidden',\n      }}\n    >\n      <View\n        style={{\n          height: height * 0.1,\n          width,\n          backgroundColor: Colors.darkGray,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n        <Text\n          style={{\n            fontFamily: 'BukhariScript',\n            color: 'white',\n            fontSize: height * 0.06,\n          }}\n        >\n          Sports\n        </Text>\n      </View>\n      <ScrollView\n        style={{\n          height: isShowingTeams ? height * 0.1 : sportsSelectHeight,\n          width,\n        }}\n        horizontal\n      >\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            <>\n              {sportsState === loadingStateEnum.loading ? (\n                <View\n                  style={{\n                    width: isShowingTeams ? height * 0.05 : height * 0.1,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <ProgressView width={15} height={15} />\n                </View>\n              ) : (\n                <>\n                  {sportsState === loadingStateEnum.success ? (\n                    <>\n                      <Pressable\n                        style={{\n                          backgroundColor: Colors.darkGray,\n                          borderWidth: selectedSport === undefined ? 3 : 0,\n                          borderColor: 'black',\n                          borderRadius: 15,\n                          alignContent: 'center',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          marginLeft: 3,\n                          marginTop: 3,\n                        }}\n                        onPress={() => {\n                          setSelectedTeam(undefined);\n                          setSportsTeams([]);\n                          setSelectedSport(undefined);\n                          setIsShowingRoster(false);\n                          setIsShowingTeams(false);\n                        }}\n                      >\n                        <Text\n                          style={{\n                            margin: isShowingTeams ? 5 : 10,\n                            color: Colors.white,\n                            marginBottom: isShowingTeams ? 5 : 10,\n                          }}\n                        >\n                          Highlights\n                        </Text>\n                      </Pressable>\n                      {sports.map(sport => (\n                        <Pressable\n                          key={`SportButton_${sport.id}`}\n                          onLayout={e => {\n                            setSportsSelectHeight(e.nativeEvent.layout.height);\n                          }}\n                          onPress={() => {\n                            setSelectedSport(sport);\n                            loadTeams(sport);\n                            setIsShowingTeams(true);\n                            setIsShowingRoster(false);\n                          }}\n                          style={{\n                            backgroundColor: Colors.darkGray,\n                            borderWidth: selectedSport?.id === sport.id ? 3 : 0,\n                            borderColor: 'black',\n                            borderRadius: 15,\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            marginLeft: 3,\n                            marginTop: 3,\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: 'row',\n                              alignContent: 'center',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              marginLeft: 10,\n                            }}\n                          >\n                            <SVGXml\n                              xml={sport.svgData}\n                              width={20}\n                              height={20}\n                            />\n                            <View style={{ marginLeft: 4 }}>\n                              <Text\n                                style={{\n                                  margin: isShowingTeams ? 5 : 10,\n                                  marginLeft: 2,\n                                  color: Colors.white,\n                                  marginBottom:\n                                    sport.id === selectedSport?.id &&\n                                    selectedTeam !== undefined &&\n                                    !isShowingTeams\n                                      ? 0\n                                      : isShowingTeams\n                                      ? 5\n                                      : 10,\n                                }}\n                              >\n                                {sport.name}\n                              </Text>\n                              {sport.id === selectedSport?.id &&\n                              selectedTeam !== undefined &&\n                              !isShowingTeams ? (\n                                <View>\n                                  <Text\n                                    style={{\n                                      color: Colors.white,\n                                      marginBottom: 5,\n                                      marginLeft: 2,\n                                      marginRight: 10,\n                                    }}\n                                  >\n                                    {selectedTeam?.teamName}\n                                  </Text>\n                                </View>\n                              ) : null}\n                            </View>\n                          </View>\n                        </Pressable>\n                      ))}\n                    </>\n                  ) : (\n                    <View>\n                      <Text>Failed</Text>\n                    </View>\n                  )}\n                </>\n              )}\n            </>\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {isShowingTeams ? (\n              <>\n                {sportsState === loadingStateEnum.loading ? (\n                  <View\n                    style={{\n                      width,\n                      height: height * 0.05,\n                      alignContent: 'center',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <ProgressView width={15} height={15} />\n                  </View>\n                ) : (\n                  <>\n                    {sportsState === loadingStateEnum.success ? (\n                      <>\n                        {sportsTeams.map(team => (\n                          <Pressable\n                            key={`SportTeam_${team.teamId}`}\n                            onPress={() => {\n                              setSelectedTeam(team);\n                              setIsShowingTeams(false);\n                              setIsShowingRoster(false);\n                            }}\n                            style={{\n                              backgroundColor: Colors.darkGray,\n                              borderRadius: 15,\n                              alignContent: 'center',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              marginLeft: 3,\n                              marginTop: 3,\n                            }}\n                          >\n                            <Text style={{ margin: 5, color: Colors.white }}>\n                              {team.teamName}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </>\n                    ) : (\n                      <Text>Failed to load Sports</Text>\n                    )}\n                  </>\n                )}\n              </>\n            ) : null}\n          </View>\n        </View>\n      </ScrollView>\n      {loadingResult === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height:\n              height * 0.8 +\n              (isShowingTeams ? 0 : height * 0.1 - sportsSelectHeight),\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.25 : height * 0.25}\n            height={width < height ? width * 0.5 : height * 0.5}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingResult === loadingStateEnum.success ? (\n            <ScrollView style={{ height: height * 0.8 }}>\n              {selectedTeam !== undefined ? (\n                <View style={{ marginLeft: 5, marginRight: 10, marginTop: 10 }}>\n                  <SegmentedPicker\n                    selectedIndex={isShowingRoster ? 1 : 0}\n                    setSelectedIndex={e => {\n                      if (e === 0) {\n                        setIsShowingRoster(false);\n                      } else if (e === 1) {\n                        setIsShowingRoster(true);\n                      }\n                    }}\n                    options={['Highlights', 'Roster']}\n                    width={width - 16}\n                    height={25}\n                  />\n                </View>\n              ) : null}\n              {isShowingRoster && selectedTeam !== undefined ? (\n                <RosterView\n                  teamId={selectedTeam.teamId}\n                  width={width}\n                  height={height * 0.7}\n                />\n              ) : (\n                <>\n                  {sportsPosts.map(item => (\n                    <View\n                      key={`Sport_${item.fileID}`}\n                      style={{ marginTop: height * 0.05 }}\n                    >\n                      {item.fileType === dataContentTypeOptions.image ? (\n                        <View\n                          style={{\n                            width: width * 0.9,\n                            height: height * 0.4,\n                            backgroundColor: '#FFFFFF',\n                            shadowColor: 'black',\n                            shadowOffset: { width: 1, height: 1 },\n                            shadowOpacity: 1,\n                            shadowRadius: 5,\n                            marginLeft: width * 0.05,\n                            marginRight: width * 0.05,\n                            borderRadius: 15,\n                          }}\n                        >\n                          <Text\n                            style={{\n                              position: 'absolute',\n                              left: 5,\n                              bottom: 5,\n                              zIndex: 100,\n                            }}\n                          >\n                            {item.caption}\n                          </Text>\n                          <Image\n                            style={{\n                              width: width * 0.9,\n                              height: height * 0.4,\n                              marginLeft: width * 0.05,\n                              marginRight: width * 0.05,\n                              borderRadius: 15,\n                            }}\n                            source={{ uri: item.fileID }}\n                          />\n                        </View>\n                      ) : null}\n                      {item.fileType === dataContentTypeOptions.video ? (\n                        <View\n                          style={{\n                            width: width * 0.9,\n                            height: height * 0.4,\n                            backgroundColor: '#FFFFFF',\n                            shadowColor: 'black',\n                            shadowOffset: { width: 1, height: 1 },\n                            shadowOpacity: 1,\n                            shadowRadius: 5,\n                            marginLeft: width * 0.05,\n                            marginRight: width * 0.05,\n                            borderRadius: 15,\n                          }}\n                        >\n                          <Text\n                            style={{\n                              position: 'absolute',\n                              left: 5,\n                              bottom: 5,\n                              zIndex: 100,\n                            }}\n                          >\n                            {item.caption}\n                          </Text>\n                          <Video\n                            useNativeControls\n                            source={{ uri: item.fileID }}\n                            resizeMode={ResizeMode.COVER}\n                            style={{\n                              width: width * 0.9,\n                              height: height * 0.4,\n                              alignSelf: 'stretch',\n                              borderRadius: 15,\n                            }}\n                            videoStyle={{\n                              width: width * 0.9,\n                              height: height * 0.4,\n                            }}\n                          />\n                        </View>\n                      ) : null}\n                    </View>\n                  ))}\n                </>\n              )}\n            </ScrollView>\n          ) : (\n            <View>\n              <Text>Something went wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n\nfunction RosterView({\n  teamId,\n  width,\n  height,\n}: {\n  teamId: string;\n  width: number;\n  height: number;\n}) {\n  const [rosterLoadingState, setRosterLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [roster, setRoster] = useState<rosterType[]>([]);\n\n  async function loadRoster() {\n    const result = await getRoster(teamId);\n    console.log(result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRoster(result.data);\n    }\n    setRosterLoadingState(result.result);\n  }\n\n  useEffect(() => {\n    loadRoster();\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      {rosterLoadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <ProgressView width={width * 0.1} height={height * 0.1} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {rosterLoadingState === loadingStateEnum.success ? (\n            <View>\n              <View\n                style={{ flexDirection: 'row', marginTop: 10, marginBottom: 5 }}\n              >\n                <Text style={{ marginLeft: 35, width: width * 0.4 }}>\n                  Player\n                </Text>\n                <Text style={{ width: width * 0.3 }}>Player Number</Text>\n                <Text>Position</Text>\n              </View>\n              <FlatList\n                data={roster}\n                renderItem={item => (\n                  <View\n                    style={{\n                      backgroundColor:\n                        item.index % 2 === 0 ? Colors.white : Colors.lightGray,\n                    }}\n                  >\n                    <View style={{ flexDirection: 'row', margin: 10 }}>\n                      <RosterImage id={item.item.imageShareId} />\n                      <Text style={{ marginLeft: 5, width: width * 0.4 }}>\n                        {item.item.name}\n                      </Text>\n                      {item.item.playerNumber !== undefined ? (\n                        <Text style={{ width: width * 0.3 }}>\n                          {item.item.playerNumber}\n                        </Text>\n                      ) : null}\n                      {item.item.position !== undefined ? (\n                        <Text>{item.item.position}</Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Something went wrong loading the roster</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction RosterImage({ id }: { id?: string }) {\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const [imageState, setImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  async function loadData(imageId: string) {\n    setImageState(loadingStateEnum.loading);\n    const result = await getFileWithShareID(imageId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.url !== undefined\n    ) {\n      setImageUrl(result.url);\n      setImageState(loadingStateEnum.success);\n    } else {\n      setImageState(loadingStateEnum.failed);\n    }\n  }\n  useEffect(() => {\n    if (id !== undefined) {\n      loadData(id);\n    }\n  }, [id]);\n\n  return (\n    <>\n      {imageState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width: 20,\n            height: 20,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={14} height={14} />\n        </View>\n      ) : (\n        <>\n          {imageState === loadingStateEnum.success ? (\n            <View>\n              <Image\n                source={{ uri: imageUrl }}\n                style={{ width: 20, height: 20, borderRadius: 10 }}\n              />\n            </View>\n          ) : (\n            <>\n              {imageState === loadingStateEnum.notStarted ? (\n                <View style={{ width: 20, height: 20 }} />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","//\n//  DayView.tsx\n//  Pauly\n//\n//  Created by Andrew Mainella on 2023-07-21.\n//\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { View, ScrollView, useColorScheme, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport {\n  calculateIfShowing,\n  computeEventHeight,\n  findTimeOffset,\n  isDateToday,\n} from '../../Functions/calendar/calendarFunctions';\nimport { RootState } from '../../Redux/store';\nimport create_UUID from '../../Functions/Ultility/createUUID';\nimport { Colors, loadingStateEnum } from '../../types';\nimport { getClassEventsFromDay } from '../../Functions/classesFunctions';\n\nexport default function DayView({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const colorScheme = useColorScheme();\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const [heightOffsetTop, setHeightOffsetTop] = useState<number>(0);\n  const [currentMinuteInt, setCurrentMinuteInt] = useState<number>(0);\n  const [currentTime, setCurrentTime] = useState<string>('12:00');\n  const [isShowingTime, setIsShowingTime] = useState<boolean>(true);\n  const [hourLength, setHourLength] = useState<number>(0);\n  const hoursText: string[] = [\n    '12AM',\n    '1AM',\n    '2AM',\n    '3AM',\n    '4AM',\n    '5AM',\n    '6AM',\n    '7AM',\n    '8AM',\n    '9AM',\n    '10AM',\n    '11AM',\n    '12PM',\n    '1PM',\n    '2PM',\n    '3PM',\n    '4PM',\n    '5PM',\n    '6PM',\n    '7PM',\n    '8PM',\n    '9PM',\n    '10PM',\n    '11PM',\n  ];\n  const mainScrollRef = useRef<ScrollView>(null);\n  const [eventsPane, setEventsPane] = useState<number[][]>([[]]); // This is a sorted 2d array for calculating the horizintal shift of an event\n  const [schoolEvents, setSchoolEvents] = useState<eventType[]>();\n\n  function setCurrentTimeFunction(hour: number, minuite: number) {\n    if (minuite.toString().length == 1) {\n      if (hour == 12) {\n        setCurrentTime(`12:0${minuite.toString()}`);\n      } else {\n        setCurrentTime(`${(hour % 12).toString()}:0${minuite.toString()}`);\n      }\n    } else if (hour == 12) {\n      setCurrentTime(`12:${minuite}`);\n    } else {\n      setCurrentTime(`${(hour % 12).toString()}:${minuite.toString()}`);\n    }\n  }\n\n  function loadCalendarContent() {\n    const currentDate = new Date();\n    const resultHeightTopOffset = findTimeOffset(currentDate, height);\n    setHeightOffsetTop(resultHeightTopOffset);\n    const minuiteInt: number = currentDate.getMinutes();\n    setCurrentMinuteInt(minuiteInt);\n    const hourInt = currentDate.getHours();\n    setCurrentTimeFunction(hourInt, minuiteInt);\n    mainScrollRef.current?.scrollTo({\n      x: 0,\n      y: resultHeightTopOffset,\n      animated: false,\n    });\n  }\n\n  function updateOnTimeChange() {\n    const minuiteInt = new Date().getMinutes();\n    if (currentMinuteInt != minuiteInt!) {\n      setCurrentMinuteInt(minuiteInt);\n\n      const hourInt = new Date().getHours();\n      if (minuiteInt.toString().length == 1) {\n        setCurrentTimeFunction(hourInt, minuiteInt);\n      } else {\n        setCurrentTimeFunction(hourInt, minuiteInt);\n      }\n      setHeightOffsetTop(findTimeOffset(new Date(), height));\n    }\n  }\n\n  // https://stackoverflow.com/questions/65049812/how-to-call-a-function-every-minute-in-a-react-component\n  // Upadtes every second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updateOnTimeChange();\n    }, 1000);\n\n    return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\n  }, []);\n\n  useEffect(() => {\n    setHourLength(height * 0.1);\n    loadCalendarContent();\n  }, []);\n\n  async function getClassesEvents() {\n    const result = await getClassEventsFromDay();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSchoolEvents(result.data);\n    }\n  }\n\n  useEffect(() => {\n    getClassesEvents();\n  }, [selectedDate]);\n\n  return (\n    <ScrollView\n      style={{ height, width, backgroundColor: Colors.white }}\n      ref={mainScrollRef}\n    >\n      <>\n        {isShowingTime ? (\n          <>\n            {hoursText.map(value => (\n              <View\n                key={`${value}_${create_UUID()}`}\n                style={{ flexDirection: 'row', height: hourLength }}\n              >\n                {calculateIfShowing(value, new Date(selectedDate)) ? (\n                  <Text\n                    style={{\n                      color: colorScheme == 'dark' ? Colors.white : 'black',\n                    }}\n                  >\n                    {value}\n                  </Text>\n                ) : null}\n                <View\n                  style={{\n                    backgroundColor: 'black',\n                    width: width * 0.9,\n                    height: 6,\n                    position: 'absolute',\n                    right: 0,\n                    borderRadius: 25,\n                  }}\n                />\n              </View>\n            ))}\n          </>\n        ) : null}\n      </>\n      {currentEvents.map(event => (\n        <>\n          {event.allDay ||\n          new Date(event.endTime).getFullYear() !==\n            new Date(selectedDate).getFullYear() ||\n          new Date(event.endTime).getMonth() !==\n            new Date(selectedDate).getMonth() ||\n          new Date(event.endTime).getDate() !==\n            new Date(selectedDate).getDate() ? null : (\n            <EventBlock\n              event={event}\n              width={width}\n              height={height}\n              eventPane={eventsPane}\n              setEventPane={setEventsPane}\n            />\n          )}\n        </>\n      ))}\n      {schoolEvents?.map(event => (\n        <EventBlock\n          event={event}\n          width={width}\n          height={height}\n          eventPane={eventsPane}\n          setEventPane={setEventsPane}\n        />\n      ))}\n      {new Date(selectedDate).getDate() === new Date().getDate() &&\n      new Date(selectedDate).getMonth() === new Date().getMonth() &&\n      new Date(selectedDate).getFullYear() === new Date().getFullYear() ? (\n        <View\n          style={{\n            position: 'absolute',\n            top: heightOffsetTop,\n            height: height * 0.005,\n            width,\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}\n        >\n          <Text style={{ color: 'red', zIndex: 2 }}>{currentTime}</Text>\n          <View\n            style={{\n              backgroundColor: 'red',\n              width: width * 0.914,\n              height: 6,\n              position: 'absolute',\n              right: 0,\n            }}\n          />\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nfunction EventBlock({\n  event,\n  width,\n  height,\n  eventPane,\n  setEventPane,\n}: {\n  event: eventType;\n  width: number;\n  height: number;\n  eventPane: number[][];\n  setEventPane: (item: number[][]) => void;\n}) {\n  const EventHeight = computeEventHeight(\n    new Date(event.startTime),\n    new Date(event.endTime),\n    height,\n  );\n  const Offset = findTimeOffset(new Date(event.startTime), height);\n  const [horizontalShift, setHorizontalShift] = useState<number>(0);\n  function calculateHorizontalShift() {\n    let handeled = false;\n    for (\n      let horizontalCheck = 0;\n      horizontalCheck < eventPane.length;\n      horizontalCheck += 1\n    ) {\n      const beforeIndex = eventPane[horizontalCheck].findIndex(\n        e => e >= Offset,\n      );\n      if (beforeIndex !== -1) {\n        if (beforeIndex - 1 < eventPane[horizontalCheck].length) {\n          if (eventPane[horizontalCheck][beforeIndex - 1] <= Offset) {\n            // Fail Check Next Hoizontal Array\n            continue;\n          } else {\n            // Everything Checks Out\n            const afterIndex = eventPane[horizontalCheck].findIndex(\n              e => e >= Offset + EventHeight,\n            );\n            if (afterIndex !== -1) {\n              if (afterIndex - 1 < eventPane[horizontalCheck].length) {\n                if (\n                  eventPane[horizontalCheck][afterIndex - 1] <=\n                  Offset + EventHeight\n                ) {\n                  // Fails check next horizontal array\n                  continue;\n                } else {\n                  // All Good\n                  eventPane[horizontalCheck].push(Offset);\n                  eventPane[horizontalCheck].push(Offset + EventHeight);\n                  eventPane[horizontalCheck].sort();\n                  handeled = true;\n                  break;\n                }\n              } else {\n                // Error\n                continue;\n              }\n            } else {\n              // All Good\n              const newEvents: number[][] = eventPane;\n              newEvents[horizontalCheck].push(Offset);\n              newEvents[horizontalCheck].push(Offset + EventHeight);\n              // [...eventPane[horizontalCheck], Offset, Offset + EventHeight])\n              eventPane[horizontalCheck].sort();\n              handeled = true;\n              break;\n            }\n          }\n        } else {\n          // Error\n          continue;\n        }\n      } else {\n        eventPane[horizontalCheck].push(Offset);\n        eventPane[horizontalCheck].push(Offset + EventHeight);\n        eventPane[horizontalCheck].sort();\n        handeled = true;\n        break;\n      }\n    }\n\n    if (!handeled) {\n      eventPane.push([]);\n      eventPane[eventPane.length - 1].push(Offset);\n      eventPane[eventPane.length - 1].push(Offset + EventHeight);\n    }\n    setHorizontalShift(width * horizontalCheck);\n  }\n\n  useEffect(() => {\n    calculateHorizontalShift();\n  }, []);\n\n  return (\n    <View\n      key={`Event_${create_UUID()}`}\n      style={{\n        width: width * 0.9,\n        height: EventHeight,\n        top: Offset,\n        position: 'absolute',\n        right: 0,\n        borderColor: Colors.maroon,\n        borderLeftWidth: 3,\n      }}\n    >\n      <View\n        style={{\n          width: width * 0.9,\n          height: EventHeight,\n          position: 'absolute',\n          backgroundColor: event.eventColor,\n          opacity: 0.3,\n          zIndex: -1,\n        }}\n      />\n      <Text style={{ opacity: 1 }}>{event.name}</Text>\n      <Text>\n        {new Date(event.startTime).toLocaleString('en-us', {\n          hour: 'numeric',\n          minute: 'numeric',\n        })}{' '}\n        to{' '}\n        {new Date(event.endTime).toLocaleString('en-us', {\n          hour: 'numeric',\n          minute: 'numeric',\n        })}\n      </Text>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DayView from './DayView';\nimport create_UUID from '../../Functions/Ultility/createUUID';\nimport { RootState } from '../../Redux/store';\nimport { selectedDateSlice } from '../../Redux/reducers/selectedDateReducer';\nimport { Colors } from '../../types';\nimport { ChevronLeft, ChevronRight } from '../../UI/Icons/Icons';\n\nexport default function Week({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const selectedDateRedux: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  const [daysOfWeek, setDaysOfWeek] = useState<Date[]>([]);\n  const dispatch = useDispatch();\n  function getDOW(selectedDate: Date) {\n    const week: Date[] = [];\n    // Starting Monday not Sunday\n    selectedDate.setDate(selectedDate.getDate() - selectedDate.getDay());\n    for (let i = 0; i < 7; i += 1) {\n      week.push(new Date(selectedDate));\n      selectedDate.setDate(selectedDate.getDate() + 1);\n    }\n    return week;\n  }\n  useEffect(() => {\n    setDaysOfWeek(getDOW(new Date(selectedDateRedux)));\n  }, [selectedDateRedux]);\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View>\n        {/* 768 TO DO get dimentiosn value */}\n        {false ? (\n          <View />\n        ) : (\n          <View>\n            <View\n              style={{\n                flexDirection: 'row',\n                height: width * 0.142857142857143,\n                width,\n              }}\n            >\n              <Pressable\n                style={{ margin: width * 0.01111111111111111 }}\n                onPress={() => {\n                  const d = new Date(selectedDateRedux);\n                  d.setDate(d.getDate() - 7);\n                  dispatch(\n                    selectedDateSlice.actions.setCurrentEventsLastCalled(\n                      d.toISOString(),\n                    ),\n                  );\n                }}\n              >\n                <ChevronLeft\n                  width={width * 0.08888888888888889}\n                  height={width * 0.08888888888888889}\n                />\n              </Pressable>\n              {daysOfWeek.map(day => (\n                <Pressable\n                  onPress={() => {\n                    dispatch(\n                      selectedDateSlice.actions.setCurrentEventsLastCalled(\n                        day.toISOString(),\n                      ),\n                    );\n                  }}\n                  key={`${day.getDay()}_${create_UUID()}`}\n                  style={{\n                    width: width * 0.08888888888888889,\n                    height: width * 0.08888888888888889,\n                    margin: width * 0.01111111111111111,\n                    borderRadius: 50,\n                    backgroundColor: Colors.darkGray,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    borderColor:\n                      day.getDate() === new Date(selectedDateRedux).getDate()\n                        ? 'black'\n                        : Colors.maroon,\n                    borderWidth:\n                      new Date().getDate() === day.getDate() ||\n                      day.getDate() === new Date(selectedDateRedux).getDate()\n                        ? 5\n                        : 0,\n                  }}\n                >\n                  <Text style={{ color: Colors.white }}>{day.getDate()}</Text>\n                </Pressable>\n              ))}\n              <Pressable\n                style={{ margin: width * 0.01111111111111111 }}\n                onPress={() => {\n                  const d = new Date(selectedDateRedux);\n                  d.setDate(d.getDate() + 7);\n                  dispatch(\n                    selectedDateSlice.actions.setCurrentEventsLastCalled(\n                      d.toISOString(),\n                    ),\n                  );\n                }}\n              >\n                <ChevronRight\n                  width={width * 0.08888888888888889}\n                  height={width * 0.08888888888888889}\n                />\n              </Pressable>\n            </View>\n          </View>\n        )}\n      </View>\n      <View\n        style={{\n          height: false ? height : height - width * 0.179,\n          width,\n          alignContent: 'center',\n          alignItems: 'center',\n          backgroundColor: Colors.white,\n        }}\n      >\n        <DayView\n          width={width * 0.95}\n          height={false ? height * 0.757 : height}\n        />\n      </View>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../Functions/Ultility/microsoftAssets';\nimport { RootState } from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\n\nexport default function SelectTimetable({\n  governmentMode,\n  onSelect,\n}: {\n  governmentMode: boolean;\n  onSelect?: (item: timetableStringType) => void;\n}) {\n  const { timetablesListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [loadedTimetables, setLoadedTimetables] = useState<\n    timetableStringType[]\n  >([]);\n  const navigate = useNavigate();\n\n  async function getTimetables() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${timetablesListId}/items?expand=fields`,\n    );\n    if (result.ok) {\n      const dataResult = await result.json();\n      if (\n        dataResult.value.length !== undefined &&\n        dataResult.value.length !== null\n      ) {\n        const newLoadedTimetables: timetableStringType[] = [];\n        for (let index = 0; index < dataResult.value.length; index += 1) {\n          try {\n            newLoadedTimetables.push({\n              name: dataResult.value[index].fields.timetableName,\n              id: dataResult.value[index].fields.timetableId,\n            });\n          } catch (e) {\n            // TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n          }\n        }\n        setLoadedTimetables(newLoadedTimetables);\n        setLoadingState(loadingStateEnum.success);\n      }\n    } else {\n      setLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getTimetables();\n  }, []);\n\n  return (\n    <View>\n      {loadingState === loadingStateEnum.loading ? <Text>Loading</Text> : null}\n      {loadingState === loadingStateEnum.success ? (\n        <View>\n          {loadedTimetables.map(timetable => (\n            <Pressable\n              key={`Timetable_${timetable.id}`}\n              onPress={() => {\n                if (governmentMode) {\n                  navigate(\n                    `/profile/government/calendar/timetable/${timetable.id}`,\n                  );\n                } else if (onSelect !== undefined) {\n                  onSelect(timetable);\n                }\n              }}\n            >\n              <View>\n                <Text>{timetable.name}</Text>\n              </View>\n            </Pressable>\n          ))}\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.failed ? <Text>Failure</Text> : null}\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, ScrollView } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport create_UUID from '../../Functions/Ultility/createUUID';\nimport {\n  getGraphEvents,\n  getTimetable,\n} from '../../Functions/calendar/calendarFunctionsGraph';\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport store, { RootState } from '../../Redux/store';\nimport { loadingStateEnum, semesters } from '../../types';\n\nenum pickSchoolDayMode {\n  schoolYear,\n  schoolDay,\n  schedule,\n  dressCode,\n  semester,\n  dressCodeIncentives,\n}\n\nexport default function SelectSchoolDayData({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const [schoolDayMode, setSchoolDayMode] = useState<pickSchoolDayMode>(\n    pickSchoolDayMode.schoolYear,\n  );\n  const [timetableState, setTimetableState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [timetable, setTimetable] = useState<timetableType | undefined>(\n    undefined,\n  );\n  const { selectedSchoolDayData, selectedSchoolYear } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const dispatch = useDispatch();\n\n  async function loadData(id: string) {\n    setTimetableState(loadingStateEnum.loading);\n    const result = await getTimetable(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.timetable !== undefined\n    ) {\n      setTimetable(result.timetable);\n      setTimetableState(loadingStateEnum.success);\n    } else {\n      setTimetableState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (\n      selectedSchoolYear !== undefined &&\n      timetable === undefined &&\n      selectedSchoolYear.paulyEventData !== undefined\n    ) {\n      loadData(selectedSchoolYear.paulyEventData);\n    }\n  }, [schoolDayMode, selectedSchoolYear]);\n\n  return (\n    <View style={{ width, height }}>\n      {schoolDayMode === pickSchoolDayMode.schoolYear ? (\n        <SchoolYearsSelect\n          onSelect={() => setSchoolDayMode(pickSchoolDayMode.schoolDay)}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.schoolDay ? (\n        <SchoolDaySelect\n          width={width}\n          height={height}\n          timetable={timetable}\n          loadingState={timetableState}\n          onSelect={() => {\n            setSchoolDayMode(pickSchoolDayMode.schedule);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schoolYear);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.schedule &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <ScheduleSelect\n          schedules={timetable.schedules}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: e,\n                dressCode: selectedSchoolDayData.dressCode,\n                semester: selectedSchoolDayData.semester,\n              }),\n            );\n            setSchoolDayMode(pickSchoolDayMode.dressCode);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schoolDay);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.dressCode &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <DressCodeSelect\n          dressCodeData={timetable.dressCode.dressCodeData}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: selectedSchoolDayData.schedule,\n                dressCode: e,\n                semester: selectedSchoolDayData.semester,\n              }),\n            );\n            setSchoolDayMode(pickSchoolDayMode.semester);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schedule);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.semester &&\n      selectedSchoolDayData !== undefined ? (\n        <View>\n          <Pressable\n            onPress={() => {\n              setSchoolDayMode(pickSchoolDayMode.dressCode);\n            }}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setSelectedSchoolDayData({\n                  schoolDay: selectedSchoolDayData.schoolDay,\n                  schedule: selectedSchoolDayData.schedule,\n                  dressCode: selectedSchoolDayData.dressCode,\n                  semester: semesters.semesterOne,\n                }),\n              );\n              setSchoolDayMode(pickSchoolDayMode.dressCodeIncentives);\n            }}\n          >\n            <Text>Semester One</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setSelectedSchoolDayData({\n                  schoolDay: selectedSchoolDayData.schoolDay,\n                  schedule: selectedSchoolDayData.schedule,\n                  dressCode: selectedSchoolDayData.dressCode,\n                  semester: semesters.semesterTwo,\n                }),\n              );\n              setSchoolDayMode(pickSchoolDayMode.dressCodeIncentives);\n            }}\n          >\n            <Text>Semester Two</Text>\n          </Pressable>\n        </View>\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.dressCodeIncentives &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <DressCodeIncentivesSelect\n          dressCodeIncentivesData={timetable.dressCode.dressCodeIncentives}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: selectedSchoolDayData.schedule,\n                dressCode: selectedSchoolDayData.dressCode,\n                semester: selectedSchoolDayData.semester,\n                dressCodeIncentive: e,\n              }),\n            );\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.semester);\n          }}\n        />\n      ) : null}\n    </View>\n  );\n}\n\nfunction SchoolYearsSelect({ onSelect }: { onSelect: () => void }) {\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [currentEventsSchoolYear, setCurrentEventsSchoolYear] = useState<\n    eventType[]\n  >([]);\n  const dispatch = useDispatch();\n\n  async function getData() {\n    const result = await getGraphEvents(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20or%20id%20eq%20'${\n        store.getState().paulyList.eventDataExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20and%20ep/value%20eq%20'schoolYear')`,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.events !== undefined\n    ) {\n      let outputEvents: eventType[] = result.events;\n      let url: string = result.nextLink !== undefined ? result.nextLink : '';\n      let notFound: boolean = result.nextLink !== undefined;\n      while (notFound) {\n        const furtherResult = await getGraphEvents(url);\n        if (\n          furtherResult.result === loadingStateEnum.success &&\n          furtherResult.events !== undefined\n        ) {\n          outputEvents = [...outputEvents, ...furtherResult.events];\n          url =\n            furtherResult.nextLink !== undefined ? furtherResult.nextLink : '';\n          notFound = furtherResult.nextLink !== undefined;\n        } else {\n          notFound = false;\n        }\n      }\n      setCurrentEventsSchoolYear(outputEvents);\n      setLoadingState(loadingStateEnum.success);\n    } else {\n      setLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <View>\n      <ScrollView>\n        {loadingState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {loadingState === loadingStateEnum.success ? (\n              <View>\n                {currentEventsSchoolYear.map(event => (\n                  <Pressable\n                    key={`School_Year_${create_UUID()}`}\n                    onPress={() => {\n                      dispatch(\n                        addEventSlice.actions.setSelectedSchoolYear(event),\n                      );\n                      onSelect();\n                    }}\n                  >\n                    <View>\n                      <Text style={{ margin: 10 }}>{event.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction SchoolDaySelect({\n  width,\n  height,\n  timetable,\n  loadingState,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  timetable: timetableType | undefined;\n  loadingState: loadingStateEnum;\n  onSelect: () => void;\n  onBack: () => void;\n}) {\n  const dispatch = useDispatch();\n  return (\n    <View>\n      <Pressable\n        onPress={() => {\n          onBack();\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <ScrollView style={{ width, height }}>\n        {loadingState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <>\n            {loadingState === loadingStateEnum.success &&\n            timetable !== undefined ? (\n              <>\n                {timetable.days.map(day => (\n                  <Pressable\n                    key={`Day_${day.id}`}\n                    onPress={() => {\n                      onSelect();\n                      dispatch(\n                        addEventSlice.actions.setSelectedSchoolDayData({\n                          schoolDay: day,\n                          schedule: {\n                            properName: '',\n                            descriptiveName: '',\n                            periods: [],\n                            id: '',\n                            color: '',\n                          },\n                          dressCode: {\n                            name: '',\n                            description: '',\n                            id: '',\n                          },\n                          semester: semesters.semesterOne,\n                        }),\n                      );\n                    }}\n                  >\n                    <View>\n                      <Text>{day.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction ScheduleSelect({\n  schedules,\n  onSelect,\n}: {\n  schedules: scheduleType[];\n  onSelect: (item: scheduleType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      {schedules.map(schedule => (\n        <Pressable\n          key={`Schedule_${schedule.id}`}\n          onPress={() => {\n            onSelect(schedule);\n          }}\n        >\n          <View>\n            <Text>{schedule.properName}</Text>\n          </View>\n        </Pressable>\n      ))}\n    </View>\n  );\n}\n\nfunction DressCodeSelect({\n  dressCodeData,\n  onSelect,\n  onBack,\n}: {\n  dressCodeData: dressCodeDataType[];\n  onSelect: (item: dressCodeDataType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      <Pressable\n        onPress={() => {\n          onBack();\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      {dressCodeData.map(data => (\n        <Pressable\n          onPress={() => {\n            onSelect(data);\n          }}\n        >\n          <Text>{data.name}</Text>\n        </Pressable>\n      ))}\n    </View>\n  );\n}\n\nfunction DressCodeIncentivesSelect({\n  dressCodeIncentivesData,\n}: {\n  dressCodeIncentivesData: dressCodeIncentiveType[];\n  onSelect: (item: dressCodeIncentiveType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      {dressCodeIncentivesData.map(incentive => (\n        <View>\n          <Text>{incentive.name}</Text>\n        </View>\n      ))}\n      <Text>None</Text>\n    </View>\n  );\n}\n","import { orgWideGroupID } from '../PaulyConfig';\nimport { addEventSlice } from '../Redux/reducers/addEventReducer';\nimport { currentEventsSlice } from '../Redux/reducers/currentEventReducer';\nimport store from '../Redux/store';\nimport { Colors, loadingStateEnum, paulyEventType } from '../types';\nimport callMsGraph from './Ultility/microsoftAssets';\n\nexport default async function createEvent(): Promise<undefined> {\n  if (store.getState().addEvent.selectedEventType === paulyEventType.personal) {\n    const data: any = {\n      subject: store.getState().addEvent.eventName,\n      start: {\n        dateTime: store.getState().addEvent.startDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n      end: {\n        dateTime: store.getState().addEvent.endDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n    };\n    if (store.getState().addEvent.allDay) {\n      data.start.dateTime = `${\n        store\n          .getState()\n          .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.end.dateTime = `${\n        store\n          .getState()\n          .addEvent.endDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.isAllDay = true;\n    }\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/me/events`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const dataOut = await result.json();\n      const resultEvent: eventType = {\n        id: dataOut.id,\n        name: dataOut.subject,\n        startTime: dataOut.start.dateTime,\n        endTime: dataOut.end.dateTime,\n        eventColor: Colors.white,\n        microsoftEvent: true,\n        microsoftReference: `https://graph.microsoft.com/v1.0/me/events/${dataOut.id}`,\n        allDay: false,\n      };\n      store.dispatch(currentEventsSlice.actions.pushEvent(resultEvent));\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.success),\n      );\n    } else {\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    const data: any = {\n      subject: store.getState().addEvent.eventName,\n      start: {\n        dateTime: store.getState().addEvent.startDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n      end: {\n        dateTime: store.getState().addEvent.endDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n    };\n    const schoolDay = store.getState().addEvent.selectedSchoolDayData;\n    const schoolYearId = store.getState().addEvent.selectedSchoolYear?.id;\n    if (\n      store.getState().addEvent.selectedEventType === paulyEventType.schoolDay\n    ) {\n      if (schoolDay !== undefined) {\n        if (store.getState().addEvent.selectedSchoolDayData === undefined) {\n          store.dispatch(\n            addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n          );\n          return;\n        }\n        data.start.dateTime = `${\n          store\n            .getState()\n            .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n            .split(/[T ]/i, 1)[0]\n        }T00:00:00.0000000`;\n        const newEndDate = new Date(store.getState().addEvent.startDate);\n        newEndDate.setDate(\n          new Date(store.getState().addEvent.startDate).getDate() + 1,\n        );\n        data.end.dateTime = `${\n          newEndDate\n            .toISOString()\n            .replace(/.\\d+Z$/g, 'Z')\n            .split(/[T ]/i, 1)[0]\n        }T00:00:00.0000000`;\n        data.isAllDay = true;\n        data.subject = `${schoolDay.schoolDay.name} ${schoolDay.schedule.properName}`;\n      } else {\n        store.dispatch(\n          addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n        );\n      }\n    } else if (store.getState().addEvent.allDay) {\n      data.start.dateTime = `${\n        store\n          .getState()\n          .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.end.dateTime = `${\n        store\n          .getState()\n          .addEvent.endDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.isAllDay = true;\n    }\n    if (\n      store.getState().addEvent.selectedEventType === paulyEventType.schoolYear\n    ) {\n      data.singleValueExtendedProperties = [\n        {\n          id: store.getState().paulyList.eventTypeExtensionId,\n          value: 'schoolYear',\n        },\n        {\n          id: store.getState().paulyList.eventDataExtensionId,\n          value: store.getState().addEvent.selectedTimetable.id,\n        },\n      ];\n    } else if (\n      store.getState().addEvent.selectedEventType ===\n        paulyEventType.schoolDay &&\n      schoolDay !== undefined &&\n      schoolYearId !== undefined\n    ) {\n      const selectedSchoolDayDataCompressed: schoolDayDataCompressedType = {\n        schoolDayId: schoolDay.schoolDay.id,\n        scheduleId: schoolDay.schedule.id,\n        dressCodeId: schoolDay.dressCode.id,\n        semester: schoolDay.semester,\n        dressCodeIncentiveId:\n          schoolDay.dressCodeIncentive?.id === undefined\n            ? ''\n            : schoolDay.dressCodeIncentive?.id,\n        schoolYearEventId: schoolYearId,\n      };\n      data.singleValueExtendedProperties = [\n        {\n          id: store.getState().paulyList.eventTypeExtensionId,\n          value: 'schoolDay',\n        },\n        {\n          id: store.getState().paulyList.eventDataExtensionId,\n          value: JSON.stringify(selectedSchoolDayDataCompressed),\n        },\n      ];\n    }\n    if (store.getState().addEvent.recurringEvent) {\n    }\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const dataOut = await result.json();\n      const resultEvent: eventType = {\n        id: dataOut.id,\n        name: dataOut.subject,\n        startTime: dataOut.start.dateTime,\n        endTime: dataOut.end.dateTime,\n        eventColor: Colors.white,\n        paulyEventType:\n          store.getState().addEvent.selectedEventType ===\n          paulyEventType.schoolDay\n            ? 'schoolDay'\n            : store.getState().addEvent.selectedEventType ===\n              paulyEventType.schoolYear\n            ? 'schoolYear'\n            : undefined,\n        paulyEventData:\n          store.getState().addEvent.selectedEventType ===\n          paulyEventType.schoolDay\n            ? JSON.stringify(store.getState().addEvent.selectedSchoolDayData)\n            : store.getState().addEvent.selectedEventType ===\n              paulyEventType.schoolYear\n            ? store.getState().addEvent.selectedTimetable.id\n            : undefined,\n        microsoftEvent: true,\n        microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${dataOut.id}`,\n        allDay: false,\n      };\n      store.dispatch(currentEventsSlice.actions.pushEvent(resultEvent));\n      store.dispatch(addEventSlice.actions.setSelectedSchoolDayData(undefined));\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.success),\n      );\n    } else {\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n      );\n    }\n  }\n}\n","/*\n  Andrew Mainella\n  October 18 2023\n  Pauly\n  AddEvent.tsx\n*/\n\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Pressable, View, Text, Switch, TextInput } from 'react-native';\nimport { TimePickerModal, DatePickerModal } from 'react-native-paper-dates';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport { currentEventsSlice } from '../../Redux/reducers/currentEventReducer';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport callMsGraph from '../../Functions/Ultility/microsoftAssets';\nimport SelectTimetable from './SelectTimetable';\nimport SelectSchoolDayData from './SelectSchoolDayData';\nimport { Colors, loadingStateEnum, paulyEventType } from '../../types';\nimport PickerWrapper from '../../UI/Pickers/Picker';\nimport { CalendarIcon, CloseIcon, TimeIcon } from '../../UI/Icons/Icons';\nimport updateEvent from '../../Functions/updateEvent';\n\nexport default function AddEvent({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { selectedEventType, isEditing, selectedEvent, createEventState } =\n    useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (\n      selectedEventType === paulyEventType.schoolDay ||\n      selectedEventType === paulyEventType.schoolYear\n    ) {\n      dispatch(addEventSlice.actions.setAllDay(true));\n    }\n  }, [selectedEventType]);\n\n  async function deleteEvent() {\n    if (\n      selectedEvent !== undefined &&\n      selectedEvent.microsoftEvent &&\n      selectedEvent.microsoftReference !== undefined\n    ) {\n      const deleteEvent = await callMsGraph(\n        selectedEvent.microsoftReference,\n        'DELETE',\n      );\n      if (deleteEvent.ok) {\n        const index = currentEvents.findIndex(e => {\n          return e.id === selectedEvent.id;\n        });\n        dispatch(currentEventsSlice.actions.removeCurrentEvent(index));\n        dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n      } else {\n        // TO DO throw error\n      }\n    }\n  }\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        backgroundColor: Colors.white,\n        width: width + 30,\n        height,\n        borderRadius: 5,\n        borderWidth: 5,\n      }}\n    >\n      <View style={{ margin: 10, width }}>\n        <Pressable\n          onPress={() => {\n            dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n            dispatch(\n              addEventSlice.actions.setCreateEventState(\n                loadingStateEnum.notStarted,\n              ),\n            );\n          }}\n        >\n          <CloseIcon width={10} height={10} />\n        </Pressable>\n        <Text style={{ fontFamily: 'BukhariScript' }}>Add Event</Text>\n        <DateAndTimeSection width={width} height={height} />\n        {isGovernmentMode ? (\n          <GovernmentCalendarOptions width={width} height={height} />\n        ) : null}\n        <View\n          style={{\n            width,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setCreateEventState(\n                  loadingStateEnum.loading,\n                ),\n              );\n              updateEvent();\n            }}\n            style={{\n              width: 100,\n              height: 50,\n              backgroundColor: '#00a4db',\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 15,\n              shadowColor: '#000',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 2,\n            }}\n          >\n            <Text style={{ zIndex: -1 }}>\n              {isEditing\n                ? 'Save'\n                : createEventState === loadingStateEnum.notStarted\n                ? 'CREATE'\n                : createEventState === loadingStateEnum.loading\n                ? 'Loading'\n                : createEventState === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n        </View>\n        {isEditing ? (\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n              deleteEvent();\n            }}\n            style={{\n              width: 100,\n              height: 50,\n              backgroundColor: '#00a4db',\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 15,\n              shadowColor: '#000',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 2,\n            }}\n          >\n            <Text style={{ zIndex: -1 }}>Delete</Text>\n          </Pressable>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nfunction GovernmentCalendarOptions({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const {\n    selectedEventType,\n    selectedTimetable,\n    selectedSchoolDayData,\n    selectedSchoolYear,\n  } = useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <View>\n        <PickerWrapper\n          selectedIndex={selectedEventType}\n          onSetSelectedIndex={e => {\n            dispatch(addEventSlice.actions.setSelectedEventType(e));\n          }}\n          width={width}\n          height={height * 0.05}\n        >\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Personal\">\n            Personal\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Regular\">\n            Regular\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Day\">\n            School Day{' '}\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Year\">\n            School Year\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Council\">\n            Student Council\n          </Text>\n        </PickerWrapper>\n      </View>\n      {selectedEventType === paulyEventType.schoolDay ? (\n        <View style={{ width, height: 100 }}>\n          <Text>\n            Selected School Year:{' '}\n            {selectedSchoolYear ? selectedSchoolYear.name : 'None selected'}\n          </Text>\n          <SelectSchoolDayData width={width} height={100} />\n        </View>\n      ) : null}\n      {selectedEventType === paulyEventType.schoolYear ? (\n        <View>\n          <Text>\n            Selected Timetable:{' '}\n            {selectedTimetable ? selectedTimetable.name : 'Unselected'}\n          </Text>\n          <SelectTimetable\n            governmentMode={false}\n            onSelect={e => {\n              dispatch(addEventSlice.actions.setSelectedTimetable(e));\n            }}\n          />\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nfunction DateAndTimeSection({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const {\n    selectedEventType,\n    eventName,\n    allDay,\n    startDate,\n    endDate,\n    isPickingStartDate,\n    isPickingEndDate,\n  } = useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n  const [endDatePickerVisable, setEndDatePickerVisable] =\n    useState<boolean>(false);\n  const [startDatePickerVisable, setStartDatePickerVisable] =\n    useState<boolean>(false);\n  return (\n    <View>\n      <DatePickerModal\n        locale=\"en\"\n        mode=\"single\"\n        label=\"Select Date\"\n        visible={isPickingStartDate}\n        onDismiss={() =>\n          dispatch(addEventSlice.actions.setIsPickingStartDate(false))\n        }\n        date={new Date(startDate)}\n        onConfirm={e => {\n          console.log(e.date);\n          if (e.date !== undefined) {\n            const oldDate = new Date(startDate);\n            dispatch(\n              addEventSlice.actions.setStartDate(\n                new Date(\n                  e.date.getFullYear(),\n                  e.date.getMonth(),\n                  e.date.getDate(),\n                  oldDate.getHours(),\n                  oldDate.getMinutes(),\n                ).toISOString(),\n              ),\n            );\n          }\n          dispatch(addEventSlice.actions.setIsPickingStartDate(false));\n        }}\n      />\n      <DatePickerModal\n        locale=\"\"\n        mode=\"single\"\n        label=\"Select Date\"\n        visible={isPickingEndDate}\n        onDismiss={() =>\n          dispatch(addEventSlice.actions.setIsPickingEndDate(false))\n        }\n        date={new Date(endDate)}\n        onConfirm={e => {\n          console.log(e.date);\n          if (e.date !== undefined) {\n            const oldDate = new Date(endDate);\n            const newDate = new Date(\n              e.date.getFullYear(),\n              e.date.getMonth(),\n              e.date.getDate(),\n              oldDate.getHours(),\n              oldDate.getMinutes(),\n            ).toISOString();\n            console.log(newDate);\n            dispatch(addEventSlice.actions.setEndDate(newDate));\n          }\n          dispatch(addEventSlice.actions.setIsPickingEndDate(false));\n        }}\n      />\n      {selectedEventType === paulyEventType.schoolDay ? null : (\n        <View>\n          <TextInput\n            value={eventName}\n            onChangeText={e => {\n              dispatch(addEventSlice.actions.setEventName(e));\n            }}\n            placeholder=\"Event Name\"\n            style={{\n              width: width * 0.8,\n              height: height * 0.05,\n              borderBottomColor: '#000000',\n              borderBottomWidth: 1,\n              marginLeft: width * 0.01,\n            }}\n          />\n          {selectedEventType !== paulyEventType.schoolYear ? (\n            <View\n              style={{ flexDirection: 'row', marginTop: 7, marginBottom: 7 }}\n            >\n              <Text>All Day</Text>\n              <Switch\n                trackColor={{ false: '#767577', true: '#81b0ff' }}\n                thumbColor={allDay ? '#f5dd4b' : '#f4f3f4'}\n                ios_backgroundColor=\"#3e3e3e\"\n                onValueChange={e => {\n                  dispatch(addEventSlice.actions.setAllDay(e));\n                }}\n                value={allDay}\n                style={{ marginLeft: 10 }}\n              />\n            </View>\n          ) : null}\n        </View>\n      )}\n      <Text>\n        {selectedEventType === paulyEventType.schoolDay ? '' : 'Start '}Date\n      </Text>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={{ flexDirection: 'row', margin: 10 }}>\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsPickingStartDate(true));\n            }}\n          >\n            <Text>\n              {new Date(startDate).toLocaleString('en-us', { month: 'long' })}{' '}\n              {new Date(startDate).getDate()}{' '}\n              {new Date(startDate).getFullYear()}{' '}\n            </Text>\n          </Pressable>\n          {!allDay ? (\n            <Pressable\n              onPress={() => {\n                setStartDatePickerVisable(true);\n              }}\n            >\n              <Text>\n                {new Date(startDate).getHours() % 12 || 12}:\n                {new Date(startDate).getMinutes().toString().length === 1\n                  ? `0${new Date(startDate).getMinutes()}`\n                  : new Date(startDate).getMinutes()}{' '}\n                {new Date(startDate).getHours() >= 12 ? 'pm' : 'am'}\n              </Text>\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsPickingStartDate(true));\n            }}\n          >\n            <CalendarIcon width={24} height={15} />\n          </Pressable>\n        </View>\n        {allDay ? null : (\n          <View style={{ margin: 5 }}>\n            <Pressable\n              onPress={() => {\n                setStartDatePickerVisable(true);\n              }}\n              style={{\n                height: 26.4,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <TimeIcon width={15} height={15} />\n            </Pressable>\n            <TimePickerModal\n              hours={new Date(startDate).getHours()}\n              minutes={new Date(startDate).getMinutes()}\n              visible={startDatePickerVisable}\n              onDismiss={() => setStartDatePickerVisable(false)}\n              onConfirm={e => {\n                console.log(e);\n                const newDate = new Date(startDate);\n                newDate.setHours(e.hours);\n                newDate.setMinutes(e.minutes);\n                console.log(newDate);\n                dispatch(\n                  addEventSlice.actions.setStartDate(newDate.toISOString()),\n                );\n                setStartDatePickerVisable(false);\n              }}\n            />\n          </View>\n        )}\n      </View>\n      {selectedEventType === paulyEventType.schoolDay ? null : (\n        <View>\n          <Text>End Date</Text>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flexDirection: 'row', margin: 10 }}>\n              <Pressable\n                onPress={() => {\n                  dispatch(addEventSlice.actions.setIsPickingEndDate(true));\n                }}\n              >\n                <Text>\n                  {new Date(endDate).toLocaleString('en-us', { month: 'long' })}{' '}\n                  {new Date(endDate).getDate()}{' '}\n                  {new Date(endDate).getFullYear()}{' '}\n                </Text>\n              </Pressable>\n              {!allDay ? (\n                <Pressable\n                  onPress={() => {\n                    setEndDatePickerVisable(true);\n                  }}\n                >\n                  <Text>\n                    {new Date(endDate).getHours() % 12 || 12}:\n                    {new Date(endDate).getMinutes().toString().length === 1\n                      ? `0${new Date(endDate).getMinutes()}`\n                      : new Date(endDate).getMinutes()}{' '}\n                    {new Date(endDate).getHours() >= 12 ? 'pm' : 'am'}\n                  </Text>\n                </Pressable>\n              ) : null}\n              <Pressable\n                onPress={() => {\n                  dispatch(addEventSlice.actions.setIsPickingEndDate(true));\n                }}\n              >\n                <CalendarIcon width={24} height={15} />\n              </Pressable>\n            </View>\n            {allDay ? null : (\n              <View style={{ margin: 5 }}>\n                <Pressable\n                  onPress={() => {\n                    setEndDatePickerVisable(true);\n                  }}\n                  style={{\n                    height: 26.4,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <TimeIcon width={15} height={15} />\n                </Pressable>\n                <TimePickerModal\n                  hours={new Date(endDate).getHours()}\n                  minutes={new Date(endDate).getMinutes()}\n                  visible={endDatePickerVisable}\n                  onDismiss={() => setEndDatePickerVisable(false)}\n                  onConfirm={e => {\n                    const newDate = new Date(endDate);\n                    newDate.setHours(e.hours);\n                    newDate.setMinutes(e.minutes);\n                    dispatch(\n                      addEventSlice.actions.setEndDate(newDate.toISOString()),\n                    );\n                    setEndDatePickerVisable(false);\n                  }}\n                />\n              </View>\n            )}\n          </View>\n        </View>\n      )}\n    </View>\n  );\n}\n\n{\n  /* <Text>Reocurring Event</Text>\n          <Switch\n            trackColor={{false: '#767577', true: '#81b0ff'}}\n            thumbColor={recurringEvent ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={(e) => {\n              dispatch(addEventSlice.actions.setRecurringEvent(e))\n            }}\n            value={recurringEvent}\n          />\n          { recurringEvent ?\n            <View style={{zIndex: 100}}>\n              <Dropdown onSetSelectedIndex={(item) => {\n                if (item >= 0 && item <= 3){\n                  dispatch(addEventSlice.actions.setSelectedRecurringType(item))\n                } \n              }} selectedIndex={selectedRecurringType} style={{height: height * 0.04}} expandedStyle={{height: height * 0.12, backgroundColor: Colors.white}}>\n                <View>\n                  <Text>Daily</Text>\n                </View>\n                <View>\n                  <Text>Weekly</Text>\n                </View>\n                <View>\n                  <Text>Monthly</Text>\n                </View>\n                <View>\n                  <Text>Yearly</Text>\n                </View>\n              </Dropdown>\n            </View>:null\n          } */\n}\n","import { View, Text, Animated, Pressable } from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addEventSlice } from '../Redux/reducers/addEventReducer';\nimport { RootState } from '../Redux/store';\nimport { Colors } from '../types';\n\ninterface PickerWrapperProps {\n  width: number;\n  height: number;\n}\n\nenum calendarMode {\n  month,\n  week,\n  day,\n}\n\nexport default function CalendarTypePicker({\n  width,\n  height,\n}: PickerWrapperProps) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [compoentWidth, setComponentWidth] = useState(width / 3);\n  const { selectedCalendarMode } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const dispatch = useDispatch();\n\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth + compoentWidth * 0.005,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedCalendarMode * compoentWidth + compoentWidth * 0.005);\n  }, []);\n\n  useEffect(() => {\n    setComponentWidth(width / 3);\n    pan.setValue(selectedCalendarMode * compoentWidth + compoentWidth * 0.005);\n  }, [width]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        height,\n        width,\n        backgroundColor: '#7d7d7d',\n        borderRadius: 20,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.month),\n          );\n          fadeIn(0);\n        }}\n        style={{\n          position: 'absolute',\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Month\n        </Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.week),\n          );\n          fadeIn(1);\n        }}\n        style={{\n          position: 'absolute',\n          transform: [{ translateX: 1 * compoentWidth }],\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Week\n        </Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.day),\n          );\n          fadeIn(2);\n        }}\n        style={{\n          position: 'absolute',\n          transform: [{ translateX: 2 * compoentWidth }],\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Day\n        </Text>\n      </Pressable>\n      <Animated.View style={{ transform: [{ translateX: pan }], zIndex: -1 }}>\n        <View\n          style={{\n            height: height * 0.95,\n            width: compoentWidth - compoentWidth * 0.01,\n            backgroundColor: Colors.white,\n            top: height * 0.025,\n            borderRadius: 20,\n            position: 'absolute',\n            zIndex: -1,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// Pauly\n// October 2 2023\n\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport { currentEventsSlice } from '../../Redux/reducers/currentEventReducer';\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport { getGraphEvents } from './calendarFunctionsGraph';\n\nexport default async function getEvents() {\n  // date the user picks\n  const selectedDate = new Date(store.getState().selectedDate);\n  // Start of month that the selected date is in\n  const startDate = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth(),\n    1,\n  );\n  // End of month that the selected date is in\n  const endDate = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth() + 1,\n    1,\n  );\n\n  // Personal Calendar\n  let outputEvents: eventType[] = [];\n  // This code is pulled from add events School Years Select\n  let nextUrl: string = `https://graph.microsoft.com/v1.0/me/calendarView?startDateTime=${startDate.toISOString()}&endDateTime=${endDate.toISOString()}`;\n  while (nextUrl !== '') {\n    const furtherResult = await getGraphEvents(\n      nextUrl,\n      'https://graph.microsoft.com/v1.0/me/events/',\n    );\n    if (\n      furtherResult.result === loadingStateEnum.success &&\n      furtherResult.events !== undefined\n    ) {\n      outputEvents = [...outputEvents, ...furtherResult.events];\n      if (furtherResult.nextLink === undefined) {\n        nextUrl = '';\n        break;\n      } else {\n        nextUrl = furtherResult.nextLink;\n      }\n    } else {\n      nextUrl = '';\n      break;\n    }\n  }\n\n  // OrgWideEvents\n  // This code is pulled from add events School Years Select\n  let url: string = `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$filter=start/dateTime%20ge%20'${startDate.toISOString()}'%20and%20end/dateTime%20le%20'${endDate.toISOString()}'`;\n  while (url !== '') {\n    const furtherResult = await getGraphEvents(\n      url,\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/`,\n    );\n    if (\n      furtherResult.result === loadingStateEnum.success &&\n      furtherResult.events !== undefined\n    ) {\n      outputEvents = [...outputEvents, ...furtherResult.events];\n      url = furtherResult.nextLink !== undefined ? furtherResult.nextLink : '';\n    } else {\n      url = '';\n    }\n  }\n\n  store.dispatch(currentEventsSlice.actions.setCurrentEvents(outputEvents));\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  ScrollView,\n  useWindowDimensions,\n} from 'react-native';\nimport React, { useCallback, useEffect } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findFirstDayinMonth } from '../../Functions/calendar/calendarFunctions';\nimport create_UUID from '../../Functions/Ultility/createUUID';\nimport DayView from './DayView';\nimport Week from './Week';\nimport AddEvent from './AddEvent';\nimport CalendarTypePicker from '../../UI/CalendarTypePicker';\nimport { AddIcon, ChevronLeft, ChevronRight } from '../../UI/Icons/Icons';\nimport { RootState } from '../../Redux/store';\nimport { selectedDateSlice } from '../../Redux/reducers/selectedDateReducer';\nimport { Colors, calendarMode } from '../../types';\nimport getEvents from '../../Functions/calendar/getEvents';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport BackButton from '../../UI/BackButton';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport { monthDataSlice } from '../../Redux/reducers/monthDataReducer';\nimport { getClasses } from '../../Functions/classesFunctions';\n\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default function Calendar() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { selectedCalendarMode, isShowingAddDate } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, []);\n\n  // This is the main (only) process that updates the events\n  // In the month view month data is calculate but the events come from this hook and the month view is a decendant of this view.\n  useEffect(() => {\n    getEvents();\n    getClasses();\n  }, [selectedDate]);\n\n  // Fonts\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View>\n      <View style={{ height: height * 0.1, backgroundColor: Colors.darkGray }}>\n        {currentBreakPoint >= 1 ? null : (\n          <BackButton to=\"/\" style={{ zIndex: 100 }} />\n        )}\n        <TopView width={width} height={height * 0.1} />\n      </View>\n      <View style={{ height: height * 0.9 }}>\n        {selectedCalendarMode === calendarMode.month ? (\n          <View\n            style={{\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              backgroundColor: Colors.white,\n            }}\n          >\n            <MonthViewMain width={width * 0.9} height={height * 0.9} />\n          </View>\n        ) : null}\n        {selectedCalendarMode === calendarMode.week ? (\n          <Week width={width * 1.0} height={height * 0.9} />\n        ) : null}\n        {selectedCalendarMode === calendarMode.day ? (\n          <View\n            style={{\n              width,\n              height: height * 0.9,\n              alignItems: 'center',\n              alignContent: 'center',\n              justifyContent: 'center',\n              backgroundColor: Colors.white,\n            }}\n          >\n            <DayView width={width * 0.9} height={height * 0.9} />\n          </View>\n        ) : null}\n      </View>\n      {isShowingAddDate ? (\n        <View\n          style={{\n            zIndex: 2,\n            position: 'absolute',\n            left: width * 0.05 + (width >= 576 ? width * 0.3 : 0) / 2,\n            top: height * 0.1,\n          }}\n        >\n          <AddEvent\n            width={width * 0.9 - (width >= 576 ? width * 0.3 : 0)}\n            height={height * 0.8}\n          />\n        </View>\n      ) : null}\n    </View>\n  );\n}\n\nfunction MonthViewMain({ width, height }: { width: number; height: number }) {\n  const monthData = useSelector((state: RootState) => state.monthData);\n  const selectedDate: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  return (\n    <>\n      {/* Chosing between large mode with each day having expanded calendars and reduced mode with list of events on each day. */}\n      {width <= 519 ? (\n        <ScrollView\n          style={{\n            backgroundColor: Colors.white,\n            height,\n            width,\n          }}\n        >\n          <MonthView width={width} height={height * 0.8} />\n          {new Date(selectedDate).getDate() <= monthData.length ? (\n            <>\n              {monthData[new Date(selectedDate).getDate() - 1].events.map(\n                event => (\n                  <View key={event.id}>\n                    <Text>{event.name}</Text>\n                  </View>\n                ),\n              )}\n            </>\n          ) : null}\n        </ScrollView>\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.white,\n            height,\n            width,\n          }}\n        >\n          <MonthView width={width} height={height} />\n        </View>\n      )}\n    </>\n  );\n}\n\nfunction MonthView({ width, height }: { width: number; height: number }) {\n  const daysInWeek: string[] = [\n    'Sun',\n    'Mon',\n    'Tue',\n    'Wen',\n    'Thu',\n    'Fri',\n    'Sat',\n  ];\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const selectedDate: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  const monthData = useSelector((state: RootState) => state.monthData);\n  const { fontScale } = useWindowDimensions();\n\n  const dispatch = useDispatch();\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  function getMonthData(selectedDate: Date) {\n    // Check if this month\n    const lastDay = new Date(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth() + 1,\n      0,\n    );\n    const firstDayWeek = findFirstDayinMonth(selectedDate);\n    const monthDataResult: monthDataType[] = [];\n    for (let index = 0; index < 42; index += 1) {\n      if (index >= firstDayWeek && index - firstDayWeek < lastDay.getDate()) {\n        // In the current month\n        const events: eventType[] = []; // The result events of that day\n\n        // Check is the current date\n        const checkStart: Date = new Date(\n          selectedDate.getFullYear(),\n          selectedDate.getMonth(),\n          index - firstDayWeek + 1,\n          0,\n          0,\n        );\n        const checkEnd: Date = new Date(\n          selectedDate.getFullYear(),\n          selectedDate.getMonth(),\n          index - firstDayWeek + 2,\n          0,\n          0,\n        );\n        for (\n          let indexEvent = 0;\n          indexEvent < currentEvents.length;\n          indexEvent += 1\n        ) {\n          const event: eventType = currentEvents[indexEvent]; // Event to be checked\n\n          const startTimeDate = new Date(event.startTime); // String to date\n          const endTimeDate = new Date(event.endTime); // String to date\n\n          // First check if starts before date and ends after or on day\n          if (startTimeDate <= checkStart && endTimeDate > checkStart) {\n            events.push(event);\n          } else if (startTimeDate > checkStart && startTimeDate < checkEnd) {\n            // Second check if starts on day\n            events.push(event);\n          }\n        }\n        monthDataResult.push({\n          showing: true,\n          dayData: index - firstDayWeek + 1,\n          id: create_UUID(),\n          events,\n        });\n      } else {\n        monthDataResult.push({\n          showing: false,\n          dayData: 0,\n          id: create_UUID(),\n          events: [],\n        });\n      }\n    }\n    dispatch(monthDataSlice.actions.setMonthData(monthDataResult));\n  }\n\n  useEffect(() => {\n    getMonthData(new Date(selectedDate));\n  }, [selectedDate, currentEvents]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View\n        style={{\n          height: height / 8,\n          width,\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}\n      >\n        <View style={{ flexDirection: 'row' }}>\n          <View\n            style={{\n              width: width * 0.6,\n              flexDirection: 'row',\n              marginRight: 'auto',\n            }}\n          >\n            <Text\n              numberOfLines={1}\n              adjustsFontSizeToFit\n              style={{ fontSize: 30 }}\n            >\n              {new Date(selectedDate).toLocaleString('en-us', {\n                month: 'long',\n              })}{' '}\n              {new Date(selectedDate).getFullYear()}\n            </Text>\n          </View>\n          <View>\n            {new Date(selectedDate).getFullYear() !==\n              new Date().getFullYear() ||\n            new Date(selectedDate).getMonth() != new Date().getMonth() ? (\n              <View style={{ width: width * 0.2 }}>\n                <Pressable\n                  onPress={() => {\n                    dispatch(\n                      selectedDateSlice.actions.setCurrentEventsLastCalled(\n                        new Date().toISOString(),\n                      ),\n                    );\n                  }}\n                >\n                  <Text style={{ color: 'black', fontSize: 12 / fontScale }}>\n                    Today\n                  </Text>\n                </Pressable>\n              </View>\n            ) : (\n              <View style={{ width: width * 0.2 }} />\n            )}\n          </View>\n          {/* This is left chevron */}\n          <Pressable\n            onPress={() => {\n              const d = new Date();\n              d.setFullYear(\n                new Date(selectedDate).getMonth() === 1\n                  ? new Date(selectedDate).getFullYear() - 1\n                  : new Date(selectedDate).getFullYear(),\n                new Date(selectedDate).getMonth() === 1\n                  ? 12\n                  : new Date(selectedDate).getMonth() - 1,\n                new Date(selectedDate).getDay(),\n              );\n              dispatch(\n                selectedDateSlice.actions.setCurrentEventsLastCalled(\n                  d.toISOString(),\n                ),\n              );\n            }}\n            style={{ marginTop: 'auto', marginBottom: 'auto' }}\n          >\n            <ChevronLeft width={14} height={14} />\n          </Pressable>\n          {/* This is right chevron */}\n          <Pressable\n            onPress={() => {\n              const d = new Date();\n              d.setFullYear(\n                new Date(selectedDate).getMonth() === 12\n                  ? new Date(selectedDate).getFullYear() + 1\n                  : new Date(selectedDate).getFullYear(),\n                new Date(selectedDate).getMonth() === 12\n                  ? 1\n                  : new Date(selectedDate).getMonth() + 1,\n                new Date(selectedDate).getDay(),\n              );\n              dispatch(\n                selectedDateSlice.actions.setCurrentEventsLastCalled(\n                  d.toISOString(),\n                ),\n              );\n            }}\n            style={{ marginTop: 'auto', marginBottom: 'auto' }}\n          >\n            <ChevronRight width={14} height={14} />\n          </Pressable>\n        </View>\n      </View>\n      <View style={{ width }}>\n        <View style={{ flexDirection: 'row' }}>\n          {daysInWeek.map(DOW => (\n            <View\n              key={`DOW_${DOW})}`}\n              style={{\n                width: width / 7,\n                height: height / 8,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Text style={{ color: 'black' }}>{DOW}</Text>\n            </View>\n          ))}\n        </View>\n        {Array.from(Array(7).keys()).map(valueRow => (\n          <View key={`Row_${valueRow}`} style={{ flexDirection: 'row' }}>\n            {monthData.map((value, id) => (\n              <>\n                {id >= valueRow * 7 && id <= valueRow * 7 + 6 ? (\n                  <>\n                    {value.showing ? (\n                      <Pressable\n                        onPress={() => {\n                          const d = new Date();\n                          d.setFullYear(\n                            new Date(selectedDate).getFullYear(),\n                            new Date(selectedDate).getMonth(),\n                            value.dayData,\n                          );\n                          dispatch(\n                            selectedDateSlice.actions.setCurrentEventsLastCalled(\n                              d.toISOString(),\n                            ),\n                          );\n                        }}\n                        key={`CalendarButton_${value.id}`}\n                      >\n                        <CalendarCardView\n                          width={width / 7}\n                          height={height / 8}\n                          value={value}\n                          calendarWidth={width}\n                        />\n                      </Pressable>\n                    ) : (\n                      <View key={`CalendarSpacer_${create_UUID()}`}>\n                        <CalendarCardView\n                          width={width / 7}\n                          height={height / 8}\n                          value={value}\n                          calendarWidth={width}\n                        />\n                      </View>\n                    )}\n                  </>\n                ) : null}\n              </>\n            ))}\n          </View>\n        ))}\n      </View>\n    </>\n  );\n}\n\nfunction CalendarCardView({\n  value,\n  width,\n  height,\n  calendarWidth,\n}: {\n  value: monthDataType;\n  width: number;\n  height: number;\n  calendarWidth: number;\n}) {\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const dispatch = useDispatch();\n  return (\n    <>\n      {calendarWidth <= 519 ? (\n        <>\n          {value.showing ? (\n            <View\n              style={{\n                width,\n                height,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                borderRadius: height / 2,\n                backgroundColor:\n                  value.dayData === new Date(selectedDate).getDate()\n                    ? Colors.lightGray\n                    : value.dayData === new Date().getDate() &&\n                      new Date(selectedDate).getMonth() ===\n                        new Date().getMonth() &&\n                      new Date(selectedDate).getFullYear() ===\n                        new Date().getFullYear()\n                    ? Colors.darkGray\n                    : Colors.white,\n              }}\n            >\n              <Text\n                style={{\n                  color:\n                    value.dayData === new Date().getDate() &&\n                    new Date(selectedDate).getMonth() ===\n                      new Date().getMonth() &&\n                    new Date(selectedDate).getFullYear() ===\n                      new Date().getFullYear() &&\n                    new Date(selectedDate).getDate() !== value.dayData\n                      ? Colors.white\n                      : Colors.black,\n                }}\n              >\n                {value.dayData}\n              </Text>\n              {value.events.length >= 1 ? (\n                <View\n                  style={{\n                    backgroundColor: 'black',\n                    borderRadius: 50,\n                    width: width < height ? width * 0.25 : height * 0.25,\n                    height: width < height ? width * 0.25 : height * 0.25,\n                  }}\n                />\n              ) : (\n                <View\n                  style={{\n                    backgroundColor: 'transparent',\n                    borderRadius: 50,\n                    width: width < height ? width * 0.25 : height * 0.25,\n                    height: width < height ? width * 0.25 : height * 0.25,\n                  }}\n                />\n              )}\n            </View>\n          ) : (\n            <View style={{ width, height }} />\n          )}\n        </>\n      ) : (\n        <>\n          {value.showing ? (\n            <View style={{ width, height }}>\n              <View\n                style={{\n                  borderRadius: 50,\n                  width: 16,\n                  height: 16,\n                  backgroundColor:\n                    new Date().getDate() === value.dayData\n                      ? 'red'\n                      : 'transparent',\n                  alignContent: 'center',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Text style={{ color: 'black' }}>{value.dayData}</Text>\n              </View>\n              <ScrollView style={{ width, height: height * 0.8 }}>\n                {value.events.map(event => (\n                  <Pressable\n                    key={`Calendar_Event_${event.id}_${create_UUID()}`}\n                    onPress={() => {\n                      dispatch(addEventSlice.actions.setIsEditing(true));\n                      dispatch(addEventSlice.actions.setIsEditing(true));\n                      dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n                      dispatch(addEventSlice.actions.setSelectedEvent(event));\n                    }}\n                  >\n                    <Text style={{ fontSize: 10 }}>{event.name}</Text>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n          ) : (\n            <View style={{ width, height }} />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction TopView({ width, height }: { width: number; height: number }) {\n  const dispatch = useDispatch();\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        height,\n        width,\n      }}\n    >\n      <View\n        style={{\n          width:\n            width * 0.45 -\n            (width * 0.1 < height ? width * 0.15 : height + width * 0.025),\n          height,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={1}\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: currentBreakPoint === 0 ? height * 0.35 : height * 0.7,\n            width: width * 0.4,\n            height: currentBreakPoint === 0 ? height * 0.5 : height * 0.9,\n            color: Colors.white,\n            textAlign: 'center',\n            verticalAlign: 'middle',\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          Calendar\n        </Text>\n      </View>\n      <View style={{ width: width * 0.55 }}>\n        <View style={{ marginLeft: width * 0.05 }}>\n          <CalendarTypePicker\n            width={width * 0.5}\n            height={width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6}\n          />\n        </View>\n      </View>\n      <View\n        style={{ width: width * 0.1 < height * 0.6 ? width * 0.15 : height }}\n      >\n        <Pressable\n          onPress={() => {\n            dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n            dispatch(addEventSlice.actions.setIsEditing(false));\n            dispatch(addEventSlice.actions.setSelectedEvent(undefined));\n          }}\n          style={{\n            height: width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6,\n            width: width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            borderRadius: 50,\n            backgroundColor: '#7d7d7d',\n            shadowColor: '#000',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 1,\n            marginLeft: width * 0.025,\n            marginRight: width * 0.025,\n          }}\n        >\n          <AddIcon\n            width={width * 0.1 < height * 0.6 ? width * 0.05 : height * 0.4}\n            height={width * 0.1 < height * 0.6 ? width * 0.05 : height * 0.4}\n          />\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// October 7 2023\n// Pauly get submissions for sports\n\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nexport default async function getSubmissions(): Promise<{\n  result: loadingStateEnum;\n  data?: mediaSubmissionType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsSubmissionsListId\n    }/items?expand=fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newMediaSubmissions: mediaSubmissionType[] = [];\n    if (data.value !== undefined) {\n      for (let index = 0; index < data.value.length; index += 1) {\n        newMediaSubmissions.push({\n          Title: data.value[index].fields.Title,\n          user: data.value[index].fields.User,\n          submissionId: data.value[index].fields.submissionId,\n          accepted: data.value[index].fields.accepted,\n          fileId: data.value[index].fields.fileId,\n          itemID: data.value[index].id,\n          selectedSportId: data.value[index].fields.selectedSportId,\n          selectedTeamId: data.value[index].fields.selectedTeamId,\n          reviewed: data.value[index].fields.reviewed,\n        });\n      }\n      return { result: loadingStateEnum.success, data: newMediaSubmissions };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  GovernmentHandleFileSubmissions.tsx\n*/\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useNavigate } from 'react-router-native';\nimport create_UUID from '../../../../Functions/Ultility/createUUID';\nimport getSubmissions from '../../../../Functions/sports/getSubmissions';\nimport { loadingStateEnum } from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentHandleFileSubmissions({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const [currentMediaSubmissions, setCurrentMediaSubmissions] = useState<\n    mediaSubmissionType[]\n  >([]);\n  const [loadingSubmissionsState, setLoadingSubmissionsState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getSubmissions();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentMediaSubmissions(result.data);\n    }\n    setLoadingSubmissionsState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {loadingSubmissionsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <ProgressView width={0} height={0} />\n          <Text>loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingSubmissionsState === loadingStateEnum.success ? (\n            <View style={{ width, height, overflow: 'hidden' }}>\n              <Text>HandleFileSubmissions</Text>\n              <FlatList\n                data={currentMediaSubmissions}\n                renderItem={item => (\n                  <Pressable\n                    key={`Submission_${\n                      item.item.submissionId\n                    }_${create_UUID()}`}\n                    onPress={() =>\n                      navigate(\n                        `/profile/government/sports/post/review/${item.item.submissionId}`,\n                      )\n                    }\n                    style={{ borderColor: 'black', borderWidth: 2 }}\n                  >\n                    <Text>{item.item.Title}</Text>\n                    <Text>Accepted: {item.item.accepted ? 'Yes' : 'No'}</Text>\n                    <Text>Reviewed: {item.item.reviewed ? 'Yes' : 'No'}</Text>\n                    <Text>{item.item.user}</Text>\n                  </Pressable>\n                )}\n              />\n            </View>\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport GovernmentHandleFileSubmissions from './GovernmentHandleFileSubmissions';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getSports } from '../../../../Functions/sports/sportsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentSports() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [currentSports, setCurrentSports] = useState<sportType[]>([]);\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentSports(result.data);\n    }\n    setDataResult(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Link to=\"/profile/government/\">\n          <Text>Back</Text>\n        </Link>\n        <Text>Government Sports</Text>\n      </View>\n      <View style={{ height: height * 0.4 }}>\n        {dataResult === loadingStateEnum.loading ? (\n          <View\n            style={{\n              height: height * 0.4,\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView\n              width={height * 0.4 < width ? height * 0.1 : width * 0.4}\n              height={height * 0.4 < width ? height * 0.1 : width * 0.4}\n            />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {dataResult === loadingStateEnum.success ? (\n              <View>\n                {currentSports.map(item => (\n                  <Pressable\n                    onPress={() => {\n                      navigate(\n                        `/profile/government/sports/team/${item.name}/${item.id}`,\n                      );\n                    }}\n                    key={item.id}\n                  >\n                    <View>\n                      <Text>{item.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <View>\n                <Text>Error</Text>\n              </View>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ height: height * 0.1, overflow: 'hidden' }}>\n        <Pressable\n          onPress={() => navigate('/profile/government/sports/create')}\n        >\n          <Text>Create Sport</Text>\n        </Pressable>\n        <Pressable\n          onPress={() => navigate('/profile/government/sports/post/create')}\n        >\n          <Text>Create Post</Text>\n        </Pressable>\n      </View>\n      <GovernmentHandleFileSubmissions width={width} height={height * 0.4} />\n    </View>\n  );\n}\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, Pressable } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../../../../Redux/store';\nimport create_UUID from '../../../../Functions/Ultility/createUUID';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport SVGXml from '../../../../UI/SVGXml/SVGXml';\n\nexport default function GovernmentCreateNewSport() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [sportName, setSportName] = useState<string>('');\n  const { siteId, sportsListId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const [svgData, setSvgData] = useState<string>(``);\n  const [createSportLoadingState, setCreateSportLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const navigate = useNavigate();\n\n  async function createSport() {\n    setCreateSportLoadingState(loadingStateEnum.loading);\n    const newSportID: string = create_UUID();\n    const data = {\n      fields: {\n        Title: '',\n        sportName,\n        sportId: newSportID,\n        sportSvg: svgData,\n      },\n    };\n    const listData = {\n      displayName: newSportID,\n      columns: [\n        {\n          name: 'teamName',\n          text: {},\n          required: true,\n        },\n        {\n          name: 'season',\n          number: {},\n          required: true,\n        },\n        {\n          name: 'teamId',\n          text: {},\n          required: true,\n          indexed: true,\n          enforceUniqueValues: true,\n        },\n        {\n          name: 'microsoftTeamId',\n          text: {},\n        },\n      ],\n      list: {\n        template: ' genericList',\n      },\n    };\n    const resultList = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n      'POST',\n      JSON.stringify(listData),\n    );\n    if (resultList.ok) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${sportsListId}/items`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateSportLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateSportLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setCreateSportLoadingState(loadingStateEnum.failed);\n    }\n  }\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/sports');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Create New Sport</Text>\n      <Text>Sport Name</Text>\n      <TextInput value={sportName} onChangeText={setSportName} />\n      <TextInput\n        value={svgData}\n        onChangeText={e => {\n          setSvgData(e);\n        }}\n        multiline\n        numberOfLines={25}\n      />\n      <SVGXml xml={svgData} width={100} height={100} />\n      <Pressable\n        onPress={() => {\n          if (sportName !== '' && svgData !== '') {\n            createSport();\n          }\n        }}\n      >\n        <Text>\n          {createSportLoadingState === loadingStateEnum.notStarted\n            ? 'Create'\n            : createSportLoadingState === loadingStateEnum.loading\n            ? 'Loading'\n            : createSportLoadingState === loadingStateEnum.success\n            ? 'Created Sport!'\n            : 'Failed to create sport.'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nexport default async function getSport(\n  id: string,\n): Promise<{ result: loadingStateEnum; data?: sportType; listId?: string }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsListId\n    }/items?$expand=fields&$filter=fields/sportId%20eq%20'${id}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length === 1) {\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.sportName,\n          id: data.value[0].fields.sportId,\n          svgData: data.value[0].fields.sportSvg,\n        },\n        listId: data.value[0].fields.id,\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable, Modal, TextInput } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { getSportsTeams } from '../../../../Functions/sports/sportsFunctions';\nimport { WarningIcon } from '../../../../UI/Icons/Icons';\nimport SVGXml from '../../../../UI/SVGXml/SVGXml';\nimport getSport from '../../../../Functions/sports/getSport';\nimport { getTextState } from '../../../../Functions/Ultility/createUUID';\n\nfunction SportsUpdateModel({\n  isPickingSvg,\n  setIsPickingSvg,\n  id,\n}: {\n  isPickingSvg: boolean;\n  setIsPickingSvg: (item: boolean) => void;\n  id: string;\n}) {\n  const [svgData, setSvgData] = useState<string>('');\n  const [listId, setListId] = useState<string>('');\n  const [getSportState, setGetSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [updateSportState, setUpdateSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  async function updateSport() {\n    setUpdateSportState(loadingStateEnum.loading);\n    const updateData = {\n      fields: {\n        sportSvg: svgData,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.sportsListId}/items/${listId}`,\n      'PATCH',\n      JSON.stringify(updateData),\n    );\n    if (result.ok) {\n      setUpdateSportState(loadingStateEnum.success);\n    } else {\n      const data = await result.json();\n      setUpdateSportState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadSport() {\n    const result = await getSport(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined &&\n      result.listId !== undefined\n    ) {\n      setListId(result.listId);\n      setSvgData(result.data.svgData);\n      setGetSportState(loadingStateEnum.success);\n    } else {\n      setGetSportState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadSport();\n  }, []);\n\n  return (\n    <Modal\n      visible={isPickingSvg}\n      animationType=\"slide\"\n      style={{ backgroundColor: Colors.white }}\n    >\n      {getSportState === loadingStateEnum.loading ? (\n        <View>\n          <Text>Loading</Text>\n          <Pressable onPress={() => setIsPickingSvg(false)}>\n            <Text>Dismiss</Text>\n          </Pressable>\n        </View>\n      ) : (\n        <>\n          {getSportState === loadingStateEnum.success ? (\n            <View>\n              <Text>Svg</Text>\n              <SVGXml xml={svgData} width={100} height={100} />\n              <TextInput\n                value={svgData}\n                onChangeText={e => {\n                  setSvgData(e);\n                }}\n                multiline\n                numberOfLines={25}\n              />\n              <Pressable onPress={() => updateSport()}>\n                <Text>\n                  {getTextState(updateSportState, { notStarted: 'Confirm' })}\n                </Text>\n              </Pressable>\n              <Pressable onPress={() => setIsPickingSvg(false)}>\n                <Text>Dismiss</Text>\n              </Pressable>\n            </View>\n          ) : (\n            <View>\n              <Text>Failed</Text>\n              <Pressable onPress={() => setIsPickingSvg(false)}>\n                <Text>Dismiss</Text>\n              </Pressable>\n            </View>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n}\n\nexport default function GovernmentSportsTeams() {\n  const { sport, id } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [currentTeams, setCurrentTeams] = useState<sportTeamType[]>([]);\n  const [deleteSportState, setDeleteSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const [isPickingSvg, setIsPickingSvg] = useState<boolean>(false);\n\n  async function deleteSport() {\n    setDeleteSportState(loadingStateEnum.loading);\n    const listResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${id}`,\n      'DELETE',\n    );\n    if (listResult.ok) {\n      const getSportResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.sportsListId\n        }/items?$expand=fields&$filter=fields/sportId%20eq%20'${id}'&$select=id`,\n      );\n      if (getSportResult.ok) {\n        const getSportData = await getSportResult.json();\n        if (getSportData.value.length === 1) {\n          const itemDeleteResult = await callMsGraph(\n            `https://graph.microsoft.com/v1.0/sites/${\n              store.getState().paulyList.siteId\n            }/lists/${store.getState().paulyList.sportsListId}/items/${\n              getSportData.value[0].id\n            }`,\n            'DELETE',\n          );\n          if (itemDeleteResult.ok) {\n            setDeleteSportState(loadingStateEnum.success);\n          } else {\n            setDeleteSportState(loadingStateEnum.failed);\n          }\n        } else {\n          setDeleteSportState(loadingStateEnum.failed);\n        }\n      } else {\n        setDeleteSportState(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteSportState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadData() {\n    if (id !== undefined) {\n      const result = await getSportsTeams(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setCurrentTeams(result.data);\n      }\n      setDataResult(result.result);\n    } else {\n      setDataResult(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government/sports')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>{sport} Teams</Text>\n      <Pressable\n        style={{ borderRadius: 15, backgroundColor: 'red' }}\n        onPress={() => {\n          if (\n            deleteSportState === loadingStateEnum.notStarted ||\n            deleteSportState === loadingStateEnum.failed\n          ) {\n            deleteSport();\n          }\n        }}\n      >\n        <View style={{ flexDirection: 'row', margin: 10 }}>\n          <WarningIcon width={14} height={14} />\n          <Text>\n            {deleteSportState === loadingStateEnum.loading\n              ? 'Loading'\n              : deleteSportState === loadingStateEnum.notStarted\n              ? 'Delete Sport'\n              : deleteSportState === loadingStateEnum.success\n              ? 'Sport Deleted'\n              : 'Failed To Delete Sport'}\n          </Text>\n        </View>\n      </Pressable>\n      <Pressable onPress={() => setIsPickingSvg(true)}>\n        <Text>Pick Svg</Text>\n      </Pressable>\n      {id !== undefined ? (\n        <SportsUpdateModel\n          isPickingSvg={isPickingSvg}\n          setIsPickingSvg={setIsPickingSvg}\n          id={id}\n        />\n      ) : null}\n      <View>\n        {dataResult === loadingStateEnum.loading ? (\n          <View>\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {dataResult === loadingStateEnum.success ? (\n              <FlatList\n                data={currentTeams}\n                renderItem={item => (\n                  <Pressable\n                    key={`TeamBlock_${item.item.teamId}`}\n                    onPress={() =>\n                      navigate(\n                        `/profile/government/sports/team/${sport}/${id}/${item.item.teamId}`,\n                      )\n                    }\n                  >\n                    <Text style={{ margin: 10 }}>{item.item.teamName}</Text>\n                  </Pressable>\n                )}\n              />\n            ) : (\n              <View>\n                <Text>Error</Text>\n              </View>\n            )}\n          </>\n        )}\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate(`/profile/government/sports/team/${sport}/${id}/create`)\n        }\n      >\n        <Text>Create New Team</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { loadingStateEnum } from '../types';\nimport callMsGraph from './Ultility/microsoftAssets';\n\nexport async function getUserMicrosoftFiles(\n  path: string,\n): Promise<{ result: loadingStateEnum; data?: microsoftFileType[] }> {\n  const result = await callMsGraph(path);\n  if (result.ok) {\n    const data = await result.json();\n    const newFiles: microsoftFileType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      newFiles.push({\n        name: data.value[index].name,\n        id: data.value[index].id,\n        lastModified: data.value[index].lastModifiedDateTime,\n        folder: data.value[index].folder !== undefined,\n        parentDriveId: data.value[index].parentReference.driveId,\n        parentPath: data.value[index].parentReference.path,\n        itemGraphPath: data.value[index].folder === undefined ? path : 'FOLDER',\n        callPath: `https://graph.microsoft.com/v1.0/me/drives/${data.value[index].parentReference.driveId}/items/${data.value[index].id}`,\n        type:\n          data.value[index].folder === undefined\n            ? data.value[index].file.mimeType\n            : 'folder',\n      });\n    }\n    return { result: loadingStateEnum.success, data: newFiles };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getUserTeams(): Promise<\n  | { result: loadingStateEnum.success; data: teamsGroupType[] }\n  | { result: loadingStateEnum.failed }\n> {\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/joinedTeams',\n  ); // TODO make sure this works on live tenancy\n  if (result.ok) {\n    const data = await result.json();\n    const newData: teamsGroupType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (data.value[index] !== undefined) {\n        newData.push({\n          teamName: data.value[index].displayName,\n          teamId: data.value[index].id,\n          teamDescription: data.value[index].description,\n        });\n      }\n    }\n    return { result: loadingStateEnum.success, data: newData };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Pressable,\n  View,\n  Text,\n  TextInput,\n  ScrollView,\n  FlatList,\n} from 'react-native';\nimport Picker from './Pickers/Picker';\nimport callMsGraph from '../Functions/Ultility/microsoftAssets';\nimport MimeTypeIcon from './Icons/MimeTypeIcon';\nimport create_UUID from '../Functions/Ultility/createUUID';\nimport {\n  getUserMicrosoftFiles,\n  getUserTeams,\n} from '../Functions/microsoftFilePickerFunctions';\nimport { Colors, loadingStateEnum } from '../types';\nimport ProgressView from './ProgressView';\n\nenum MicrosoftUploadModeType {\n  ShareLink,\n  Personal,\n  Site,\n}\n\nexport default function ({\n  onSetIsShowingUpload,\n  onSetIsShowingMicrosoftUpload,\n  onSelectedFile,\n  height,\n  width,\n}: {\n  height: number;\n  width: number;\n  onSetIsShowingUpload?: (item: boolean) => void;\n  onSetIsShowingMicrosoftUpload?: (item: boolean) => void;\n  onSelectedFile: (item: microsoftFileType) => void;\n}) {\n  const [usersTeams, setUsersTeams] = useState<teamsGroupType[]>([]);\n  const [selectedMicrosoftUploadMode, setSelectedMicrosoftUploadMode] =\n    useState<MicrosoftUploadModeType>(MicrosoftUploadModeType.Personal);\n  const [shareLinkString, setShareLinkString] = useState<string>('');\n\n  async function loadUserTeams() {\n    const result = await getUserTeams();\n    if (result.result === loadingStateEnum.success) {\n      setUsersTeams(result.data);\n    } else {\n    }\n  }\n\n  useEffect(() => {\n    loadUserTeams();\n  }, []);\n\n  async function getShareFile(shareLink: string) {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/shares/${shareLink}/driveItem?$select=content.downloadUrl`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      onSelectedFile({\n        name: '',\n        id: '',\n        lastModified: '',\n        folder: false,\n        parentDriveId: '',\n        parentPath: '',\n        itemGraphPath: '',\n        callPath: '',\n        type: '',\n      });\n    }\n  }\n\n  return (\n    <View style={{ height, width }}>\n      <View style={{ flexDirection: 'row' }}>\n        <Text style={{ textAlign: 'left' }}>Upload File From Microsoft</Text>\n        {onSetIsShowingMicrosoftUpload === undefined ||\n        onSetIsShowingUpload === undefined ? null : (\n          <Pressable\n            onPress={() => {\n              onSetIsShowingUpload(false);\n              onSetIsShowingMicrosoftUpload(false);\n            }}\n          >\n            <View>\n              <Text>Back</Text>\n            </View>\n          </Pressable>\n        )}\n      </View>\n      <View>\n        <View style={{ width }}>\n          <Picker\n            selectedIndex={\n              selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal\n                ? 0\n                : selectedMicrosoftUploadMode ===\n                  MicrosoftUploadModeType.ShareLink\n                ? 1\n                : 2\n            }\n            onSetSelectedIndex={(item: number) => {\n              item === 0\n                ? setSelectedMicrosoftUploadMode(\n                    MicrosoftUploadModeType.Personal,\n                  )\n                : item === 1\n                ? setSelectedMicrosoftUploadMode(\n                    MicrosoftUploadModeType.ShareLink,\n                  )\n                : setSelectedMicrosoftUploadMode(MicrosoftUploadModeType.Site);\n            }}\n            width={width}\n            height={30}\n          >\n            <Text style={{ margin: 0, padding: 0 }}>Personal</Text>\n            <Text style={{ margin: 0, padding: 0 }}>Link</Text>\n            <Text style={{ margin: 0, padding: 0 }}>Teams</Text>\n          </Picker>\n        </View>\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal ? (\n          <PersonalBlock\n            height={height}\n            width={width}\n            onSelectedFile={onSelectedFile}\n          />\n        ) : null}\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.ShareLink ? (\n          <View>\n            <View>\n              <Text>Share Link</Text>\n              <TextInput\n                placeholder=\"Share Link\"\n                value={shareLinkString}\n                onChangeText={e => {\n                  setShareLinkString(e);\n                }}\n              />\n            </View>\n            <Pressable\n              onPress={() => {\n                // TO DO make this work\n                let base64Value = btoa(shareLinkString);\n                base64Value.replace('/', '_');\n                base64Value.replace('+', '-');\n                base64Value.trimEnd();\n                base64Value = `u!${base64Value}`;\n                getShareFile(base64Value);\n              }}\n            >\n              <Text>Submit</Text>\n            </Pressable>\n          </View>\n        ) : null}\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.Site ? (\n          <TeamsBlock userTeams={usersTeams} height={height} />\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nenum teamFileMode {\n  team,\n  channel,\n  file,\n}\n\nfunction TeamsBlock({\n  userTeams,\n  height,\n}: {\n  userTeams: teamsGroupType[];\n  height: number;\n}) {\n  const [selectedTeamFileMode, setSelectedTeamFileMode] =\n    useState<teamFileMode>(teamFileMode.team);\n  return (\n    <FlatList\n      data={userTeams}\n      renderItem={team => (\n        <View>\n          {team.item.teamName !== 'Student Password Policy' &&\n          team.item.teamName !== \"St Paul's High School\" &&\n          team.item.teamName !== 'Adobe_Student' &&\n          team.item.teamName !== 'O365 Student A3 License Assignment' &&\n          team.item.teamName !== 'Student' ? (\n            <View>\n              <Text>{team.item.teamName}</Text>\n            </View>\n          ) : null}\n        </View>\n      )}\n      style={{ height: height * 0.8 }}\n    />\n  );\n}\n\nfunction PersonalBlock({\n  height,\n  width,\n  onSelectedFile,\n}: {\n  height: number;\n  width: number;\n  onSelectedFile: (item: microsoftFileType) => void;\n}) {\n  const [usersFiles, setUsersFies] = useState<microsoftFileType[]>([]);\n  const [microsoftPath, setMicrosoftPath] = useState<string>(\n    'https://graph.microsoft.com/v1.0/me/drive/root/children',\n  );\n  const [fileBackAvaliable, setFilesBackAvaliable] = useState<boolean>(false);\n  const [getFilesState, setGetFilesState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadGetUserMicrosoftFiles(path: string) {\n    setGetFilesState(loadingStateEnum.loading);\n    const result = await getUserMicrosoftFiles(path);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setUsersFies(result.data);\n      setGetFilesState(loadingStateEnum.success);\n    } else {\n      setGetFilesState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadGetUserMicrosoftFiles(microsoftPath);\n  }, []);\n\n  return (\n    <ScrollView style={{ height: height - 20 }}>\n      {fileBackAvaliable ? (\n        <Pressable\n          onPress={() => {\n            const microsftPathArray = microsoftPath.split('/');\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            let outputString = '';\n            for (let index = 0; index < microsftPathArray.length; index += 11) {\n              outputString += `${microsftPathArray[index]}/`;\n            }\n            outputString += '/items/root/children';\n            setMicrosoftPath(outputString);\n            loadGetUserMicrosoftFiles(outputString);\n            setFilesBackAvaliable(false);\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n      ) : null}\n      <>\n        {getFilesState === loadingStateEnum.loading ? (\n          <View\n            style={{\n              width,\n              height,\n              backgroundColor: Colors.white,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView width={14} height={14} />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {getFilesState === loadingStateEnum.success ? (\n              <FlatList\n                data={usersFiles}\n                renderItem={file => (\n                  <Pressable\n                    onPress={() => {\n                      if (file.item.folder) {\n                        setMicrosoftPath(\n                          `https://graph.microsoft.com/v1.0/drives/${file.item.parentDriveId}/items/${file.item.id}/children`,\n                        );\n                        loadGetUserMicrosoftFiles(\n                          `https://graph.microsoft.com/v1.0/drives/${file.item.parentDriveId}/items/${file.item.id}/children`,\n                        );\n                        setFilesBackAvaliable(true);\n                      } else {\n                        onSelectedFile(file.item);\n                      }\n                    }}\n                    key={`Users_${file.item.id}_${create_UUID()}`}\n                  >\n                    <View style={{ flexDirection: 'row', margin: 5 }}>\n                      <MimeTypeIcon\n                        width={20}\n                        height={20}\n                        mimeType={file.item.type}\n                      />\n                      <Text style={{ padding: 0, margin: 0 }}>\n                        {file.item.name}\n                      </Text>\n                    </View>\n                  </Pressable>\n                )}\n              />\n            ) : (\n              <Text>Failed to load</Text>\n            )}\n          </>\n        )}\n      </>\n    </ScrollView>\n  );\n}\n","import {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { convertYearToSchoolYear } from '../../../../Functions/calendar/calendarFunctions';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport create_UUID from '../../../../Functions/Ultility/createUUID';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n} from '../../../../types';\nimport store, { RootState } from '../../../../Redux/store';\nimport { getTeams } from '../../../../Functions/groupsData';\nimport ProgressView from '../../../../UI/ProgressView';\nimport MicrosoftFilePicker from '../../../../UI/MicrosoftFilePicker';\nimport { CloseIcon } from '../../../../UI/Icons/Icons';\nimport getFileWithShareID from '../../../../Functions/Ultility/getFileWithShareID';\n\nexport default function GovernmentCreateNewTeam() {\n  const { sport, id, teamId } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const navigate = useNavigate();\n\n  const [createTeamLoadingState, setCreateTeamLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [teamDataState, setTeamDataState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [isCreatingTeam, setIsCreatingTeam] = useState<boolean>(true);\n\n  // Team Data\n  const [teamName, setTeamName] = useState<string>('');\n  const [season, setSeason] = useState<number>(new Date().getFullYear());\n  const [teamListItemId, setTeamListItemId] = useState<string>('');\n\n  const [teamsState, setTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [teams, setTeams] = useState<groupType[]>([]);\n  const [teamsNextLink, setTeamsNextLink] = useState<undefined | string>(\n    undefined,\n  );\n  const [selectedMicrosoftTeam, setSelectedMicrosoftTeam] = useState<\n    groupType | undefined\n  >(undefined);\n  const [isSelectingFile, setIsSelectingFile] = useState<boolean>(false);\n  const [selectedFile, setSelectedFile] = useState<string>('');\n\n  async function loadMicrosftTeams() {\n    const result = await getTeams(\n      \"https://graph.microsoft.com/v1.0/groups?$filter=resourceProvisioningOptions/Any(x:x%20eq%20'Team')\",\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setTeams(result.data);\n      setTeamsNextLink(result.nextLink);\n    }\n    setTeamsState(result.result);\n  }\n\n  async function updateTeam() {\n    // This function will also create a team\n    setCreateTeamLoadingState(loadingStateEnum.loading);\n    if (!isCreatingTeam) {\n      let data: object = {\n        fields: {\n          teamName,\n          season,\n        },\n      };\n      if (selectedMicrosoftTeam !== undefined) {\n        data = {\n          fields: {\n            teamName,\n            season,\n            microsoftTeamId: selectedMicrosoftTeam.id,\n          },\n        };\n      }\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items/${teamListItemId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateTeamLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTeamLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      const newTeamId = create_UUID();\n      let data: object = {\n        fields: {\n          Title: '',\n          teamName,\n          season,\n          teamId: newTeamId,\n        },\n      };\n      if (selectedMicrosoftTeam !== undefined) {\n        data = {\n          fields: {\n            teamName,\n            season,\n            teamId: newTeamId,\n            microsoftTeamId: selectedMicrosoftTeam.id,\n          },\n        };\n      }\n      const listData = {\n        displayName: newTeamId,\n        columns: [\n          {\n            name: 'playerId', // This is any member of the rester\n            text: {},\n            required: true,\n            indexed: true,\n            enforceUniqueValues: true,\n          },\n          {\n            name: 'position',\n            text: {},\n          },\n          {\n            name: 'playerNumber',\n            text: {},\n          },\n          {\n            name: 'posts',\n            text: { allowMultipleLines: true },\n          },\n          {\n            name: 'imageShareId',\n            text: {},\n          },\n        ],\n        list: {\n          template: ' genericList',\n        },\n      };\n\n      const batchData = {\n        requests: [\n          {\n            id: '1',\n            method: 'POST',\n            url: `/sites/${siteId}/lists/${id}/items`,\n            body: data,\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n          {\n            id: '2',\n            method: 'POST',\n            dependsOn: ['1'],\n            url: `/sites/${siteId}/lists`,\n            body: listData,\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        ],\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/$batch`,\n        'POST',\n        JSON.stringify(batchData),\n      );\n      if (result.ok) {\n        setCreateTeamLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTeamLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function deleteTeam() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items/${teamListItemId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n    } else {\n    }\n  }\n\n  async function getMicrosoftTeam(\n    getMicrosoftTeamId: string,\n  ): Promise<{ result: loadingStateEnum; data?: groupType }> {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${getMicrosoftTeamId}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.displayName,\n          id: data.id,\n        },\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n\n  async function getTeamData() {\n    setTeamDataState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items?expand=fields($select=teamId,teamName,season,microsoftTeamId)&$filter=fields/teamId%20eq%20'${teamId}'&$select=id`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length === 1) {\n        setTeamName(data.value[0].fields.teamName);\n        setSeason(data.value[0].fields.season);\n        setTeamListItemId(data.value[0].id);\n        if (data.value[0].fields.microsoftTeamId !== undefined) {\n          const teamResult = await getMicrosoftTeam(\n            data.value[0].fields.microsoftTeamId,\n          );\n          if (\n            teamResult.result === loadingStateEnum.success &&\n            teamResult.data !== undefined\n          ) {\n            setSelectedMicrosoftTeam(teamResult.data);\n            setTeamDataState(loadingStateEnum.success);\n          } else {\n            setTeamDataState(loadingStateEnum.failed);\n          }\n        } else {\n          setTeamDataState(loadingStateEnum.success);\n        }\n      } else {\n        setTeamDataState(loadingStateEnum.failed);\n      }\n    } else {\n      setTeamDataState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadMicrosftTeams();\n  }, []);\n\n  useEffect(() => {\n    if (teamId === 'create') {\n      setIsCreatingTeam(true);\n    } else {\n      setIsCreatingTeam(false);\n      getTeamData();\n    }\n  }, [teamId]);\n\n  return (\n    <>\n      {isCreatingTeam || teamDataState === loadingStateEnum.success ? (\n        <ScrollView\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() =>\n              navigate(`/profile/government/sports/team/${sport}/${id}`)\n            }\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <View>\n            <Text>\n              {isCreatingTeam\n                ? `Create a new ${sport} team`\n                : `Edit the ${teamName} ${sport} Team`}\n            </Text>\n          </View>\n          <View\n            style={{\n              margin: 10,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: '#FFFFFF',\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 5 }}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text>Team Name:</Text>\n                <TextInput\n                  value={teamName}\n                  onChangeText={text => setTeamName(text)}\n                  placeholder=\"Team Name\"\n                />\n              </View>\n              <View>\n                <Text>Season</Text>\n                <Text>{convertYearToSchoolYear(season)}</Text>\n                <TextInput\n                  keyboardType=\"numeric\"\n                  onChangeText={text => {\n                    if (text === '') {\n                      setSeason(0);\n                    } else {\n                      setSeason(parseFloat(text));\n                    }\n                  }}\n                  value={season.toString()}\n                  maxLength={10} // setting limit of input\n                />\n              </View>\n            </View>\n          </View>\n          <View\n            style={{\n              height: height * 0.5,\n              margin: 10,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: '#FFFFFF',\n              borderRadius: 15,\n            }}\n          >\n            <View\n              style={{\n                margin: 10,\n                shadowColor: 'black',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.8,\n                shadowRadius: 10,\n                backgroundColor: '#FFFFFF',\n                borderRadius: 15,\n              }}\n            >\n              <View style={{ margin: 5 }}>\n                <Text>Selected Team</Text>\n                {selectedMicrosoftTeam !== undefined ? (\n                  <Pressable\n                    onPress={() => {\n                      setSelectedMicrosoftTeam(undefined);\n                    }}\n                  >\n                    <Text>{selectedMicrosoftTeam.name}</Text>\n                  </Pressable>\n                ) : (\n                  <Text>NO TEAM SELECTED</Text>\n                )}\n              </View>\n            </View>\n            <View style={{ marginLeft: 5, marginRight: 5 }}>\n              <FlatList\n                data={teams}\n                renderItem={team => (\n                  <>\n                    {team.item.id !== selectedMicrosoftTeam?.id ? (\n                      <Pressable\n                        key={`Team_${team.item.id}_${create_UUID()}`}\n                        onPress={() => {\n                          setSelectedMicrosoftTeam(team.item);\n                        }}\n                      >\n                        <Text>{team.item.name}</Text>\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              />\n            </View>\n          </View>\n          {selectedMicrosoftTeam === undefined ? (\n            <View>\n              <Text>Select a team in order to get a roster</Text>\n            </View>\n          ) : (\n            <>\n              {isCreatingTeam || teamId === undefined ? (\n                <View>\n                  <Text>\n                    Please Create the team and return later to finish the roster\n                  </Text>\n                </View>\n              ) : (\n                <View>\n                  <Text>Roster</Text>\n                  <RosterBlock\n                    microsoftTeamId={selectedMicrosoftTeam.id}\n                    width={100}\n                    height={100}\n                    teamId={teamId}\n                    selectedFile={selectedFile}\n                    setIsSelectingFile={setIsSelectingFile}\n                    setSelectedFile={setSelectedFile}\n                    isSelectingFile={isSelectingFile}\n                  />\n                </View>\n              )}\n            </>\n          )}\n\n          <Pressable\n            style={{\n              margin: 10,\n              backgroundColor: 'red',\n              borderRadius: 15,\n              zIndex: -100,\n            }}\n            onPress={() => deleteTeam()}\n          >\n            <Text style={{ margin: 10 }}>Delete Team</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              if (createTeamLoadingState === loadingStateEnum.notStarted) {\n                updateTeam();\n              } else if (createTeamLoadingState === loadingStateEnum.failed) {\n                setCreateTeamLoadingState(loadingStateEnum.notStarted);\n              }\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {createTeamLoadingState === loadingStateEnum.notStarted\n                ? isCreatingTeam\n                  ? 'CREATE TEAM'\n                  : 'UPDATE TEAM'\n                : createTeamLoadingState === loadingStateEnum.loading\n                ? 'LOADING'\n                : createTeamLoadingState === loadingStateEnum.success\n                ? 'SUCCESS'\n                : 'FAILED'}\n            </Text>\n          </Pressable>\n        </ScrollView>\n      ) : (\n        <>\n          {teamDataState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView width={width * 0.1} height={height * 0.1} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              <Pressable\n                onPress={() => {\n                  navigate(`/profile/government/sports/team/${sport}/${id}`);\n                }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n      {isSelectingFile ? (\n        <RosterSelectFile\n          setIsSelectingFile={setIsSelectingFile}\n          setSelectedFile={setSelectedFile}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction RosterBlock({\n  microsoftTeamId,\n  width,\n  height,\n  teamId,\n  setIsSelectingFile,\n  selectedFile,\n  isSelectingFile,\n  setSelectedFile,\n}: {\n  microsoftTeamId: string;\n  width: number;\n  height: number;\n  teamId: string;\n  selectedFile: string;\n  setSelectedFile: (item: string) => void;\n  isSelectingFile: boolean;\n  setIsSelectingFile: (item: boolean) => void;\n}) {\n  const [membersState, setMembersState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [members, setMembers] = useState<governmentRosterType[]>([]);\n\n  async function getMembers() {\n    const teamResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${teamId}/items?$expand=fields($select=playerId,position,playerNumber,posts,imageShareId)&$select=id`,\n    );\n    if (teamResult.ok) {\n      const teamResultData = await teamResult.json();\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/teams/${microsoftTeamId}/members`,\n      );\n      if (result.ok) {\n        const data = await result.json();\n        const users: microsoftUserType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          users.push({\n            id: data.value[index].userId,\n            displayName: data.value[index].displayName,\n          });\n        }\n        const rosters: governmentRosterType[] = [];\n        for (\n          let teamIndex = 0;\n          teamIndex < teamResultData.value.length;\n          teamIndex += 1\n        ) {\n          const userData = users.findIndex(e => {\n            return e.id === teamResultData.value[teamIndex].fields.playerId;\n          });\n          console.log(userData);\n          if (userData !== -1) {\n            rosters.push({\n              name: users[userData].displayName,\n              id: teamResultData.value[teamIndex].fields.playerId,\n              listItemId: teamResultData.value[teamIndex].id,\n              imageShareId: teamResultData.value[teamIndex].fields.imageShareId,\n              position: teamResultData.value[teamIndex].fields.position,\n              playerNumber: teamResultData.value[teamIndex].fields.playerNumber,\n              posts:\n                teamResultData.value[teamIndex].fields.posts !== undefined\n                  ? JSON.parse(\n                      teamResultData.value[teamIndex].fields.playerNumber,\n                    )\n                  : undefined,\n            });\n            const save = users[0];\n            users[0] = users[userData];\n            users[userData] = save;\n            users.shift();\n          }\n        }\n\n        for (let index = 0; index < users.length; index += 1) {\n          rosters.push({\n            name: users[index].displayName,\n            id: users[index].id,\n          });\n        }\n        setMembers(rosters);\n        setMembersState(loadingStateEnum.success);\n      } else {\n        setMembersState(loadingStateEnum.failed);\n      }\n    } else {\n      setMembersState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getMembers();\n  }, []);\n\n  return (\n    <>\n      {membersState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={width * 0.1} height={height * 0.1} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {membersState === loadingStateEnum.success ? (\n            <View>\n              <FlatList\n                data={members}\n                renderItem={member => (\n                  <RosterBlockItem\n                    members={members}\n                    setMembers={setMembers}\n                    member={member}\n                    teamId={teamId}\n                    selectedFile={selectedFile}\n                    setIsSelectingFile={setIsSelectingFile}\n                    setSelectedFile={setSelectedFile}\n                    isSelectingFile={isSelectingFile}\n                  />\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction RosterBlockItem({\n  member,\n  members,\n  setMembers,\n  teamId,\n  setIsSelectingFile,\n  isSelectingFile,\n  selectedFile,\n  setSelectedFile,\n}: {\n  members: governmentRosterType[];\n  setMembers: (item: governmentRosterType[]) => void;\n  member: ListRenderItemInfo<governmentRosterType>;\n  teamId: string;\n  selectedFile: string;\n  setSelectedFile: (item: string) => void;\n  isSelectingFile: boolean;\n  setIsSelectingFile: (item: boolean) => void;\n}) {\n  const [rosterState, setRosterState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [callingSelectedFile, setIsCallingSelectedFile] =\n    useState<boolean>(false);\n  const [imageUrl, setImageUrl] = useState<string>('');\n\n  async function createMemberItem(member: governmentRosterType) {\n    const index = members.findIndex(e => {\n      return e.id === member.id;\n    });\n    if (index === -1) {\n      setRosterState(loadingStateEnum.failed);\n      return;\n    }\n    setRosterState(loadingStateEnum.loading);\n    const data = {\n      fields: {\n        playerNumber: member.playerNumber,\n        position: member.position,\n        playerId: member.id,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${teamId}/items`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      const save = members;\n      save[index].listItemId = data.id;\n      setMembers(save);\n      setRosterState(loadingStateEnum.success);\n    } else {\n      setRosterState(loadingStateEnum.failed);\n    }\n  }\n\n  async function updatePlayerData(member: governmentRosterType) {\n    if (member.listItemId !== undefined) {\n      setRosterState(loadingStateEnum.loading);\n      const data = {\n        fields: {\n          playerNumber: member.playerNumber,\n          position: member.position,\n          imageShareId: member.imageShareId,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${teamId}/items/${member.listItemId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setRosterState(loadingStateEnum.success);\n      } else {\n        setRosterState(loadingStateEnum.failed);\n      }\n    } else {\n      createMemberItem(member);\n    }\n  }\n\n  useEffect(() => {\n    if (callingSelectedFile) {\n      const save = members;\n      save[member.index].imageShareId = selectedFile;\n      setSelectedFile('');\n      setMembers(save);\n      updatePlayerData(save[member.index]);\n    }\n    if (isSelectingFile === false) {\n      setIsCallingSelectedFile(false);\n    }\n  }, [isSelectingFile, selectedFile]);\n\n  async function loadImage() {\n    if (member.item.imageShareId !== undefined) {\n      const result = await getFileWithShareID(member.item.imageShareId);\n      console.log(result);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.url &&\n        result.contentType === dataContentTypeOptions.image\n      ) {\n        setImageUrl(result.url);\n      } else {\n        setImageUrl('');\n      }\n    } else {\n      setImageUrl('');\n    }\n  }\n\n  useEffect(() => {\n    loadImage();\n  }, [member.item.imageShareId]);\n\n  return (\n    <View\n      key={`Member_${member.item.id}_${create_UUID()}`}\n      style={{ margin: 5 }}\n    >\n      <View>\n        {rosterState === loadingStateEnum.loading ? (\n          <ProgressView width={14} height={14} />\n        ) : (\n          <>\n            {rosterState === loadingStateEnum.success ||\n            rosterState === loadingStateEnum.notStarted ? (\n              <View\n                style={{\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                  backgroundColor: 'green',\n                }}\n              />\n            ) : (\n              <View\n                style={{\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                  backgroundColor: 'red',\n                }}\n              />\n            )}\n          </>\n        )}\n      </View>\n      <Text>{member.item.name}</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Player Number:</Text>\n        <TextInput\n          value={member.item.playerNumber}\n          onChangeText={e => {\n            const save = members;\n            save[member.index].playerNumber = e;\n            setMembers([...save]);\n          }}\n          onFocus={() => {}}\n          onBlur={() => {\n            updatePlayerData(member.item);\n          }}\n        />\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Position:</Text>\n        <TextInput\n          value={member.item.position}\n          onChangeText={e => {\n            const save = members;\n            save[member.index].position = e;\n            setMembers([...save]);\n          }}\n          onBlur={() => {\n            updatePlayerData(member.item);\n          }}\n        />\n      </View>\n      {imageUrl !== '' ? (\n        <Image source={{ uri: imageUrl }} style={{ width: 100, height: 100 }} />\n      ) : null}\n      <Pressable\n        onPress={() => {\n          setIsSelectingFile(true);\n          setIsCallingSelectedFile(true);\n        }}\n      >\n        <Text>Choose Player Image</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nfunction RosterSelectFile({\n  setIsSelectingFile,\n  setSelectedFile,\n}: {\n  setIsSelectingFile: (item: boolean) => void;\n  setSelectedFile: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#ededed',\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setIsSelectingFile(false);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <View\n        style={{\n          height: height * 0.8,\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          backgroundColor: Colors.white,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          <MicrosoftFilePicker\n            height={height * 0.8 - 5}\n            width={width * 0.8 - 5}\n            onSelectedFile={async file => {\n              const data = {\n                type: 'view',\n                scope: 'organization',\n              };\n              const result = await callMsGraph(\n                `${file.callPath}/createLink`,\n                'POST',\n                JSON.stringify(data),\n              );\n              if (result.ok) {\n                const data = await result.json();\n                if (data.shareId !== undefined) {\n                  setSelectedFile(data.shareId);\n                  setIsSelectingFile(false);\n                } else {\n                  setIsSelectingFile(false);\n                }\n              } else {\n                setIsSelectingFile(false);\n              }\n            }}\n          />\n        </View>\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport MicrosoftFilePicker from '../../../../UI/MicrosoftFilePicker';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/Ultility/createUUID';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport {\n  getSports,\n  getSportsTeams,\n} from '../../../../Functions/sports/sportsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentSportsTeamAddPost() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [selectedShareID, setSelectedShareID] = useState<string>('');\n  const [postName, setPostName] = useState<string>('');\n  const [postSubmissionState, setPostSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const navigate = useNavigate();\n  const [selectedSportId, setSelectedSportId] = useState<string>('');\n  const [selectedTeamId, setSelectedTeamId] = useState<string>('');\n\n  async function getShareLink(item: microsoftFileType) {\n    const itemPathArray = item.itemGraphPath.split('/');\n    if (itemPathArray[itemPathArray.length - 1] === 'children') {\n      const data = {\n        type: 'view',\n        scope: 'organization',\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/drives/${item.parentDriveId}/items/${item.id}/createLink`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        const dataOut = await result.json();\n        setSelectedShareID(dataOut.shareId);\n      } else {\n      }\n    }\n  }\n  async function createFileSubmission(fileID: string) {\n    if (selectedShareID !== '' && selectedTeamId !== '') {\n      setPostSubmissionState(loadingStateEnum.loading);\n      const userIdResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/me',\n      );\n      if (userIdResult.ok) {\n        const userData = await userIdResult.json();\n        const submissionID = createUUID();\n        const data = {\n          fields: {\n            Title: postName,\n            fileId: fileID,\n            accepted: false,\n            user: userData.id,\n            timeCreated: new Date().toISOString(),\n            submissionId: submissionID,\n            reviewed: false,\n            selectedSportId,\n            selectedTeamId,\n          },\n        };\n        const result = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${\n            store.getState().paulyList.sportsSubmissionsListId\n          }/items`,\n          'POST',\n          JSON.stringify(data),\n        ); // TO DO fix id\n        if (result.ok) {\n          setPostSubmissionState(loadingStateEnum.success);\n        } else {\n          setPostSubmissionState(loadingStateEnum.failed);\n        }\n      } else {\n        setPostSubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/sports');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Add Sports Team Post</Text>\n      <TextInput\n        value={postName}\n        onChangeText={e => {\n          setPostName(e);\n        }}\n      />\n      <PickSportTeam\n        height={400}\n        width={width}\n        onSelect={e => {\n          setSelectedSportId(e.sportId);\n          setSelectedTeamId(e.teamId);\n        }}\n        onBack={() => {\n          setSelectedSportId('');\n          setSelectedTeamId('');\n        }}\n      />\n      <MicrosoftFilePicker\n        onSelectedFile={(item: microsoftFileType) => {\n          getShareLink(item);\n        }}\n        height={500}\n        width={width}\n      />\n      {selectedShareID !== '' ? (\n        <Pressable\n          onPress={() => {\n            if (\n              postSubmissionState === loadingStateEnum.notStarted &&\n              selectedShareID !== '' &&\n              selectedTeamId !== ''\n            ) {\n              createFileSubmission(selectedShareID);\n            }\n          }}\n        >\n          <Text>\n            {selectedShareID !== '' && selectedTeamId !== ''\n              ? 'Submit'\n              : 'Select Team'}\n          </Text>\n        </Pressable>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.failed ? (\n        <Text>Failure</Text>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.success ? (\n        <Text>Success</Text>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nfunction PickSportTeam({\n  width,\n  height,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  onSelect: (item: { sportId: string; teamId: string }) => void;\n  onBack: () => void;\n}) {\n  const [currentSports, setCurrentSports] = useState<sportType[]>([]);\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedSport, setSelectedSport] = useState<sportType | undefined>(\n    undefined,\n  );\n  const [sportsTeams, setSportTeams] = useState<sportTeamType[]>([]);\n  const [sportTeamState, setSportTeamState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadData() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentSports(result.data);\n    }\n    setDataResult(result.result);\n  }\n\n  async function loadTeams() {\n    if (selectedSport !== undefined) {\n      setSportTeamState(loadingStateEnum.loading);\n      const result = await getSportsTeams(selectedSport.id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setSportTeams(result.data);\n      }\n      setSportTeamState(result.result);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    loadTeams();\n  }, [selectedSport]);\n\n  return (\n    <View style={{ width, height }}>\n      <>\n        {sportsTeams === undefined ||\n        sportTeamState === loadingStateEnum.notStarted ? (\n          <>\n            {dataResult === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.1 : height * 0.1}\n                  height={width < height ? width * 0.1 : height * 0.1}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {dataResult === loadingStateEnum.success ? (\n                  <>\n                    {currentSports.map((item, id) => (\n                      <Pressable\n                        key={id}\n                        onPress={() => setSelectedSport(item)}\n                      >\n                        <View>\n                          <Text>{item.name}</Text>\n                        </View>\n                      </Pressable>\n                    ))}\n                  </>\n                ) : (\n                  <View>\n                    <Text>Error</Text>\n                  </View>\n                )}\n              </>\n            )}\n          </>\n        ) : (\n          <>\n            {sportTeamState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.1 : height * 0.1}\n                  height={width < height ? width * 0.1 : height * 0.1}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {sportTeamState === loadingStateEnum.success &&\n                selectedSport !== undefined ? (\n                  <View>\n                    <Pressable\n                      onPress={() => {\n                        setSelectedSport(undefined);\n                        setSportTeamState(loadingStateEnum.notStarted);\n                        setSportTeams([]);\n                        onBack();\n                      }}\n                    >\n                      <Text>Back</Text>\n                    </Pressable>\n                    {sportsTeams.map((item, id) => (\n                      <Pressable\n                        key={id}\n                        onPress={() =>\n                          onSelect({\n                            sportId: selectedSport.id,\n                            teamId: item.teamId,\n                          })\n                        }\n                      >\n                        <View>\n                          <Text>{item.teamName}</Text>\n                        </View>\n                      </Pressable>\n                    ))}\n                  </View>\n                ) : (\n                  <View>\n                    <Text>Error</Text>\n                  </View>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </>\n    </View>\n  );\n}\n","import { View, Text, Image, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ResizeMode, Video } from 'expo-av';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport getFileWithShareID from '../../../../Functions/Ultility/getFileWithShareID';\nimport store, { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n} from '../../../../types';\n// import Video from 'react-native-video';\n\nexport default function GovernmentReviewFileSubmission() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const { submissionID } = useParams();\n  const [dataURL, setDataURL] = useState<string>('');\n  const [dataContentType, setDataContentType] =\n    useState<dataContentTypeOptions>(dataContentTypeOptions.unknown);\n  const [currentSubmissionInfomration, setCurrentSubmissionInformation] =\n    useState<mediaSubmissionType | undefined>(undefined);\n  const navigate = useNavigate();\n\n  // Loading States\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [approveSubmissionState, setApproveSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [denySubmissionState, setDenySubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [deleteSubmissionState, setDeleteSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function deleteSubmission(itemID: string) {\n    setDeleteSubmissionState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.sportsSubmissionsListId\n      }/items/${itemID}`,\n      'DELETE',\n    ); // TO DO fix list ids\n    if (result.ok) {\n      // TO DO Check if submission has been approved before\n      // Remove from approved submissions\n      setDeleteSubmissionState(loadingStateEnum.success);\n    } else {\n      setDeleteSubmissionState(loadingStateEnum.failed);\n    }\n  }\n\n  async function getSubmissionInformation() {\n    if (submissionID !== undefined) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.sportsSubmissionsListId\n        }/items?expand=fields&filter=fields/submissionId%20eq%20'${submissionID}'`,\n      );\n      if (result.ok) {\n        const data = await result.json();\n        if (data.value !== undefined) {\n          if (data.value.length === 1) {\n            // All things are working\n            setCurrentSubmissionInformation({\n              Title: data.value[0].fields.Title,\n              user: data.value[0].fields.user,\n              submissionId: data.value[0].fields.submissionID,\n              accepted: data.value[0].fields.accepted,\n              fileId: data.value[0].fields.fileId,\n              itemID: data.value[0].id,\n              selectedSportId: data.value[0].fields.selectedSportId,\n              selectedTeamId: data.value[0].fields.selectedTeamId,\n              reviewed: data.value[0].fields.reviewed,\n            });\n            setLoadingState(loadingStateEnum.success);\n          } else {\n            setLoadingState(loadingStateEnum.failed);\n          }\n        } else {\n          setLoadingState(loadingStateEnum.failed);\n        }\n      } else {\n        setLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function approveSubmission() {\n    if (currentSubmissionInfomration) {\n      setApproveSubmissionState(loadingStateEnum.loading);\n      const data = {\n        requests: [\n          {\n            id: '1',\n            method: 'POST',\n            url: `/sites/${store.getState().paulyList.siteId}/lists/${\n              store.getState().paulyList.sportsApprovedSubmissionsListId\n            }/items`,\n            body: {\n              fields: {\n                Title: currentSubmissionInfomration.Title,\n                fileId: currentSubmissionInfomration.fileId,\n                caption: currentSubmissionInfomration.Title,\n                submissionId: currentSubmissionInfomration.submissionId,\n                selectedSportId: currentSubmissionInfomration.selectedSportId,\n                selectedTeamId: currentSubmissionInfomration.selectedTeamId,\n              },\n            },\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n          {\n            id: '2',\n            method: 'PATCH',\n            url: `/sites/${store.getState().paulyList.siteId}/lists/${\n              store.getState().paulyList.sportsSubmissionsListId\n            }/items/${currentSubmissionInfomration.itemID}`,\n            body: {\n              fields: { accepted: true, reviewed: true },\n            },\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        ],\n      };\n      const result = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(data),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (result.ok) {\n        const newInformation = currentSubmissionInfomration;\n        newInformation.accepted = true;\n        newInformation.reviewed = true;\n        setCurrentSubmissionInformation(currentSubmissionInfomration);\n        setApproveSubmissionState(loadingStateEnum.success);\n      } else {\n        setApproveSubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function denySubmission() {\n    if (currentSubmissionInfomration) {\n      const data = {\n        fields: {\n          accepted: false,\n          reviewed: true,\n        },\n      };\n      setDenySubmissionState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `/sites/${store.getState().paulyList.siteId}/lists/${\n          store.getState().paulyList.sportsSubmissionsListId\n        }/items/${currentSubmissionInfomration.itemID}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setDenySubmissionState(loadingStateEnum.success);\n      } else {\n        setDenySubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function loadFile() {\n    if (currentSubmissionInfomration !== undefined) {\n      const result = await getFileWithShareID(\n        currentSubmissionInfomration.fileId,\n      );\n      if (\n        result.result === loadingStateEnum.success &&\n        result.url !== undefined &&\n        result.contentType !== undefined\n      ) {\n        setDataURL(result.url);\n        setDataContentType(result.contentType);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (submissionID !== undefined) {\n      getSubmissionInformation();\n    }\n  }, [submissionID]);\n\n  useEffect(() => {\n    loadFile();\n  }, [currentSubmissionInfomration]);\n\n  return (\n    <>\n      {loadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingState === loadingStateEnum.success &&\n          currentSubmissionInfomration !== undefined ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n              }}\n            >\n              <Pressable onPress={() => navigate('/profile/government/sports')}>\n                <Text>Back</Text>\n              </Pressable>\n              <Text>GovernmentReviewFileSubmission</Text>\n              {dataURL !== '' && (\n                <View>\n                  {dataContentType === dataContentTypeOptions.image ? (\n                    <Image\n                      height={100}\n                      style={{ height: 100 }}\n                      source={{ uri: dataURL }}\n                    />\n                  ) : null}\n                  {dataContentType === dataContentTypeOptions.video ? (\n                    <Video\n                      useNativeControls\n                      source={{ uri: dataURL }}\n                      resizeMode={ResizeMode.COVER}\n                      style={{\n                        width: width * 0.9,\n                        height: height * 0.4,\n                        alignSelf: 'stretch',\n                        marginLeft: width * 0.05,\n                        marginRight: width * 0.05,\n                      }}\n                      videoStyle={{ width: width * 0.9, height: height * 0.4 }}\n                    />\n                  ) : null}\n                </View>\n              )}\n              <Pressable\n                onPress={() => {\n                  if (currentSubmissionInfomration) {\n                    deleteSubmission(currentSubmissionInfomration.itemID);\n                  }\n                }}\n              >\n                <Text>Remove File Submission</Text>\n              </Pressable>\n              <Pressable\n                onPress={() => {\n                  approveSubmission();\n                }}\n              >\n                <Text>\n                  {approveSubmissionState === loadingStateEnum.loading\n                    ? 'Loading'\n                    : approveSubmissionState === loadingStateEnum.success ||\n                      approveSubmissionState === loadingStateEnum.notStarted\n                    ? currentSubmissionInfomration.reviewed\n                      ? currentSubmissionInfomration.accepted\n                        ? 'Submission Approved'\n                        : 'Approve'\n                      : 'Approve'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n              <Pressable onPress={() => denySubmission()}>\n                <Text>\n                  {denySubmissionState === loadingStateEnum.loading\n                    ? 'Loading'\n                    : deleteSubmissionState === loadingStateEnum.success ||\n                      deleteSubmissionState === loadingStateEnum.notStarted\n                    ? currentSubmissionInfomration.reviewed\n                      ? !currentSubmissionInfomration.accepted\n                        ? 'Submission Denied'\n                        : 'Deny'\n                      : 'Deny'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n            </View>\n          ) : (\n            <View style={{ width, height }}>\n              <Pressable onPress={() => navigate('/profile/government/sports')}>\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../Redux/store';\nimport { Colors } from '../../../../types';\n\nexport default function GovernmentCalendar() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  return (\n    <View\n      style={{\n        width,\n        height,\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable onPress={() => navigate('/profile/government/')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Government Calendar</Text>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/schedule')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Schedule</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/timetable')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Timetables</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/dresscode')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Dress Code</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { he } from 'react-native-paper-dates';\nimport callMsGraph from '../../../../../Functions/Ultility/microsoftAssets';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport { getSchedules } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\nexport default function GovernmentSchedule() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [loadedSchedules, setLoadedSchedules] = useState<scheduleType[]>([]);\n  const navigate = useNavigate();\n\n  async function loadSchedules() {\n    const result = await getSchedules();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setLoadedSchedules(result.data);\n    }\n    setLoadingState(result.result);\n  }\n\n  useEffect(() => {\n    loadSchedules();\n  }, []);\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government/calendar')}>\n          <Text>Back</Text>\n        </Pressable>\n        <View\n          style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Schedules</Text>\n        </View>\n      </View>\n      {loadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height: height * 0.8,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={15} height={15} />\n          <Text>Loading</Text>\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.success ? (\n        <View style={{ height: height * 0.8 }}>\n          {loadedSchedules.length >= 1 ? (\n            <FlatList\n              data={loadedSchedules}\n              renderItem={schedule => (\n                <Pressable\n                  style={{\n                    backgroundColor: '#FFFFFF',\n                    shadowColor: 'black',\n                    shadowOffset: { width: 1, height: 1 },\n                    shadowOpacity: 1,\n                    shadowRadius: 5,\n                    margin: 10,\n                    marginBottom: 0,\n                    borderRadius: 15,\n                  }}\n                  onPress={() =>\n                    navigate(\n                      `/profile/government/calendar/schedule/${schedule.item.id}`,\n                    )\n                  }\n                  key={schedule.item.id}\n                >\n                  <Text style={{ margin: 10 }}>{schedule.item.properName}</Text>\n                </Pressable>\n              )}\n            />\n          ) : (\n            <Text>No Schedule</Text>\n          )}\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.failed ? <Text>Failure</Text> : null}\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/schedule/create')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n          marginLeft: 5,\n          marginRight: 5,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Create New</Text>\n      </Pressable>\n    </ScrollView>\n  );\n}\n","// Andrew Mainella\n// October 14 2023\n// Pauly\n// GovernmentTimetable.tsx\n//\n// An timetable selector that direcets to creating a new timetable or editing one.\n//\n\nimport { View, Text, Pressable } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport SelectTimetable from '../../../../Calendar/SelectTimetable';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors } from '../../../../../types';\n\nexport default function GovernmentTimetable() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government/calendar/')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Timetables</Text>\n      </View>\n      <View style={{ height: height * 0.85 }}>\n        <SelectTimetable governmentMode />\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate('/profile/government/calendar/timetable/create')\n        }\n      >\n        <Text>Create New</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, TextInput, Button, Pressable, Modal } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { TimePickerModal, he } from 'react-native-paper-dates';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Animated, {\n  interpolateColor,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\nimport ColorPicker, {\n  Preview,\n  Panel1,\n  HueSlider,\n  OpacitySlider,\n  Swatches,\n  RenderThumbProps,\n  InputWidget,\n} from 'reanimated-color-picker';\nimport callMsGraph from '../../../../../Functions/Ultility/microsoftAssets';\nimport create_UUID from '../../../../../Functions/Ultility/createUUID';\nimport store, { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport { CloseIcon, WarningIcon } from '../../../../../UI/Icons/Icons';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport { getSchedule } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\nfunction isValidHexaCode(input: string) {\n  // Define the regular expression pattern for a valid hexadecimal color code\n  // It matches either a 6-character or 3-character code, preceded by a #\n  const hexaPattern = /^#(?:[0-9a-fA-F]{3,4}){1,2}$/;\n\n  // Test the input against the pattern using the test() method\n  return hexaPattern.test(input);\n}\n\n// NOTE: period length cannot be longer than 20\nexport default function GovernmentSchedule() {\n  const { id } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [scheduleListId, setScheduleListId] = useState<string | undefined>(\n    undefined,\n  );\n\n  const [scheduleProperName, setScheduleProperName] = useState<string>('');\n  const [scheduleDescriptiveName, setScheduleDescriptiveName] =\n    useState<string>('');\n  const [newPeriods, setNewPeriods] = useState<periodType[]>([]);\n  const [color, setColor] = useState<string>('#ffffff');\n\n  const [isPickingColor, setIsPickingColor] = useState<boolean>(false);\n  const [isCreatingSchedule, setIsCreatingSchedule] = useState<boolean>(false);\n\n  const [createScheduleLoadingState, setCreateScheduleLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [loadScheduleState, setLoadScheduleState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [deleteState, setDeleteState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const navigate = useNavigate();\n  async function submitSchedule() {\n    setCreateScheduleLoadingState(loadingStateEnum.loading);\n    if (isCreatingSchedule) {\n      const data = {\n        fields: {\n          Title: scheduleProperName,\n          scheduleId: create_UUID(),\n          scheduleProperName,\n          scheduleDescriptiveName,\n          scheduleColor: color,\n          scheduleData: JSON.stringify(newPeriods),\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.scheduleListId}/items`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateScheduleLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateScheduleLoadingState(loadingStateEnum.failed);\n      }\n    } else if (scheduleListId !== undefined) {\n      const data = {\n        fields: {\n          Title: scheduleProperName,\n          scheduleProperName,\n          scheduleDescriptiveName,\n          scheduleColor: color,\n          scheduleData: JSON.stringify(newPeriods),\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.scheduleListId\n        }/items/${scheduleListId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateScheduleLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateScheduleLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setCreateScheduleLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  async function deleteFunction() {\n    if (scheduleListId !== undefined) {\n      setDeleteState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.scheduleListId\n        }/items/${scheduleListId}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        setDeleteState(loadingStateEnum.success);\n      } else {\n        setDeleteState(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadFunction() {\n    if (id !== undefined) {\n      const result = await getSchedule(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.schedule !== undefined\n      ) {\n        setScheduleProperName(result.schedule.properName);\n        setScheduleDescriptiveName(result.schedule.descriptiveName);\n        setColor(result.schedule.color);\n        setNewPeriods(result.schedule.periods);\n        setScheduleListId(result.listItemId);\n      }\n      setLoadScheduleState(result.result);\n    } else {\n      setLoadScheduleState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (id === 'create') {\n      setIsCreatingSchedule(true);\n    } else {\n      loadFunction();\n    }\n  }, []);\n\n  return (\n    <>\n      {(isCreatingSchedule || loadScheduleState === loadingStateEnum.success) &&\n      deleteState !== loadingStateEnum.success ? (\n        <ScrollView\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/profile/government/calendar/schedule');\n            }}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <View\n            style={{\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Text>{isCreatingSchedule ? 'Create' : 'Edit'} Schedule</Text>\n          </View>\n          <View style={{ height: height * 0.2 }}>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Proper Name:</Text>\n              <TextInput\n                style={{ width }}\n                value={scheduleProperName}\n                onChangeText={setScheduleProperName}\n                placeholder=\"Proper Name ex. Schedule One\"\n              />\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Descriptive Name:</Text>\n              <TextInput\n                style={{ width }}\n                value={scheduleDescriptiveName}\n                onChangeText={setScheduleDescriptiveName}\n                placeholder=\"Descriptive Name ex. Regular Schedule\"\n              />\n            </View>\n            <View\n              style={{ margin: 5, borderRadius: 5, backgroundColor: '#FF6700' }}\n            >\n              <View style={{ margin: 10, flexDirection: 'row' }}>\n                <WarningIcon width={14} height={14} />\n                <Text>\n                  Keep descriptive name short as it is used in the calendar\n                  widget\n                </Text>\n              </View>\n            </View>\n          </View>\n          <Text>New Periods</Text>\n          <ScrollView style={{ height: height * 0.5 }}>\n            {newPeriods.map(period => (\n              <PeriodBlock\n                period={period}\n                periods={newPeriods}\n                onSetNewPeriods={out => {\n                  setNewPeriods([...out]);\n                }}\n              />\n            ))}\n          </ScrollView>\n          {newPeriods.length < 20 ? (\n            <Pressable\n              onPress={() => {\n                setNewPeriods([\n                  ...newPeriods,\n                  {\n                    startHour: new Date().getHours(),\n                    startMinute: new Date().getMinutes(),\n                    endHour: new Date().getHours(),\n                    endMinute: new Date().getMinutes(),\n                    id: create_UUID(),\n                  },\n                ]);\n              }}\n            >\n              <Text>Add Period</Text>\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => setIsPickingColor(true)}\n            style={{\n              margin: 10,\n              backgroundColor: '#FFFFFF',\n              shadowColor: 'black',\n              shadowOffset: { width: 1, height: 1 },\n              shadowOpacity: 1,\n              shadowRadius: 5,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              <Text>Color</Text>\n              <View style={{ flexDirection: 'row', marginTop: 10 }}>\n                <View\n                  style={{\n                    width: 32.4,\n                    height: 32.4,\n                    backgroundColor: color,\n                    borderRadius: 7,\n                    borderWidth: 2,\n                    borderColor: Colors.black,\n                  }}\n                />\n                <Pressable style={{ marginLeft: 5 }}>\n                  <ColorPicker\n                    style={{ width: width - 77.4, height: 16.5 }}\n                    value={color}\n                    onComplete={e => setColor(e.hex)}\n                  >\n                    <InputWidget\n                      disableAlphaChannel\n                      defaultFormat=\"HEX\"\n                      formats={['HEX']}\n                      inputTitleStyle={{ display: 'none' }}\n                    />\n                  </ColorPicker>\n                </Pressable>\n                <Modal visible={isPickingColor} animationType=\"slide\">\n                  <View\n                    style={{\n                      alignContent: 'center',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      width,\n                      height,\n                    }}\n                  >\n                    <Pressable\n                      onPress={() => setIsPickingColor(false)}\n                      style={{\n                        position: 'absolute',\n                        top: height * 0.1,\n                        left: width * 0.1,\n                      }}\n                    >\n                      <CloseIcon width={14} height={14} />\n                    </Pressable>\n                    <ColorPicker\n                      style={{ width: width * 0.7 }}\n                      value={color}\n                      onComplete={e => setColor(e.hex)}\n                    >\n                      <View style={{ flexDirection: 'row' }}>\n                        <Preview\n                          hideText\n                          hideInitialColor\n                          style={{\n                            width: width * 0.1,\n                            height: height * 0.5,\n                            borderTopRightRadius: 0,\n                            borderBottomRightRadius: 0,\n                          }}\n                        />\n                        <View\n                          style={{\n                            borderTopRightRadius: 5,\n                            borderBottomRightRadius: 5,\n                            overflow: 'hidden',\n                          }}\n                        >\n                          <Panel1\n                            style={{\n                              width: width * 0.6,\n                              height: height * 0.5,\n                              borderRadius: 0,\n                            }}\n                            renderThumb={e => (\n                              <CustomColorThumb e={e} diameter={15} />\n                            )}\n                          />\n                        </View>\n                      </View>\n                      <HueSlider\n                        renderThumb={e => <CustomColorThumb e={e} />}\n                        style={{ height: 30, marginTop: 10 }}\n                      />\n                    </ColorPicker>\n                    <Pressable\n                      style={{\n                        marginTop: 10,\n                        backgroundColor: Colors.darkGray,\n                        borderRadius: 15,\n                        width: width * 0.5,\n                        alignContent: 'center',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                      }}\n                      onPress={() => setIsPickingColor(false)}\n                    >\n                      <Text style={{ margin: 10, color: Colors.white }}>\n                        OK\n                      </Text>\n                    </Pressable>\n                  </View>\n                </Modal>\n              </View>\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              if (\n                createScheduleLoadingState === loadingStateEnum.notStarted &&\n                isValidHexaCode(color)\n              ) {\n                submitSchedule();\n              }\n            }}\n            style={{\n              margin: 10,\n              backgroundColor: Colors.white,\n              shadowColor: 'black',\n              shadowOffset: { width: 1, height: 1 },\n              shadowOpacity: 1,\n              shadowRadius: 5,\n              borderRadius: 15,\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {!isValidHexaCode(color)\n                ? 'Cannot Start'\n                : createScheduleLoadingState === loadingStateEnum.notStarted\n                ? `${isCreatingSchedule ? 'Create' : 'Save'} Schedule`\n                : createScheduleLoadingState === loadingStateEnum.loading\n                ? 'Loading'\n                : createScheduleLoadingState === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {!isCreatingSchedule ? (\n            <Pressable\n              onPress={() => deleteFunction()}\n              style={{\n                margin: 10,\n                backgroundColor: Colors.danger,\n                borderRadius: 15,\n              }}\n            >\n              <Text style={{ margin: 10 }}>\n                {deleteState == loadingStateEnum.notStarted\n                  ? 'DELETE'\n                  : deleteState === loadingStateEnum.loading\n                  ? 'LOADING'\n                  : 'FAILED'}\n              </Text>\n            </Pressable>\n          ) : null}\n        </ScrollView>\n      ) : (\n        <>\n          {loadScheduleState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Pressable\n                onPress={() => {\n                  navigate('/profile/government/calendar/schedule');\n                }}\n                style={{ position: 'absolute', top: 0, left: 0 }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <ProgressView width={width * 0.1} height={height * 0.1} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {deleteState === loadingStateEnum.success ? (\n                <View\n                  style={{\n                    width,\n                    height,\n                    backgroundColor: Colors.white,\n                  }}\n                >\n                  <Pressable\n                    onPress={() => {\n                      navigate('/profile/government/calendar/schedule');\n                    }}\n                  >\n                    <Text>Back</Text>\n                  </Pressable>\n                  <Text>Schedule Deleted</Text>\n                </View>\n              ) : (\n                <View\n                  style={{\n                    width,\n                    height,\n                    backgroundColor: Colors.white,\n                  }}\n                >\n                  <Pressable\n                    onPress={() => {\n                      navigate('/profile/government/calendar/schedule');\n                    }}\n                  >\n                    <Text>Back</Text>\n                  </Pressable>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PeriodBlock({\n  period,\n  periods,\n  onSetNewPeriods,\n}: {\n  period: periodType;\n  periods: periodType[];\n  onSetNewPeriods: (item: periodType[]) => void;\n}) {\n  const [isSelectingStartTime, setIsSelectingStartTime] =\n    useState<boolean>(false);\n  const [isSelectingEndTime, setIsSelectingEndTime] = useState<boolean>(false);\n\n  function deleteItem(period: periodType) {\n    const newNewPeriodsArray: periodType[] = periods;\n    if (newNewPeriodsArray.length === 1) {\n      newNewPeriodsArray.pop();\n      onSetNewPeriods(newNewPeriodsArray);\n    } else {\n      const indexToRemove = newNewPeriodsArray.findIndex(e => {\n        return e.id === period.id;\n      });\n      if (indexToRemove !== -1) {\n        newNewPeriodsArray.splice(indexToRemove, indexToRemove);\n      } else {\n        // TO DO something went wrong this should not be possible though\n      }\n      onSetNewPeriods(newNewPeriodsArray);\n    }\n  }\n  return (\n    <View\n      key={`Period_${period.id}_${create_UUID()}`}\n      style={{\n        margin: 10,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n        marginLeft: 5,\n        marginRight: 5,\n      }}\n    >\n      <View style={{ margin: 10 }}>\n        <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n          <Text>\n            {period.startHour}:{period.startMinute}\n          </Text>\n          <Pressable onPress={() => setIsSelectingStartTime(true)}>\n            <Text>Pick start time</Text>\n          </Pressable>\n        </View>\n        <TimePickerModal\n          hours={period.startHour}\n          minutes={period.startMinute}\n          visible={isSelectingStartTime}\n          onDismiss={() => setIsSelectingStartTime(false)}\n          onConfirm={e => {\n            const newPeriods: periodType[] = periods;\n            const update = newPeriods.findIndex(e => {\n              return e.id === period.id;\n            });\n            if (update !== -1) {\n              newPeriods[update].startHour = e.hours;\n              newPeriods[update].startMinute = e.minutes;\n              onSetNewPeriods([...newPeriods]);\n              setIsSelectingStartTime(false);\n              console.log('all good');\n            } else {\n              // TO DO failed\n              console.log('failed');\n              setIsSelectingStartTime(false);\n            }\n          }}\n        />\n        <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n          <Text>\n            {period.endHour}:{period.endMinute}\n          </Text>\n          <Pressable onPress={() => setIsSelectingEndTime(true)}>\n            <Text>Pick end time</Text>\n          </Pressable>\n        </View>\n        <TimePickerModal\n          hours={period.endHour}\n          minutes={period.endMinute}\n          visible={isSelectingEndTime}\n          onDismiss={() => setIsSelectingEndTime(false)}\n          onConfirm={e => {\n            const newPeriods: periodType[] = periods;\n            const update = newPeriods.findIndex(e => {\n              return e.id === period.id;\n            });\n            if (update !== -1) {\n              newPeriods[update].endHour = e.hours;\n              newPeriods[update].endMinute = e.minutes;\n              onSetNewPeriods([...newPeriods]);\n              setIsSelectingEndTime(false);\n            } else {\n              // TO DO failed\n              setIsSelectingEndTime(false);\n            }\n          }}\n        />\n        <Pressable\n          onPress={() => deleteItem(period)}\n          style={{ backgroundColor: 'red', borderRadius: 15 }}\n        >\n          <Text style={{ margin: 10 }}>Remove</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction CustomColorThumb({\n  e,\n  diameter,\n}: {\n  e: RenderThumbProps;\n  diameter?: number;\n}) {\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: e.currentColor.value,\n    };\n  });\n\n  return (\n    <Animated.View\n      style={[\n        {\n          width: diameter || 35,\n          height: diameter || 35,\n          borderRadius: diameter ? diameter / 2 : 20,\n          borderWidth: 2,\n          borderColor: 'white',\n        },\n        animatedStyle,\n        e.positionStyle,\n      ]}\n    />\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, ScrollView, FlatList } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../../../../Redux/store';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport create_UUID from '../../../../Functions/Ultility/createUUID';\nimport { Colors, loadingStateEnum, semesters } from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentClasses() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [classState, setClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [classes, setClasses] = useState<classType[]>([]);\n\n  async function getClasses() {\n    const groupResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/groups',\n    );\n    if (groupResult.ok) {\n      const groupResultData = await groupResult.json();\n      if (groupResultData.value !== undefined) {\n        const outputData: classType[] = [];\n        for (let index = 0; index < groupResultData.value.length; index += 1) {\n          outputData.push({\n            name: groupResultData.value[index].displayName,\n            id: groupResultData.value[index].id,\n            periods: [],\n            room: {\n              name: '',\n              id: '',\n            },\n            schoolYearId: '',\n            semester: semesters.semesterOne,\n          });\n        }\n        setClasses(outputData);\n        setClassState(loadingStateEnum.success);\n      } else {\n        setClassState(loadingStateEnum.failed);\n      }\n    } else {\n      setClassState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getClasses();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View>\n        <Pressable onPress={() => navigate('/profile/government/')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Classes</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.85 }}>\n        <>\n          {classState === loadingStateEnum.loading ? (\n            <View>\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {classState === loadingStateEnum.success ? (\n                <FlatList\n                  data={classes}\n                  renderItem={classMap => (\n                    <Pressable\n                      key={`Class_${classMap.item.id}_${create_UUID()}`}\n                      onPress={() => {\n                        navigate(\n                          `/profile/government/classes/edit/${classMap.item.id}`,\n                        );\n                      }}\n                      style={{\n                        backgroundColor: '#FFFFFF',\n                        shadowColor: 'black',\n                        shadowOffset: { width: 1, height: 1 },\n                        shadowOpacity: 1,\n                        shadowRadius: 5,\n                        borderRadius: 15,\n                        margin: 10,\n                      }}\n                    >\n                      <Text style={{ margin: 10 }}>{classMap.item.name}</Text>\n                    </Pressable>\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      </ScrollView>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room');\n        }}\n      >\n        <Text>Rooms</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { orgWideGroupID } from '../../PaulyConfig';\nimport store from '../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nexport default async function getSchoolYears(nextLink?: string): Promise<{\n  result: loadingStateEnum;\n  events?: eventType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20or%20id%20eq%20'${\n        store.getState().paulyList.eventDataExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20and%20ep/value%20eq%20'schoolDay')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newEvents: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      if (data.value[index].singleValueExtendedProperties !== undefined) {\n        const eventData: { id: string; value: string }[] =\n          data.value[index].singleValueExtendedProperties;\n        if (\n          eventData.find(e => {\n            return e.id === eventTypeExtensionID;\n          })?.value === 'schoolYear'\n        ) {\n          newEvents.push({\n            id: data.value[index].id,\n            name: data.value[index].subject,\n            startTime: data.value[index].start.dateTime,\n            endTime: data.value[index].end.dateTime,\n            allDay: data.value[index].isAllDay,\n            eventColor: Colors.white,\n            paulyEventType:\n              eventData.find(e => {\n                return e.id === eventTypeExtensionID;\n              })?.value === 'schoolYear'\n                ? 'schoolYear'\n                : undefined,\n            paulyEventData: eventData.find(e => {\n              return e.id === eventDataExtensionID;\n            })?.value,\n            microsoftEvent: true,\n            microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n          });\n        }\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      events: newEvents,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable, StyleProp, ViewStyle } from 'react-native';\nimport React, { ReactNode, useEffect, useState } from 'react';\n\n// On set selected index returns 0 for the first child that is passed down\n\nexport default function Dropdown({\n  children,\n  onSetSelectedIndex,\n  style,\n  selectedIndex,\n  expandedStyle,\n  options,\n  setExpanded,\n  expanded,\n}: {\n  children: ReactNode;\n  selectedIndex: number;\n  onSetSelectedIndex: (item: number) => void;\n  style?: StyleProp<ViewStyle>;\n  expandedStyle?: StyleProp<ViewStyle>;\n  options?: string[];\n  setExpanded?: (item: boolean) => void;\n  expanded?: boolean;\n}) {\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  useEffect(() => {\n    if (expanded !== undefined) {\n      setIsExpanded(expanded);\n    }\n  }, [expanded]);\n  return (\n    <>\n      {isExpanded ? (\n        <View style={[expandedStyle, { position: 'absolute' }]}>\n          {options ? (\n            <>\n              {options.map((option, index) => (\n                <Pressable\n                  key={`Option_${index}`}\n                  onPress={() => {\n                    onSetSelectedIndex(index);\n                    setIsExpanded(false);\n                    if (setExpanded) {\n                      setExpanded(false);\n                    }\n                  }}\n                >\n                  <Text>{option}</Text>\n                </Pressable>\n              ))}\n            </>\n          ) : (\n            <>\n              {React.Children.map(children, (child, index) => (\n                <Pressable\n                  key={`Option_${index}`}\n                  onPress={() => {\n                    onSetSelectedIndex(index);\n                    setIsExpanded(false);\n                    if (setExpanded) {\n                      setExpanded(true);\n                    }\n                  }}\n                >\n                  <>{child}</>\n                </Pressable>\n              ))}\n            </>\n          )}\n        </View>\n      ) : (\n        <Pressable\n          onPress={() => {\n            setIsExpanded(true);\n            if (setExpanded) {\n              setExpanded(true);\n            }\n          }}\n          style={style}\n        >\n          {options ? (\n            <Text>{options[selectedIndex]}</Text>\n          ) : (\n            <>{children[selectedIndex]}</>\n          )}\n        </Pressable>\n      )}\n    </>\n  );\n}\n","import { View, Text, TextInput, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-native';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum, semesters } from '../../../../types';\nimport getSchoolYears from '../../../../Functions/calendar/getSchoolYears';\nimport SegmentedPicker from '../../../../UI/Pickers/SegmentedPicker';\nimport {\n  getEvent,\n  getTimetable,\n} from '../../../../Functions/calendar/calendarFunctionsGraph';\nimport { CloseIcon, WarningIcon } from '../../../../UI/Icons/Icons';\nimport Dropdown from '../../../../UI/Dropdown';\nimport { getRoom, getRooms } from '../../../../Functions/classesFunctions';\n\nexport default function GovernmentClassesEdit() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [selectedSemester, setSelectedSemester] = useState<semesters>(\n    semesters.semesterOne,\n  );\n\n  const [className, setClassName] = useState<string>('');\n\n  // Rooms States\n  const [roomSearchText, setRoomSearchText] = useState<string>('');\n  const [roomsNextLink, setRoomsNextLink] = useState<string | undefined>(\n    undefined,\n  );\n  const [rooms, setRooms] = useState<roomType[]>([]);\n  const [roomsState, setRoomsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedRoom, setSelectedRoom] = useState<roomType | undefined>(\n    undefined,\n  );\n\n  // School Years State\n  const [schoolYearState, setSchoolYearState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [schoolYearNextLink, setSchoolYearNextLink] = useState<\n    string | undefined\n  >(undefined);\n  const [schoolYears, setSchoolYears] = useState<eventType[]>([]);\n  const [selectedSchoolYear, setSelectedSchoolYear] = useState<\n    eventType | undefined\n  >(undefined);\n\n  const [timetableState, setTimetableState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [selectedTimetable, setSelectedTimetable] = useState<\n    timetableType | undefined\n  >(undefined);\n\n  const [classState, setClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const [updateClassState, setUpdateClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [isShowingClassConfirmMenu, setIsShowingClassConfirmMenu] =\n    useState<boolean>(false);\n\n  const [periods, setPeriods] = useState<number[]>([]);\n\n  async function getClass() {\n    setClassState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}?$select=${\n        store.getState().paulyList.classExtensionId\n      },displayName`,\n    ); // TO DO change to class\n    if (result.ok) {\n      const data = await result.json();\n      const extensionData = data[store.getState().paulyList.classExtensionId];\n      if (extensionData !== undefined) {\n        setClassName(extensionData.className);\n        setSelectedSemester(parseInt(extensionData.semesterId));\n        setPeriods(JSON.parse(extensionData.periodData));\n        const eventResult = await getEvent(extensionData.schoolYearEventId);\n        const roomResult = await getRoom(extensionData.roomId);\n        if (\n          eventResult.result === loadingStateEnum.success &&\n          roomResult.result === loadingStateEnum.success &&\n          eventResult.data !== undefined &&\n          roomResult.data !== undefined\n        ) {\n          setSelectedRoom(roomResult.data);\n          setSelectedSchoolYear(eventResult.data);\n        } else {\n          setClassState(loadingStateEnum.failed);\n        }\n      } else {\n        setClassName(data.displayName);\n      }\n      setClassState(loadingStateEnum.success);\n    } else {\n      setClassState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadRooms() {\n    // TO DO figure out if there will be performance issuses in continually getting next page\n    const result = await getRooms(\n      roomsNextLink,\n      roomSearchText !== '' ? roomSearchText : undefined,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRooms(result.data);\n    }\n    setRoomsState(result.result);\n    setRoomsNextLink(result.nextLink);\n  }\n\n  async function loadSchoolYears() {\n    const result = await getSchoolYears(schoolYearNextLink);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.events !== undefined\n    ) {\n      setSchoolYears(result.events);\n    }\n    setSchoolYearState(result.result);\n    setSchoolYearNextLink(result.nextLink);\n  }\n\n  async function loadTimetable() {\n    if (\n      selectedSchoolYear !== undefined &&\n      selectedSchoolYear.paulyEventData !== undefined\n    ) {\n      setTimetableState(loadingStateEnum.loading);\n      const result = await getTimetable(selectedSchoolYear.paulyEventData);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.timetable !== undefined\n      ) {\n        if (result.timetable.days.length !== periods.length) {\n          const newArray = Array.from(Array(result.timetable.days.length));\n          newArray.fill(0, 0, newArray.length);\n          setPeriods(newArray);\n        }\n        setSelectedTimetable(result.timetable);\n      }\n      setTimetableState(result.result);\n    }\n  }\n\n  useEffect(() => {\n    loadTimetable();\n  }, [selectedSchoolYear]);\n\n  useEffect(() => {\n    getClass();\n  }, []);\n\n  async function updateClass() {\n    if (selectedRoom !== undefined && selectedSchoolYear !== undefined) {\n      setUpdateClassState(loadingStateEnum.loading);\n      const data = {};\n      Object.defineProperty(data, store.getState().paulyList.classExtensionId, {\n        value: {\n          className,\n          schoolYearEventId: selectedSchoolYear.id,\n          semesterId: selectedSemester.toString(),\n          roomId: selectedRoom.id,\n          periodData: JSON.stringify(periods),\n        },\n      });\n\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/groups/${id}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setUpdateClassState(loadingStateEnum.success);\n      } else {\n        setUpdateClassState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  useEffect(() => {\n    loadRooms();\n  }, [roomSearchText]);\n\n  useEffect(() => {\n    loadSchoolYears();\n  }, []);\n\n  return (\n    <>\n      <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n        {classState === loadingStateEnum.loading ? (\n          <View>\n            <Pressable\n              onPress={() => {\n                navigate('/profile/government/classes');\n              }}\n            >\n              <Text>Back</Text>\n            </Pressable>\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <View>\n            {classState === loadingStateEnum.success ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  backgroundColor: Colors.white,\n                }}\n              >\n                <Pressable\n                  onPress={() => {\n                    navigate('/profile/government/classes');\n                  }}\n                >\n                  <Text>Back</Text>\n                </Pressable>\n                <Text>Add Class Data</Text>\n                <View>\n                  <Text>Name:</Text>\n                  <TextInput value={className} onChangeText={setClassName} />\n                </View>\n                <Text>School Years</Text>\n                <View style={{ height: height * 0.3 }}>\n                  {schoolYearState === loadingStateEnum.loading ? (\n                    <Text>Loading</Text>\n                  ) : (\n                    <View>\n                      {schoolYearState === loadingStateEnum.success ? (\n                        <ScrollView style={{ height: height * 0.3 }}>\n                          {schoolYears.map(year => (\n                            <Pressable\n                              onPress={() => {\n                                setSelectedSchoolYear(year);\n                              }}\n                            >\n                              <Text>{year.name}</Text>\n                            </Pressable>\n                          ))}\n                        </ScrollView>\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <View\n                  style={{ height: height * 0.3, marginBottom: height * 0.1 }}\n                >\n                  <Text>Periods</Text>\n                  <Text>{periods.toString()}</Text>\n                  {timetableState === loadingStateEnum.notStarted ? (\n                    <Text>Please pick a school year</Text>\n                  ) : (\n                    <View>\n                      {timetableState === loadingStateEnum.loading ? (\n                        <Text>Loading</Text>\n                      ) : (\n                        <View style={{ zIndex: 100 }}>\n                          {timetableState === loadingStateEnum.success &&\n                          selectedTimetable?.days.length === periods.length ? (\n                            <ScrollView\n                              style={{ height: height * 0.3, zIndex: 100 }}\n                            >\n                              <>\n                                {selectedTimetable.days.map((day, dayIndex) => (\n                                  <DayBlock\n                                    day={day}\n                                    dayIndex={dayIndex}\n                                    periods={periods}\n                                    setPeriods={setPeriods}\n                                    selectedTimetable={selectedTimetable}\n                                  />\n                                ))}\n                              </>\n                            </ScrollView>\n                          ) : (\n                            <Text>Failed</Text>\n                          )}\n                        </View>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <SegmentedPicker\n                  selectedIndex={selectedSemester}\n                  setSelectedIndex={setSelectedSemester}\n                  options={['Semester One', 'Semester Two']}\n                  width={width * 0.85}\n                  height={height * 0.1}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                  {selectedRoom === undefined ? (\n                    <WarningIcon width={12} height={12} outlineColor=\"red\" />\n                  ) : null}\n                  <Text>Select Room</Text>\n                </View>\n                <View style={{ height: height * 0.3 }}>\n                  {roomsState === loadingStateEnum.loading ? (\n                    <Text>Loading</Text>\n                  ) : (\n                    <View>\n                      {roomsState === loadingStateEnum.success ? (\n                        <ScrollView style={{ height: height * 0.3 }}>\n                          {rooms.map(room => (\n                            <Pressable\n                              onPress={() => {\n                                setSelectedRoom(room);\n                              }}\n                            >\n                              <Text>{room.name}</Text>\n                            </Pressable>\n                          ))}\n                        </ScrollView>\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <Pressable\n                  onPress={() => {\n                    setIsShowingClassConfirmMenu(true);\n                  }}\n                >\n                  <Text>Create Class</Text>\n                </Pressable>\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n      {isShowingClassConfirmMenu ? (\n        <View\n          style={{\n            width: width * 0.8,\n            height: height * 0.8,\n            top: height * 0.1,\n            left: width * 0.1,\n            borderRadius: 15,\n            backgroundColor: Colors.white,\n            position: 'absolute',\n            shadowColor: 'black',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              setIsShowingClassConfirmMenu(false);\n            }}\n          >\n            <CloseIcon width={14} height={14} />\n          </Pressable>\n          <Text>Create Class</Text>\n          <Text>Name: {className}</Text>\n          <Text>Room: {selectedRoom?.name}</Text>\n          <Text>School Year: {selectedSchoolYear?.name}</Text>\n          <Text>\n            Semester:{' '}\n            {selectedSemester === semesters.semesterOne ? 'One' : 'Two'}\n          </Text>\n          <Pressable\n            onPress={() => {\n              updateClass();\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {updateClassState === loadingStateEnum.cannotStart\n                ? 'Cannot Update Class'\n                : updateClassState === loadingStateEnum.notStarted\n                ? 'Update Class'\n                : updateClassState === loadingStateEnum.loading\n                ? 'Loading'\n                : updateClassState === loadingStateEnum.success\n                ? 'Updated Class'\n                : 'Failed To Update Class'}\n            </Text>\n          </Pressable>\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nfunction DayBlock({\n  day,\n  periods,\n  dayIndex,\n  setPeriods,\n  selectedTimetable,\n}: {\n  day: schoolDayType;\n  dayIndex: number;\n  periods: number[];\n  setPeriods: (item: number[]) => void;\n  selectedTimetable: timetableType;\n}) {\n  const [selected, setSelected] = useState<boolean>(false);\n  return (\n    <View\n      key={`Day_${day.id}`}\n      style={{ flexDirection: 'row', margin: 10, zIndex: selected ? 200 : 100 }}\n    >\n      <Text>{day.name}</Text>\n      <View>\n        {selectedTimetable?.schedules.length >= 1 &&\n        periods.length >= dayIndex ? (\n          <Dropdown\n            selectedIndex={periods[dayIndex]}\n            onSetSelectedIndex={index => {\n              if (periods.length >= dayIndex) {\n                const newPeriods = periods;\n                newPeriods[dayIndex] = index;\n                setPeriods([...newPeriods]);\n              }\n            }}\n            expanded={selected}\n            setExpanded={e => {\n              setSelected(e);\n            }}\n            style={{ backgroundColor: Colors.white, zIndex: -2 }}\n            expandedStyle={{\n              backgroundColor: 'blue',\n              zIndex: 101,\n              position: 'absolute',\n            }}\n            options={[\n              'unchosen',\n              ...Array.from(selectedTimetable.schedules[0].periods).flatMap(\n                (_item, index) => (index + 1).toString(),\n              ),\n            ]}\n            children=\"\"\n          />\n        ) : (\n          <Text>Something went wrong please reload the page.</Text>\n        )}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput, Button, Switch } from 'react-native';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useMsal } from '@azure/msal-react';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../Functions/Ultility/microsoftAssets';\nimport MicrosoftFilePicker from '../../../UI/MicrosoftFilePicker';\nimport store, { RootState } from '../../../Redux/store';\nimport getCurrentPaulyData from '../../../Functions/homepage/getCurrentPaulyData';\nimport { Colors, loadingStateEnum } from '../../../types';\n\nexport default function GovernmentHomePage() {\n  const { paulyDataListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  // Loading States\n  const [loadContentLoadingState, setLoadContentLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [newMessageState, setNewMessageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  // New Data\n  const [newMessageText, setNewMessageText] = useState(\n    store.getState().paulyData.message,\n  );\n  const [newAnimationSpeed, setNewAnnimationSpeed] = useState(\n    store.getState().paulyData.animationSpeed,\n  );\n  const [selectedPowerpoint, setSelectedPowerpoint] = useState<\n    microsoftFileType | undefined\n  >(undefined);\n  const [isAutoUpdatingText, setIsAutoUpdatingText] = useState<boolean>(false);\n\n  async function loadCurrentPaultData() {\n    const result = await getCurrentPaulyData();\n    setLoadContentLoadingState(loadingStateEnum.success);\n  }\n  async function createShareId(\n    item: microsoftFileType,\n  ): Promise<string | undefined> {\n    const data = {\n      type: 'view',\n      scope: 'organization',\n    };\n    const result = await callMsGraph(\n      `${item.callPath}/createLink`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      return data.shareId;\n    }\n    return undefined;\n  }\n  async function updatePaulyData(key: string, data: string) {\n    const dataOut: any = {};\n    dataOut[key] = data;\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${paulyDataListId}/items/1/fields`,\n      'PATCH',\n      JSON.stringify(dataOut),\n    ); // TO DO fix list ids\n    if (result.ok) {\n      setNewMessageState(loadingStateEnum.success);\n    } else {\n      setNewMessageState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    const storeText = newMessageText;\n    setTimeout(() => {\n      if (isAutoUpdatingText && newMessageText === storeText) {\n        updatePaulyData('message', newMessageText);\n      }\n    }, 2000);\n  }, [newMessageText]);\n\n  useEffect(() => {\n    loadCurrentPaultData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Link to=\"/profile/government/\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Home Page</Text>\n      <View>\n        <View style={{ flexDirection: 'row' }}>\n          <TextInput\n            value={newMessageText}\n            onChangeText={e => {\n              setNewMessageText(e);\n            }}\n          />\n        </View>\n        {isAutoUpdatingText ? null : (\n          <Pressable\n            onPress={() => {\n              updatePaulyData('message', newMessageText);\n            }}\n          >\n            <Text>Update Text</Text>\n          </Pressable>\n        )}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Is auto updating text: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isAutoUpdatingText ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={setIsAutoUpdatingText}\n            value={isAutoUpdatingText}\n          />\n        </View>\n      </View>\n      <View style={{ marginBottom: 20 }}>\n        <View>\n          <Text style={{ margin: 5 }}>\n            Select Powerpoint: {selectedPowerpoint?.name}\n          </Text>\n        </View>\n        <MicrosoftFilePicker\n          height={height * 0.6 - 15}\n          width={width}\n          onSelectedFile={selectedFile => {\n            setSelectedPowerpoint(selectedFile);\n          }}\n        />\n      </View>\n      <Pressable\n        onPress={async () => {\n          if (selectedPowerpoint !== undefined) {\n            const shareId = await createShareId(selectedPowerpoint);\n            if (shareId !== undefined) {\n              updatePaulyData('powerpointId', shareId);\n            }\n          }\n        }}\n      >\n        <Text>Save Changes</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import React, { ReactNode, useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { Image, StyleSheet, View, Pressable, Text } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport store, { RootState } from '../Redux/store';\nimport {\n  BookIcon,\n  CalendarIcon,\n  GovernmentIcon,\n  HomeIcon,\n  MedalIcon,\n  PersonIcon,\n  StudentSearchIcon,\n} from './Icons/Icons';\nimport { expandedModeSlice } from '../Redux/reducers/expandedModeReducer';\nimport { isShowingProfileBlockSlice } from '../Redux/reducers/isShowingProfileBlockReducer';\nimport { Colors } from '../types';\n\nfunction NavBarBlock({\n  des,\n  expandedMode,\n  blockLength,\n  children,\n  text,\n  width,\n  setIsExpandedMode,\n}: {\n  des: string;\n  expandedMode: boolean;\n  blockLength: number;\n  text: string;\n  children: ReactNode;\n  width: number;\n  setIsExpandedMode: () => void;\n}) {\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const navigation = useNavigate();\n  return (\n    <Pressable\n      style={{\n        height: blockLength,\n        width: expandedMode ? width * 2.5 : width,\n        backgroundColor: isHover ? Colors.darkGray : 'transparent',\n        alignItems: 'center',\n      }}\n      onPress={() => {\n        navigation(des);\n      }}\n      onHoverIn={() => {\n        setIsHover(true);\n        setIsExpandedMode();\n      }}\n      onHoverOut={() => {\n        setIsHover(false);\n      }}\n    >\n      <View\n        style={[\n          styles.LinkStyle,\n          {\n            height: blockLength,\n            width: expandedMode ? blockLength * 2.5 : blockLength,\n            margin: 0,\n            position: expandedMode ? 'absolute' : 'relative',\n            left: expandedMode ? (width - blockLength) / 2 : undefined,\n            alignItems: 'center',\n          },\n        ]}\n      >\n        <View\n          id=\"ViewHigh\"\n          style={{\n            width: expandedMode ? blockLength * 2.5 : blockLength,\n            flexDirection: 'row',\n            margin: 'auto',\n            padding: 0,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View\n            style={[\n              {\n                height: blockLength,\n                width: blockLength,\n                position: expandedMode ? 'absolute' : 'relative',\n                left: expandedMode ? 0 : undefined,\n                alignItems: 'center',\n                justifyContent: 'center',\n              },\n            ]}\n          >\n            <>{children}</>\n          </View>\n          {expandedMode ? (\n            <Text\n              style={{\n                position: 'absolute',\n                left: blockLength,\n                color: Colors.white,\n                marginLeft: 8,\n              }}\n            >\n              {text}\n            </Text>\n          ) : null}\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nexport default function NavBarComponent({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const { uri, displayName } = useSelector(\n    (state: RootState) => state.microsoftProfileData,\n  );\n  const expandedMode = useSelector((state: RootState) => state.expandedMode);\n  const [blockLength, setBlockLength] = useState<number>(0);\n  const [iconLength, setIconLength] = useState<number>(0);\n  const navigation = useNavigate();\n  const dispatch = useDispatch();\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n\n  useEffect(() => {\n    // checking to see if the width or the height is going to be the limiting factor.\n    if (width * 0.6 > (height * 0.6) / 8) {\n      setBlockLength((height * 0.6) / 8);\n    } else {\n      setBlockLength(width * 0.6);\n    }\n    if (width * 0.7 > (height * 0.7) / 8) {\n      setIconLength((height * 0.6) / 8);\n    } else {\n      setIconLength(width * 0.5);\n    }\n  }, [width, height]);\n\n  const [fontsLoaded] = useFonts({\n    'Gochi Hand': require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      id=\"Pressable\"\n      onHoverIn={() => {\n        dispatch(expandedModeSlice.actions.setExpandedMode(true));\n      }}\n      onHoverOut={() => {\n        dispatch(expandedModeSlice.actions.setExpandedMode(false));\n      }}\n    >\n      <View\n        id=\"Main\"\n        style={{\n          backgroundColor: Colors.maroon,\n          height,\n          overflow: 'hidden',\n          width: expandedMode ? width * 2.5 : width,\n          alignItems: 'center',\n        }}\n      >\n        <Pressable\n          style={[\n            styles.LinkStyle,\n            {\n              height: blockLength,\n              width: expandedMode ? width * 2.5 : width,\n              margin: 0,\n              marginTop: blockLength * 0.4,\n              marginBottom: blockLength * 0.4,\n            },\n          ]}\n          onPress={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(!expandedMode));\n          }}\n          onHoverIn={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              height: blockLength,\n              position: expandedMode ? 'absolute' : 'relative',\n              left: expandedMode ? (width - blockLength) / 2 : undefined,\n            }}\n            pointerEvents=\"none\"\n          >\n            <View\n              style={{\n                position: expandedMode ? 'absolute' : 'relative',\n                left: expandedMode ? 0 : undefined,\n              }}\n            >\n              <Image\n                source={require('../../assets/images/PaulyLogo.png')}\n                resizeMode=\"contain\"\n                style={{ width: blockLength, height: blockLength }}\n              />\n            </View>\n            {expandedMode ? (\n              <Text\n                style={{\n                  fontFamily: 'Gochi Hand',\n                  color: Colors.white,\n                  position: 'absolute',\n                  top: blockLength * 0.3,\n                  left: blockLength * 0.65,\n                  fontSize: blockLength * 0.7,\n                  textShadowColor: 'rgba(0, 0, 0, 1)',\n                  textShadowOffset: { width: 4, height: 2 },\n                  textShadowRadius: 0,\n                }}\n                selectable={false}\n              >\n                auly\n              </Text>\n            ) : null}\n          </View>\n        </Pressable>\n        <NavBarBlock\n          des=\"/notifications\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Notifications\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <HomeIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/resources\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Resources\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <BookIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/commissions\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Commissions\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <MedalIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/calendar\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Calendar\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <CalendarIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/sports\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Sports\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <Image\n            source={require('../../assets/images/Football.png')}\n            resizeMode=\"contain\"\n            style={{ width: iconLength, height: iconLength }}\n          />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/students\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Students\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <StudentSearchIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        {isGovernmentMode ? (\n          <NavBarBlock\n            des=\"/profile/government\"\n            expandedMode={expandedMode}\n            blockLength={blockLength}\n            text=\"Government\"\n            width={width}\n            setIsExpandedMode={() => {\n              dispatch(expandedModeSlice.actions.setExpandedMode(true));\n            }}\n          >\n            <GovernmentIcon width={iconLength} height={iconLength} />\n          </NavBarBlock>\n        ) : null}\n        <Pressable\n          onHoverIn={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n          onPress={() => {\n            dispatch(\n              isShowingProfileBlockSlice.actions.setIsShowingProfileBlock(\n                !store.getState().isShowingProfileBlock,\n              ),\n            );\n          }}\n          style={[\n            styles.LinkStyle,\n            {\n              height: blockLength,\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              margin: 0,\n              position: 'absolute',\n              left: expandedMode ? (width - blockLength) / 2 : undefined,\n              bottom: height * 0.05,\n            },\n          ]}\n        >\n          <View\n            style={{\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              height: iconLength,\n              position: expandedMode ? 'absolute' : 'relative',\n              left: expandedMode ? 0 : undefined,\n              flexDirection: 'row',\n            }}\n          >\n            {uri !== '' ? (\n              <Image\n                source={{ uri }}\n                style={{\n                  width: iconLength,\n                  height: iconLength,\n                  borderRadius: iconLength / 2,\n                }}\n              />\n            ) : (\n              <PersonIcon width={iconLength} height={iconLength} />\n            )}\n            <View\n              style={{\n                height: iconLength,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                marginLeft: blockLength - iconLength,\n              }}\n            >\n              {expandedMode ? (\n                <Text\n                  adjustsFontSizeToFit\n                  numberOfLines={1}\n                  style={{\n                    color: Colors.white,\n                    marginLeft: 8,\n                    width: blockLength * 2.5,\n                  }}\n                  selectable={false}\n                >\n                  {displayName}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n        </Pressable>\n      </View>\n    </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  LinkStyle: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 'auto',\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../Redux/store';\nimport { Colors } from '../types';\n\nexport default function PageNotFound() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [isBottonHover, setIsButtonHover] = useState<boolean>(false);\n  const navigate = useNavigate();\n  return (\n    <View\n      style={{\n        width,\n        height,\n        backgroundColor: Colors.white,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Text>Page Not Found</Text>\n      <Pressable\n        onPress={() => {\n          navigate('/');\n        }}\n        onHoverIn={() => {\n          setIsButtonHover(true);\n        }}\n        onHoverOut={() => {\n          setIsButtonHover(false);\n        }}\n        style={{\n          height: height * 0.09,\n          width: width * 0.5,\n          borderRadius: 50,\n          backgroundColor: isBottonHover ? Colors.darkGray : Colors.white,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          shadowColor: isBottonHover ? Colors.white : 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginTop: width < height ? width * 0.1 : height * 0.1,\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            color: isBottonHover ? Colors.white : 'black',\n            fontWeight: 'bold',\n          }}\n        >\n          RETURN HOME\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { clientId } from '../../PaulyConfig';\n\nexport const paulyListData = {\n  displayName: 'PaulyList',\n  // \"name\":\"PaulyList\",\n  columns: [\n    {\n      name: 'studentFilesListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'commissionListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'commissionSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'paulyDataListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsApprovedSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetablesListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'resourceListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'dressCodeListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'roomListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'classExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'eventTypeExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'eventDataExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'resourceExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'userExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'noClassListId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const studentFilesData = {\n  displayName: 'StudentFiles',\n  columns: [\n    {\n      name: 'createdTime',\n      text: {},\n    },\n    {\n      name: 'itemId', // This is the item id not drive item id\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selected',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'userId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const commissionsData = {\n  displayName: 'Commissions',\n  columns: [\n    {\n      name: 'startDate',\n      text: {},\n    },\n    {\n      name: 'endDate',\n      text: {},\n    },\n    {\n      name: 'timed',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'points',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'hidden',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'maxNumberOfClaims',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'allowMultipleSubmissions',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'commissionID',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'value',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'coordinateLat',\n      number: {},\n    },\n    {\n      name: 'coordinateLng',\n      number: {},\n    },\n    {\n      name: 'proximity',\n      number: {},\n    },\n    {\n      name: 'qrCodeData',\n      text: { allowMultipleLines: true },\n    },\n    {\n      name: 'postTeamId',\n      text: {},\n    },\n    {\n      name: 'postChannelId',\n      text: {},\n    },\n    {\n      name: 'postId',\n      text: {},\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const commissionsSubmissionsData = {\n  displayName: 'CommissionsSubmissions',\n  columns: [\n    {\n      name: 'userId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submittedTime',\n      required: true,\n      text: {},\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'submissionApproved',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionReviewed',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'commissionId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionData',\n      text: { allowMultipleLines: true },\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const paulyDataData = {\n  displayName: 'PaulyData',\n  columns: [\n    {\n      name: 'animationSpeed',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'message',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'powerpointId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const scheduleData = {\n  displayName: 'Schedule',\n  columns: [\n    {\n      name: 'scheduleId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'scheduleProperName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleDescriptiveName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleColor',\n      text: { maxLength: 9 },\n      required: true,\n    },\n    {\n      name: 'scheduleData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsData = {\n  displayName: 'Sports',\n  columns: [\n    {\n      name: 'sportName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportSvg',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'sportId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsApprovedSubmissionsData = {\n  displayName: 'SportsApprovedSubmissions',\n  columns: [\n    {\n      name: 'fileId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'caption',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedSportId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedTeamId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsSubmissionsData = {\n  displayName: 'SportsSubmissions',\n  columns: [\n    {\n      name: 'accepted',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'reviewed',\n      boolean: {},\n      indexed: true,\n      required: true,\n    },\n    {\n      name: 'user',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timeCreated',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'fileId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedSportId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n    {\n      name: 'selectedTeamId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const timetablesData = {\n  displayName: 'Timetables',\n  columns: [\n    {\n      name: 'timetableName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetableId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'timetableDataDays',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'timetableDataSchedules',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'timetableDefaultScheduleId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetableDressCodeId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const resourceData = {\n  displayName: 'Resources',\n  columns: [\n    {\n      name: 'resourceGroupId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'resourceConversationId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const dressCodeData = {\n  displayName: 'DressCode',\n  columns: [\n    {\n      name: 'dressCodeId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'dressCodeName',\n      text: {},\n    },\n    {\n      name: 'dressCodeData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'dressCodeIncentivesData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const roomData = {\n  displayName: 'Rooms',\n  columns: [\n    {\n      name: 'roomId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'roomName',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const noClassData = {\n  displayName: 'No Class',\n  columns: [\n    {\n      name: 'classGroupId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'classDate',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\n\n// Extensions\nexport const paulyClassExtensionData = {\n  id: 'paulyClass',\n  description: 'Pauly Class Data',\n  targetTypes: ['Group'],\n  owner: clientId,\n  properties: [\n    {\n      name: 'className', // This property will be optional in the future\n      type: 'String',\n    },\n    {\n      name: 'schoolYearEventId',\n      type: 'String',\n    },\n    {\n      name: 'semesterId',\n      type: 'String',\n    },\n    {\n      name: 'roomId',\n      type: 'String',\n    },\n    {\n      name: 'periodData',\n      type: 'String', // An Array as long as the number of days in the cycle\n    },\n  ],\n};\n\n// Add data array\nexport const addDataArray: addDataType[] = [\n  {\n    data: paulyClassExtensionData,\n    urlOne: 'https://graph.microsoft.com/v1.0/schemaExtensions',\n    id: 'classExtensionId',\n  },\n  {\n    data: studentFilesData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'studentFilesListId',\n  },\n  {\n    data: commissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'commissionListId',\n  },\n  {\n    data: commissionsSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'commissionSubmissionsListId',\n  },\n  {\n    data: scheduleData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'scheduleListId',\n  },\n  {\n    data: sportsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsListId',\n  },\n  {\n    data: sportsApprovedSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsApprovedSubmissionsListId',\n  },\n  {\n    data: sportsSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsSubmissionsListId',\n  },\n  {\n    data: timetablesData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'timetablesListId',\n  },\n  {\n    data: resourceData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'resourceListId',\n  },\n  {\n    data: dressCodeData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'dressCodeListId',\n  },\n  {\n    data: roomData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'roomListId',\n  },\n  {\n    data: noClassData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'noClassListId',\n  },\n];\n","import { loadingStateEnum } from '../../types';\nimport createUUID from '../Ultility/createUUID';\nimport callMsGraph from '../Ultility/microsoftAssets';\nimport {\n  paulyListData,\n  paulyDataData,\n  addDataArray,\n} from './initializePaulyData';\n\nexport async function initializePaulyPartOne(\n  secondUserId: string,\n): Promise<{ result: loadingStateEnum; groupId?: string }> {\n  const currentUsersIdResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me',\n    'GET',\n  );\n  if (currentUsersIdResult.ok) {\n    const currentUsersIdResultData = await currentUsersIdResult.json();\n    const createGroupData = {\n      description: \"Pauly's Team Containing all it's data\",\n      displayName: 'Pauly',\n      groupTypes: [\n        'Unified',\n        // , \"DynamicMembership\"\n      ],\n      mailEnabled: true,\n      mailNickname: 'pauly',\n      visibility: 'HiddenMembership',\n      // \"membershipRule\": \"(user.accountEnabled -eq true)\",\n      // \"membershipRuleProcessingState\": \"on\",\n      'owners@odata.bind': [\n        `https://graph.microsoft.com/v1.0/users/${currentUsersIdResultData.id}`,\n        `https://graph.microsoft.com/v1.0/users/${secondUserId}`,\n      ],\n      securityEnabled: false,\n    };\n    const createGroupResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/groups',\n      'POST',\n      JSON.stringify(createGroupData),\n    );\n    if (createGroupResult.ok) {\n      const createGroupResultData = await createGroupResult.json();\n      return {\n        result: loadingStateEnum.success,\n        groupId: createGroupResultData.id,\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function initializePaulyPartTwo(\n  groupId: string,\n): Promise<loadingStateEnum> {\n  const teamsData = {\n    'template@odata.bind':\n      \"https://graph.microsoft.com/v1.0/teamsTemplates('standard')\",\n    'group@odata.bind': `https://graph.microsoft.com/v1.0/groups('${groupId}')`,\n  };\n  const createTeamResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/teams',\n    'POST',\n    JSON.stringify(teamsData),\n  );\n  if (createTeamResult.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n\nexport async function initializePaulyPartThree(\n  groupId: string,\n  update?: string[],\n): Promise<loadingStateEnum> {\n  const getTeam = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${groupId}`,\n  );\n  if (!getTeam.ok) {\n    return loadingStateEnum.failed;\n  }\n  const getTeamData = await getTeam.json();\n\n  const getRootSiteIdResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${getTeamData.id}/sites/root`,\n  );\n  if (!getRootSiteIdResult.ok) {\n    return loadingStateEnum.failed;\n  }\n  const getRootSiteIdResultData = await getRootSiteIdResult.json();\n\n  const paulyListNewData: { fields: any } = { fields: { Title: 'Main' } };\n\n  // Check if already data\n  let secondRun: boolean = false;\n  const getPaulyListResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items/1?expand=fields`,\n  );\n  if (!getPaulyListResult.ok && getPaulyListResult.status !== 404) {\n    console.log('second run failed');\n    return loadingStateEnum.failed;\n  }\n  const getPaulyListResultData = await getPaulyListResult.json();\n  if (getPaulyListResult.status !== 404) {\n    if (getPaulyListResultData.fields !== undefined) {\n      secondRun = true;\n      if (getPaulyListResultData.fields !== undefined) {\n        if (getPaulyListResultData.fields.paulyDataListId !== undefined) {\n          paulyListNewData.fields.paulyDataListId =\n            getPaulyListResultData.fields.paulyDataListId;\n        }\n      }\n    }\n  }\n\n  // TO DO think about 409 if only half  of list where created and then interuption\n  for (let index = 0; index < addDataArray.length; index += 1) {\n    const callData = addDataArray[index];\n    if (getPaulyListResultData.fields !== undefined) {\n      if (getPaulyListResultData.fields[callData.id] !== undefined) {\n        paulyListNewData.fields[callData.id] =\n          getPaulyListResultData.fields[callData.id];\n      }\n    }\n    if (\n      paulyListNewData.fields[callData.id] === undefined ||\n      update?.includes(callData.id)\n    ) {\n      const result = await callMsGraph(\n        callData.urlTwo !== undefined\n          ? callData.urlOne + getRootSiteIdResultData.id + callData.urlTwo\n          : callData.urlOne,\n        'POST',\n        JSON.stringify(callData.data),\n      );\n      if (!result.ok) {\n        return loadingStateEnum.failed;\n      }\n      const data = await result.json();\n      paulyListNewData.fields[callData.id] = data.id;\n    }\n  }\n  if (getPaulyListResultData.fields !== undefined) {\n    if (getPaulyListResultData.fields.eventTypeExtensionId !== undefined) {\n      paulyListNewData.fields.eventTypeExtensionId =\n        getPaulyListResultData.fields.eventTypeExtensionId;\n    } else {\n      paulyListNewData.fields.eventTypeExtensionId = `String {${createUUID()}} Name eventType`;\n    }\n  } else {\n    paulyListNewData.fields.eventTypeExtensionId = `String {${createUUID()}} Name eventType`;\n  }\n\n  if (getPaulyListResultData.fields !== undefined) {\n    if (getPaulyListResultData.fields.eventDataExtensionId !== undefined) {\n      paulyListNewData.fields.eventDataExtensionId =\n        getPaulyListResultData.fields.eventDataExtensionId;\n    } else {\n      paulyListNewData.fields.eventDataExtensionId = `String {${createUUID()}} Name eventData`;\n    }\n    if (getPaulyListResultData.fields.resourceExtensionId !== undefined) {\n      paulyListNewData.fields.resourceExtensionId =\n        getPaulyListResultData.fields.resourceExtensionId;\n    } else {\n      paulyListNewData.fields.resourceExtensionId = `String {${createUUID()}} Name resourceData`;\n    }\n  } else {\n    paulyListNewData.fields.eventDataExtensionId = `String {${createUUID()}} Name eventData`;\n    paulyListNewData.fields.resourceExtensionId = `String {${createUUID()}} Name resourceData`;\n  }\n\n  if (paulyListNewData.fields.paulyDataListId === undefined) {\n    const paulyDataResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists`,\n      'POST',\n      JSON.stringify(paulyDataData),\n    );\n    if (!paulyDataResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    const paulyDataResultData = await paulyDataResult.json();\n    const paulyDataNewData = {\n      fields: {\n        Title: 'Main',\n        animationSpeed: 10,\n        message: 'Pauly',\n        powerpointId: 'unset',\n      },\n    };\n    const setPaulyDataNewDataResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/${paulyDataResultData.id}/items`,\n      'POST',\n      JSON.stringify(paulyDataNewData),\n    );\n    if (!setPaulyDataNewDataResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    paulyListNewData.fields.paulyDataListId = paulyDataResultData.id;\n  }\n  if (secondRun === false) {\n    const paulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists`,\n      'POST',\n      JSON.stringify(paulyListData),\n    );\n    if (!paulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    const addPaulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items`,\n      'POST',\n      JSON.stringify(paulyListNewData),\n    );\n    if (!addPaulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n  } else {\n    const addPaulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items/1`,\n      'PATCH',\n      JSON.stringify(paulyListNewData),\n    );\n    const ourData = await addPaulyListResult.json();\n    if (!addPaulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n  }\n  return loadingStateEnum.success;\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, TextInput, FlatList } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport {\n  initializePaulyPartOne,\n  initializePaulyPartThree,\n  initializePaulyPartTwo,\n} from '../../../../Functions/initializePauly/initializePauly';\nimport { RootState } from '../../../../Redux/store';\nimport { addDataArray } from '../../../../Functions/initializePauly/initializePaulyData';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\n\nenum initStage {\n  notStarted,\n  partOne,\n  partTwoLoad,\n  partTwo,\n  partThreeLoad,\n  partThree,\n  done,\n}\n\nexport default function GovernmentAdmin() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [selectedUser, setSelectedUser] = useState<\n    microsoftUserType | undefined\n  >(undefined);\n  const [timeLeft, setTimeLeft] = useState<string>('');\n  const [timeElapsed, setTimeElapsed] = useState<string>('Not Started');\n  const [createdGroupId, setCreatedGroupId] = useState<string>('');\n  const [selectedUpdates, setSelectedUpdates] = useState<string[]>([]);\n  const navigate = useNavigate();\n\n  // Start Times\n  const [startTime, setStartTime] = useState<Date>(new Date());\n  const [partOneStartTime, setPartOneStartTime] = useState<Date>(new Date());\n  const [partTwoStartTime, setPartTwoStartTime] = useState<Date>(new Date());\n\n  // Result\n  const [initResult, setInitResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [initTwoResult, setInitTwoResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [initThreeResult, setInitThreeResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [currentInitStage, setCurrentInitStage] = useState<initStage>(\n    initStage.notStarted,\n  );\n\n  async function initializePauly() {\n    if (selectedUser !== undefined) {\n      setStartTime(new Date());\n      setCurrentInitStage(initStage.partOne);\n      setInitResult(loadingStateEnum.loading);\n      const partOneResult = await initializePaulyPartOne(selectedUser.id);\n      if (\n        partOneResult.result === loadingStateEnum.success &&\n        partOneResult.groupId !== undefined\n      ) {\n        setCreatedGroupId(partOneResult.groupId);\n        setCurrentInitStage(initStage.partTwoLoad);\n        setPartOneStartTime(new Date());\n        const partTwoResult = await new Promise<loadingStateEnum>(\n          (resolve, reject) => {\n            setTimeout(async () => {\n              if (partOneResult.groupId !== undefined) {\n                setCurrentInitStage(initStage.partTwo);\n                const secondResult = await initializePaulyPartTwo(\n                  partOneResult.groupId,\n                );\n                resolve(secondResult);\n              } else {\n                setCurrentInitStage(initStage.done);\n                setInitResult(loadingStateEnum.failed);\n                reject();\n              }\n            }, 900000);\n          },\n        );\n        if (partTwoResult === loadingStateEnum.success) {\n          setCurrentInitStage(initStage.partThreeLoad);\n          setPartTwoStartTime(new Date());\n          const partThreeResult = await new Promise<loadingStateEnum>(\n            (resolve, reject) => {\n              setTimeout(async () => {\n                if (partOneResult.groupId !== undefined) {\n                  setCurrentInitStage(initStage.partThree);\n                  const thirdResult = await initializePaulyPartThree(\n                    partOneResult.groupId,\n                  );\n                  resolve(thirdResult);\n                } else {\n                  setCurrentInitStage(initStage.done);\n                  setInitResult(loadingStateEnum.failed);\n                  reject();\n                }\n              }, 900000);\n            },\n          );\n          if (partThreeResult === loadingStateEnum.success) {\n            setInitResult(loadingStateEnum.success);\n            setCurrentInitStage(initStage.done);\n          } else {\n            setCurrentInitStage(initStage.done);\n            setInitResult(loadingStateEnum.failed);\n          }\n        } else {\n          setCurrentInitStage(initStage.done);\n          setInitResult(loadingStateEnum.failed);\n        }\n      } else {\n        setCurrentInitStage(initStage.done);\n        setInitResult(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function initializePaulyFromPartTwo() {\n    if (\n      createdGroupId !== '' &&\n      initTwoResult === loadingStateEnum.notStarted\n    ) {\n      setInitTwoResult(loadingStateEnum.loading);\n      const secondResult = await initializePaulyPartTwo(createdGroupId);\n      if (secondResult === loadingStateEnum.success) {\n        setInitTwoResult(loadingStateEnum.success);\n      } else {\n        setInitTwoResult(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function initializePaulyFromPartThree() {\n    if (\n      createdGroupId !== '' &&\n      initThreeResult === loadingStateEnum.notStarted\n    ) {\n      setStartTime(new Date());\n      setCurrentInitStage(initStage.partThree);\n      setInitThreeResult(loadingStateEnum.loading);\n      const result = await initializePaulyPartThree(\n        createdGroupId,\n        selectedUpdates,\n      );\n      if (result === loadingStateEnum.success) {\n        setInitThreeResult(loadingStateEnum.success);\n        setCurrentInitStage(initStage.done);\n      } else {\n        setInitThreeResult(loadingStateEnum.failed);\n        setCurrentInitStage(initStage.done);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (\n      currentInitStage === initStage.partTwoLoad ||\n      currentInitStage === initStage.partThreeLoad\n    ) {\n      const interval: ReturnType<typeof setInterval> = setInterval(() => {\n        let miliSecondsPassed = new Date().getTime() - startTime.getTime();\n        if (currentInitStage === initStage.partTwoLoad) {\n          miliSecondsPassed = new Date().getTime() - partOneStartTime.getTime();\n        } else if (currentInitStage === initStage.partThreeLoad) {\n          miliSecondsPassed = new Date().getTime() - partTwoStartTime.getTime();\n        }\n\n        const miliSecondsLeft = 900000 - miliSecondsPassed;\n        const totalSecondsLeft = miliSecondsLeft / 1000;\n        let minutesLeft: number = Math.floor(totalSecondsLeft / 60);\n        let secondsLeft: number = Math.ceil(totalSecondsLeft % 60);\n        if (secondsLeft === 60) {\n          minutesLeft += 1;\n          secondsLeft = 0;\n        }\n        let minutesLeftString: string = minutesLeft.toString();\n        let secondsLeftString: string = secondsLeft.toString();\n        if (minutesLeft <= 9) {\n          minutesLeftString = `0${minutesLeftString}`;\n        }\n        if (secondsLeft <= 9) {\n          secondsLeftString = `0${secondsLeft}`;\n        }\n        setTimeLeft(`${minutesLeftString}:${secondsLeftString}`);\n        if (minutesLeft <= -1) {\n          setTimeLeft('0:0');\n          return clearInterval(interval);\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [currentInitStage]);\n\n  useEffect(() => {\n    if (currentInitStage !== initStage.notStarted) {\n      const interval = setInterval(() => {\n        const miliSecondsPast = new Date().getTime() - startTime.getTime();\n\n        const totalSecondsLeft = miliSecondsPast / 1000;\n        const totalMinutesPast: number = Math.floor(totalSecondsLeft / 60);\n        let minutesPast: number = Math.ceil(totalMinutesPast % 60);\n        const hoursPast: number = Math.floor(totalMinutesPast / 60);\n        let secondsPast: number = Math.ceil(totalSecondsLeft % 60);\n        if (secondsPast === 60) {\n          minutesPast += 1;\n          secondsPast = 0;\n        }\n        let hoursLeftString: string = hoursPast.toString();\n        let minutesLeftString: string = minutesPast.toString();\n        let secondsLeftString: string = secondsPast.toString();\n        if (minutesPast <= 9) {\n          minutesLeftString = `0${minutesLeftString}`;\n        }\n        if (secondsPast <= 9) {\n          secondsLeftString = `0${secondsPast}`;\n        }\n        if (hoursPast <= 9) {\n          hoursLeftString = `0${hoursLeftString}`;\n        }\n        setTimeElapsed(\n          `${hoursLeftString}:${minutesLeftString}:${secondsLeftString}`,\n        );\n      }, 1000);\n      if (currentInitStage === initStage.done) {\n        return clearInterval(interval);\n      }\n      return () => clearInterval(interval);\n    }\n  }, [currentInitStage]);\n\n  useEffect(() => {\n    if (\n      createdGroupId !== '' &&\n      (initResult === loadingStateEnum.notStarted ||\n        initResult === loadingStateEnum.cannotStart ||\n        initResult === loadingStateEnum.failed)\n    ) {\n      setInitTwoResult(loadingStateEnum.notStarted);\n      setInitThreeResult(loadingStateEnum.notStarted);\n    }\n  }, [createdGroupId, initResult]);\n\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <View>\n        <Pressable onPress={() => navigate('/profile/government')}>\n          <Text>Back</Text>\n        </Pressable>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <View>\n          <View\n            style={{\n              height: height * 0.25,\n              width: height * 0.1,\n              alignContent: 'center',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partOne ? 'blue' : 'black',\n                borderRadius: 50,\n              }}\n            />\n            <View\n              style={{\n                height: height * 0.025,\n                width: height * 0.05,\n                alignItems: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.025,\n                  width: height * 0.005,\n                  backgroundColor:\n                    currentInitStage === initStage.partTwoLoad\n                      ? 'blue'\n                      : 'black',\n                }}\n              />\n              {currentInitStage === initStage.partTwoLoad ? (\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: height * 0.03,\n                    top: height * 0.01,\n                  }}\n                >\n                  {timeLeft}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partTwo\n                    ? 'blue'\n                    : Colors.black,\n                borderRadius: 50,\n              }}\n            />\n            <View\n              style={{\n                height: height * 0.025,\n                width: height * 0.05,\n                alignItems: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.025,\n                  width: height * 0.005,\n                  backgroundColor:\n                    currentInitStage === initStage.partThreeLoad\n                      ? 'blue'\n                      : Colors.black,\n                }}\n              />\n              {currentInitStage === initStage.partThreeLoad ? (\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: height * 0.03,\n                    top: height * 0.01,\n                  }}\n                >\n                  {timeLeft}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partThree\n                    ? 'blue'\n                    : Colors.black,\n                borderRadius: 50,\n              }}\n            />\n          </View>\n        </View>\n        <View>\n          <UserBlock\n            setSelectedUser={setSelectedUser}\n            setInitResult={setInitResult}\n          />\n          <TextInput\n            value={createdGroupId}\n            onChangeText={setCreatedGroupId}\n            placeholder=\"Group Id\"\n          />\n          <Text>Time Elapsed: {timeElapsed}</Text>\n          <Pressable\n            onPress={() => {\n              if (initResult === loadingStateEnum.notStarted) {\n                initializePauly();\n              }\n            }}\n          >\n            <Text>\n              {initResult === loadingStateEnum.cannotStart\n                ? 'Please Pick a User'\n                : initResult === loadingStateEnum.notStarted\n                ? 'initialize Pauly on New Tenant'\n                : initResult === loadingStateEnum.loading\n                ? `Loading ${timeLeft}`\n                : initResult === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {initTwoResult !== loadingStateEnum.cannotStart ? (\n            <Pressable\n              onPress={() => {\n                initializePaulyFromPartTwo();\n              }}\n            >\n              <Text>\n                {initTwoResult === loadingStateEnum.notStarted\n                  ? 'Start From Part Two'\n                  : initTwoResult === loadingStateEnum.loading\n                  ? 'Loading'\n                  : initTwoResult === loadingStateEnum.success\n                  ? 'Success'\n                  : 'Failed'}\n              </Text>\n            </Pressable>\n          ) : null}\n          {initThreeResult !== loadingStateEnum.cannotStart ? (\n            <View>\n              {addDataArray.map(addData => (\n                <View key={`Add_Data_${addData.id}`}>\n                  {selectedUpdates.includes(addData.id) ? (\n                    <Pressable\n                      style={{\n                        width: width * 0.7,\n                        backgroundColor: Colors.lightGray,\n                      }}\n                      onPress={() => {\n                        const newSelectedUpdates = selectedUpdates;\n                        newSelectedUpdates.filter(e => {\n                          return e !== addData.id;\n                        });\n                        setSelectedUpdates([...newSelectedUpdates]);\n                      }}\n                    >\n                      <View style={{ margin: 5 }}>\n                        <Text>{addData.id}</Text>\n                      </View>\n                    </Pressable>\n                  ) : (\n                    <Pressable\n                      style={{\n                        width: width * 0.7,\n                        backgroundColor: Colors.white,\n                      }}\n                      onPress={() => {\n                        setSelectedUpdates([...selectedUpdates, addData.id]);\n                      }}\n                    >\n                      <View style={{ margin: 5 }}>\n                        <Text>{addData.id}</Text>\n                      </View>\n                    </Pressable>\n                  )}\n                </View>\n              ))}\n              <Pressable\n                onPress={() => {\n                  initializePaulyFromPartThree();\n                }}\n              >\n                <Text>\n                  {initThreeResult === loadingStateEnum.notStarted\n                    ? 'Start From Part Three'\n                    : initThreeResult === loadingStateEnum.loading\n                    ? 'Loading'\n                    : initThreeResult === loadingStateEnum.success\n                    ? 'Success'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n            </View>\n          ) : null}\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction UserBlock({\n  setSelectedUser,\n  setInitResult,\n}: {\n  setSelectedUser: (item: microsoftUserType) => void;\n  setInitResult: (item: loadingStateEnum) => void;\n}) {\n  const [currentUserId, setCurrentUserId] = useState<string>('');\n  const [loadedUsers, setLoadedUsers] = useState<microsoftUserType[]>([]);\n  const [loadUsersResult, setLoadUsersResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [nextLink, setNextLink] = useState<string | undefined>(undefined);\n  const { height } = useSelector((state: RootState) => state.dimentions);\n\n  async function getUserId() {\n    const result = await callMsGraph('https://graph.microsoft.com/v1.0/me');\n    if (result.ok) {\n      const data = await result.json();\n      setCurrentUserId(data.id);\n    }\n  }\n\n  async function getUsers(nextLink?: string) {\n    const result = await callMsGraph(\n      nextLink ||\n        'https://graph.microsoft.com/v1.0/users?$top=10&$select,id,displayName',\n    );\n    if (result.ok) {\n      const data = await result.json();\n      const newUsers: microsoftUserType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        newUsers.push({\n          id: data.value[index].id,\n          displayName: data.value[index].displayName,\n        });\n      }\n      setNextLink(data['@odata.nextLink']);\n      if (nextLink) {\n        setLoadedUsers([...loadedUsers, ...newUsers]);\n      } else {\n        setLoadedUsers(newUsers);\n      }\n      setLoadUsersResult(loadingStateEnum.success);\n    } else {\n      setLoadUsersResult(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getUserId();\n    getUsers();\n  }, []);\n\n  return (\n    <View style={{ height: height * 0.6 }}>\n      {loadUsersResult === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : (\n        <>\n          {loadUsersResult === loadingStateEnum.success ? (\n            <FlatList\n              data={loadedUsers}\n              renderItem={user => (\n                <View key={`User_${user.item.id}`}>\n                  {user.item.id !== currentUserId ? (\n                    <Pressable\n                      onPress={() => {\n                        setSelectedUser(user.item);\n                        setInitResult(loadingStateEnum.notStarted);\n                      }}\n                    >\n                      <View>\n                        <Text>{user.item.displayName}</Text>\n                      </View>\n                    </Pressable>\n                  ) : null}\n                </View>\n              )}\n              onEndReached={() => {\n                if (nextLink !== undefined) {\n                  getUsers(nextLink);\n                }\n              }}\n            />\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { getRooms } from '../../../../Functions/classesFunctions';\n\nexport default function GovernmentRooms() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [roomState, setRoomState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [rooms, setRooms] = useState<roomType[]>([]);\n\n  async function loadData() {\n    const result = await getRooms();\n    setRoomState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRooms(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Rooms</Text>\n      <View>\n        {roomState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {roomState === loadingStateEnum.success ? (\n              <View>\n                {rooms.map(room => (\n                  <View key={`Room_${room.id}`}>\n                    <Text>{room.name}</Text>\n                  </View>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room/create');\n        }}\n      >\n        <Text>Create Room</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput } from 'react-native';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { WarningIcon } from '../../../../UI/Icons/Icons';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport create_UUID from '../../../../Functions/Ultility/createUUID';\n\nexport default function GovermentRoomsCreate() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [createRoomState, setCreateRoomState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const navigate = useNavigate();\n  const [roomName, setRoomName] = useState<string>('');\n\n  async function createRoom() {\n    if (\n      roomName !== '' &&\n      (createRoomState === loadingStateEnum.notStarted ||\n        createRoomState === loadingStateEnum.failed ||\n        createRoomState === loadingStateEnum.success)\n    ) {\n      setCreateRoomState(loadingStateEnum.loading);\n      const id = create_UUID();\n      const items = {\n        fields: {\n          Title: id,\n          roomId: id,\n          roomName,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.roomListId}/items?expand=fields`,\n        'POST',\n        JSON.stringify(items),\n      );\n      if (result.ok) {\n        setCreateRoomState(loadingStateEnum.success);\n      } else {\n        setCreateRoomState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <View\n        style={{\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text>Create Room</Text>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        {roomName === '' ? (\n          <WarningIcon width={14} height={14} outlineColor=\"red\" />\n        ) : null}\n        <TextInput\n          value={roomName}\n          onChangeText={e => {\n            setRoomName(e);\n          }}\n          placeholder=\"Room Name\"\n        />\n      </View>\n      <Pressable\n        onPress={() => {\n          createRoom();\n        }}\n      >\n        <Text>\n          {createRoomState === loadingStateEnum.notStarted\n            ? 'Create Room'\n            : createRoomState === loadingStateEnum.loading\n            ? 'Loading'\n            : createRoomState === loadingStateEnum.success\n            ? 'Room Created'\n            : 'Failed to Create Room'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Button, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport * as Clipboard from 'expo-clipboard';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport { CopyIcon } from '../../../../UI/Icons/Icons';\nimport { RootState } from '../../../../Redux/store';\nimport { Colors } from '../../../../types';\n\nexport default function MicrosoftGraphEditList() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [currentColumns, setCurrentColumns] = useState<listColumnType[]>([]);\n  const { id } = useParams();\n  const [isCoppiedToClipboard, setIsCoppiedToClipboard] =\n    useState<boolean>(false);\n\n  const navigate = useNavigate();\n\n  async function getListItems() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items?expand=fields`,\n    );\n    if (result.ok) {\n      // const data = await result.json();\n    } else {\n    }\n  }\n  async function indexColumn(columnId: string) {\n    const data = {\n      indexed: 'true',\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/columns/${columnId}`,\n      'PATCH',\n      JSON.stringify(data),\n    ); // TO DO fix ids\n    if (result.ok) {\n      const data = await result.json();\n      const newColumnData: listColumnType[] = currentColumns;\n      const index = newColumnData.findIndex(e => {\n        e.id === columnId;\n      });\n      if (index !== -1) {\n        newColumnData[index].indexed = true;\n        setCurrentColumns(newColumnData);\n      } else {\n        // TO DO failed\n      }\n    }\n  }\n  async function getColumns() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/columns`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length !== undefined) {\n        const newCurrentColumns: listColumnType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          newCurrentColumns.push({\n            columnGroup: data.value[index].columnGroup,\n            description: data.value[index].description,\n            displayName: data.value[index].displayName,\n            enforceUniqueValues: data.value[index].enforceUniqueValues,\n            hidden: data.value[index].hidden,\n            id: data.value[index].id,\n            indexed: data.value[index].indexed,\n            name: data.value[index].name,\n            readOnly: data.value[index].readOnly,\n            required: data.value[index].required,\n          });\n        }\n        setCurrentColumns(newCurrentColumns);\n      }\n    } else {\n    }\n  }\n  useEffect(() => {\n    getListItems();\n    getColumns();\n  }, []);\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        width,\n        height,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Pressable onPress={() => navigate('/profile/government/graph/list')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Microsoft Graph Edit List</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>{id}</Text>\n        {isCoppiedToClipboard ? (\n          <Pressable\n            onPress={async () => {\n              await Clipboard.setStringAsync(id);\n            }}\n          >\n            <Text>Copied To Clipboard!</Text>\n          </Pressable>\n        ) : (\n          <Pressable\n            onPress={async () => {\n              await Clipboard.setStringAsync(id);\n              setIsCoppiedToClipboard(true);\n            }}\n          >\n            <CopyIcon width={14} height={14} />\n          </Pressable>\n        )}\n      </View>\n      <View\n        style={{\n          flexDirection: 'row',\n          overflow: 'scroll',\n          height: height * 0.4,\n        }}\n      >\n        {currentColumns.map(item => (\n          <View\n            style={{\n              width: width * 0.3,\n              height: height * 0.4,\n              borderColor: 'black',\n              borderWidth: 2,\n            }}\n          >\n            <Text>{item.displayName}</Text>\n            {item.indexed === false ? (\n              <Button\n                title=\"Index This Propertie\"\n                onPress={() => {\n                  indexColumn(item.id);\n                }}\n              />\n            ) : (\n              <Text>Already Indexed</Text>\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport * as Clipboard from 'expo-clipboard';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport { CopyIcon } from '../../../../UI/Icons/Icons';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getTextState } from '../../../../Functions/Ultility/createUUID';\n\nexport default function MicrosoftGraphEditGroup() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n\n  const { id } = useParams();\n\n  const [isCoppiedToClipboard, setIsCoppiedToClipboard] =\n    useState<boolean>(false);\n  const [groupLoadingState, setGroupLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const [deleteGroupLoadingState, setDeleteGroupLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function getListItems() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      setGroupLoadingState(loadingStateEnum.success);\n    } else {\n      setGroupLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  async function deleteGroup() {\n    setDeleteGroupLoadingState(loadingStateEnum.loading);\n    const deleteGroupResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}`,\n      'DELETE',\n    );\n    if (deleteGroupResult.ok) {\n      setDeleteGroupLoadingState(loadingStateEnum.success);\n    } else {\n      setDeleteGroupLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getListItems();\n  }, []);\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        height,\n        width,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to=\"/profile/government/graph/group\">\n        <Text>Back</Text>\n      </Link>\n      <Text>MicrosoftGraphEditList</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>{id}</Text>\n        {id !== undefined ? (\n          <>\n            {isCoppiedToClipboard ? (\n              <Pressable\n                onPress={async () => {\n                  await Clipboard.setStringAsync(id);\n                }}\n              >\n                <Text>Copied To Clipboard!</Text>\n              </Pressable>\n            ) : (\n              <Pressable\n                onPress={async () => {\n                  await Clipboard.setStringAsync(id);\n                  setIsCoppiedToClipboard(true);\n                }}\n              >\n                <CopyIcon width={14} height={14} />\n              </Pressable>\n            )}\n          </>\n        ) : null}\n      </View>\n      <Pressable\n        onPress={() => {\n          deleteGroup();\n        }}\n      >\n        <Text>\n          {getTextState(deleteGroupLoadingState, {\n            notStarted: 'Delete Group',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/Ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getTextState } from '../../../../Functions/Ultility/createUUID';\n\nexport default function MicrosoftGraphEditExtension() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { mode, id } = useParams();\n\n  const [extensionLoadingState, setExtensionLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [deleteExtensionLoadingState, setDeleteExtensionLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const [extensionDescription, setExtensionDescription] = useState<string>('');\n\n  async function getExtension() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/schemaExtensions?$filter=id%20eq%20'${id}'`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length === 1) {\n        setExtensionDescription(data.value[0].description);\n        setExtensionLoadingState(loadingStateEnum.success);\n      } else {\n        setExtensionLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setExtensionLoadingState(loadingStateEnum.failed);\n    }\n  }\n  async function deleteExtension() {\n    if (\n      deleteExtensionLoadingState === loadingStateEnum.notStarted ||\n      deleteExtensionLoadingState === loadingStateEnum.failed\n    ) {\n      setDeleteExtensionLoadingState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/schemaExtensions/${id}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        setDeleteExtensionLoadingState(loadingStateEnum.success);\n      } else {\n        setDeleteExtensionLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        height,\n        width,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to={`/profile/government/graph/${mode}`}>\n        <Text>Back</Text>\n      </Link>\n      <Text>MicrosoftGraphEditExtension</Text>\n      <View />\n      <Pressable\n        onPress={() => {\n          deleteExtension();\n        }}\n      >\n        <Text>\n          {getTextState(deleteExtensionLoadingState, {\n            notStarted: 'Delete Extension',\n            success: 'Successfully Deleted Extension',\n            failed: 'Failed To Delete Extension',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View } from 'react-native';\nimport React from 'react';\nimport { useParams } from 'react-router-native';\nimport MicrosoftGraphEditList from './MicrosoftGraphEditList';\nimport MicrosoftGraphEditGroup from './MicrosoftGraphEditGroup';\nimport MicrosoftGraphEditExtension from './MicrosoftGraphEditExtension';\n\nexport default function MicrosoftGraphEdit() {\n  const { mode } = useParams();\n  return (\n    <View>\n      {mode === 'list' ? <MicrosoftGraphEditList /> : null}\n      {mode === 'group' ? <MicrosoftGraphEditGroup /> : null}\n      {mode === 'extension' ? <MicrosoftGraphEditExtension /> : null}\n    </View>\n  );\n}\n","import { View, Text, Pressable, Switch, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-native';\nimport store, { RootState } from '../../../Redux/store';\nimport callMsGraph from '../../../Functions/Ultility/microsoftAssets';\nimport { Colors, loadingStateEnum, resourceResponce } from '../../../types';\nimport ProgressView from '../../../UI/ProgressView';\nimport getResource from '../../../Functions/getResources';\n\ntype resourceGroupType = {\n  name: string;\n  id: string;\n  error: boolean;\n  channels: channelType[];\n};\n\nfunction ChannelBlock({\n  group,\n  groups,\n  groupIndex,\n  setGroups,\n  selectedGroup,\n  channel,\n  channelIndex,\n}: {\n  group: resourceGroupType;\n  groups: resourceGroupType[];\n  groupIndex: number;\n  setGroups: (item: resourceGroupType[]) => void;\n  selectedGroup: string;\n  channel: channelType;\n  channelIndex: number;\n}) {\n  const [isSelected, setIsSelected] = useState<boolean>(\n    group.channels[channelIndex].selected,\n  );\n  const [isLoading, setIsLoading] = useState<boolean>(\n    group.channels[channelIndex].loading,\n  );\n\n  async function addChannel() {\n    const data = {\n      fields: {\n        resourceGroupId: group.id,\n        resourceConversationId: channel.id,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.resourceListId}/items`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const outGroups: resourceGroupType[] = groups;\n      outGroups[groupIndex].channels[channelIndex].selected = true;\n      outGroups[groupIndex].channels[channelIndex].loading = false;\n      setGroups(outGroups);\n      setIsSelected(true);\n      setIsLoading(false);\n    } else {\n      const outGroups: resourceGroupType[] = groups;\n      outGroups[groupIndex].channels[channelIndex].loading = false;\n      setGroups(outGroups);\n      setIsLoading(false);\n    }\n  }\n\n  async function removeChannel() {\n    const itemResult = await getResource(group.id, channel.id);\n    if (\n      itemResult.result === resourceResponce.found &&\n      itemResult.itemId !== undefined\n    ) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.resourceListId}/items/${\n          itemResult.itemId\n        }`,\n        'DELETE',\n      );\n      if (result.ok) {\n        const outGroups: resourceGroupType[] = groups;\n        outGroups[groupIndex].channels[channelIndex].selected = false;\n        outGroups[groupIndex].channels[channelIndex].loading = false;\n        setGroups(outGroups);\n        setIsSelected(false);\n        setIsLoading(false);\n      } else {\n        const outGroups: resourceGroupType[] = groups;\n        outGroups[groupIndex].channels[channelIndex].loading = false;\n        setGroups(outGroups);\n        setIsLoading(false);\n      }\n    } else {\n      const outGroups: resourceGroupType[] = groups;\n      outGroups[groupIndex].channels[channelIndex].loading = false;\n      setGroups(outGroups);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <View\n      key={`Team_${group.id}Channel_${channel.id}`}\n      style={{ flexDirection: 'row' }}\n    >\n      {isLoading ? (\n        <ProgressView width={12} height={12} />\n      ) : (\n        <View>\n          {selectedGroup === group.id ? (\n            <Switch\n              trackColor={{ false: '#767577', true: '#81b0ff' }}\n              thumbColor={isSelected ? '#f5dd4b' : '#f4f3f4'}\n              ios_backgroundColor=\"#3e3e3e\"\n              onValueChange={e => {\n                const outGroups: resourceGroupType[] = groups;\n                outGroups[groupIndex].channels[channelIndex].loading = true;\n                setGroups(outGroups);\n                setIsLoading(true);\n                if (e === true) {\n                  addChannel();\n                } else {\n                  removeChannel();\n                }\n              }}\n              value={isSelected}\n            />\n          ) : (\n            <View\n              style={{\n                height: 12,\n                width: 12,\n                borderRadius: 50,\n                backgroundColor: channel.selected ? 'green' : 'blue',\n              }}\n            />\n          )}\n        </View>\n      )}\n      <Text>{channel.displayName}</Text>\n    </View>\n  );\n}\n\nfunction GroupBlock({\n  group,\n  groups,\n  groupIndex,\n  setGroups,\n  selectedGroup,\n  setSelectedGroup,\n}: {\n  group: resourceGroupType;\n  groups: resourceGroupType[];\n  groupIndex: number;\n  setGroups: (item: resourceGroupType[]) => void;\n  selectedGroup: string;\n  setSelectedGroup: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <Pressable\n      key={`Team_${group.id}`}\n      onPress={() => {\n        setSelectedGroup(group.id);\n      }}\n    >\n      <View\n        style={{\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n          marginLeft: width * 0.03,\n          marginRight: width * 0.03,\n          marginTop: height * 0.02,\n          marginBottom: height * 0.02,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          <Text>{group.name}</Text>\n          <Text>Channels</Text>\n          {group.channels !== undefined ? (\n            <View>\n              {group.channels.map((channel, channelIndex) => (\n                <ChannelBlock\n                  group={group}\n                  groups={groups}\n                  groupIndex={groupIndex}\n                  setGroups={setGroups}\n                  selectedGroup={selectedGroup}\n                  channel={channel}\n                  channelIndex={channelIndex}\n                />\n              ))}\n            </View>\n          ) : (\n            <Text>An Error Occurred: Could not get channels</Text>\n          )}\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nexport default function GovernmentResources() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [groups, setGroups] = useState<resourceGroupType[]>([]);\n  const [selectedGroup, setSelectedGroup] = useState<string>('');\n  const [getTeamsState, setGetTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  async function getTeams() {\n    const result = await callMsGraph(\n      \"https://graph.microsoft.com/v1.0/groups?$filter=resourceProvisioningOptions/Any(x:x eq 'Team')\",\n    );\n    if (!result.ok) {\n      setGetTeamsState(loadingStateEnum.failed);\n      return;\n    }\n    const data = await result.json();\n    const resultGroups: resourceGroupType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const getResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/teams/${data.value[index].id}/allChannels`,\n      );\n      const channelResult: channelType[] = [];\n      if (getResult.ok) {\n        const getResultData = await getResult.json();\n        for (\n          let indexResult = 0;\n          indexResult < getResultData.value.length;\n          indexResult += 1\n        ) {\n          const channelGetResult = await getResource(\n            data.value[index].id,\n            getResultData.value[indexResult].id,\n          );\n          channelResult.push({\n            id: getResultData.value[indexResult].id,\n            selected: channelGetResult.result === resourceResponce.found,\n            loading: false,\n            displayName: getResultData.value[indexResult].displayName,\n            error: channelGetResult.result === resourceResponce.failed,\n          });\n        }\n      } else {\n        setGetTeamsState(loadingStateEnum.failed);\n        return;\n      }\n      resultGroups.push({\n        name: data.value[index].displayName,\n        id: data.value[index].id,\n        error: !!getResult.ok,\n        channels: channelResult,\n      });\n    }\n    setGetTeamsState(loadingStateEnum.success);\n    setGroups(resultGroups);\n  }\n  async function updateResources() {}\n  useEffect(() => {\n    getTeams();\n  }, []);\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Link to=\"/profile/government\">\n          <Text>Back</Text>\n        </Link>\n        <Text>GovernmentResources</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.9 }}>\n        {getTeamsState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {getTeamsState === loadingStateEnum.success ? (\n              <View>\n                {groups.map((group, groupIndex) => (\n                  <GroupBlock\n                    group={group}\n                    groupIndex={groupIndex}\n                    groups={groups}\n                    selectedGroup={selectedGroup}\n                    setGroups={setGroups}\n                    setSelectedGroup={setSelectedGroup}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n","import { View, Text, Pressable, ViewStyle } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport create_UUID from '../Functions/Ultility/createUUID';\nimport { Colors } from '../types';\n\nexport default function ListItem({\n  to,\n  title,\n  width,\n  caption,\n  onPress,\n  style,\n}: {\n  title: string;\n  width: number;\n  caption?: string;\n  to?: string;\n  onPress?: () => void;\n  style?: ViewStyle;\n}) {\n  const navigate = useNavigate();\n  return (\n    <Pressable\n      onPress={() => {\n        if (to !== undefined) {\n          navigate(to);\n        }\n        if (onPress !== undefined) {\n          onPress();\n        }\n      }}\n      key={create_UUID()}\n      style={[\n        {\n          shadowColor: Colors.black,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n          marginLeft: width * 0.03,\n          marginRight: width * 0.03,\n        },\n        style,\n      ]}\n    >\n      <View style={{ margin: 10 }}>\n        <Text style={{ fontSize: 16 }}>{title}</Text>\n        {caption !== undefined ? (\n          <Text style={{ fontSize: 12 }}>{caption}</Text>\n        ) : null}\n      </View>\n    </Pressable>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../Ultility/microsoftAssets';\n\nexport default async function getDressCodeData(): Promise<{\n  result: loadingStateEnum;\n  data?: dressCodeType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeName,dressCodeId,dressCodeData)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newDressCodes: dressCodeType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      try {\n        newDressCodes.push({\n          name: data.value[index].fields.dressCodeName,\n          id: data.value[index].fields.dressCodeId,\n          listId: data.value[index].id,\n          dressCodeData: JSON.parse(data.value[index].fields.dressCodeData),\n          dressCodeIncentives: [],\n        });\n      } catch {\n        continue;\n      }\n    }\n    return { result: loadingStateEnum.success, data: newDressCodes };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport ListItem from '../../../../../UI/ListItem';\nimport getDressCodeData from '../../../../../Functions/homepage/getDressCodeData';\n\nexport default function GovernmentDressCode() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [getDressCodeState, setGetDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [dressCodes, setDressCodes] = useState<dressCodeType[]>([]);\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getDressCodeData();\n    setGetDressCodeState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setDressCodes(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government/calendar')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n        Dress Codes\n      </Text>\n      <View>\n        {getDressCodeState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {getDressCodeState === loadingStateEnum.success ? (\n              <View>\n                {dressCodes.map(dressCode => (\n                  <ListItem\n                    key={dressCode.id}\n                    to={`/profile/government/calendar/dresscode/${dressCode.id}`}\n                    title={dressCode.name}\n                    width={width}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate('/profile/government/calendar/dresscode/create')\n        }\n      >\n        <Text>Create Dress Code</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Pressable, View, Text, TextInput } from 'react-native';\nimport React from 'react';\nimport { RootState } from '../../../../../Redux/store';\nimport {\n  CloseIcon,\n  DownIcon,\n  UpIcon,\n  WarningIcon,\n} from '../../../../../UI/Icons/Icons';\n\nexport default function DressCodeBlock({\n  dressCode,\n  index,\n  dressCodeData,\n  setDressCodeData,\n  selectedDressCodeId,\n  setSelectedDressCodeId,\n}: {\n  dressCode: dressCodeDataType;\n  index: number;\n  dressCodeData: dressCodeDataType[];\n  setDressCodeData: (item: dressCodeDataType[]) => void;\n  selectedDressCodeId: string;\n  setSelectedDressCodeId: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <Pressable\n      onPress={() => {\n        setSelectedDressCodeId(dressCode.id);\n      }}\n      style={{\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n        marginLeft: width * 0.03,\n        marginRight: width * 0.03,\n        marginTop: height * 0.02,\n        marginBottom: height * 0.02,\n      }}\n    >\n      <View style={{ margin: 10, flexDirection: 'row' }}>\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            {dressCode.name === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>\n              Name: {selectedDressCodeId === dressCode.id ? '' : dressCode.name}\n            </Text>\n            {selectedDressCodeId === dressCode.id ? (\n              <TextInput\n                placeholder=\"Dress Code Name\"\n                value={dressCode.name}\n                onChangeText={e => {\n                  const newDressCodeData = dressCodeData;\n                  newDressCodeData[index].name = e;\n                  setDressCodeData([...newDressCodeData]);\n                }}\n              />\n            ) : null}\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {dressCode.description === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>\n              Description:{' '}\n              {selectedDressCodeId === dressCode.id\n                ? ''\n                : dressCode.description}\n            </Text>\n            {selectedDressCodeId === dressCode.id ? (\n              <TextInput\n                placeholder=\"Dress Code Description\"\n                value={dressCode.description}\n                onChangeText={e => {\n                  const newDressCodeData = dressCodeData;\n                  newDressCodeData[index].description = e;\n                  setDressCodeData([...newDressCodeData]);\n                }}\n              />\n            ) : null}\n          </View>\n        </View>\n        <View>\n          <UpIcon width={14} height={14} />\n          <DownIcon width={14} height={14} />\n          <CloseIcon width={14} height={14} />\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n","import { View, Text, TextInput, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-native';\nimport store, { RootState } from '../../../../../Redux/store';\nimport create_UUID from '../../../../../Functions/Ultility/createUUID';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport DressCodeBlock from './DressCodeBlock';\nimport { createDressCode } from '../../../../../Functions/calendar/calendarFunctionsGraph';\nimport getDressCode from '../../../../../Functions/homepage/getDressCode';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport callMsGraph from '../../../../../Functions/Ultility/microsoftAssets';\n\nexport default function GovernmentDressCodeEdit() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [dressCodeName, setDressCodeName] = useState<string>('');\n  const [dressCodeData, setDressCodeData] = useState<dressCodeDataType[]>([\n    { name: '', description: '', id: create_UUID() },\n  ]);\n  const [selectedDressCodeId, setSelectedDressCodeId] = useState<string>('');\n  const [dressCodeListId, setDressCodeListId] = useState<string>('');\n\n  const [createDressCodeState, setCreateDressCodeState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const navigate = useNavigate();\n\n  async function loadCreateDressCode() {\n    const result = await createDressCode(dressCodeName, dressCodeData);\n    setCreateDressCodeState(result);\n  }\n\n  const { id } = useParams();\n\n  const [getDressCodeState, setDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [isCreatingDressCode, setIsCreatingDressCode] =\n    useState<boolean>(false);\n  const [deleteDressCodeState, setDeleteDressCodeState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function deleteDressCode() {\n    setDeleteDressCodeState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.dressCodeListId\n      }/items/${dressCodeListId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n      setDeleteDressCodeState(loadingStateEnum.success);\n    } else {\n      setDeleteDressCodeState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadData() {\n    if (id !== undefined && id !== 'create') {\n      const result = await getDressCode(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setDressCodeListId(result.data.listId);\n        setDressCodeName(result.data.name);\n        setDressCodeData(result.data.dressCodeData);\n        setIsCreatingDressCode(false);\n        setDressCodeState(loadingStateEnum.success);\n      } else {\n        setDressCodeState(loadingStateEnum.failed);\n      }\n    } else if (id === 'create') {\n      setIsCreatingDressCode(true);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, [id]);\n\n  return (\n    <>\n      {isCreatingDressCode || getDressCodeState === loadingStateEnum.success ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() => navigate('/profile/government/calendar/dresscode')}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <Text>Create Dress Code</Text>\n          <Text>Dress Code Name:</Text>\n          <TextInput\n            value={dressCodeName}\n            onChangeText={setDressCodeName}\n            placeholder=\"Dress Code Name\"\n          />\n          <ScrollView style={{ height: height * 0.7 }}>\n            {dressCodeData.map((dressCode, index) => (\n              <DressCodeBlock\n                dressCode={dressCode}\n                dressCodeData={dressCodeData}\n                index={index}\n                setDressCodeData={setDressCodeData}\n                selectedDressCodeId={selectedDressCodeId}\n                setSelectedDressCodeId={setSelectedDressCodeId}\n              />\n            ))}\n          </ScrollView>\n          <Pressable\n            onPress={() => {\n              setDressCodeData([\n                ...dressCodeData,\n                { name: '', description: '', id: create_UUID() },\n              ]);\n            }}\n          >\n            <Text>Add</Text>\n          </Pressable>\n          <Pressable onPress={() => loadCreateDressCode()}>\n            <Text>\n              {createDressCodeState === loadingStateEnum.notStarted\n                ? 'Create Dress Code'\n                : createDressCodeState === loadingStateEnum.loading\n                ? 'Loading'\n                : createDressCodeState === loadingStateEnum.success\n                ? 'Created Dress Code'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {!isCreatingDressCode ? (\n            <Pressable style={{ margin: 10 }} onPress={() => deleteDressCode()}>\n              <Text>\n                {deleteDressCodeState === loadingStateEnum.notStarted\n                  ? 'Delete'\n                  : deleteDressCodeState === loadingStateEnum.loading\n                  ? 'Loading'\n                  : deleteDressCodeState === loadingStateEnum.success\n                  ? 'Success'\n                  : 'Failed'}\n              </Text>\n            </Pressable>\n          ) : null}\n        </View>\n      ) : (\n        <>\n          {getDressCodeState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Pressable\n                onPress={() =>\n                  navigate('/profile/government/calendar/dresscode')\n                }\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              <Pressable\n                onPress={() =>\n                  navigate('/profile/government/calendar/dresscode')\n                }\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import {\n  View,\n  Text,\n  TextInput,\n  Button,\n  Pressable,\n  ScrollView,\n} from 'react-native';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../../Functions/Ultility/microsoftAssets';\nimport create_UUID from '../../../../../Functions/Ultility/createUUID';\nimport { DownIcon, UpIcon, WarningIcon } from '../../../../../UI/Icons/Icons';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport { RootState } from '../../../../../Redux/store';\nimport getDressCodeData from '../../../../../Functions/homepage/getDressCodeData';\nimport ListItem from '../../../../../UI/ListItem';\nimport { getSchedules } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\n// TO DO longest amount of school days is 20 make sure this is enforced\nexport default function GovernmentTimetableEdit() {\n  const { timetablesListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n\n  // Loading States\n  const [dressCodeState, setDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [createTimetableLoadingState, setCreateTimetableLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  // New Table Data\n  const [timetableName, setTimetableName] = useState<string>('');\n  const [selectedSchedules, setSelectedSchedules] = useState<scheduleType[]>(\n    [],\n  );\n  const [dressCodes, setDressCodes] = useState<dressCodeType[]>([]);\n  const [selectedDressCode, setSelectedDressCode] = useState<\n    dressCodeType | undefined\n  >(undefined);\n  const [schoolDays, setSchoolDays] = useState<schoolDayType[]>([]);\n  const [selectedDefaultSchedule, setSelectedDefaultSchedule] = useState<\n    scheduleType | undefined\n  >(undefined);\n\n  async function createTimetable() {\n    if (\n      selectedDefaultSchedule !== undefined &&\n      selectedDressCode !== undefined\n    ) {\n      // Check to make sure all have the same number of periods\n      for (let index = 0; index < selectedSchedules.length; index += 1) {\n        if (\n          selectedSchedules[index].periods.length !==\n          selectedDefaultSchedule.periods.length\n        ) {\n          setCreateTimetableLoadingState(loadingStateEnum.failed);\n          return;\n        }\n      }\n\n      // Create Timetable\n      setCreateTimetableLoadingState(loadingStateEnum.loading);\n      const scheduals = [];\n      for (let index = 0; index < selectedSchedules.length; index += 1) {\n        scheduals.push(selectedSchedules[index].id);\n      }\n      const data = {\n        fields: {\n          Title: timetableName,\n          timetableName,\n          timetableId: create_UUID(),\n          timetableDataSchedules: JSON.stringify(scheduals),\n          timetableDataDays: JSON.stringify(schoolDays),\n          timetableDefaultScheduleId: selectedDefaultSchedule.id,\n          timetableDressCodeId: selectedDressCode.id,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${timetablesListId}/items?expand=fields`,\n        'POST',\n        JSON.stringify(data),\n      ); // TO DO fix site id\n      if (result.ok) {\n        setCreateTimetableLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTimetableLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function getDressCodes() {\n    const result = await getDressCodeData();\n    setDressCodeState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setDressCodes(result.data);\n    }\n  }\n\n  useEffect(() => {\n    getDressCodes();\n  }, []);\n  return (\n    <View\n      style={{\n        height,\n        width,\n        overflow: 'scroll',\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to=\"/profile/government/calendar/timetable/\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Create Timetable</Text>\n      <View style={{ backgroundColor: '#FF6700', borderRadius: 15, margin: 5 }}>\n        <View style={{ margin: 10 }}>\n          <Text>\n            Warning: because of the way that timetables work some properties\n            cannot be edited.\n          </Text>\n          <Text>The dress code you pick cannot change</Text>\n          <Text>\n            Schedules can be added but they have to have the same number of\n            periods\n          </Text>\n          <Text>\n            The number of days in a schedule cannot go up or down only the order\n            and the name can be changed\n          </Text>\n        </View>\n      </View>\n      <View>\n        <TextInput\n          value={timetableName}\n          onChangeText={e => {\n            setTimetableName(e);\n          }}\n          placeholder=\"Timetable Name\"\n        />\n      </View>\n      <ScheduleBlock\n        selectedSchedules={selectedSchedules}\n        setSelectedSchedules={setSelectedSchedules}\n        selectedDefaultSchedule={selectedDefaultSchedule}\n        setSelectedDefaultSchedule={setSelectedDefaultSchedule}\n      />\n      <SchoolDays\n        height={height}\n        schoolDays={schoolDays}\n        setSchoolDays={setSchoolDays}\n      />\n      <Text>Dress Codes</Text>\n      <View>\n        {dressCodeState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {dressCodeState === loadingStateEnum.success ? (\n              <View>\n                {dressCodes.map(dressCode => (\n                  <ListItem\n                    title={dressCode.name}\n                    width={width * 0.8}\n                    onPress={() => {\n                      setSelectedDressCode(dressCode);\n                    }}\n                    style={{\n                      backgroundColor:\n                        selectedDressCode?.id === dressCode.id\n                          ? 'blue'\n                          : Colors.white,\n                    }}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Button\n        title={\n          createTimetableLoadingState === loadingStateEnum.notStarted\n            ? 'Create Timetable'\n            : createTimetableLoadingState === loadingStateEnum.loading\n            ? 'Loading'\n            : createTimetableLoadingState === loadingStateEnum.success\n            ? 'Success'\n            : 'Failed'\n        }\n        onPress={() => {\n          if (createTimetableLoadingState === loadingStateEnum.notStarted) {\n            createTimetable();\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nfunction SchoolDays({\n  height,\n  schoolDays,\n  setSchoolDays,\n}: {\n  height: number;\n  schoolDays: schoolDayType[];\n  setSchoolDays: (item: schoolDayType[]) => void;\n}) {\n  return (\n    <View>\n      <Text>School Days</Text>\n      <ScrollView style={{ height: height * 0.2 }}>\n        {schoolDays.map((item, index) => (\n          <SchoolDayItem\n            item={item}\n            index={index}\n            schoolDays={schoolDays}\n            setSchoolDays={setSchoolDays}\n          />\n        ))}\n      </ScrollView>\n      <Button\n        title=\"Add\"\n        onPress={() => {\n          setSchoolDays([\n            ...schoolDays,\n            {\n              name: '',\n              shorthand: '',\n              id: create_UUID(),\n              order:\n                schoolDays.length === 0\n                  ? 0\n                  : schoolDays[schoolDays.length - 1].order + 1,\n            },\n          ]);\n        }}\n      />\n    </View>\n  );\n}\n\nfunction SchoolDayItem({\n  item,\n  index,\n  schoolDays,\n  setSchoolDays,\n}: {\n  item: schoolDayType;\n  index: number;\n  schoolDays: schoolDayType[];\n  setSchoolDays: (item: schoolDayType[]) => void;\n}) {\n  const [selected, setSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      style={{ flexDirection: 'row' }}\n      onHoverIn={() => {\n        setSelected(true);\n      }}\n      onHoverOut={() => {\n        setSelected(false);\n      }}\n    >\n      <View style={{ margin: 10, flexDirection: 'row' }}>\n        <View style={{ marginRight: 'auto' }}>\n          <View style={{ flexDirection: 'row' }}>\n            {item.name === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>Name: </Text>\n            {selected ? (\n              <TextInput\n                value={item.name}\n                onChangeText={e => {\n                  const newSchoolDays = schoolDays;\n                  newSchoolDays[index].name = e;\n                  setSchoolDays([...newSchoolDays]);\n                }}\n              />\n            ) : (\n              <Text>{item.name}</Text>\n            )}\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {item.shorthand === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>Shorthand: </Text>\n            {selected ? (\n              <TextInput\n                maxLength={1}\n                value={item.shorthand}\n                onChangeText={e => {\n                  const newSchoolDays = schoolDays;\n                  newSchoolDays[index].shorthand = e;\n                  setSchoolDays([...newSchoolDays]);\n                }}\n              />\n            ) : (\n              <Text>{item.shorthand}</Text>\n            )}\n          </View>\n        </View>\n        <View>\n          {item.order !== 0 ? (\n            <Pressable\n              onPress={() => {\n                const newSchoolDays = schoolDays;\n                newSchoolDays[index].order = newSchoolDays[index].order - 1;\n                newSchoolDays[index - 1].order =\n                  newSchoolDays[index - 1].order + 1;\n                const saveCurrent = newSchoolDays[index];\n                newSchoolDays[index] = newSchoolDays[index - 1];\n                newSchoolDays[index - 1] = saveCurrent;\n                setSchoolDays([...newSchoolDays]);\n              }}\n            >\n              <UpIcon width={10} height={10} />\n            </Pressable>\n          ) : null}\n          {item.order + 1 < schoolDays.length ? (\n            <Pressable\n              onPress={() => {\n                const newSchoolDays = schoolDays;\n                newSchoolDays[index].order = newSchoolDays[index].order + 1;\n                newSchoolDays[index + 1].order =\n                  newSchoolDays[index + 1].order - 1;\n                const saveCurrent = newSchoolDays[index];\n                newSchoolDays[index] = newSchoolDays[index + 1];\n                newSchoolDays[index + 1] = saveCurrent;\n                setSchoolDays([...newSchoolDays]);\n              }}\n            >\n              <DownIcon width={10} height={10} />\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => {\n              const newSchoolDays = schoolDays;\n              newSchoolDays.splice(index, 1);\n              setSchoolDays([...newSchoolDays]);\n            }}\n          >\n            <Text>X</Text>\n          </Pressable>\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nfunction ScheduleBlock({\n  selectedSchedules,\n  setSelectedSchedules,\n  selectedDefaultSchedule,\n  setSelectedDefaultSchedule,\n}: {\n  selectedSchedules: scheduleType[];\n  setSelectedSchedules: (item: scheduleType[]) => void;\n  selectedDefaultSchedule: scheduleType | undefined;\n  setSelectedDefaultSchedule: (item: scheduleType) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [loadedSchedules, setLoadedSchedules] = useState<scheduleType[]>([]);\n  const [scheduleState, setScheduleState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  async function loadSchedules() {\n    const result = await getSchedules();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setLoadedSchedules(result.data);\n    }\n    setScheduleState(result.result);\n  }\n  useEffect(() => {\n    loadSchedules();\n  }, []);\n  return (\n    <View>\n      <Text>Scheduals</Text>\n      <Text>Selected Schedules</Text>\n      <ScrollView style={{ height: height * 0.4 }}>\n        {selectedSchedules.map(item => (\n          <View\n            style={{ height: height * 0.03 + 16 }}\n            key={`SelectedSchedule_${item.id}`}\n          >\n            <Text>{item.properName}</Text>\n            {selectedDefaultSchedule?.id !== item.id ? (\n              <Pressable\n                onPress={() => {\n                  setSelectedDefaultSchedule(item);\n                }}\n                style={{ backgroundColor: 'blue', height: 16 }}\n              >\n                <Text>Select As Default</Text>\n              </Pressable>\n            ) : null}\n          </View>\n        ))}\n      </ScrollView>\n      <View style={{ alignItems: 'center' }}>\n        <Text>Other Schedules</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.4 }}>\n        {scheduleState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : null}\n        {scheduleState === loadingStateEnum.failed ? <Text>Failed</Text> : null}\n        {scheduleState === loadingStateEnum.success ? (\n          <>\n            {loadedSchedules.map((item, index) => (\n              <>\n                {selectedSchedules.length <= 0 ? (\n                  <Pressable\n                    key={`Timetable_${item.id}_${create_UUID()}`}\n                    onPress={() => {\n                      setSelectedSchedules([...selectedSchedules, item]);\n                      const newLoadedSchedules = loadedSchedules.filter(e => {\n                        return e.id !== item.id;\n                      });\n                      setLoadedSchedules([...newLoadedSchedules]);\n                      if (selectedDefaultSchedule === undefined) {\n                        setSelectedDefaultSchedule(item);\n                      }\n                    }}\n                  >\n                    <Text>{item.properName}</Text>\n                  </Pressable>\n                ) : (\n                  <>\n                    {selectedSchedules[0].periods.length ===\n                    item.periods.length ? (\n                      <Pressable\n                        key={`Timetable_${item.id}_${create_UUID()}`}\n                        onPress={() => {\n                          setSelectedSchedules([...selectedSchedules, item]);\n                          const newLoadedSchedules = loadedSchedules.filter(\n                            e => {\n                              return e.id !== item.id;\n                            },\n                          );\n                          setLoadedSchedules([...newLoadedSchedules]);\n                          if (selectedDefaultSchedule === undefined) {\n                            setSelectedDefaultSchedule(item);\n                          }\n                        }}\n                      >\n                        <Text>{item.properName}</Text>\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              </>\n            ))}\n          </>\n        ) : null}\n      </ScrollView>\n    </View>\n  );\n}\n","import { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { useMsal } from '@azure/msal-react';\nimport {\n  revokeAsync,\n  DiscoveryDocument,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport React from 'react';\nimport { Text, Platform, Pressable } from 'react-native';\nimport store from '../../Redux/store';\nimport { authenticationTokenSlice } from '../../Redux/reducers/authenticationTokenReducer';\nimport { tenantId } from '../../PaulyConfig';\nimport { Colors } from '../../types';\n\nexport default function ProfileBlock() {\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => signOut()}\n      style={{\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        margin: 5,\n        borderRadius: 15,\n      }}\n    >\n      <Text numberOfLines={1} style={{ fontSize: 20, margin: 10 }}>\n        Sign Out\n      </Text>\n    </Pressable>\n  );\n}\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n","import { loadingStateEnum } from '../types';\nimport { studentSearchSlice } from '../Redux/reducers/studentSearchReducer';\nimport store from '../Redux/store';\nimport largeBatch from './Ultility/batchRequest';\nimport callMsGraph from './Ultility/microsoftAssets';\n\nfunction checkIfStudent(role: string): {\n  result: boolean;\n  grade?: '9' | '10' | '11' | '12';\n} {\n  if (role.length >= 20) {\n    const reversed = role.split('').reverse().join('');\n    const slice = reversed.slice(0, 15);\n    if (slice === 'ac.sredasurcog@') {\n      const getMonth = new Date().getMonth();\n      let schoolYear = new Date().getFullYear();\n      if (schoolYear.toString().length >= 4) {\n        if (getMonth > 6) {\n          schoolYear += 1;\n        }\n        const reverseYearTwelve = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearEleven = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearTen = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearNine = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        if (reversed.slice(16, 17) === reverseYearTwelve) {\n          return { result: true, grade: '12' };\n        }\n        if (reversed.slice(16, 17) === reverseYearEleven) {\n          return { result: true, grade: '11' };\n        }\n        if (reversed.slice(16, 17) === reverseYearTen) {\n          return { result: true, grade: '10' };\n        }\n        if (reversed.slice(16, 17) === reverseYearNine) {\n          return { result: true, grade: '9' };\n        }\n        return { result: false };\n      }\n      return { result: false };\n    }\n    return { result: false };\n  }\n  return { result: false };\n}\n\nexport async function getUsers(url?: string, search?: string) {\n  const filter = search ? `&$search=\"displayName:${search}\"` : '';\n\n  const result = await callMsGraph(\n    url ||\n      `https://graph.microsoft.com/v1.0/users?$select=displayName,id,mail${filter}`,\n    'GET',\n    undefined,\n    search ? [{ key: 'ConsistencyLevel', value: 'eventual' }] : undefined,\n  );\n  if (result.ok) {\n    // Getting user Ids from result\n    const data = await result.json();\n    const userIds: string[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      userIds.push(data.value[index].id);\n    }\n\n    // Getting selected user images from student files list in a batch request.\n    const batchResult = await largeBatch(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.studentFilesListId\n      }/items?$expand=fields&$filter=fields/userId%20eq%20'`,\n      secondUrl: \"'%20and%20fields/selected%20eq%20true\",\n      method: 'GET',\n      keys: { array: userIds },\n    });\n    const imagesIdsMap = new Map<string, string>(); // Key is userId, value is image data id\n    const imageIdsArray: string[] = [];\n    if (\n      batchResult.result === loadingStateEnum.success &&\n      batchResult.data !== undefined\n    ) {\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResult.data.length;\n        batchIndex += 1\n      ) {\n        if (batchResult.data[batchIndex].status === 200) {\n          // TO DO OK\n          if (batchResult.data[batchIndex].body.value.length === 1) {\n            // Checking to make suare only one item is selected\n            imagesIdsMap.set(\n              batchResult.data[batchIndex].body.value[0].fields.userId,\n              batchResult.data[batchIndex].body.value[0].fields.itemId,\n            );\n            imageIdsArray.push(\n              batchResult.data[batchIndex].body.value[0].fields.itemId,\n            );\n          }\n        } else {\n          // Batch Response Failed\n          store.dispatch(\n            studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n          );\n          return;\n        }\n      }\n    } else {\n      // Batch Failed\n      store.dispatch(\n        studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n      );\n      return;\n    }\n\n    // Getting downloadUrls for images\n    const batchResultDownloadUrls = await largeBatch(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/drive/items/`,\n      secondUrl: '?$expand=thumbnails($select=c300x400_crop)&$select=id', // ?select=id,content.downloadUrl\n      method: 'GET',\n      keys: { array: imageIdsArray },\n    });\n    const imagesDownloadUrls = new Map<string, string>(); // Key is the item id on the sharepoint and value is the downlad url\n    if (\n      batchResultDownloadUrls.result === loadingStateEnum.success &&\n      batchResultDownloadUrls.data !== undefined\n    ) {\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultDownloadUrls.data.length;\n        batchIndex += 1\n      ) {\n        if (batchResultDownloadUrls.data[batchIndex].status === 200) {\n          // TO DO OK\n          imagesDownloadUrls.set(\n            batchResultDownloadUrls.data[batchIndex].body.id,\n            batchResultDownloadUrls.data[batchIndex].body.thumbnails[0]\n              .c300x400_crop.url,\n          );\n        } else {\n          // Get Image failed\n          store.dispatch(\n            studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n          );\n          return;\n        }\n      }\n    } else {\n      // Getting images batch failed\n      store.dispatch(\n        studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n      );\n      return;\n    }\n\n    const outputUsers: schoolUserType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const imageId = imagesIdsMap.get(data.value[index].id);\n      if (imageId !== undefined) {\n        const imageDownloadUrl = imagesDownloadUrls.get(imageId);\n        if (imageDownloadUrl !== undefined) {\n          outputUsers.push({\n            name: data.value[index].displayName,\n            id: data.value[index].id,\n            mail: data.value[index].mail,\n            role: data.value[index].mail,\n            grade: checkIfStudent(data.value[index].mail).grade,\n            student: checkIfStudent(data.value[index].mail).result,\n            imageDownloadUrl,\n            imageState: loadingStateEnum.notStarted,\n          });\n        } else {\n          outputUsers.push({\n            name: data.value[index].displayName,\n            id: data.value[index].id,\n            mail: data.value[index].mail,\n            role: data.value[index].mail,\n            grade: checkIfStudent(data.value[index].mail).grade,\n            student: checkIfStudent(data.value[index].mail).result,\n            imageDownloadUrl: 'noImage',\n            imageState: loadingStateEnum.cannotStart,\n          });\n        }\n      } else {\n        outputUsers.push({\n          name: data.value[index].displayName,\n          id: data.value[index].id,\n          mail: data.value[index].mail,\n          role: data.value[index].mail,\n          grade: checkIfStudent(data.value[index].mail).grade,\n          student: checkIfStudent(data.value[index].mail).result,\n          imageDownloadUrl: 'noImage',\n          imageState: loadingStateEnum.cannotStart,\n        });\n      }\n    }\n    store.dispatch(studentSearchSlice.actions.setStudentUsers(outputUsers));\n    store.dispatch(\n      studentSearchSlice.actions.setNextLink(data['@odata.nextLink']),\n    );\n    store.dispatch(\n      studentSearchSlice.actions.setUsersState(loadingStateEnum.success),\n    );\n  } else {\n    // Getting users failed\n    store.dispatch(\n      studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n    );\n  }\n}\n\nexport async function getStudentData(\n  userId: string,\n): Promise<{ result: loadingStateEnum; data?: studentInformationType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items?$expand=fields&$filter=fields/userId%20eq%20'${userId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultData: studentInformationType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultData.push({\n        listId: data.value[index].fields.id,\n        driveId: data.value[index].fields.itemId,\n        selected: data.value[index].fields.selected,\n        createdTime: data.value[index].fields.createdTime,\n      });\n    }\n    return { result: loadingStateEnum.success, data: resultData };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function changeStudentSelection(\n  listItemId: string,\n  selectedFileListId: string,\n  fileData: studentInformationType[],\n  fileIndex: number,\n): Promise<{ result: loadingStateEnum; fileData?: studentInformationType[] }> {\n  if (selectedFileListId !== '') {\n    const unselectedIndex = fileData.findIndex(e => {\n      return e.listId === selectedFileListId;\n    });\n    if (unselectedIndex !== -1) {\n      const newFileData = fileData;\n      newFileData[fileIndex].selected = false;\n      const unselectListData = {\n        fields: {\n          selected: false,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.studentFilesListId\n        }/items/${selectedFileListId}`,\n        'PATCH',\n        JSON.stringify(unselectListData),\n      );\n      if (result.ok) {\n        const selectListData = {\n          fields: {\n            selected: true,\n          },\n        };\n        const secondResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${\n            store.getState().paulyList.siteId\n          }/lists/${\n            store.getState().paulyList.studentFilesListId\n          }/items/${listItemId}`,\n          'PATCH',\n          JSON.stringify(selectListData),\n        );\n        if (secondResult.ok) {\n          newFileData[fileIndex].selected = true;\n          return { result: loadingStateEnum.success, fileData: newFileData };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed, fileData: [...newFileData] };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  const selectListData = {\n    fields: {\n      selected: true,\n    },\n  };\n  const secondResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items/${listItemId}`,\n    'PATCH',\n    JSON.stringify(selectListData),\n  );\n  if (secondResult.ok) {\n    const newFileData = fileData;\n    newFileData[fileIndex].selected = true;\n    return { result: loadingStateEnum.success, fileData: [...newFileData] };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function removeStudentSelection(\n  listItemId: string,\n  fileIndex: number,\n  fileData: studentInformationType[],\n): Promise<{ result: loadingStateEnum; fileData?: studentInformationType[] }> {\n  const selectListData = {\n    fields: {\n      selected: false,\n    },\n  };\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items/${listItemId}`,\n    'PATCH',\n    JSON.stringify(selectListData),\n  );\n  if (result.ok) {\n    const newFileData = fileData;\n    newFileData[fileIndex].selected = false;\n    return { result: loadingStateEnum.success, fileData: [...newFileData] };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n//This is the number of blocks in a row in the student page.\nexport function getNumberOfBlocks(width: number) {\n  return Math.floor(width / 190) !== 0? Math.floor(width % 190 >= 0.75 ? width / 190 : (width + 190) / 190):1\n}","import {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  ViewStyle,\n  Platform,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useNavigate } from 'react-router-native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Colors, loadingStateEnum } from '../types';\nimport store, { RootState } from '../Redux/store';\nimport ProgressView from '../UI/ProgressView';\nimport { PersonIcon, SearchIcon } from '../UI/Icons/Icons';\nimport { studentSearchSlice } from '../Redux/reducers/studentSearchReducer';\nimport BackButton from '../UI/BackButton';\nimport { getNumberOfBlocks, getUsers } from '../Functions/studentFunctions';\nimport callMsGraph from '../Functions/Ultility/microsoftAssets';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport createUUID from '../Functions/Ultility/createUUID';\n\nexport default function Students() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { usersState, users, nextLink } = useSelector(\n    (state: RootState) => state.studentSearch,\n  );\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  async function loadUsers() {\n    getUsers();\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n      }),\n    );\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      {usersState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor:\n              currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={14} height={14} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {usersState === loadingStateEnum.success ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor:\n                  currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.15,\n                  width,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  backgroundColor: Colors.darkGray,\n                }}\n              >\n                <BackButton to=\"/profile\" />\n                <Text\n                  style={{ fontFamily: 'BukhariScript', color: Colors.white }}\n                >\n                  Students\n                </Text>\n              </View>\n              <SearchBox\n                getUsers={e => {\n                  if (e !== '') {\n                    getUsers(undefined, e);\n                    dispatch(studentSearchSlice.actions.setNextLink(undefined));\n                  } else {\n                    getUsers();\n                  }\n                }}\n              />\n              <FlatList\n                key={`Students_${createUUID()}`}\n                data={users}\n                renderItem={user => <StudentBlock user={user} />}\n                keyExtractor={(item) => item.id}\n                numColumns={\n                  getNumberOfBlocks(width)\n                }\n                onEndReached={() => {\n                  if (nextLink !== undefined) {\n                    getUsers(nextLink);\n                  }\n                }}\n                style={{ height: height * 0.825 }}\n              />\n            </View>\n          ) : (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor:\n                  currentBreakPoint === 0 ? Colors.maroon : '#FFFFFF',\n              }}\n            >\n              <Pressable\n                onPress={() => {\n                  navigate('/');\n                }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Something went wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction StudentBlock({ user }: { user: ListRenderItemInfo<schoolUserType> }) {\n  const { width, height } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  async function getImage() {\n    const newUser: any = {};\n    Object.assign(newUser, user.item);\n    if (\n      user.item.imageDownloadUrl !== 'noImage' &&\n      user.item.imageState !== loadingStateEnum.success &&\n      user.item.imageState !== loadingStateEnum.failed &&\n      user.item.imageState !== loadingStateEnum.loading\n    ) {\n      const updateStateUser: any = {};\n      Object.assign(updateStateUser, user.item);\n      updateStateUser.imageState = loadingStateEnum.loading;\n      store.dispatch(\n        studentSearchSlice.actions.setStudentUserByIndex({\n          index: user.index,\n          user: updateStateUser,\n        }),\n      );\n      const result = await callMsGraph(user.item.imageDownloadUrl);\n      if (result.ok) {\n        const data = await result.blob();\n        const urlOut = URL.createObjectURL(data);\n        newUser.imageState = loadingStateEnum.success;\n        newUser.imageDataUrl = urlOut;\n        store.dispatch(\n          studentSearchSlice.actions.setStudentUserByIndex({\n            index: user.index,\n            user: newUser,\n          }),\n        );\n      } else {\n        newUser.imageState = loadingStateEnum.failed;\n        store.dispatch(\n          studentSearchSlice.actions.setStudentUserByIndex({\n            index: user.index,\n            user: newUser,\n          }),\n        );\n      }\n    }\n  }\n\n  useEffect(() => {\n    getImage();\n  }, []);\n\n  function calculateMarginEnds(widthIn: number, side: 'L' | 'R'): number {\n    const numberOfBlocks = getNumberOfBlocks(width);\n    if (user.index % numberOfBlocks === 0) {\n      const widthRemaining = widthIn - (numberOfBlocks - 1) * 190 - 150;\n      if (widthRemaining / 2 >= 120 || side === 'R') {\n        return 20;\n      }\n      return widthRemaining / 2;\n    }\n    if ((user.index + 1) % numberOfBlocks === 0) {\n      const widthRemaining = widthIn - (numberOfBlocks - 1) * 190 - 150;\n      if (widthRemaining / 2 >= 120 || side === 'L') {\n        return 20;\n      }\n      return widthRemaining / 2;\n    }\n    return 20;\n  }\n\n  return (\n    <View\n      key={`StudentBlock_${user.item.id}`}\n      style={{\n        height: 175,\n        width: 150,\n        marginTop: (user.index <= getNumberOfBlocks(width)) ? height * 0.04:25,\n        marginBottom: 25,\n        marginLeft: calculateMarginEnds(width, 'L'),\n        marginRight: calculateMarginEnds(width, 'R'),\n        backgroundColor: Colors.white,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n      }}\n    >\n      <View\n        style={{\n          height: 150,\n          width: 150,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {user.item.imageState === loadingStateEnum.loading ? (\n          <>\n            <ProgressView width={14} height={14} />\n            <Text>Loading</Text>\n          </>\n        ) : (\n          <>\n            {user.item.imageState === loadingStateEnum.success &&\n            user.item.imageDataUrl !== undefined ? (\n              <Image\n                source={{ uri: user.item.imageDataUrl }}\n                style={{ width: 150, height: 150, borderRadius: 5 }}\n              />\n            ) : (\n              <PersonIcon width={150} height={150} />\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ flexDirection: 'row', height: 14 }}>\n        <Text style={{ marginLeft: 5, marginTop: 2 }}>{user.item.name}</Text>\n        {user.item.student ? <Text>{user.item.grade}</Text> : null}\n      </View>\n    </View>\n  );\n}\n\nfunction SearchBox({ getUsers }: { getUsers: (item: string) => void }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { searchText } = useSelector((state: RootState) => state.studentSearch);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const style: ViewStyle =\n    Platform.OS === 'web' ? { outlineStyle: 'none' } : {};\n  const [mounted, setMounted] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (mounted) {\n      const searchValueSave = searchText;\n      setTimeout(() => {\n        if (store.getState().studentSearch.searchText === searchValueSave) {\n          getUsers(store.getState().studentSearch.searchText);\n        }\n      }, 1500);\n    } else {\n      setMounted(true);\n    }\n  }, [searchText]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.15 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchText}\n            onChangeText={e => {\n              dispatch(studentSearchSlice.actions.setStudentSearch(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchText}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import store from '../Redux/store';\nimport { loadingStateEnum } from '../types';\nimport callMsGraph from './Ultility/microsoftAssets';\n\n// https://stackoverflow.com/questions/3583724/how-do-i-add-a-delay-in-a-javascript-loop\nconst timer = (ms: number | undefined) =>\n  new Promise(res => setTimeout(res, ms));\n\nexport default async function addImage(\n  userId: string,\n  selectedFile: microsoftFileType,\n): Promise<loadingStateEnum> {\n  // Get Site Root Dirve\n  // b!SovCQ5jf4Ui7t--wIofkuw46Zg0l6rlIr721G-0tZtCdr1HAMwtmTJEU9ay20bf2\n  const siteResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/drive/root`,\n  );\n  if (siteResult.ok) {\n    const siteData = await siteResult.json();\n    const copyPayload = {\n      parentReference: {\n        driveId: siteData.parentReference.driveId,\n        id: siteData.id,\n      },\n    };\n    const copyResult = await callMsGraph(\n      `${selectedFile.callPath}/copy?@microsoft.graph.conflictBehavior=rename`,\n      'POST',\n      JSON.stringify(copyPayload),\n    );\n    if (copyResult.ok) {\n      const copyData = await copyResult.headers.get('Location');\n\n      let notComplete = true;\n      let resourceId = '';\n\n      while (notComplete) {\n        if (copyData !== null) {\n          const copyFetch = await fetch(copyData);\n          if (copyFetch.ok) {\n            const copyFetchData = await copyFetch.json();\n            if (copyFetchData.status === 'completed') {\n              resourceId = copyFetchData.resourceId;\n              notComplete = false;\n              break;\n            }\n          } else {\n            return loadingStateEnum.failed;\n          }\n        } else {\n          return loadingStateEnum.failed;\n        }\n        await timer(3000);\n      }\n\n      const getItemResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/drive/items/${resourceId}`,\n      );\n      if (getItemResult.ok) {\n        const getItemData = await getItemResult.json();\n        const studentData = {\n          fields: {\n            createdTime: new Date().toISOString(),\n            itemId: getItemData.id,\n            userId,\n            selected: false,\n          },\n        };\n        const studentListResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${\n            store.getState().paulyList.siteId\n          }/lists/${store.getState().paulyList.studentFilesListId}/items`,\n          'POST',\n          JSON.stringify(studentData),\n        );\n        if (studentListResult.ok) {\n          return loadingStateEnum.success;\n        }\n        const data = await studentListResult.json();\n        return loadingStateEnum.failed;\n      }\n      return loadingStateEnum.failed;\n    }\n    return loadingStateEnum.failed;\n  }\n  return loadingStateEnum.failed;\n\n  // let userExtensionData: any = {}\n  // userExtensionData[store.getState().paulyList.userExtensionId] = {\n  //   \"imageId\":\"\"\n  // }\n  // const data = {\n  //   \"requests\": [\n  //     {\n  //       \"id\":\"1\",\n  //       \"method\":\"POST\",\n  //       \"url\":`/sites/${store.getState().paulyList.siteId}/lists/${store.getState().paulyList.studentFilesListId}/items`,\n  //       \"body\":JSON.stringify({\n  //         \"fields\": {\n  //           \"createdTime\":new Date().toISOString(),\n  //           \"\":\"\"\n  //         }\n  //       }),\n  //       \"headers\":{\n  //         \"Content-Type\": \"application/json\"\n  //       }\n  //     },\n  //     {\n  //       \"id\":\"2\",\n  //       \"method\":\"POST\",\n  //       \"url\":`/sites/${store.getState().paulyList.siteId}/drive/root`,\n  //       \"dependsOn\":[\"1\"],\n  //       \"body\":\"\",\n  //       \"headers\":{\n  //         \"Content-Type\": \"application/json\"\n  //       }\n  //     }\n  //   ]\n  // }\n  // const result = await callMsGraph(\"https://graph.microsoft.com/v1.0/$batch\", \"POST\", undefined, JSON.stringify(data))\n  // if (result.ok) {\n  //   const data = await result.json()\n  // } else {\n\n  // }\n  // {\n  //   \"id\":\"3\",\n  //   \"method\":\"PATCH\",\n  //   \"url\":`/users/${userId}`,\n  //   \"headers\":{\n  //     \"Content-Type\": \"application/json\"\n  //   },\n  //   \"dependsOn\":[\"1\",\"2\"],\n  //   \"body\":JSON.stringify({}),\n  // }\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  ViewStyle,\n  Platform,\n  TextInput,\n  Modal,\n  FlatList,\n  ListRenderItemInfo,\n} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BackButton from '../../../UI/BackButton';\nimport MicrosoftFilePicker from '../../../UI/MicrosoftFilePicker';\nimport store, { RootState } from '../../../Redux/store';\nimport {\n  changeStudentSelection,\n  getStudentData,\n  getUsers,\n  removeStudentSelection,\n} from '../../../Functions/studentFunctions';\nimport { CloseIcon, SearchIcon } from '../../../UI/Icons/Icons';\nimport { studentSearchSlice } from '../../../Redux/reducers/studentSearchReducer';\nimport { Colors, loadingStateEnum } from '../../../types';\nimport ProgressView from '../../../UI/ProgressView';\nimport addImage from '../../../Functions/addImage';\nimport { getTextState } from '../../../Functions/Ultility/createUUID';\n\nfunction SelectMainFile({\n  userId,\n  setFilePickingMode,\n}: {\n  userId: string;\n  setFilePickingMode: (item: filePickingModeEnum) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [fileData, setFileData] = useState<studentInformationType[]>([]);\n  const [fileState, setFileState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedFileListId, setSelectedFileListId] = useState<string>('');\n\n  async function loadData() {\n    const result = await getStudentData(userId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setFileState(loadingStateEnum.success);\n      setFileData(result.data);\n      const selectedFileList = result.data.find(e => {\n        return e.selected;\n      });\n      if (selectedFileList !== undefined) {\n        setSelectedFileListId(selectedFileList.listId);\n      }\n    } else {\n      setFileState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        right: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.notStarted);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <View\n        style={{\n          height: height * 0.8,\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          backgroundColor: Colors.white,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          {fileState === loadingStateEnum.loading ? (\n            <View>\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {fileState === loadingStateEnum.success ? (\n                <FlatList\n                  data={fileData}\n                  renderItem={file => (\n                    <StudentSelectFileBlock\n                      key={`${file.item.listId}_${file.item.createdTime}`}\n                      file={file}\n                      setFileData={setFileData}\n                      fileData={fileData}\n                      selectedFileListId={selectedFileListId}\n                      setSelectedFileListId={setSelectedFileListId}\n                    />\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n          <Pressable\n            onPress={() => setFilePickingMode(filePickingModeEnum.create)}\n          >\n            <Text>Create</Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction StudentSelectFileBlock({\n  file,\n  selectedFileListId,\n  setSelectedFileListId,\n  fileData,\n  setFileData,\n}: {\n  file: ListRenderItemInfo<studentInformationType>;\n  setFileData: (item: studentInformationType[]) => void;\n  fileData: studentInformationType[];\n  selectedFileListId: string;\n  setSelectedFileListId: (item: string) => void;\n}) {\n  const [updateState, setUpdateState] = useState(loadingStateEnum.notStarted);\n\n  async function callRemoveSelection() {\n    setUpdateState(loadingStateEnum.loading);\n    const result = await removeStudentSelection(\n      file.item.listId,\n      file.index,\n      fileData,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.fileData !== undefined\n    ) {\n      setSelectedFileListId('');\n      setFileData(result.fileData);\n      setUpdateState(loadingStateEnum.success);\n    } else {\n      setUpdateState(loadingStateEnum.failed);\n    }\n  }\n\n  async function callChangeSelection() {\n    setUpdateState(loadingStateEnum.loading);\n    const result = await changeStudentSelection(\n      file.item.listId,\n      selectedFileListId,\n      fileData,\n      file.index,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.fileData !== undefined\n    ) {\n      setUpdateState(loadingStateEnum.success);\n      setFileData(result.fileData);\n    } else {\n      setUpdateState(loadingStateEnum.failed);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => {\n        if (file.item.selected) {\n          callRemoveSelection();\n        } else {\n          callChangeSelection();\n        }\n      }}\n      style={{\n        backgroundColor: file.item.selected ? Colors.lightGray : Colors.white,\n        borderRadius: 15,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        flexDirection: 'row',\n      }}\n    >\n      <>\n        {updateState === loadingStateEnum.loading ? (\n          <ProgressView width={14} height={14} />\n        ) : (\n          <View\n            style={{\n              width: 14,\n              height: 14,\n              backgroundColor:\n                updateState === loadingStateEnum.success ||\n                loadingStateEnum.notStarted\n                  ? 'green'\n                  : Colors.danger,\n              borderRadius: 7,\n            }}\n          />\n        )}\n      </>\n      <Text style={{ margin: 10 }}>\n        {new Date(file.item.createdTime).toLocaleDateString()}\n      </Text>\n    </Pressable>\n  );\n}\n\nexport default function GovernmentStudents() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { usersState, users } = useSelector(\n    (state: RootState) => state.studentSearch,\n  );\n\n  async function loadUsers() {\n    getUsers();\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <BackButton to=\"/profile/government/\" />\n        <Text style={{ marginTop: 14 }}>Government Students</Text>\n      </View>\n      <SearchBox\n        getUsers={() => {\n          loadUsers();\n        }}\n      />\n      <View style={{ width, height: height * 0.05 }} />\n      <View style={{ height: height * 0.75 }}>\n        {usersState === loadingStateEnum.loading ? (\n          <View\n            style={{\n              width,\n              height: height * 0.8,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView width={12} height={12} />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {usersState === loadingStateEnum.success ? (\n              <FlatList data={users} renderItem={e => <StudentItem e={e} />} />\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ flexDirection: 'row', height: height * 0.1 }}>\n        <Pressable>\n          <Text>Select Folder</Text>\n        </Pressable>\n        <Pressable>\n          <Text>Select Maping Keys</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nenum filePickingModeEnum {\n  notStarted,\n  select,\n  create,\n}\n\nfunction StudentItem({ e }: { e: ListRenderItemInfo<schoolUserType> }) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [filePickingMode, setFilePickingMode] = useState<filePickingModeEnum>(\n    filePickingModeEnum.notStarted,\n  );\n  return (\n    <View style={{ flexDirection: 'row' }}>\n      <Text>{e.item.name}</Text>\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.select);\n        }}\n      >\n        <Text>Choose File</Text>\n      </Pressable>\n      <Modal\n        visible={filePickingMode !== filePickingModeEnum.notStarted}\n        animationType=\"slide\"\n        transparent\n        style={{ width: width * 0.8 }}\n        onRequestClose={() =>\n          setFilePickingMode(filePickingModeEnum.notStarted)\n        }\n      >\n        <Pressable\n          onPress={() => setFilePickingMode(filePickingModeEnum.notStarted)}\n          style={{\n            position: 'absolute',\n            left: 0,\n            height,\n            zIndex: -1,\n            width,\n          }}\n        />\n        <>\n          {filePickingMode === filePickingModeEnum.create ? (\n            <StudentsSelectFile\n              setFilePickingMode={setFilePickingMode}\n              userId={e.item.id}\n            />\n          ) : (\n            <SelectMainFile\n              userId={e.item.id}\n              setFilePickingMode={setFilePickingMode}\n            />\n          )}\n        </>\n      </Modal>\n    </View>\n  );\n}\n\nfunction SearchBox({ getUsers }: { getUsers: (item: string) => void }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { searchText } = useSelector((state: RootState) => state.studentSearch);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const style: ViewStyle =\n    Platform.OS === 'web' ? { outlineStyle: 'none' } : {};\n  const [mounted, setMounted] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (mounted) {\n      const searchValueSave = searchText;\n      setTimeout(() => {\n        if (store.getState().studentSearch.searchText === searchValueSave) {\n          getUsers(store.getState().studentSearch.searchText);\n        }\n      }, 1500);\n    } else {\n      setMounted(true);\n    }\n  }, [searchText]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.1 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchText}\n            onChangeText={e => {\n              dispatch(studentSearchSlice.actions.setStudentSearch(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchText}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction StudentsSelectFile({\n  setFilePickingMode,\n  userId,\n}: {\n  setFilePickingMode: (item: filePickingModeEnum) => void;\n  userId: string;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [isReviewing, setIsReviewing] = useState<boolean>(false);\n  const [selectedFile, setSelectedFile] = useState<\n    microsoftFileType | undefined\n  >(undefined);\n  const [addImageState, setAddImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadAddImage() {\n    if (selectedFile !== undefined) {\n      setAddImageState(loadingStateEnum.loading);\n      const result = await addImage(userId, selectedFile);\n      setAddImageState(result);\n    }\n  }\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        right: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.select);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <>\n        {!isReviewing ? (\n          <View\n            style={{\n              height: height * 0.8,\n              width: width * 0.8,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: Colors.white,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              <MicrosoftFilePicker\n                height={height * 0.8 - 5}\n                width={width * 0.8 - 5}\n                onSelectedFile={file => {\n                  setIsReviewing(true);\n                  setSelectedFile(file);\n                }}\n              />\n            </View>\n          </View>\n        ) : (\n          <View\n            style={{\n              height: height * 0.8,\n              width: width * 0.8,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: Colors.white,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              {selectedFile !== undefined ? (\n                <Pressable\n                  onPress={() => {\n                    loadAddImage();\n                  }}\n                >\n                  <Text>\n                    {getTextState(addImageState, { notStarted: 'Confirm' })}\n                  </Text>\n                </Pressable>\n              ) : null}\n            </View>\n          </View>\n        )}\n      </>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, ScaledSize, Text, Pressable, Platform } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  DiscoveryDocument,\n  revokeAsync,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport { useMsal } from '@azure/msal-react';\nimport { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport HomePage from './HomePage';\nimport Commissions from './Commissions/Commissions';\nimport Notifications from './Notifications';\nimport Resources from './Resources';\nimport Settings from './Profile/Settings';\nimport Government from './Profile/Government/Government';\nimport MicrosoftGraphOverview from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphOverview';\nimport MicrosoftGraphCreateList from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphCreateList';\nimport GovernmentCommissions from './Profile/Government/GovernmentCommissions/GovernmentCommissions';\nimport GovernmentEditCommission from './Profile/Government/GovernmentCommissions/GovernmentEditCommission';\nimport Sports from './Sports';\nimport Calendar from './Calendar/Calendar';\nimport GovernmentSports from './Profile/Government/GovernmentSports/GovernmentSports';\nimport GovernmentCreateNewSport from './Profile/Government/GovernmentSports/GovernmentCreateNewSport';\nimport GovernmentSportsTeams from './Profile/Government/GovernmentSports/GovernmentSportsTeams';\nimport GovernmentSportTeamEdit from './Profile/Government/GovernmentSports/GovernmentSportTeamEdit';\nimport GovernmentSportsTeamAddPost from './Profile/Government/GovernmentSports/GovernmentSportsTeamAddPost';\nimport GovernmentReviewFileSubmission from './Profile/Government/GovernmentSports/GovernmentReviewFileSubmission';\nimport GovernmentCalendar from './Profile/Government/GovernmentCalendar/GovernmentCalendar';\nimport GovernmentSchedual from './Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentSchedule';\nimport GovernmentTimetable from './Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetable';\nimport GovernmentScheduleEdit from './Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentScheduleEdit';\nimport GovernmentClasses from './Profile/Government/GovernmentClasses/GovernmentClasses';\nimport GovernmentClassesEdit from './Profile/Government/GovernmentClasses/GovernmentClassesEdit';\nimport GovernmentHomePage from './Profile/Government/GovernmentHomePage';\nimport NavBarComponent from '../UI/NavComponent';\nimport PageNotFound from './404Page';\nimport GovernmentAdmin from './Profile/Government/GovernmentAdminCenter/GovernmentAdmin';\nimport GovernmentRooms from './Profile/Government/GovernmentClasses/GovernmentRooms';\nimport GovernmentRoomsCreate from './Profile/Government/GovernmentClasses/GovermentRoomsCreate';\nimport MicrosoftGraphEdit from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphEdit';\nimport GovernmentResources from './Profile/Government/GovernmentResources';\nimport GovernmentDressCodeCreate from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit';\nimport GovernmentDressCode from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCode';\nimport GovernmentDressCodeEdit from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit';\nimport GovernmentTimetableEdit from './Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetableEdit';\nimport store, { RootState } from '../Redux/store';\nimport ProfileBlock from './Profile/ProfileBlock';\nimport ProgressView from '../UI/ProgressView';\nimport Students from './Students';\nimport GovernmentStudents from './Profile/Government/GovernmentStudents';\nimport { Colors } from '../types';\nimport { authenticationTokenSlice } from '../Redux/reducers/authenticationTokenReducer';\nimport { tenantId } from '../PaulyConfig';\n\nexport default function AuthenticatedView({\n  dimensions,\n  width,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n  width: number;\n}) {\n  const { height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const authenticationToken = useSelector(\n    (state: RootState) => state.authenticationToken,\n  );\n  const isShowingProfileBlock = useSelector(\n    (state: RootState) => state.isShowingProfileBlock,\n  );\n  const insets = useSafeAreaInsets();\n  const [overide, setOveride] = useState<boolean>(false);\n  return (\n    <>\n      {(siteId !== '' || overide) && authenticationToken !== '' ? (\n        <View style={{ width, top: -insets.top }}>\n          <NativeRouter>\n            <View style={{ flexDirection: 'row', width }}>\n              {currentBreakPoint >= 1 ? (\n                <NavBarComponent\n                  width={width * 0.1}\n                  height={dimensions.window.height}\n                />\n              ) : null}\n              <View\n                style={{\n                  width: currentBreakPoint >= 1 ? width * 0.9 : width,\n                  height,\n                  backgroundColor: Colors.maroon,\n                }}\n              >\n                <Routes>\n                  <Route path=\"/\" element={<HomePage />} />\n                  <Route path=\"/sports\" element={<Sports />} />\n                  <Route path=\"/notifications\" element={<Notifications />} />\n                  <Route path=\"/calendar\" element={<Calendar />} />\n                  <Route path=\"/resources\" element={<Resources />} />\n                  <Route path=\"/commissions\" element={<Commissions />} />\n                  <Route path=\"/profile\" element={<Settings />} />\n                  <Route path=\"/students\" element={<Students />} />\n                  <Route path=\"/profile/government\" element={<Government />} />\n                  <Route\n                    path=\"/profile/government/resources\"\n                    element={<GovernmentResources />}\n                  />\n                  <Route\n                    path=\"/profile/government/admin\"\n                    element={<GovernmentAdmin />}\n                  />\n                  <Route\n                    path=\"/profile/government/graph/:mode\"\n                    element={<MicrosoftGraphOverview />}\n                  />\n                  <Route\n                    path=\"/profile/government/graph/:mode/edit/:id\"\n                    element={<MicrosoftGraphEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/graph/:mode/create\"\n                    element={<MicrosoftGraphCreateList />}\n                  />\n                  <Route\n                    path=\"/profile/government/commissions\"\n                    element={<GovernmentCommissions />}\n                  />\n                  <Route\n                    path=\"/profile/government/commissions/:id\"\n                    element={<GovernmentEditCommission />}\n                  />\n                  <Route\n                    path=\"/profile/government/homepage\"\n                    element={<GovernmentHomePage />}\n                  />\n                  <Route\n                    path=\"/profile/government/students\"\n                    element={<GovernmentStudents />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes\"\n                    element={<GovernmentClasses />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes/edit/:id\"\n                    element={<GovernmentClassesEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes/room\"\n                    element={<GovernmentRooms />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes/room/create\"\n                    element={<GovernmentRoomsCreate />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar\"\n                    element={<GovernmentCalendar />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/schedule\"\n                    element={<GovernmentSchedual />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/schedule/:id\"\n                    element={<GovernmentScheduleEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/timetable\"\n                    element={<GovernmentTimetable />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/timetable/:id\"\n                    element={<GovernmentTimetableEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/dresscode\"\n                    element={<GovernmentDressCode />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/dresscode/:id\"\n                    element={<GovernmentDressCodeEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports\"\n                    element={<GovernmentSports />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/create\"\n                    element={<GovernmentCreateNewSport />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/team/:sport/:id\"\n                    element={<GovernmentSportsTeams />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/team/:sport/:id/:teamId\"\n                    element={<GovernmentSportTeamEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/post/create\"\n                    element={<GovernmentSportsTeamAddPost />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/post/review/:submissionID\"\n                    element={<GovernmentReviewFileSubmission />}\n                  />\n                  <Route path=\"*\" element={<PageNotFound />} />\n                </Routes>\n                {currentBreakPoint >= 1 && isShowingProfileBlock ? (\n                  <ProfileBlock />\n                ) : null}\n              </View>\n            </View>\n          </NativeRouter>\n        </View>\n      ) : (\n        <LoadingView setOveride={setOveride} width={width} />\n      )}\n    </>\n  );\n}\n\nfunction LoadingView({\n  setOveride,\n  width,\n}: {\n  setOveride: (item: boolean) => void;\n  width: number;\n}) {\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const insets = useSafeAreaInsets();\n  const [isShowingLogout, setIsShowingLogout] = useState<boolean>(false);\n\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsShowingLogout(true);\n    }, 10000);\n  }, []);\n\n  return (\n    <View\n      style={{\n        width,\n        top: -insets.top,\n        height,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <ProgressView width={14} height={14} />\n      <Text style={{ color: Colors.white }}>Loading</Text>\n      {isGovernmentMode ? (\n        <Pressable\n          onPress={() => {\n            setOveride(true);\n          }}\n          style={{ margin: 5 }}\n        >\n          <Text style={{ color: Colors.white }}>Overide</Text>\n        </Pressable>\n      ) : null}\n      {isShowingLogout ? (\n        <Pressable\n          onPress={() => {\n            signOut();\n          }}\n          style={{ margin: 5 }}\n        >\n          <Text style={{ color: Colors.white }}>Logout</Text>\n        </Pressable>\n      ) : null}\n    </View>\n  );\n}\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n","import callMsGraph from './microsoftAssets';\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport store from '../../Redux/store';\nimport { paulyListSlice } from '../../Redux/reducers/paulyListReducer';\n\nexport default async function getPaulyLists() {\n  const getRootSiteIdResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/sites/root?$select=id`,\n    'GET',\n  );\n  if (getRootSiteIdResult.ok) {\n    const getRootSiteIdResultData = await getRootSiteIdResult.json();\n    const paulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items?expand=fields&$select=id`,\n      'GET',\n    );\n    if (paulyListResult.ok) {\n      const paulyListResultData = await paulyListResult.json();\n      // TO DO make the value secure meaning that others cannot add to the pauly list\n      // store.dispatch(paulyListSlice.actions.setPaulyList({siteId: getRootSiteIdResultData[\"id\"], commissionListId: paulyListResultData[\"fields\"][\"commissionListId\"], paulyDataListId: paulyListResultData[\"fields\"][\"paulyDataListId\"], scheduleListId: paulyListResultData[\"fields\"][\"scheduleListId\"], sportsListId: paulyListResultData[\"fields\"][\"sportsListId\"], sportsApprovedSubmissionsListId: paulyListResultData[\"fields\"][\"sportsApprovedSubmissionsListId\"], sportsSubmissionsListId: paulyListResultData[\"fields\"][\"sportsSubmissionsListId\"], timetablesListId: paulyListResultData[\"fields\"][\"timetablesListId\"]}))\n      store.dispatch(\n        paulyListSlice.actions.setPaulyList({\n          siteId: getRootSiteIdResultData.id,\n          studentFilesListId:\n            paulyListResultData.value[0].fields.studentFilesListId,\n          commissionListId:\n            paulyListResultData.value[0].fields.commissionListId,\n          commissionSubmissionsListId:\n            paulyListResultData.value[0].fields.commissionSubmissionsListId,\n          paulyDataListId: paulyListResultData.value[0].fields.paulyDataListId,\n          scheduleListId: paulyListResultData.value[0].fields.scheduleListId,\n          sportsListId: paulyListResultData.value[0].fields.sportsListId,\n          sportsApprovedSubmissionsListId:\n            paulyListResultData.value[0].fields.sportsApprovedSubmissionsListId,\n          sportsSubmissionsListId:\n            paulyListResultData.value[0].fields.sportsSubmissionsListId,\n          timetablesListId:\n            paulyListResultData.value[0].fields.timetablesListId,\n          resourceListId: paulyListResultData.value[0].fields.resourceListId,\n          dressCodeListId: paulyListResultData.value[0].fields.dressCodeListId,\n          eventTypeExtensionId:\n            paulyListResultData.value[0].fields.eventTypeExtensionId,\n          eventDataExtensionId:\n            paulyListResultData.value[0].fields.eventDataExtensionId,\n          classExtensionId:\n            paulyListResultData.value[0].fields.classExtensionId,\n          resourceExtensionId:\n            paulyListResultData.value[0].fields.resourceExtensionId,\n          roomListId: paulyListResultData.value[0].fields.roomListId,\n        }),\n      );\n    } else {\n      // TO DO THIS IS A BIG PROBLEM SHUT DOWN APP BC most of it don't work lost connection to server\n    }\n  } else {\n    // TO DO THIS IS A BIG PROBLEM SHUT DOWN APP BC most of it don't work lost connection to server\n  }\n}\n","import { microsoftProfileDataSlice } from '../../Redux/reducers/microsoftProfileDataReducer';\nimport store from '../../Redux/store';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function getUserProfile() {\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/photo/$value',\n    'GET',\n  );\n  // TO DO return error\n  if (result.ok) {\n    const dataBlob = await result.blob();\n    const urlOut = URL.createObjectURL(dataBlob);\n    const profileResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/me',\n      'GET',\n    );\n    if (profileResult.ok) {\n      const profileData = await profileResult.json();\n      store.dispatch(\n        microsoftProfileDataSlice.actions.setMicrosoftProfileData({\n          uri: urlOut,\n          displayName: profileData.displayName,\n          id: profileData.id,\n        }),\n      );\n    }\n  } else {\n    const profileResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/me',\n      'GET',\n    );\n    if (profileResult.ok) {\n      const profileData = await profileResult.json();\n      store.dispatch(\n        microsoftProfileDataSlice.actions.setMicrosoftProfileData({\n          uri: '',\n          displayName: profileData.displayName,\n          id: profileData.id,\n        }),\n      );\n    }\n  }\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { orgWideGroupID } from '../PaulyConfig';\nimport { isGovernmentModeSlice } from '../Redux/reducers/isGovernmentModeReducer';\nimport store from '../Redux/store';\nimport callMsGraph from './Ultility/microsoftAssets';\n\nexport async function validateGovernmentMode() {\n  const userResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me?$select=id',\n  );\n  if (userResult.ok) {\n    const userData = await userResult.json();\n    const teamsResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/owners?$filter=id%20eq%20'${userData.id}'`,\n    );\n    if (teamsResult.ok) {\n      const teamsData = await teamsResult.json();\n      if (teamsData.value.length === 1) {\n        if (teamsData.value[0].id === userData.id) {\n          try {\n            await AsyncStorage.setItem(\n              'paulyGovernmentMode',\n              JSON.stringify(true),\n            );\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(true),\n            );\n          } catch (e) {\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          }\n        } else {\n          try {\n            await AsyncStorage.setItem(\n              'paulyGovernmentMode',\n              JSON.stringify(false),\n            );\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          } catch (e) {\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          }\n        }\n      } else {\n        try {\n          await AsyncStorage.setItem(\n            'paulyGovernmentMode',\n            JSON.stringify(false),\n          );\n          store.dispatch(\n            isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n          );\n        } catch (e) {\n          store.dispatch(\n            isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n          );\n        }\n      }\n    } else if (teamsResult.status === 404) {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(true));\n    } else {\n      try {\n        await AsyncStorage.setItem(\n          'paulyGovernmentMode',\n          JSON.stringify(false),\n        );\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      } catch (e) {\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      }\n    }\n  } else {\n    try {\n      await AsyncStorage.setItem('paulyGovernmentMode', JSON.stringify(false));\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    } catch (e) {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    }\n  }\n}\n\nexport async function checkIfGovernmentMode() {\n  try {\n    const value = await AsyncStorage.getItem('paulyGovernmentMode');\n    if (value !== null) {\n      // value previously stored\n      const governmentMode = JSON.parse(value);\n      if (governmentMode) {\n        store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(true));\n      } else {\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      }\n    } else {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    }\n  } catch (e) {\n    // error reading value\n    store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n  }\n}\n\nexport async function setWantGovernment(value: boolean) {\n  if (value) {\n    try {\n      await AsyncStorage.setItem(\n        'paulyWantGovernmentMode',\n        JSON.stringify(true),\n      );\n    } catch (e) {\n      // TO DO deal with error\n    }\n  } else {\n    try {\n      await AsyncStorage.setItem(\n        'paulyWantGovernmentMode',\n        JSON.stringify(false),\n      );\n    } catch (e) {\n      // TO DO deal with error\n    }\n  }\n}\n\nexport async function getWantGovernment(): Promise<boolean> {\n  try {\n    const value = await AsyncStorage.getItem('paulyWantGovernmentMode');\n    if (value !== null) {\n      const result = JSON.parse(value);\n      if (result) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  } catch {\n    return false;\n    // TO DO deal with error\n  }\n}\n","import { SafeAreaView, ScaledSize } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  EventType,\n  PublicClientApplication,\n} from '@azure/msal-browser';\nimport {\n  AuthenticatedTemplate,\n  MsalProvider,\n  UnauthenticatedTemplate,\n  useMsal,\n} from '@azure/msal-react';\nimport Login from '../src/login';\nimport AuthenticatedViewMain from '../src/AuthenticatedView/AuthenticatedViewMain';\nimport { clientId, scopes, tenantId } from '../src/PaulyConfig';\nimport getPaulyLists from '../src/Functions/Ultility/getPaulyLists';\nimport getUserProfile from '../src/Functions/Ultility/getUserProfile';\nimport { authenticationTokenSlice } from '../src/Redux/reducers/authenticationTokenReducer';\nimport { isGovernmentModeSlice } from '../src/Redux/reducers/isGovernmentModeReducer';\nimport { authenticationApiTokenSlice } from '../src/Redux/reducers/authenticationApiToken';\nimport {\n  checkIfGovernmentMode,\n  getWantGovernment,\n  setWantGovernment,\n  validateGovernmentMode,\n} from '../src/Functions/handleGovernmentLogin';\nimport store, { RootState } from '../src/Redux/store';\n\nconst pca = new PublicClientApplication({\n  auth: {\n    clientId,\n    authority: `https://login.microsoftonline.com/${tenantId}/`,\n    redirectUri: 'polite-plant-0871d590f.4.azurestaticapps.net/auth', // TODO change prod\n  },\n});\n\nexport default function AppMain({\n  dimensions,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n}) {\n  return (\n    <MsalProvider instance={pca}>\n      <SafeAreaView\n        style={{\n          width: dimensions.window.width,\n          height: dimensions.window.height,\n          zIndex: 2,\n          position: 'absolute',\n          left: 0,\n          top: 0,\n        }}\n      >\n        <AuthDeep dimensions={dimensions} />\n      </SafeAreaView>\n    </MsalProvider>\n  );\n}\n\nfunction AuthDeep({\n  dimensions,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n}) {\n  const { instance } = useMsal();\n  const dispatch = useDispatch();\n  const authenticationCall = useSelector(\n    (state: RootState) => state.authenticationCall,\n  );\n\n  async function getAuthToken(userInitated: boolean, government?: boolean) {\n    // Account selection logic is app dependent. Adjust as needed for different use cases.\n    // Set active acccount on page load\n    if (government !== undefined) {\n      setWantGovernment(government);\n    }\n\n    const accounts = instance.getAllAccounts();\n    if (accounts.length > 0) {\n      instance.setActiveAccount(accounts[0]);\n      const accountResult = await instance.getActiveAccount();\n      if (accountResult !== null) {\n        const result = await instance.acquireTokenSilent({\n          scopes,\n        });\n        dispatch(\n          authenticationTokenSlice.actions.setAuthenticationToken(\n            result.accessToken,\n          ),\n        );\n        getPaulyLists();\n        getUserProfile();\n        if (await getWantGovernment()) {\n          checkIfGovernmentMode();\n        }\n      } else {\n      }\n    }\n\n    instance.addEventCallback((event: any) => {\n      // set active account after redirect\n      if (\n        event.eventType === EventType.LOGIN_SUCCESS &&\n        event.payload.account\n      ) {\n        const { account } = event.payload;\n        instance.setActiveAccount(account);\n      }\n    });\n\n    // handle auth redired/do all initial setup for msal\n    instance\n      .handleRedirectPromise()\n      .then(async authResult => {\n        // Check if user signed in\n        const account = instance.getActiveAccount();\n        if (!account && userInitated) {\n          // redirect anonymous user to login page\n          instance.loginRedirect({\n            scopes,\n          });\n        } else if (account) {\n          if (authResult !== undefined && authResult !== null) {\n            dispatch(\n              authenticationTokenSlice.actions.setAuthenticationToken(\n                authResult.accessToken,\n              ),\n            );\n            if (await getWantGovernment()) {\n              validateGovernmentMode();\n            }\n            getPaulyLists();\n            getUserProfile();\n          }\n        }\n      })\n      .catch(async err => {\n        // TODO: Handle errors\n        try {\n          const result = await instance.acquireTokenSilent({\n            scopes,\n          });\n          dispatch(\n            authenticationTokenSlice.actions.setAuthenticationToken(\n              result.accessToken,\n            ),\n          );\n          if (await getWantGovernment()) {\n            validateGovernmentMode();\n          }\n          getPaulyLists();\n          getUserProfile();\n        } catch (e) {}\n      });\n  }\n\n  useEffect(() => {\n    getAuthToken(false);\n  }, []);\n\n  async function refreshToken() {\n    const result = await instance.acquireTokenSilent({\n      scopes,\n    });\n    dispatch(\n      authenticationTokenSlice.actions.setAuthenticationToken(\n        result.accessToken,\n      ),\n    );\n  }\n\n  useEffect(() => {\n    refreshToken();\n  }, [authenticationCall]);\n\n  return (\n    <SafeAreaView\n      style={{\n        width: dimensions.window.width,\n        height: dimensions.window.height,\n        zIndex: 2,\n        position: 'absolute',\n        left: 0,\n        top: 0,\n      }}\n    >\n      <AuthenticatedTemplate>\n        <AuthenticatedViewMain\n          dimensions={dimensions}\n          width={dimensions.window.width}\n        />\n      </AuthenticatedTemplate>\n      <UnauthenticatedTemplate>\n        <Login\n          onGetAuthToken={() => {\n            getAuthToken(true, false);\n          }}\n          onGetGovernmentAuthToken={() => {\n            getAuthToken(true, true);\n          }}\n          width={dimensions.window.width}\n        />\n      </UnauthenticatedTemplate>\n    </SafeAreaView>\n  );\n}\n","/**\n * Pauly React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Dimensions, View } from 'react-native';\nimport { DefaultTheme, PaperProvider } from 'react-native-paper';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Provider, useSelector } from 'react-redux';\n\nimport {\n  SafeAreaProvider,\n  SafeAreaView,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport store, { RootState } from './src/Redux/store';\nimport { dimentionsSlice } from './src/Redux/reducers/dimentionsReducer';\nimport AppMain from './AppMain/AppMain';\nimport { Colors, breakPointMode } from './src/types';\n\nconst windowDimensions = Dimensions.get('window');\nconst screenDimensions = Dimensions.get('screen');\n\nfunction AppCore() {\n  // Dimentions\n  const safeAreaColors = useSelector(\n    (state: RootState) => state.safeAreaColors,\n  );\n  const expandedMode = useSelector((state: RootState) => state.expandedMode);\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [dimensions, setDimensions] = useState({\n    window: windowDimensions,\n    screen: screenDimensions,\n  });\n  const insets = useSafeAreaInsets();\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener(\n      'change',\n      ({ window, screen }) => {\n        setDimensions({ window, screen });\n      },\n    );\n    return () => subscription?.remove();\n  });\n\n  useEffect(() => {\n    const width = dimensions.window.width - insets.left - insets.right;\n    if (width >= 576) {\n      if (expandedMode) {\n        store.dispatch(\n          dimentionsSlice.actions.setDimentionsWidth(width * 0.75),\n        );\n      } else {\n        store.dispatch(dimentionsSlice.actions.setDimentionsWidth(width * 0.9));\n      }\n    }\n  }, [expandedMode]);\n\n  useEffect(() => {\n    const oldWidth = store.getState().dimentions.width;\n    const { height } = store.getState().dimentions;\n    const newWidth = dimensions.window.width - insets.left - insets.right;\n    const newHeight = dimensions.window.height - insets.bottom - insets.top;\n    if (oldWidth !== newWidth) {\n      const oldCurrentBreakPointMode: breakPointMode =\n        store.getState().dimentions.currentBreakPoint;\n      let currentBreakPoint: breakPointMode = breakPointMode.xSmall;\n      if (newWidth >= 1200) {\n        // extraLarge ≥1200px\n        currentBreakPoint = breakPointMode.xLarge;\n      } else if (newWidth >= 992) {\n        // large, ≥992px\n        currentBreakPoint = breakPointMode.large;\n      } else if (newWidth >= 768) {\n        // medium, ≥768px\n        currentBreakPoint = breakPointMode.medium;\n      } else if (newWidth >= 576) {\n        // small, ≥576px\n        currentBreakPoint = breakPointMode.small;\n      } else if (newWidth < 576) {\n        // xSmall,\t<576px\n        currentBreakPoint = breakPointMode.xSmall;\n      }\n      if (oldCurrentBreakPointMode !== currentBreakPoint) {\n        if (newWidth >= 576) {\n          if (expandedMode) {\n            store.dispatch(\n              dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n                width: newWidth * 0.75,\n                currentBreakPoint,\n              }),\n            );\n          } else {\n            store.dispatch(\n              dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n                width: newWidth * 0.9,\n                currentBreakPoint,\n              }),\n            );\n          }\n        } else {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n              width: newWidth,\n              currentBreakPoint,\n            }),\n          );\n        }\n      } else if (newWidth >= 576) {\n        if (expandedMode) {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidth(newWidth * 0.75),\n          );\n        } else {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidth(newWidth * 0.9),\n          );\n        }\n      } else {\n        store.dispatch(dimentionsSlice.actions.setDimentionsWidth(newWidth));\n      }\n    }\n    if (height !== newHeight) {\n      store.dispatch(dimentionsSlice.actions.setDimentionsHeight(newHeight));\n    }\n  }, [dimensions]);\n\n  return (\n    <>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: insets.top,\n          backgroundColor: safeAreaColors.top,\n        }}\n      />\n      <SafeAreaView\n        style={{\n          backgroundColor: safeAreaColors.bottom,\n          width: dimensions.window.width,\n          height: dimensions.window.height - (insets.top + insets.bottom),\n          zIndex: 10,\n          top: insets.top,\n          position: 'absolute',\n        }}\n      >\n        <AppMain dimensions={dimensions} />\n      </SafeAreaView>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: insets.bottom,\n          backgroundColor: safeAreaColors.bottom,\n          position: 'absolute',\n          bottom: 0,\n        }}\n      />\n      {currentBreakPoint >= 1 ? (\n        <View\n          style={{\n            height: dimensions.window.height,\n            width: expandedMode\n              ? dimensions.window.width * 0.25\n              : dimensions.window.width * 0.1,\n            backgroundColor: '#793033',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    // Primary\n    primary: Colors.darkGray, // ALL G\n    primaryContainer: Colors.maroon, // Selected Am Mode\n    onPrimary: Colors.black, // This is special Text\n    onPrimaryContainer: Colors.black,\n    inversePrimary: Colors.white,\n\n    secondary: Colors.black,\n    secondaryContainer: Colors.lightGray, // Back box of selected time or hour\n    onSecondary: Colors.black, // text like if hour or minute is selected\n    onSecondaryContainer: Colors.black,\n\n    // Tertiary\n    tertiary: Colors.darkGray,\n    tertiaryContainer: Colors.darkGray,\n    onTertiary: Colors.darkGray,\n\n    // Background\n    surface: Colors.white, // ALL G\n    surfaceVariant: Colors.lightGray, // ALL G this is the circle\n    onSurfaceVariant: Colors.black, // This is am pm and title text\n    background: Colors.lightGray,\n    onSurface: Colors.black, // This is most text\n    onBackground: Colors.black,\n    backdrop: 'rgba(237, 237, 237, 0.77)',\n\n    outline: Colors.black, // ALL G\n    outlineVariant: Colors.black,\n\n    shadow: Colors.black,\n    scrim: Colors.black,\n  },\n};\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PaperProvider theme={theme}>\n        <SafeAreaProvider>\n          <GestureHandlerRootView style={{ flex: 1 }}>\n            <AppCore />\n          </GestureHandlerRootView>\n        </SafeAreaProvider>\n      </PaperProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [960], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["monthDataSlice","createSlice","name","initialState","reducers","setMonthData","_state","action","payload","setResourcesLastCalled","breakPointMode","loadingStateEnum","dataContentTypeOptions","taskImportanceEnum","taskStatusEnum","resourceResponce","commissionTypeEnum","paulyEventType","recurringType","semesters","submissionTypeEnum","locationStateEnum","calendarMode","resourceMode","Colors","_createClass","_classCallCheck","white","maroon","lightGray","darkGray","black","danger","initalState","top","bottom","safeAreaColorsSlice","setSafeAreaColors","setSafeAreaColorTop","state","_objectSpread","setSafeAreaColorBottom","microsoftProfileDataSlice","uri","displayName","id","setMicrosoftProfileData","currentEventsSlice","setCurrentEvents","_toConsumableArray","pushEvent","concat","removeCurrentEvent","slice","setCurrentEventsLastCalled","Date","toISOString","selectedDateSlice","paulyListSlice","siteId","studentFilesListId","commissionListId","commissionSubmissionsListId","paulyDataListId","scheduleListId","sportsListId","sportsApprovedSubmissionsListId","sportsSubmissionsListId","timetablesListId","resourceListId","eventTypeExtensionId","eventDataExtensionId","classExtensionId","resourceExtensionId","dressCodeListId","roomListId","setPaulyList","authenticationTokenSlice","setAuthenticationToken","setAuthenticationRefreshToken","dimentionsSlice","width","height","currentBreakPoint","setDimentionsWidth","setDimentionsWidthCurrentBreakPoint","setDimentionsHeight","setAuthenticationApiToken","taskDeltaSlice","setTaskDeltaLink","tasksDeltaReducer","reducer","tasksReducer","message","animationSpeed","powerpointBlob","powerpointShare","paulyDataState","loading","paulyDataSlice","setPaulyData","setPaulyDataState","initalResourcesState","resources","loadingState","searchValue","resourceFollow","selectedResourceMode","home","resourcesSlice","setResourceData","pushResource","push","setResources","setResourcesState","setSearchValue","setResourceFollow","setSelectedResourceMode","eventName","createEventState","notStarted","isPickingStartDate","isPickingEndDate","allDay","isGovernmentEvent","selectedTimetable","selectedSchoolDayData","undefined","selectedSchoolYear","selectedEventType","personal","recurringEvent","selectedRecurringType","daily","startDate","endDate","isShowingAddDate","isEditing","selectedCalendarMode","month","selectedEvent","addEventSlice","setEventName","setCreateEventState","setIsPickingStartDate","setIsPickingEndDate","setAllDay","setIsGovernmentEvent","setSelectedTimetable","setSelectedSchoolDayData","setSelectedSchoolYear","setSelectedEventType","setRecurringEvent","setSelectedRecurringType","setStartDate","setEndDate","setIsShowingAddDate","setIsEditing","setSelectedCalendarMode","setSelectedEvent","taskState","userState","trendingState","userData","trendingData","userTasks","importance","normal","status","excess","schoolDayData","startTime","isShowingCompleteTasks","homepageDataSlice","setTaskState","setUserState","setTrendingState","setUserData","setTrendingData","setUserTasks","updateUserTask","index","length","task","unshiftUserTask","unshift","popUserTask","splice","setSchoolDayData","setStartTime","setIsShowingCompletedTasks","expandedModeSlice","setExpandedMode","isShowingProfileBlockSlice","setIsShowingProfileBlock","isGovernmentModeSlice","setIsGovernmentMode","commissionsState","points","currentCommissions","selectedCommission","commissionNextLink","commissionsSlice","setCommissionsState","setPoints","setCurrentCommissions","setSelectedCommission","setCommissionNextLink","pdfDataSlice","inject","images","pageNumber","setInject","addImage","setImages","setPageNumber","increasePageNumber","decreasePageNumber","monthViewSlice","setMonthViewData","authenticationCallSlice","setAuthenticationCallIncrement","searchText","users","usersState","nextLink","studentSearchSlice","setStudentSearch","setStudentUsers","setUsersState","setNextLink","setStudentUserByIndex","user","setStudentUserById","findIndex","e","configureStore","addEvent","addEventReducer","authenticationToken","authenticationTokenReducer","authenticationApiToken","authenticationApiTokenReducer","authenticationRefreshToken","authenticationRefreshTokenReducer","authenticationCall","authenticationCallReducer","commissions","commissionsReducer","currentEvents","currentEventsReducer","currentEventsLastCalled","currentEventsLastCalledReducer","dimentions","dimentionsReducer","expandedMode","expandedModeReducer","homepageData","homepageDataReducer","isGovernmentMode","isGovernmentModeReducer","isShowingProfileBlock","isShowingProfileBlockReducer","microsoftProfileData","microsoftProfileDataReducer","monthData","monthDataReducer","monthView","monthViewReducer","paulyData","paulyDataReducer","paulyList","paulyListReducer","pdfData","pdfDataReducer","resourcesReducer","resourcesLastCalled","resourcesLastCallReducer","safeAreaColors","safeAreaColorsReducer","tasks","tasksDeltaLink","selectedDate","selectedDateReducer","studentSearch","studentSearchReducer","CalendarIcon","_ref","style","_jsx","View","children","_jsxs","Svg","viewBox","fill","Path","d","fillRule","clipRule","MedalIcon","_ref2","G","strokeWidth","strokeLinecap","strokeLinejoin","Polygon","BookIcon","_ref3","GovernmentIcon","_ref4","HomeIcon","_ref5","UpIcon","_ref6","DownIcon","_ref7","AddIcon","_ref8","CloseIcon","_ref9","props","ChevronLeft","_ref10","ChevronRight","_ref11","FolderIcon","_ref12","stroke","DocumentIcon","_ref13","Rect","x","y","CopyIcon","_ref14","PersonIcon","_ref15","GearIcon","_ref16","GraduationHatIcon","_ref17","WarningIcon","_ref18","outlineColor","Circle","cx","cy","r","SearchIcon","_ref19","WordIcon","_ref20","Defs","LinearGradient","x1","y1","x2","y2","gradientTransform","gradientUnits","Stop","offset","stopColor","opacity","PowerpointIcon","_ref21","ExcelIcon","_ref22","VideoIcon","_ref23","PDFIcon","_ref24","ImageIcon","_ref25","AudioIcon","_ref26","OneNoteIcon","_ref27","fillOpacity","rx","GraphAPILogo","_ref28","ClipPath","clipPath","StudentSearchIcon","_ref29","TimeIcon","_ref30","TrashIcon","_ref31","color","Login","onGetAuthToken","onGetGovernmentAuthToken","useSelector","_useState","useState","_useState2","_slicedToArray","isBottonHover","setIsButtonHover","_useState3","_useState4","isGovernmentHover","setIsGovernmentHover","_useState5","_useState6","fontSize","setFontSize","_useState7","_useState8","isShowingGovernmentLogin","setIsShowingGovernmentLogin","insets","useSafeAreaInsets","dispatch","useDispatch","useCallback","_setSafeAreaColors","_asyncToGenerator","actions","apply","arguments","useEffect","_useFonts","useFonts","BukhariScript","require","fontsLoaded","SplashScreen","Pressable","backgroundColor","alignContent","alignItems","justifyContent","overflow","onLongPress","delayLongPress","flexDirection","Image","source","resizeMode","position","left","Text","fontFamily","textShadowColor","textShadowOffset","textShadowRadius","selectable","marginTop","onPress","onHoverIn","onHoverOut","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","textAlign","fontWeight","findFirstDayinMonth","currentTime","year","getFullYear","getMonth","getDay","calculateIfShowing","value","Time","dateToCheck","today","getDate","isDateToday","hourInt","getHours","minuiteInt","getMinutes","resepctiveTime","toString","findTimeOffset","time","minutieWidth","orgWideGroupID","tenantId","clientId","scopes","callMsGraph","_x","_x2","_x3","_x4","_x5","_callMsGraph","url","method","body","headersIn","secondAuth","headers","Headers","bearer","store","getState","append","headerIndex","key","options","outUrl","Platform","OS","urlArray","split","response","fetch","previousValue","Promise","resolve","unsubscribe","subscribe","result","getDressCode","_getDressCode","dressCodeId","ok","failed","data","json","dressCodeData","JSON","parse","fields","dressCodeIncentivesData","success","dressCodeName","listId","dressCodeIncentives","largeBatch","_largeBatch","defaultBatchData","createData","batchIndex","keys","array","createDataIndex","firstUrl","secondUrl","map","forEach","output","batchData","requests","stringify","batchResultData","responses","createUUID","dt","getTime","replace","c","Math","random","floor","getTextState","labels","cannotStart","offline","getGraphEvents","_getGraphEvents","referenceUrl","newEvents","_loop","_singleValueExtendedP","_singleValueExtendedP2","eventTypeExtensionID","eventDataExtensionID","singleValueExtendedProperties","eventType","find","eventData","subject","start","dateTime","endTime","end","isAllDay","eventColor","paulyEventData","microsoftEvent","microsoftReference","events","getEvent","_getEvent","event","_eventData$find","_eventData$find2","getSchedule","_getSchedule","resultSchedule","properName","scheduleProperName","descriptiveName","scheduleDescriptiveName","periods","scheduleData","scheduleId","scheduleColor","schedule","listItemId","getSchedules","_getSchedules","dataResult","newLoadedSchedules","_unused","getTimetable","_getTimetable","timetableId","timetableDataSchedules","newSchedules","dressCodeResult","timetableDressCodeId","resultingTimetable","timetableName","schedules","days","timetableDataDays","dressCode","timetable","_getSchoolDay","UTC","_ret","_loop2","_eventData$find3","_eventData$find4","_eventData$find5","v","_getSchoolDays","date","firstDay","lastDay","scheduleIds","Map","schoolYearIds","outputIds","set","schoolYearEventId","batchRequestResultSchedule","batchRequest","scheudleIndex","scheduleResponseData","_unused2","timetableResult","_x8","_x9","_getTimetablesFromSchoolYears","getTimetablesFromSchoolYears","_ret2","schoolDaysResult","_loop3","get","schoolDay","schoolDayId","semester","dressCodeIncentiveId","batchRequestResultSchoolYear","timetableIds","schoolYearIndex","schoolYearData","perviousTimetable","_unused3","batchRequestResultTimetable","dressCodeIds","responseIndex","_unused4","batchRequestResultDressCode","dressCodes","dressCodeIndex","_batchRequestResultDr","_batchRequestResultDr2","_unused5","timetables","timetableIndex","timetableData","timetableSchedules","scheduleIndex","newSchedule","outputTimetables","timetablesArray","item","_createDressCode","create_UUID","Title","MonthBlock","_getDay","daySelected","textval","startdate","let1","day","monthViewData","borderColor","borderWidth","_Fragment","right","shorthand","zIndex","MonthView","Count","input","setFullYear","getDaysInMonth","StartDate","thirtyValue","Array","_loadData","_x7","getSchoolDays","loadData","flexWrap","numberOfLines","getCurrentPaulyData","_getCurrentPaulyData","powerpointId","fileResult","dataBlob","blob","outputResult","URL","createObjectURL","AnimatedPath","Animated","_worklet_9513762084135_init_data","code","location","ChipView","progress","useSharedValue","withDelay","withRepeat","withTiming","duration","animatedProp","useAnimatedProps","_f","interpolateColor","_closure","__initData","__workletHash","translate","animatedProps","ProgressView","path","StyleSheet","create","box","ScrollingTextAnimation","text","pan","useRef","Value","current","childWidth","setChildWidth","loop","sequence","timing","toValue","delay","easing","Easing","linear","useNativeDriver","mainLoop","GochiHand","transform","translateX","ScrollView","horizontal","onLayout","nativeEvent","layout","adjustsFontSizeToFit","HomePage","navigate","useNavigate","_useSelector2","_useSelector3","borderTopColor","borderTopWidth","borderBottomColor","borderBottomWidth","margin","aspectRatio","_getUsersLocation","commission","Location","requestForegroundPermissionsAsync","permissionDenied","getCurrentPositionAsync","mocked","mockedLocation","coordinateLat","coordinateLng","proximity","getDistance","lat","coords","latitude","lng","longitude","latCoordinate","lngCoordinate","notCloseEnough","_b64toBlob","b64Data","_addImage","base64","fileBlob","b64toBlob","types","type","rootIdResult","rootIdData","imageUUID","resumableSessionData","deferCommit","resumableSessionResult","resumableSessionResultData","uploadUrl","nextExpectedRanges","nextExpectedRange","remaining","size","uploaded","uploadBlob","uploadResult","uploadCompleteResult","uploadCompleteResultData","createLinkResult","scope","createLinkData","shareId","claimCommissionPost","_x6","_claimCommissionPost","auth","commissionId","imageShare","outResult","Authorization","CommissionClaim","imageData","claimCommissionState","setClaimCommissionState","instance","useMsal","_claimCommission","apiResult","acquireTokenSilent","outImageUrl","ImageLocation","outImage","locationResult","getUsersLocation","accessToken","claimCommission","marginLeft","marginRight","getCommission","_getCommission","itemId","title","hidden","commissionID","postData","teamId","postTeamId","channelId","postChannelId","postId","timed","maxNumberOfClaims","allowMultipleSubmissions","submissionsCount","claimCount","reviewedCount","WebViewCross","html","setHeight","WebView","automaticallyAdjustContentInsets","javaScriptEnabled","injectedJavaScript","onMessage","parseFloat","dangerouslySetInnerHTML","__html","CameraResult","CommissionsView","onClose","_useSelector","commissionData","setCommissionData","commissionState","setCommissionState","setMessageState","messageData","setMessageData","_useState9","_useState10","imageUri","setImageUri","_useState11","_useState12","takeImageState","setTakeImageState","_useState13","_useState14","pickImageState","setPickerImageState","_useState15","_useState16","isOverflowing","setIsOverflowing","_useState17","_useState18","evaluatedOverflow","setEvaluatedOverflow","_useState19","_useState20","imageHeight","setImageHeight","_getPost","messageId","content","_getCommissionInformation","_result$data","getPost","_pickImage","ImagePicker","launchImageLibraryAsync","allowsMultipleSelection","allowsEditing","mediaTypes","Images","canceled","assets","getSize","imageMeasureWidth","imageMeasureHeight","_ImagePicker$useCamer","useCameraPermissions","_ImagePicker$useCamer2","requestPermission","takeImage","_takeImage","GRANTED","launchCameraAsync","canAskAgain","granted","goToSettings","getCommissionInformation","paddingLeft","pickImage","marginBottom","getPointsBatch","_getPointsBatch","outputRequests","pointsResult","requestIndex","_getPoints","nextUrl","submissionResultClaimed","submissionResultClaimedData","submissionApproved","batchResult","_getSubmissions","commissionIds","outputMap","requestData","dataIndex","respone","valueIndex","has","mapData","subApproved","subReviewed","submissionReviewed","getCommissions","_getCommissions","claimed","_getUnclaimedCommissions","getUnclaimedCommissions","filter","getFilter","commissionsIds","submissions","getSubmissions","resultCommissions","submissionData","getCommissionsBatch","_getCommissionsBatch","commissionsResult","parseInt","commissionsMap","count","commissionsBatchData","outCommissions","BackButton","to","Commissions","_useSelector4","isHoverPicker","setIsHoverPicker","pointResult","getPoints","loadCommissionData","_loadCommissionData","FlatList","renderItem","elevation","toLocaleDateString","minute","keyExtractor","onEndReachedThreshold","onEndReached","initialNumToRender","showsHorizontalScrollIndicator","PickerPiece","_useSelector5","isSelected","setIsSelected","getUsersTasks","_getUsersTasks","deltaRunAgain","deltaMode","tasksResult","taskData","resultTasks","high","low","inProgress","completed","waitingOnOthers","deferred","_getInsightData","usedResult","userOutData","webUrl","resourceReference","resourceVisualization","trendingResult","trendingOutData","_worklet_17468625320245_init_data","AnimatedCheckMarkPath","checkMarkColor","checked","checkMarkAnimation","strokeDashoffset","strokeDasharray","strokeMiterlimit","_worklet_8732131500673_init_data","CustomCheckBox","useDerivedValue","inOut","bezierFn","PDFJS","workerSrc","_worklet_7922200678359_init_data","_worklet_4482853661007_init_data","_worklet_11315627200092_init_data","PDFView","_convertPdfToImages","file","Blob","docInitParams","pdf","promise","canvas","document","createElement","i","numPages","page","getPage","viewport","getViewport","scale","context","getContext","render","canvasContext","toDataURL","remove","convertPdfToImages","singleTap","Gesture","Tap","onEnd","_event","doubleTap","numberOfTaps","taps","Exclusive","fling","Fling","compound","Simultaneous","heightPerWidth","console","log","GestureDetector","gesture","wordTypes","excelTypes","powerpointTypes","MimeTypeIcon","mimeType","includes","getRooms","_getRooms","search","resultArray","roomName","roomId","_getRoom","feilds","ro0mId","getClasses","_getClasses","classQuery","batchDataRequests","classResult","classData","classes","periodData","room","schoolYearId","semesterOne","_getClassEvents","scheduleResult","outputEvents","order","period","setHours","startHour","setMinutes","startMinute","setSeconds","endHour","endMinute","sort","a","b","getClassEventsFromDay","_getClassEventsFromDay","getSchoolDay","_eventResult$data","eventResult","dressCodeIncentive","getClassEvents","startTimeDate","hourTime","monthTime","Notifications","insightResult","getInsightData","taskResult","WidgetView","BoardBlock","TaskBlock","InsightsBlock","_useSelector6","_useSelector7","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","TaskItem","DeleteTask","onDelete","paddingRight","setChecked","setUpdateTaskState","_useSelector9","currentText","setCurrentText","mounted","setMounted","updateTaskStatus","_updateTaskStatus","newItem","Object","assign","_updateText","_deleteTask","_checkUpdateText","taskNameSave","setTimeout","updateText","checkUpdateText","Swipeable","renderRightActions","deleteTask","paddingTop","paddingBottom","TextInput","onChangeText","newTask","multiline","_useSelector10","_useSelector11","_useSelector12","TrendingFiles","PopularFiles","_useSelector13","_useSelector14","Linking","openURL","_useSelector15","_useSelector16","convertResourceModeString","convert","sports","advancement","schoolEvents","annoucments","fitness","_getResourceFollows","resourceGroupId","resourceConversationId","_getResources","category","getResourceFollows","categoryString","batchCount","resourceRsp","resourceResponceData","responceIndex","attachments","attachmentIndex","contentType","attachmentResult","channelIdentity","attachmentData","attachmentGetResult","parentReference","driveId","attachmentGetResultData","outputData","conversationId","_getResourcesSearch","searchPayload","entityTypes","query","queryString","from","enableTopResults","searchResult","searchData","hitsContainers","hits","resource","getResource","_getResource","groupId","found","notFound","checkIfResourceDataJustAttachment","Resources","isShowingCategoryView","setIsShowingCategoryView","selectedPost","setSelectedPost","getResources","SearchBox","attachment","files","GovernmentCategoryView","categoryState","setCategoryState","selectedCategory","setSelectedCategory","_addCategory","addCategory","outlineStyle","searchValueSave","getResourcesSearch","placeholder","placeholderTextColor","enterKeyHint","inputMode","alignSelf","signOutWeb","account","logoutPopup","Settings","imageLoadState","setImageLoadState","discovery","useAutoDiscovery","signOut","getActiveAccount","revokeAsync","token","signOutNative","onError","error","Block","imageSource","Government","mainWidth","setMainWidth","fivePercent","textAlignVertical","verticalAlign","rowGap","columnGap","selectedIndex","onSetSelectedIndex","compoentWidth","Children","setValue","React","child","getTeams","_getTeams","groupResult","groupResultData","_getChannels","selected","_getPosts","graphMode","MicrosoftGraphOverview","lists","setLists","groups","setGroups","extensions","setExtensions","applicationExtensions","setApplicationExtensions","list","selectedGraphMode","setSelectedGraphMode","mode","useParams","groupLoadingState","setGroupLoadingState","listLoadingState","setListLoadingState","schemaLoadingState","setSchemaLoadingState","_getLists","incomingLists","_getExtensions","schemaExtensionsUrl","resultData","description","applicationResult","applicationData","group","extension","getLists","getExtensions","Link","PickerWrapper","MicrosoftGraphCreateList","columns","setColumns","listName","setListName","isListHidden","setIsListHidden","isShowingTypeWindow","setIsShowingTypeWindow","selectedColumnType","setSelectedColumnType","isHidden","setIsHidden","newColumnName","setNewColumnName","_createList","columnData","newData","listData","contentTypesEnabled","template","Button","allowMultipleLines","appendChangesToExistingText","linesForEditing","maxLength","textType","newColumn","createList","submissionType","approved","unApproved","unReviewed","convertSubmissionTypeToFilter","batchRequests","userId","defineProperty","userName","submissionTime","submittedTime","submissionId","reviewed","submissionImage","GovernmentCommissions","setCommissions","CommissionBlock","unclaimedState","setUnclaimedState","unclaimedCount","setUnclaimedCount","_loadData2","SegmentedPicker","setSelectedIndex","setComponentWidth","option","center","MapWeb","onSetSelectedPositionIn","selectedPositionIn","isLoaded","useJsApiLoader","googleMapsApiKey","selectedPosition","setSelectedPosition","containerStyle","setContainerStyle","GoogleMap","mapContainerStyle","zoom","onClick","ev","latLng","Marker","radius","styles","container","flex","Box","containerWidth","valueRef","currentValue","containerWidthRef","lastValue","panResponder","PanResponder","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderMove","evt","gestureState","dx","valueRead","adding","newValue","onPanResponderRelease","panHandlers","Slider","getFileWithShareID","_getFileWithShareID","shareID","image","video","_updateCommission","isCreating","commissionName","isTimed","selectedCommissionType","selectedPostId","selectedTeamId","selectedChannelId","commissionItemId","QRCode","qrCodeData","datePickingMode","GovernmentEditCommission","submitCommissionState","setSubmitCommissionState","Issued","setSelectedCommissionType","setCommissionName","setProximity","none","setCurrentDatePickingMode","setSelectedPositionIn","_useState21","_useState22","setMaxNumberOfClaims","_useState23","_useState24","setAllowMultipleSubmissions","_useState25","_useState26","setIsTimed","_useState27","_useState28","setCommissionItemId","_useState29","_useState30","setGetCommissionResult","_useState31","_useState32","deleteCommissionResult","setDeleteCommissionResult","_useState33","_useState34","setSelectedTeamId","_useState35","_useState36","setSelectedChannelId","_useState37","_useState38","setSelectedPostId","_useState39","_useState40","endTimePickerVisable","setEndTimePickerVisable","_useState41","_useState42","startTimePickerVisable","setStartTimePickerVisable","_useState43","_useState44","endDatePickerVisable","setEndDatePickerVisable","_useState45","_useState46","startDatePickerVisable","setStartDatePickerVisable","_useState47","_useState48","setIsCreating","_deleteCommission","_loadUpdateCommission","_x10","_x11","_x12","_x13","_x14","_x15","_x16","_x17","updateCommission","keyboardType","TimePickerModal","hours","minutes","visible","onDismiss","onConfirm","newDate","DatePickerModal","locale","label","oldDate","PostSelectionContainer","CommissionSubmissions","loadUpdateCommission","deleteCommission","postPickingMode","_useState49","team","_useState50","currentPostPickingMode","setCurrentPostPickingMode","GroupSelection","onSelect","channel","ChannelSelection","post","onBack","PostSelection","_useState51","_useState52","_useState53","_useState54","_useState55","_useState56","groupsState","setGroupsState","_useState57","_useState58","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","channelState","setChannelState","_useState65","_useState66","channels","setChannels","_loadData3","getChannels","_useState67","_useState68","_useState69","_useState70","_useState71","_useState72","postsState","setPostsState","_useState73","_useState74","posts","setPosts","_loadData4","getPosts","_useState75","_useState76","submissiosState","setSubmissionsState","_useState77","_useState78","setSubmissions","_useState79","_useState80","selectedSubmissionMode","setSelectedSubmissionMode","_useState81","_useState82","selectedSubmission","setSelectedSubmisson","_loadData5","secondResult","all","submission","weekday","hour","second","SubmissionView","setSubmissionData","_useState83","_useState84","changeState","setChangeState","_useState85","_useState86","imageState","setImageState","_useState87","_useState88","_useState89","_useState90","_changeSubmissionApproved","_loadImage","shareResult","loadImage","changeSubmissionApproved","_getSportsContent","newSportsPosts","shareResultsPromise","fileId","shareResults","fileType","caption","fileID","getSports","_getSports","sportName","sportId","svgData","sportSvg","getSportsTeams","_getSportsTeams","teamName","season","_getRoster","playerId","outUsers","outputRosters","_index2","imageShareId","playerNumber","SVGXml","xml","Sports","sportsPosts","setSportsPosts","loadingResult","setLoadingResult","sportsState","setSportsState","setTeamsState","selectedSport","setSelectedSport","selectedTeam","setSelectedTeam","isShowingTeams","setIsShowingTeams","setSports","isShowingRoster","setIsShowingRoster","sportsTeams","setSportsTeams","sportsSelectHeight","setSportsSelectHeight","_loadSports","_loadTeams","sport","_loadSportsContent","getSportsContent","loadSports","loadSportsContent","loadTeams","RosterView","Video","useNativeControls","ResizeMode","COVER","videoStyle","rosterLoadingState","setRosterLoadingState","roster","setRoster","_loadRoster","getRoster","loadRoster","_useFonts3","RosterImage","imageUrl","setImageUrl","imageId","DayView","colorScheme","useColorScheme","heightOffsetTop","setHeightOffsetTop","currentMinuteInt","setCurrentMinuteInt","setCurrentTime","isShowingTime","hourLength","setHourLength","mainScrollRef","eventsPane","setEventsPane","setSchoolEvents","setCurrentTimeFunction","minuite","_getClassesEvents","interval","setInterval","updateOnTimeChange","clearInterval","_mainScrollRef$curren","currentDate","resultHeightTopOffset","scrollTo","animated","loadCalendarContent","getClassesEvents","ref","EventBlock","eventPane","setEventPane","EventHeight","fromDate","toDate","delta","computeEventHeight","Offset","setHorizontalShift","handeled","horizontalCheck","beforeIndex","afterIndex","calculateHorizontalShift","borderLeftWidth","toLocaleString","Week","selectedDateRedux","daysOfWeek","setDaysOfWeek","week","setDate","getDOW","SelectTimetable","governmentMode","setLoadingState","loadedTimetables","setLoadedTimetables","_getTimetables","newLoadedTimetables","getTimetables","pickSchoolDayMode","SelectSchoolDayData","schoolYear","schoolDayMode","setSchoolDayMode","timetableState","setTimetableState","setTimetable","SchoolYearsSelect","SchoolDaySelect","ScheduleSelect","DressCodeSelect","semesterTwo","DressCodeIncentivesSelect","currentEventsSchoolYear","setCurrentEventsSchoolYear","_getData","furtherResult","getData","incentive","_createEvent","timeZone","dataOut","resultEvent","_store$getState$addEv","newEndDate","_schoolDay$dressCodeI","_schoolDay$dressCodeI2","selectedSchoolDayDataCompressed","AddEvent","_deleteEvent","DateAndTimeSection","GovernmentCalendarOptions","updateEvent","deleteEvent","CalendarTypePicker","fadeIn","sqrt","_getEvents","Calendar","getEvents","TopView","MonthViewMain","fontScale","useWindowDimensions","firstDayWeek","monthDataResult","checkStart","checkEnd","indexEvent","endTimeDate","showing","dayData","getMonthData","DOW","valueRow","CalendarCardView","calendarWidth","newMediaSubmissions","User","accepted","itemID","selectedSportId","GovernmentHandleFileSubmissions","currentMediaSubmissions","setCurrentMediaSubmissions","loadingSubmissionsState","setLoadingSubmissionsState","GovernmentSports","currentSports","setCurrentSports","setDataResult","GovernmentCreateNewSport","setSportName","setSvgData","createSportLoadingState","setCreateSportLoadingState","_createSport","newSportID","required","number","indexed","enforceUniqueValues","createSport","_getSport","SportsUpdateModel","isPickingSvg","setIsPickingSvg","setListId","getSportState","setGetSportState","updateSportState","setUpdateSportState","_updateSport","updateData","_loadSport","getSport","loadSport","Modal","animationType","updateSport","GovernmentSportsTeams","_useParams","currentTeams","setCurrentTeams","deleteSportState","setDeleteSportState","_deleteSport","getSportResult","getSportData","deleteSport","_getUserMicrosoftFiles","newFiles","lastModified","lastModifiedDateTime","folder","parentDriveId","parentPath","itemGraphPath","callPath","_getUserTeams","teamDescription","MicrosoftUploadModeType","onSetIsShowingUpload","onSetIsShowingMicrosoftUpload","onSelectedFile","usersTeams","setUsersTeams","Personal","selectedMicrosoftUploadMode","setSelectedMicrosoftUploadMode","shareLinkString","setShareLinkString","_loadUserTeams","getUserTeams","_getShareFile","shareLink","loadUserTeams","Picker","ShareLink","Site","padding","PersonalBlock","base64Value","btoa","trimEnd","getShareFile","TeamsBlock","userTeams","teamFileMode","usersFiles","setUsersFies","microsoftPath","setMicrosoftPath","fileBackAvaliable","setFilesBackAvaliable","getFilesState","setGetFilesState","loadGetUserMicrosoftFiles","_loadGetUserMicrosoftFiles","getUserMicrosoftFiles","microsftPathArray","pop","outputString","GovernmentCreateNewTeam","createTeamLoadingState","setCreateTeamLoadingState","teamDataState","setTeamDataState","isCreatingTeam","setIsCreatingTeam","setTeamName","setSeason","teamListItemId","setTeamListItemId","teams","setTeams","setTeamsNextLink","selectedMicrosoftTeam","setSelectedMicrosoftTeam","isSelectingFile","setIsSelectingFile","selectedFile","setSelectedFile","_loadMicrosftTeams","_updateTeam","newTeamId","microsoftTeamId","dependsOn","_deleteTeam","_getMicrosoftTeam","getMicrosoftTeamId","_getTeamData","teamResult","getMicrosoftTeam","loadMicrosftTeams","getTeamData","RosterBlock","deleteTeam","updateTeam","RosterSelectFile","membersState","setMembersState","members","setMembers","_getMembers","teamResultData","rosters","teamIndex","save","shift","getMembers","member","RosterBlockItem","rosterState","setRosterState","callingSelectedFile","setIsCallingSelectedFile","_createMemberItem","updatePlayerData","_updatePlayerData","createMemberItem","onFocus","onBlur","MicrosoftFilePicker","GovernmentSportsTeamAddPost","selectedShareID","setSelectedShareID","postName","setPostName","postSubmissionState","setPostSubmissionState","setSelectedSportId","_getShareLink","itemPathArray","_createFileSubmission","userIdResult","submissionID","timeCreated","PickSportTeam","getShareLink","createFileSubmission","setSportTeams","sportTeamState","setSportTeamState","GovernmentReviewFileSubmission","dataURL","setDataURL","unknown","dataContentType","setDataContentType","currentSubmissionInfomration","setCurrentSubmissionInformation","approveSubmissionState","setApproveSubmissionState","denySubmissionState","setDenySubmissionState","deleteSubmissionState","setDeleteSubmissionState","_deleteSubmission","_getSubmissionInformation","_approveSubmission","newInformation","_denySubmission","_loadFile","getSubmissionInformation","loadFile","deleteSubmission","approveSubmission","denySubmission","GovernmentCalendar","GovernmentSchedule","loadedSchedules","setLoadedSchedules","_loadSchedules","loadSchedules","GovernmentTimetable","isValidHexaCode","test","setScheduleListId","setScheduleProperName","setScheduleDescriptiveName","newPeriods","setNewPeriods","setColor","isPickingColor","setIsPickingColor","isCreatingSchedule","setIsCreatingSchedule","createScheduleLoadingState","setCreateScheduleLoadingState","loadScheduleState","setLoadScheduleState","deleteState","setDeleteState","_submitSchedule","_deleteFunction","_loadFunction","loadFunction","PeriodBlock","onSetNewPeriods","out","ColorPicker","onComplete","hex","InputWidget","disableAlphaChannel","defaultFormat","formats","inputTitleStyle","display","Preview","hideText","hideInitialColor","borderTopRightRadius","borderBottomRightRadius","Panel1","renderThumb","CustomColorThumb","diameter","HueSlider","submitSchedule","deleteFunction","isSelectingStartTime","setIsSelectingStartTime","isSelectingEndTime","setIsSelectingEndTime","update","newNewPeriodsArray","indexToRemove","deleteItem","_worklet_11564229163699_init_data","animatedStyle","useAnimatedStyle","currentColor","positionStyle","GovernmentClasses","classState","setClassState","setClasses","classMap","_getSchoolYears","Dropdown","expandedStyle","setExpanded","expanded","isExpanded","setIsExpanded","GovernmentClassesEdit","selectedSemester","setSelectedSemester","className","setClassName","roomSearchText","roomsNextLink","setRoomsNextLink","rooms","setRooms","roomsState","setRoomsState","selectedRoom","setSelectedRoom","schoolYearState","setSchoolYearState","schoolYearNextLink","setSchoolYearNextLink","schoolYears","setSchoolYears","updateClassState","setUpdateClassState","isShowingClassConfirmMenu","setIsShowingClassConfirmMenu","setPeriods","_getClass","extensionData","semesterId","roomResult","getRoom","_loadRooms","_loadSchoolYears","getSchoolYears","_loadTimetable","newArray","_updateClass","loadTimetable","getClass","loadRooms","loadSchoolYears","dayIndex","DayBlock","updateClass","setSelected","flatMap","_item","GovernmentHomePage","setLoadContentLoadingState","setNewMessageState","newMessageText","setNewMessageText","selectedPowerpoint","setSelectedPowerpoint","isAutoUpdatingText","setIsAutoUpdatingText","_loadCurrentPaultData","_createShareId","updatePaulyData","_updatePaulyData","storeText","loadCurrentPaultData","createShareId","NavBarBlock","des","blockLength","setIsExpandedMode","isHover","setIsHover","navigation","LinkStyle","NavBarComponent","setBlockLength","iconLength","setIconLength","pointerEvents","PageNotFound","paulyListData","paulyDataData","addDataArray","targetTypes","owner","properties","urlOne","boolean","urlTwo","_initializePaulyPartOne","secondUserId","currentUsersIdResult","createGroupData","groupTypes","mailEnabled","mailNickname","visibility","securityEnabled","createGroupResult","createGroupResultData","initializePaulyPartTwo","_initializePaulyPartTwo","teamsData","initializePaulyPartThree","_initializePaulyPartThree","getTeam","getRootSiteIdResult","getRootSiteIdResultData","paulyListNewData","secondRun","getPaulyListResult","getPaulyListResultData","callData","paulyDataResult","paulyDataResultData","addPaulyListResult","initStage","GovernmentAdmin","selectedUser","setSelectedUser","timeLeft","setTimeLeft","timeElapsed","setTimeElapsed","createdGroupId","setCreatedGroupId","selectedUpdates","setSelectedUpdates","partOneStartTime","setPartOneStartTime","partTwoStartTime","setPartTwoStartTime","initResult","setInitResult","initTwoResult","setInitTwoResult","initThreeResult","setInitThreeResult","currentInitStage","setCurrentInitStage","_initializePauly","partOne","partOneResult","initializePaulyPartOne","partTwoLoad","reject","partTwo","done","partThreeLoad","partThree","thirdResult","_initializePaulyFromPartTwo","_initializePaulyFromPartThree","miliSecondsPassed","totalSecondsLeft","minutesLeft","secondsLeft","ceil","minutesLeftString","secondsLeftString","totalMinutesPast","minutesPast","hoursPast","secondsPast","hoursLeftString","UserBlock","initializePauly","initializePaulyFromPartTwo","addData","newSelectedUpdates","initializePaulyFromPartThree","currentUserId","setCurrentUserId","loadedUsers","setLoadedUsers","loadUsersResult","setLoadUsersResult","_getUserId","getUsers","_getUsers","newUsers","getUserId","GovernmentRooms","roomState","setRoomState","GovermentRoomsCreate","createRoomState","setCreateRoomState","setRoomName","_createRoom","items","createRoom","MicrosoftGraphEditList","currentColumns","setCurrentColumns","isCoppiedToClipboard","setIsCoppiedToClipboard","_getListItems","_indexColumn","columnId","newColumnData","_getColumns","newCurrentColumns","columnGroup","readOnly","getListItems","getColumns","Clipboard","setStringAsync","indexColumn","MicrosoftGraphEditGroup","deleteGroupLoadingState","setDeleteGroupLoadingState","_deleteGroup","deleteGroup","MicrosoftGraphEditExtension","deleteExtensionLoadingState","setDeleteExtensionLoadingState","_deleteExtension","deleteExtension","MicrosoftGraphEdit","ChannelBlock","groupIndex","selectedGroup","channelIndex","isLoading","setIsLoading","_addChannel","outGroups","_removeChannel","itemResult","addChannel","removeChannel","GroupBlock","setSelectedGroup","GovernmentResources","getTeamsState","setGetTeamsState","resultGroups","getResult","channelResult","getResultData","indexResult","channelGetResult","ListItem","getDressCodeData","_getDressCodeData","newDressCodes","GovernmentDressCode","getDressCodeState","setGetDressCodeState","setDressCodes","DressCodeBlock","setDressCodeData","selectedDressCodeId","setSelectedDressCodeId","newDressCodeData","GovernmentDressCodeEdit","setDressCodeName","setDressCodeListId","createDressCodeState","setCreateDressCodeState","_loadCreateDressCode","createDressCode","setDressCodeState","isCreatingDressCode","setIsCreatingDressCode","deleteDressCodeState","setDeleteDressCodeState","_deleteDressCode","loadCreateDressCode","deleteDressCode","GovernmentTimetableEdit","dressCodeState","createTimetableLoadingState","setCreateTimetableLoadingState","setTimetableName","selectedSchedules","setSelectedSchedules","selectedDressCode","setSelectedDressCode","schoolDays","setSchoolDays","selectedDefaultSchedule","setSelectedDefaultSchedule","_createTimetable","scheduals","timetableDefaultScheduleId","_getDressCodes","getDressCodes","ScheduleBlock","SchoolDays","createTimetable","SchoolDayItem","newSchoolDays","saveCurrent","scheduleState","setScheduleState","ProfileBlock","checkIfStudent","role","reversed","reverse","join","reverseYearTwelve","reverseYearEleven","reverseYearTen","reverseYearNine","grade","userIds","imagesIdsMap","imageIdsArray","batchResultDownloadUrls","imagesDownloadUrls","thumbnails","c300x400_crop","outputUsers","imageDownloadUrl","mail","student","_getStudentData","createdTime","_changeStudentSelection","selectedFileListId","fileData","fileIndex","newFileData","_removeStudentSelection","getNumberOfBlocks","Students","_loadUsers","loadUsers","StudentBlock","numColumns","_getImage","newUser","updateStateUser","urlOut","imageDataUrl","calculateMarginEnds","widthIn","side","numberOfBlocks","widthRemaining","getImage","timer","ms","res","siteResult","siteData","copyPayload","copyResult","copyData","notComplete","resourceId","copyFetch","copyFetchData","getItemResult","getItemData","studentData","studentListResult","SelectMainFile","setFilePickingMode","setFileData","fileState","setFileState","setSelectedFileListId","getStudentData","selectedFileList","filePickingModeEnum","StudentSelectFileBlock","updateState","setUpdateState","_callRemoveSelection","removeStudentSelection","_callChangeSelection","changeStudentSelection","callRemoveSelection","callChangeSelection","GovernmentStudents","StudentItem","filePickingMode","select","transparent","onRequestClose","StudentsSelectFile","isReviewing","setIsReviewing","addImageState","setAddImageState","_loadAddImage","loadAddImage","AuthenticatedView","dimensions","overide","setOveride","LoadingView","NativeRouter","window","Routes","Route","element","GovernmentRoomsCreate","GovernmentSchedual","GovernmentScheduleEdit","GovernmentSportTeamEdit","isShowingLogout","setIsShowingLogout","getPaulyLists","_getPaulyLists","paulyListResult","paulyListResultData","getUserProfile","_getUserProfile","profileResult","profileData","validateGovernmentMode","_validateGovernmentMode","userResult","teamsResult","AsyncStorage","setItem","_checkIfGovernmentMode","getItem","_setWantGovernment","getWantGovernment","_getWantGovernment","pca","PublicClientApplication","authority","redirectUri","AppMain","MsalProvider","SafeAreaView","AuthDeep","getAuthToken","_getAuthToken","userInitated","government","setWantGovernment","accounts","getAllAccounts","setActiveAccount","checkIfGovernmentMode","addEventCallback","EventType","LOGIN_SUCCESS","handleRedirectPromise","then","authResult","loginRedirect","catch","err","_refreshToken","refreshToken","AuthenticatedTemplate","AuthenticatedViewMain","UnauthenticatedTemplate","windowDimensions","Dimensions","screenDimensions","AppCore","screen","setDimensions","subscription","addEventListener","oldWidth","newWidth","newHeight","oldCurrentBreakPointMode","xSmall","xLarge","large","medium","small","theme","DefaultTheme","roundness","colors","primary","primaryContainer","onPrimary","onPrimaryContainer","inversePrimary","secondary","secondaryContainer","onSecondary","onSecondaryContainer","tertiary","tertiaryContainer","onTertiary","surface","surfaceVariant","onSurfaceVariant","background","onSurface","onBackground","backdrop","outline","outlineVariant","shadow","scrim","Provider","PaperProvider","SafeAreaProvider","GestureHandlerRootView","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","t","this","ns","def","indexOf","getOwnPropertyNames","definition","o","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}