{"version":3,"file":"static/js/main.37fe68c1.js","mappings":"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","sources":["src/Redux/reducers/monthDataReducer.ts","src/Redux/reducers/resourcesLastCallReducer.ts","src/types.ts","src/Redux/reducers/safeAreaColorsReducer.ts","src/Redux/reducers/microsoftProfileDataReducer.ts","src/Redux/reducers/currentEventReducer.ts","src/Redux/reducers/currentEventLastCalledReducer.ts","src/Redux/reducers/selectedDateReducer.ts","src/Redux/reducers/paulyListReducer.ts","src/Redux/reducers/authenticationTokenReducer.ts","src/Redux/reducers/authenticationRefreshTokenReducer.ts","src/Redux/reducers/dimentionsReducer.ts","src/Redux/reducers/authenticationApiToken.ts","src/Redux/reducers/tasksReducers.ts","src/Redux/reducers/paulyDataReducer.ts","src/Redux/reducers/resourcesReducer.ts","src/Redux/reducers/addEventReducer.ts","src/Redux/reducers/homepageDataReducer.ts","src/Redux/reducers/expandedModeReducer.ts","src/Redux/reducers/isShowingProfileBlockReducer.ts","src/Redux/reducers/isGovernmentModeReducer.ts","src/Redux/reducers/commissionsReducer.ts","src/Redux/reducers/pdfDataReducer.ts","src/Redux/reducers/monthViewReducer.ts","src/Redux/reducers/authenticationCallReducer.ts","src/Redux/reducers/studentSearchReducer.ts","src/Redux/store.ts","src/UI/Icons/Icons.tsx","src/login.tsx","src/Functions/calendar/calendarFunctions.ts","src/PaulyConfig.ts","src/Functions/ultility/microsoftAssets.ts","src/Functions/ultility/batchRequest.ts","src/Functions/ultility/createUUID.ts","src/Functions/homepage/getDressCode.ts","src/Functions/calendar/calendarFunctionsGraph.ts","src/AuthenticatedView/MonthView.tsx","src/Functions/homepage/getCurrentPaulyData.ts","src/UI/ProgressView.tsx","src/UI/ScrollingTextAnimation.tsx","src/AuthenticatedView/HomePage.tsx","src/Functions/commissions/getLocation.ts","src/Functions/commissions/claimCommissionsFunctions.ts","src/AuthenticatedView/Commissions/CommissionClaim.web.tsx","src/Functions/commissions/getCommission.ts","src/UI/WebViewCross.tsx","src/AuthenticatedView/Commissions/CommissionsView.tsx","src/Functions/commissions/getPoints.ts","src/Functions/commissions/getCommissions.ts","src/UI/BackButton.tsx","src/AuthenticatedView/Commissions/Commissions.tsx","src/Functions/homepage/getUsersTasks.ts","src/Functions/homepage/getInsightData.ts","src/UI/CheckMark/AnimatedCheckMarkPath.tsx","src/UI/CheckMark/CustomCheckBox.tsx","src/UI/PDF/PDFView.web.tsx","src/UI/Icons/MimeTypeIcon.tsx","src/Functions/classesFunctions.ts","src/AuthenticatedView/Notifications.tsx","src/Functions/getResources.ts","src/AuthenticatedView/Resources.tsx","src/AuthenticatedView/Profile/Settings.tsx","src/AuthenticatedView/Profile/Government/Government.tsx","src/UI/Pickers/Picker.tsx","src/Functions/groupsData.ts","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphOverview.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphCreateList.tsx","src/Functions/commissions/getSubmissions.ts","src/AuthenticatedView/Profile/Government/GovernmentCommissions/GovernmentCommissions.tsx","src/UI/Pickers/SegmentedPicker.tsx","src/UI/Map/Map.web.tsx","src/UI/Slider.tsx","src/Functions/ultility/getFileWithShareID.ts","src/Functions/commissions/updateCommission.ts","src/AuthenticatedView/Profile/Government/GovernmentCommissions/GovernmentEditCommission.tsx","src/Functions/sports/getSportsContent.ts","src/Functions/sports/sportsFunctions.ts","src/Functions/sports/getRoster.ts","src/UI/SVGXml/SVGXml.web.tsx","src/AuthenticatedView/Sports.tsx","src/AuthenticatedView/Calendar/DayView.tsx","src/AuthenticatedView/Calendar/Week.tsx","src/AuthenticatedView/Calendar/SelectTimetable.tsx","src/AuthenticatedView/Calendar/SelectSchoolDayData.tsx","src/Functions/updateEvent.ts","src/AuthenticatedView/Calendar/AddEvent.tsx","src/UI/CalendarTypePicker.tsx","src/Functions/calendar/getEvents.ts","src/AuthenticatedView/Calendar/Calendar.tsx","src/Functions/sports/getSubmissions.ts","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentHandleFileSubmissions.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSports.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentCreateNewSport.tsx","src/Functions/sports/getSport.ts","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportsTeams.tsx","src/Functions/microsoftFilePickerFunctions.ts","src/UI/MicrosoftFilePicker.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportTeamEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentSportsTeamAddPost.tsx","src/AuthenticatedView/Profile/Government/GovernmentSports/GovernmentReviewFileSubmission.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentCalendar.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentSchedule.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetable.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentScheduleEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClasses.tsx","src/Functions/calendar/getSchoolYears.ts","src/UI/Dropdown.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentClassesEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentHomePage.tsx","src/UI/NavComponent.tsx","src/AuthenticatedView/404Page.tsx","src/Functions/initializePauly/initializePaulyData.ts","src/Functions/initializePauly/initializePauly.ts","src/AuthenticatedView/Profile/Government/GovernmentAdminCenter/GovernmentAdmin.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovernmentRooms.tsx","src/AuthenticatedView/Profile/Government/GovernmentClasses/GovermentRoomsCreate.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditList.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditGroup.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEditExtension.tsx","src/AuthenticatedView/Profile/Government/MicrosoftGraphLists/MicrosoftGraphEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentResources.tsx","src/UI/ListItem.tsx","src/Functions/homepage/getDressCodeData.ts","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCode.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/DressCodeBlock.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit.tsx","src/AuthenticatedView/Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetableEdit.tsx","src/AuthenticatedView/Profile/ProfileBlock.tsx","src/Functions/studentFunctions.ts","src/AuthenticatedView/Students.tsx","src/Functions/addImage.ts","src/AuthenticatedView/Profile/Government/GovernmentStudents.tsx","src/AuthenticatedView/LoadingScreen.tsx","src/AuthenticatedView/AuthenticatedViewMain.tsx","src/Functions/ultility/getPaulyLists.ts","src/Functions/ultility/getUserProfile.ts","src/Functions/handleGovernmentLogin.ts","AppMain/AppMain.web.tsx","App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: monthDataType[] = [];\n\nexport const monthDataSlice = createSlice({\n  name: 'monthData',\n  initialState: initalState,\n  reducers: {\n    setMonthData: (_state, action: PayloadAction<monthDataType[]>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default monthDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const resourcesLastCalled = createSlice({\n  name: 'resourcesLastCalled',\n  initialState: initalState,\n  reducers: {\n    setResourcesLastCalled: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default resourcesLastCalled.reducer;\n","// Andrew Mainella\n// Pauly\n// October 3 2023\n\n// types.ts\n// Stores all of paulys types\n\n// From https://getbootstrap.com/docs/5.0/layout/breakpoints/\nexport enum breakPointMode {\n  xSmall, // <576px  ->0\n  small, // ≥576px  ->1\n  medium, // ≥768px  ->2\n  large, // ≥992px  ->3\n  xLarge, // ≥1200px ->4\n}\n\nexport enum loadingStateEnum {\n  loading,\n  success,\n  failed,\n  notStarted,\n  cannotStart,\n  offline,\n}\n\nexport enum dataContentTypeOptions {\n  video,\n  image,\n  pdf,\n  unknown,\n}\n\nexport enum taskImportanceEnum {\n  low,\n  normal,\n  high,\n}\n\nexport enum taskStatusEnum {\n  notStarted,\n  inProgress,\n  completed,\n  waitingOnOthers,\n  deferred,\n}\nexport enum resourceResponce {\n  found,\n  notFound,\n  failed,\n}\nexport enum commissionTypeEnum {\n  Issued,\n  Location,\n  Image,\n  ImageLocation,\n  QRCode,\n}\nexport enum paulyEventType {\n  personal,\n  regular,\n  schoolDay,\n  schoolYear,\n  studentCouncil,\n}\n\nexport enum recurringType {\n  daily,\n  weekly,\n  monthly,\n  yearly,\n}\n\nexport enum semesters {\n  semesterOne,\n  semesterTwo,\n}\n\nexport enum submissionTypeEnum {\n  all,\n  unApproved,\n  approved,\n  unReviewed,\n}\n\nexport enum locationStateEnum {\n  success,\n  permissionDenied,\n  notCloseEnough,\n  mockedLocation,\n  notStarted,\n}\n\nexport enum calendarMode {\n  month,\n  week,\n  day,\n}\n\nexport enum resourceMode {\n  home,\n  sports,\n  advancement,\n  schoolEvents,\n  annoucments,\n  fitness,\n  files,\n}\n\ndeclare global {\n  type addDataType = {\n    data: object;\n    urlOne: string;\n    urlTwo?: string;\n    id: string;\n  };\n  type assignmentTypeQuiz = {\n    id: string;\n    title: string;\n    description: string;\n    assignmentEnum: number;\n    documentRef: string;\n    assignmentDuringClass: boolean;\n    selectedMonth?: number;\n    selectedDay?: number;\n    dueDate?: Date;\n  };\n  type batchResponseType = {\n    method: 'GET' | 'POST';\n    id: string;\n    status: number;\n    headers: object | undefined;\n    body: object | undefined;\n  };\n  type calendarCourseType = {\n    name: string;\n    semester: number;\n    dayA: number;\n    dayB: number;\n    dayC: number;\n    dayD: number;\n    noClass: noClassType[];\n    year: number;\n    assignments: assignmentTypeQuiz[];\n  };\n  type channelType = {\n    id: string;\n    displayName: string;\n    selected: boolean;\n    loading: boolean;\n    error: boolean;\n    description?: string;\n  };\n  type classType = {\n    name: string;\n    id: string;\n    room: roomType;\n    schoolYearId: string;\n    semester: semesters;\n    periods: number[];\n  };\n  type commissionType = {\n    itemId: string;\n    title: string;\n    timed: boolean;\n    points: number;\n    hidden: boolean;\n    maxNumberOfClaims: number;\n    allowMultipleSubmissions: boolean;\n    submissionsCount: number;\n    claimCount: number;\n    reviewedCount: number;\n    commissionId: string;\n    value: commissionTypeEnum;\n    startDate?: string;\n    endDate?: string;\n    proximity?: number;\n    coordinateLat?: number;\n    coordinateLng?: number;\n    postData?: {\n      teamId: string;\n      channelId: string;\n      postId: string;\n    };\n  };\n  type dressCodeIncentiveType = {\n    name: string;\n    description: string;\n    requirementsDescription: string;\n    id: string;\n  };\n  type dressCodeDataType = {\n    name: string;\n    description: string;\n    id: string;\n  };\n  type dressCodeType = {\n    name: string;\n    id: string;\n    listId: string;\n    dressCodeData: dressCodeDataType[];\n    dressCodeIncentives: dressCodeIncentiveType[];\n  };\n  type dateProperty = {\n    Date: number;\n    ColorName?: string;\n    SchoolDay?: string;\n    Value?: number;\n  };\n  type groupType = {\n    name: string;\n    id: string;\n  };\n  type governmentRosterType = {\n    name: string;\n    id: string;\n    imageShareId?: string;\n    listItemId?: string;\n    position?: string;\n    playerNumber?: string;\n    posts?: string[];\n  };\n  type headerType = {\n    key: string;\n    value: string;\n  };\n  type locationCoords = {\n    latCoordinate: number;\n    lngCoordinate: number;\n  };\n  type monthDataType = {\n    id: string;\n    showing: boolean;\n    dayData: number;\n    events: eventType[];\n  };\n  type microsoftUserType = {\n    id: string;\n    displayName: string;\n  };\n  type resourceDataType = {\n    teamId: string;\n    conversationId: string;\n    id: string; // message id\n    body: string;\n    html: boolean; // if false is text\n    attachments?: resourceType[];\n  };\n  type resourceFollowType = {\n    teamId: string;\n    channelId: string;\n  };\n  type roomType = {\n    name: string;\n    id: string;\n  };\n  type rosterType = {\n    name: string;\n    id: string;\n    imageShareId?: string;\n    position?: string;\n    playerNumber?: string;\n    posts?: string[];\n  };\n  type schoolDayDataCompressedType = {\n    schoolDayId: string;\n    scheduleId: string;\n    dressCodeId: string;\n    semester: semesters;\n    dressCodeIncentiveId: string;\n    schoolYearEventId: string;\n  };\n  type schoolDayDataType = {\n    schoolDay: schoolDayType;\n    schedule: scheduleType;\n    dressCode: dressCodeDataType;\n    semester: semesters;\n    dressCodeIncentive?: dressCodeIncentiveType;\n  };\n  type schoolDayType = {\n    name: string;\n    shorthand: string;\n    id: string;\n    order: number;\n  };\n  type submissionType = {\n    userName: string;\n    submissionTime: string;\n    id: string;\n    itemId: string;\n    approved: boolean;\n    reviewed: boolean;\n    submissionImage?: string;\n  };\n  type studentInformationType = {\n    listId: string;\n    driveId: string;\n    selected: boolean;\n    createdTime: string;\n  };\n  type sportType = {\n    name: string;\n    id: string;\n    svgData: string;\n  };\n  type sportTeamType = {\n    teamName: string;\n    season: number;\n    teamId: string;\n  };\n  type schoolUserType = {\n    name: string;\n    id: string;\n    mail: string;\n    role: string;\n    grade?: '9' | '10' | '11' | '12';\n    student: boolean;\n    imageDownloadUrl: string;\n    imageState: loadingStateEnum;\n    imageDataUrl?: string;\n  };\n  type taskType = {\n    name: string;\n    id: string;\n    importance: taskImportanceEnum;\n    status: taskStatusEnum;\n    excess: boolean;\n  };\n  type paulyEventTypes = 'schoolDay' | 'schoolYear';\n  type eventType = {\n    id: string;\n    name: string;\n    startTime: string;\n    endTime: string; // This is held in iso format\n    eventColor: string; // This is held in iso format\n    microsoftEvent: boolean;\n    allDay: boolean;\n    paulyEventType?: paulyEventTypes;\n    paulyEventData?: string;\n    microsoftReference?: string;\n    schoolDayData?: {\n      schoolDayData: schoolDayType;\n      schedule: scheduleType;\n      dressCode: dressCodeDataType;\n      semester: semesters;\n      dressCodeIncentiveId?: string;\n    };\n  };\n  type noClassType = {\n    day: number;\n    Month: number;\n    Year: number;\n  };\n  type scheduleType = {\n    properName: string;\n    descriptiveName: string;\n    periods: periodType[];\n    id: string;\n    color: string;\n  };\n  type periodType = {\n    startHour: number;\n    startMinute: number;\n    endHour: number;\n    endMinute: number;\n    id: string;\n  };\n  type teamsGroupType = {\n    teamName: string;\n    teamId: string;\n    teamDescription: string;\n  };\n  type timetableStringType = {\n    name: string;\n    id: string;\n  };\n  type timetableType = {\n    name: string;\n    id: string;\n    schedules: scheduleType[];\n    days: schoolDayType[];\n    dressCode: dressCodeType;\n  };\n  type microsoftFileType = {\n    name: string;\n    id: string;\n    lastModified: string;\n    folder: boolean;\n    parentDriveId: string;\n    parentPath: string;\n    itemGraphPath: string;\n    callPath: string;\n    type: string;\n  };\n  type paulyDataType = {\n    message: string;\n    animationSpeed: number;\n    powerpointBlob: string;\n    powerpointShare: string;\n    paulyDataState: loadingStateEnum;\n  };\n  type paulyListType = {\n    siteId: string;\n    studentFilesListId: string;\n    commissionListId: string;\n    commissionSubmissionsListId: string;\n    paulyDataListId: string;\n    scheduleListId: string;\n    sportsListId: string;\n    sportsApprovedSubmissionsListId: string;\n    sportsSubmissionsListId: string;\n    timetablesListId: string;\n    resourceListId: string;\n    dressCodeListId: string;\n    roomListId: string;\n    eventTypeExtensionId: string;\n    eventDataExtensionId: string;\n    classExtensionId: string;\n    resourceExtensionId: string;\n  };\n  type sportPost = {\n    caption: string;\n    fileID: string;\n    fileType: dataContentTypeOptions;\n  };\n  type resourceType = {\n    webUrl: string;\n    id: string;\n    title: string;\n    type: string;\n  };\n  type insightResult = {\n    userState: loadingStateEnum;\n    trendingState: loadingStateEnum;\n    userData: resourceType[];\n    trendingData: resourceType[];\n  };\n  type listColumnType = {\n    columnGroup: string;\n    description: string;\n    displayName: string;\n    enforceUniqueValues: boolean;\n    hidden: boolean;\n    id: string;\n    indexed: boolean;\n    name: string;\n    readOnly: boolean;\n    required: boolean;\n  };\n  type mediaSubmissionType = {\n    Title: string;\n    user: string;\n    submissionId: string;\n    accepted: boolean;\n    reviewed: boolean;\n    selectedSportId: string;\n    selectedTeamId: string;\n    fileId: string;\n    itemID: string;\n  };\n}\n\nexport class Colors {\n  static white = '#FFFFFF';\n\n  static maroon = '#793033';\n\n  static lightGray = '#ededed';\n\n  static darkGray = '#444444';\n\n  static black = '#000000';\n\n  static danger = 'red';\n}\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { Colors } from '../../types';\n\nconst initalState: { top: string; bottom: string } = {\n  top: Colors.maroon,\n  bottom: Colors.maroon,\n};\n\nexport const safeAreaColorsSlice = createSlice({\n  name: 'safeAreaColors',\n  initialState: initalState,\n  reducers: {\n    setSafeAreaColors: (\n      _state,\n      action: PayloadAction<{ top: string; bottom: string }>,\n    ) => {\n      return action.payload;\n    },\n    setSafeAreaColorTop: (state, action: PayloadAction<string>) => {\n      return { ...state, top: action.payload };\n    },\n    setSafeAreaColorBottom: (state, action: PayloadAction<string>) => {\n      return { ...state, bottom: action.payload };\n    },\n  },\n});\n\nexport default safeAreaColorsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: { uri: string; displayName: string; id: string } = {\n  uri: '',\n  displayName: '',\n  id: '',\n};\n\nexport const microsoftProfileDataSlice = createSlice({\n  name: 'microsoftProfileData',\n  initialState: initalState,\n  reducers: {\n    setMicrosoftProfileData: (\n      _state,\n      action: PayloadAction<{ uri: string; displayName: string; id: string }>,\n    ) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default microsoftProfileDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalCalendarState: eventType[] = [];\n\nexport const currentEventsSlice = createSlice({\n  name: 'currentEvents',\n  initialState: initalCalendarState,\n  reducers: {\n    setCurrentEvents: (_state, action: PayloadAction<eventType[]>) => {\n      return [...action.payload];\n    },\n    pushEvent: (state, action: PayloadAction<eventType>) => {\n      return [...state, action.payload];\n    },\n    removeCurrentEvent: (state, action: PayloadAction<number>) => {\n      state.slice(action.payload, 1);\n    },\n  },\n});\n\nexport default currentEventsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const currentEventsLastCalled = createSlice({\n  name: 'currentEventsLastCalled',\n  initialState: initalState,\n  reducers: {\n    setCurrentEventsLastCalled: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default currentEventsLastCalled.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = new Date().toISOString();\n\nexport const selectedDateSlice = createSlice({\n  name: 'selectedDate',\n  initialState: initalState,\n  reducers: {\n    setCurrentEventsLastCalled: (_state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default selectedDateSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: paulyListType = {\n  siteId: '',\n  studentFilesListId: '',\n  commissionListId: '',\n  commissionSubmissionsListId: '',\n  paulyDataListId: '',\n  scheduleListId: '',\n  sportsListId: '',\n  sportsApprovedSubmissionsListId: '',\n  sportsSubmissionsListId: '',\n  timetablesListId: '',\n  resourceListId: '',\n  eventTypeExtensionId: '',\n  eventDataExtensionId: '',\n  classExtensionId: '',\n  resourceExtensionId: '',\n  dressCodeListId: '',\n  roomListId: '',\n};\n\nexport const paulyListSlice = createSlice({\n  name: 'paulyList',\n  initialState: initalState,\n  reducers: {\n    setPaulyList: (_state, action: PayloadAction<paulyListType>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default paulyListSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationTokenSlice = createSlice({\n  name: 'authenticationToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationToken: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationTokenSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationRefreshTokenSlice = createSlice({\n  name: 'authenticationRefreshToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationRefreshToken: (state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationRefreshTokenSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\n// xSmall,\t <576px  ->0\n// small,    ≥576px  ->1\n// medium,   ≥768px  ->2\n// large,    ≥992px  ->3\n// xLarge    ≥1200px ->4\n\nconst initalState: {\n  width: number;\n  height: number;\n  currentBreakPoint: number;\n} = { width: 0, height: 0, currentBreakPoint: 0 };\n\nexport const dimentionsSlice = createSlice({\n  name: 'dimentions',\n  initialState: initalState,\n  reducers: {\n    setDimentionsWidth: (state, action: PayloadAction<number>) => {\n      return {\n        width: action.payload,\n        height: state.height,\n        currentBreakPoint: state.currentBreakPoint,\n      };\n    },\n    setDimentionsWidthCurrentBreakPoint: (\n      state,\n      action: PayloadAction<{ width: number; currentBreakPoint: number }>,\n    ) => {\n      return {\n        width: action.payload.width,\n        height: state.height,\n        currentBreakPoint: action.payload.currentBreakPoint,\n      };\n    },\n    setDimentionsHeight: (state, action: PayloadAction<number>) => {\n      return {\n        width: state.width,\n        height: action.payload,\n        currentBreakPoint: state.currentBreakPoint,\n      };\n    },\n  },\n});\n\nexport default dimentionsSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: string = '';\n\nexport const authenticationApiTokenSlice = createSlice({\n  name: 'authenticationApiToken',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationApiToken: (_state, action) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default authenticationApiTokenSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalStateTaskDeltaLink: string = '';\n\nexport const taskDeltaSlice = createSlice({\n  name: 'taskDeltaLink',\n  initialState: initalStateTaskDeltaLink,\n  reducers: {\n    setTaskDeltaLink: (_state, action: PayloadAction<string>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport const tasksDeltaReducer = taskDeltaSlice.reducer;\n\nconst initalTasksState: string[] = [];\n\nexport const tasksSlice = createSlice({\n  name: 'tasks',\n  initialState: initalTasksState,\n  reducers: {\n    setCurrentEvents: (state, action: PayloadAction<string[]>) => {\n      return [...action.payload];\n    },\n    pushEvent: (state, action: PayloadAction<string>) => {\n      return [...state, action.payload];\n    },\n  },\n});\n\nexport const tasksReducer = tasksSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\nconst initalState: paulyDataType = {\n  message: '',\n  animationSpeed: 0,\n  powerpointBlob: '',\n  powerpointShare: '',\n  paulyDataState: loadingStateEnum.loading,\n};\n\nexport const paulyDataSlice = createSlice({\n  name: 'paulyData',\n  initialState: initalState,\n  reducers: {\n    setPaulyData: (_state, action: PayloadAction<paulyDataType>) => {\n      return action.payload;\n    },\n    setPaulyDataState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, paulyDataState: action.payload };\n    },\n  },\n});\n\nexport default paulyDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum, resourceMode } from '../../types';\n\ntype resourceStoreState = {\n  resources: resourceDataType[];\n  loadingState: loadingStateEnum;\n  searchValue: string;\n  resourceFollow: resourceFollowType[];\n  selectedResourceMode: resourceMode;\n};\n\nconst initalResourcesState: resourceStoreState = {\n  resources: [],\n  loadingState: loadingStateEnum.loading,\n  searchValue: '',\n  resourceFollow: [],\n  selectedResourceMode: resourceMode.home,\n};\n\nexport const resourcesSlice = createSlice({\n  name: 'resources',\n  initialState: initalResourcesState,\n  reducers: {\n    setResourceData: (state, action: PayloadAction<resourceDataType[]>) => {\n      return { ...state, resources: action.payload };\n    },\n    pushResource: (state, action: PayloadAction<resourceDataType>) => {\n      state.resources.push(action.payload);\n    },\n    setResources: (\n      state,\n      action: PayloadAction<{\n        resources: resourceDataType[];\n        loadingState: loadingStateEnum;\n      }>,\n    ) => {\n      return {\n        ...state,\n        loadingState: action.payload.loadingState,\n        resources: action.payload.resources,\n      };\n    },\n    setResourcesState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, loadingState: action.payload };\n    },\n    setSearchValue: (state, action: PayloadAction<string>) => {\n      return { ...state, searchValue: action.payload };\n    },\n    setResourceFollow: (state, action: PayloadAction<resourceFollowType[]>) => {\n      return { ...state, resourceFollow: action.payload };\n    },\n    setSelectedResourceMode: (state, action: PayloadAction<resourceMode>) => {\n      return { ...state, selectedResourceMode: action.payload };\n    },\n  },\n});\n\nexport default resourcesSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport {\n  calendarMode,\n  paulyEventType,\n  recurringType,\n  loadingStateEnum,\n} from '../../types';\n\ntype addEventStatesType = {\n  eventName: string;\n  createEventState: loadingStateEnum;\n  isPickingStartDate: boolean;\n  isPickingEndDate: boolean;\n  allDay: boolean;\n  isGovernmentEvent: boolean;\n  selectedTimetable: timetableStringType;\n  selectedSchoolDayData: schoolDayDataType | undefined;\n  selectedSchoolYear: eventType | undefined;\n  selectedEventType: paulyEventType;\n  recurringEvent: boolean;\n  selectedRecurringType: recurringType;\n  startDate: string;\n  endDate: string;\n  isShowingAddDate: boolean;\n  isEditing: boolean;\n  selectedCalendarMode: calendarMode;\n  selectedEvent: eventType | undefined;\n};\n\nconst initalState: addEventStatesType = {\n  eventName: '',\n  createEventState: loadingStateEnum.notStarted,\n  isPickingStartDate: false,\n  isPickingEndDate: false,\n  allDay: false,\n  isGovernmentEvent: false,\n  selectedTimetable: {\n    name: '',\n    id: '',\n  },\n  selectedSchoolDayData: undefined,\n  selectedSchoolYear: undefined,\n  selectedEventType: paulyEventType.personal,\n  recurringEvent: false,\n  selectedRecurringType: recurringType.daily,\n  startDate: new Date().toISOString(),\n  endDate: new Date().toISOString(),\n  isShowingAddDate: false,\n  isEditing: false,\n  selectedCalendarMode: calendarMode.month,\n  selectedEvent: undefined,\n};\n\nexport const addEventSlice = createSlice({\n  name: 'addEvent',\n  initialState: initalState,\n  reducers: {\n    setEventName: (state, action: PayloadAction<string>) => {\n      return { ...state, eventName: action.payload };\n    },\n    setCreateEventState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, createEventState: action.payload };\n    },\n    setIsPickingStartDate: (state, action: PayloadAction<boolean>) => {\n      state.isPickingStartDate = action.payload;\n    },\n    setIsPickingEndDate: (state, action: PayloadAction<boolean>) => {\n      state.isPickingEndDate = action.payload;\n    },\n    setAllDay: (state, action: PayloadAction<boolean>) => {\n      return { ...state, allDay: action.payload };\n    },\n    setIsGovernmentEvent: (state, action: PayloadAction<boolean>) => {\n      return { ...state, isGovernmentEvent: action.payload };\n    },\n    setSelectedTimetable: (\n      state,\n      action: PayloadAction<timetableStringType>,\n    ) => {\n      return { ...state, selectedTimetable: action.payload };\n    },\n    setSelectedSchoolDayData: (\n      state,\n      action: PayloadAction<schoolDayDataType | undefined>,\n    ) => {\n      return { ...state, selectedSchoolDayData: action.payload };\n    },\n    setSelectedSchoolYear: (state, action: PayloadAction<eventType>) => {\n      return { ...state, selectedSchoolYear: action.payload };\n    },\n    setSelectedEventType: (state, action: PayloadAction<number>) => {\n      return { ...state, selectedEventType: action.payload };\n    },\n    setRecurringEvent: (state, action: PayloadAction<boolean>) => {\n      return { ...state, recurringEvent: action.payload };\n    },\n    setSelectedRecurringType: (state, action: PayloadAction<recurringType>) => {\n      return { ...state, selectedRecurringType: action.payload };\n    },\n    setStartDate: (state, action: PayloadAction<string | Date>) => {\n      if (typeof action.payload === 'string') {\n        return { ...state, startDate: action.payload };\n      }\n      return { ...state, startDate: action.payload.toISOString() };\n    },\n    setEndDate: (state, action: PayloadAction<string | Date>) => {\n      if (typeof action.payload === 'string') {\n        return { ...state, endDate: action.payload };\n      }\n      return { ...state, endDate: action.payload.toISOString() };\n    },\n    setIsShowingAddDate: (state, action: PayloadAction<boolean>) => {\n      state.isShowingAddDate = action.payload;\n    },\n    setIsEditing: (state, action: PayloadAction<boolean>) => {\n      state.isEditing = action.payload;\n    },\n    setSelectedCalendarMode: (state, action: PayloadAction<calendarMode>) => {\n      state.selectedCalendarMode = action.payload;\n    },\n    setSelectedEvent: (state, action: PayloadAction<eventType | undefined>) => {\n      state.selectedEvent = action.payload;\n    },\n  },\n});\n\nexport default addEventSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport {\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../../types';\n\ntype homepageStatesType = {\n  taskState: loadingStateEnum;\n  userState: loadingStateEnum;\n  trendingState: loadingStateEnum;\n  userData: resourceType[];\n  trendingData: resourceType[];\n  userTasks: taskType[];\n  schoolDayData: undefined | schoolDayDataType;\n  startTime: string;\n  isShowingCompleteTasks: boolean;\n};\n\nconst initalState: homepageStatesType = {\n  taskState: loadingStateEnum.loading,\n  userState: loadingStateEnum.loading,\n  trendingState: loadingStateEnum.loading,\n  userData: [],\n  trendingData: [],\n  userTasks: [\n    {\n      name: '',\n      importance: taskImportanceEnum.normal,\n      id: '',\n      status: taskStatusEnum.notStarted,\n      excess: true,\n    },\n  ],\n  schoolDayData: undefined,\n  startTime: '',\n  isShowingCompleteTasks: false,\n};\n\nexport const homepageDataSlice = createSlice({\n  name: 'homepage',\n  initialState: initalState,\n  reducers: {\n    setTaskState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, taskState: action.payload };\n    },\n    setUserState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, userState: action.payload };\n    },\n    setTrendingState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, trendingState: action.payload };\n    },\n    setUserData: (state, action: PayloadAction<resourceType[]>) => {\n      return { ...state, userData: action.payload };\n    },\n    setTrendingData: (state, action: PayloadAction<resourceType[]>) => {\n      return { ...state, trendingData: action.payload };\n    },\n    setUserTasks: (state, action: PayloadAction<taskType[]>) => {\n      return { ...state, userTasks: action.payload };\n    },\n    updateUserTask: (\n      state,\n      action: PayloadAction<{ task: taskType; index: number }>,\n    ) => {\n      if (action.payload.index < state.userTasks.length) {\n        state.userTasks[action.payload.index] = action.payload.task;\n      } else {\n        return state;\n      }\n    },\n    unshiftUserTask: (state, action: PayloadAction<taskType>) => {\n      state.userTasks.unshift(action.payload);\n    },\n    popUserTask: (state, action: PayloadAction<number>) => {\n      state.userTasks.splice(action.payload, 1);\n    },\n    setSchoolDayData: (state, action: PayloadAction<schoolDayDataType>) => {\n      return { ...state, schoolDayData: action.payload };\n    },\n    setStartTime: (state, action: PayloadAction<string>) => {\n      return { ...state, startTime: action.payload };\n    },\n    setIsShowingCompletedTasks: (state, action: PayloadAction<boolean>) => {\n      return { ...state, isShowingCompleteTasks: action.payload };\n    },\n  },\n});\n\nexport default homepageDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const expandedModeSlice = createSlice({\n  name: 'expandedMode',\n  initialState: initalState,\n  reducers: {\n    setExpandedMode: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default expandedModeSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const isShowingProfileBlockSlice = createSlice({\n  name: 'isShowingProfileBlock',\n  initialState: initalState,\n  reducers: {\n    setIsShowingProfileBlock: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default isShowingProfileBlockSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: boolean = false;\n\nexport const isGovernmentModeSlice = createSlice({\n  name: 'isGovernmentMode',\n  initialState: initalState,\n  reducers: {\n    setIsGovernmentMode: (_state, action: PayloadAction<boolean>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default isGovernmentModeSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\ntype commissionsStateType = {\n  commissionsState: loadingStateEnum;\n  points: number;\n  currentCommissions: commissionType[];\n  selectedCommission: string;\n  commissionNextLink: string | undefined;\n};\n\nconst initalState: commissionsStateType = {\n  commissionsState: loadingStateEnum.loading,\n  points: 0,\n  currentCommissions: [],\n  selectedCommission: '',\n  commissionNextLink: undefined,\n};\n\nexport const commissionsSlice = createSlice({\n  name: 'commissions',\n  initialState: initalState,\n  reducers: {\n    setCommissionsState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, commissionsState: action.payload };\n    },\n    setPoints: (state, action: PayloadAction<number>) => {\n      return { ...state, points: action.payload };\n    },\n    setCurrentCommissions: (state, action: PayloadAction<commissionType[]>) => {\n      return { ...state, currentCommissions: action.payload };\n    },\n    setSelectedCommission: (state, action: PayloadAction<string>) => {\n      return { ...state, selectedCommission: action.payload };\n    },\n    setCommissionNextLink: (\n      state,\n      action: PayloadAction<string | undefined>,\n    ) => {\n      return { ...state, commissionNextLink: action.payload };\n    },\n  },\n});\n\nexport default commissionsSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\n// page number is an index meaning first page is 0\nconst initalState: { inject: string; images: string[]; pageNumber: number } = {\n  inject: '',\n  images: [],\n  pageNumber: 0,\n};\n\nexport const pdfDataSlice = createSlice({\n  name: 'pdfData',\n  initialState: initalState,\n  reducers: {\n    setInject: (state, action: PayloadAction<string>) => {\n      state.inject = action.payload;\n      return { ...state, commissionsState: action.payload };\n    },\n    addImage: (state, action: PayloadAction<string>) => {\n      state.images.push(action.payload);\n    },\n    setImages: (state, action: PayloadAction<string[]>) => {\n      return { ...state, images: action.payload };\n    },\n    setPageNumber: (state, action: PayloadAction<number>) => {\n      return { ...state, pageNumber: action.payload };\n    },\n    increasePageNumber: state => {\n      state.pageNumber += 1;\n    },\n    decreasePageNumber: state => {\n      state.pageNumber -= 1;\n    },\n  },\n});\n\nexport default pdfDataSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\n\nconst initalState: eventType[] = [];\n\nexport const monthViewSlice = createSlice({\n  name: 'monthView',\n  initialState: initalState,\n  reducers: {\n    setMonthViewData: (_state, action: PayloadAction<eventType[]>) => {\n      return action.payload;\n    },\n  },\n});\n\nexport default monthViewSlice.reducer;\n","import { createSlice } from '@reduxjs/toolkit';\n\nconst initalState: number = 0;\n\nexport const authenticationCallSlice = createSlice({\n  name: 'authenticationCall',\n  initialState: initalState,\n  reducers: {\n    setAuthenticationCallIncrement: state => {\n      return state + 1;\n    },\n  },\n});\n\nexport default authenticationCallSlice.reducer;\n","import { PayloadAction, createSlice } from '@reduxjs/toolkit';\nimport { loadingStateEnum } from '../../types';\n\nconst initalState: {\n  searchText: string;\n  users: schoolUserType[];\n  usersState: loadingStateEnum;\n  nextLink: string | undefined;\n} = {\n  searchText: '',\n  users: [],\n  usersState: loadingStateEnum.loading,\n  nextLink: undefined,\n};\n\nexport const studentSearchSlice = createSlice({\n  name: 'studentSearch',\n  initialState: initalState,\n  reducers: {\n    setStudentSearch: (state, action: PayloadAction<string>) => {\n      return { ...state, searchText: action.payload };\n    },\n    setStudentUsers: (state, action: PayloadAction<schoolUserType[]>) => {\n      return { ...state, users: action.payload };\n    },\n    setUsersState: (state, action: PayloadAction<loadingStateEnum>) => {\n      return { ...state, usersState: action.payload };\n    },\n    setNextLink: (state, action: PayloadAction<string | undefined>) => {\n      return { ...state, nextLink: action.payload };\n    },\n    setStudentUserByIndex: (\n      state,\n      action: PayloadAction<{ index: number; user: schoolUserType }>,\n    ) => {\n      if (action.payload.index < state.users.length) {\n        state.users[action.payload.index] = action.payload.user;\n      }\n    },\n    setStudentUserById: (\n      state,\n      action: PayloadAction<{ id: string; user: schoolUserType }>,\n    ) => {\n      const findIndex = state.users.findIndex(e => {\n        return e.id === action.payload.id;\n      });\n      if (findIndex !== -1) {\n        state.users[findIndex] = action.payload.user;\n      }\n    },\n  },\n});\n\nexport default studentSearchSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport monthDataReducer from './reducers/monthDataReducer';\nimport resourcesLastCallReducer, {\n  resourcesLastCalled,\n} from './reducers/resourcesLastCallReducer';\nimport safeAreaColorsReducer from './reducers/safeAreaColorsReducer';\nimport microsoftProfileDataReducer from './reducers/microsoftProfileDataReducer';\nimport currentEventsReducer from './reducers/currentEventReducer';\nimport currentEventsLastCalledReducer from './reducers/currentEventLastCalledReducer';\nimport selectedDateReducer from './reducers/selectedDateReducer';\nimport paulyListReducer from './reducers/paulyListReducer';\nimport authenticationTokenReducer from './reducers/authenticationTokenReducer';\nimport authenticationRefreshTokenReducer from './reducers/authenticationRefreshTokenReducer';\nimport dimentionsReducer from './reducers/dimentionsReducer';\nimport authenticationApiTokenReducer from './reducers/authenticationApiToken';\nimport { tasksDeltaReducer, tasksReducer } from './reducers/tasksReducers';\nimport paulyDataReducer from './reducers/paulyDataReducer';\nimport resourcesReducer from './reducers/resourcesReducer';\nimport addEventReducer from './reducers/addEventReducer';\nimport homepageDataReducer from './reducers/homepageDataReducer';\nimport expandedModeReducer from './reducers/expandedModeReducer';\nimport isShowingProfileBlockReducer from './reducers/isShowingProfileBlockReducer';\nimport isGovernmentModeReducer from './reducers/isGovernmentModeReducer';\nimport commissionsReducer from './reducers/commissionsReducer';\nimport pdfDataReducer from './reducers/pdfDataReducer';\nimport monthViewReducer from './reducers/monthViewReducer';\nimport authenticationCallReducer from './reducers/authenticationCallReducer';\nimport studentSearchReducer from './reducers/studentSearchReducer';\n\nconst store = configureStore({\n  reducer: {\n    addEvent: addEventReducer,\n    authenticationToken: authenticationTokenReducer,\n    authenticationApiToken: authenticationApiTokenReducer,\n    authenticationRefreshToken: authenticationRefreshTokenReducer,\n    authenticationCall: authenticationCallReducer,\n    commissions: commissionsReducer,\n    currentEvents: currentEventsReducer,\n    currentEventsLastCalled: currentEventsLastCalledReducer,\n    dimentions: dimentionsReducer,\n    expandedMode: expandedModeReducer,\n    homepageData: homepageDataReducer,\n    isGovernmentMode: isGovernmentModeReducer,\n    isShowingProfileBlock: isShowingProfileBlockReducer,\n    microsoftProfileData: microsoftProfileDataReducer,\n    monthData: monthDataReducer,\n    monthView: monthViewReducer,\n    paulyData: paulyDataReducer,\n    paulyList: paulyListReducer,\n    pdfData: pdfDataReducer,\n    resources: resourcesReducer,\n    resourcesLastCalled: resourcesLastCallReducer,\n    safeAreaColors: safeAreaColorsReducer,\n    tasks: tasksReducer,\n    tasksDeltaLink: tasksDeltaReducer,\n    selectedDate: selectedDateReducer,\n    studentSearch: studentSearchReducer,\n  },\n});\n\nexport default store;\n// Infer the `RootState` and `AppDispatch` types from the store itself\nexport type RootState = ReturnType<typeof store.getState>;\n// Inferred type: {posts: PostsState, comments: CommentsState, users: UsersState}\nexport type AppDispatch = typeof store.dispatch;\n","import { View, StyleProp, ViewStyle } from 'react-native';\nimport React from 'react';\nimport Svg, {\n  Circle,\n  ClipPath,\n  Defs,\n  G,\n  LinearGradient,\n  Path,\n  Polygon,\n  Rect,\n  Shape,\n  Stop,\n  SvgProps,\n} from 'react-native-svg';\nimport { Colors } from '../../types';\n\ninterface iconProps {\n  width: number;\n  height: number;\n  style?: StyleProp<ViewStyle> | undefined;\n  props?: Shape<SvgProps> | undefined;\n}\n\n// Icons\n// CalendarIcon\n// MedalIcon\n// BookIcon\n// GovernmentIcon\n// HomeIcon\n// UpIcon\n// DownIcon\n// AddIcon\n// CloseIcon\n// ChevronLeft\n// ChevronRight\n// FolderIcon\n// DocumentIcon\n// CopyIcon\n// PersonIcon\n// GearIcon\n// GraduationHatIcon\n// WarningIcon\n// SearchIcon\n\nexport function CalendarIcon({ width, height, style }: iconProps) {\n  return (\n    <View>\n      <Svg\n        width={width}\n        height={height}\n        style={style}\n        viewBox=\"0 0 24 24\"\n        fill=\"none\"\n      >\n        <Path\n          d=\"M7.75 2.5C7.75 2.08579 7.41421 1.75 7 1.75C6.58579 1.75 6.25 2.08579 6.25 2.5V4.07926C4.81067 4.19451 3.86577 4.47737 3.17157 5.17157C2.47737 5.86577 2.19451 6.81067 2.07926 8.25H21.9207C21.8055 6.81067 21.5226 5.86577 20.8284 5.17157C20.1342 4.47737 19.1893 4.19451 17.75 4.07926V2.5C17.75 2.08579 17.4142 1.75 17 1.75C16.5858 1.75 16.25 2.08579 16.25 2.5V4.0129C15.5847 4 14.839 4 14 4H10C9.16097 4 8.41527 4 7.75 4.0129V2.5Z\"\n          fill=\"#000000\"\n        />\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M2 12C2 11.161 2 10.4153 2.0129 9.75H21.9871C22 10.4153 22 11.161 22 12V14C22 17.7712 22 19.6569 20.8284 20.8284C19.6569 22 17.7712 22 14 22H10C6.22876 22 4.34315 22 3.17157 20.8284C2 19.6569 2 17.7712 2 14V12ZM17 14C17.5523 14 18 13.5523 18 13C18 12.4477 17.5523 12 17 12C16.4477 12 16 12.4477 16 13C16 13.5523 16.4477 14 17 14ZM17 18C17.5523 18 18 17.5523 18 17C18 16.4477 17.5523 16 17 16C16.4477 16 16 16.4477 16 17C16 17.5523 16.4477 18 17 18ZM13 13C13 13.5523 12.5523 14 12 14C11.4477 14 11 13.5523 11 13C11 12.4477 11.4477 12 12 12C12.5523 12 13 12.4477 13 13ZM13 17C13 17.5523 12.5523 18 12 18C11.4477 18 11 17.5523 11 17C11 16.4477 11.4477 16 12 16C12.5523 16 13 16.4477 13 17ZM7 14C7.55228 14 8 13.5523 8 13C8 12.4477 7.55228 12 7 12C6.44772 12 6 12.4477 6 13C6 13.5523 6.44772 14 7 14ZM7 18C7.55228 18 8 17.5523 8 17C8 16.4477 7.55228 16 7 16C6.44772 16 6 16.4477 6 17C6 17.5523 6.44772 18 7 18Z\"\n          fill=\"#000000\"\n        />\n      </Svg>\n    </View>\n  );\n}\n\nexport function MedalIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 297.334 297.334\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <G>\n          <Polygon points=\"172.667,64 206.687,0 90.623,0 124.649,64 \" />\n          <Path d=\"M227.904,8.293c-2.553-4.837-6.726-4.834-9.272,0.006l-55.839,106.095c20.009,2.892,38.11,11.76,52.427,24.735 l36.208-68.682c2.551-4.838,2.549-12.754-0.004-17.591L227.904,8.293z\" />\n          <Path d=\"M134.518,114.35L78.7,8.299c-2.547-4.84-6.72-4.843-9.272-0.006L45.909,52.856c-2.552,4.837-2.554,12.753-0.004,17.591 l36.102,68.48C96.362,125.996,114.491,117.181,134.518,114.35z\" />\n          <Path d=\"M148.502,128.279c-46.685,0-84.529,37.844-84.529,84.528c0,46.682,37.845,84.526,84.529,84.526 c46.682,0,84.526-37.845,84.526-84.526C233.028,166.123,195.184,128.279,148.502,128.279z M148.502,273.125 c-33.262,0-60.32-27.059-60.32-60.317c0-33.261,27.059-60.319,60.32-60.319c33.259,0,60.316,27.059,60.316,60.319 C208.819,246.066,181.761,273.125,148.502,273.125z\" />\n          <Path d=\"M148.502,167.404c-25.038,0-45.404,20.367-45.404,45.403c0,25.033,20.366,45.4,45.404,45.4 c25.033,0,45.399-20.367,45.399-45.4C193.902,187.771,173.535,167.404,148.502,167.404z\" />\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function BookIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg width={width} height={height} style={style} viewBox=\"0 0 512 512\">\n      <Path d=\"m202.24 74c-36.13-17.25-86.63-25.7-154.24-26a31.36 31.36 0 0 0 -17.92 5.33 32 32 0 0 0 -14.08 26.57v286.1c0 19.34 13.76 33.93 32 33.93 71.07 0 142.36 6.64 185.06 47a4.11 4.11 0 0 0 6.94-3v-337.11a15.89 15.89 0 0 0 -5.46-12 143 143 0 0 0 -32.3-20.82z\" />\n      <Path d=\"m481.92 53.3a31.33 31.33 0 0 0 -17.92-5.3c-67.61.3-118.11 8.71-154.24 26a143.31 143.31 0 0 0 -32.31 20.78 15.93 15.93 0 0 0 -5.45 12v337.13a3.93 3.93 0 0 0 6.68 2.81c25.67-25.5 70.72-46.82 185.36-46.81a32 32 0 0 0 32-32v-288a32 32 0 0 0 -14.12-26.61z\" />\n    </Svg>\n  );\n}\n\nexport function GovernmentIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"black\"\n    >\n      <Path\n        fillRule=\"evenodd\"\n        clipRule=\"evenodd\"\n        d=\"M11.5528 1.10557C11.8343 0.964809 12.1657 0.964809 12.4472 1.10557L22.4472 6.10557C22.862 6.31298 23.0798 6.77838 22.9732 7.22975C22.8667 7.68112 22.4638 8 22 8H1.99998C1.5362 8 1.13328 7.68112 1.02673 7.22975C0.920172 6.77838 1.13795 6.31298 1.55276 6.10557L11.5528 1.10557ZM6.23604 6H17.7639L12 3.11803L6.23604 6ZM5.99998 9C6.55226 9 6.99998 9.44772 6.99998 10V15C6.99998 15.5523 6.55226 16 5.99998 16C5.44769 16 4.99998 15.5523 4.99998 15V10C4.99998 9.44772 5.44769 9 5.99998 9ZM9.99998 9C10.5523 9 11 9.44772 11 10V15C11 15.5523 10.5523 16 9.99998 16C9.44769 16 8.99998 15.5523 8.99998 15V10C8.99998 9.44772 9.44769 9 9.99998 9ZM14 9C14.5523 9 15 9.44772 15 10V15C15 15.5523 14.5523 16 14 16C13.4477 16 13 15.5523 13 15V10C13 9.44772 13.4477 9 14 9ZM18 9C18.5523 9 19 9.44772 19 10V15C19 15.5523 18.5523 16 18 16C17.4477 16 17 15.5523 17 15V10C17 9.44772 17.4477 9 18 9ZM2.99998 18C2.99998 17.4477 3.44769 17 3.99998 17H20C20.5523 17 21 17.4477 21 18C21 18.5523 20.5523 19 20 19H3.99998C3.44769 19 2.99998 18.5523 2.99998 18ZM0.999976 21C0.999976 20.4477 1.44769 20 1.99998 20H22C22.5523 20 23 20.4477 23 21C23 21.5523 22.5523 22 22 22H1.99998C1.44769 22 0.999976 21.5523 0.999976 21Z\"\n        fill=\"#000000\"\n      />\n    </Svg>\n  );\n}\n\nexport function HomeIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 460.298 460.297\"\n    >\n      <Path\n        d=\"M230.149,120.939L65.986,256.274c0,0.191-0.048,0.472-0.144,0.855c-0.094,0.38-0.144,0.656-0.144,0.852v137.041\n      c0,4.948,1.809,9.236,5.426,12.847c3.616,3.613,7.898,5.431,12.847,5.431h109.63V303.664h73.097v109.64h109.629\n      c4.948,0,9.236-1.814,12.847-5.435c3.617-3.607,5.432-7.898,5.432-12.847V257.981c0-0.76-0.104-1.334-0.288-1.707L230.149,120.939\n      z\"\n      />\n      <Path\n        d=\"M457.122,225.438L394.6,173.476V56.989c0-2.663-0.856-4.853-2.574-6.567c-1.704-1.712-3.894-2.568-6.563-2.568h-54.816\n      c-2.666,0-4.855,0.856-6.57,2.568c-1.711,1.714-2.566,3.905-2.566,6.567v55.673l-69.662-58.245\n      c-6.084-4.949-13.318-7.423-21.694-7.423c-8.375,0-15.608,2.474-21.698,7.423L3.172,225.438c-1.903,1.52-2.946,3.566-3.14,6.136\n      c-0.193,2.568,0.472,4.811,1.997,6.713l17.701,21.128c1.525,1.712,3.521,2.759,5.996,3.142c2.285,0.192,4.57-0.476,6.855-1.998\n      L230.149,95.817l197.57,164.741c1.526,1.328,3.521,1.991,5.996,1.991h0.858c2.471-0.376,4.463-1.43,5.996-3.138l17.703-21.125\n      c1.522-1.906,2.189-4.145,1.991-6.716C460.068,229.007,459.021,226.961,457.122,225.438z\"\n      />\n    </Svg>\n  );\n}\n\nexport function UpIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 330 330\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          id=\"XMLID_224_\"\n          d=\"M325.606,229.393l-150.004-150C172.79,76.58,168.974,75,164.996,75c-3.979,0-7.794,1.581-10.607,4.394 l-149.996,150c-5.858,5.858-5.858,15.355,0,21.213c5.857,5.857,15.355,5.858,21.213,0l139.39-139.393l139.397,139.393 C307.322,253.536,311.161,255,315,255c3.839,0,7.678-1.464,10.607-4.394C331.464,244.748,331.464,235.251,325.606,229.393z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function DownIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 330 330\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          id=\"XMLID_225_\"\n          d=\"M325.607,79.393c-5.857-5.857-15.355-5.858-21.213,0.001l-139.39,139.393L25.607,79.393 c-5.857-5.857-15.355-5.858-21.213,0.001c-5.858,5.858-5.858,15.355,0,21.213l150.004,150c2.813,2.813,6.628,4.393,10.606,4.393 s7.794-1.581,10.606-4.394l149.996-150C331.465,94.749,331.465,85.251,325.607,79.393z\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function AddIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 309.059 309.059\"\n      fill=\"#000000\"\n    >\n      <G strokeWidth=\"0\" />\n      <G strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <G>\n        <G>\n          <G>\n            <Path\n              fill=\"#010002\"\n              d=\"M280.71,126.181h-97.822V28.338C182.889,12.711,170.172,0,154.529,0S126.17,12.711,126.17,28.338 v97.843H28.359C12.722,126.181,0,138.903,0,154.529c0,15.621,12.717,28.338,28.359,28.338h97.811v97.843 c0,15.632,12.711,28.348,28.359,28.348c15.643,0,28.359-12.717,28.359-28.348v-97.843h97.822 c15.632,0,28.348-12.717,28.348-28.338C309.059,138.903,296.342,126.181,280.71,126.181z\"\n            />\n          </G>\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function CloseIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G strokeWidth=\"0\" />\n      <G strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n      <G>\n        <Path\n          fillRule=\"evenodd\"\n          clipRule=\"evenodd\"\n          d=\"M5.29289 5.29289C5.68342 4.90237 6.31658 4.90237 6.70711 5.29289L12 10.5858L17.2929 5.29289C17.6834 4.90237 18.3166 4.90237 18.7071 5.29289C19.0976 5.68342 19.0976 6.31658 18.7071 6.70711L13.4142 12L18.7071 17.2929C19.0976 17.6834 19.0976 18.3166 18.7071 18.7071C18.3166 19.0976 17.6834 19.0976 17.2929 18.7071L12 13.4142L6.70711 18.7071C6.31658 19.0976 5.68342 19.0976 5.29289 18.7071C4.90237 18.3166 4.90237 17.6834 5.29289 17.2929L10.5858 12L5.29289 6.70711C4.90237 6.31658 4.90237 5.68342 5.29289 5.29289Z\"\n          fill=\"#0F1729\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ChevronLeft({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 16 16\"\n      {...props}\n    >\n      <Path\n        fillRule=\"evenodd\"\n        d=\"M11.354 1.646a.5.5 0 0 1 0 .708L5.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z\"\n      />\n    </Svg>\n  );\n}\n\nexport function ChevronRight({ width, height, style }: iconProps) {\n  return (\n    <Svg width={width} height={height} style={style} viewBox=\"0 0 16 16\">\n      <Path\n        fillRule=\"evenodd\"\n        d=\"M4.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L10.293 8 4.646 2.354a.5.5 0 0 1 0-.708z\"\n      />\n    </Svg>\n  );\n}\n\nexport function FolderIcon({ width, height, style }: iconProps) {\n  return (\n    <View>\n      <Svg\n        width={width}\n        height={height}\n        style={style}\n        stroke=\"currentColor\"\n        fill=\"currentColor\"\n        strokeWidth=\"0\"\n        viewBox=\"0 0 48 48\"\n      >\n        <Path\n          fill=\"#FFA000\"\n          d=\"M40,12H22l-4-4H8c-2.2,0-4,1.8-4,4v8h40v-4C44,13.8,42.2,12,40,12z\"\n        />\n        <Path\n          fill=\"#FFCA28\"\n          d=\"M40,12H8c-2.2,0-4,1.8-4,4v20c0,2.2,1.8,4,4,4h32c2.2,0,4-1.8,4-4V16C44,13.8,42.2,12,40,12z\"\n        />\n      </Svg>\n    </View>\n  );\n}\n\nexport function DocumentIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      stroke=\"currentColor\"\n      fill=\"currentColor\"\n      strokeWidth=\"0\"\n      viewBox=\"0 0 48 48\"\n    >\n      <Polygon fill=\"#90CAF9\" points=\"40,45 8,45 8,3 30,3 40,13\" />\n      <Polygon fill=\"#E1F5FE\" points=\"38.5,14 29,14 29,4.5\" />\n      <G fill=\"#1976D2\">\n        <Rect x=\"16\" y=\"21\" width=\"17\" height=\"2\" />\n        <Rect x=\"16\" y=\"25\" width=\"13\" height=\"2\" />\n        <Rect x=\"16\" y=\"29\" width=\"17\" height=\"2\" />\n        <Rect x=\"16\" y=\"33\" width=\"13\" height=\"2\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function CopyIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 32 32\"\n      id=\"Layer_1\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path d=\"M27.2,8.22H23.78V5.42A3.42,3.42,0,0,0,20.36,2H5.42A3.42,3.42,0,0,0,2,5.42V20.36a3.43,3.43,0,0,0,3.42,3.42h2.8V27.2A2.81,2.81,0,0,0,11,30H27.2A2.81,2.81,0,0,0,30,27.2V11A2.81,2.81,0,0,0,27.2,8.22ZM5.42,21.91a1.55,1.55,0,0,1-1.55-1.55V5.42A1.54,1.54,0,0,1,5.42,3.87H20.36a1.55,1.55,0,0,1,1.55,1.55v2.8H11A2.81,2.81,0,0,0,8.22,11V21.91ZM28.13,27.2a.93.93,0,0,1-.93.93H11a.93.93,0,0,1-.93-.93V11a.93.93,0,0,1,.93-.93H27.2a.93.93,0,0,1,.93.93Z\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PersonIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      viewBox=\"0 0 512 512\"\n    >\n      <Path d=\"M258.9,48C141.92,46.42,46.42,141.92,48,258.9,49.56,371.09,140.91,462.44,253.1,464c117,1.6,212.48-93.9,210.88-210.88C462.44,140.91,371.09,49.56,258.9,48ZM385.32,375.25a4,4,0,0,1-6.14-.32,124.27,124.27,0,0,0-32.35-29.59C321.37,329,289.11,320,256,320s-65.37,9-90.83,25.34a124.24,124.24,0,0,0-32.35,29.58,4,4,0,0,1-6.14.32A175.32,175.32,0,0,1,80,259C78.37,161.69,158.22,80.24,255.57,80S432,158.81,432,256A175.32,175.32,0,0,1,385.32,375.25Z\" />\n      <Path d=\"M256,144c-19.72,0-37.55,7.39-50.22,20.82s-19,32-17.57,51.93C191.11,256,221.52,288,256,288s64.83-32,67.79-71.24c1.48-19.74-4.8-38.14-17.68-51.82C293.39,151.44,275.59,144,256,144Z\" />\n    </Svg>\n  );\n}\n\nexport function GearIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Path\n        clipRule=\"evenodd\"\n        d=\"M17.2994 10.4527L19.2267 10.7677C19.3846 10.7935 19.5003 10.9298 19.5 11.0896V12.883C19.5 13.0412 19.3865 13.1768 19.2303 13.2042L17.3004 13.543C17.1885 13.9298 17.0349 14.3022 16.8415 14.6543L17.9823 16.2382C18.0759 16.3679 18.0612 16.5463 17.9483 16.6595L16.6804 17.9283C16.5682 18.0401 16.3921 18.0561 16.2623 17.9645L14.6627 16.8424C14.3099 17.0387 13.9352 17.1952 13.5442 17.3103L13.2034 19.231C13.176 19.3865 13.0406 19.5 12.8825 19.5H11.0888C10.9294 19.5 10.7934 19.3849 10.7676 19.228L10.4493 17.3168C10.059 17.204 9.6823 17.0485 9.32585 16.8525L7.73767 17.9648C7.60821 18.0558 7.43178 18.0401 7.31992 17.9283L6.05198 16.6595C5.93947 16.5463 5.9248 16.3686 6.01741 16.2391L7.13958 14.6697C6.94163 14.3116 6.78444 13.9337 6.67062 13.5414L4.76905 13.2042C4.61349 13.1765 4.5 13.0412 4.5 12.883V11.0896C4.5 10.9304 4.61544 10.7941 4.77263 10.768L6.67421 10.4514C6.78868 10.0582 6.94586 9.68022 7.14316 9.32315L6.0347 7.73739C5.94371 7.60793 5.95937 7.43185 6.07122 7.32L7.33883 6.0525C7.452 5.94 7.62908 5.925 7.7592 6.01793L9.33433 7.14293C9.68817 6.94924 10.0639 6.795 10.4552 6.6825L10.767 4.77359C10.7927 4.61576 10.929 4.5 11.0888 4.5H12.8825C13.041 4.5 13.1763 4.61413 13.2037 4.77L13.5399 6.68935C13.929 6.8025 14.304 6.95837 14.6591 7.15467L16.2385 6.01957C16.3683 5.92598 16.5464 5.94065 16.6595 6.05348L17.9278 7.32098C18.0397 7.43315 18.0553 7.60957 17.9643 7.73902L16.8392 9.34239C17.0323 9.69424 17.1865 10.066 17.2994 10.4527ZM9.71725 12C9.71725 13.2607 10.7393 14.2826 12.0001 14.2826C13.2608 14.2826 14.2829 13.2607 14.2829 12C14.2829 10.7394 13.2608 9.71742 12.0001 9.71742C10.7393 9.71742 9.71725 10.7394 9.71725 12Z\"\n        stroke=\"#000000\"\n      />\n    </Svg>\n  );\n}\n\nexport function GraduationHatIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Path\n        d=\"M7.54004 11.77L12 14L19 10.5M7.54004 11.77V17.77M7.54004 11.77L12 9.54004M7.54004 11.77L5 10.5M7.54004 17.77V21M7.54004 17.77L12 20L19 16.5V10.5M7.54004 17.77L5 16.5V10.5M19 10.5L22 9L12 4L2 9L5 10.5\"\n        stroke=\"#000000\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n}\n\nexport function WarningIcon({\n  width,\n  height,\n  style,\n  outlineColor,\n}: {\n  width: number;\n  height: number;\n  style?: StyleProp<ViewStyle>;\n  outlineColor?: string;\n}) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <Circle cx=\"12\" cy=\"17\" r=\"1\" fill=\"#000000\" />\n      <Path\n        d=\"M12 10L12 14\"\n        stroke=\"#000000\"\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <Path\n        d=\"M3.44722 18.1056L10.2111 4.57771C10.9482 3.10361 13.0518 3.10362 13.7889 4.57771L20.5528 18.1056C21.2177 19.4354 20.2507 21 18.7639 21H5.23607C3.7493 21 2.78231 19.4354 3.44722 18.1056Z\"\n        stroke={outlineColor || '#000000'}\n        strokeWidth=\"2\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n    </Svg>\n  );\n}\n\nexport function SearchIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      fill=\"#000000\"\n      id=\"Capa_1\"\n      viewBox=\"0 0 488.4 488.4\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <G>\n          <G>\n            <Path d=\"M0,203.25c0,112.1,91.2,203.2,203.2,203.2c51.6,0,98.8-19.4,134.7-51.2l129.5,129.5c2.4,2.4,5.5,3.6,8.7,3.6 s6.3-1.2,8.7-3.6c4.8-4.8,4.8-12.5,0-17.3l-129.6-129.5c31.8-35.9,51.2-83,51.2-134.7c0-112.1-91.2-203.2-203.2-203.2 S0,91.15,0,203.25z M381.9,203.25c0,98.5-80.2,178.7-178.7,178.7s-178.7-80.2-178.7-178.7s80.2-178.7,178.7-178.7 S381.9,104.65,381.9,203.25z\" />\n          </G>\n        </G>\n      </G>\n    </Svg>\n  );\n}\n\nexport function WordIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-1712.086\"\n            x2=\"13.832\"\n            y2=\"-1695.914\"\n            gradientTransform=\"translate(0 1720)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#2368c4\" />\n            <Stop offset=\"0.5\" stopColor=\"#1a5dbe\" />\n            <Stop offset=\"1\" stopColor=\"#1146ac\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M28.806,3H9.705A1.192,1.192,0,0,0,8.512,4.191h0V9.5l11.069,3.25L30,9.5V4.191A1.192,1.192,0,0,0,28.806,3Z\"\n          fill=\"#41a5ee\"\n        />\n        <Path d=\"M30,9.5H8.512V16l11.069,1.95L30,16Z\" fill=\"#2b7cd3\" />\n        <Path d=\"M8.512,16v6.5L18.93,23.8,30,22.5V16Z\" fill=\"#185abd\" />\n        <Path\n          d=\"M9.705,29h19.1A1.192,1.192,0,0,0,30,27.809h0V22.5H8.512v5.309A1.192,1.192,0,0,0,9.705,29Z\"\n          fill=\"#103f91\"\n        />\n        <Path\n          d=\"M16.434,8.2H8.512V24.45h7.922a1.2,1.2,0,0,0,1.194-1.191V9.391A1.2,1.2,0,0,0,16.434,8.2Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V25.1h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V23.8h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.132,8.85H8.512V23.8h6.62a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.132,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"#215091\"\n        />\n        <Path\n          d=\"M6.9,17.988c.023.184.039.344.046.481h.028c.01-.13.032-.287.065-.47s.062-.338.089-.465l1.255-5.407h1.624l1.3,5.326a7.761,7.761,0,0,1,.162,1h.022a7.6,7.6,0,0,1,.135-.975l1.039-5.358h1.477l-1.824,7.748H10.591L9.354,14.742q-.054-.222-.122-.578t-.084-.52H9.127q-.021.189-.084.561c-.042.249-.075.432-.1.552L7.78,19.871H6.024L4.19,12.127h1.5l1.131,5.418A4.469,4.469,0,0,1,6.9,17.988Z\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PowerpointIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-1748.086\"\n            x2=\"13.832\"\n            y2=\"-1731.914\"\n            gradientTransform=\"translate(0 1756)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#ca4c28\" />\n            <Stop offset=\"0.5\" stopColor=\"#c5401e\" />\n            <Stop offset=\"1\" stopColor=\"#b62f14\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M18.93,17.3,16.977,3h-.146A12.9,12.9,0,0,0,3.953,15.854V16Z\"\n          fill=\"#ed6c47\"\n        />\n        <Path\n          d=\"M17.123,3h-.146V16l6.511,2.6L30,16v-.146A12.9,12.9,0,0,0,17.123,3Z\"\n          fill=\"#ff8f6b\"\n        />\n        <Path\n          d=\"M30,16v.143A12.905,12.905,0,0,1,17.12,29h-.287A12.907,12.907,0,0,1,3.953,16.143V16Z\"\n          fill=\"#d35230\"\n        />\n        <Path\n          d=\"M17.628,9.389V23.26a1.2,1.2,0,0,1-.742,1.1,1.16,1.16,0,0,1-.45.091H7.027c-.182-.208-.358-.429-.521-.65a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85c.143-.221.293-.442.456-.65h9.93A1.2,1.2,0,0,1,17.628,9.389Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.977,10.04V23.911a1.15,1.15,0,0,1-.091.448,1.2,1.2,0,0,1-1.1.741H7.62q-.309-.314-.593-.65c-.182-.208-.358-.429-.521-.65a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.735A1.2,1.2,0,0,1,16.977,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.977,10.04V22.611A1.2,1.2,0,0,1,15.785,23.8H6.506a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.735A1.2,1.2,0,0,1,16.977,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M16.326,10.04V22.611A1.2,1.2,0,0,1,15.134,23.8H6.506a12.735,12.735,0,0,1-2.553-7.657v-.286A12.705,12.705,0,0,1,6.05,8.85h9.084A1.2,1.2,0,0,1,16.326,10.04Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"#c5401e\"\n        />\n        <Path\n          d=\"M9.293,12.028a3.287,3.287,0,0,1,2.174.636,2.27,2.27,0,0,1,.756,1.841,2.555,2.555,0,0,1-.373,1.376,2.49,2.49,0,0,1-1.059.935A3.607,3.607,0,0,1,9.2,17.15H7.687v2.8H6.141V12.028ZM7.686,15.94H9.017a1.735,1.735,0,0,0,1.177-.351,1.3,1.3,0,0,0,.4-1.025q0-1.309-1.525-1.31H7.686V15.94Z\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ExcelIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Defs>\n          <LinearGradient\n            id=\"a\"\n            x1=\"4.494\"\n            y1=\"-2092.086\"\n            x2=\"13.832\"\n            y2=\"-2075.914\"\n            gradientTransform=\"translate(0 2100)\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop offset=\"0\" stopColor=\"#18884f\" />\n            <Stop offset=\"0.5\" stopColor=\"#117e43\" />\n            <Stop offset=\"1\" stopColor=\"#0b6631\" />\n          </LinearGradient>\n        </Defs>\n        <Path\n          d=\"M19.581,15.35,8.512,13.4V27.809A1.192,1.192,0,0,0,9.705,29h19.1A1.192,1.192,0,0,0,30,27.809h0V22.5Z\"\n          fill=\"#185c37\"\n        />\n        <Path\n          d=\"M19.581,3H9.705A1.192,1.192,0,0,0,8.512,4.191h0V9.5L19.581,16l5.861,1.95L30,16V9.5Z\"\n          fill=\"#21a366\"\n        />\n        <Path d=\"M8.512,9.5H19.581V16H8.512Z\" fill=\"#107c41\" />\n        <Path\n          d=\"M16.434,8.2H8.512V24.45h7.922a1.2,1.2,0,0,0,1.194-1.191V9.391A1.2,1.2,0,0,0,16.434,8.2Z\"\n          opacity={0.10000000149011612}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V25.1h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.783,8.85H8.512V23.8h7.271a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.783,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M15.132,8.85H8.512V23.8h6.62a1.2,1.2,0,0,0,1.194-1.191V10.041A1.2,1.2,0,0,0,15.132,8.85Z\"\n          opacity={0.20000000298023224}\n        />\n        {/* isolation:isolate */}\n        <Path\n          d=\"M3.194,8.85H15.132a1.193,1.193,0,0,1,1.194,1.191V21.959a1.193,1.193,0,0,1-1.194,1.191H3.194A1.192,1.192,0,0,1,2,21.959V10.041A1.192,1.192,0,0,1,3.194,8.85Z\"\n          fill=\"url(#a)\"\n        />\n        <Path\n          d=\"M5.7,19.873l2.511-3.884-2.3-3.862H7.758L9.013,14.6c.116.234.2.408.238.524h.017c.082-.188.169-.369.26-.546l1.342-2.447h1.7l-2.359,3.84,2.419,3.905H10.821l-1.45-2.711A2.355,2.355,0,0,1,9.2,16.8H9.176a1.688,1.688,0,0,1-.168.351L7.515,19.873Z\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M28.806,3H19.581V9.5H30V4.191A1.192,1.192,0,0,0,28.806,3Z\"\n          fill=\"#33c481\"\n        />\n        <Path d=\"M19.581,16H30v6.5H19.581Z\" fill=\"#107c41\" />\n      </G>\n    </Svg>\n  );\n}\n\nexport function VideoIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M18 3H6C3.79086 3 2 4.79086 2 7V17C2 19.2091 3.79086 21 6 21H18C20.2091 21 22 19.2091 22 17V7C22 4.79086 20.2091 3 18 3Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M10.28 8.03994C9.19003 8.42994 9 10.5199 9 12.0399C9 13.5599 9.19003 15.5999 10.28 16.0399C11.37 16.4799 16 13.7499 16 12.0399C16 10.3299 11.44 7.61994 10.28 8.03994Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function PDFIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"#000000\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M24.1,2.072h0l5.564,5.8V29.928H8.879V30H29.735V7.945L24.1,2.072\"\n          fill=\"#909090\"\n        />\n        <Path d=\"M24.031,2H8.808V29.928H29.664V7.873L24.03,2\" fill=\"#f4f4f4\" />\n        <Path d=\"M8.655,3.5H2.265v6.827h20.1V3.5H8.655\" fill=\"#7a7b7c\" />\n        <Path d=\"M22.472,10.211H2.395V3.379H22.472v6.832\" fill=\"#dd2025\" />\n        <Path\n          d=\"M9.052,4.534h-.03l-.207,0H7.745v4.8H8.773V7.715L9,7.728a2.042,2.042,0,0,0,.647-.117,1.427,1.427,0,0,0,.493-.291,1.224,1.224,0,0,0,.335-.454,2.13,2.13,0,0,0,.105-.908,2.237,2.237,0,0,0-.114-.644,1.173,1.173,0,0,0-.687-.65A2.149,2.149,0,0,0,9.37,4.56a2.232,2.232,0,0,0-.319-.026M8.862,6.828l-.089,0V5.348h.193a.57.57,0,0,1,.459.181.92.92,0,0,1,.183.558c0,.246,0,.469-.222.626a.942.942,0,0,1-.524.114\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M12.533,4.521c-.111,0-.219.008-.295.011L12,4.538h-.78v4.8h.918a2.677,2.677,0,0,0,1.028-.175,1.71,1.71,0,0,0,.68-.491,1.939,1.939,0,0,0,.373-.749,3.728,3.728,0,0,0,.114-.949,4.416,4.416,0,0,0-.087-1.127,1.777,1.777,0,0,0-.4-.733,1.63,1.63,0,0,0-.535-.4,2.413,2.413,0,0,0-.549-.178,1.282,1.282,0,0,0-.228-.017m-.182,3.937-.1,0V5.392h.013a1.062,1.062,0,0,1,.6.107,1.2,1.2,0,0,1,.324.4,1.3,1.3,0,0,1,.142.526c.009.22,0,.4,0,.549a2.926,2.926,0,0,1-.033.513,1.756,1.756,0,0,1-.169.5,1.13,1.13,0,0,1-.363.36.673.673,0,0,1-.416.106\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M17.43,4.538H15v4.8h1.028V7.434h1.3V6.542h-1.3V5.43h1.4V4.538\"\n          fill=\"#464648\"\n        />\n        <Path\n          d=\"M21.781,20.255s3.188-.578,3.188.511S22.994,21.412,21.781,20.255Zm-2.357.083a7.543,7.543,0,0,0-1.473.489l.4-.9c.4-.9.815-2.127.815-2.127a14.216,14.216,0,0,0,1.658,2.252,13.033,13.033,0,0,0-1.4.288Zm-1.262-6.5c0-.949.307-1.208.546-1.208s.508.115.517.939a10.787,10.787,0,0,1-.517,2.434A4.426,4.426,0,0,1,18.161,13.841ZM13.513,24.354c-.978-.585,2.051-2.386,2.6-2.444C16.11,21.911,14.537,24.966,13.513,24.354ZM25.9,20.895c-.01-.1-.1-1.207-2.07-1.16a14.228,14.228,0,0,0-2.453.173,12.542,12.542,0,0,1-2.012-2.655,11.76,11.76,0,0,0,.623-3.1c-.029-1.2-.316-1.888-1.236-1.878s-1.054.815-.933,2.013a9.309,9.309,0,0,0,.665,2.338s-.425,1.323-.987,2.639-.946,2.006-.946,2.006a9.622,9.622,0,0,0-2.725,1.4c-.824.767-1.159,1.356-.725,1.945.374.508,1.683.623,2.853-.91a22.549,22.549,0,0,0,1.7-2.492s1.784-.489,2.339-.623,1.226-.24,1.226-.24,1.629,1.639,3.2,1.581,1.495-.939,1.485-1.035\"\n          fill=\"#dd2025\"\n        />\n        <Path d=\"M23.954,2.077V7.95h5.633L23.954,2.077Z\" fill=\"#909090\" />\n        <Path d=\"M24.031,2V7.873h5.633L24.031,2Z\" fill=\"#f4f4f4\" />\n        <Path\n          d=\"M8.975,4.457h-.03l-.207,0H7.668v4.8H8.7V7.639l.228.013a2.042,2.042,0,0,0,.647-.117,1.428,1.428,0,0,0,.493-.291A1.224,1.224,0,0,0,10.4,6.79a2.13,2.13,0,0,0,.105-.908,2.237,2.237,0,0,0-.114-.644,1.173,1.173,0,0,0-.687-.65,2.149,2.149,0,0,0-.411-.105,2.232,2.232,0,0,0-.319-.026M8.785,6.751l-.089,0V5.271H8.89a.57.57,0,0,1,.459.181.92.92,0,0,1,.183.558c0,.246,0,.469-.222.626a.942.942,0,0,1-.524.114\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M12.456,4.444c-.111,0-.219.008-.295.011l-.235.006h-.78v4.8h.918a2.677,2.677,0,0,0,1.028-.175,1.71,1.71,0,0,0,.68-.491,1.939,1.939,0,0,0,.373-.749,3.728,3.728,0,0,0,.114-.949,4.416,4.416,0,0,0-.087-1.127,1.777,1.777,0,0,0-.4-.733,1.63,1.63,0,0,0-.535-.4,2.413,2.413,0,0,0-.549-.178,1.282,1.282,0,0,0-.228-.017m-.182,3.937-.1,0V5.315h.013a1.062,1.062,0,0,1,.6.107,1.2,1.2,0,0,1,.324.4,1.3,1.3,0,0,1,.142.526c.009.22,0,.4,0,.549a2.926,2.926,0,0,1-.033.513,1.756,1.756,0,0,1-.169.5,1.13,1.13,0,0,1-.363.36.673.673,0,0,1-.416.106\"\n          fill=\"#fff\"\n        />\n        <Path\n          d=\"M17.353,4.461h-2.43v4.8h1.028V7.357h1.3V6.465h-1.3V5.353h1.4V4.461\"\n          fill=\"#fff\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function ImageIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M14.2639 15.9375L12.5958 14.2834C11.7909 13.4851 11.3884 13.086 10.9266 12.9401C10.5204 12.8118 10.0838 12.8165 9.68048 12.9536C9.22188 13.1095 8.82814 13.5172 8.04068 14.3326L4.04409 18.2801M14.2639 15.9375L14.6053 15.599C15.4112 14.7998 15.8141 14.4002 16.2765 14.2543C16.6831 14.126 17.12 14.1311 17.5236 14.2687C17.9824 14.4251 18.3761 14.8339 19.1634 15.6514L20 16.4934M14.2639 15.9375L18.275 19.9565M18.275 19.9565C17.9176 20 17.4543 20 16.8 20H7.2C6.07989 20 5.51984 20 5.09202 19.782C4.71569 19.5903 4.40973 19.2843 4.21799 18.908C4.12796 18.7313 4.07512 18.5321 4.04409 18.2801M18.275 19.9565C18.5293 19.9256 18.7301 19.8727 18.908 19.782C19.2843 19.5903 19.5903 19.2843 19.782 18.908C20 18.4802 20 17.9201 20 16.8V16.4934M4.04409 18.2801C4 17.9221 4 17.4575 4 16.8V7.2C4 6.0799 4 5.51984 4.21799 5.09202C4.40973 4.71569 4.71569 4.40973 5.09202 4.21799C5.51984 4 6.07989 4 7.2 4H16.8C17.9201 4 18.4802 4 18.908 4.21799C19.2843 4.40973 19.5903 4.71569 19.782 5.09202C20 5.51984 20 6.0799 20 7.2V16.4934M17 8.99989C17 10.1045 16.1046 10.9999 15 10.9999C13.8954 10.9999 13 10.1045 13 8.99989C13 7.89532 13.8954 6.99989 15 6.99989C16.1046 6.99989 17 7.89532 17 8.99989Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function AudioIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M4.15838 13.9306C3.44537 12.7423 3.44537 11.2577 4.15838 10.0694C4.37596 9.70674 4.73641 9.45272 5.1511 9.36978L6.84413 9.03117C6.94499 9.011 7.03591 8.95691 7.10176 8.87788L9.17085 6.39498C10.3534 4.97592 10.9447 4.26638 11.4723 4.45742C12 4.64846 12 5.57207 12 7.41928L12 16.5807C12 18.4279 12 19.3515 11.4723 19.5426C10.9447 19.7336 10.3534 19.0241 9.17085 17.605L7.10176 15.1221C7.03591 15.0431 6.94499 14.989 6.84413 14.9688L5.1511 14.6302C4.73641 14.5473 4.37596 14.2933 4.15838 13.9306Z\"\n          fill=\"#222222\"\n        />\n        <Path\n          d=\"M14.5355 8.46447C15.4684 9.39732 15.9948 10.6611 16 11.9803C16.0052 13.2996 15.4888 14.5674 14.5633 15.5076\"\n          stroke=\"#222222\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n        <Path\n          d=\"M18.6569 6.34314C20.1494 7.83572 20.9916 9.85769 20.9999 11.9685C21.0083 14.0793 20.182 16.1078 18.7012 17.6121\"\n          stroke=\"#222222\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function OneNoteIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 32 32\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M8 23H32V28C32 29.1046 31.1046 30 30 30H10C8.89543 30 8 29.1046 8 28V23Z\"\n          fill=\"#5D29A1\"\n        />\n        <Rect x=\"8\" y=\"16\" width=\"24\" height=\"7\" fill=\"#7F32CC\" />\n        <Rect x=\"8\" y=\"9\" width=\"24\" height=\"7\" fill=\"#9A40D6\" />\n        <Path\n          d=\"M10 2C8.89543 2 8 2.89543 8 4V28C8 29.1046 8.89543 30 10 30H24V9H32V4C32 2.89543 31.1046 2 30 2H10Z\"\n          fill=\"url(#paint0_linear_87_7733)\"\n        />\n        <Path\n          d=\"M8 12C8 10.3431 9.34315 9 11 9H17C18.6569 9 20 10.3431 20 12V24C20 25.6569 18.6569 27 17 27H8V12Z\"\n          fill=\"#000000\"\n          fillOpacity={0.3}\n        />\n        <Rect\n          y=\"7\"\n          width=\"18\"\n          height=\"18\"\n          rx=\"2\"\n          fill=\"url(#paint1_linear_87_7733)\"\n        />\n        <Path\n          d=\"M13 21V11H10.8893V16.8286L6.9631 11H5V21H7.08118V14.9571L11.155 21H13Z\"\n          fill={Colors.white}\n        />\n        <Defs>\n          <LinearGradient\n            id=\"paint0_linear_87_7733\"\n            x1=\"8\"\n            y1=\"16\"\n            x2=\"24.5\"\n            y2=\"16\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop stop-color=\"#8C42AC\" />\n            <Stop offset=\"1\" stopColor=\"#C36DEF\" />\n          </LinearGradient>\n          <LinearGradient\n            id=\"paint1_linear_87_7733\"\n            x1=\"0\"\n            y1=\"16\"\n            x2=\"19\"\n            y2=\"16\"\n            gradientUnits=\"userSpaceOnUse\"\n          >\n            <Stop stop-color=\"#44176C\" />\n            <Stop offset=\"1\" stopColor=\"#621F9C\" />\n          </LinearGradient>\n        </Defs>\n      </G>\n    </Svg>\n  );\n}\n\nexport function GraphAPILogo({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      id=\"Layer_1\"\n      x=\"0px\"\n      y=\"0px\"\n      viewBox=\"0 0 48 48\"\n      width={width}\n      height={height}\n      style={style}\n    >\n      <G>\n        <Defs>\n          <ClipPath id=\"SVGID_2_\">\n            <Path\n              id=\"SVGID_1_\"\n              d=\"M34.9,3.2H13.1c-0.7,0-1.4,0.4-1.8,1L0.5,23c-0.4,0.6-0.4,1.4,0,2.1l10.9,18.7c0.4,0.6,1.1,1,1.8,1h21.7c0.7,0,1.4-0.4,1.8-1L47.5,25c0.4-0.6,0.4-1.4,0-2.1L36.7,4.3C36.3,3.6,35.6,3.2,34.9,3.2z\"\n            />\n          </ClipPath>\n        </Defs>\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.3,3.1 15.6,11.1 35.4,3.1\"\n        />\n        <Polygon\n          fill=\"#0078D4\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.3,3.1 15.6,11.1 0.2,23.3 0.2,3.1\"\n        />\n        <Polygon\n          fill=\"#0364B8\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"-0.8,24 15.6,11.1 16.5,37.1\"\n        />\n        <Polygon\n          fill=\"#14447D\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"-0.8,24 16.5,37.1 11.5,44.8 0.2,45.2\"\n        />\n        <Polygon\n          fill=\"#0F335E\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"11.5,44.8 16.5,37.1 36.2,45.2\"\n        />\n        <Polygon\n          fill=\"#0364B8\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"16.5,37.1 36.7,24 36.2,45.2\"\n        />\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"16.5,37.1 15.6,11.1 36.7,24\"\n        />\n        <Polygon\n          fill=\"#50D9FF\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"15.6,11.1 36.2,2.8 36.7,24\"\n        />\n        <Polygon\n          fill=\"#28A8EA\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"36.7,24 36.2,2.8 48.1,3.1 48.1,24\"\n        />\n        <Polygon\n          fill=\"#0078D4\"\n          clipPath=\"url(#SVGID_2_)\"\n          points=\"36.7,24 36.2,45.9 47.5,45.9 48.1,24\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function StudentSearchIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\" />\n      <G\n        id=\"SVGRepo_tracerCarrier\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n      />\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M18.5 19.5L20 21M11 21H5.6C5.03995 21 4.75992 21 4.54601 20.891C4.35785 20.7951 4.20487 20.6422 4.10899 20.454C4 20.2401 4 19.9601 4 19.4V17.6841C4 17.0485 4 16.7306 4.04798 16.4656C4.27087 15.2344 5.23442 14.2709 6.46558 14.048C6.5425 14.0341 6.6237 14.0242 6.71575 14.0172C6.94079 14 7.05331 13.9914 7.20361 14.0026C7.35983 14.0143 7.4472 14.0297 7.59797 14.0722C7.74302 14.1131 8.00429 14.2315 8.52682 14.4682C9.13692 14.7446 9.8015 14.9218 10.5 14.9795M19 17.5C19 18.8807 17.8807 20 16.5 20C15.1193 20 14 18.8807 14 17.5C14 16.1193 15.1193 15 16.5 15C17.8807 15 19 16.1193 19 17.5ZM15 7C15 9.20914 13.2091 11 11 11C8.79086 11 7 9.20914 7 7C7 4.79086 8.79086 3 11 3C13.2091 3 15 4.79086 15 7Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function TimeIcon({ width, height, style }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M12 21C16.9706 21 21 16.9706 21 12C21 7.02944 16.9706 3 12 3C7.02944 3 3 7.02944 3 12C3 16.9706 7.02944 21 12 21Z\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M12 6V12\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M16.24 16.24L12 12\"\n          stroke=\"#000000\"\n          strokeWidth=\"1.5\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\ninterface TrashIconProps extends iconProps {\n  color?: string;\n}\n\nexport function TrashIcon({\n  width,\n  height,\n  style,\n  props,\n  color,\n}: TrashIconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      {...props}\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        <Path\n          d=\"M4 6H20L18.4199 20.2209C18.3074 21.2337 17.4512 22 16.4321 22H7.56786C6.54876 22 5.69264 21.2337 5.5801 20.2209L4 6Z\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M7.34491 3.14716C7.67506 2.44685 8.37973 2 9.15396 2H14.846C15.6203 2 16.3249 2.44685 16.6551 3.14716L18 6H6L7.34491 3.14716Z\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M2 6H22\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M10 11V16\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n        <Path\n          d=\"M14 11V16\"\n          stroke={color || '#000000'}\n          strokeWidth=\"2\"\n          strokeLinecap=\"round\"\n          strokeLinejoin=\"round\"\n        />\n      </G>\n    </Svg>\n  );\n}\n\nexport function OfflineIcon({ width, height, style, props }: iconProps) {\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      {...props}\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n    >\n      <G>\n        <Path\n          d=\"M1.33309 8.07433C0.92156 8.44266 0.886539 9.07485 1.25487 9.48638C1.62319 9.89791 2.25539 9.93293 2.66691 9.5646L1.33309 8.07433ZM21.3331 9.5646C21.7446 9.93293 22.3768 9.89791 22.7451 9.48638C23.1135 9.07485 23.0784 8.44266 22.6669 8.07433L21.3331 9.5646ZM12 19C11.4477 19 11 19.4477 11 20C11 20.5523 11.4477 21 12 21V19ZM12.01 21C12.5623 21 13.01 20.5523 13.01 20C13.01 19.4477 12.5623 19 12.01 19V21ZM14.6905 17.04C15.099 17.4116 15.7315 17.3817 16.1031 16.9732C16.4748 16.5646 16.4448 15.9322 16.0363 15.5605L14.6905 17.04ZM18.0539 13.3403C18.4624 13.7119 19.0949 13.682 19.4665 13.2734C19.8381 12.8649 19.8082 12.2324 19.3997 11.8608L18.0539 13.3403ZM7.96372 15.5605C7.55517 15.9322 7.52524 16.5646 7.89687 16.9732C8.2685 17.3817 8.90095 17.4116 9.3095 17.04L7.96372 15.5605ZM4.60034 11.8608C4.19179 12.2324 4.16185 12.8649 4.53348 13.2734C4.90511 13.682 5.53756 13.7119 5.94611 13.3403L4.60034 11.8608ZM10.5705 4.06305C10.0204 4.1118 9.61391 4.59729 9.66266 5.14741C9.71141 5.69754 10.1969 6.10399 10.747 6.05525L10.5705 4.06305ZM17.3393 10.3798C16.8567 10.1114 16.2478 10.285 15.9794 10.7677C15.711 11.2504 15.8847 11.8593 16.3673 12.1277L17.3393 10.3798ZM3.70711 2.29289C3.31658 1.90237 2.68342 1.90237 2.29289 2.29289C1.90237 2.68342 1.90237 3.31658 2.29289 3.70711L3.70711 2.29289ZM20.2929 21.7071C20.6834 22.0976 21.3166 22.0976 21.7071 21.7071C22.0976 21.3166 22.0976 20.6834 21.7071 20.2929L20.2929 21.7071ZM12 6C15.5863 6 18.8556 7.34716 21.3331 9.5646L22.6669 8.07433C19.8369 5.54138 16.0972 4 12 4V6ZM12 21H12.01V19H12V21ZM12 16C13.0367 16 13.9793 16.3931 14.6905 17.04L16.0363 15.5605C14.9713 14.5918 13.5536 14 12 14V16ZM9.3095 17.04C10.0207 16.3931 10.9633 16 12 16V14C10.4464 14 9.02872 14.5918 7.96372 15.5605L9.3095 17.04ZM10.747 6.05525C11.1596 6.01869 11.5775 6 12 6V4C11.5185 4 11.0417 4.0213 10.5705 4.06305L10.747 6.05525ZM16.3673 12.1277C16.9757 12.466 17.5412 12.874 18.0539 13.3403L19.3997 11.8608C18.7751 11.2927 18.0844 10.7941 17.3393 10.3798L16.3673 12.1277ZM2.29289 3.70711L5.46648 6.8807L6.8807 5.46648L3.70711 2.29289L2.29289 3.70711ZM2.66691 9.5646C3.81213 8.53961 5.12648 7.70074 6.56232 7.09494L5.78486 5.25224C4.14251 5.94517 2.64069 6.904 1.33309 8.07433L2.66691 9.5646ZM5.46648 6.8807L9.46042 10.8746L10.8746 9.46042L6.8807 5.46648L5.46648 6.8807ZM9.46042 10.8746L20.2929 21.7071L21.7071 20.2929L10.8746 9.46042L9.46042 10.8746ZM5.94611 13.3403C7.15939 12.2367 8.67355 11.4612 10.3496 11.1508L9.98543 9.18424C7.93271 9.5644 6.08108 10.5139 4.60034 11.8608L5.94611 13.3403Z\"\n          fill={Colors.black}\n        />\n      </G>\n    </Svg>\n  );\n}\n\n// function MessagingIcon() {\n//     return (\n//         <Svg  viewBox=\"0 0 498.000000 268.000000\"preserveAspectRatio=\"xMidYMid meet\">\n//             <G transform=\"translate(0.000000,268.000000) scale(0.100000,-0.100000)\" fill=\"#000000\" stroke=\"none\">\n//                 <Path d=\"M1140 2481 c-50 -16 -89 -41 -128 -86 -74 -84 -72 -67 -72 -730 l0\n//                 -591 -30 -45 c-16 -24 -54 -73 -84 -109 -64 -75 -116 -196 -116 -266 0 -104\n//                 50 -147 187 -160 95 -9 158 8 246 66 115 76 187 148 232 234 l40 76 438 0 437\n//                 0 0 -95 c0 -150 47 -241 154 -298 41 -22 45 -22 791 -27 l750 -5 100 -69 c55\n//                 -37 108 -75 117 -83 25 -22 144 -53 205 -53 47 0 58 4 92 36 44 39 66 91 57\n//                 130 -8 29 -67 124 -89 143 -9 7 -30 35 -48 63 l-32 50 2 466 c2 537 2 540 -76\n//                 623 -82 87 -92 89 -533 89 l-380 0 0 210 c0 250 -9 289 -89 363 -87 81 -23 77\n//                 -1150 76 -548 0 -1007 -4 -1021 -8z m2051 -164 c18 -12 39 -34 46 -47 18 -36\n//                 18 -1144 0 -1180 -7 -13 -28 -35 -46 -47 l-34 -23 -857 0 -857 0 -63 -32 c-34\n//                 -18 -70 -44 -78 -58 -59 -96 -89 -134 -150 -191 -73 -70 -158 -119 -204 -119\n//                 -40 0 -94 25 -107 48 -17 31 -13 81 8 116 11 17 55 63 98 102 55 50 87 89 108\n//                 130 l30 59 5 596 c5 651 2 612 65 651 29 17 77 18 1016 18 l986 0 34 -23z\n//                 m986 -647 c64 -38 63 -33 63 -527 0 -518 -11 -463 118 -598 63 -65 72 -80 72\n//                 -112 0 -50 -32 -83 -79 -83 -45 0 -104 38 -161 105 -59 69 -104 102 -164 122\n//                 -46 16 -125 18 -782 23 -714 5 -732 5 -754 25 -39 36 -50 69 -50 160 l0 86 62\n//                 -3 61 -3 1 -55 1 -55 738 -3 737 -2 0 75 0 75 -390 0 -389 0 49 46 c85 80 90\n//                 103 90 449 l0 295 373 0 c351 0 374 -1 404 -20z\"/>\n//                 <Path d=\"M1470 1945 l0 -75 715 0 715 0 0 75 0 75 -715 0 -715 0 0 -75z\"/>\n//                 <Path d=\"M1460 1605 l0 -75 430 0 430 0 0 75 0 75 -430 0 -430 0 0 -75z\"/>\n//                 <Path d=\"M2580 1605 l0 -75 160 0 160 0 0 75 0 75 -160 0 -160 0 0 -75z\"/>\n//                 <Path d=\"M1720 1285 l0 -75 650 0 650 0 0 75 0 75 -650 0 -650 0 0 -75z\"/>\n//                 <Path d=\"M3460 1495 l0 -75 290 0 290 0 0 75 0 75 -290 0 -290 0 0 -75z\"/>\n//                 <Path d=\"M3510 1155 l0 -75 155 0 155 0 0 75 0 75 -155 0 -155 0 0 -75z\"/>\n//                 <Path d=\"M3900 1155 l0 -75 65 0 65 0 0 75 0 75 -65 0 -65 0 0 -75z\"/>\n//             </G>\n//         </Svg>\n//     )\n// }\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { View, Text, Pressable, Image } from 'react-native';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { RootState } from './Redux/store';\nimport { safeAreaColorsSlice } from './Redux/reducers/safeAreaColorsReducer';\nimport { GearIcon } from './UI/Icons/Icons';\nimport { Colors } from './types';\n\nexport default function Login({\n  onGetAuthToken,\n  onGetGovernmentAuthToken,\n  width,\n}: {\n  onGetAuthToken: () => void;\n  onGetGovernmentAuthToken: () => void;\n  width: number;\n}) {\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const [isBottonHover, setIsButtonHover] = useState<boolean>(false);\n  const [isGovernmentHover, setIsGovernmentHover] = useState<boolean>(false);\n  const [fontSize, setFontSize] = useState<number>(0);\n  const [isShowingGovernmentLogin, setIsShowingGovernmentLogin] =\n    useState<boolean>(false);\n  const insets = useSafeAreaInsets();\n  const dispatch = useDispatch();\n\n  useCallback(\n    async function setSafeAreaColors() {\n      dispatch(safeAreaColorsSlice.actions.setSafeAreaColorTop(Colors.maroon));\n      dispatch(\n        safeAreaColorsSlice.actions.setSafeAreaColorBottom(Colors.maroon),\n      );\n    },\n    [dispatch],\n  );\n\n  useEffect(() => {\n    const heightIsGreater: boolean = width < height;\n    if (heightIsGreater) {\n      setFontSize(width / 4);\n    } else {\n      setFontSize(height / 3);\n    }\n  }, [height, width]);\n  // Font\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../assets/fonts/BukhariScript.ttf'),\n    'Gochi Hand': require('../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      style={{\n        backgroundColor: Colors.maroon,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height,\n        width,\n        overflow: 'hidden',\n        top: -insets.top,\n      }}\n      onLongPress={() => {\n        setIsShowingGovernmentLogin(true);\n      }}\n      delayLongPress={5000}\n    >\n      <View\n        id=\"Content_Area\"\n        style={{\n          width: width < height ? width : height,\n          height: width < height ? width : height,\n          alignItems: 'center',\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}\n      >\n        <View\n          style={{\n            width: fontSize * 1.65,\n            height: fontSize,\n            flexDirection: 'row',\n          }}\n          id=\"Text_Container\"\n        >\n          <Image\n            source={require('../assets/images/PaulyLogo.png')}\n            resizeMode=\"contain\"\n            style={{\n              width: fontSize,\n              height: fontSize,\n              position: 'absolute',\n              left: -fontSize * 0.2,\n            }}\n          />\n          <Text\n            style={{\n              position: 'absolute',\n              left: fontSize * 0.5,\n              top: fontSize * 0.22,\n              fontFamily: 'Gochi Hand',\n              fontSize: fontSize - fontSize / 3,\n              textShadowColor: 'rgba(0, 0, 0, 1)',\n              textShadowOffset: { width: 4, height: 5 },\n              textShadowRadius: 0,\n              color: Colors.white,\n            }}\n            selectable={false}\n          >\n            auly\n          </Text>\n        </View>\n        <Text\n          style={{ color: 'white', marginTop: 25, fontFamily: 'BukhariScript' }}\n        >\n          23/24 Saint Paul's High School Student Council\n        </Text>\n        <Pressable\n          onPress={async () => {\n            onGetAuthToken();\n          }}\n          onHoverIn={() => {\n            setIsButtonHover(true);\n          }}\n          onHoverOut={() => {\n            setIsButtonHover(false);\n          }}\n          style={{\n            height: height * 0.09,\n            width: width * 0.5,\n            borderRadius: 50,\n            backgroundColor: isBottonHover ? Colors.darkGray : Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            shadowColor: isBottonHover ? Colors.white : 'black',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n            marginTop: width < height ? width * 0.05 : height * 0.05,\n          }}\n        >\n          <Text\n            style={{\n              textAlign: 'center',\n              color: isBottonHover ? Colors.white : 'black',\n              fontWeight: 'bold',\n            }}\n          >\n            LOGIN\n          </Text>\n        </Pressable>\n        {isShowingGovernmentLogin ? (\n          <Pressable\n            onPress={async () => {\n              onGetGovernmentAuthToken();\n            }}\n            onHoverIn={() => {\n              setIsGovernmentHover(true);\n            }}\n            onHoverOut={() => {\n              setIsGovernmentHover(false);\n            }}\n            style={{\n              height: height * 0.09,\n              width: width * 0.5,\n              borderRadius: 50,\n              backgroundColor: isGovernmentHover\n                ? Colors.darkGray\n                : Colors.white,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              shadowColor: isBottonHover ? Colors.white : 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              marginTop: width < height ? width * 0.1 : height * 0.1,\n              flexDirection: 'row',\n            }}\n          >\n            <GearIcon width={18} height={18} />\n            <Text\n              style={{\n                textAlign: 'center',\n                color: isBottonHover ? Colors.white : 'black',\n                fontWeight: 'bold',\n              }}\n            >\n              LOGIN AS ADMIN\n            </Text>\n          </Pressable>\n        ) : null}\n      </View>\n    </Pressable>\n  );\n}\n","// July 21 2023\n// Andrew Mainella\n// Calendar functions\n\nexport function getDaysInMonth(input: Date): number {\n  const d = new Date();\n  d.setFullYear(input.getFullYear(), input.getMonth() + 1, 0);\n  return d.getDate();\n}\n\nexport function getDay(value: number, startdate: number): number | undefined {\n  let offset: number = 0;\n  const let1: number = value / 5.0;\n  const let2: number = Math.floor(let1);\n  const let4: number = let2 * 2;\n  offset += let4;\n  const result: number = value - startdate + 2 + offset;\n  const month = new Date();\n  const d = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n  const DayInt = d.getDate();\n  if (result >= DayInt + 1) {\n    return undefined;\n  }\n  return result;\n}\n\nexport function findFirstDayinMonth(currentTime: Date): number {\n  const year = currentTime.getFullYear();\n  const month = currentTime.getMonth();\n  const weekDay = new Date(year, month).getDay();\n  return weekDay;\n  // Returns a which weekday day is the first day of the month.\n  // Sunday is 0, Saturday is 6\n}\n\nexport function isDateToday(dateToCheck: Date) {\n  // Get today's date\n  const today = new Date();\n\n  // Compare the components of the dateToCheck with today's date\n  const isSameDate =\n    dateToCheck.getDate() === today.getDate() &&\n    dateToCheck.getMonth() === today.getMonth() &&\n    dateToCheck.getFullYear() === today.getFullYear();\n\n  // Return true if the dateToCheck is today, otherwise return false\n  return isSameDate;\n}\n\n// July 17 2023\n// Andrew Mainella\n//\n// Converting a year to a school year.\n// The year converted is the year of the graduating class\n//\n// For example 2024 would return 2023-2024\n\nexport function convertYearToSchoolYear(year: number) {\n  return `${year - 1}-${year}`;\n}\n\nexport function calculateIfShowing(value: string, Time: Date): boolean {\n  // TO DO shorten\n  if (isDateToday(Time)) {\n    const hourInt = Time.getHours();\n    const minuiteInt = Time.getMinutes();\n    if (minuiteInt + 15 >= 60) {\n      let resepctiveTime: string = `${hourInt > 12}`\n        ? (hourInt - 12).toString()\n        : hourInt.toString();\n      resepctiveTime += hourInt > 12 ? 'PM' : 'AM';\n      if (resepctiveTime === value) {\n        return false;\n      }\n      return true;\n    }\n    if (minuiteInt - 15 <= 0) {\n      let resepctiveTime: string = `${hourInt > 12}`\n        ? (hourInt - 12).toString()\n        : hourInt.toString();\n      resepctiveTime += hourInt > 12 ? 'PM' : 'AM';\n      if (resepctiveTime === value) {\n        return false;\n      }\n      return true;\n    }\n    return true;\n  }\n  return true;\n}\n\nexport function findTimeOffset(time: Date, height: number): number {\n  const hourWidth = height * 0.1;\n  const minutieWidth = (height * 0.1) / 60;\n  const hourInt = time.getHours();\n  const minuiteInt = time.getMinutes();\n  const returnOffset = hourWidth * hourInt + minutieWidth * minuiteInt;\n  return returnOffset;\n}\n\n// Ryan was here April 13, 2023\n// Andrew was here April 13, 2023\n\nexport function computeEventHeight(\n  fromDate: Date,\n  toDate: Date,\n  height: number,\n): number {\n  let delta = toDate.getTime() - fromDate.getTime();\n  if (delta >= 86400000) {\n    delta = 86400000;\n  }\n\n  const deltaHours = delta / 3600000;\n  const deltaRemaining = delta % 3600000;\n  const deltaMinutes = deltaRemaining / 60;\n\n  const HourHeight = height * 0.1;\n  const MinuteHeight = (height * 0.1) / 60;\n\n  const ReturnOffset = HourHeight * deltaHours + MinuteHeight * deltaMinutes;\n  return ReturnOffset;\n}\n\nfunction getHorizontalOffset() {}\n","/*\n  Andrew Mainella\n  21 October 2023\n  Pauly\n  See README.md for more information about the setup process and what to put in each of these values\n*/\n// The org wide group id is the id of a group (teams) that every user is apart of.\n// This allows pauly to access calendar information that is common (an event that is set out by admin) among users.\n\nexport const orgWideGroupID: string = 'd2c0dd90-a426-4539-882c-aa87e5787a92';\n\nexport const tenantId: string = '551df04d-543a-4d61-955e-e4294c4cf950';\nexport const clientId: string = '08624b03-1aa6-40c4-8fb3-149c39026dff';\n\nexport const domainName: string = '@8td1tk.onmicrosoft.com';\nexport const paulyDomain: string =\n  'https://polite-plant-0871d590f.4.azurestaticapps.net';\n\n// DO NOT CHANGE SCOPES\n// See README.md for more imformation about the scopes.\nexport const scopes = [\n  'User.Read',\n  'User.ReadBasic.All',\n  'Sites.Read.All',\n  'Sites.Manage.All',\n  'ChannelMessage.Read.All',\n  'Chat.ReadWrite',\n  'Calendars.ReadWrite',\n  'Team.ReadBasic.All',\n  'Group.ReadWrite.All',\n  'Tasks.ReadWrite',\n  'Channel.ReadBasic.All',\n  'Application.ReadWrite.All',\n  'TeamMember.Read.All',\n];\n","import { Platform } from 'react-native';\nimport store from '../../Redux/store';\nimport { authenticationCallSlice } from '../../Redux/reducers/authenticationCallReducer';\n\nexport default async function callMsGraph(\n  url: string,\n  method?: 'GET' | 'POST' | 'PATCH' | 'DELETE' | 'PUT',\n  body?: string | Blob,\n  headersIn?: { key: string; value: string }[],\n  secondAuth?: boolean,\n): Promise<Response> {\n  const headers: Headers = new Headers();\n  const bearer = `Bearer ${store.getState().authenticationToken}`;\n\n  headers.append('Authorization', bearer);\n  headers.append('Content-Type', 'application/json');\n\n  if (headersIn !== undefined) {\n    for (\n      let headerIndex = 0;\n      headerIndex < headersIn.length;\n      headerIndex += 1\n    ) {\n      headers.append(headersIn[headerIndex].key, headersIn[headerIndex].value);\n    }\n  }\n\n  const options = {\n    method: method || 'GET',\n    headers,\n    body,\n  };\n\n  let outUrl = url;\n\n  if (Platform.OS !== 'web') {\n    const urlArray = url.split('%20');\n    outUrl = '';\n    for (let index = 0; index < urlArray.length; index += 1) {\n      if (index !== 0) {\n        outUrl += ` ${urlArray[index]}`;\n      } else {\n        outUrl += urlArray[index];\n      }\n    }\n  }\n\n  const response = await fetch(outUrl, options);\n  if (response.status === 401) {\n    if (secondAuth === undefined) {\n      store.dispatch(\n        authenticationCallSlice.actions.setAuthenticationCallIncrement(),\n      );\n      const previousValue: string = store.getState().authenticationToken;\n      return new Promise(resolve => {\n        const unsubscribe = store.subscribe(async () => {\n          const newValue = store.getState().authenticationToken;\n          if (newValue !== previousValue) {\n            const result = await callMsGraph(\n              url,\n              method,\n              body,\n              headersIn,\n              true,\n            );\n            resolve(result);\n            unsubscribe(); // Unsubscribe after getting the new result\n          }\n        });\n      });\n    }\n    return response;\n  }\n  return response;\n}\n","import { loadingStateEnum } from '../../types';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function largeBatch(\n  defaultBatchData?: { id: string; method: 'GET' | 'POST'; url: string }[][],\n  createData?: {\n    firstUrl: string;\n    secondUrl: string;\n    keys: { array?: string[]; map?: Map<string, any> };\n    method: 'GET' | 'POST';\n  },\n): Promise<{ result: loadingStateEnum; data?: batchResponseType[] }> {\n  let data: { id: string; method: 'GET' | 'POST'; url: string }[][] = [];\n  if (defaultBatchData) {\n    data = defaultBatchData;\n  } else if (createData) {\n    let batchIndex = 0;\n    if (createData.keys.array !== undefined) {\n      for (\n        let createDataIndex = 0;\n        createDataIndex < createData.keys.array.length;\n        createDataIndex += 1\n      ) {\n        if (batchIndex >= data.length) {\n          data.push([]);\n        }\n        data[batchIndex].push({\n          id: (createDataIndex + 1).toString(),\n          method: createData.method,\n          url: `${createData.firstUrl}${createData.keys.array[createDataIndex]}${createData.secondUrl}`,\n        });\n        if (createDataIndex % 19 === 0) {\n          batchIndex += 1;\n        }\n      }\n    } else if (createData.keys.map !== undefined) {\n      const createDataIndexMap = 0;\n      createData.keys.map.forEach((value, key) => {\n        if (batchIndex >= data.length) {\n          data.push([]);\n        }\n        data[batchIndex].push({\n          id: (createDataIndexMap + 1).toString(),\n          method: createData.method,\n          url: `${createData.firstUrl}${key}${createData.secondUrl}`,\n        });\n        if (createDataIndexMap % 19 === 0) {\n          batchIndex += 1;\n        }\n      });\n    } else {\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const output: batchResponseType[] = [];\n  for (let index = 0; index < data.length; index += 1) {\n    const batchData = {\n      requests: data[index],\n    };\n    const result = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/$batch',\n      'POST',\n      JSON.stringify(batchData),\n      [{ key: 'Accept', value: 'application/json' }],\n    );\n    if (result.ok) {\n      const batchResultData = await result.json();\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultData.responses.length;\n        batchIndex += 1\n      ) {\n        output.push({\n          method: 'GET',\n          id: batchResultData.responses[batchIndex].id,\n          headers: batchResultData.responses[batchIndex].headers,\n          body: batchResultData.responses[batchIndex].body,\n          status: batchResultData.responses[batchIndex].status,\n        });\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: output };\n}\n","import { loadingStateEnum } from '../../types';\n\nexport default function createUUID() {\n  let dt = new Date().getTime();\n  const uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, c => {\n    const r = (dt + Math.random() * 16) % 16 | 0;\n    dt = Math.floor(dt / 16);\n    return (c === 'x' ? r : (r & 0x3) | 0x8).toString(16);\n  });\n  return uuid;\n}\n\n// Get text from a loadingStateEnum\nexport function getTextState(\n  state: loadingStateEnum,\n  labels?: {\n    cannotStart?: string;\n    notStarted?: string;\n    failed?: string;\n    loading?: string;\n    offline?: string;\n    success?: string;\n  },\n): string {\n  if (state === loadingStateEnum.cannotStart) {\n    return labels?.cannotStart ? labels.cannotStart : 'Cannot Start';\n  }\n  if (state === loadingStateEnum.notStarted) {\n    return labels?.notStarted ? labels.notStarted : 'Start';\n  }\n  if (state === loadingStateEnum.failed) {\n    return labels?.failed ? labels.failed : 'Failed';\n  }\n  if (state === loadingStateEnum.loading) {\n    return labels?.loading ? labels.loading : 'Loading';\n  }\n  if (state === loadingStateEnum.offline) {\n    return labels?.offline ? labels.offline : 'Offline';\n  }\n  if (state === loadingStateEnum.success) {\n    return labels?.success ? labels.success : 'Success';\n  }\n  return 'Something Went Wrong';\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getDressCode(\n  dressCodeId: string,\n): Promise<{ result: loadingStateEnum; data?: dressCodeType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeData,dressCodeIncentivesData,dressCodeName,dressCodeId)&$select=id&$filter=fields/dressCodeId%20eq%20'${dressCodeId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== 1) {\n      return { result: loadingStateEnum.failed };\n    }\n    try {\n      const dressCodeData: dressCodeDataType[] = JSON.parse(\n        data.value[0].fields.dressCodeData,\n      );\n      const dressCodeIncentivesData: dressCodeIncentiveType[] = JSON.parse(\n        data.value[0].fields.dressCodeIncentivesData,\n      );\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.dressCodeName,\n          id: data.value[0].fields.dressCodeId,\n          listId: data.value[0].id,\n          dressCodeData,\n          dressCodeIncentives: dressCodeIncentivesData,\n        },\n      };\n    } catch (e) {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n}\n","// Andrew Mainella\n// Pauly\n\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport { Colors, loadingStateEnum, semesters } from '../../types';\nimport store from '../../Redux/store';\nimport batchRequest from '../ultility/batchRequest';\nimport createUUID from '../ultility/createUUID';\nimport getDressCode from '../homepage/getDressCode';\n\n// Defaults to org wide events\nexport async function getGraphEvents(\n  url?: string,\n  referenceUrl?: string,\n): Promise<{\n  result: loadingStateEnum;\n  events?: eventType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    url !== undefined\n      ? url\n      : `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties&$select=id,subject,start,end,isAllDay,singleValueExtendedProperties`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newEvents: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      const { singleValueExtendedProperties } = data.value[index];\n      const eventType: string | undefined =\n        data.value[index].singleValueExtendedProperties !== undefined\n          ? singleValueExtendedProperties.find(\n              (e: { id: string; value: string }) => {\n                return e.id === eventTypeExtensionID;\n              },\n            )?.value\n          : undefined;\n      const eventData: string | undefined =\n        data.value[index].singleValueExtendedProperties !== undefined\n          ? singleValueExtendedProperties.find(\n              (e: { id: string; value: string }) => {\n                return e.id === eventDataExtensionID;\n              },\n            )?.value\n          : undefined;\n      newEvents.push({\n        id: data.value[index].id,\n        name: data.value[index].subject,\n        startTime: data.value[index].start.dateTime,\n        endTime: data.value[index].end.dateTime,\n        allDay: data.value[index].isAllDay,\n        eventColor: Colors.white,\n        paulyEventType:\n          eventType === 'schoolYear'\n            ? 'schoolYear'\n            : eventType === 'schoolDay'\n            ? 'schoolDay'\n            : undefined,\n        paulyEventData: eventData,\n        microsoftEvent: true,\n        microsoftReference:\n          referenceUrl !== undefined\n            ? referenceUrl + data.value[index].id\n            : `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      events: newEvents,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// Gets an event from paulys team\nexport async function getEvent(\n  id: string,\n): Promise<{ result: loadingStateEnum; data?: eventType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${id}?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${store.getState().paulyList.eventDataExtensionId}')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const event: eventType = {\n      id: data.id,\n      name: data.subject,\n      startTime: data.start.dateTime,\n      endTime: data.end.dateTime,\n      allDay: data.isAllDay,\n      eventColor: Colors.white,\n      microsoftEvent: true,\n      microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.id}`,\n    };\n    if (data.singleValueExtendedProperties !== undefined) {\n      const eventData: { id: string; value: string }[] =\n        data.singleValueExtendedProperties;\n      const eventType = eventData.find(e => {\n        return e.id === store.getState().paulyList.eventTypeExtensionId;\n      })?.value;\n      event.paulyEventType =\n        eventType === 'schoolDay'\n          ? 'schoolDay'\n          : eventType === 'schoolYear'\n          ? 'schoolYear'\n          : undefined;\n      event.paulyEventData = eventData.find(e => {\n        return e.id === store.getState().paulyList.eventDataExtensionId;\n      })?.value;\n    }\n    return { result: loadingStateEnum.success, data: event };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSchedule(id: string): Promise<{\n  result: loadingStateEnum;\n  schedule?: scheduleType;\n  listItemId?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.scheduleListId\n    }/items?expand=fields($select=scheduleProperName,scheduleDescriptiveName,scheduleData,scheduleId,scheduleColor)&$filter=fields/scheduleId%20eq%20'${id}'&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== undefined) {\n      if (data.value.length === 1) {\n        const resultSchedule: scheduleType = {\n          properName: data.value[0].fields.scheduleProperName,\n          descriptiveName: data.value[0].fields.scheduleDescriptiveName,\n          periods: JSON.parse(\n            data.value[0].fields.scheduleData,\n          ) as periodType[],\n          id: data.value[0].fields.scheduleId,\n          color: data.value[0].fields.scheduleColor,\n        };\n        return {\n          result: loadingStateEnum.success,\n          schedule: resultSchedule,\n          listItemId: data.value[0].id,\n        };\n      }\n      return { result: loadingStateEnum.failed, schedule: undefined };\n    }\n    return { result: loadingStateEnum.failed, schedule: undefined };\n  }\n  return { result: loadingStateEnum.failed, schedule: undefined };\n}\n\nexport async function getSchedules(): Promise<{\n  result: loadingStateEnum;\n  data?: scheduleType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.scheduleListId}/items?expand=fields`,\n  );\n  if (result.ok) {\n    const dataResult = await result.json();\n    if (\n      dataResult.value.length !== undefined &&\n      dataResult.value.length !== null\n    ) {\n      const newLoadedSchedules: scheduleType[] = [];\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        try {\n          const scheduleData = JSON.parse(\n            dataResult.value[index].fields.scheduleData,\n          ) as periodType[];\n          newLoadedSchedules.push({\n            properName: dataResult.value[index].fields.scheduleProperName,\n            descriptiveName:\n              dataResult.value[index].fields.scheduleDescriptiveName,\n            id: dataResult.value[index].fields.scheduleId,\n            periods: scheduleData,\n            color: dataResult.value[index].fields.scheduleColor,\n          });\n        } catch {\n          return { result: loadingStateEnum.failed };\n          // TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n        }\n      }\n      return {\n        result: loadingStateEnum.success,\n        data: newLoadedSchedules,\n        nextLink: dataResult['@odata.nextLink'],\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getTimetable(\n  timetableId: string,\n): Promise<{ result: loadingStateEnum; timetable?: timetableType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.timetablesListId\n    }/items?expand=fields&$filter=fields/timetableId%20eq%20'${timetableId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== undefined) {\n      if (data.value.length === 1) {\n        try {\n          const scheduleData: string[] = JSON.parse(\n            data.value[0].fields.timetableDataSchedules,\n          );\n          const newSchedules: scheduleType[] = [];\n          for (let index = 0; index < scheduleData.length; index += 1) {\n            const result = await getSchedule(scheduleData[index]);\n            if (\n              result.result === loadingStateEnum.success &&\n              result.schedule !== undefined\n            ) {\n              newSchedules.push(result.schedule);\n            } else {\n              return { result: loadingStateEnum.failed };\n            }\n          }\n          const dressCodeResult = await getDressCode(\n            data.value[0].fields.timetableDressCodeId,\n          );\n          if (\n            dressCodeResult.result === loadingStateEnum.success &&\n            dressCodeResult.data !== undefined\n          ) {\n            const resultingTimetable: timetableType = {\n              name: data.value[0].fields.timetableName,\n              id: data.value[0].fields.timetableId,\n              schedules: newSchedules,\n              days: JSON.parse(data.value[0].fields.timetableDataDays),\n              dressCode: dressCodeResult.data,\n            };\n            return {\n              result: loadingStateEnum.success,\n              timetable: resultingTimetable,\n            };\n          }\n          return { result: loadingStateEnum.failed };\n        } catch (e) {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  } else {\n    return { result: loadingStateEnum.failed };\n  }\n}\n\nexport async function getSchoolDay(\n  selectedDate: Date,\n): Promise<{ result: loadingStateEnum; event?: eventType }> {\n  const startDate: string = `${new Date(\n    Date.UTC(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth(),\n      selectedDate.getDate(),\n      0,\n    ),\n  )\n    .toISOString()\n    .slice(0, -1)}0000`;\n  const endDate: string = `${new Date(\n    Date.UTC(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth(),\n      selectedDate.getDate() + 1,\n      0,\n    ),\n  )\n    .toISOString()\n    .slice(0, -1)}0000`;\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${\n      store.getState().paulyList.eventDataExtensionId\n    }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20and%20ep/value%20eq%20'schoolDay')%20and%20start/dateTime%20eq%20'${startDate}'%20and%20end/dateTime%20eq%20'${endDate}'`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      if (data.value[index].singleValueExtendedProperties !== undefined) {\n        const eventData: { id: string; value: string }[] =\n          data.value[index].singleValueExtendedProperties;\n        if (eventData !== undefined) {\n          if (\n            eventData.find(e => {\n              return e.id === eventTypeExtensionID;\n            })?.value === 'schoolDay'\n          ) {\n            const event: eventType = {\n              id: data.value[index].id,\n              name: data.value[index].subject,\n              startTime: data.value[index].start.dateTime,\n              endTime: data.value[index].end.dateTime,\n              allDay: data.value[index].isAllDay,\n              eventColor: Colors.white,\n              microsoftEvent: true,\n              microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n              paulyEventType:\n                eventData.find(e => {\n                  return e.id === eventTypeExtensionID;\n                })?.value === 'schoolDay'\n                  ? 'schoolDay'\n                  : undefined,\n              paulyEventData: eventData.find(e => {\n                return e.id === eventDataExtensionID;\n              })?.value,\n            };\n            return { result: loadingStateEnum.success, event };\n          }\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSchoolDays(date: Date): Promise<{\n  result: loadingStateEnum;\n  data?: eventType[];\n  nextLink?: string;\n}> {\n  const firstDay = `${\n    new Date(date.getFullYear(), date.getMonth(), 1)\n      .toISOString()\n      .replace(/.\\d+Z$/g, 'Z')\n      .split(/[T ]/i, 1)[0]\n  }T00:00:00.0000000`;\n  const lastDay = `${\n    new Date(date.getFullYear(), date.getMonth() + 1, 1)\n      .toISOString()\n      .replace(/.\\d+Z$/g, 'Z')\n      .split(/[T ]/i, 1)[0]\n  }T00:00:00.0000000`;\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendarView?startDateTime=${firstDay}&endDateTime=${lastDay}&$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${\n      store.getState().paulyList.eventDataExtensionId\n    }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20and%20ep/value%20eq%20'schoolDay')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const scheduleIds = new Map<string, number>();\n    const schoolYearIds = new Map<string, number>();\n    for (let index = 0; index < data.value.length; index += 1) {\n      const outputIds: schoolDayDataCompressedType = JSON.parse(\n        data.value[index].singleValueExtendedProperties.find(\n          (e: { id: string; value: string }) => {\n            return e.id === store.getState().paulyList.eventDataExtensionId;\n          },\n        ).value,\n      );\n      scheduleIds.set(outputIds.scheduleId, 0);\n      schoolYearIds.set(outputIds.schoolYearEventId, 0);\n    }\n    // Get batch data\n\n    const batchRequestResultSchedule = await batchRequest(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.scheduleListId\n      }/items?expand=fields($select=scheduleProperName,scheduleDescriptiveName,scheduleColor,scheduleData,scheduleId)&$filter=fields/scheduleId%20eq%20'`,\n      secondUrl: `'&$select=id`,\n      method: 'GET',\n      keys: {\n        map: scheduleIds,\n      },\n    });\n\n    if (\n      batchRequestResultSchedule.result !== loadingStateEnum.success ||\n      batchRequestResultSchedule.data === undefined\n    ) {\n      return { result: loadingStateEnum.failed };\n    }\n    const schedules = new Map<string, scheduleType>();\n    for (\n      let scheudleIndex = 0;\n      scheudleIndex < batchRequestResultSchedule.data.length;\n      scheudleIndex += 1\n    ) {\n      const resultScheduleData =\n        batchRequestResultSchedule.data[scheudleIndex].body;\n      if (\n        batchRequestResultSchedule.data[scheudleIndex].status === 200 &&\n        resultScheduleData !== undefined\n      ) {\n        // TO DO fix status code\n        if (resultScheduleData.value.length === 1) {\n          const scheduleResponseData = resultScheduleData.value[0].fields;\n          try {\n            schedules.set(scheduleResponseData.scheduleId, {\n              properName: scheduleResponseData.scheduleProperName,\n              descriptiveName: scheduleResponseData.scheduleDescriptiveName,\n              periods: JSON.parse(scheduleResponseData.scheduleData),\n              id: scheduleResponseData.scheduleId,\n              color: scheduleResponseData.scheduleColor,\n            });\n          } catch {\n            return { result: loadingStateEnum.failed };\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n\n    const timetableResult = await getTimetablesFromSchoolYears(\n      schoolYearIds,\n      schedules,\n    );\n    if (\n      timetableResult.result !== loadingStateEnum.success ||\n      timetableResult.data === undefined\n    ) {\n      return { result: loadingStateEnum.failed };\n    }\n\n    const schoolDaysResult: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const outputIds: schoolDayDataCompressedType = JSON.parse(\n        data.value[index].singleValueExtendedProperties.find(\n          (e: { id: string; value: string }) => {\n            return e.id === store.getState().paulyList.eventDataExtensionId;\n          },\n        ).value,\n      );\n      const schedule = schedules.get(outputIds.scheduleId);\n      const timetable = timetableResult.data.get(outputIds.schoolYearEventId);\n      const dressCode = timetable?.dressCode.dressCodeData.find(e => {\n        return e.id === outputIds.dressCodeId;\n      });\n      const schoolDay = timetable?.days.find(e => {\n        return e.id === outputIds.schoolDayId;\n      });\n      if (\n        schedule !== undefined &&\n        timetable !== undefined &&\n        dressCode !== undefined &&\n        schoolDay !== undefined\n      ) {\n        schoolDaysResult.push({\n          id: data.value[index].id,\n          name: data.value[index].subject,\n          startTime: data.value[index].start.dateTime,\n          endTime: data.value[index].end.dateTime,\n          eventColor: schedule.color,\n          microsoftEvent: true,\n          allDay: !!data.value[index].isAllDay,\n          schoolDayData: {\n            schoolDayData: schoolDay,\n            schedule,\n            dressCode,\n            semester: outputIds.semester,\n            dressCodeIncentiveId: outputIds.dressCodeIncentiveId,\n          },\n        });\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: schoolDaysResult,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// This function gets both school years and their timetable data\nasync function getTimetablesFromSchoolYears(\n  schoolYearIds: Map<string, number>,\n  schedules: Map<string, scheduleType>,\n): Promise<{ result: loadingStateEnum; data?: Map<string, timetableType> }> {\n  // Get School Years\n  const batchRequestResultSchoolYear = await batchRequest(undefined, {\n    firstUrl: `/groups/${orgWideGroupID}/calendar/events/`,\n    secondUrl: `?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n      store.getState().paulyList.eventTypeExtensionId\n    }'%20or%20id%20eq%20'${store.getState().paulyList.eventDataExtensionId}')`,\n    method: 'GET',\n    keys: {\n      map: schoolYearIds,\n    },\n  });\n\n  if (\n    batchRequestResultSchoolYear.data === undefined ||\n    batchRequestResultSchoolYear.result !== loadingStateEnum.success\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const timetableIds = new Map<string, string[]>();\n  for (\n    let schoolYearIndex = 0;\n    schoolYearIndex < batchRequestResultSchoolYear.data.length;\n    schoolYearIndex += 1\n  ) {\n    if (batchRequestResultSchoolYear.data[schoolYearIndex].status === 200) {\n      // TO DO fix status code\n      const schoolYearResponseData: { id: string; value: string }[] =\n        batchRequestResultSchoolYear.data[schoolYearIndex].body\n          .singleValueExtendedProperties;\n      const schoolYearData = schoolYearResponseData.find(e => {\n        return e.id === store.getState().paulyList.eventDataExtensionId;\n      });\n      if (schoolYearData !== undefined) {\n        try {\n          const perviousTimetable = timetableIds.get(schoolYearData.value);\n          if (perviousTimetable !== undefined) {\n            timetableIds.set(schoolYearData.value, [\n              ...perviousTimetable,\n              batchRequestResultSchoolYear.data[schoolYearIndex].body.id,\n            ]);\n          } else {\n            timetableIds.set(schoolYearData.value, [\n              batchRequestResultSchoolYear.data[schoolYearIndex].body.id,\n            ]);\n          }\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  // Get timetables\n  const batchRequestResultTimetable = await batchRequest(undefined, {\n    firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n      store.getState().paulyList.timetablesListId\n    }/items?expand=fields($select=timetableName,timetableId,timetableDataDays,timetableDataSchedules,timetableDefaultScheduleId,timetableDressCodeId)&$filter=fields/timetableId%20eq%20'`,\n    secondUrl: `'&$select=id`,\n    method: 'GET',\n    keys: {\n      map: timetableIds,\n    },\n  });\n\n  if (\n    batchRequestResultTimetable.result !== loadingStateEnum.success ||\n    batchRequestResultTimetable.data === undefined\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const dressCodeIds = new Map<string, number>();\n  for (\n    let responseIndex = 0;\n    responseIndex < batchRequestResultTimetable.data.length;\n    responseIndex += 1\n  ) {\n    if (\n      batchRequestResultTimetable.data[responseIndex].status === 200 &&\n      batchRequestResultTimetable.data[responseIndex] !== undefined\n    ) {\n      // TO DO fix status code\n      if (\n        batchRequestResultTimetable.data[responseIndex].body.value.length === 1\n      ) {\n        try {\n          dressCodeIds.set(\n            batchRequestResultTimetable.data[responseIndex].body.value[0].fields\n              .timetableDressCodeId,\n            0,\n          );\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  // Get dress code data\n  const batchRequestResultDressCode = await batchRequest(undefined, {\n    firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeData,dressCodeIncentivesData,dressCodeName,dressCodeId)&$select=id&$filter=fields/dressCodeId%20eq%20'`,\n    secondUrl: `'&$top=1`,\n    method: 'GET',\n    keys: {\n      map: dressCodeIds,\n    },\n  });\n\n  if (\n    batchRequestResultDressCode.data === undefined ||\n    batchRequestResultDressCode.result !== loadingStateEnum.success\n  ) {\n    return { result: loadingStateEnum.failed };\n  }\n\n  const dressCodes = new Map<string, dressCodeType>();\n  for (\n    let dressCodeIndex = 0;\n    dressCodeIndex < batchRequestResultDressCode.data.length;\n    dressCodeIndex += 1\n  ) {\n    if (\n      batchRequestResultDressCode.data[dressCodeIndex].status === 200 &&\n      batchRequestResultDressCode.data[dressCodeIndex].body !== undefined\n    ) {\n      batchRequestResultDressCode.data[dressCodeIndex].body;\n      if (\n        batchRequestResultDressCode.data[dressCodeIndex].body?.value.length ===\n        1\n      ) {\n        try {\n          dressCodes.set(\n            batchRequestResultDressCode.data[dressCodeIndex].body?.value[0]\n              .fields.dressCodeId,\n            {\n              name: batchRequestResultDressCode.data[dressCodeIndex].body\n                .value[0].fields.dressCodeName,\n              id: batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                .fields.dressCodeId,\n              dressCodeData: JSON.parse(\n                batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                  .fields.dressCodeData,\n              ),\n              dressCodeIncentives:\n                batchRequestResultDressCode.data[dressCodeIndex].body.value[0]\n                  .fields.dressCodeIncentivesData,\n            },\n          );\n        } catch {\n          return { result: loadingStateEnum.failed };\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  const timetables = new Map<string, timetableType>();\n  for (\n    let timetableIndex = 0;\n    timetableIndex < batchRequestResultTimetable.data.length;\n    timetableIndex += 1\n  ) {\n    const resultTimetableData =\n      batchRequestResultTimetable.data[timetableIndex].body;\n    if (\n      batchRequestResultTimetable.data[timetableIndex].status === 200 &&\n      resultTimetableData !== undefined\n    ) {\n      if (resultTimetableData.value.length === 1) {\n        const timetableData = resultTimetableData.value[0].fields;\n        const dressCode = dressCodes.get(timetableData.timetableDressCodeId);\n        const timetableSchedules: scheduleType[] = [];\n        const scheduleIds: string[] = JSON.parse(\n          timetableData.timetableDataSchedules,\n        );\n\n        for (\n          let scheduleIndex = 0;\n          scheduleIndex < scheduleIds.length;\n          scheduleIndex += 1\n        ) {\n          const newSchedule = schedules.get(scheduleIds[scheduleIndex]);\n          if (newSchedule !== undefined) {\n            timetableSchedules.push(newSchedule);\n          }\n        }\n        if (dressCode !== undefined) {\n          timetables.set(timetableData.timetableId, {\n            name: timetableData.timetableName,\n            id: timetableData.timetableId,\n            schedules: timetableSchedules,\n            days: JSON.parse(timetableData.timetableDataDays),\n            dressCode,\n          });\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  const outputTimetables = new Map<string, timetableType>();\n  timetables.forEach((value, key) => {\n    const timetablesArray = timetableIds.get(key);\n    if (timetablesArray) {\n      timetablesArray.forEach(item => {\n        outputTimetables.set(item, value);\n      });\n    }\n  });\n\n  return { result: loadingStateEnum.success, data: outputTimetables };\n}\n\nexport async function createDressCode(\n  dressCodeName: string,\n  dressCodeData: dressCodeDataType[],\n): Promise<loadingStateEnum> {\n  const dressCodeId = createUUID();\n  const data = {\n    fields: {\n      Title: dressCodeId,\n      dressCodeId,\n      dressCodeName,\n      dressCodeData: JSON.stringify(dressCodeData),\n      dressCodeIncentivesData: '[]',\n    },\n  };\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.dressCodeListId}/items`,\n    'POST',\n    JSON.stringify(data),\n  );\n  if (result.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  MonthView.tsx\n  This is the componet used on the home page of the app\n*/\nimport React, { useEffect, useState } from 'react';\nimport { View, Text } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport {\n  findFirstDayinMonth,\n  getDay,\n  getDaysInMonth,\n} from '../Functions/calendar/calendarFunctions';\nimport { getSchoolDays } from '../Functions/calendar/calendarFunctionsGraph';\nimport { RootState } from '../Redux/store';\nimport { monthViewSlice } from '../Redux/reducers/monthViewReducer';\nimport { Colors, loadingStateEnum } from '../types';\n\nfunction MonthBlock({\n  value,\n  width,\n  height,\n  startDate,\n  daySelected,\n}: {\n  value: number;\n  width: number;\n  height: number;\n  startDate: number;\n  daySelected: number;\n}) {\n  const textval: number = getDay(value, startDate) ?? 0;\n  const day = new Date().getDate();\n  const monthViewData = useSelector((state: RootState) => state.monthView).find(\n    e => {\n      return new Date(e.startTime).getDate() === textval;\n    },\n  );\n  return (\n    <View\n      style={{\n        width,\n        height,\n        borderColor: 'black',\n        borderWidth: 2,\n      }}\n      id=\"This\"\n    >\n      {value >= startDate - 1 && value <= daySelected && textval !== 0 ? (\n        <View\n          style={{\n            width,\n            position: 'absolute',\n            height,\n            borderColor: 'black',\n            backgroundColor:\n              day == textval\n                ? 'red'\n                : day >= textval + 1\n                ? 'gray'\n                : monthViewData !== undefined\n                ? monthViewData.eventColor\n                : Colors.white,\n          }}\n        />\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.white,\n            width,\n            height,\n          }}\n        />\n      )}\n      {textval >= 1 ? (\n        <View\n          id=\"Text\"\n          style={{\n            width,\n            height,\n            justifyContent: 'center',\n            alignContent: 'center',\n            alignItems: 'center',\n            position: 'absolute',\n          }}\n        >\n          {monthViewData !== undefined ? (\n            <>\n              {monthViewData.schoolDayData !== undefined ? (\n                <>\n                  <Text\n                    style={{\n                      color: 'black',\n                      fontSize: 10,\n                      fontWeight: 'bold',\n                      position: 'absolute',\n                      top: 1,\n                      right: 3,\n                    }}\n                  >\n                    {monthViewData.schoolDayData.schoolDayData.shorthand}\n                  </Text>\n                  <Text style={{ color: 'black' }}>{textval}</Text>\n                </>\n              ) : (\n                <Text style={{ color: 'black', zIndex: 2 }}>{textval}</Text>\n              )}\n            </>\n          ) : (\n            <Text id=\"This is text\" style={{ color: 'black', zIndex: 2 }}>\n              {textval}\n            </Text>\n          )}\n        </View>\n      ) : null}\n    </View>\n  );\n}\n\nexport default function MonthView({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const Count = getDaysInMonth(new Date());\n  const StartDate = findFirstDayinMonth(new Date());\n  const [daySelected, setDaySelected] = useState<number>(\n    Count + StartDate - 2 - (Count / 7) * 2,\n  );\n  const thirtyValue = [...Array(30).keys()];\n  const monthViewData = useSelector((state: RootState) => state.monthView);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    if (monthViewData.length <= 0) {\n      const result = await getSchoolDays(new Date());\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        dispatch(monthViewSlice.actions.setMonthViewData(result.data));\n      }\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        flexWrap: 'wrap',\n        width,\n        height,\n      }}\n    >\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Monday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Tuesday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Wednesday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Thursday\n        </Text>\n      </View>\n      <View\n        style={{\n          width: width * 0.2,\n          height: height * 0.13,\n          justifyContent: 'center',\n          alignItems: 'center',\n          alignContent: 'center',\n          overflow: 'hidden',\n        }}\n      >\n        <Text\n          numberOfLines={1}\n          style={{ width: width * 0.2, textAlign: 'center' }}\n        >\n          Friday\n        </Text>\n      </View>\n      {thirtyValue.map((value: number) => (\n        <View\n          style={{\n            width: width * 0.2,\n            height: height * 0.145,\n            overflow: 'hidden',\n          }}\n          key={value}\n        >\n          <MonthBlock\n            value={value}\n            width={width * 0.2}\n            height={height * 0.145}\n            startDate={StartDate}\n            daySelected={daySelected}\n          />\n        </View>\n      ))}\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport { loadingStateEnum } from '../../types';\nimport { paulyDataSlice } from '../../Redux/reducers/paulyDataReducer';\n\nexport default async function getCurrentPaulyData() {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.paulyDataListId}/items/1/fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (\n      data.animationSpeed !== undefined &&\n      data.message !== undefined &&\n      data.powerpointId !== undefined\n    ) {\n      const fileResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/shares/${data.powerpointId}/driveItem/content?format=pdf`,\n        'GET',\n        undefined,\n        [{ key: 'Prefer', value: 'redeemSharingLink' }],\n      ); // `https://graph.microsoft.com/v1.0/shares/${data[\"powerpointId\"]}/root?$select=@microsoft.graph.downloadUrl`\n      if (fileResult.ok) {\n        const dataBlob = await fileResult.blob();\n        const urlOut = URL.createObjectURL(dataBlob);\n        const outputResult = {\n          powerpointBlob: urlOut,\n          powerpointShare: data.powerpointId,\n          message: data.message,\n          animationSpeed: data.animationSpeed,\n          paulyDataState: loadingStateEnum.success,\n        };\n        store.dispatch(paulyDataSlice.actions.setPaulyData(outputResult));\n      } else {\n        store.dispatch(\n          paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n        );\n      }\n    } else {\n      store.dispatch(\n        paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    store.dispatch(\n      paulyDataSlice.actions.setPaulyDataState(loadingStateEnum.failed),\n    );\n  }\n}\n","import { StyleSheet, ViewStyle } from 'react-native';\nimport React, { useEffect } from 'react';\nimport Svg, { G, Path } from 'react-native-svg';\nimport Animated, {\n  interpolateColor,\n  useAnimatedProps,\n  useSharedValue,\n  withDelay,\n  withRepeat,\n  withTiming,\n} from 'react-native-reanimated';\n\n// \"M7.706 0.290 C 7.484 0.362,7.356 0.490,7.294 0.699 C 7.259 0.816,7.253 1.088,7.253 2.508 C 7.253 4.389,7.251 4.365,7.443 4.557 C 7.700 4.813,8.300 4.813,8.557 4.557 C 8.749 4.365,8.747 4.389,8.747 2.508 C 8.747 0.688,8.744 0.656,8.596 0.480 C 8.472 0.333,8.339 0.284,8.040 0.276 C 7.893 0.272,7.743 0.278,7.706 0.290\"\nconst AnimatedPath = Animated.createAnimatedComponent(Path);\n\nfunction ChipView({ d, index }: { d: string; index: number }) {\n  const progress = useSharedValue(0);\n  useEffect(() => {\n    progress.value = withDelay(\n      ((index + 1) / 8) * 1000,\n      withRepeat(withTiming(1, { duration: 500 }), 0, true),\n    );\n  }, []);\n  const animatedProp = useAnimatedProps(() => {\n    return {\n      fill: interpolateColor(progress.value, [0, 1], ['white', '#69717d']),\n    };\n  });\n\n  return (\n    <AnimatedPath\n      key={`Chip_Key_${index}`}\n      id={`Chip_${index}`}\n      d={d}\n      stroke=\"none\"\n      translate={[0]}\n      fillRule=\"evenodd\"\n      animatedProps={animatedProp}\n    />\n  );\n}\n\nexport default function ProgressView({\n  width,\n  height,\n  style,\n}: {\n  width: number;\n  height: number;\n  style?: ViewStyle;\n}) {\n  const paths = [\n    'M7.706 0.290 C 7.484 0.362,7.356 0.490,7.294 0.699 C 7.259 0.816,7.253 1.088,7.253 2.508 C 7.253 4.389,7.251 4.365,7.443 4.557 C 7.700 4.813,8.300 4.813,8.557 4.557 C 8.749 4.365,8.747 4.389,8.747 2.508 C 8.747 0.688,8.744 0.656,8.596 0.480 C 8.472 0.333,8.339 0.284,8.040 0.276 C 7.893 0.272,7.743 0.278,7.706 0.290',\n    'M2.753 2.266 C 2.595 2.338,2.362 2.566,2.281 2.728 C 2.197 2.897,2.193 3.085,2.269 3.253 C 2.343 3.418,4.667 5.750,4.850 5.843 C 5.109 5.976,5.375 5.911,5.643 5.649 C 5.907 5.391,5.977 5.111,5.843 4.850 C 5.750 4.667,3.418 2.343,3.253 2.269 C 3.101 2.200,2.901 2.199,2.753 2.266',\n    'M0.699 7.292 C 0.404 7.385,0.258 7.620,0.258 7.999 C 0.259 8.386,0.403 8.618,0.698 8.706 C 0.816 8.741,1.079 8.747,2.508 8.747 C 3.997 8.747,4.196 8.742,4.318 8.702 C 4.498 8.644,4.644 8.498,4.702 8.318 C 4.788 8.053,4.745 7.677,4.608 7.491 C 4.578 7.451,4.492 7.384,4.417 7.343 L 4.280 7.267 2.547 7.261 C 1.152 7.257,0.791 7.263,0.699 7.292',\n    'M4.853 10.282 C 4.730 10.339,4.520 10.536,3.518 11.541 C 2.597 12.464,2.316 12.762,2.271 12.860 C 2.195 13.025,2.196 13.216,2.272 13.378 C 2.342 13.528,2.572 13.764,2.727 13.845 C 2.884 13.927,3.117 13.926,3.280 13.843 C 3.447 13.757,5.757 11.447,5.843 11.280 C 5.926 11.118,5.927 10.884,5.846 10.729 C 5.764 10.572,5.552 10.364,5.392 10.283 C 5.213 10.192,5.048 10.192,4.853 10.282',\n    'M7.745 11.277 C 7.620 11.309,7.451 11.412,7.392 11.492 C 7.254 11.678,7.253 11.691,7.253 13.489 C 7.253 14.921,7.259 15.184,7.294 15.302 C 7.382 15.597,7.615 15.741,8.000 15.741 C 8.385 15.741,8.618 15.597,8.706 15.302 C 8.768 15.090,8.767 11.875,8.704 11.690 C 8.644 11.514,8.575 11.430,8.420 11.346 C 8.310 11.286,8.246 11.271,8.057 11.264 C 7.930 11.259,7.790 11.265,7.745 11.277',\n    'M10.753 10.266 C 10.595 10.338,10.362 10.566,10.281 10.728 C 10.197 10.897,10.193 11.085,10.269 11.253 C 10.343 11.418,12.667 13.750,12.850 13.843 C 13.109 13.976,13.375 13.911,13.643 13.649 C 13.907 13.391,13.977 13.111,13.843 12.850 C 13.750 12.667,11.418 10.343,11.253 10.269 C 11.101 10.200,10.901 10.199,10.753 10.266',\n    'M11.745 7.278 C 11.622 7.308,11.452 7.411,11.392 7.492 C 11.255 7.677,11.212 8.053,11.298 8.318 C 11.356 8.498,11.502 8.644,11.682 8.702 C 11.804 8.742,12.003 8.747,13.492 8.747 C 14.921 8.747,15.184 8.741,15.302 8.706 C 15.597 8.618,15.741 8.386,15.742 7.999 C 15.742 7.614,15.595 7.383,15.290 7.291 C 15.187 7.260,14.864 7.254,13.496 7.256 C 12.578 7.258,11.790 7.268,11.745 7.278',\n    'M12.853 2.282 C 12.730 2.339,12.520 2.536,11.518 3.541 C 10.597 4.464,10.316 4.762,10.271 4.860 C 10.195 5.025,10.196 5.216,10.272 5.378 C 10.342 5.528,10.572 5.764,10.727 5.845 C 10.884 5.927,11.117 5.926,11.280 5.843 C 11.447 5.757,13.757 3.447,13.843 3.280 C 13.926 3.118,13.927 2.884,13.846 2.729 C 13.764 2.572,13.552 2.364,13.392 2.283 C 13.213 2.192,13.048 2.192,12.853 2.282',\n  ];\n\n  return (\n    <Svg\n      width={width}\n      height={height}\n      style={style}\n      viewBox=\"0 0 16 16\"\n      fill=\"none\"\n    >\n      <G id=\"SVGRepo_iconCarrier\">\n        {paths.map((path, index) => (\n          <ChipView key={`Chip_Key_Holder_${index}`} d={path} index={index} />\n        ))}\n      </G>\n    </Svg>\n  );\n}\n\nconst styles = StyleSheet.create({\n  box: {\n    height: 120,\n    width: 120,\n    backgroundColor: '#b58df1',\n    borderRadius: 20,\n  },\n});\n","import { View, Text, Animated, Easing, Platform } from 'react-native';\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { Colors } from '../types';\n\nexport default function ScrollingTextAnimation({\n  text,\n  width,\n  height,\n}: {\n  text: string;\n  width: number;\n  height: number;\n}) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [childWidth, setChildWidth] = useState<number>(0);\n  function mainLoop(childWidth: number) {\n    Animated.loop(\n      Animated.sequence([\n        Animated.timing(pan, {\n          toValue: -childWidth,\n          duration: 5000,\n          delay: 0,\n          easing: Easing.linear,\n          useNativeDriver: false,\n        }),\n        Animated.timing(pan, {\n          toValue: 0,\n          duration: 0,\n          delay: 0,\n          useNativeDriver: false,\n        }),\n      ]),\n    ).start();\n  }\n\n  useEffect(() => {\n    if (childWidth !== 0) {\n      mainLoop(childWidth);\n    }\n  }, [childWidth]);\n\n  // Font\n  const [fontsLoaded] = useFonts({\n    GochiHand: require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View style={{ width, height, overflow: 'hidden' }}>\n      {childWidth !== 0 ? (\n        <Animated.View style={{ transform: [{ translateX: pan }] }}>\n          <View\n            style={{\n              width: childWidth + childWidth * 0.01,\n              height,\n              overflow: 'hidden',\n              position: 'absolute',\n              left: childWidth + childWidth * 0.01,\n            }}\n          >\n            <Text\n              style={{\n                fontFamily: 'GochiHand',\n                color: Colors.white,\n                fontSize: height,\n                height,\n              }}\n            >\n              {text}\n            </Text>\n          </View>\n          <View\n            style={{\n              width: childWidth + childWidth * 0.01,\n              height,\n              position: 'absolute',\n              left: 0,\n            }}\n          >\n            <Text\n              style={{\n                fontFamily: 'GochiHand',\n                color: Colors.white,\n                fontSize: height,\n                height,\n                position: 'absolute',\n              }}\n            >\n              {text}\n            </Text>\n          </View>\n        </Animated.View>\n      ) : (\n        <ScrollView style={{ width: 99999999 }} horizontal>\n          <Text\n            numberOfLines={1}\n            onLayout={e => {\n              setChildWidth(e.nativeEvent.layout.width);\n            }}\n            adjustsFontSizeToFit={!(Platform.OS === 'ios')}\n            style={{\n              fontFamily: 'GochiHand',\n              color: Colors.white,\n              fontSize: height,\n              height,\n            }}\n          >\n            {text}\n          </Text>\n        </ScrollView>\n      )}\n    </View>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useEffect, useCallback } from 'react';\nimport { View, Text, Image, Pressable } from 'react-native';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport { useNavigate } from 'react-router-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport MonthView from './MonthView';\nimport store, { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport getCurrentPaulyData from '../Functions/homepage/getCurrentPaulyData';\nimport ProgressView from '../UI/ProgressView';\nimport { BookIcon, MedalIcon, PersonIcon } from '../UI/Icons/Icons';\nimport ScrollingTextAnimation from '../UI/ScrollingTextAnimation';\nimport { Colors, loadingStateEnum } from '../types';\n\nexport default function HomePage() {\n  const navigate = useNavigate();\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const authenticationToken = useSelector(\n    (state: RootState) => state.authenticationToken,\n  );\n  const { message, paulyDataState } = useSelector(\n    (state: RootState) => state.paulyData,\n  );\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const dispatch = useDispatch();\n  const insets = useSafeAreaInsets();\n\n  async function loadData() {\n    await getCurrentPaulyData();\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.maroon,\n        bottom: Colors.maroon,\n      }),\n    );\n  }, []);\n\n  useEffect(() => {\n    if (\n      store.getState().authenticationToken !== '' &&\n      store.getState().paulyList.siteId !== ''\n    ) {\n      loadData();\n    }\n  }, [authenticationToken, siteId]);\n\n  useEffect(() => {\n    if (currentBreakPoint > 0) {\n      navigate('/notifications');\n    }\n  }, [currentBreakPoint]);\n\n  // Font\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n    GochiHand: require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ backgroundColor: Colors.maroon, overflow: 'hidden' }}>\n        <Pressable\n          style={{ width: width * 1.0, height: height * 0.08 }}\n          onPress={() => {\n            navigate('/notifications');\n          }}\n        >\n          {paulyDataState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width: width * 1.0,\n                height: height * 0.08,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={width < height * 0.08 ? width * 0.1 : height * 0.07}\n                height={width < height * 0.08 ? width * 0.1 : height * 0.07}\n              />\n            </View>\n          ) : (\n            <>\n              {paulyDataState === loadingStateEnum.success ? (\n                <>\n                  {message !== '' ? (\n                    <ScrollingTextAnimation\n                      width={width * 1.0}\n                      height={height * 0.08}\n                      text={message}\n                    />\n                  ) : null}\n                </>\n              ) : (\n                <Text>Failed</Text>\n              )}\n            </>\n          )}\n        </Pressable>\n        <Pressable\n          onPress={() => {\n            navigate('/calendar');\n          }}\n          style={{ width: width * 0.999, height: height * 0.42 }}\n        >\n          <View>\n            <View\n              style={{\n                width: width * 1.0,\n                height: height * 0.05,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n                borderTopColor: 'black',\n                borderTopWidth: 2,\n                borderBottomColor: 'black',\n                borderBottomWidth: 2,\n              }}\n            >\n              <Text style={{ margin: 'auto', color: Colors.white }}>\n                Calendar\n              </Text>\n            </View>\n            <MonthView width={width * 1.0} height={height * 0.37} />\n          </View>\n        </Pressable>\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 1.0,\n            height: height * 0.25,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/commissions');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                  zIndex: 1,\n                }}\n              />\n              <MedalIcon\n                width={width * 0.5}\n                height={height * 0.23}\n                style={{ position: 'absolute', top: height * 0.01, zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              navigate('/sports');\n            }}\n            style={{ borderColor: 'black', borderWidth: 2 }}\n          >\n            <View\n              style={{\n                backgroundColor: Colors.maroon,\n                width: width * 0.5,\n                height: height * 0.25,\n                borderTopWidth: 1,\n                borderTopColor: 'black',\n                zIndex: 1,\n              }}\n            />\n            <Image\n              source={require('../../assets/images/Football.png')}\n              resizeMode=\"contain\"\n              width={width * 0.3}\n              height={height * 0.25}\n              style={{\n                zIndex: 2,\n                height: height * 0.25,\n                width: width * 0.5,\n                position: 'absolute',\n                aspectRatio: '1/1',\n              }}\n            />\n          </Pressable>\n        </View>\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 1.0,\n            height: height * 0.25,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/resources');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                  zIndex: 1,\n                }}\n              />\n              <BookIcon\n                width={width * 0.5}\n                height={height * 0.25}\n                style={{ position: 'absolute', zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              navigate('/profile');\n            }}\n          >\n            <View style={{ borderColor: 'black', borderWidth: 2 }}>\n              <View\n                style={{\n                  backgroundColor: Colors.maroon,\n                  width: width * 0.5,\n                  height: height * 0.25,\n                  borderTopWidth: 1,\n                  borderTopColor: 'black',\n                }}\n              />\n              <PersonIcon\n                width={width * 0.5}\n                height={height * 0.25}\n                style={{ position: 'absolute', zIndex: 2 }}\n              />\n            </View>\n          </Pressable>\n        </View>\n      </View>\n      <View\n        style={{\n          position: 'absolute',\n          backgroundColor: 'black',\n          width: 4,\n          left: width / 2 + 2,\n          bottom: -insets.bottom,\n          height: insets.bottom,\n        }}\n      />\n    </>\n  );\n}\n","import * as Location from 'expo-location';\nimport { getDistance } from 'geolib';\nimport { locationStateEnum } from '../../types';\n\nexport default async function getUsersLocation(\n  commission: commissionType,\n): Promise<{ result: locationStateEnum; data?: locationCoords }> {\n  const { status } = await Location.requestForegroundPermissionsAsync();\n  if (status !== 'granted') {\n    return { result: locationStateEnum.permissionDenied };\n  }\n\n  const location = await Location.getCurrentPositionAsync();\n  if (!location.mocked) {\n    if (\n      commission.coordinateLat !== undefined &&\n      commission.coordinateLng !== undefined &&\n      commission.proximity !== undefined\n    ) {\n      const prox = getDistance(\n        { lat: location.coords.latitude, lng: location.coords.longitude },\n        {\n          latitude: commission?.coordinateLat,\n          longitude: commission?.coordinateLng,\n        },\n      );\n      if (prox <= commission.proximity) {\n        return {\n          result: locationStateEnum.success,\n          data: {\n            latCoordinate: location.coords.latitude,\n            lngCoordinate: location.coords.longitude,\n          },\n        };\n      }\n      return { result: locationStateEnum.notCloseEnough };\n    }\n  } else {\n    return { result: locationStateEnum.mockedLocation };\n  }\n  return { result: locationStateEnum.notStarted };\n}\n","import { orgWideGroupID, paulyDomain } from '../../PaulyConfig';\nimport { loadingStateEnum } from '../../types';\nimport createUUID from '../ultility/createUUID';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nasync function b64toBlob(\n  b64Data: string,\n  contentType = '',\n  sliceSize = 512,\n): Promise<Blob | undefined> {\n  const result = await fetch(b64Data);\n  if (result.ok) {\n    return await result.blob();\n  }\n  return undefined;\n}\n\nexport async function addImage(\n  base64: string,\n): Promise<{ result: loadingStateEnum; data?: string }> {\n  const fileBlob = await b64toBlob(base64);\n  if (fileBlob !== undefined) {\n    const types: any = {\n      'image/bmp': '.bmp',\n      'image/gif': '.gif',\n      'image/jpeg': '.jpg',\n      'image/png': '.png',\n      'image/webp': '.webp',\n    };\n    if (types[fileBlob.type] !== undefined) {\n      const rootIdResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/me/drive/root?$select=id',\n      );\n      if (rootIdResult.ok) {\n        const rootIdData = await rootIdResult.json();\n        const imageUUID = createUUID();\n        const resumableSessionData = {\n          item: {\n            '@microsoft.graph.conflictBehavior': 'rename',\n            name: `Pauly_Image_${imageUUID}_Submission${types[fileBlob.type]}`,\n          },\n          deferCommit: true,\n        };\n        const resumableSessionResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/me/drive/items/${\n            rootIdData.id\n          }:/Pauly_Image_${imageUUID}_Submission${\n            types[fileBlob.type]\n          }:/createUploadSession`,\n          'POST',\n          JSON.stringify(resumableSessionData),\n        );\n        if (resumableSessionResult.ok) {\n          const resumableSessionResultData =\n            await resumableSessionResult.json();\n          const { uploadUrl } = resumableSessionResultData;\n          if (resumableSessionResultData.nextExpectedRanges.length === 1) {\n            const nextExpectedRange: string =\n              resumableSessionResultData.nextExpectedRanges[0];\n            let remaining: number = fileBlob.size;\n            let uploaded: number = 0;\n            if (nextExpectedRange === `${uploaded}-`) {\n              while (remaining > 0) {\n                // TO DO Check that this works\n                const uploadBlob = fileBlob.slice(\n                  uploaded,\n                  remaining >= 5242880 ? 5242880 : remaining,\n                );\n                uploaded += remaining >= 5242880 ? 5242880 : remaining;\n\n                const uploadResult = await fetch(uploadUrl, {\n                  headers: {\n                    'Content-Length': uploadBlob.size.toString(),\n                    'Content-Range': `bytes ${\n                      uploaded - (remaining >= 5242880 ? 5242880 : remaining)\n                    }-${remaining >= 5242880 ? uploaded : uploaded - 1}/${\n                      fileBlob.size\n                    }`,\n                  },\n                  method: 'PUT',\n                  body: uploadBlob,\n                });\n                remaining -= remaining >= 5242880 ? 5242880 : remaining;\n                if (uploadResult.ok) {\n                } else {\n                  return { result: loadingStateEnum.failed };\n                }\n              }\n              const uploadCompleteResult = await fetch(uploadUrl, {\n                headers: {\n                  'Content-Length': '0',\n                },\n                method: 'POST',\n              });\n              if (uploadCompleteResult.ok) {\n                const uploadCompleteResultData =\n                  await uploadCompleteResult.json();\n                const createLinkMainData = {\n                  type: 'view',\n                  scope: 'organization',\n                };\n                const createLinkResult = await callMsGraph(\n                  `https://graph.microsoft.com/v1.0/me/drive/items/${uploadCompleteResultData.id}/createLink`,\n                  'POST',\n                  JSON.stringify(createLinkMainData),\n                );\n                if (createLinkResult.ok) {\n                  const createLinkData = await createLinkResult.json();\n                  return {\n                    result: loadingStateEnum.success,\n                    data: createLinkData.shareId,\n                  };\n                }\n                return { result: loadingStateEnum.failed };\n              }\n              return { result: loadingStateEnum.failed };\n            }\n            return { result: loadingStateEnum.failed };\n          }\n          return { result: loadingStateEnum.failed };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function claimCommissionPost(\n  auth: string,\n  commissionId: string,\n  imageShare?: string,\n  location?: locationCoords,\n): Promise<loadingStateEnum> {\n  let outResult: string = '';\n  if (location) {\n    outResult += `&latCoordinate=${location.latCoordinate}&lngCoordinate=${location.lngCoordinate}`;\n  }\n  if (imageShare) {\n    outResult += `&imageShare=${imageShare}`;\n  }\n  const bearer = `Bearer ${auth}`;\n  try {\n    const result = await fetch(\n      `${paulyDomain}/api/SubmitCommission?orgWideGroupId=${orgWideGroupID}&commissionId=${commissionId}${outResult}`,\n      {\n        headers: {\n          Authorization: bearer,\n        },\n      },\n    );\n    if (result.ok) {\n      return loadingStateEnum.success;\n    }\n    return loadingStateEnum.failed;\n  } catch {\n    return loadingStateEnum.failed;\n  }\n}\n","import { useMsal } from '@azure/msal-react';\nimport React, { useState } from 'react';\nimport { Pressable, View, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport { clientId } from '../../PaulyConfig';\nimport getUsersLocation from '../../Functions/commissions/getLocation';\nimport {\n  addImage,\n  claimCommissionPost,\n} from '../../Functions/commissions/claimCommissionsFunctions';\nimport {\n  commissionTypeEnum,\n  loadingStateEnum,\n  locationStateEnum,\n} from '../../types';\nimport ProgressView from '../../UI/ProgressView';\n\nexport default function CommissionClaim({\n  commission,\n  imageData,\n}: {\n  commission: commissionType;\n  imageData?: string;\n}) {\n  const [claimCommissionState, setClaimCommissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const { instance } = useMsal();\n\n  async function claimCommission() {\n    setClaimCommissionState(loadingStateEnum.loading);\n    const apiResult = await instance.acquireTokenSilent({\n      scopes: [`api://${clientId}/api/Test`],\n    });\n    let outImageUrl: string = '';\n    if (\n      (commission.value === commissionTypeEnum.Image ||\n        commission.value === commissionTypeEnum.ImageLocation) &&\n      imageData !== undefined\n    ) {\n      const outImage = await addImage(imageData);\n      if (\n        outImage.result === loadingStateEnum.success &&\n        outImage.data !== undefined\n      ) {\n        outImageUrl = outImage.data;\n      } else {\n        setClaimCommissionState(loadingStateEnum.failed);\n        return;\n      }\n    }\n    if (\n      commission.value === commissionTypeEnum.ImageLocation ||\n      commission.value === commissionTypeEnum.Location\n    ) {\n      const locationResult = await getUsersLocation(commission);\n      if (\n        locationResult.result === locationStateEnum.success &&\n        locationResult.data !== undefined\n      ) {\n        const result = await claimCommissionPost(\n          apiResult.accessToken,\n          commission.commissionId,\n          outImageUrl !== '' ? outImageUrl : undefined,\n          locationResult.data,\n        );\n        setClaimCommissionState(result);\n      } else {\n        setClaimCommissionState(loadingStateEnum.failed);\n      }\n    } else {\n      const result = await claimCommissionPost(\n        apiResult.accessToken,\n        commission.commissionId,\n        outImageUrl !== '' ? outImageUrl : undefined,\n        undefined,\n      );\n      setClaimCommissionState(result);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => {\n        claimCommission();\n      }}\n      style={{\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        backgroundColor: '#ededed',\n        width: width * 0.7,\n        borderRadius: 15,\n        alignItems: 'center',\n        alignContent: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {claimCommissionState === loadingStateEnum.loading ? (\n        <View style={{ margin: 10 }}>\n          <ProgressView width={24} height={24} />\n        </View>\n      ) : (\n        <Text style={{ margin: 10, fontWeight: 'bold' }}>\n          {claimCommissionState === loadingStateEnum.notStarted\n            ? 'CLAIM COMMISSION'\n            : claimCommissionState === loadingStateEnum.success\n            ? 'SUBMISSION SENT'\n            : 'FAILED TO SEND SUBMISSION'}\n        </Text>\n      )}\n    </Pressable>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getCommission(\n  commissionId: string,\n): Promise<{ result: loadingStateEnum; data?: commissionType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.commissionListId\n    }/items?expand=fields&$filter=fields/commissionID%20eq%20'${commissionId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length !== 1) {\n      // Not found\n      return { result: loadingStateEnum.failed };\n    }\n    const dataResult: commissionType = {\n      itemId: data.value[0].id,\n      title: data.value[0].fields.Title,\n      startDate: data.value[0].fields.startDate,\n      endDate: data.value[0].fields.endDate,\n      points: data.value[0].fields.points,\n      hidden: data.value[0].fields.hidden,\n      commissionId: data.value[0].fields.commissionID,\n      proximity: data.value[0].fields.proximity,\n      coordinateLat: data.value[0].fields.coordinateLat,\n      coordinateLng: data.value[0].fields.coordinateLng,\n      postData: {\n        teamId: data.value[0].fields.postTeamId,\n        channelId: data.value[0].fields.postChannelId,\n        postId: data.value[0].fields.postId,\n      },\n      timed: false,\n      maxNumberOfClaims: 0,\n      allowMultipleSubmissions: false,\n      value: data.value[0].fields.value - 1,\n      submissionsCount: 0,\n      claimCount: 0,\n      reviewedCount: 0,\n    };\n    return { result: loadingStateEnum.success, data: dataResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Platform } from 'react-native';\nimport React, { useState } from 'react';\nimport WebView from 'react-native-webview';\n\nexport default function WebViewCross({\n  html,\n  width,\n}: {\n  html: string | undefined;\n  width: number;\n}) {\n  const jsCode =\n    \"window.ReactNativeWebView.postMessage(document.getElementById('pauly-main').clientHeight)\";\n  // document.getElementById('pauly-main').innerHTML\n  const [height, setHeight] = useState<number>(0);\n  return (\n    <>\n      {html !== undefined ? (\n        <>\n          {Platform.OS !== 'web' ? (\n            <WebView\n              source={{\n                html: `<!DOCTYPE html>\n              <html>\n              <head>\n                <style>\n                  body {font-weight: normal; font-family: Arial; font-size: 55px}\n                  div {font-weight: normal; font-family: Arial}\n                </style>\n              </head>\n              <body>\n                <div id=\"pauly-main\">\n                  ${html}\n                </div>\n              </body>\n              </html>`,\n              }}\n              style={{ margin: 10, height: height + 10, width }}\n              automaticallyAdjustContentInsets={false}\n              javaScriptEnabled\n              injectedJavaScript={jsCode}\n              onMessage={event =>\n                setHeight(parseFloat(event.nativeEvent.data) / 3)\n              }\n            />\n          ) : (\n            <View style={{ margin: 10 }}>\n              <div dangerouslySetInnerHTML={{ __html: html }} />\n            </View>\n          )}\n        </>\n      ) : null}\n    </>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport * as ImagePicker from 'expo-image-picker';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { View, Text, Pressable, Image } from 'react-native';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport CommissionClaim from './CommissionClaim';\nimport getCommission from '../../Functions/commissions/getCommission';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport ProgressView from '../../UI/ProgressView';\nimport { CloseIcon } from '../../UI/Icons/Icons';\nimport WebViewCross from '../../UI/WebViewCross';\nimport { Colors, commissionTypeEnum, loadingStateEnum } from '../../types';\n\nenum CameraResult {\n  notStarted,\n  loading,\n  success,\n  permissionDenied,\n  goToSettings,\n  failed,\n}\n\nexport default function CommissionsView({\n  id,\n  onClose,\n}: {\n  id: string;\n  onClose: () => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [commissionData, setCommissionData] = useState<\n    commissionType | undefined\n  >(undefined);\n  const [commissionState, setCommissionState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [messageState, setMessageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [messageData, setMessageData] = useState<string>('');\n  const [imageUri, setImageUri] = useState<string>('');\n  const [takeImageState, setTakeImageState] = useState<CameraResult>(\n    CameraResult.notStarted,\n  );\n  const [pickImageState, setPickerImageState] = useState<CameraResult>(\n    CameraResult.notStarted,\n  );\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const [evaluatedOverflow, setEvaluatedOverflow] = useState<boolean>(false);\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function getPost(teamId: string, channelId: string, messageId: string) {\n    setMessageState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages/${messageId}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      setMessageData(data.body.content);\n      setMessageState(loadingStateEnum.success);\n    } else {\n      setMessageState(loadingStateEnum.failed);\n    }\n  }\n\n  async function getCommissionInformation() {\n    const result = await getCommission(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCommissionData(result.data);\n      if (result.data?.postData !== undefined) {\n        getPost(\n          result.data.postData.teamId,\n          result.data.postData.channelId,\n          result.data.postData.postId,\n        );\n      }\n    }\n    setCommissionState(result.result);\n  }\n\n  async function pickImage() {\n    const result = await ImagePicker.launchImageLibraryAsync({\n      allowsMultipleSelection: false,\n      allowsEditing: false,\n      mediaTypes: ImagePicker.MediaTypeOptions.Images,\n    });\n    if (!result.canceled) {\n      if (result.assets.length === 1) {\n        setImageUri(result.assets[0].uri);\n        Image.getSize(\n          result.assets[0].uri,\n          (imageMeasureWidth, imageMeasureHeight) => {\n            const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n            setImageHeight(width * 0.7 * heightPerWidth);\n          },\n        );\n        setPickerImageState(CameraResult.success);\n      } else {\n        setPickerImageState(CameraResult.failed);\n      }\n    } else {\n      setPickerImageState(CameraResult.notStarted);\n    }\n  }\n  const [status, requestPermission] = ImagePicker.useCameraPermissions();\n\n  async function takeImage() {\n    setTakeImageState(CameraResult.loading);\n    if (status?.status === ImagePicker.PermissionStatus.GRANTED) {\n      const result = await ImagePicker.launchCameraAsync({\n        allowsEditing: false,\n        allowsMultipleSelection: false,\n        mediaTypes: ImagePicker.MediaTypeOptions.Images,\n      });\n      if (!result.canceled) {\n        if (result.assets.length === 1) {\n          setImageUri(result.assets[0].uri);\n          Image.getSize(\n            result.assets[0].uri,\n            (imageMeasureWidth, imageMeasureHeight) => {\n              const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n              setImageHeight(width * 0.7 * heightPerWidth);\n            },\n          );\n          setTakeImageState(CameraResult.success);\n        } else {\n          setTakeImageState(CameraResult.failed);\n        }\n      } else {\n        setTakeImageState(CameraResult.notStarted);\n      }\n    } else if (status?.canAskAgain) {\n      const permissionResult = await requestPermission();\n      if (permissionResult.granted) {\n        takeImage();\n      } else {\n        setTakeImageState(CameraResult.permissionDenied);\n      }\n    } else {\n      setTakeImageState(CameraResult.goToSettings);\n    }\n  }\n\n  useEffect(() => {\n    getCommissionInformation();\n  }, [id]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        width: width * 0.9,\n        height: height * 0.8,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n      }}\n    >\n      {commissionState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            height: height * 0.8,\n            width: width * 0.9,\n            alignItems: 'center',\n            justifyContent: 'center',\n            alignContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width * 0.8 < height * 0.7 ? width * 0.4 : height * 0.35}\n            height={width * 0.8 < height * 0.7 ? width * 0.4 : height * 0.35}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {commissionState === loadingStateEnum.success &&\n          commissionData !== undefined ? (\n            <View>\n              <View style={{ height: height * 0.1, overflow: 'hidden' }}>\n                <Pressable\n                  onPress={() => onClose()}\n                  style={{ marginTop: 10, marginLeft: 10 }}\n                >\n                  <CloseIcon\n                    width={width < height ? width * 0.05 : height * 0.05}\n                    height={width < height ? width * 0.05 : height * 0.05}\n                  />\n                </Pressable>\n                <View\n                  style={{\n                    width: width * 0.9,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <Text style={{ fontSize: height * 0.03 }}>\n                    Commission: {commissionData.title}\n                  </Text>\n                </View>\n              </View>\n              <ScrollView\n                style={{ height: isOverflowing ? height * 0.6 : height * 0.7 }}\n              >\n                <View\n                  onLayout={e => {\n                    if (e.nativeEvent.layout.height >= height * 0.6) {\n                      setIsOverflowing(true);\n                      setEvaluatedOverflow(true);\n                    } else if (!evaluatedOverflow) {\n                      setIsOverflowing(false);\n                    }\n                  }}\n                >\n                  <View\n                    style={{\n                      flexDirection: 'row',\n                      margin: 10,\n                      backgroundColor: Colors.maroon,\n                      borderRadius: 15,\n                      shadowOffset: { width: 2, height: 3 },\n                    }}\n                  >\n                    <View style={{ margin: 10, flexDirection: 'row' }}>\n                      <Image\n                        source={require('../../../assets/images/PaulyLogo.png')}\n                        resizeMode=\"contain\"\n                        style={{ width: 50, height: 50 }}\n                      />\n                      <Text\n                        style={{\n                          fontSize: 45,\n                          color: Colors.white,\n                          fontFamily: 'BukhariScript',\n                          width: 100,\n                          paddingLeft: 10,\n                        }}\n                      >\n                        {commissionData.points}\n                      </Text>\n                    </View>\n                  </View>\n                  <View style={{ marginLeft: width * 0.05 }}>\n                    <WebViewCross html={messageData} width={width * 0.7} />\n                  </View>\n                  {commissionData.value === commissionTypeEnum.Image ||\n                  commissionData.value === commissionTypeEnum.ImageLocation ? (\n                    <>\n                      {imageUri !== '' ? (\n                        <Image\n                          source={{ uri: imageUri }}\n                          width={width * 0.7}\n                          resizeMode=\"center\"\n                          style={{\n                            width: width * 0.7,\n                            height: imageHeight,\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: '#FFFFFF',\n                            shadowOffset: { width: 0, height: 1 },\n                            shadowOpacity: 0.8,\n                            shadowRadius: 10,\n                            borderRadius: 15,\n                          }}\n                        />\n                      ) : (\n                        <View\n                          style={{\n                            width: width * 0.7,\n                            height: height * 0.3,\n                            marginLeft: 'auto',\n                            marginRight: 'auto',\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            backgroundColor: '#FFFFFF',\n                            shadowOffset: { width: 0, height: 1 },\n                            shadowOpacity: 0.8,\n                            shadowRadius: 10,\n                            borderRadius: 15,\n                          }}\n                        >\n                          <Text>No Photo Selected</Text>\n                        </View>\n                      )}\n                      <Pressable\n                        onPress={() => takeImage()}\n                        style={{\n                          marginLeft: 'auto',\n                          marginRight: 'auto',\n                          marginTop: 15,\n                          backgroundColor: '#ededed',\n                          width: width * 0.7,\n                          borderRadius: 15,\n                          alignItems: 'center',\n                          alignContent: 'center',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        {takeImageState === CameraResult.loading ? (\n                          <ProgressView\n                            width={14}\n                            height={14}\n                            style={{ margin: 10 }}\n                          />\n                        ) : (\n                          <Text style={{ margin: 10, fontWeight: 'bold' }}>\n                            {takeImageState === CameraResult.notStarted\n                              ? 'TAKE PHOTO'\n                              : takeImageState === CameraResult.goToSettings\n                              ? 'Go To Settings And Give Camera Permissions'\n                              : takeImageState === CameraResult.permissionDenied\n                              ? 'Permission Denied'\n                              : takeImageState === CameraResult.success\n                              ? 'TAKE DIFFERENT PHOTO'\n                              : 'AN ERROR OCCURED'}\n                          </Text>\n                        )}\n                      </Pressable>\n                      <Pressable\n                        onPress={() => pickImage()}\n                        style={{\n                          marginLeft: 'auto',\n                          marginRight: 'auto',\n                          marginTop: 10,\n                          backgroundColor: '#ededed',\n                          width: width * 0.7,\n                          borderRadius: 15,\n                          alignItems: 'center',\n                          alignContent: 'center',\n                          justifyContent: 'center',\n                        }}\n                      >\n                        {pickImageState === CameraResult.loading ? (\n                          <ProgressView\n                            width={14}\n                            height={14}\n                            style={{ margin: 10 }}\n                          />\n                        ) : (\n                          <Text style={{ margin: 10, fontWeight: 'bold' }}>\n                            {pickImageState === CameraResult.notStarted\n                              ? 'CHOOSE PHOTO'\n                              : pickImageState === CameraResult.permissionDenied\n                              ? 'Permission Denied'\n                              : pickImageState === CameraResult.success\n                              ? 'USE A DIFFERENT PHOTO'\n                              : 'AN ERROR OCCURED'}\n                          </Text>\n                        )}\n                      </Pressable>\n                    </>\n                  ) : null}\n                  {isOverflowing ? null : (\n                    <View style={{ marginTop: 10, marginBottom: 10 }}>\n                      <CommissionClaim commission={commissionData} />\n                    </View>\n                  )}\n                </View>\n              </ScrollView>\n              {isOverflowing ? (\n                <View\n                  style={{\n                    height: height * 0.1,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <CommissionClaim\n                    commission={commissionData}\n                    imageData={imageUri !== '' ? imageUri : undefined}\n                  />\n                </View>\n              ) : null}\n            </View>\n          ) : (\n            <View>\n              <Text>Something Went Wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\n// Gets points when given an array of commission ids\nasync function getPointsBatch(\n  commissions: string[],\n): Promise<{ result: loadingStateEnum; points: number }> {\n  const outputRequests: { id: string; method: string; url: string }[] = [];\n  for (let index = 0; index < commissions.length; index += 1) {\n    outputRequests.push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?$expand=fields&$filter=fields/commissionID%20eq%20'${\n        commissions[index]\n      }' `,\n      // ?$expand=fields&$filter=fields/commissionID%20eq%20'${commissions[index]}'\n    });\n  }\n  const batchData = {\n    requests: outputRequests,\n  };\n\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/$batch',\n    'POST',\n    JSON.stringify(batchData),\n    [{ key: 'Accept', value: 'application/json' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    let pointsResult = 0;\n    for (\n      let requestIndex = 0;\n      requestIndex < data.responses.length;\n      requestIndex += 1\n    ) {\n      if (data.responses[requestIndex].status === 200) {\n        for (\n          let index = 0;\n          index < data.responses[requestIndex].body.value.length;\n          index += 1\n        ) {\n          pointsResult +=\n            data.responses[requestIndex].body.value[index].fields.points;\n        }\n      } else {\n        return { result: loadingStateEnum.failed, points: 0 };\n      }\n    }\n    return { result: loadingStateEnum.success, points: pointsResult };\n  }\n  return { result: loadingStateEnum.failed, points: 0 };\n}\n\nexport default async function getPoints(): Promise<{\n  result: loadingStateEnum;\n  data?: number;\n}> {\n  let nextUrl = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.commissionSubmissionsListId\n  }/items?expand=fields&$filter=fields/userId%20eq%20'${\n    store.getState().microsoftProfileData.id\n  }'%20and%20fields/submissionApproved%20ne%20false`;\n  let points: number = 0;\n  let commissions: string[] = [];\n  while (nextUrl !== '') {\n    const submissionResultClaimed = await callMsGraph(nextUrl);\n    if (!submissionResultClaimed.ok) {\n      return { result: loadingStateEnum.failed };\n    }\n    const submissionResultClaimedData = await submissionResultClaimed.json();\n    for (\n      let index = 0;\n      index < submissionResultClaimedData.value.length;\n      index += 1\n    ) {\n      if (\n        submissionResultClaimedData.value[0].fields.submissionApproved === true\n      ) {\n        commissions.push(\n          submissionResultClaimedData.value[0].fields.commissionId,\n        );\n        if (commissions.length >= 20) {\n          const batchResult = await getPointsBatch(commissions);\n          if (batchResult.result !== loadingStateEnum.success) {\n            return { result: loadingStateEnum.failed };\n          }\n          points += batchResult.points;\n          commissions = [];\n        }\n      }\n    }\n    if (submissionResultClaimedData['@odata.nextLink'] !== undefined) {\n      nextUrl = submissionResultClaimedData['@odata.nextLink'];\n    } else {\n      nextUrl = '';\n      if (commissions.length !== 0) {\n        const batchResult = await getPointsBatch(commissions);\n        if (batchResult.result !== loadingStateEnum.success) {\n          return { result: loadingStateEnum.failed };\n        }\n        points += batchResult.points;\n      }\n    }\n  }\n  return { result: loadingStateEnum.success, data: points };\n}\n","import { commissionsSlice } from '../../Redux/reducers/commissionsReducer';\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction getFilter(\n  startDate?: { date: Date; filter: 'ge' | 'le' },\n  endDate?: { date: Date; filter: 'ge' | 'le' },\n) {\n  const startDateString = startDate?.date.toISOString().replace(/.\\d+Z$/g, 'Z');\n  const endDateString = endDate?.date.toISOString().replace(/.\\d+Z$/g, 'Z');\n  if (startDate || endDate) {\n    let filter = '&$filter=';\n    if (startDate) {\n      filter += `fields/startDate%20${startDate.filter}%20${startDateString}`;\n    }\n    if (endDate) {\n      filter += startDate\n        ? `&fields/endDate%20le%20${endDateString}`\n        : `fields/endDate%20${endDate.filter}%20${endDateString}`;\n    }\n  } else {\n    return '';\n  }\n}\n\nasync function getSubmissions(commissionIds: string[]): Promise<{\n  result: loadingStateEnum;\n  data?: Map<\n    string,\n    { claimCount: number; submissionsCount: number; reviewedCount: number }\n  >;\n}> {\n  const outputRequests: { id: string; method: string; url: string }[][] = [[]];\n  for (let index = 0; index < commissionIds.length; index += 1) {\n    outputRequests[Math.floor(index / 20)].push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionSubmissionsListId\n      }/items?expand=fields(select=commissionId,submissions)`,\n    });\n    if (index % 20 === 0) {\n      outputRequests.push([]);\n    }\n  }\n  const outputMap = new Map<\n    string,\n    { claimCount: number; submissionsCount: number; reviewedCount: number }\n  >();\n  for (let index = 0; outputRequests.length < index; index += 1) {\n    const requestData = {\n      requests: outputRequests[index],\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.commissionListId}/items`,\n      'POST',\n      JSON.stringify(requestData),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      for (\n        let responseIndex = 0;\n        responseIndex < data.responses.length;\n        responseIndex += 1\n      ) {\n        if (data.responses[responseIndex].status === 200) {\n          for (\n            let dataIndex = 0;\n            dataIndex < data.respone[index].body.length;\n            dataIndex += 1\n          ) {\n            if (data.respone[index].body['@odata.nextLink'] !== undefined) {\n              if (outputRequests[outputRequests.length - 1].length < 20) {\n                outputRequests[outputRequests.length - 1].push({\n                  id: outputRequests[\n                    outputRequests.length - 1\n                  ].length.toString(),\n                  method: 'GET',\n                  url: data.respone[index].body['@odata.nextLink'],\n                });\n              } else {\n                outputRequests.push([]);\n                outputRequests[outputRequests.length - 1].push({\n                  id: outputRequests[\n                    outputRequests.length - 1\n                  ].length.toString(),\n                  method: 'GET',\n                  url: data.respone[index].body['@odata.nextLink'],\n                });\n              }\n            }\n            for (\n              let valueIndex = 0;\n              valueIndex < data.respone[index].body.value.length;\n              valueIndex += 1\n            ) {\n              if (\n                outputMap.has(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                )\n              ) {\n                const mapData = outputMap.get(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                );\n                if (mapData !== undefined) {\n                  const subApproved =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionApproved;\n                  const subReviewed =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionReviewed;\n                  outputMap.set(\n                    data.respone[index].body.value[valueIndex].commissionId,\n                    {\n                      submissionsCount: (mapData.submissionsCount += 1),\n                      claimCount: subApproved\n                        ? (mapData.claimCount += 1)\n                        : mapData.claimCount,\n                      reviewedCount: subReviewed\n                        ? (mapData.reviewedCount += 1)\n                        : mapData.reviewedCount,\n                    },\n                  );\n                } else {\n                  const subApproved =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionApproved;\n                  const subReviewed =\n                    data.respone[index].body.value[valueIndex]\n                      .submissionReviewed;\n                  outputMap.set(\n                    data.respone[index].body.value[valueIndex].commissionId,\n                    {\n                      submissionsCount: 1,\n                      claimCount: subApproved ? 1 : 0,\n                      reviewedCount: subReviewed ? 1 : 0,\n                    },\n                  );\n                }\n              } else {\n                const subApproved =\n                  data.respone[index].body.value[valueIndex].submissionApproved;\n                const subReviewed =\n                  data.respone[index].body.value[valueIndex].submissionReviewed;\n                outputMap.set(\n                  data.respone[index].body.value[valueIndex].commissionId,\n                  {\n                    submissionsCount: 1,\n                    claimCount: subApproved ? 1 : 0,\n                    reviewedCount: subReviewed ? 1 : 0,\n                  },\n                );\n              }\n            }\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n\n  return { result: loadingStateEnum.success, data: outputMap };\n}\n\nexport default async function getCommissions(\n  nextLink?: string,\n  startDate?: { date: Date; filter: 'ge' | 'le' },\n  endDate?: { date: Date; filter: 'ge' | 'le' },\n  claimed?: boolean,\n): Promise<{\n  result: loadingStateEnum;\n  data?: commissionType[];\n  nextLink?: string;\n}> {\n  if (nextLink === undefined) {\n    store.dispatch(commissionsSlice.actions.setCommissionNextLink(undefined));\n  }\n  if (claimed === true) {\n    const result = await getUnclaimedCommissions();\n    return { result: result.result, data: result.data };\n  }\n  const filter = getFilter(startDate, endDate);\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?expand=fields${filter}`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const commissionsIds: string[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        commissionsIds.push(data.value[index].fields.commissionId);\n      }\n      const submissions = await getSubmissions(commissionsIds);\n      if (\n        submissions.result === loadingStateEnum.success &&\n        submissions.data !== undefined\n      ) {\n        const resultCommissions: commissionType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          const submissionData = submissions.data.get(\n            data.value[index].fields.commissionID as string,\n          );\n          resultCommissions.push({\n            itemId: data.value[index].id,\n            title: data.value[index].fields.Title,\n            startDate: data.value[index].fields.startDate,\n            endDate: data.value[index].fields.endDate,\n            claimCount: submissionData ? submissionData.claimCount : 0,\n            submissionsCount: submissionData\n              ? submissionData.submissionsCount\n              : 0,\n            reviewedCount: submissionData ? submissionData.reviewedCount : 0,\n            points: data.value[index].fields.points as number,\n            proximity: data.value[index].fields.proximity as number,\n            commissionId: data.value[index].fields.commissionID as string,\n            hidden: data.value[index].fields.hidden,\n            timed: data.value[index].fields.timed,\n            maxNumberOfClaims: data.value[index].fields.maxNumberOfClaims,\n            allowMultipleSubmissions:\n              data.value[index].fields.allowMultipleSubmissions,\n            value: data.value[index].fields.hidden - 1,\n          });\n        }\n        return {\n          result: loadingStateEnum.success,\n          data: resultCommissions,\n          nextLink: data['@odata.nextLink'],\n        };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\ntype unclaimedCommissionSubmissionType = {\n  commissionId: string;\n  submissions: number;\n};\n\n// Get Claimed Commmissions\n\n// Gets points when given an array of commission ids\nasync function getCommissionsBatch(\n  commissions: unclaimedCommissionSubmissionType[],\n): Promise<{ result: loadingStateEnum; data?: commissionType[] }> {\n  const outputRequests: { id: string; method: string; url: string }[] = [];\n  for (let index = 0; index < commissions.length; index += 1) {\n    outputRequests.push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.commissionListId\n      }/items?$expand=fields&$filter=fields/commissionID%20eq%20'${\n        commissions[index]\n      }' `,\n    });\n  }\n  const batchData = {\n    requests: outputRequests,\n  };\n\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/$batch',\n    'POST',\n    JSON.stringify(batchData),\n    [{ key: 'Accept', value: 'application/json' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const commissionsResult: commissionType[] = [];\n    for (\n      let requestIndex = 0;\n      requestIndex < data.responses.length;\n      requestIndex += 1\n    ) {\n      if (data.responses[requestIndex].status === 200) {\n        for (\n          let index = 0;\n          index < data.responses[requestIndex].body.value.length;\n          index += 1\n        ) {\n          commissionsResult.push({\n            itemId: data.responses[requestIndex].body.value[index].id,\n            title: data.responses[requestIndex].body.value[index].fields.Title,\n            startDate:\n              data.responses[requestIndex].body.value[index].fields.startDate,\n            endDate:\n              data.responses[requestIndex].body.value[index].fields.endDate,\n            submissionsCount:\n              commissions[parseInt(data.responses[requestIndex].id) - 1]\n                .submissions,\n            claimCount: 0,\n            reviewedCount: 0, // TO DO fix\n            points: data.responses[requestIndex].body.value[index].fields\n              .points as number,\n            proximity: data.responses[requestIndex].body.value[index].fields\n              .proximity as number,\n            commissionId: data.responses[requestIndex].body.value[index].fields\n              .commissionID as string,\n            hidden:\n              data.responses[requestIndex].body.value[index].fields.hidden,\n            timed: data.responses[requestIndex].body.value[index].fields.timed,\n            maxNumberOfClaims:\n              data.responses[requestIndex].body.value[index].fields\n                .maxNumberOfClaims,\n            allowMultipleSubmissions:\n              data.responses[requestIndex].body.value[index].fields\n                .allowMultipleSubmissions,\n            value:\n              data.responses[requestIndex].body.value[index].fields.hidden - 1,\n          });\n        }\n      } else {\n        return { result: loadingStateEnum.failed, data: commissionsResult };\n      }\n    }\n    return { result: loadingStateEnum.success, data: commissionsResult };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getUnclaimedCommissions(): Promise<{\n  result: loadingStateEnum;\n  data?: commissionType[];\n}> {\n  let nextUrl = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.commissionSubmissionsListId\n  }/items?expand=fields&$filter=fields/userId%20eq%20'${\n    store.getState().microsoftProfileData.id\n  }'%20and%20fields/submissionApproved%20ne%20false`;\n  // The first value in the map is the commission id and the second is the submissions count b/c all are unclaimed\n  const commissionsMap = new Map<string, number>();\n  while (nextUrl !== '') {\n    const submissionResultClaimed = await callMsGraph(nextUrl);\n    if (!submissionResultClaimed.ok) {\n      return { result: loadingStateEnum.failed };\n    }\n    const submissionResultClaimedData = await submissionResultClaimed.json();\n    for (\n      let index = 0;\n      index < submissionResultClaimedData.value.length;\n      index += 1\n    ) {\n      if (\n        submissionResultClaimedData.value[index].fields.submissionApproved ===\n        false\n      ) {\n        if (\n          commissionsMap.has(\n            submissionResultClaimedData.value[index].fields.commissionId,\n          )\n        ) {\n          const count = commissionsMap.get(\n            submissionResultClaimedData.value[index].fields.commissionId,\n          );\n          if (count !== undefined) {\n            commissionsMap.set(\n              submissionResultClaimedData.value[index].fields.commissionId,\n              count + 1,\n            );\n          }\n        } else {\n          commissionsMap.set(\n            submissionResultClaimedData.value[index].fields.commissionId,\n            1,\n          );\n        }\n      }\n    }\n    if (submissionResultClaimedData['@odata.nextLink'] !== undefined) {\n      nextUrl = submissionResultClaimedData['@odata.nextLink'];\n    } else {\n      nextUrl = '';\n    }\n  }\n  const commissionsBatchData: unclaimedCommissionSubmissionType[][] = [[]];\n  let batchIndex = 0;\n  commissionsMap.forEach((value, key) => {\n    commissionsBatchData[batchIndex].push({\n      commissionId: key,\n      submissions: value,\n    });\n    if (commissionsBatchData[batchIndex].length >= 20) {\n      commissionsBatchData.push([]);\n      batchIndex += 1;\n    }\n  });\n\n  let outCommissions: commissionType[] = [];\n  for (let index = 0; index < commissionsBatchData.length; index += 1) {\n    const result = await getCommissionsBatch(commissionsBatchData[index]);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      outCommissions = [...outCommissions, ...result.data];\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: outCommissions };\n}\n","import { View, Text, Pressable, ViewStyle } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { ChevronLeft } from './Icons/Icons';\n\nexport default function BackButton({\n  to,\n  style,\n}: {\n  to: string;\n  style?: ViewStyle;\n}) {\n  const navigate = useNavigate();\n  return (\n    <Pressable\n      style={[\n        {\n          position: 'absolute',\n          flexDirection: 'row',\n          top: 0,\n          left: 5,\n          zIndex: 100,\n        },\n        style,\n      ]}\n      onPress={() => navigate(to)}\n    >\n      <ChevronLeft width={14} height={14} />\n      <Text>Back</Text>\n    </Pressable>\n  );\n}\n","import { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  FlatList,\n  Pressable,\n  ScrollView,\n  Text,\n  View,\n  Image,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CommissionsView from './CommissionsView';\nimport { commissionsSlice } from '../../Redux/reducers/commissionsReducer';\nimport { RootState } from '../../Redux/store';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport getPoints from '../../Functions/commissions/getPoints';\nimport getCommissions from '../../Functions/commissions/getCommissions';\nimport ProgressView from '../../UI/ProgressView';\nimport BackButton from '../../UI/BackButton';\nimport { Colors, loadingStateEnum } from '../../types';\n\nexport default function Commissions() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const { commissionNextLink } = useSelector(\n    (state: RootState) => state.commissions,\n  );\n  const { currentCommissions, selectedCommission, commissionsState, points } =\n    useSelector((state: RootState) => state.commissions);\n\n  const [isHoverPicker, setIsHoverPicker] = useState<boolean>(false);\n\n  const dispatch = useDispatch();\n\n  // Loading States\n\n  async function loadData() {\n    const pointResult = await getPoints();\n    if (\n      pointResult.result === loadingStateEnum.success &&\n      pointResult.data !== undefined\n    ) {\n      dispatch(commissionsSlice.actions.setPoints(pointResult.data));\n      const commissionsResult = await getCommissions();\n      if (\n        (commissionsResult.result === loadingStateEnum.success,\n        commissionsResult.data !== undefined)\n      ) {\n        dispatch(\n          commissionsSlice.actions.setCurrentCommissions(\n            commissionsResult.data,\n          ),\n        );\n      }\n      dispatch(\n        commissionsSlice.actions.setCommissionNextLink(\n          commissionsResult.nextLink,\n        ),\n      );\n      dispatch(\n        commissionsSlice.actions.setCommissionsState(commissionsResult.result),\n      );\n    } else {\n      dispatch(\n        commissionsSlice.actions.setCommissionsState(pointResult.result),\n      );\n    }\n    // TO DO pagination\n  }\n\n  async function loadCommissionData(\n    startDate?: { date: Date; filter: 'ge' | 'le' },\n    endDate?: { date: Date; filter: 'ge' | 'le' },\n    claimed?: boolean,\n    nextLink?: string,\n  ) {\n    dispatch(\n      commissionsSlice.actions.setCommissionsState(loadingStateEnum.loading),\n    );\n    const result = await getCommissions(nextLink, startDate, endDate, claimed);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      dispatch(commissionsSlice.actions.setCurrentCommissions(result.data));\n    }\n    dispatch(commissionsSlice.actions.setCommissionsState(result.result));\n    dispatch(commissionsSlice.actions.setCommissionNextLink(result.nextLink));\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (siteId !== '') {\n      loadData();\n    }\n  }, [siteId]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ width, height, backgroundColor: Colors.white }}>\n        <View\n          style={{\n            width,\n            height: height * 0.1,\n            backgroundColor: Colors.darkGray,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n          <Text\n            style={{\n              fontFamily: 'BukhariScript',\n              fontSize: 25,\n              color: Colors.white,\n            }}\n          >\n            Commissions\n          </Text>\n        </View>\n        <View style={{ height: isHoverPicker ? height * 0.8 : height * 0.85 }}>\n          {commissionsState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height: height * 0.9,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={width < height ? width * 0.1 : height * 0.1}\n                height={width < height ? width * 0.1 : height * 0.1}\n              />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              {commissionsState === loadingStateEnum.success ? (\n                <FlatList\n                  style={{ height: height * 0.9 }}\n                  data={[undefined, ...currentCommissions]}\n                  renderItem={({ item, index }) => (\n                    <>\n                      {index === 0 ? (\n                        <View\n                          style={{\n                            flexDirection: 'row',\n                            margin: 10,\n                            backgroundColor: Colors.maroon,\n                            borderRadius: 15,\n                            shadowOffset: { width: 2, height: 3 },\n                          }}\n                        >\n                          <View style={{ margin: 10, flexDirection: 'row' }}>\n                            <Image\n                              source={require('../../../assets/images/PaulyLogo.png')}\n                              resizeMode=\"contain\"\n                              style={{ width: 50, height: 50 }}\n                            />\n                            <Text\n                              numberOfLines={1}\n                              adjustsFontSizeToFit\n                              style={{\n                                fontSize: 45,\n                                color: Colors.white,\n                                fontFamily: 'BukhariScript',\n                                width: 100,\n                                paddingLeft: 10,\n                              }}\n                            >\n                              {points}\n                            </Text>\n                          </View>\n                        </View>\n                      ) : (\n                        <>\n                          {item !== undefined ? (\n                            <Pressable\n                              onPress={() => {\n                                dispatch(\n                                  commissionsSlice.actions.setSelectedCommission(\n                                    item.commissionId,\n                                  ),\n                                );\n                              }}\n                              key={`Link_${item.commissionId}`}\n                              style={{ backgroundColor: 'transparent' }}\n                            >\n                              <View\n                                key={item.commissionId}\n                                style={{\n                                  borderRadius: 15,\n                                  marginLeft: width * 0.025,\n                                  elevation: 2,\n                                  marginRight: width * 0.025,\n                                  marginTop: height * 0.02,\n                                  backgroundColor: '#FFFFFF',\n                                  shadowColor: 'black',\n                                  shadowOffset: { width: 1, height: 1 },\n                                  shadowOpacity: 1,\n                                  shadowRadius: 5,\n                                }}\n                              >\n                                <View style={{ margin: 10 }}>\n                                  <Text>{item.title}</Text>\n                                  {item.timed &&\n                                  item.startDate !== undefined ? (\n                                    <Text>\n                                      {new Date(\n                                        item.startDate,\n                                      ).toLocaleDateString('en-US', {\n                                        month: 'long',\n                                        day: 'numeric',\n                                        minute: 'numeric',\n                                      })}\n                                    </Text>\n                                  ) : null}\n                                </View>\n                              </View>\n                            </Pressable>\n                          ) : null}\n                        </>\n                      )}\n                    </>\n                  )}\n                  keyExtractor={item =>\n                    `${item?.commissionId}_${createUUID()}`\n                  }\n                  onEndReachedThreshold={1}\n                  onEndReached={() => {\n                    if (commissionNextLink !== undefined) {\n                      loadCommissionData(\n                        undefined,\n                        undefined,\n                        undefined,\n                        commissionNextLink,\n                      );\n                    }\n                  }}\n                  initialNumToRender={currentCommissions.length}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </View>\n          )}\n        </View>\n        <Pressable\n          style={{ height: isHoverPicker ? height * 0.1 : height * 0.05 }}\n          onHoverIn={() => {\n            setIsHoverPicker(true);\n          }}\n          onHoverOut={() => {\n            setIsHoverPicker(false);\n          }}\n        >\n          <ScrollView\n            horizontal\n            style={{\n              height: isHoverPicker ? height * 0.1 : height * 0.05,\n              width,\n              backgroundColor: Colors.white,\n            }}\n            showsHorizontalScrollIndicator={false}\n          >\n            <PickerPiece\n              text=\"All\"\n              onPress={() => {\n                loadCommissionData();\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Current\"\n              onPress={() => {\n                loadCommissionData(\n                  { date: new Date(), filter: 'ge' },\n                  { date: new Date(), filter: 'le' },\n                );\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Past\"\n              onPress={() => {\n                loadCommissionData(\n                  { date: new Date(), filter: 'le' },\n                  { date: new Date(), filter: 'le' },\n                );\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Claimed\"\n              onPress={() => {\n                loadCommissionData(undefined, undefined, true);\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              text=\"Future\"\n              onPress={() => {\n                loadCommissionData(undefined, {\n                  date: new Date(),\n                  filter: 'ge',\n                });\n              }}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n          </ScrollView>\n        </Pressable>\n      </View>\n      <View\n        style={{\n          position: 'absolute',\n          zIndex: 2,\n          top: height * 0.1,\n          left: width * 0.05,\n        }}\n      >\n        {selectedCommission !== '' ? (\n          <CommissionsView\n            id={selectedCommission}\n            onClose={() =>\n              dispatch(commissionsSlice.actions.setSelectedCommission(''))\n            }\n          />\n        ) : null}\n      </View>\n    </>\n  );\n}\n\nfunction PickerPiece({\n  text,\n  isHoverPicker,\n  setIsHoverPicker,\n  onPress,\n}: {\n  text: string;\n  onPress: () => void;\n  isHoverPicker: boolean;\n  setIsHoverPicker: (item: boolean) => void;\n}) {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      onPress={() => {\n        onPress();\n      }}\n      onHoverIn={() => {\n        setIsHoverPicker(true);\n        setIsSelected(true);\n      }}\n      onHoverOut={() => setIsSelected(false)}\n      style={{\n        height: isHoverPicker ? height * 0.1 : height * 0.05,\n        width: isSelected\n          ? currentBreakPoint >= 2\n            ? width * 0.3\n            : width * 0.6\n          : currentBreakPoint >= 2\n          ? width * 0.2\n          : width * 0.4,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          height: isHoverPicker ? height * 0.06 : height * 0.03,\n          width: isSelected\n            ? currentBreakPoint >= 2\n              ? width * 0.28\n              : width * 0.46\n            : currentBreakPoint >= 2\n            ? width * 0.18\n            : width * 0.36,\n          marginLeft: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          marginRight: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          backgroundColor: Colors.darkGray,\n          borderRadius: 15,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white }}>{text}</Text>\n      </View>\n    </Pressable>\n  );\n}\n","import { taskDeltaSlice } from '../../Redux/reducers/tasksReducers';\nimport store from '../../Redux/store';\nimport {\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction convertStringToTaskStatus(status: string): taskStatusEnum {\n  if (status === 'notStarted') {\n    return taskStatusEnum.notStarted;\n  }\n  if (status === 'inProgress') {\n    return taskStatusEnum.inProgress;\n  }\n  if (status === 'completed') {\n    return taskStatusEnum.completed;\n  }\n  if (status === 'waitingOnOthers') {\n    return taskStatusEnum.waitingOnOthers;\n  }\n  return taskStatusEnum.deferred;\n}\n\nfunction convertStringToImportance(importance: string): taskImportanceEnum {\n  if (importance === 'high') {\n    return taskImportanceEnum.high;\n  }\n  if (importance === 'low') {\n    return taskImportanceEnum.low;\n  }\n  return taskImportanceEnum.normal;\n}\n\n// deltaRunAgain is send if the delta link has failed or the responce 410 meaning syncronization is needed.\nexport default async function getUsersTasks(\n  deltaRunAgain?: boolean,\n): Promise<{ result: loadingStateEnum; data?: taskType[] }> {\n  let deltaMode = false;\n  if (store.getState().tasksDeltaLink !== '' && deltaRunAgain !== true) {\n    deltaMode = true;\n  }\n  const url = deltaMode\n    ? store.getState().tasksDeltaLink\n    : 'https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/delta';\n  const tasksResult = await callMsGraph(url);\n  if (tasksResult.ok) {\n    const taskData = await tasksResult.json();\n    if (taskData['@odata.deltaLink'] !== undefined) {\n      store.dispatch(\n        taskDeltaSlice.actions.setTaskDeltaLink(taskData['@odata.deltaLink']),\n      );\n    }\n    const resultTasks: taskType[] = [];\n    for (let index = 0; index < taskData.value.length; index += 1) {\n      resultTasks.push({\n        name: taskData.value[index].title,\n        id: taskData.value[index].id,\n        importance: convertStringToImportance(taskData.value[index].importance),\n        status: convertStringToTaskStatus(taskData.value[index].status),\n        excess: false,\n      });\n    }\n    resultTasks.unshift({\n      name: '',\n      importance: taskImportanceEnum.normal,\n      id: '',\n      status: taskStatusEnum.notStarted,\n      excess: true,\n    });\n    return { result: loadingStateEnum.success, data: resultTasks };\n  }\n  if (deltaMode) {\n    const secondAttempt = await getUsersTasks(true);\n    return secondAttempt;\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  getInsightData.ts\n\n  used to get insight files that are used on the notification page.\n*/\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getInsightData(): Promise<insightResult> {\n  // Get used https://learn.microsoft.com/en-us/graph/api/insights-list-used?view=graph-rest-1.0&tabs=http\n  const usedResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/insights/used?$select=resourceReference,resourceVisualization',\n  );\n  const userOutData: resourceType[] = [];\n  let userState: loadingStateEnum = loadingStateEnum.loading; // State of getting users data\n  if (usedResult.ok) {\n    // Check if result success\n    const userData = await usedResult.json();\n    for (let index = 0; index < userData.value.length; index += 1) {\n      userOutData.push({\n        webUrl: userData.value[index].resourceReference.webUrl,\n        id: userData.value[index].resourceReference.id,\n        title: userData.value[index].resourceVisualization.title,\n        type: userData.value[index].resourceVisualization.type,\n      });\n    }\n    userState = loadingStateEnum.success;\n  } else {\n    userState = loadingStateEnum.failed;\n  }\n\n  // Get trending https://learn.microsoft.com/en-us/graph/api/insights-list-trending?view=graph-rest-1.0&tabs=http\n  const trendingResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/insights/trending?$select=resourceReference,resourceVisualization',\n  );\n  const trendingOutData: resourceType[] = [];\n  let trendingState = loadingStateEnum.loading; // state of getting trendings data\n  if (trendingResult.ok) {\n    const trendingData = await trendingResult.json();\n    for (let index = 0; index < trendingData.value.length; index += 1) {\n      trendingOutData.push({\n        webUrl: trendingData.value[index].resourceReference.webUrl,\n        id: trendingData.value[index].resourceReference.id,\n        title: trendingData.value[index].resourceVisualization.title,\n        type: trendingData.value[index].resourceVisualization.type,\n      });\n    }\n    trendingState = loadingStateEnum.success;\n  } else {\n    trendingState = loadingStateEnum.failed;\n  }\n  return {\n    userState,\n    trendingState,\n    userData: userOutData,\n    trendingData: trendingOutData,\n  };\n}\n","import React from 'react';\nimport Animated, {\n  SharedValue,\n  useAnimatedProps,\n} from 'react-native-reanimated';\nimport { Path } from 'react-native-svg';\n\nexport default function AnimatedCheckMarkPath({\n  progress,\n  checkMarkColor,\n  checked,\n}: {\n  progress: SharedValue<number>;\n  checkMarkColor: any;\n  checked: boolean;\n}) {\n  const AnimatedPath = Animated.createAnimatedComponent(Path);\n  const checkMarkAnimation = useAnimatedProps(() => {\n    const strokeDashoffset = 1000 * progress.value;\n    return { strokeDashoffset };\n  });\n  return (\n    <AnimatedPath\n      animatedProps={checkMarkAnimation}\n      d=\"M14.1 27.2l7.1 7.2 16.7-16.8\"\n      stroke={checkMarkColor}\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      fill=\"none\"\n      strokeWidth={5}\n      strokeDasharray={1000}\n      strokeMiterlimit={10}\n    />\n  );\n}\n","// Original Code from https://github.com/Rakha112/react-native-custom-checkbox/blob/main/src/components/CustomCheckBox.js\n\nimport React from 'react';\nimport Svg, { Circle } from 'react-native-svg';\nimport { Easing, useDerivedValue, withTiming } from 'react-native-reanimated';\nimport { View } from 'react-native';\nimport AnimatedCheckMarkPath from './AnimatedCheckMarkPath';\n\nexport default function CustomCheckBox({\n  checked,\n  checkMarkColor,\n  height,\n  width,\n  strokeDasharray,\n}: {\n  checked: boolean;\n  checkMarkColor: string;\n  height: number;\n  width: number;\n  strokeDasharray?: number;\n}) {\n  const progress = useDerivedValue(() => {\n    return withTiming(checked ? 0 : 1, {\n      duration: 1500,\n      easing: Easing.inOut(Easing.bezierFn(0.5, -0.02, 0.92, 0.37)),\n    });\n  });\n\n  return (\n    <View>\n      <Svg width={width} height={height} viewBox=\"0 0 52 52\">\n        <AnimatedCheckMarkPath\n          progress={progress}\n          checkMarkColor={checkMarkColor}\n          checked={checked}\n        />\n        <Circle\n          cx=\"26\"\n          cy=\"26\"\n          r=\"20\"\n          stroke=\"black\"\n          strokeDasharray={strokeDasharray}\n          strokeWidth=\"2\"\n          fill=\"none\"\n        />\n      </Svg>\n    </View>\n  );\n}\n","import { Image } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport * as PDFJS from 'pdfjs-dist';\nimport { useSelector } from 'react-redux';\nimport { DocumentInitParameters } from 'pdfjs-dist/types/src/display/api';\nimport { Gesture, GestureDetector } from 'react-native-gesture-handler';\nimport store, { RootState } from '../../Redux/store';\nimport { pdfDataSlice } from '../../Redux/reducers/pdfDataReducer';\n\nPDFJS.GlobalWorkerOptions.workerSrc = `//unpkg.com/pdfjs-dist@${PDFJS.version}/legacy/build/pdf.worker.min.js`;\n\nexport default function PDFView({ width }: { width: number }) {\n  const { powerpointBlob } = useSelector((state: RootState) => state.paulyData);\n  const { images, pageNumber } = useSelector(\n    (state: RootState) => state.pdfData,\n  );\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function convertPdfToImages(url: string) {\n    const images: string[] = [];\n    const dataResult = await fetch(url);\n    if (dataResult.ok) {\n      const blob = await dataResult.blob();\n      const file = new Blob([blob], { type: 'application/pdf' });\n      const fileURL = URL.createObjectURL(file);\n      const docInitParams: DocumentInitParameters = { url: fileURL };\n\n      const pdf = await PDFJS.getDocument(docInitParams).promise;\n      const canvas = document.createElement('canvas'); // Fail\n      for (let i = 0; i < pdf.numPages; i += 1) {\n        const page = await pdf.getPage(i + 1);\n        const viewport = page.getViewport({ scale: 1 });\n        const context = canvas.getContext('2d'); // Fail\n        canvas.height = viewport.height; // Fail\n        canvas.width = viewport.width; // Fail\n        if (context !== null) {\n          await page.render({ canvasContext: context, viewport }).promise;\n          images.push(canvas.toDataURL());\n        }\n      }\n      canvas.remove();\n      store.dispatch(pdfDataSlice.actions.setImages(images));\n    }\n  }\n\n  useEffect(() => {\n    convertPdfToImages(powerpointBlob);\n  }, [powerpointBlob]);\n\n  const singleTap = Gesture.Tap().onEnd((_event, success) => {\n    if (success) {\n      if (pageNumber + 1 < images.length) {\n        store.dispatch(pdfDataSlice.actions.increasePageNumber());\n      } else {\n        store.dispatch(pdfDataSlice.actions.setPageNumber(0));\n      }\n    }\n  });\n  const doubleTap = Gesture.Tap()\n    .numberOfTaps(2)\n    .onEnd((_event, success) => {\n      if (success) {\n        if (pageNumber - 1 >= 1) {\n          store.dispatch(pdfDataSlice.actions.decreasePageNumber());\n        } else if (images.length >= 1) {\n          store.dispatch(pdfDataSlice.actions.setPageNumber(images.length - 1));\n        }\n      }\n    });\n\n  const taps = Gesture.Exclusive(doubleTap, singleTap);\n\n  const fling = Gesture.Fling().onEnd(() => {\n    if (pageNumber + 1 < images.length) {\n      store.dispatch(pdfDataSlice.actions.increasePageNumber());\n    } else {\n      store.dispatch(pdfDataSlice.actions.setPageNumber(pageNumber - 1));\n    }\n  });\n\n  const compound = Gesture.Simultaneous(fling, taps);\n\n  useEffect(() => {\n    if (pageNumber < images.length) {\n      Image.getSize(\n        images[pageNumber],\n        (imageMeasureWidth, imageMeasureHeight) => {\n          const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n          console.log(width * heightPerWidth);\n          setImageHeight(width * heightPerWidth);\n        },\n      );\n    }\n  }, [pageNumber, images, width]);\n\n  return (\n    <>\n      {pageNumber < images.length ? (\n        <GestureDetector gesture={compound}>\n          <Image\n            source={{ uri: images[pageNumber], width }}\n            style={{ borderRadius: 15, width, height: imageHeight }}\n            height={imageHeight}\n            width={width}\n          />\n        </GestureDetector>\n      ) : null}\n    </>\n  );\n}\n","import React from 'react';\nimport { StyleProp, ViewStyle } from 'react-native';\nimport { Shape, SvgProps } from 'react-native-svg';\nimport {\n  AudioIcon,\n  DocumentIcon,\n  ExcelIcon,\n  FolderIcon,\n  ImageIcon,\n  OneNoteIcon,\n  PDFIcon,\n  PowerpointIcon,\n  VideoIcon,\n  WordIcon,\n} from './Icons';\n\ninterface iconProps {\n  width: number;\n  height: number;\n  mimeType: string;\n  style?: StyleProp<ViewStyle> | undefined;\n  props?: Shape<SvgProps> | undefined;\n}\n\nconst wordTypes = [\n  'application/msword',\n  'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n];\nconst excelTypes = [\n  'application/ms-excel',\n  'application/msexcel',\n  'application/vnd.ms-excel',\n];\nconst powerpointTypes = [\n  'application/vnd.openxmlformats-officedocument.presentationml.presentation',\n  'application/vnd.ms-powerpoint',\n  'application/vnd.openxmlformats-officedocument.presentationml.slideshow',\n  'application/vnd.openxmlformats-officedocument.presentationml.template',\n];\n\nexport default function MimeTypeIcon({\n  width,\n  height,\n  style,\n  props,\n  mimeType,\n}: iconProps) {\n  return (\n    <>\n      {mimeType.split('/')[0] === 'image' ? (\n        <ImageIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] === 'application' ? (\n        <>\n          {wordTypes.includes(mimeType) ? (\n            <WordIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {excelTypes.includes(mimeType) ? (\n            <ExcelIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'application/pdf' ? (\n            <PDFIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {powerpointTypes.includes(mimeType) ? (\n            <PowerpointIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {wordTypes.includes(mimeType) &&\n          excelTypes.includes(mimeType) &&\n          mimeType !== 'application/pdf' &&\n          mimeType !== 'application/vnd.ms-powerpoint' ? (\n            <DocumentIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n        </>\n      ) : null}\n      {mimeType.split('/')[0] === 'audio' ? (\n        <AudioIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] === 'video' ? (\n        <VideoIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType === 'folder' ? (\n        <FolderIcon width={width} height={height} style={style} props={props} />\n      ) : null}\n      {mimeType.split('/')[0] !== 'image' &&\n      mimeType.split('/')[0] !== 'application' &&\n      mimeType.split('/')[0] !== 'audio' &&\n      mimeType.split('/')[0] !== 'video' &&\n      mimeType !== 'folder' ? (\n        <>\n          {mimeType === 'PowerPoint' ? (\n            <PowerpointIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Word' ? (\n            <WordIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Excel' ? (\n            <ExcelIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Pdf' ? (\n            <PDFIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'OneNote' || mimeType === 'OneNotePage' ? (\n            <OneNoteIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Audio' ? (\n            <AudioIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Video' ? (\n            <VideoIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Image' ? (\n            <ImageIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType === 'Folder' ? (\n            <FolderIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n          {mimeType !== 'PowerPoint' &&\n          mimeType !== 'Word' &&\n          mimeType !== 'OneNote' &&\n          mimeType !== 'OneNotePage' &&\n          mimeType !== 'Audio' &&\n          mimeType !== 'Video' &&\n          mimeType !== 'Image' &&\n          mimeType !== 'Folder' ? (\n            <DocumentIcon\n              width={width}\n              height={height}\n              style={style}\n              props={props}\n            />\n          ) : null}\n        </>\n      ) : null}\n    </>\n  );\n}\n","import store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { homepageDataSlice } from '../Redux/reducers/homepageDataReducer';\nimport {\n  getEvent,\n  getSchoolDay,\n  getTimetable,\n  getSchedule,\n} from './calendar/calendarFunctionsGraph';\nimport { Colors, loadingStateEnum, semesters } from '../types';\n\nexport async function getRooms(\n  nextLink?: string,\n  search?: string,\n): Promise<{ result: loadingStateEnum; data?: roomType[]; nextLink?: string }> {\n  const searchFilter = search\n    ? `&$filter=fields/roomName%20eq%20${search}`\n    : ''; // TODO deal with search filter\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.roomListId\n      }/items?expand=fields${search}`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultArray: roomType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultArray.push({\n        name: data.value[index].fields.roomName,\n        id: data.value[index].fields.roomId,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: resultArray,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getRoom(\n  roomId: string,\n): Promise<{ result: loadingStateEnum; data?: roomType }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.roomListId\n    }/items?expand=fields&fields/roomId%20eq%20'${roomId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length === 0) {\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.roomName,\n          id: data.value[0].feilds.ro0mId,\n        },\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getClasses(): Promise<{\n  result: loadingStateEnum;\n  data?: classType[];\n}> {\n  let classQuery: string = `https://graph.microsoft.com/v1.0/me/joinedTeams?$select=id`;\n  const batchDataRequests: { id: string; method: string; url: string }[][] = [\n    [],\n  ];\n  while (classQuery !== undefined) {\n    const classResult = await callMsGraph(classQuery);\n    if (classResult.ok) {\n      const classData = await classResult.json();\n      classQuery = classData['@odata.nextLink'];\n\n      // Batch Request perfroming a get request on each class group\n\n      // Format Data\n      for (let index = 0; index < classData.value.length; index += 1) {\n        batchDataRequests[Math.floor(index / 20)].push({\n          id: (index + 1).toString(),\n          method: 'GET',\n          url: `/groups/${classData.value[index].id}?$select=displayName,id,${\n            store.getState().paulyList.classExtensionId\n          }`,\n        });\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  // Run Queries\n  const batchHeaders = new Headers();\n  batchHeaders.append('Accept', 'application/json');\n  const classes: classType[] = [];\n  for (let index = 0; index < batchDataRequests.length; index += 1) {\n    const batchData = {\n      requests: batchDataRequests[index],\n    };\n    const batchResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/$batch',\n      'POST',\n      JSON.stringify(batchData),\n    );\n    if (batchResult.ok) {\n      const batchResultData = await batchResult.json();\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultData.responses.length;\n        batchIndex += 1\n      ) {\n        if (batchResultData.responses[batchIndex].status === 200) {\n          if (\n            batchResultData.responses[batchIndex].body[\n              store.getState().paulyList.classExtensionId\n            ] !== undefined\n          ) {\n            classes.push({\n              name: batchResultData.responses[batchIndex].body.displayName,\n              id: batchResultData.responses[batchIndex].body.id,\n              periods: JSON.parse(\n                batchResultData.responses[batchIndex].body[\n                  store.getState().paulyList.classExtensionId\n                ].periodData,\n              ),\n              room: {\n                name: '',\n                id: '',\n              },\n              schoolYearId: '',\n              semester: semesters.semesterOne,\n            });\n          }\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n    } else {\n      return { result: loadingStateEnum.failed };\n    }\n  }\n  return { result: loadingStateEnum.success, data: classes };\n}\n\nexport async function getClassEvents(\n  scheduleId: string,\n  semester: semesters,\n  schoolYearEventId: string,\n  schoolDay: schoolDayType,\n  date: Date,\n): Promise<{ result: loadingStateEnum; data?: eventType[] }> {\n  const scheduleResult = await getSchedule(scheduleId);\n  const classResult = await getClasses();\n  if (\n    scheduleResult.result === loadingStateEnum.success &&\n    classResult.result === loadingStateEnum.success &&\n    classResult.data !== undefined &&\n    scheduleResult.schedule !== undefined\n  ) {\n    const outputEvents: eventType[] = [];\n    for (let index = 0; index < classResult.data.length; index += 1) {\n      if (\n        classResult.data[index].schoolYearId === schoolYearEventId &&\n        classResult.data[index].semester === semester\n      ) {\n        // This check should never fail\n        if (classResult.data[index].periods.length > schoolDay.order) {\n          // Find Time\n          const period: number =\n            classResult.data[index].periods[schoolDay.order];\n          const periodData = scheduleResult.schedule.periods[period];\n          const startDate: Date = new Date(date.toISOString());\n          startDate.setHours(periodData.startHour);\n          startDate.setMinutes(periodData.startMinute);\n          startDate.setSeconds(0);\n          const endDate: Date = date;\n          endDate.setHours(periodData.endHour);\n          endDate.setMinutes(periodData.endMinute);\n          endDate.setSeconds(0);\n          outputEvents.push({\n            id: classResult.data[index].id,\n            name: classResult.data[index].name,\n            startTime: startDate.toISOString(),\n            endTime: endDate.toISOString(),\n            eventColor: Colors.white,\n            microsoftEvent: false,\n            allDay: false,\n          });\n        }\n      }\n    }\n    outputEvents.sort((a, b) => {\n      return new Date(a.startTime).getTime() - new Date(b.startTime).getTime();\n    });\n    return { result: loadingStateEnum.success, data: outputEvents };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getClassEventsFromDay(\n  date?: Date,\n): Promise<{ result: loadingStateEnum; data?: eventType[] }> {\n  const result = await getSchoolDay(date || new Date());\n  if (\n    result.result === loadingStateEnum.success &&\n    result.event !== undefined &&\n    result.event.paulyEventData !== undefined\n  ) {\n    const outputIds: schoolDayDataCompressedType = JSON.parse(\n      result.event.paulyEventData,\n    );\n    const eventResult = await getEvent(outputIds.schoolYearEventId);\n    if (\n      eventResult.result === loadingStateEnum.success &&\n      eventResult.data !== undefined &&\n      eventResult.data?.paulyEventData !== undefined\n    ) {\n      const timetableResult = await getTimetable(\n        eventResult.data.paulyEventData,\n      );\n      if (\n        timetableResult.result === loadingStateEnum.success &&\n        timetableResult.timetable !== undefined\n      ) {\n        const schoolDay = timetableResult.timetable.days.find(\n          (e: { id: string }) => {\n            return e.id === outputIds.schoolDayId;\n          },\n        );\n        const schedule = timetableResult.timetable.schedules.find(\n          (e: { id: string }) => {\n            return e.id === outputIds.scheduleId;\n          },\n        );\n        const dressCode =\n          timetableResult.timetable.dressCode.dressCodeData.find(\n            (e: { id: string }) => {\n              return e.id === outputIds.dressCodeId;\n            },\n          );\n        const dressCodeIncentive =\n          timetableResult.timetable.dressCode.dressCodeIncentives.find(\n            (e: { id: string }) => {\n              return e.id === outputIds?.dressCodeIncentiveId;\n            },\n          );\n        if (\n          schoolDay !== undefined &&\n          schedule !== undefined &&\n          dressCode !== undefined\n        ) {\n          store.dispatch(\n            homepageDataSlice.actions.setSchoolDayData({\n              schoolDay,\n              schedule,\n              dressCode,\n              semester: outputIds.semester,\n              dressCodeIncentive,\n            }),\n          );\n          if (schedule !== undefined) {\n            const classResult = await getClassEvents(\n              schedule.id,\n              outputIds.semester,\n              outputIds.schoolYearEventId,\n              schoolDay,\n              new Date(result.event.startTime),\n            );\n            if (\n              classResult.result === loadingStateEnum.success &&\n              classResult.data !== undefined\n            ) {\n              if (classResult.data.length >= 1) {\n                const startTimeDate = new Date(classResult.data[0].startTime);\n                const hourTime =\n                  (startTimeDate.getHours() % 12) + 1 <= 9\n                    ? `0${(startTimeDate.getHours() % 12) + 1}`\n                    : (startTimeDate.getHours() % 12) + 1;\n                const monthTime =\n                  startTimeDate.getMinutes() <= 9\n                    ? `0${startTimeDate.getMinutes()}`\n                    : startTimeDate.getMinutes().toString();\n                store.dispatch(\n                  homepageDataSlice.actions.setStartTime(\n                    `${hourTime}:${monthTime}`,\n                  ),\n                );\n              }\n              return {\n                result: loadingStateEnum.success,\n                data: classResult.data,\n              };\n            }\n            return { result: loadingStateEnum.failed };\n          }\n          return { result: loadingStateEnum.failed };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  18 October 2023\n  Pauly\n*/\n\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useState, useEffect, useCallback } from 'react';\nimport {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  Linking,\n  ScrollView,\n  ListRenderItemInfo,\n  Switch,\n  Animated,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Swipeable from 'react-native-gesture-handler/Swipeable';\nimport { FlatList } from 'react-native-gesture-handler';\nimport store, { RootState } from '../Redux/store';\nimport getCurrentPaulyData from '../Functions/homepage/getCurrentPaulyData';\nimport {\n  Colors,\n  loadingStateEnum,\n  taskImportanceEnum,\n  taskStatusEnum,\n} from '../types';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport getUsersTasks from '../Functions/homepage/getUsersTasks';\nimport ProgressView from '../UI/ProgressView';\nimport getInsightData from '../Functions/homepage/getInsightData';\nimport CustomCheckBox from '../UI/CheckMark/CustomCheckBox';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport { homepageDataSlice } from '../Redux/reducers/homepageDataReducer';\nimport PDFView from '../UI/PDF/PDFView';\nimport BackButton from '../UI/BackButton';\nimport MimeTypeIcon from '../UI/Icons/MimeTypeIcon';\nimport { getClassEventsFromDay } from '../Functions/classesFunctions';\nimport { TrashIcon } from '../UI/Icons/Icons';\n\n// Get Messages\n// Last Chat Message Channels Included\n\n// Pauly\n// Overview Message\n// Powerpoint\n\n// Insights\n// Quick Access To files\n\n// Calendar\n// Calendar Overview\n// Calendar Widget\n// Dress Code\n\n// Tasks\n\n// Wants\n// Assignments (problem is hard to test)\n\nexport default function Notifications() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const { message } = useSelector((state: RootState) => state.paulyData);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    if (siteId !== '') {\n      // Calendar Data\n      getClassEventsFromDay();\n\n      // Insights\n      const insightResult = await getInsightData();\n      dispatch(\n        homepageDataSlice.actions.setTrendingData(insightResult.trendingData),\n      );\n      dispatch(\n        homepageDataSlice.actions.setTrendingState(insightResult.trendingState),\n      );\n      dispatch(homepageDataSlice.actions.setUserData(insightResult.userData));\n      dispatch(homepageDataSlice.actions.setUserState(insightResult.userState));\n\n      // Pauly Data\n      await getCurrentPaulyData();\n\n      // List Data\n      const taskResult = await getUsersTasks();\n      if (\n        taskResult.result === loadingStateEnum.success &&\n        taskResult.data !== undefined\n      ) {\n        dispatch(homepageDataSlice.actions.setUserTasks(taskResult.data));\n      }\n      dispatch(homepageDataSlice.actions.setTaskState(taskResult.result));\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, [siteId]);\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.white,\n        bottom: Colors.white,\n      }),\n    );\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    'Comfortaa-Regular': require('../../assets/fonts/Comfortaa-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      {currentBreakPoint === 0 ? <BackButton to=\"/\" /> : null}\n      <View\n        style={{\n          width,\n          height: height * 0.1,\n          marginTop: currentBreakPoint === 0 ? 10 : 0,\n        }}\n      >\n        <View\n          style={{\n            width: width * 0.9,\n            height: height * 0.07,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            borderRadius: 15,\n            backgroundColor: Colors.darkGray,\n            marginLeft: width * 0.05,\n            marginRight: width * 0.05,\n            marginTop: height * 0.015,\n            marginBottom: height * 0.015,\n          }}\n        >\n          <Text\n            style={{ color: Colors.white, fontFamily: 'Comfortaa-Regular' }}\n          >\n            {message}\n          </Text>\n        </View>\n      </View>\n      {currentBreakPoint === 0 ? (\n        <>\n          <WidgetView width={width * 0.9} height={height * 0.3} />\n          <BoardBlock />\n        </>\n      ) : (\n        <View\n          style={{\n            flexDirection: 'row',\n            width: width * 0.9,\n            marginLeft: width * 0.05,\n          }}\n        >\n          <BoardBlock />\n          <View style={{ marginTop: height * 0.03 }}>\n            <WidgetView width={width * 0.2} height={height * 0.2} />\n          </View>\n        </View>\n      )}\n      <TaskBlock />\n      <InsightsBlock />\n    </ScrollView>\n  );\n}\n\nfunction WidgetView({ width, height }: { width: number; height: number }) {\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { schoolDayData, startTime } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  const dow: string[] = [\n    'Sunday',\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n  ];\n  return (\n    <View\n      style={{\n        backgroundColor: Colors.maroon,\n        width,\n        height,\n        borderRadius: 15,\n        marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n      }}\n    >\n      <View\n        style={{\n          width,\n          height: height / 3,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white, fontSize: height / 6 }}>\n          {dow[new Date().getDay()]}\n        </Text>\n      </View>\n      {schoolDayData !== undefined ? (\n        <>\n          <View\n            style={{\n              backgroundColor: Colors.darkGray,\n              alignItems: 'center',\n              alignContent: 'center',\n              justifyContent: 'center',\n              width,\n              height: height / 6,\n            }}\n          >\n            <Text style={{ color: Colors.white }}>\n              {schoolDayData?.schedule.descriptiveName}\n            </Text>\n          </View>\n          <View style={{ flexDirection: 'row', height: height / 2 }}>\n            <View\n              style={{\n                height: height * 0.5,\n                width: width * 0.3,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <Text\n                style={{\n                  color: Colors.white,\n                  fontWeight: 'bold',\n                  fontSize: height * 0.4,\n                }}\n              >\n                {schoolDayData?.schoolDay.shorthand}\n              </Text>\n            </View>\n            <View\n              style={{\n                height: height * 0.5,\n                width: width * 0.7,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Text style={{ color: Colors.white, fontSize: height / 3 }}>\n                {startTime}\n              </Text>\n            </View>\n          </View>\n        </>\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.darkGray,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            width,\n            height: height / 2,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>No School</Text>\n        </View>\n      )}\n    </View>\n  );\n}\n\nfunction TaskBlock() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { taskState, userTasks, isShowingCompleteTasks } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <View style={{ width }}>\n      <Text\n        style={{\n          fontSize: 24,\n          marginLeft: width * 0.05,\n          marginTop: height * 0.03,\n          marginBottom: height * 0.02,\n        }}\n      >\n        Tasks\n      </Text>\n      <View\n        style={{\n          shadowColor: 'black',\n          width: width * 0.9,\n          marginLeft: width * 0.05,\n          backgroundColor: '#FFFFFF',\n          marginRight: width * 0.05,\n          height: height * 0.5,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ flexDirection: 'row', marginLeft: 10, marginTop: 5 }}>\n          <Text>Show Completed:</Text>\n          <Switch\n            trackColor={{ false: Colors.lightGray, true: Colors.darkGray }}\n            thumbColor={\n              isShowingCompleteTasks ? Colors.maroon : Colors.darkGray\n            }\n            ios_backgroundColor={Colors.lightGray}\n            onValueChange={e => {\n              store.dispatch(\n                homepageDataSlice.actions.setIsShowingCompletedTasks(e),\n              );\n            }}\n            value={isShowingCompleteTasks}\n            style={{ marginLeft: 5 }}\n          />\n        </View>\n        <ScrollView style={{ margin: 10, height: height * 0.5 - 20 }}>\n          {taskState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.5 - 20,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView\n                width={\n                  width * 0.9 < height * 0.5 - 20\n                    ? width * 0.45\n                    : height * 0.25 - 20\n                }\n                height={\n                  width * 0.9 < height * 0.5 - 20\n                    ? width * 0.45\n                    : height * 0.25 - 20\n                }\n              />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {taskState === loadingStateEnum.success ? (\n                <FlatList\n                  data={userTasks}\n                  renderItem={task => (\n                    <TaskItem task={task} key={`User_Task_${task.item.id}`} />\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </ScrollView>\n      </View>\n    </View>\n  );\n}\n\nfunction DeleteTask({\n  onDelete,\n}: {\n  onDelete: () => void;\n  e: Animated.AnimatedInterpolation<string | number>;\n}) {\n  return (\n    <Pressable\n      onPress={() => onDelete()}\n      style={{\n        paddingLeft: 10,\n        paddingRight: 10,\n        backgroundColor: Colors.danger,\n      }}\n    >\n      <TrashIcon width={14} height={14} />\n    </Pressable>\n  );\n}\n\nfunction TaskItem({ task }: { task: ListRenderItemInfo<taskType> }) {\n  const [checked, setChecked] = useState<boolean>(\n    task.item.status === taskStatusEnum.completed,\n  );\n  const [updateTaskState, setUpdateTaskState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const { userTasks, isShowingCompleteTasks } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  const [currentText, setCurrentText] = useState(task.item.name);\n  const [mounted, setMounted] = useState(false);\n  const dispatch = useDispatch();\n\n  async function updateTaskStatus(status: taskStatusEnum) {\n    setUpdateTaskState(loadingStateEnum.loading);\n    const data = {\n      status:\n        status === taskStatusEnum.notStarted\n          ? 'notStarted'\n          : status === taskStatusEnum.inProgress\n          ? 'inProgress'\n          : status === taskStatusEnum.completed\n          ? 'completed'\n          : status === taskStatusEnum.waitingOnOthers\n          ? 'waitingOnOthers'\n          : 'deferred',\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const newItem: any = {};\n      Object.assign(newItem, task.item);\n      newItem.status = status;\n      console.log('This is new Item', newItem);\n      dispatch(\n        homepageDataSlice.actions.updateUserTask({\n          index: task.index,\n          task: newItem,\n        }),\n      );\n      setUpdateTaskState(loadingStateEnum.success);\n    } else {\n      setUpdateTaskState(loadingStateEnum.failed);\n    }\n  }\n\n  async function updateText() {\n    const data = {\n      title: userTasks[task.index].name,\n    };\n    if (task.item.excess === false) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setUpdateTaskState(loadingStateEnum.success);\n      } else {\n        setUpdateTaskState(loadingStateEnum.failed);\n      }\n    } else {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        const data = await result.json();\n        dispatch(\n          homepageDataSlice.actions.updateUserTask({\n            task: {\n              name: task.item.name,\n              id: data.id,\n              importance:\n                data.importance === 'high'\n                  ? taskImportanceEnum.high\n                  : data.importance === 'low'\n                  ? taskImportanceEnum.low\n                  : taskImportanceEnum.normal,\n              status:\n                data.status === 'notStarted'\n                  ? taskStatusEnum.notStarted\n                  : data.status === 'inProgress'\n                  ? taskStatusEnum.inProgress\n                  : data.status === 'completed'\n                  ? taskStatusEnum.completed\n                  : data.status === 'waitingOnOthers'\n                  ? taskStatusEnum.waitingOnOthers\n                  : taskStatusEnum.deferred,\n              excess: false,\n            },\n            index: task.index,\n          }),\n        );\n        dispatch(\n          homepageDataSlice.actions.unshiftUserTask({\n            name: '',\n            importance: taskImportanceEnum.normal,\n            id: '',\n            status: taskStatusEnum.notStarted,\n            excess: true,\n          }),\n        );\n        setUpdateTaskState(loadingStateEnum.success);\n      } else {\n        setUpdateTaskState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function deleteTask() {\n    if (task !== undefined) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/me/todo/lists/Tasks/tasks/${task.item.id}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        const index = store\n          .getState()\n          .homepageData.userTasks.findIndex(e => e.id === task.item.id);\n        if (index !== -1) {\n          dispatch(homepageDataSlice.actions.popUserTask(index));\n        }\n      } else {\n      }\n    }\n  }\n\n  async function checkUpdateText() {\n    setUpdateTaskState(loadingStateEnum.loading);\n    const taskNameSave =\n      store.getState().homepageData.userTasks[task.index].name;\n    setTimeout(() => {\n      if (\n        store.getState().homepageData.userTasks[task.index].name ===\n        taskNameSave\n      ) {\n        updateText();\n      }\n    }, 1500);\n  }\n\n  useEffect(() => {\n    if (mounted) {\n      checkUpdateText();\n    } else {\n      setMounted(true);\n    }\n  }, [currentText]);\n\n  return (\n    <>\n      {isShowingCompleteTasks ||\n      task.item.status !== taskStatusEnum.completed ? (\n        <Swipeable\n          renderRightActions={e => (\n            <>\n              {task.item.excess ? null : (\n                <DeleteTask e={e} onDelete={() => deleteTask()} />\n              )}\n            </>\n          )}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              width: width * 0.9,\n              paddingTop: 5,\n              paddingBottom: 5,\n            }}\n          >\n            <Pressable\n              onPress={() => {\n                setChecked(!checked);\n                if (!checked) {\n                  updateTaskStatus(taskStatusEnum.completed);\n                } else {\n                  updateTaskStatus(taskStatusEnum.notStarted);\n                }\n              }}\n            >\n              <CustomCheckBox\n                checked={checked}\n                checkMarkColor=\"blue\"\n                strokeDasharray={task.item.excess ? 5 : undefined}\n                height={20}\n                width={20}\n              />\n            </Pressable>\n            <View\n              style={{\n                justifyContent: 'center',\n                alignItems: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <TextInput\n                value={task.item.name}\n                onChangeText={e => {\n                  const newTask: taskType = {\n                    name: task.item.name,\n                    id: task.item.id,\n                    importance: task.item.importance,\n                    status: task.item.status,\n                    excess: task.item.excess,\n                  };\n                  newTask.name = e;\n                  dispatch(\n                    homepageDataSlice.actions.updateUserTask({\n                      task: newTask,\n                      index: task.index,\n                    }),\n                  );\n                  setCurrentText(e);\n                }}\n                multiline\n                numberOfLines={1}\n                style={{ width: width * 0.9 - 40 }}\n              />\n            </View>\n          </View>\n        </Swipeable>\n      ) : null}\n    </>\n  );\n}\n\nfunction BoardBlock() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { powerpointBlob, paulyDataState } = useSelector(\n    (state: RootState) => state.paulyData,\n  );\n  return (\n    <>\n      {paulyDataState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n            height: height * 0.3,\n            borderRadius: 15,\n            marginTop: height * 0.03,\n            marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n            marginRight: width * 0.05,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            backgroundColor: '#FFFFFF',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n          }}\n        >\n          <ProgressView width={100} height={100} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {paulyDataState === loadingStateEnum.success ? (\n            <>\n              {powerpointBlob !== '' ? (\n                <View\n                  style={{\n                    width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n                    borderRadius: 15,\n                    marginTop: height * 0.03,\n                    marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                    marginRight:\n                      currentBreakPoint === 0 ? width * 0.05 : width * 0.03,\n                    backgroundColor: '#FFFFFF',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.8,\n                    shadowRadius: 10,\n                  }}\n                >\n                  <PDFView\n                    width={currentBreakPoint === 0 ? width * 0.9 : width * 0.7}\n                  />\n                </View>\n              ) : (\n                <View\n                  style={{\n                    width: currentBreakPoint === 0 ? width * 0.9 : width * 0.7,\n                    height: height * 0.3,\n                    marginTop: height * 0.03,\n                    marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                    marginRight:\n                      currentBreakPoint === 0 ? width * 0.05 : width * 0.03,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    backgroundColor: '#FFFFFF',\n                    shadowOffset: { width: 0, height: 1 },\n                    shadowOpacity: 0.8,\n                    shadowRadius: 10,\n                    borderRadius: 15,\n                  }}\n                >\n                  <ProgressView width={100} height={100} />\n                  <Text>Loading</Text>\n                </View>\n              )}\n            </>\n          ) : (\n            <View\n              style={{\n                width: width * 0.9,\n                height: height * 0.3,\n                marginTop: height * 0.03,\n                marginLeft: currentBreakPoint === 0 ? width * 0.05 : 0,\n                backgroundColor: '#FFFFFF',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.8,\n                shadowRadius: 10,\n                borderRadius: 15,\n              }}\n            >\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction InsightsBlock() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  return (\n    <>\n      {currentBreakPoint <= 0 ? (\n        <>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Recent Files\n          </Text>\n          <View\n            style={{\n              marginLeft: width * 0.05,\n              marginRight: width * 0.05,\n              width: width * 0.9,\n              height: height * 0.3,\n              backgroundColor: '#FFFFFF',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n              overflow: 'scroll',\n            }}\n          >\n            <TrendingFiles />\n          </View>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Popular Files\n          </Text>\n          <View\n            style={{\n              marginLeft: width * 0.05,\n              marginRight: width * 0.05,\n              width: width * 0.9,\n              height: height * 0.3,\n              backgroundColor: '#FFFFFF',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n              marginBottom: height * 0.05,\n              overflow: 'scroll',\n            }}\n          >\n            <PopularFiles />\n          </View>\n        </>\n      ) : (\n        <>\n          <Text\n            style={{\n              fontSize: 24,\n              marginLeft: width * 0.05,\n              marginTop: height * 0.03,\n              marginBottom: height * 0.02,\n            }}\n          >\n            Files\n          </Text>\n          <View\n            style={{\n              width: width * 0.9,\n              flexDirection: 'row',\n              marginLeft: 'auto',\n              marginRight: 'auto',\n              marginTop: height * 0.025,\n              marginBottom: height * 0.025,\n              backgroundColor: '#FFFFFF',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ width: width * 0.45, overflow: 'scroll' }}>\n              <TrendingFiles />\n            </View>\n            <View style={{ width: width * 0.45, overflow: 'visible' }}>\n              <PopularFiles />\n            </View>\n          </View>\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PopularFiles() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { trendingData, trendingState } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <>\n      {trendingState === loadingStateEnum.loading ? (\n        <View>\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <ScrollView style={{ height: height * 0.3 }}>\n          {trendingState === loadingStateEnum.success ? (\n            <>\n              {trendingData.map(data => (\n                <Pressable\n                  key={`User_Insight_${data.id}`}\n                  style={{ flexDirection: 'row' }}\n                  onPress={() => {\n                    Linking.openURL(data.webUrl);\n                  }}\n                >\n                  <View style={{ margin: 10, flexDirection: 'row' }}>\n                    <MimeTypeIcon width={14} height={14} mimeType={data.type} />\n                    <Text>{data.title}</Text>\n                  </View>\n                </Pressable>\n              ))}\n            </>\n          ) : (\n            <Text>Failed To Load</Text>\n          )}\n        </ScrollView>\n      )}\n    </>\n  );\n}\n\nfunction TrendingFiles() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { userState, userData } = useSelector(\n    (state: RootState) => state.homepageData,\n  );\n  return (\n    <View style={{ height: height * 0.3, width: width * 0.5 }}>\n      <ScrollView style={{ height: height * 0.3 }}>\n        {userState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {userState === loadingStateEnum.success ? (\n              <View>\n                {userData.map(data => (\n                  <Pressable\n                    key={`User_Insight_${data.id}`}\n                    style={{ flexDirection: 'row' }}\n                    onPress={() => {\n                      Linking.openURL(data.webUrl);\n                    }}\n                  >\n                    <View style={{ margin: 10, flexDirection: 'row' }}>\n                      <MimeTypeIcon\n                        width={14}\n                        height={14}\n                        mimeType={data.type}\n                      />\n                      <Text>{data.title}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n","import { loadingStateEnum, resourceMode, resourceResponce } from '../types';\nimport store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { resourcesSlice } from '../Redux/reducers/resourcesReducer';\n\nexport function convertResourceModeString(convert?: resourceMode): string {\n  if (convert === resourceMode.sports) {\n    return 'sports';\n  }\n  if (convert === resourceMode.advancement) {\n    return 'advancement';\n  }\n  if (convert === resourceMode.schoolEvents) {\n    return 'schoolEvents';\n  }\n  if (convert === resourceMode.annoucments) {\n    return 'annoucments';\n  }\n  if (convert === resourceMode.fitness) {\n    return 'fitness';\n  }\n  return 'files';\n}\n\nasync function getResourceFollows() {\n  let nextLink = `https://graph.microsoft.com/v1.0/sites/${\n    store.getState().paulyList.siteId\n  }/lists/${\n    store.getState().paulyList.resourceListId\n  }/items?expand=fields($select=resourceGroupId,resourceConversationId)&$select=id`;\n  while (nextLink !== '') {\n    const result = await callMsGraph(nextLink);\n    if (result.ok) {\n      const data = await result.json();\n      if (data['@odata.nextLink'] !== undefined) {\n        nextLink = data['@odata.nextLink'];\n      } else {\n        nextLink = '';\n      }\n      const output: resourceFollowType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        output.push({\n          teamId: data.value[index].fields.resourceGroupId,\n          channelId: data.value[index].fields.resourceConversationId,\n        });\n      }\n      store.dispatch(resourcesSlice.actions.setResourceFollow(output));\n    } else {\n      store.dispatch(\n        resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n      );\n      return;\n    }\n  }\n  store.dispatch(\n    resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n  );\n}\n\nexport async function getResources(category?: resourceMode) {\n  await getResourceFollows();\n  const categoryString = convertResourceModeString(category);\n  const categoryFilter = category\n    ? `?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.resourceExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.resourceExtensionId\n      }'%20and%20ep/value%20eq%20'${categoryString}')`\n    : '';\n  const output: resourceDataType[] = [];\n  const batchDataRequests: { id: string; method: string; url: string }[][] = [\n    [],\n  ];\n  let batchCount = 0;\n  for (\n    let index = 0;\n    index < store.getState().resources.resourceFollow.length;\n    index += 1\n  ) {\n    // resourceGroupId\n    batchDataRequests[batchCount].push({\n      id: (index + 1).toString(),\n      method: 'GET',\n      url: `/teams/${\n        store.getState().resources.resourceFollow[index].teamId\n      }/channels/${\n        store.getState().resources.resourceFollow[index].channelId\n      }/messages`,\n    });\n    if (store.getState().resources.resourceFollow.length % 20 === 0) {\n      batchDataRequests.push([]);\n      batchCount += 1;\n    }\n  }\n  for (let index = 0; index < batchDataRequests.length; index += 1) {\n    const batchData = {\n      requests: batchDataRequests[index],\n    };\n    if (batchDataRequests[index].length !== 0) {\n      const resourceRsp = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (resourceRsp.ok) {\n        const resourceResponceData = await resourceRsp.json();\n        for (\n          let responceIndex = 0;\n          responceIndex < resourceResponceData.responses.length;\n          responceIndex += 1\n        ) {\n          if (resourceResponceData.responses[responceIndex].status === 200) {\n            for (\n              let dataIndex = 0;\n              dataIndex <\n              resourceResponceData.responses[responceIndex].body.value.length;\n              dataIndex += 1\n            ) {\n              if (\n                resourceResponceData.responses[responceIndex].body.value[\n                  dataIndex\n                ].body.content !== '<systemEventMessage/>'\n              ) {\n                const attachments: resourceType[] = [];\n                for (\n                  let attachmentIndex = 0;\n                  attachmentIndex <\n                  resourceResponceData.responses[responceIndex].body.value[\n                    dataIndex\n                  ].attachments.length;\n                  attachmentIndex += 1\n                ) {\n                  if (\n                    resourceResponceData.responses[responceIndex].body.value[\n                      dataIndex\n                    ].attachments[attachmentIndex].contentType === 'reference'\n                  ) {\n                    const attachmentResult = await callMsGraph(\n                      `https://graph.microsoft.com/v1.0/teams/${resourceResponceData.responses[responceIndex].body.value[dataIndex].channelIdentity.teamId}/channels/${resourceResponceData.responses[responceIndex].body.value[dataIndex].channelIdentity.channelId}/filesFolder`,\n                    );\n                    if (attachmentResult.ok) {\n                      const attachmentData = await attachmentResult.json();\n                      const attachmentGetResult = await callMsGraph(\n                        `https://graph.microsoft.com/v1.0/drives/${attachmentData.parentReference.driveId}/items/${resourceResponceData.responses[responceIndex].body.value[dataIndex].attachments[attachmentIndex].id}`,\n                      );\n                      if (attachmentGetResult.ok) {\n                        const attachmentGetResultData =\n                          await attachmentGetResult.json();\n                        attachments.push({\n                          webUrl: attachmentGetResultData.webUrl,\n                          id: attachmentGetResultData.id,\n                          title: attachmentGetResultData.name,\n                          type: attachmentGetResultData.file.mimeType,\n                        });\n                      }\n                    }\n                  }\n                }\n                const outputData: resourceDataType = {\n                  teamId:\n                    store.getState().resources.resourceFollow[\n                      parseInt(\n                        resourceResponceData.responses[responceIndex].id,\n                      ) - 1\n                    ].teamId,\n                  conversationId:\n                    store.getState().resources.resourceFollow[\n                      parseInt(\n                        resourceResponceData.responses[responceIndex].id,\n                      ) - 1\n                    ].channelId,\n                  id: resourceResponceData.responses[responceIndex].body.value[\n                    dataIndex\n                  ].id,\n                  body: resourceResponceData.responses[responceIndex].body\n                    .value[dataIndex].body.content,\n                  html:\n                    resourceResponceData.responses[responceIndex].body.value[\n                      dataIndex\n                    ].body.contentType === 'html',\n                  attachments:\n                    attachments.length >= 1 ? attachments : undefined,\n                };\n                output.push(outputData);\n              }\n            }\n          }\n        }\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n        return;\n      }\n    }\n  }\n  store.dispatch(\n    resourcesSlice.actions.setResources({\n      resources: output,\n      loadingState: loadingStateEnum.success,\n    }),\n  );\n}\n\nexport async function getResourcesSearch(search: string) {\n  store.dispatch(\n    resourcesSlice.actions.setResourcesState(loadingStateEnum.loading),\n  );\n  const searchPayload = {\n    requests: [\n      {\n        entityTypes: ['chatMessage'],\n        query: {\n          queryString: search,\n        },\n        from: 0,\n        size: 15,\n        enableTopResults: true,\n      },\n    ],\n  };\n  const searchResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/search/query',\n    'POST',\n    JSON.stringify(searchPayload),\n  );\n  if (searchResult.ok) {\n    const searchData = await searchResult.json();\n    const batchDataRequests: { id: string; method: string; url: string }[] = [];\n    if (searchData.value.length === 1) {\n      if (searchData.value[0].hitsContainers.length === 1) {\n        for (\n          let index = 0;\n          index < searchData.value[0].hitsContainers[0].hits.length;\n          index += 1\n        ) {\n          if (\n            searchData.value[0].hitsContainers[0].hits[index].resource\n              .channelIdentity !== undefined\n          ) {\n            const resourceIndex = store\n              .getState()\n              .resources.resourceFollow.findIndex(e => {\n                return (\n                  e.channelId ===\n                  searchData.value[0].hitsContainers[0].hits[index].resource\n                    .channelIdentity.channelId\n                );\n              });\n            if (resourceIndex !== -1) {\n              batchDataRequests.push({\n                id: batchDataRequests.length.toString() + 1,\n                method: 'GET',\n                url: `/teams/${searchData.value[0].hitsContainers[0].hits[index].resource.channelIdentity.teamId}/channels/${searchData.value[0].hitsContainers[0].hits[index].resource.channelIdentity.channelId}/messages/${searchData.value[0].hitsContainers[0].hits[index].resource.id}`,\n              });\n            } else {\n              store.dispatch(\n                resourcesSlice.actions.setResourcesState(\n                  loadingStateEnum.failed,\n                ),\n              );\n              return;\n            }\n          }\n        }\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n        return;\n      }\n\n      const batchData = {\n        requests: batchDataRequests,\n      };\n      const batchResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (batchResult.ok) {\n        const batchResultData = await batchResult.json();\n        const outputData: resourceDataType[] = [];\n        for (\n          let batchIndex = 0;\n          batchIndex < batchResultData.responses.length;\n          batchIndex += 1\n        ) {\n          if (batchResultData.responses[batchIndex].status === 200) {\n            // TO DO fix ok code\n            console.log(batchResultData.responses[batchIndex].body);\n            outputData.push({\n              teamId:\n                batchResultData.responses[batchIndex].body.channelIdentity\n                  .teamId,\n              conversationId:\n                batchResultData.responses[batchIndex].body.channelIdentity\n                  .channelId,\n              id: batchResultData.responses[batchIndex].body.id,\n              body: batchResultData.responses[batchIndex].body.body.content,\n              html:\n                batchResultData.responses[batchIndex].body.body.contentType ===\n                'html',\n            });\n          } else {\n            store.dispatch(\n              resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n            );\n            return;\n          }\n        }\n        store.dispatch(\n          resourcesSlice.actions.setResources({\n            resources: outputData,\n            loadingState: loadingStateEnum.success,\n          }),\n        );\n      } else {\n        store.dispatch(\n          resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n        );\n      }\n    } else {\n      store.dispatch(\n        resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    store.dispatch(\n      resourcesSlice.actions.setResourcesState(loadingStateEnum.failed),\n    );\n  }\n}\n\nexport default async function getResource(\n  groupId: string,\n  conversationId: string,\n): Promise<{ result: resourceResponce; itemId?: string }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.resourceListId\n    }/items?expand=fields&$filter=fields/resourceGroupId%20eq%20'${groupId}'%20and%20fields/resourceConversationId%20eq%20'${conversationId}'`,\n  );\n  if (!result.ok) {\n    return { result: resourceResponce.failed };\n  }\n  const data = await result.json();\n  if (data.value.length === 1) {\n    return { result: resourceResponce.found, itemId: data.value[0].id };\n  }\n  if (data.value.length === 0) {\n    return { result: resourceResponce.notFound };\n  }\n  return { result: resourceResponce.failed };\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  Resources.tsx\n  This is the main component for the resources section of pauly.\n  See README.md for more information about the resources section.\n*/\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts } from 'expo-font';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  ScrollView,\n  TextInput,\n  Platform,\n  Pressable,\n  Linking,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport store, { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport { resourcesSlice } from '../Redux/reducers/resourcesReducer';\nimport createUUID, { getTextState } from '../Functions/ultility/createUUID';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport {\n  convertResourceModeString,\n  getResources,\n  getResourcesSearch,\n} from '../Functions/getResources';\nimport { CloseIcon, SearchIcon } from '../UI/Icons/Icons';\nimport WebViewCross from '../UI/WebViewCross';\nimport BackButton from '../UI/BackButton';\nimport ProgressView from '../UI/ProgressView';\nimport MimeTypeIcon from '../UI/Icons/MimeTypeIcon';\nimport { Colors, loadingStateEnum, resourceMode } from '../types';\n\n// Resources\n// -> Sports\n// -> Advancement Board\n// -> Schedule Annoucments\n// -> School Events\n// -> Annoucments\n\nfunction PickerPiece({\n  text,\n  item,\n  isHoverPicker,\n  setIsHoverPicker,\n}: {\n  text: string;\n  item: resourceMode;\n  isHoverPicker: boolean;\n  setIsHoverPicker: (item: boolean) => void;\n}) {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { selectedResourceMode } = useSelector(\n    (state: RootState) => state.resources,\n  );\n  const [isSelected, setIsSelected] = useState<boolean>(false);\n  const dispatch = useDispatch();\n  return (\n    <Pressable\n      onPress={() => {\n        dispatch(resourcesSlice.actions.setSelectedResourceMode(item));\n      }}\n      onHoverIn={() => {\n        setIsHoverPicker(true);\n        setIsSelected(true);\n      }}\n      onHoverOut={() => setIsSelected(false)}\n      style={{\n        height: isHoverPicker ? height * 0.1 : height * 0.05,\n        width: isSelected\n          ? currentBreakPoint >= 2\n            ? width * 0.3\n            : width * 0.6\n          : currentBreakPoint >= 2\n          ? width * 0.2\n          : width * 0.4,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#FFFFFF',\n      }}\n    >\n      <View\n        style={{\n          height: isHoverPicker ? height * 0.06 : height * 0.03,\n          width: isSelected\n            ? currentBreakPoint >= 2\n              ? width * 0.28\n              : width * 0.46\n            : currentBreakPoint >= 2\n            ? width * 0.18\n            : width * 0.36,\n          marginLeft: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          marginRight: currentBreakPoint >= 2 ? width * 0.01 : width * 0.02,\n          backgroundColor: Colors.darkGray,\n          borderWidth: item !== selectedResourceMode ? 0 : 2,\n          borderColor: 'black',\n          borderRadius: 15,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text style={{ color: Colors.white }}>{text}</Text>\n      </View>\n    </Pressable>\n  );\n}\n\nfunction checkIfResourceDataJustAttachment(body: string): boolean {\n  if (body.length === 67) {\n    const start = body.slice(0, 15);\n    const end = body.slice(53, 67);\n    if (start === '<attachment id=' && end === '></attachment>') {\n      return false;\n    }\n    return true;\n  }\n  return true;\n}\n\nexport default function Resources() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { resources, loadingState, selectedResourceMode } = useSelector(\n    (state: RootState) => state.resources,\n  );\n  const [isHoverPicker, setIsHoverPicker] = useState<boolean>(false);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const [isShowingCategoryView, setIsShowingCategoryView] =\n    useState<boolean>(false);\n  const [selectedPost, setSelectedPost] = useState<\n    undefined | { teamId: string; conversationId: string; messageId: string }\n  >(undefined);\n  const dispatch = useDispatch();\n\n  async function loadData() {\n    await getResources(selectedResourceMode);\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    loadData();\n  }, [selectedResourceMode]);\n\n  // Fonts\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View style={{ height, width }}>\n        <View\n          style={{\n            height: height * 0.1,\n            width,\n            backgroundColor: Colors.darkGray,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n          <Text style={{ fontFamily: 'BukhariScript', color: Colors.white }}>\n            Resources\n          </Text>\n        </View>\n        <SearchBox />\n        <View\n          style={{\n            width,\n            height: height * 0.05,\n            backgroundColor: Colors.lightGray,\n          }}\n        />\n        <ScrollView\n          style={{\n            height: isHoverPicker ? height * 0.75 : height * 0.8,\n            backgroundColor: Colors.lightGray,\n          }}\n        >\n          <>\n            {loadingState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height: isHoverPicker ? height * 0.75 : height * 0.8,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.05 : height * 0.05}\n                  height={width < height ? width * 0.05 : height * 0.05}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {loadingState === loadingStateEnum.success ? (\n                  <>\n                    {resources.map(resource => (\n                      <>\n                        {isGovernmentMode ? (\n                          <Pressable\n                            key={`Resource_${resource.id}`}\n                            onPress={() => {\n                              setIsShowingCategoryView(true);\n                              setSelectedPost({\n                                teamId: resource.teamId,\n                                conversationId: resource.conversationId,\n                                messageId: resource.id,\n                              });\n                            }}\n                            style={{\n                              width: width * 0.8,\n                              marginLeft: 'auto',\n                              marginRight: 'auto',\n                              backgroundColor: Colors.white,\n                              borderRadius: 15,\n                              marginBottom: height * 0.01,\n                            }}\n                          >\n                            {resource.body !== '' &&\n                            checkIfResourceDataJustAttachment(resource.body) ? (\n                              <WebViewCross\n                                width={width * 0.8 - 20}\n                                html={\n                                  resource.html\n                                    ? resource.body\n                                    : `<div><div>${resource.body}</div></div>`\n                                }\n                              />\n                            ) : null}\n                            {resource.attachments !== undefined ? (\n                              <View\n                                style={{\n                                  marginLeft: 10,\n                                  marginBottom: 10,\n                                  marginRight: 10,\n                                  marginTop:\n                                    resource.body === '' ||\n                                    !checkIfResourceDataJustAttachment(\n                                      resource.body,\n                                    )\n                                      ? 10\n                                      : 0,\n                                  overflow: 'scroll',\n                                }}\n                              >\n                                {resource.attachments.map(attachment => (\n                                  <Pressable\n                                    style={{ flexDirection: 'row' }}\n                                    onPress={() => {\n                                      Linking.openURL(attachment.webUrl);\n                                    }}\n                                  >\n                                    <MimeTypeIcon\n                                      width={14}\n                                      height={14}\n                                      mimeType={attachment.type}\n                                    />\n                                    <Text>{attachment.title}</Text>\n                                  </Pressable>\n                                ))}\n                              </View>\n                            ) : null}\n                          </Pressable>\n                        ) : (\n                          <View\n                            key={`Resource_${resource.id}`}\n                            style={{\n                              width: width * 0.8,\n                              marginLeft: 'auto',\n                              marginRight: 'auto',\n                              backgroundColor: Colors.white,\n                              borderRadius: 15,\n                              marginBottom: height * 0.01,\n                            }}\n                          >\n                            {resource.body !== '' &&\n                            checkIfResourceDataJustAttachment(resource.body) ? (\n                              <WebViewCross\n                                width={width * 0.8 - 20}\n                                html={\n                                  resource.html\n                                    ? resource.body\n                                    : `<div><div>${resource.body}</div></div>`\n                                }\n                              />\n                            ) : null}\n                            {resource.attachments !== undefined ? (\n                              <View\n                                style={{\n                                  marginLeft: 10,\n                                  marginBottom: 10,\n                                  marginRight: 10,\n                                  marginTop:\n                                    resource.body === '' ||\n                                    !checkIfResourceDataJustAttachment(\n                                      resource.body,\n                                    )\n                                      ? 10\n                                      : 0,\n                                  overflow: 'scroll',\n                                }}\n                              >\n                                {resource.attachments.map(attachment => (\n                                  <Pressable\n                                    key={attachment.id}\n                                    style={{ flexDirection: 'row' }}\n                                    onPress={() => {\n                                      Linking.openURL(attachment.webUrl);\n                                    }}\n                                  >\n                                    <MimeTypeIcon\n                                      width={14}\n                                      height={14}\n                                      mimeType={attachment.type}\n                                    />\n                                    <Text>{attachment.title}</Text>\n                                  </Pressable>\n                                ))}\n                              </View>\n                            ) : null}\n                          </View>\n                        )}\n                      </>\n                    ))}\n                  </>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </>\n            )}\n          </>\n        </ScrollView>\n        <Pressable\n          style={{ height: isHoverPicker ? height * 0.1 : height * 0.05 }}\n          onHoverIn={() => {\n            setIsHoverPicker(true);\n          }}\n          onHoverOut={() => {\n            setIsHoverPicker(false);\n          }}\n        >\n          <ScrollView\n            horizontal\n            style={{\n              height: isHoverPicker ? height * 0.1 : height * 0.05,\n              width,\n              backgroundColor: Colors.white,\n            }}\n            showsHorizontalScrollIndicator={false}\n          >\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Home\"\n              item={resourceMode.home}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Sports\"\n              item={resourceMode.sports}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Advancement\"\n              item={resourceMode.advancement}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"School Events\"\n              item={resourceMode.schoolEvents}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Annoucments\"\n              item={resourceMode.annoucments}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Fitness\"\n              item={resourceMode.fitness}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n            <PickerPiece\n              key={`Button_${createUUID()}`}\n              text=\"Files\"\n              item={resourceMode.files}\n              isHoverPicker={isHoverPicker}\n              setIsHoverPicker={setIsHoverPicker}\n            />\n          </ScrollView>\n        </Pressable>\n      </View>\n      {isGovernmentMode &&\n      isShowingCategoryView &&\n      selectedPost !== undefined ? (\n        <GovernmentCategoryView\n          teamId={selectedPost.teamId}\n          channelId={selectedPost.conversationId}\n          messageId={selectedPost.messageId}\n          onClose={() => setIsShowingCategoryView(false)}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction GovernmentCategoryView({\n  teamId,\n  channelId,\n  messageId,\n  onClose,\n}: {\n  teamId: string;\n  channelId: string;\n  messageId: string;\n  onClose: () => void;\n}) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [categoryState, setCategoryState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [selectedCategory, setSelectedCategory] = useState<resourceMode>(\n    resourceMode.home,\n  );\n  async function addCategory() {\n    setCategoryState(loadingStateEnum.loading);\n    const data = {\n      singleValueExtendedProperties: [\n        {\n          id: store.getState().paulyList.resourceExtensionId,\n          value: convertResourceModeString(selectedCategory),\n        },\n      ],\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages/${messageId}`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      setCategoryState(loadingStateEnum.success);\n    } else {\n      setCategoryState(loadingStateEnum.failed);\n    }\n  }\n  return (\n    <View\n      style={{\n        height: height * 0.9,\n        width: width * 0.8,\n        position: 'absolute',\n        top: height * 0.05,\n        left: width * 0.1,\n        backgroundColor: '#FFFFFF',\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n      }}\n    >\n      <Pressable onPress={() => onClose()}>\n        <CloseIcon width={12} height={12} />\n      </Pressable>\n      <View\n        style={{\n          width: width * 0.8,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: '#FFFFFF',\n        }}\n      >\n        <Text>Categories</Text>\n      </View>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.sports)}\n        style={{\n          marginLeft: width * 0.05,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.sports ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Sports</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.advancement)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.advancement ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Advancement</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.schoolEvents)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.schoolEvents ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>School Events</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.annoucments)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.annoucments ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Annoucments</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.fitness)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.fitness ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Fitness</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => setSelectedCategory(resourceMode.files)}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor:\n            selectedCategory === resourceMode.files ? 'blue' : '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>Files</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          addCategory();\n        }}\n        style={{\n          marginLeft: width * 0.05,\n          marginTop: height * 0.02,\n          width: width * 0.7,\n          height: height * 0.05,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n        }}\n      >\n        <Text>{getTextState(categoryState, { notStarted: 'Confirm' })}</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nfunction SearchBox() {\n  // Dimentsions\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [mounted, setMounted] = useState<boolean>(false);\n  const { searchValue } = useSelector((state: RootState) => state.resources);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false); // Boolean true if text overflowing. This is telling the search icon to show or not.\n  const style = Platform.OS === 'web' ? { outlineStyle: 'none' } : undefined; // Style to remove ourline around textbox on web\n  const dispatch = useDispatch();\n\n  // Getting search results on value chage\n  useEffect(() => {\n    if (mounted) {\n      // Checking so that this isn't called on start\n      const searchValueSave = searchValue; // saving value to check if change in 1.5 s\n      setTimeout(() => {\n        // Waiting 1.5s\n        if (store.getState().resources.searchValue === searchValueSave) {\n          // Checking if value changed\n          getResourcesSearch(searchValue); // getting search data\n        }\n      }, 1500);\n    } else {\n      setMounted(true); // Setting that it has been called on start\n    }\n  }, [searchValue]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.1 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchValue}\n            onChangeText={e => {\n              dispatch(resourcesSlice.actions.setSearchValue(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchValue}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { useMsal } from '@azure/msal-react';\nimport {\n  DiscoveryDocument,\n  revokeAsync,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useFonts } from 'expo-font';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { View, Text, Pressable, Platform, Image } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { tenantId } from '../../PaulyConfig';\nimport store, { RootState } from '../../Redux/store';\nimport { authenticationTokenSlice } from '../../Redux/reducers/authenticationTokenReducer';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport {\n  GearIcon,\n  GovernmentIcon,\n  PersonIcon,\n  StudentSearchIcon,\n} from '../../UI/Icons/Icons';\nimport BackButton from '../../UI/BackButton';\nimport { Colors, loadingStateEnum } from '../../types';\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n\nexport default function Settings() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { uri, displayName } = useSelector(\n    (state: RootState) => state.microsoftProfileData,\n  );\n  const [imageLoadState, setImageLoadState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.maroon,\n        bottom: Colors.maroon,\n      }),\n    );\n  }, [dispatch]);\n\n  useEffect(() => {\n    if (currentBreakPoint >= 1) {\n      navigate('/');\n    }\n  }, [currentBreakPoint]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View>\n      <BackButton to=\"/\" />\n      <View\n        style={{\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          height: height * 0.2,\n          marginTop: height * 0.025,\n          marginBottom: height * 0.02,\n        }}\n      >\n        <GearIcon\n          width={width < height ? width * 0.3 : height * 0.2}\n          height={width < height ? width * 0.3 : height * 0.2}\n          style={{ position: 'absolute', left: width * 0.2 }}\n        />\n        <Text\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: 45,\n            color: Colors.white,\n          }}\n        >\n          Settings\n        </Text>\n      </View>\n      <View\n        style={{\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        {uri !== '' && imageLoadState !== loadingStateEnum.failed ? (\n          <Image\n            source={{ uri }}\n            onError={e => {\n              setImageLoadState(loadingStateEnum.failed);\n              console.log(e.nativeEvent.error);\n            }}\n            style={{\n              width: width * 0.3,\n              height: width * 0.3,\n              borderRadius: width * 0.25,\n            }}\n          />\n        ) : (\n          <PersonIcon width={width * 0.4} height={width * 0.4} />\n        )}\n        <Text\n          style={{\n            color: Colors.white,\n            fontWeight: 'bold',\n            fontSize: 24,\n            marginTop: height * 0.05,\n          }}\n        >\n          {displayName}\n        </Text>\n      </View>\n      <Pressable\n        onPress={() => {\n          signOut();\n        }}\n        style={{\n          width: width * 0.8,\n          height: height * 0.08,\n          borderRadius: 15,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 2, height: 4 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <Text style={{ fontWeight: 'bold' }}>SIGN OUT</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          navigate('/students');\n        }}\n        style={{\n          width: width * 0.8,\n          height: height * 0.08,\n          borderRadius: 15,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 2, height: 4 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginLeft: 'auto',\n          marginRight: 'auto',\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n          alignItems: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <StudentSearchIcon\n          width={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n          height={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n          style={{ marginLeft: width * 0.025 }}\n        />\n        <Text>Students</Text>\n      </Pressable>\n      {isGovernmentMode ? (\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government');\n          }}\n          style={{\n            width: width * 0.8,\n            height: height * 0.08,\n            borderRadius: 15,\n            shadowColor: Colors.black,\n            shadowOffset: { width: 2, height: 4 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n            marginLeft: 'auto',\n            marginRight: 'auto',\n            flexDirection: 'row',\n            backgroundColor: Colors.white,\n            alignItems: 'center',\n            marginTop: height * 0.05,\n          }}\n        >\n          <GovernmentIcon\n            width={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n            height={width * 0.8 < height * 0.08 ? width * 0.2 : height * 0.06}\n            style={{ marginLeft: width * 0.025 }}\n          />\n          <Text>Government</Text>\n        </Pressable>\n      ) : null}\n    </View>\n  );\n}\n","import {\n  View,\n  Text,\n  Image,\n  ImageSourcePropType,\n  Pressable,\n} from 'react-native';\nimport React, {\n  ReactNode,\n  useCallback,\n  useEffect,\n  useState,\n} from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useSelector } from 'react-redux';\nimport {\n  BookIcon,\n  CalendarIcon,\n  GearIcon,\n  GraduationHatIcon,\n  GraphAPILogo,\n  HomeIcon,\n  MedalIcon,\n  StudentSearchIcon,\n} from '../../../UI/Icons/Icons';\nimport { RootState } from '../../../Redux/store';\nimport { Colors } from '../../../types';\n\nfunction Block({\n  height,\n  width,\n  text,\n  imageSource,\n  children,\n  onPress,\n}: {\n  height: number;\n  width: number;\n  text: string;\n  imageSource?: ImageSourcePropType;\n  children?: ReactNode;\n  onPress: () => void\n}) {\n  const [isSelected, setIsSelected] = useState<boolean>(false)\n  return (\n    <Pressable\n      style={{\n        height,\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: isSelected ? Colors.lightGray:Colors.darkGray,\n        borderRadius: 5,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 5,\n      }}\n      onHoverIn={() => {setIsSelected(true)}}\n      onHoverOut={() => {setIsSelected(false)}}\n      onPress={() => onPress()}\n    >\n      {imageSource !== undefined && (\n        <Image\n          source={imageSource}\n          style={{ width: width * 0.5, height: height * 0.5 }}\n          resizeMode=\"center\"\n        />\n      )}\n      {imageSource === undefined && children !== undefined && (\n        <View style={{ width: width * 0.5, height: height * 0.5 }}>\n          <>{children}</>\n        </View>\n      )}\n      <Text style={{ color: isSelected ? Colors.black:Colors.white }}>{text}</Text>\n    </Pressable>\n  );\n}\n\nexport default function Government() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const navigate = useNavigate();\n  useEffect(() => {\n    if (!isGovernmentMode) {\n      navigate('/');\n    }\n  }, []);\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../../assets/fonts/BukhariScript.ttf'),\n  });\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  const [mainWidth, setMainWidth] = useState<number>(0);\n  useEffect(() => {\n    const fivePercent = width * 0.05;\n    const remainder = (width * 0.8) % (100 + fivePercent);\n    setMainWidth(width * 0.8 - remainder - fivePercent);\n  }, [width]);\n  if (!fontsLoaded) {\n    return null;\n  }\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      {currentBreakPoint <= 0 ? (\n        <Pressable onPress={() => navigate('/profile/')}>\n          <Text>Back</Text>\n        </Pressable>\n      ) : null}\n      <View\n        style={{\n          height: height * 0.2,\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={1}\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: height * 0.09,\n            height: height * 0.13,\n            width: width * 0.8,\n            textAlign: 'center',\n            textAlignVertical: 'center',\n            verticalAlign: 'middle',\n          }}\n        >\n          Government\n        </Text>\n      </View>\n      <View\n        style={{\n          height: height * 0.75,\n          width,\n          alignContent: 'center',\n          justifyContent: 'center',\n          alignItems: 'center',\n          marginTop: height * 0.05,\n        }}\n      >\n        <View\n          style={{\n            height: height * 0.75,\n            width: mainWidth,\n            flexDirection: 'row',\n            alignContent: 'flex-start',\n            flexWrap: 'wrap',\n            rowGap: height * 0.05,\n            columnGap: width * 0.05,\n          }}\n        >\n          <Block onPress={() => navigate('/profile/government/graph/list')} width={100} height={100} text=\"Graph\">\n            <GraphAPILogo width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/commissions')} width={100} height={100} text=\"Commissions\">\n            <MedalIcon width={50} height={50} />\n          </Block>\n          <Block\n            width={100}\n            height={100}\n            text=\"Sports\"\n            imageSource={require('../../../../assets/images/Football.png')}\n            onPress={() => navigate('/profile/government/sports')}\n          />\n          <Block onPress={() => navigate('/profile/government/homepage')} width={100} height={100} text=\"Homepage\">\n            <HomeIcon width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/calendar')} width={100} height={100} text=\"Calendar\">\n            <CalendarIcon width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/classes')} width={100} height={100} text=\"Classes\">\n            <GraduationHatIcon width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/admin')} width={100} height={100} text=\"Admin\">\n            <GearIcon width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/resources')} width={100} height={100} text=\"Resources\">\n            <BookIcon width={50} height={50} />\n          </Block>\n          <Block onPress={() => navigate('/profile/government/students')} width={100} height={100} text=\"Students\">\n            <StudentSearchIcon width={50} height={50} />\n          </Block>\n        </View>\n      </View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// June 19 2023\n// Picker with animated black line\n\nimport React, { useState, ReactNode, useRef, useEffect, Children } from 'react';\nimport { View, Pressable, Animated } from 'react-native';\n// import styles from './Picker.module.css'\n\ninterface PickerWrapperProps {\n  selectedIndex: number;\n  onSetSelectedIndex: (item: number) => void;\n  children: ReactNode;\n  width: number;\n  height: number;\n}\n\nconst PickerWrapper: React.FC<PickerWrapperProps> = ({\n  selectedIndex,\n  onSetSelectedIndex,\n  children,\n  width,\n  height,\n}) => {\n  const pan = useRef(new Animated.Value(0)).current;\n  const compoentWidth = width / Children.count(children);\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedIndex * compoentWidth);\n  }, []);\n\n  return (\n    <View style={{ flexDirection: 'row', height: height * 0.8, width }}>\n      {React.Children.map(children, (child, index) => (\n        <View\n          style={{\n            position: 'absolute',\n            transform: [{ translateX: index * compoentWidth }],\n            width: compoentWidth,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              onSetSelectedIndex(index);\n              fadeIn(index);\n            }}\n          >\n            <>{child}</>\n          </Pressable>\n        </View>\n      ))}\n      <Animated.View\n        style={{\n          transform: [{ translateX: pan }],\n        }}\n      >\n        <View\n          style={{\n            height: height * 0.2,\n            width: compoentWidth,\n            backgroundColor: 'black',\n            top: height * 0.6,\n            borderRadius: 5,\n            position: 'absolute',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n};\n\nexport default PickerWrapper;\n\n// transform: 'translate3d(' + selectedIndex * 100 + '%, ' + \"0\" + ',0)',\n\n// (selectedValue === index) ?\n// :styles.UnSelectedButtonStyle\n\n// .SelectedButtonStyle{\n//     background: rgba(68, 68, 68, 0.7);\n//     /* nice.. */\n//     border-radius: 30px;\n//     overflow: hidden;\n//     color: black;\n//     z-index: 2;\n//     padding: 0;\n//     margin: 0;\n//     transition: transform .5s ease-in-out;\n//   }\n\n//   .UnSelectedButtonStyle{\n//     overflow: hidden;\n//     text-align: center;\n//     font-size: 18px;\n//     letter-spacing: 1px;\n//     color: black;\n//     position: relative;\n//     border: none;\n//     background: transparent;\n//     grid-row: 1;\n//     z-index: 5;\n//   }\n\n//   .SwitchButtonContainer{\n//     background: rgba(155, 144, 140, 0.128);\n//     padding: 0;\n//     margin: 0;\n//     grid-column: 1;\n//     grid-row: 1;\n//   }\n","import { loadingStateEnum } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function getTeams(nextLink?: string): Promise<{\n  result: loadingStateEnum;\n  data?: groupType[];\n  nextLink?: string;\n}> {\n  const groupResult = await callMsGraph(\n    nextLink || 'https://graph.microsoft.com/v1.0/me/joinedTeams',\n  );\n  if (groupResult.ok) {\n    const groupResultData = await groupResult.json();\n    if (groupResultData.value !== undefined) {\n      const outputData: groupType[] = [];\n      for (let index = 0; index < groupResultData.value.length; index += 1) {\n        outputData.push({\n          name: groupResultData.value[index].displayName,\n          id: groupResultData.value[index].id,\n        });\n      }\n      return {\n        result: loadingStateEnum.success,\n        data: outputData,\n        nextLink: groupResultData['@odata.nextLink'],\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getChannels(\n  teamId: string,\n  nextLink?: string,\n): Promise<{\n  result: loadingStateEnum;\n  data?: channelType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${teamId}/allChannels`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const output: channelType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      output.push({\n        id: data.value[index].id,\n        displayName: data.value[index].displayName,\n        selected: false,\n        loading: false,\n        error: false,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getPosts(\n  teamId: string,\n  channelId: string,\n): Promise<{\n  result: loadingStateEnum;\n  data?: resourceDataType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${teamId}/channels/${channelId}/messages`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const output: resourceDataType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      output.push({\n        id: data.value[index].id,\n        body: data.value[index].body.content,\n        teamId: data.value[index].channelIdentity.teamId,\n        conversationId: data.value[index].channelIdentity.channelId,\n        html: false,\n      });\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport PickerWrapper from '../../../../UI/Pickers/Picker';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { clientId } from '../../../../PaulyConfig';\nimport { getTeams } from '../../../../Functions/groupsData';\n\ntype listType = {\n  displayName: string;\n  listId: string;\n  name: string;\n};\n\ntype extensionType = {\n  description: string;\n  id: string;\n};\n\nenum graphMode {\n  list,\n  group,\n  extension,\n}\n\nexport default function MicrosoftGraphOverview() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [lists, setLists] = useState<listType[]>([]);\n  const [groups, setGroups] = useState<groupType[]>([]);\n  const [extensions, setExtensions] = useState<extensionType[]>([]);\n  const [applicationExtensions, setApplicationExtensions] = useState<\n    extensionType[]\n  >([]);\n  const [selectedGraphMode, setSelectedGraphMode] = useState<graphMode>(\n    graphMode.list,\n  );\n  const { mode } = useParams();\n\n  // loading states\n  const [groupLoadingState, setGroupLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [listLoadingState, setListLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [schemaLoadingState, setSchemaLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n\n  async function getLists() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n    ); // sites/8td1tk.onmicrosoft.com/sites\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value !== undefined) {\n        const incomingLists: listType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          incomingLists.push({\n            displayName: data.value[index].displayName,\n            listId: data.value[index].id,\n            name: data.value[index].name,\n          });\n        }\n        setLists(incomingLists);\n        setListLoadingState(loadingStateEnum.success);\n      } else {\n        setListLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setListLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  // async function searchGroups(search: string) {\n  //   const groupResult = await callMsGraph(\n  //     `https://graph.microsoft.com/v1.0/groups?$filter=startswith(displayName,'${search}')`,\n  //   );\n  // }\n\n  async function loadData() {\n    const groupResult = await getTeams(\n      'https://graph.microsoft.com/v1.0/groups',\n    );\n    if (\n      groupResult.result === loadingStateEnum.success &&\n      groupResult.data !== undefined\n    ) {\n      setGroups(groupResult.data);\n    }\n    setGroupLoadingState(groupResult.result);\n  }\n\n  async function getExtensions() {\n    let schemaExtensionsUrl = `https://graph.microsoft.com/v1.0/schemaExtensions?$filter=owner%20eq%20'${clientId}'`;\n    const resultData: extensionType[] = [];\n    while (schemaExtensionsUrl !== '') {\n      const result = await callMsGraph(schemaExtensionsUrl);\n      if (!result.ok) {\n        setSchemaLoadingState(loadingStateEnum.failed);\n        return;\n      }\n      const data = await result.json();\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          description: data.value[index].description,\n          id: data.value[index].id,\n        });\n      }\n      if (data['@odata.nextLink'] !== undefined) {\n        schemaExtensionsUrl = data['@odata.nextLink'];\n      } else {\n        schemaExtensionsUrl = '';\n      }\n    }\n    setApplicationExtensions(resultData);\n\n    const applicationResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/schemaExtensions',\n    );\n    if (applicationResult.ok) {\n      const applicationData = await applicationResult.json();\n      const resultData: extensionType[] = [];\n      for (let index = 0; index < applicationData.value.length; index += 1) {\n        resultData.push({\n          description: applicationData.value[index].description,\n          id: applicationData.value[index].id,\n        });\n      }\n      setExtensions(resultData);\n      setSchemaLoadingState(loadingStateEnum.success);\n    } else {\n      setSchemaLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (mode === 'list') {\n      setSelectedGraphMode(graphMode.list);\n    } else if (mode === 'group') {\n      setSelectedGraphMode(graphMode.group);\n    } else if (mode === 'extension') {\n      setSelectedGraphMode(graphMode.extension);\n    }\n  }, [mode]);\n\n  useEffect(() => {\n    getLists();\n    loadData();\n    getExtensions();\n  }, []);\n\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <Link to=\"/profile/government\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Microsoft Graph Overview</Text>\n      <PickerWrapper\n        selectedIndex={selectedGraphMode}\n        onSetSelectedIndex={setSelectedGraphMode}\n        width={width}\n        height={30}\n      >\n        <Text>Lists</Text>\n        <Text>Groups</Text>\n        <Text>Extensions</Text>\n      </PickerWrapper>\n      <ScrollView style={{ height: height * 0.6 }}>\n        {selectedGraphMode === graphMode.list ? (\n          <View>\n            {listLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {listLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    {lists.map((item: listType) => (\n                      <Link\n                        key={`${item.listId}Link`}\n                        to={`/profile/government/graph/list/edit/${item.listId}`}\n                      >\n                        <View key={item.listId}>\n                          {\n                            // TO DO PRODuction fix these ids\n                            item.listId !==\n                              '2b86ba89-0262-4906-9247-bfd1260fb68e' &&\n                            item.listId !==\n                              '1f4cd053-dd6b-4e40-bb9b-803cbc74e872' ? (\n                              <View\n                                style={{\n                                  marginBottom: 5,\n                                  borderColor: 'black',\n                                  borderWidth: 5,\n                                }}\n                              >\n                                <Text>{item.displayName}</Text>\n                                <Text>{item.listId}</Text>\n                              </View>\n                            ) : null\n                          }\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n        {selectedGraphMode === graphMode.group ? (\n          <View>\n            {groupLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {groupLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    {groups.map(group => (\n                      <Link\n                        to={`/profile/government/graph/group/edit/${group.id}`}\n                        key={`group_${group.id}`}\n                      >\n                        <View>\n                          <Text>{group.name}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n        {selectedGraphMode === graphMode.extension ? (\n          <View>\n            {schemaLoadingState === loadingStateEnum.loading ? (\n              <Text>Loading</Text>\n            ) : (\n              <View>\n                {schemaLoadingState === loadingStateEnum.success ? (\n                  <View>\n                    <View style={{ margin: 10 }}>\n                      <Text>Application Extensions</Text>\n                    </View>\n                    {applicationExtensions.map(extension => (\n                      <Link\n                        to={`/profile/government/graph/extension/edit/${extension.id}`}\n                        key={`extension_${extension.id}`}\n                        style={{ borderWidth: 2, borderColor: 'black' }}\n                      >\n                        <View>\n                          <Text>{extension.id}</Text>\n                          <Text>{extension.description}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                    <View style={{ margin: 10 }}>\n                      <Text>Tenant Extensions</Text>\n                    </View>\n                    {extensions.map(extension => (\n                      <Link\n                        to={`/profile/government/graph/extension/edit/${extension.id}`}\n                        key={`extension_${extension.id}`}\n                        style={{ borderWidth: 2, borderColor: 'black' }}\n                      >\n                        <View>\n                          <Text>{extension.id}</Text>\n                          <Text>{extension.description}</Text>\n                        </View>\n                      </Link>\n                    ))}\n                  </View>\n                ) : (\n                  <Text>Failed</Text>\n                )}\n              </View>\n            )}\n          </View>\n        ) : null}\n      </ScrollView>\n      <Link to=\"/profile/government/graph/list/create\">\n        <Text>Create List</Text>\n      </Link>\n    </View>\n  );\n}\n","import { View, Text, Button, TextInput, Pressable } from 'react-native';\nimport React, { useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { RootState } from '../../../../Redux/store';\n\ntype MicrosoftGraphColumnDefinitions =\n  | 'text'\n  | 'number'\n  | 'boolean'\n  | 'calculated'\n  | 'choice'\n  | 'columnGroup'\n  | 'contentApprovalStatus'\n  | 'currency'\n  | 'dateTime'\n  | 'defaultValue'\n  | 'description'\n  | 'displayName'\n  | 'enforceUniqueValues'\n  | 'geolocation'\n  | 'hidden';\n\ntype ColumnItem = {\n  name: string;\n  key: MicrosoftGraphColumnDefinitions;\n  data: any;\n};\n\nexport default function MicrosoftGraphCreateList() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n\n  const [columns, setColumns] = useState<ColumnItem[]>([]);\n\n  const [listName, setListName] = useState<string>('');\n  const [isListHidden, setIsListHidden] = useState<boolean>(false);\n  const [isShowingTypeWindow, setIsShowingTypeWindow] =\n    useState<boolean>(false);\n\n  // Colum Properties\n  const [selectedColumnType, setSelectedColumnType] =\n    useState<MicrosoftGraphColumnDefinitions>('text');\n  const [enforceUniqueValues, setEnforceUniqueValues] =\n    useState<boolean>(false);\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n  const [columnDescription, setColumnDescription] = useState<string>('');\n  const [newColumnName, setNewColumnName] = useState<string>('');\n\n  async function createList() {\n    const columnData: object[] = [];\n\n    for (let index = 0; index < columns.length; index += 1) {\n      const { key } = columns[index];\n      const newData: object = {\n        name: columns[index].name,\n        text: {},\n      };\n      columnData.push(newData);\n    }\n\n    const listData = {\n      displayName: listName,\n      columns: columnData,\n      list: {\n        contentTypesEnabled: false,\n        hidden: false,\n        template: ' genericList',\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n      'POST',\n      JSON.stringify(listData),\n    );\n\n    const data = await result.json();\n  }\n  return (\n    <View style={{ width }}>\n      <Link to=\"/profile/government/graph\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Microsoft Graph Create</Text>\n      <Text>List Name</Text>\n      <TextInput value={listName} onChangeText={text => setListName(text)} />\n      <View style={{ height: height * 0.75 }}>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Name</Text>\n          <Text>Type</Text>\n        </View>\n        {columns.map((item: ColumnItem) => (\n          <View style={{ flexDirection: 'row' }}>\n            <Text>{item.name} </Text>\n            <Text>{item.key}</Text>\n          </View>\n        ))}\n      </View>\n      {isShowingTypeWindow ? (\n        <View style={{ height: 100, position: 'absolute', zIndex: 2 }}>\n          <Button\n            title=\"Text\"\n            onPress={() => {\n              setSelectedColumnType('text');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Number\"\n            onPress={() => {\n              setSelectedColumnType('number');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Boolean\"\n            onPress={() => {\n              setSelectedColumnType('boolean');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Calculated\"\n            onPress={() => {\n              setSelectedColumnType('calculated');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Location\"\n            onPress={() => {\n              setSelectedColumnType('geolocation');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Choice\"\n            onPress={() => {\n              setSelectedColumnType('choice');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Column Group\"\n            onPress={() => {\n              setSelectedColumnType('columnGroup');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Content Approval Status\"\n            onPress={() => {\n              setSelectedColumnType('contentApprovalStatus');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Currency\"\n            onPress={() => {\n              setSelectedColumnType('currency');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n          <Button\n            title=\"Date\"\n            onPress={() => {\n              setSelectedColumnType('dateTime');\n              setIsShowingTypeWindow(false);\n            }}\n          />\n        </View>\n      ) : null}\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Hidden: </Text>\n        <Pressable\n          onPress={() => {\n            setIsHidden(!isHidden);\n          }}\n        >\n          <Text>{isHidden ? 'X' : 'O'}</Text>\n        </Pressable>\n        <TextInput\n          value={newColumnName}\n          onChangeText={text => setNewColumnName(text)}\n        />\n      </View>\n      <Button\n        title={selectedColumnType}\n        onPress={() => {\n          setIsShowingTypeWindow(!isShowingTypeWindow);\n        }}\n      />\n      <Button\n        title=\"Add Column\"\n        onPress={() => {\n          let columnData = {};\n          if (selectedColumnType === 'text') {\n            columnData = {\n              allowMultipleLines: true,\n              appendChangesToExistingText: false,\n              linesForEditing: 6,\n              maxLength: 300,\n              textType: 'richText',\n            };\n          }\n          const newColumn = {\n            name: newColumnName,\n            key: selectedColumnType,\n            data: columnData,\n          };\n          setNewColumnName('');\n          setColumns([...columns, newColumn]);\n        }}\n      />\n      <Button\n        title=\"Create List\"\n        onPress={() => {\n          createList();\n        }}\n      />\n      <View style={{ flexDirection: 'row' }}>\n        <Text>List Hidden: </Text>\n        <Pressable\n          onPress={() => {\n            setIsListHidden(!isListHidden);\n          }}\n        >\n          <Text>{isListHidden ? 'X' : 'O'}</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum, submissionTypeEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nfunction convertSubmissionTypeToFilter(\n  submissionType: submissionTypeEnum,\n): string {\n  if (submissionType === submissionTypeEnum.approved) {\n    return '%20and%20fields/submissionApproved%20ne%20false';\n  }\n  if (submissionType === submissionTypeEnum.unApproved) {\n    return '%20and%20fields/submissionApproved%20eq%20false';\n  }\n  if (submissionType === submissionTypeEnum.unReviewed) {\n    return '%20and%20fields/submissionReviewed%20eq%20false';\n  }\n  return '';\n}\n\nexport default async function getSubmissions(\n  commissionId: string,\n  submissionType: submissionTypeEnum,\n): Promise<{\n  result: loadingStateEnum;\n  data?: submissionType[];\n  nextLink?: string;\n  count?: number;\n}> {\n  const filter: string = convertSubmissionTypeToFilter(submissionType);\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.commissionSubmissionsListId\n    }/items?expand=fields&$select=id&$filter=fields/commissionId%20eq%20'${commissionId}'${filter}`,\n    'GET',\n  );\n  if (result.ok) {\n    const data = await result.json();\n\n    // Get Users\n    const batchRequests: { id: string; method: string; url: string }[][] = [];\n    const users: any = {};\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (index % 20 === 0) {\n        batchRequests.push([]);\n      }\n      batchRequests[Math.floor(index / 20)].push({\n        id: (index + 1).toString(),\n        method: 'GET',\n        url: `/users/${data.value[index].fields.userId}?$select=id,displayName`,\n      });\n    }\n    for (let index = 0; index < batchRequests.length; index += 1) {\n      const batchData = {\n        requests: batchRequests[index],\n      };\n      const batchHeaders = new Headers();\n      batchHeaders.append('Accept', 'application/json');\n      const batchResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(batchData),\n      );\n      if (result.ok) {\n        const batchResultData = await batchResult.json();\n        for (\n          let batchIndex = 0;\n          batchIndex < batchResultData.responses.length;\n          batchIndex += 1\n        ) {\n          if (batchResultData.responses[batchIndex].status === 200) {\n            Object.defineProperty(\n              users,\n              batchResultData.responses[batchIndex].body.id,\n              {\n                value: batchResultData.responses[batchIndex].body.displayName,\n              },\n            );\n          } else {\n            return { result: loadingStateEnum.failed };\n          }\n        }\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n\n    // Return Output\n    const output: submissionType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const name = users[data.value[index].fields.userId];\n      if (name !== undefined) {\n        output.push({\n          userName: name,\n          submissionTime: data.value[index].fields.submittedTime,\n          id: data.value[index].fields.submissionId,\n          itemId: data.value[index].id,\n          approved: data.value[index].fields.submissionApproved,\n          reviewed: data.value[index].fields.submissionReviewed,\n          submissionImage:\n            data.value[index].fields.submissionData !== undefined\n              ? JSON.parse(data.value[index].fields.submissionData).imageShare\n              : undefined,\n        });\n      } else {\n        return { result: loadingStateEnum.failed };\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      data: output,\n      nextLink: data['@odata.nextLink'],\n      count: data.value.length,\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport getCommissions from '../../../../Functions/commissions/getCommissions';\nimport getSubmissions from '../../../../Functions/commissions/getSubmissions';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  loadingStateEnum,\n  submissionTypeEnum,\n} from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentCommissions() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [commissions, setCommissions] = useState<commissionType[]>([]);\n  const [commissionsState, setCommissionsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getCommissions();\n    if (result.result === loadingStateEnum.success) {\n      if (result.data !== undefined) {\n        setCommissions(result.data);\n      }\n      // TO DO pagination\n    }\n    setCommissionsState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government');\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n        <View\n          style={{\n            width,\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Commissions</Text>\n        </View>\n      </View>\n      <View style={{ height: height * 0.85 }}>\n        {commissionsState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <>\n            {commissionsState === loadingStateEnum.success ? (\n              <ScrollView style={{ height: height * 0.85 }}>\n                {commissions.map(commission => (\n                  <CommissionBlock\n                    key={`Commission_${\n                      commission.commissionId\n                    }_${createUUID()}`}\n                    commission={commission}\n                  />\n                ))}\n              </ScrollView>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ height: height * 0.05 }}>\n        <Pressable\n          onPress={() => {\n            navigate('/profile/government/commissions/create');\n          }}\n        >\n          <Text>Create New Commission</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction CommissionBlock({ commission }: { commission: commissionType }) {\n  const { width } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [unclaimedState, setUnclaimedState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [unclaimedCount, setUnclaimedCount] = useState<string>('0');\n\n  async function loadData() {\n    const result = await getSubmissions(\n      commission.commissionId,\n      submissionTypeEnum.unReviewed,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.count !== undefined\n    ) {\n      if (result.count >= 50) {\n        setUnclaimedCount(`${result.count.toString()}+`);\n      } else {\n        setUnclaimedCount(result.count.toString());\n      }\n    }\n    setUnclaimedState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <Pressable\n      onPress={() =>\n        navigate(`/profile/government/commissions/${commission.commissionId}`)\n      }\n      key={`Commission_${commission.commissionId}_${createUUID()}`}\n      style={{\n        margin: 10,\n        borderRadius: 15,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n      }}\n    >\n      <View style={{ margin: 10 }}>\n        <Text selectable={false}>{commission.title}</Text>\n      </View>\n      {unclaimedCount !== '0' ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: 'red',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>{unclaimedCount}</Text>\n        </View>\n      ) : null}\n      {unclaimedState === loadingStateEnum.loading ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: '#FF6700',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <ProgressView width={10} height={10} />\n        </View>\n      ) : null}\n      {unclaimedState === loadingStateEnum.failed ? (\n        <View\n          key={createUUID()}\n          style={{\n            width: 20,\n            height: 20,\n            borderRadius: 50,\n            backgroundColor: 'red',\n            position: 'absolute',\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n            top: -2,\n            left: width - 25,\n          }}\n        >\n          <Text style={{ color: Colors.white }}>!</Text>\n        </View>\n      ) : null}\n    </Pressable>\n  );\n}\n","import { View, Text, Animated, Pressable } from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { Colors } from '../../types';\n\ntype PickerWrapperProps = {\n  selectedIndex: number;\n  setSelectedIndex: (item: number) => void;\n  options: string[];\n  width: number;\n  height: number;\n};\n\nexport default function SegmentedPicker({\n  width,\n  height,\n  selectedIndex,\n  setSelectedIndex,\n  options,\n}: PickerWrapperProps) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [compoentWidth, setComponentWidth] = useState(width / 3);\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth + compoentWidth * 0.005,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedIndex * compoentWidth + compoentWidth * 0.005);\n  }, []);\n\n  useEffect(() => {\n    console.log(selectedIndex);\n  }, [selectedIndex]);\n\n  useEffect(() => {\n    setComponentWidth(width / options.length);\n    pan.setValue(selectedIndex * compoentWidth + compoentWidth * 0.005);\n  }, [width]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        height,\n        width,\n        backgroundColor: '#7d7d7d',\n        borderRadius: 20,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n      }}\n    >\n      {options.map((option, index) => (\n        <Pressable\n          onPress={() => {\n            setSelectedIndex(index);\n            fadeIn(index);\n          }}\n          style={{\n            position: 'absolute',\n            width: compoentWidth,\n            height,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            transform: [{ translateX: index * compoentWidth }],\n          }}\n        >\n          <Text\n            adjustsFontSizeToFit\n            style={{\n              textAlignVertical: 'center',\n              textAlign: 'center',\n              width: compoentWidth,\n            }}\n          >\n            {option}\n          </Text>\n        </Pressable>\n      ))}\n      <Animated.View style={{ transform: [{ translateX: pan }], zIndex: -1 }}>\n        <View\n          style={{\n            height: height * 0.95,\n            width: compoentWidth - compoentWidth * 0.01,\n            backgroundColor: Colors.white,\n            top: height * 0.025,\n            borderRadius: 20,\n            position: 'absolute',\n            zIndex: -1,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  GoogleMap,\n  useJsApiLoader,\n  Marker,\n  Circle,\n} from '@react-google-maps/api';\n\nconst center = {\n  lat: 49.85663823299096,\n  lng: -97.22659526509193,\n};\n\ntype LatLngLiteral = google.maps.LatLngLiteral;\n\nexport default function MapWeb({\n  proximity,\n  selectedPositionIn,\n  onSetSelectedPositionIn,\n  width,\n  height,\n}: {\n  proximity: number;\n  selectedPositionIn: { lat: number; lng: number };\n  onSetSelectedPositionIn: (item: { lat: number; lng: number }) => void;\n  width: number;\n  height: number;\n}) {\n  const { isLoaded } = useJsApiLoader({\n    id: 'google-map-script',\n    googleMapsApiKey: 'AIzaSyAltyD_LL0kbe84kyMRxgRmoH74Spi5rvw', // TO DO put this into a loval env\n  });\n  const [selectedPosition, setSelectedPosition] = useState<LatLngLiteral>();\n  const [containerStyle, setContainerStyle] = useState<{\n    width: string;\n    height: string;\n  }>({\n    width: '400px',\n    height: '400px',\n  });\n\n  useEffect(() => {\n    setContainerStyle({\n      width: `${width.toString()}px`,\n      height: `${height.toString()}px`,\n    });\n  }, [width, height]);\n\n  // const [map, setMap] = React.useState(null)\n\n  // const onLoad = React.useCallback(function callback(map) {\n  //   // This is just an example of getting and using the map instance!!! don't just blindly copy!\n  //   const bounds = new window.google.maps.LatLngBounds(center);\n  //   map.fitBounds(bounds);\n\n  //   setMap(map)\n  // }, [])\n\n  // const onUnmount = React.useCallback(function callback(map) {\n  //   setMap(null)\n  // }, [])\n\n  return isLoaded ? (\n    <div style={{ width, height }}>\n      <GoogleMap\n        mapContainerStyle={containerStyle}\n        center={center}\n        zoom={15}\n        onClick={ev => {\n          onSetSelectedPositionIn({\n            lat: ev.latLng!.lat(),\n            lng: ev.latLng!.lng(),\n          });\n          setSelectedPosition({ lat: ev.latLng!.lat(), lng: ev.latLng!.lng() });\n        }}\n      >\n        {/* Child components, such as markers, info windows, etc. */}\n        {selectedPosition && <Marker position={selectedPosition} />}\n        {selectedPosition && (\n          <Circle center={selectedPosition} radius={proximity} />\n        )}\n      </GoogleMap>\n    </div>\n  ) : (\n    <></>\n  );\n}\n","import React, { useEffect, useRef } from 'react';\nimport {\n  View,\n  StyleSheet,\n  PanResponder,\n  Animated,\n  PanResponderGestureState,\n} from 'react-native';\n\ninterface BoxProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number;\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: 'flex-start',\n    justifyContent: 'center',\n  },\n  box: {\n    backgroundColor: 'blue',\n    borderRadius: 5,\n    position: 'absolute',\n  },\n});\n\nconst Box: React.FC<BoxProps> = ({\n  width,\n  height,\n  value,\n  onValueChange,\n  containerWidth,\n}) => {\n  const pan = useRef(new Animated.Value(value)).current;\n  const valueRef = useRef({ currentValue: value });\n  const containerWidthRef = useRef({ currentValue: value });\n  const lastValue = useRef({ currentValue: value });\n  useEffect(() => {\n    containerWidthRef.current.currentValue = containerWidth;\n  }, [containerWidth]);\n  useEffect(() => {\n    valueRef.current.currentValue = value;\n  }, [value]);\n  const panResponder = useRef(\n    PanResponder.create({\n      onStartShouldSetPanResponder: () => true,\n      onMoveShouldSetPanResponder: () => true,\n      onPanResponderMove: (\n        evt: any,\n        gestureState: PanResponderGestureState,\n      ) => {\n        const { dx } = gestureState;\n        const valueRead = valueRef.current.currentValue;\n        let adding =\n          lastValue.current.currentValue > 0\n            ? dx - lastValue.current.currentValue\n            : dx + lastValue.current.currentValue;\n        adding /= width - height / 2;\n        lastValue.current.currentValue = dx;\n        const newValue = valueRead + adding;\n\n        if (newValue <= 1 && newValue >= 0) {\n          valueRef.current.currentValue = newValue;\n          onValueChange(newValue);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: newValue * width });\n        } else if (newValue < 0) {\n          valueRef.current.currentValue = 0;\n          onValueChange(0);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: 0 });\n        } else if (newValue > 1) {\n          valueRef.current.currentValue = 1;\n          onValueChange(1);\n          Animated.event([null, { dx: pan }], {\n            useNativeDriver: false,\n          })(evt, { ...gestureState, dx: width - height / 2 });\n        }\n      },\n      onPanResponderRelease: () => {\n        pan.setValue(valueRef.current.currentValue * width);\n        lastValue.current.currentValue = 0;\n      },\n    }),\n  ).current;\n\n  return (\n    <View style={styles.container}>\n      <Animated.View\n        style={[\n          styles.box,\n          {\n            width: height / 2,\n            height: height / 2,\n            transform: [{ translateX: pan }],\n          },\n        ]}\n        {...panResponder.panHandlers}\n      />\n    </View>\n  );\n};\n\ninterface SliderProps {\n  width: number;\n  height: number;\n  value: number;\n  onValueChange: (item: number) => void;\n  containerWidth: number; // This is the width of the screen\n}\n\nexport default function Slider({\n  width,\n  height,\n  value,\n  onValueChange,\n  containerWidth,\n}: SliderProps) {\n  return (\n    <View\n      style={{\n        width,\n        height,\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <View\n        style={{\n          width,\n          height: height > 10 ? height : 10,\n          backgroundColor: 'black',\n        }}\n      >\n        <Box\n          width={width}\n          height={height}\n          value={value}\n          onValueChange={onValueChange}\n          containerWidth={containerWidth}\n        />\n      </View>\n    </View>\n  );\n}\n","import { loadingStateEnum, dataContentTypeOptions } from '../../types';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function getFileWithShareID(shareID: string): Promise<{\n  result: loadingStateEnum;\n  url?: string;\n  contentType?: dataContentTypeOptions;\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/shares/${shareID}/driveItem`,\n    'GET',\n    undefined,\n    [{ key: 'Prefer', value: 'redeemSharingLink' }],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (\n      data['@microsoft.graph.downloadUrl'] !== undefined &&\n      data['@microsoft.graph.downloadUrl'] !== null\n    ) {\n      if (data.file.mimeType.slice(0, 5) === 'image') {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.image,\n        };\n      }\n      if (data.file.mimeType === 'video/mp4') {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.video,\n        };\n      }\n      if (\n        data.file.mimeType ===\n        'application/vnd.openxmlformats-officedocument.presentationml.presentation'\n      ) {\n        return {\n          result: loadingStateEnum.success,\n          url: data['@microsoft.graph.downloadUrl'],\n          contentType: dataContentTypeOptions.pdf,\n        };\n      }\n      return { result: loadingStateEnum.failed };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import store from '../../Redux/store';\nimport { commissionTypeEnum, loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function updateCommission(\n  isCreating: boolean,\n  commissionName: string,\n  isTimed: boolean,\n  points: number,\n  isHidden: boolean,\n  maxNumberOfClaims: number,\n  allowMultipleSubmissions: boolean,\n  selectedCommissionType: number,\n  selectedPostId: string,\n  selectedTeamId: string,\n  selectedChannelId: string,\n  startDate: Date,\n  endDate: Date,\n  commissionId: string,\n  proximity: number,\n  selectedPositionIn: { lat: number; lng: number },\n  commissionItemId: string,\n): Promise<loadingStateEnum> {\n  const data: any = {\n    fields: {\n      // All Commissions\n      Title: commissionName,\n      timed: isTimed,\n      points,\n      hidden: isHidden,\n      maxNumberOfClaims,\n      allowMultipleSubmissions,\n      commissionID: commissionId,\n      value: selectedCommissionType + 1,\n    },\n  };\n  if (selectedPostId !== '') {\n    data.fields.postTeamId = selectedTeamId;\n    data.fields.postChannelId = selectedChannelId;\n    data.fields.postId = selectedPostId;\n  }\n  if (isTimed) {\n    data.fields.startDate = startDate.toISOString().replace(/.\\d+Z$/g, 'Z');\n    data.fields.endDate = endDate.toISOString().replace(/.\\d+Z$/g, 'Z');\n  }\n  if (\n    selectedCommissionType === commissionTypeEnum.Location ||\n    selectedCommissionType === commissionTypeEnum.ImageLocation\n  ) {\n    data.fields.proximity = proximity;\n    data.fields.coordinateLat = selectedPositionIn.lat;\n    data.fields.coordinateLng = selectedPositionIn.lng;\n  }\n  if (selectedCommissionType === commissionTypeEnum.QRCode) {\n    data.fields.qrCodeData = '[]';\n  }\n\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${store.getState().paulyList.commissionListId}/items${\n      !isCreating ? `/${commissionItemId}` : ''\n    }`,\n    isCreating ? 'POST' : 'PATCH',\n    JSON.stringify(data),\n  );\n  if (result.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  ScrollView,\n  Pressable,\n  Switch,\n  Image,\n} from 'react-native';\nimport { useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { DatePickerModal, TimePickerModal } from 'react-native-paper-dates';\nimport store, { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  commissionTypeEnum,\n  loadingStateEnum,\n  submissionTypeEnum,\n} from '../../../../types';\nimport SegmentedPicker from '../../../../UI/Pickers/SegmentedPicker';\nimport ProgressView from '../../../../UI/ProgressView';\nimport WebViewCross from '../../../../UI/WebViewCross';\nimport { CloseIcon } from '../../../../UI/Icons/Icons';\nimport MapWeb from '../../../../UI/Map/Map.web';\nimport Slider from '../../../../UI/Slider';\nimport BackButton from '../../../../UI/BackButton';\nimport {\n  getChannels,\n  getPosts,\n  getTeams,\n} from '../../../../Functions/groupsData';\nimport getCommission from '../../../../Functions/commissions/getCommission';\nimport getSubmissions from '../../../../Functions/commissions/getSubmissions';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID, {\n  getTextState,\n} from '../../../../Functions/ultility/createUUID';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\nimport updateCommission from '../../../../Functions/commissions/updateCommission';\n\nenum datePickingMode {\n  none,\n  startTime,\n  endTime,\n  startDate,\n  endDate,\n}\n\nexport default function GovernmentEditCommission() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { commissionListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n\n  const [submitCommissionState, setSubmitCommissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const [selectedCommissionType, setSelectedCommissionType] =\n    useState<commissionTypeEnum>(commissionTypeEnum.Issued);\n\n  const [commissionName, setCommissionName] = useState<string>('');\n  const [proximity, setProximity] = useState<number>(0);\n  const [points, setPoints] = useState<number>(0);\n  const [startDate, setStartDate] = useState(new Date());\n  const [endDate, setEndDate] = useState(new Date());\n\n  const [isHidden, setIsHidden] = useState<boolean>(false);\n\n  const [currentDatePickingMode, setCurrentDatePickingMode] =\n    useState<datePickingMode>(datePickingMode.none);\n\n  const [selectedPositionIn, setSelectedPositionIn] = useState<{\n    lat: number;\n    lng: number;\n  }>({ lat: 49.85663823299096, lng: -97.22659526509193 });\n  const [maxNumberOfClaims, setMaxNumberOfClaims] = useState<number>(1);\n  const [allowMultipleSubmissions, setAllowMultipleSubmissions] =\n    useState<boolean>(false);\n  const [isTimed, setIsTimed] = useState<boolean>(true);\n\n  const [commissionItemId, setCommissionItemId] = useState<string>('');\n\n  const [getCommissionResult, setGetCommissionResult] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [deleteCommissionResult, setDeleteCommissionResult] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [selectedTeamId, setSelectedTeamId] = useState<string>('');\n  const [selectedChannelId, setSelectedChannelId] = useState<string>('');\n  const [selectedPostId, setSelectedPostId] = useState<string>('');\n\n  const [isCreating, setIsCreating] = useState<boolean>(false);\n\n  const { id } = useParams();\n\n  async function loadData() {\n    if (id !== undefined) {\n      const result = await getCommission(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        // TO DO add all values\n        setCommissionItemId(result.data.itemId);\n        setCommissionName(result.data.title);\n        setAllowMultipleSubmissions(result.data.allowMultipleSubmissions);\n        setIsHidden(result.data.hidden);\n        setMaxNumberOfClaims(result.data.maxNumberOfClaims);\n        setIsTimed(result.data.timed);\n        setPoints(result.data.points);\n      }\n      setGetCommissionResult(result.result);\n    }\n  }\n  async function deleteCommission() {\n    if (\n      commissionItemId === '' ||\n      deleteCommissionResult === loadingStateEnum.loading ||\n      deleteCommissionResult === loadingStateEnum.success\n    ) {\n      return;\n    }\n    setDeleteCommissionResult(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${commissionListId}/items/${commissionItemId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n      const deleteList = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}`,\n        'DELETE',\n      );\n      if (deleteList.ok) {\n        setDeleteCommissionResult(loadingStateEnum.success);\n      } else {\n        setDeleteCommissionResult(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteCommissionResult(loadingStateEnum.failed);\n    }\n  }\n  useEffect(() => {\n    if (id !== 'create') {\n      loadData();\n    } else {\n      setIsCreating(true);\n    }\n  }, []);\n\n  async function loadUpdateCommission() {\n    if (\n      (submitCommissionState === loadingStateEnum.failed ||\n        submitCommissionState === loadingStateEnum.notStarted) &&\n      id !== undefined\n    ) {\n      setSubmitCommissionState(loadingStateEnum.loading);\n      const result = await updateCommission(\n        isCreating,\n        commissionName,\n        isTimed,\n        points,\n        isHidden,\n        maxNumberOfClaims,\n        allowMultipleSubmissions,\n        selectedCommissionType,\n        selectedPostId,\n        selectedTeamId,\n        selectedChannelId,\n        startDate,\n        endDate,\n        id !== 'create' ? id : createUUID(),\n        proximity,\n        selectedPositionIn,\n        commissionItemId,\n      );\n      setSubmitCommissionState(result);\n    }\n  }\n\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        width,\n        height,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <ScrollView style={{ height, width, zIndex: 1 }}>\n        <BackButton to=\"/profile/government/commissions\" />\n        <View\n          style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>{isCreating ? 'Create New' : 'Edit'} Commission</Text>\n        </View>\n        <View\n          style={{\n            width,\n            height: height * 0.15,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <SegmentedPicker\n            selectedIndex={selectedCommissionType}\n            setSelectedIndex={setSelectedCommissionType}\n            options={[\n              'Issued',\n              'Location',\n              'Image',\n              'Image and Location',\n              'QRCode',\n            ]}\n            width={width * 0.8}\n            height={height * 0.1}\n          />\n        </View>\n        <Text>Commission Name</Text>\n        <TextInput\n          value={commissionName}\n          onChangeText={text => setCommissionName(text)}\n          placeholder=\"Commission Name\"\n        />\n        {selectedCommissionType === commissionTypeEnum.ImageLocation ||\n        selectedCommissionType === commissionTypeEnum.Location ? (\n          <View>\n            <View\n              style={{\n                width,\n                height: height * 0.3,\n                alignContent: 'center',\n                justifyContent: 'center',\n                alignItems: 'center',\n              }}\n            >\n              <MapWeb\n                proximity={proximity}\n                selectedPositionIn={selectedPositionIn}\n                onSetSelectedPositionIn={setSelectedPositionIn}\n                width={width * 0.8}\n                height={height * 0.3}\n              />\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Proximity</Text>\n              <TextInput\n                keyboardType=\"numeric\"\n                onChangeText={text => setProximity(parseFloat(text))}\n                value={proximity.toString()}\n                maxLength={10} // setting limit of input\n              />\n            </View>\n            <View\n              style={{\n                width,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Slider\n                width={width * 0.9}\n                height={50}\n                value={proximity / 1000}\n                onValueChange={value => {\n                  setProximity(value * 1000);\n                }}\n                containerWidth={width}\n              />\n            </View>\n          </View>\n        ) : null}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Timed: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isTimed ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setIsTimed(e);\n            }}\n            value={isTimed}\n          />\n        </View>\n        {isTimed ? (\n          <View>\n            <View\n              style={{\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width,\n              }}\n            >\n              <Text>Start Date</Text>\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.startDate);\n                }}\n              >\n                <Text>Pick Start Time</Text>\n              </Pressable>\n              <TimePickerModal\n                hours={new Date(startDate).getHours()}\n                minutes={new Date(startDate).getMinutes()}\n                visible={currentDatePickingMode === datePickingMode.startDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                onConfirm={e => {\n                  const newDate = new Date(startDate);\n                  newDate.setHours(e.hours);\n                  newDate.setMinutes(e.minutes);\n                  setStartDate(newDate);\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.startDate);\n                }}\n              >\n                <Text>Pick Start Date</Text>\n              </Pressable>\n              <DatePickerModal\n                locale=\"en\"\n                mode=\"single\"\n                label=\"Select Date\"\n                visible={currentDatePickingMode === datePickingMode.startDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                date={new Date(endDate)}\n                onConfirm={e => {\n                  if (e.date !== undefined) {\n                    const oldDate = new Date(endDate);\n                    const newDate = new Date(\n                      e.date.getFullYear(),\n                      e.date.getMonth(),\n                      e.date.getDate(),\n                      oldDate.getHours(),\n                      oldDate.getMinutes(),\n                    );\n                    setStartDate(newDate);\n                  }\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n            </View>\n            <View\n              style={{\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                width,\n              }}\n            >\n              <Text>End Date</Text>\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.endDate);\n                }}\n              >\n                <Text>Pick End Time</Text>\n              </Pressable>\n              <TimePickerModal\n                hours={new Date(endDate).getHours()}\n                minutes={new Date(endDate).getMinutes()}\n                visible={currentDatePickingMode === datePickingMode.endTime}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                onConfirm={e => {\n                  const newDate = new Date(startDate);\n                  newDate.setHours(e.hours);\n                  newDate.setMinutes(e.minutes);\n                  setEndDate(newDate);\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n              <Pressable\n                style={{ margin: 5 }}\n                onPress={() => {\n                  setCurrentDatePickingMode(datePickingMode.endDate);\n                }}\n              >\n                <Text>Pick End Date</Text>\n              </Pressable>\n              <DatePickerModal\n                locale=\"en\"\n                mode=\"single\"\n                label=\"Select Date\"\n                visible={currentDatePickingMode === datePickingMode.endDate}\n                onDismiss={() =>\n                  setCurrentDatePickingMode(datePickingMode.none)\n                }\n                date={new Date(endDate)}\n                onConfirm={e => {\n                  console.log(e.date);\n                  if (e.date !== undefined) {\n                    const oldDate = new Date(endDate);\n                    const newDate = new Date(\n                      e.date.getFullYear(),\n                      e.date.getMonth(),\n                      e.date.getDate(),\n                      oldDate.getHours(),\n                      oldDate.getMinutes(),\n                    );\n                    setEndDate(newDate);\n                  }\n                  setCurrentDatePickingMode(datePickingMode.none);\n                }}\n              />\n            </View>\n          </View>\n        ) : null}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Points: </Text>\n          <TextInput\n            keyboardType=\"numeric\"\n            onChangeText={text => {\n              if (text === '') {\n                setPoints(0);\n              } else {\n                setPoints(parseFloat(text));\n              }\n            }}\n            value={points.toString()}\n            maxLength={10} // setting limit of input\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Allow Multiple Submissions: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={allowMultipleSubmissions ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setAllowMultipleSubmissions(e);\n            }}\n            value={allowMultipleSubmissions}\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Is Hidden: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isHidden ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={e => {\n              setIsHidden(e);\n            }}\n            value={isHidden}\n          />\n        </View>\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Max number of claims: </Text>\n          <TextInput\n            value={maxNumberOfClaims.toString()}\n            onChangeText={e => {\n              if (e !== '') {\n                setMaxNumberOfClaims(parseFloat(e));\n              } else {\n                setMaxNumberOfClaims(0);\n              }\n            }}\n            inputMode=\"numeric\"\n          />\n        </View>\n        <Text>Post</Text>\n        <PostSelectionContainer\n          width={width}\n          height={height * 0.4}\n          selectedTeamId={selectedTeamId}\n          selectedPostId={selectedPostId}\n          setSelectedTeamId={setSelectedTeamId}\n          selectedChannelId={selectedChannelId}\n          setSelectedChannelId={setSelectedChannelId}\n          setSelectedPostId={setSelectedPostId}\n        />\n        {!isCreating && id !== undefined ? (\n          <View\n            style={{ marginTop: 10, marginBottom: 10, height: height * 0.5 }}\n          >\n            <CommissionSubmissions\n              commissionId={id}\n              width={width}\n              height={height * 0.5}\n            />\n          </View>\n        ) : null}\n        <Pressable\n          onPress={() => {\n            loadUpdateCommission();\n          }}\n        >\n          <Text>\n            {submitCommissionState === loadingStateEnum.notStarted\n              ? isCreating\n                ? 'Create Commission'\n                : 'Save Changes'\n              : submitCommissionState === loadingStateEnum.loading\n              ? 'Loading'\n              : submitCommissionState === loadingStateEnum.success\n              ? 'Success'\n              : 'Failed'}\n          </Text>\n        </Pressable>\n        {!isCreating ? (\n          <Pressable\n            onPress={() => {\n              deleteCommission();\n            }}\n          >\n            <Text>\n              {getTextState(deleteCommissionResult, {\n                notStarted: 'Delete Commission',\n                success: 'Deleted Commission',\n                failed: 'Failed To Delete Commission',\n              })}\n            </Text>\n          </Pressable>\n        ) : null}\n      </ScrollView>\n\n      {/* <View style={{height: height * 0.8, width: width * 0.8, position: \"absolute\", left: width * 0.1, top: height * 0.1, zIndex: 2, backgroundColor: (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? Colors.white:\"transparent\", borderRadius: 15, shadowColor: (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? \"black\":\"transparent\", shadowOffset: { width: 0, height: 1 }, shadowOpacity: 0.8, shadowRadius: 10, alignItems: \"center\", justifyContent: \"center\", alignContent: \"center\"}} pointerEvents={(currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ? 'auto':'none'}>\n        { (currentDatePickingMode === datePickingMode.start || currentDatePickingMode === datePickingMode.end) ?\n          <DatePicker \n            selectedDate={(currentDatePickingMode === datePickingMode.start) ? startDate:endDate} \n            onSetSelectedDate={(date) => {if (currentDatePickingMode === datePickingMode.end) {setEndDate(date)} else if (currentDatePickingMode === datePickingMode.start) {setStartDate(date)}}}\n            width={width * 0.7} height={height * 0.7} onCancel={() => {setCurrentDatePickingMode(datePickingMode.none)}}\n          />:null\n        }\n      </View> */}\n    </View>\n  );\n}\n\nenum postPickingMode {\n  team,\n  channel,\n  post,\n}\n\nfunction PostSelectionContainer({\n  width,\n  height,\n  selectedChannelId,\n  selectedTeamId,\n  selectedPostId,\n  setSelectedChannelId,\n  setSelectedPostId,\n  setSelectedTeamId,\n}: {\n  width: number;\n  height: number;\n  selectedTeamId: string;\n  selectedPostId: string;\n  setSelectedTeamId: (item: string) => void;\n  selectedChannelId: string;\n  setSelectedChannelId: (item: string) => void;\n  setSelectedPostId: (item: string) => void;\n}) {\n  const [currentPostPickingMode, setCurrentPostPickingMode] =\n    useState<postPickingMode>(postPickingMode.team);\n  return (\n    <>\n      {currentPostPickingMode === postPickingMode.team ? (\n        <GroupSelection\n          width={width}\n          height={height}\n          onSelect={e => {\n            setSelectedTeamId(e);\n            setCurrentPostPickingMode(postPickingMode.channel);\n          }}\n        />\n      ) : null}\n      {currentPostPickingMode === postPickingMode.channel ? (\n        <ChannelSelection\n          width={width}\n          height={height}\n          teamId={selectedTeamId}\n          onSelect={e => {\n            setSelectedChannelId(e);\n            setCurrentPostPickingMode(postPickingMode.post);\n          }}\n          onBack={() => {\n            setSelectedChannelId('');\n            setSelectedTeamId('');\n            setCurrentPostPickingMode(postPickingMode.team);\n          }}\n        />\n      ) : null}\n      {currentPostPickingMode === postPickingMode.post ? (\n        <PostSelection\n          width={width}\n          height={height}\n          teamId={selectedTeamId}\n          channelId={selectedChannelId}\n          selectedPostId={selectedPostId}\n          onSelect={setSelectedPostId}\n          onBack={() => {\n            setSelectedPostId('');\n            setSelectedChannelId('');\n            setCurrentPostPickingMode(postPickingMode.channel);\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction GroupSelection({\n  width,\n  height,\n  onSelect,\n}: {\n  width: number;\n  height: number;\n  onSelect: (item: string) => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [groupsState, setGroupsState] = useState(loadingStateEnum.loading);\n  const [groups, setGroups] = useState<groupType[]>([]);\n  async function loadData() {\n    const result = await getTeams();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setGroups(result.data);\n    }\n    setGroupsState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {groupsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {groupsState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              {groups.map(group => (\n                <Pressable\n                  key={`Group_${group.id}`}\n                  onPress={() => {\n                    onSelect(group.id);\n                  }}\n                >\n                  <Text>{group.name}</Text>\n                </Pressable>\n              ))}\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Groups</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction ChannelSelection({\n  width,\n  height,\n  teamId,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  teamId: string;\n  onSelect: (item: string) => void;\n  onBack: () => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [channelState, setChannelState] = useState(loadingStateEnum.loading);\n  const [channels, setChannels] = useState<channelType[]>([]);\n  async function loadData() {\n    const result = await getChannels(teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setChannels(result.data);\n    }\n    setChannelState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {channelState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {channelState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              <Pressable onPress={() => onBack()}>\n                <Text>Back</Text>\n              </Pressable>\n              {channels.map(channel => (\n                <Pressable\n                  key={`Channel_${channel.id}`}\n                  onPress={() => {\n                    onSelect(channel.id);\n                  }}\n                  style={{ width, alignItems: 'center' }}\n                >\n                  <Text>{channel.displayName}</Text>\n                </Pressable>\n              ))}\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Channels</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PostSelection({\n  width,\n  height,\n  teamId,\n  channelId,\n  selectedPostId,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  teamId: string;\n  channelId: string;\n  selectedPostId: string;\n  onSelect: (item: string) => void;\n  onBack: () => void;\n}) {\n  const [backLink, setBackLink] = useState(undefined);\n  const [nextLink, setNextLink] = useState(undefined);\n  const [postsState, setPostsState] = useState(loadingStateEnum.loading);\n  const [posts, setPosts] = useState<resourceDataType[]>([]);\n  async function loadData() {\n    const result = await getPosts(teamId, channelId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setPosts(result.data);\n    }\n    setPostsState(result.result);\n  }\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {postsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.3 : height * 0.3}\n            height={width < height ? width * 0.3 : height * 0.3}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {postsState === loadingStateEnum.success ? (\n            <ScrollView style={{ width, height }}>\n              <Pressable onPress={() => onBack()}>\n                <Text>Back</Text>\n              </Pressable>\n              <FlatList\n                data={posts}\n                renderItem={post => (\n                  <>\n                    {post.item.body !== '<systemEventMessage/>' ? (\n                      <Pressable\n                        key={`Post_${post.item.id}`}\n                        onPress={() => {\n                          onSelect(post.item.id);\n                        }}\n                        style={{\n                          padding: 5,\n                          margin: 5,\n                          backgroundColor:\n                            selectedPostId === post.item.id\n                              ? Colors.lightGray\n                              : Colors.white,\n                        }}\n                      >\n                        <WebViewCross\n                          html={post.item.body}\n                          width={width * 0.9}\n                        />\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              />\n            </ScrollView>\n          ) : (\n            <View style={{ width, height }}>\n              <Text>Failed To Get Posts</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction CommissionSubmissions({\n  commissionId,\n  width,\n  height,\n}: {\n  commissionId: string;\n  width: number;\n  height: number;\n}) {\n  // Loading State\n  const [submissiosState, setSubmissionsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const [submissions, setSubmissions] = useState<submissionType[]>([]);\n  const [selectedSubmissionMode, setSelectedSubmissionMode] =\n    useState<submissionTypeEnum>(submissionTypeEnum.unApproved);\n\n  const [selectedSubmission, setSelectedSubmisson] = useState<\n    submissionType | undefined\n  >(undefined);\n\n  async function loadData() {\n    setSubmissionsState(loadingStateEnum.loading);\n    const result = await getSubmissions(commissionId, selectedSubmissionMode);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSubmissions(result.data);\n      setSubmissionsState(result.result);\n      if (result.count === 0) {\n        const secondResult = await getSubmissions(\n          commissionId,\n          submissionTypeEnum.unApproved,\n        );\n        if (\n          secondResult.result === loadingStateEnum.success &&\n          secondResult.data !== undefined\n        ) {\n          setSubmissions(result.data);\n          setSubmissionsState(secondResult.result);\n        }\n      }\n    } else {\n      setSubmissionsState(result.result);\n    }\n  }\n  useEffect(() => {\n    loadData();\n  }, [selectedSubmissionMode]);\n  return (\n    <>\n      {submissiosState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {submissiosState === loadingStateEnum.success ? (\n            <View style={{ width, height }}>\n              <View style={{ flexDirection: 'row' }}>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.all)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>All</Text>\n                </Pressable>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.unApproved)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>Unapproved</Text>\n                </Pressable>\n                <Pressable\n                  onPress={() =>\n                    setSelectedSubmissionMode(submissionTypeEnum.approved)\n                  }\n                  style={{ marginLeft: 'auto', marginRight: 'auto' }}\n                >\n                  <Text>Approved</Text>\n                </Pressable>\n              </View>\n              <FlatList\n                data={submissions}\n                renderItem={submission => (\n                  <Pressable\n                    style={{ margin: 10 }}\n                    onPress={() => setSelectedSubmisson(submission.item)}\n                  >\n                    <Text>{submission.item.userName}</Text>\n                    <Text>\n                      {new Date(\n                        submission.item.submissionTime,\n                      ).toLocaleDateString('en-US', {\n                        weekday: 'long',\n                        year: 'numeric',\n                        month: 'long',\n                        day: 'numeric',\n                        hour: 'numeric',\n                        minute: 'numeric',\n                        second: 'numeric',\n                      })}\n                    </Text>\n                  </Pressable>\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Failed To Load Submissions</Text>\n            </View>\n          )}\n        </>\n      )}\n      {selectedSubmission !== undefined ? (\n        <SubmissionView\n          width={width}\n          height={height}\n          setSubmissionData={() => {}}\n          submissionData={selectedSubmission}\n          onClose={() => setSelectedSubmisson(undefined)}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction SubmissionView({\n  width,\n  height,\n  submissionData,\n  onClose,\n  setSubmissionData,\n}: {\n  width: number;\n  height: number;\n  submissionData: submissionType;\n  onClose: () => void;\n  setSubmissionData: (item: submissionType) => void;\n}) {\n  const [changeState, setChangeState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [imageState, setImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [imageUri, setImageUri] = useState<string>('');\n  const [imageHeight, setImageHeight] = useState<number>(0);\n\n  async function changeSubmissionApproved() {\n    setChangeState(loadingStateEnum.loading);\n    const data = {\n      fields: {\n        submissionApproved: !submissionData.approved,\n        submissionReviewed: true,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.commissionSubmissionsListId}/items/${\n        submissionData.itemId\n      }`,\n      'PATCH',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      setChangeState(loadingStateEnum.success);\n    } else {\n      setChangeState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadImage() {\n    if (submissionData.submissionImage !== undefined) {\n      setImageState(loadingStateEnum.loading);\n      const shareResult = await getFileWithShareID(\n        submissionData.submissionImage,\n      );\n      if (\n        shareResult.result === loadingStateEnum.success &&\n        shareResult.url !== undefined\n      ) {\n        setImageUri(shareResult.url);\n        setImageState(shareResult.result);\n        Image.getSize(\n          shareResult.url,\n          (imageMeasureWidth, imageMeasureHeight) => {\n            const heightPerWidth = imageMeasureHeight / imageMeasureWidth;\n            setImageHeight(width * 0.7 * heightPerWidth);\n          },\n        );\n      }\n      setImageState(shareResult.result);\n    }\n  }\n\n  useEffect(() => {\n    loadImage();\n  }, []);\n\n  return (\n    <View\n      style={{\n        width: width * 0.8,\n        height: height * 0.8,\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n        position: 'absolute',\n        left: width * 0.1,\n        top: height * 0.1,\n        zIndex: 2,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Pressable onPress={() => onClose()} style={{ margin: 10 }}>\n        <CloseIcon width={12} height={12} />\n      </Pressable>\n      <View\n        style={{\n          width: width * 0.8,\n          alignContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text>Submission</Text>\n        <Text>By: {submissionData.userName}</Text>\n        <Text>\n          Time:{' '}\n          {new Date(submissionData.submissionTime).toLocaleDateString('en-US', {\n            weekday: 'long',\n            year: 'numeric',\n            month: 'long',\n            day: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            second: 'numeric',\n          })}\n        </Text>\n        <Text>Approved: {submissionData.approved ? 'TURE' : 'FALSE'}</Text>\n        <Text>Reviewed: {submissionData.reviewed ? 'TRUE' : 'FALSE'}</Text>\n        <Text>Id: {submissionData.id}</Text>\n        {submissionData.submissionImage ? (\n          <>\n            {imageState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width: width * 0.8,\n                  height: height * 0.8,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={\n                    width * 0.8 < height * 0.8 ? width * 0.3 : height * 0.3\n                  }\n                  height={\n                    width * 0.8 < height * 0.8 ? width * 0.3 : height * 0.3\n                  }\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {imageState === loadingStateEnum.success ? (\n                  <Image\n                    source={{ uri: imageUri }}\n                    width={width * 0.7}\n                    resizeMode=\"center\"\n                    style={{\n                      width: width * 0.7,\n                      height: imageHeight,\n                      marginLeft: 'auto',\n                      marginRight: 'auto',\n                      alignContent: 'center',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                      backgroundColor: '#FFFFFF',\n                      shadowOffset: { width: 0, height: 1 },\n                      shadowOpacity: 0.8,\n                      shadowRadius: 10,\n                      borderRadius: 15,\n                    }}\n                  />\n                ) : (\n                  <Text>Failed to load image</Text>\n                )}\n              </>\n            )}\n          </>\n        ) : null}\n      </View>\n      <Pressable onPress={() => changeSubmissionApproved()}>\n        <Text>\n          {changeState === loadingStateEnum.notStarted\n            ? submissionData.approved\n              ? 'REMOVE APPROVAL'\n              : 'APPROVE'\n            : changeState === loadingStateEnum.loading\n            ? 'Loading'\n            : changeState === loadingStateEnum.success\n            ? 'Success'\n            : 'Failed'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { dataContentTypeOptions, loadingStateEnum } from '../../types';\nimport getFileWithShareID from '../ultility/getFileWithShareID';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getSportsContent(\n  team?: string,\n): Promise<{ result: loadingStateEnum; sports?: sportPost[] }> {\n  const filter = team ? `&$filter=fields/selectedTeamId%20eq%20'${team}'` : '';\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsApprovedSubmissionsListId\n    }/items?expand=fields($select=fileId,caption,selectedSportId,selectedTeamId)${filter}&$select=id`,\n  );\n  if (result.ok) {\n    const dataResult = await result.json();\n    if (dataResult.value.length !== undefined) {\n      const newSportsPosts: sportPost[] = [];\n      const shareResultsPromise: Promise<{\n        result: loadingStateEnum;\n        url?: string | undefined;\n        contentType?: dataContentTypeOptions | undefined;\n      }>[] = [];\n      for (let index = 0; index < dataResult.value.length; index += 1) {\n        shareResultsPromise.push(\n          getFileWithShareID(dataResult.value[index].fields.fileId),\n        );\n      }\n      const shareResults: {\n        result: loadingStateEnum;\n        url?: string | undefined;\n        contentType?: dataContentTypeOptions | undefined;\n      }[] = await Promise.all(shareResultsPromise);\n      for (let index = 0; index < shareResults.length; index += 1) {\n        const { url } = shareResults[index];\n        const fileType = shareResults[index].contentType;\n        if (\n          shareResults[index].result === loadingStateEnum.success &&\n          fileType !== undefined &&\n          url !== undefined\n        ) {\n          newSportsPosts.push({\n            caption: dataResult.value[index].fields.caption,\n            fileID: url,\n            fileType,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      return { result: loadingStateEnum.success, sports: newSportsPosts };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  const data = await result.json();\n  return { result: loadingStateEnum.failed };\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport async function getSports(): Promise<{\n  result: loadingStateEnum;\n  data?: sportType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsListId\n    }/items?expand=fields($select=sportName,sportId,sportSvg)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const resultData: sportType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          name: data.value[index].fields.sportName,\n          id: data.value[index].fields.sportId,\n          svgData: data.value[index].fields.sportSvg,\n        });\n      }\n      return { result: loadingStateEnum.success, data: resultData };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getSportsTeams(\n  sportId: string,\n): Promise<{ result: loadingStateEnum; data?: sportTeamType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${sportId}/items?expand=fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value !== null && data.value !== undefined) {\n      const resultData: sportTeamType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        resultData.push({\n          teamName: data.value[index].fields.teamName,\n          season: data.value[index].fields.season,\n          teamId: data.value[index].fields.teamId,\n        });\n      }\n      return { result: loadingStateEnum.success, data: resultData };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport batchRequest from '../ultility/batchRequest';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getRoster(\n  teamId: string,\n): Promise<{ result: loadingStateEnum; data?: rosterType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${teamId}/items?$expand=fields($select=playerId,position,playerNumber,posts,imageShareId)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const batchData: { id: string; method: 'GET' | 'POST'; url: string }[][] =\n      [];\n    let batchIndex = -1;\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (index % 20 === 0) {\n        batchIndex += 1;\n        batchData.push([]);\n      }\n      batchData[batchIndex].push({\n        id: (index + 1 - 20 * batchIndex).toString(),\n        method: 'GET',\n        url: `/users/${data.value[index].fields.playerId}`,\n      });\n    }\n    const batchResult = await batchRequest(batchData);\n    if (\n      batchResult.result === loadingStateEnum.success &&\n      batchResult.data !== undefined\n    ) {\n      const outUsers: microsoftUserType[] = [];\n      for (let index = 0; index < batchResult.data.length; index += 1) {\n        if (batchResult.data[index].status === 200) {\n          // TO DO check okay response code\n          outUsers.push({\n            id: batchResult.data[index].body.id,\n            displayName: batchResult.data[index].body.displayName,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      const outputRosters: rosterType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        const userData = outUsers.find(e => {\n          return e.id === data.value[index].fields.playerId;\n        });\n        if (userData !== undefined) {\n          outputRosters.push({\n            name: userData.displayName,\n            id: data.value[index].fields.playerId,\n            imageShareId: data.value[index].fields.imageShareId,\n            position: data.value[index].fields.position,\n            playerNumber: data.value[index].fields.playerNumber,\n            posts:\n              data.value[index].fields.posts !== undefined\n                ? JSON.parse(data.value[index].fields.posts)\n                : undefined,\n          });\n        } else {\n          return { result: loadingStateEnum.failed };\n        }\n      }\n      return { result: loadingStateEnum.success, data: outputRosters };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text } from 'react-native';\nimport React from 'react';\n\nexport default function SVGXml({\n  xml,\n  height,\n  width,\n}: {\n  xml: string;\n  width: number;\n  height: number;\n}) {\n  return (\n    <View style={{ height, width }}>\n      <div dangerouslySetInnerHTML={{ __html: xml }} />\n    </View>\n  );\n}\n","import { ResizeMode, Video } from 'expo-av';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport {\n  View,\n  Text,\n  Image,\n  ScrollView,\n  Pressable,\n  FlatList,\n} from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../Redux/store';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport getSportsContent from '../Functions/sports/getSportsContent';\nimport createUUID from '../Functions/ultility/createUUID';\nimport { getSports, getSportsTeams } from '../Functions/sports/sportsFunctions';\nimport getRoster from '../Functions/sports/getRoster';\nimport getFileWithShareID from '../Functions/ultility/getFileWithShareID';\nimport SegmentedPicker from '../UI/Pickers/SegmentedPicker';\nimport SVGXml from '../UI/SVGXml/SVGXml';\nimport BackButton from '../UI/BackButton';\nimport ProgressView from '../UI/ProgressView';\nimport { Colors, dataContentTypeOptions, loadingStateEnum } from '../types';\n\nexport default function Sports() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [sportsPosts, setSportsPosts] = useState<sportPost[]>([]);\n  const [loadingResult, setLoadingResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [sportsState, setSportsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [teamsState, setTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedSport, setSelectedSport] = useState<sportType | undefined>(\n    undefined,\n  );\n  const [selectedTeam, setSelectedTeam] = useState<sportTeamType | undefined>(\n    undefined,\n  );\n  const [isShowingTeams, setIsShowingTeams] = useState<boolean>(false);\n  const [sports, setSports] = useState<sportType[]>([]);\n  const [isShowingRoster, setIsShowingRoster] = useState<boolean>(false);\n  const [sportsTeams, setSportsTeams] = useState<sportTeamType[]>([]);\n  const [sportsSelectHeight, setSportsSelectHeight] = useState<number>(34);\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n\n  async function loadSports() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSports(result.data);\n    }\n    setSportsState(result.result);\n  }\n\n  async function loadTeams(sport: sportType) {\n    const result = await getSportsTeams(sport.id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSportsTeams(result.data);\n    }\n    setTeamsState(result.result);\n  }\n\n  async function loadSportsContent() {\n    const result = await getSportsContent(selectedTeam?.teamId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.sports !== undefined\n    ) {\n      setSportsPosts(result.sports);\n    }\n    setLoadingResult(result.result);\n  }\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n    loadSports();\n  }, []);\n\n  useEffect(() => {\n    loadSportsContent();\n  }, [selectedTeam]);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        backgroundColor: Colors.white,\n        overflow: 'hidden',\n      }}\n    >\n      <View\n        style={{\n          height: height * 0.1,\n          width,\n          backgroundColor: Colors.darkGray,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {currentBreakPoint <= 0 ? <BackButton to=\"/\" /> : null}\n        <Text\n          style={{\n            fontFamily: 'BukhariScript',\n            color: 'white',\n            fontSize: height * 0.06,\n          }}\n        >\n          Sports\n        </Text>\n      </View>\n      <ScrollView\n        style={{\n          height: isShowingTeams ? height * 0.1 : sportsSelectHeight,\n          width,\n        }}\n        horizontal\n      >\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            <>\n              {sportsState === loadingStateEnum.loading ? (\n                <View\n                  style={{\n                    width: isShowingTeams ? height * 0.05 : height * 0.1,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <ProgressView width={15} height={15} />\n                </View>\n              ) : (\n                <>\n                  {sportsState === loadingStateEnum.success ? (\n                    <>\n                      <Pressable\n                        style={{\n                          backgroundColor: Colors.darkGray,\n                          borderWidth: selectedSport === undefined ? 3 : 0,\n                          borderColor: 'black',\n                          borderRadius: 15,\n                          alignContent: 'center',\n                          alignItems: 'center',\n                          justifyContent: 'center',\n                          marginLeft: 3,\n                          marginTop: 3,\n                        }}\n                        onPress={() => {\n                          setSelectedTeam(undefined);\n                          setSportsTeams([]);\n                          setSelectedSport(undefined);\n                          setIsShowingRoster(false);\n                          setIsShowingTeams(false);\n                        }}\n                      >\n                        <Text\n                          style={{\n                            margin: isShowingTeams ? 5 : 10,\n                            color: Colors.white,\n                            marginBottom: isShowingTeams ? 5 : 10,\n                          }}\n                        >\n                          Highlights\n                        </Text>\n                      </Pressable>\n                      {sports.map(sport => (\n                        <Pressable\n                          key={`SportButton_${sport.id}`}\n                          onLayout={e => {\n                            setSportsSelectHeight(e.nativeEvent.layout.height);\n                          }}\n                          onPress={() => {\n                            setSelectedSport(sport);\n                            loadTeams(sport);\n                            setIsShowingTeams(true);\n                            setIsShowingRoster(false);\n                          }}\n                          style={{\n                            backgroundColor: Colors.darkGray,\n                            borderWidth: selectedSport?.id === sport.id ? 3 : 0,\n                            borderColor: 'black',\n                            borderRadius: 15,\n                            alignContent: 'center',\n                            alignItems: 'center',\n                            justifyContent: 'center',\n                            marginLeft: 3,\n                            marginTop: 3,\n                          }}\n                        >\n                          <View\n                            style={{\n                              flexDirection: 'row',\n                              alignContent: 'center',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              marginLeft: 10,\n                            }}\n                          >\n                            <SVGXml\n                              xml={sport.svgData}\n                              width={20}\n                              height={20}\n                            />\n                            <View style={{ marginLeft: 4 }}>\n                              <Text\n                                style={{\n                                  margin: isShowingTeams ? 5 : 10,\n                                  marginLeft: 2,\n                                  color: Colors.white,\n                                  marginBottom:\n                                    sport.id === selectedSport?.id &&\n                                    selectedTeam !== undefined &&\n                                    !isShowingTeams\n                                      ? 0\n                                      : isShowingTeams\n                                      ? 5\n                                      : 10,\n                                }}\n                              >\n                                {sport.name}\n                              </Text>\n                              {sport.id === selectedSport?.id &&\n                              selectedTeam !== undefined &&\n                              !isShowingTeams ? (\n                                <View>\n                                  <Text\n                                    style={{\n                                      color: Colors.white,\n                                      marginBottom: 5,\n                                      marginLeft: 2,\n                                      marginRight: 10,\n                                    }}\n                                  >\n                                    {selectedTeam?.teamName}\n                                  </Text>\n                                </View>\n                              ) : null}\n                            </View>\n                          </View>\n                        </Pressable>\n                      ))}\n                    </>\n                  ) : (\n                    <View>\n                      <Text>Failed</Text>\n                    </View>\n                  )}\n                </>\n              )}\n            </>\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {isShowingTeams ? (\n              <>\n                {sportsState === loadingStateEnum.loading ? (\n                  <View\n                    style={{\n                      width,\n                      height: height * 0.05,\n                      alignContent: 'center',\n                      alignItems: 'center',\n                      justifyContent: 'center',\n                    }}\n                  >\n                    <ProgressView width={15} height={15} />\n                  </View>\n                ) : (\n                  <>\n                    {sportsState === loadingStateEnum.success ? (\n                      <>\n                        {sportsTeams.map(team => (\n                          <Pressable\n                            key={`SportTeam_${team.teamId}`}\n                            onPress={() => {\n                              setSelectedTeam(team);\n                              setIsShowingTeams(false);\n                              setIsShowingRoster(false);\n                            }}\n                            style={{\n                              backgroundColor: Colors.darkGray,\n                              borderRadius: 15,\n                              alignContent: 'center',\n                              alignItems: 'center',\n                              justifyContent: 'center',\n                              marginLeft: 3,\n                              marginTop: 3,\n                            }}\n                          >\n                            <Text style={{ margin: 5, color: Colors.white }}>\n                              {team.teamName}\n                            </Text>\n                          </Pressable>\n                        ))}\n                      </>\n                    ) : (\n                      <Text>Failed to load Sports</Text>\n                    )}\n                  </>\n                )}\n              </>\n            ) : null}\n          </View>\n        </View>\n      </ScrollView>\n      {loadingResult === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height:\n              height * 0.8 +\n              (isShowingTeams ? 0 : height * 0.1 - sportsSelectHeight),\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView\n            width={width < height ? width * 0.25 : height * 0.25}\n            height={width < height ? width * 0.5 : height * 0.5}\n          />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingResult === loadingStateEnum.success ? (\n            <ScrollView style={{ height: height * 0.8 }}>\n              {selectedTeam !== undefined ? (\n                <View style={{ marginLeft: 5, marginRight: 10, marginTop: 10 }}>\n                  <SegmentedPicker\n                    selectedIndex={isShowingRoster ? 1 : 0}\n                    setSelectedIndex={e => {\n                      if (e === 0) {\n                        setIsShowingRoster(false);\n                      } else if (e === 1) {\n                        setIsShowingRoster(true);\n                      }\n                    }}\n                    options={['Highlights', 'Roster']}\n                    width={width - 16}\n                    height={25}\n                  />\n                </View>\n              ) : null}\n              {isShowingRoster && selectedTeam !== undefined ? (\n                <RosterView\n                  teamId={selectedTeam.teamId}\n                  width={width}\n                  height={height * 0.7}\n                />\n              ) : (\n                <>\n                  {sportsPosts.map(item => (\n                    <View\n                      key={`Sport_${item.fileID}`}\n                      style={{ marginTop: height * 0.05 }}\n                    >\n                      {item.fileType === dataContentTypeOptions.image ? (\n                        <View\n                          style={{\n                            width: width * 0.9,\n                            height: height * 0.4,\n                            backgroundColor: '#FFFFFF',\n                            shadowColor: 'black',\n                            shadowOffset: { width: 1, height: 1 },\n                            shadowOpacity: 1,\n                            shadowRadius: 5,\n                            marginLeft: width * 0.05,\n                            marginRight: width * 0.05,\n                            borderRadius: 15,\n                          }}\n                        >\n                          <Text\n                            style={{\n                              position: 'absolute',\n                              left: 5,\n                              bottom: 5,\n                              zIndex: 100,\n                            }}\n                          >\n                            {item.caption}\n                          </Text>\n                          <Image\n                            style={{\n                              width: width * 0.9,\n                              height: height * 0.4,\n                              marginLeft: width * 0.05,\n                              marginRight: width * 0.05,\n                              borderRadius: 15,\n                            }}\n                            source={{ uri: item.fileID }}\n                          />\n                        </View>\n                      ) : null}\n                      {item.fileType === dataContentTypeOptions.video ? (\n                        <View\n                          style={{\n                            width: width * 0.9,\n                            height: height * 0.4,\n                            backgroundColor: '#FFFFFF',\n                            shadowColor: 'black',\n                            shadowOffset: { width: 1, height: 1 },\n                            shadowOpacity: 1,\n                            shadowRadius: 5,\n                            marginLeft: width * 0.05,\n                            marginRight: width * 0.05,\n                            borderRadius: 15,\n                          }}\n                        >\n                          <Text\n                            style={{\n                              position: 'absolute',\n                              left: 5,\n                              bottom: 5,\n                              zIndex: 100,\n                            }}\n                          >\n                            {item.caption}\n                          </Text>\n                          <Video\n                            useNativeControls\n                            source={{ uri: item.fileID }}\n                            resizeMode={ResizeMode.COVER}\n                            style={{\n                              width: width * 0.9,\n                              height: height * 0.4,\n                              alignSelf: 'stretch',\n                              borderRadius: 15,\n                            }}\n                            videoStyle={{\n                              width: width * 0.9,\n                              height: height * 0.4,\n                            }}\n                          />\n                        </View>\n                      ) : null}\n                    </View>\n                  ))}\n                </>\n              )}\n            </ScrollView>\n          ) : (\n            <View>\n              <Text>Something went wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n\nfunction RosterView({\n  teamId,\n  width,\n  height,\n}: {\n  teamId: string;\n  width: number;\n  height: number;\n}) {\n  const [rosterLoadingState, setRosterLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [roster, setRoster] = useState<rosterType[]>([]);\n\n  async function loadRoster() {\n    const result = await getRoster(teamId);\n    console.log(result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRoster(result.data);\n    }\n    setRosterLoadingState(result.result);\n  }\n\n  useEffect(() => {\n    loadRoster();\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      {rosterLoadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <ProgressView width={width * 0.1} height={height * 0.1} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {rosterLoadingState === loadingStateEnum.success ? (\n            <View>\n              <View\n                style={{ flexDirection: 'row', marginTop: 10, marginBottom: 5 }}\n              >\n                <Text style={{ marginLeft: 35, width: width * 0.4 }}>\n                  Player\n                </Text>\n                <Text style={{ width: width * 0.3 }}>Player Number</Text>\n                <Text>Position</Text>\n              </View>\n              <FlatList\n                data={roster}\n                renderItem={item => (\n                  <View\n                    style={{\n                      backgroundColor:\n                        item.index % 2 === 0 ? Colors.white : Colors.lightGray,\n                    }}\n                  >\n                    <View style={{ flexDirection: 'row', margin: 10 }}>\n                      <RosterImage id={item.item.imageShareId} />\n                      <Text style={{ marginLeft: 5, width: width * 0.4 }}>\n                        {item.item.name}\n                      </Text>\n                      {item.item.playerNumber !== undefined ? (\n                        <Text style={{ width: width * 0.3 }}>\n                          {item.item.playerNumber}\n                        </Text>\n                      ) : null}\n                      {item.item.position !== undefined ? (\n                        <Text>{item.item.position}</Text>\n                      ) : null}\n                    </View>\n                  </View>\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Something went wrong loading the roster</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction RosterImage({ id }: { id?: string }) {\n  const [imageUrl, setImageUrl] = useState<string>('');\n  const [imageState, setImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  async function loadData(imageId: string) {\n    setImageState(loadingStateEnum.loading);\n    const result = await getFileWithShareID(imageId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.url !== undefined\n    ) {\n      setImageUrl(result.url);\n      setImageState(loadingStateEnum.success);\n    } else {\n      setImageState(loadingStateEnum.failed);\n    }\n  }\n  useEffect(() => {\n    if (id !== undefined) {\n      loadData(id);\n    }\n  }, [id]);\n\n  return (\n    <>\n      {imageState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width: 20,\n            height: 20,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={14} height={14} />\n        </View>\n      ) : (\n        <>\n          {imageState === loadingStateEnum.success ? (\n            <View>\n              <Image\n                source={{ uri: imageUrl }}\n                style={{ width: 20, height: 20, borderRadius: 10 }}\n              />\n            </View>\n          ) : (\n            <>\n              {imageState === loadingStateEnum.notStarted ? (\n                <View style={{ width: 20, height: 20 }} />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","//\n//  DayView.tsx\n//  Pauly\n//\n//  Created by Andrew Mainella on 2023-07-21.\n//\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { View, ScrollView, useColorScheme, Text } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport {\n  calculateIfShowing,\n  computeEventHeight,\n  findTimeOffset,\n  isDateToday,\n} from '../../Functions/calendar/calendarFunctions';\nimport { RootState } from '../../Redux/store';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum } from '../../types';\nimport { getClassEventsFromDay } from '../../Functions/classesFunctions';\n\nexport default function DayView({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const colorScheme = useColorScheme();\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const [heightOffsetTop, setHeightOffsetTop] = useState<number>(0);\n  const [currentMinuteInt, setCurrentMinuteInt] = useState<number>(0);\n  const [currentTime, setCurrentTime] = useState<string>('12:00');\n  const [isShowingTime, setIsShowingTime] = useState<boolean>(true);\n  const [hourLength, setHourLength] = useState<number>(0);\n  const hoursText: string[] = [\n    '12AM',\n    '1AM',\n    '2AM',\n    '3AM',\n    '4AM',\n    '5AM',\n    '6AM',\n    '7AM',\n    '8AM',\n    '9AM',\n    '10AM',\n    '11AM',\n    '12PM',\n    '1PM',\n    '2PM',\n    '3PM',\n    '4PM',\n    '5PM',\n    '6PM',\n    '7PM',\n    '8PM',\n    '9PM',\n    '10PM',\n    '11PM',\n  ];\n  const mainScrollRef = useRef<ScrollView>(null);\n  const [eventsPane, setEventsPane] = useState<number[][]>([[]]); // This is a sorted 2d array for calculating the horizintal shift of an event\n  const [schoolEvents, setSchoolEvents] = useState<eventType[]>();\n\n  function setCurrentTimeFunction(hour: number, minuite: number) {\n    if (minuite.toString().length == 1) {\n      if (hour == 12) {\n        setCurrentTime(`12:0${minuite.toString()}`);\n      } else {\n        setCurrentTime(`${(hour % 12).toString()}:0${minuite.toString()}`);\n      }\n    } else if (hour == 12) {\n      setCurrentTime(`12:${minuite}`);\n    } else {\n      setCurrentTime(`${(hour % 12).toString()}:${minuite.toString()}`);\n    }\n  }\n\n  function loadCalendarContent() {\n    const currentDate = new Date();\n    const resultHeightTopOffset = findTimeOffset(currentDate, height);\n    setHeightOffsetTop(resultHeightTopOffset);\n    const minuiteInt: number = currentDate.getMinutes();\n    setCurrentMinuteInt(minuiteInt);\n    const hourInt = currentDate.getHours();\n    setCurrentTimeFunction(hourInt, minuiteInt);\n    mainScrollRef.current?.scrollTo({\n      x: 0,\n      y: resultHeightTopOffset,\n      animated: false,\n    });\n  }\n\n  function updateOnTimeChange() {\n    const minuiteInt = new Date().getMinutes();\n    if (currentMinuteInt != minuiteInt!) {\n      setCurrentMinuteInt(minuiteInt);\n\n      const hourInt = new Date().getHours();\n      if (minuiteInt.toString().length == 1) {\n        setCurrentTimeFunction(hourInt, minuiteInt);\n      } else {\n        setCurrentTimeFunction(hourInt, minuiteInt);\n      }\n      setHeightOffsetTop(findTimeOffset(new Date(), height));\n    }\n  }\n\n  // https://stackoverflow.com/questions/65049812/how-to-call-a-function-every-minute-in-a-react-component\n  // Upadtes every second\n  useEffect(() => {\n    const interval = setInterval(() => {\n      updateOnTimeChange();\n    }, 1000);\n\n    return () => clearInterval(interval); // This represents the unmount function, in which you need to clear your interval to prevent memory leaks.\n  }, []);\n\n  useEffect(() => {\n    setHourLength(height * 0.1);\n    loadCalendarContent();\n  }, []);\n\n  async function getClassesEvents() {\n    const result = await getClassEventsFromDay();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setSchoolEvents(result.data);\n    }\n  }\n\n  useEffect(() => {\n    getClassesEvents();\n  }, [selectedDate]);\n\n  return (\n    <ScrollView\n      style={{ height, width, backgroundColor: Colors.white }}\n      ref={mainScrollRef}\n    >\n      <>\n        {isShowingTime ? (\n          <>\n            {hoursText.map(value => (\n              <View\n                key={`${value}_${createUUID()}`}\n                style={{ flexDirection: 'row', height: hourLength }}\n              >\n                {calculateIfShowing(value, new Date(selectedDate)) ? (\n                  <Text\n                    style={{\n                      color: colorScheme == 'dark' ? Colors.white : 'black',\n                    }}\n                  >\n                    {value}\n                  </Text>\n                ) : null}\n                <View\n                  style={{\n                    backgroundColor: 'black',\n                    width: width * 0.9,\n                    height: 6,\n                    position: 'absolute',\n                    right: 0,\n                    borderRadius: 25,\n                  }}\n                />\n              </View>\n            ))}\n          </>\n        ) : null}\n      </>\n      {currentEvents.map(event => (\n        <>\n          {event.allDay ||\n          new Date(event.endTime).getFullYear() !==\n            new Date(selectedDate).getFullYear() ||\n          new Date(event.endTime).getMonth() !==\n            new Date(selectedDate).getMonth() ||\n          new Date(event.endTime).getDate() !==\n            new Date(selectedDate).getDate() ? null : (\n            <EventBlock\n              event={event}\n              width={width}\n              height={height}\n              eventPane={eventsPane}\n              setEventPane={setEventsPane}\n            />\n          )}\n        </>\n      ))}\n      {schoolEvents?.map(event => (\n        <EventBlock\n          event={event}\n          width={width}\n          height={height}\n          eventPane={eventsPane}\n          setEventPane={setEventsPane}\n        />\n      ))}\n      {new Date(selectedDate).getDate() === new Date().getDate() &&\n      new Date(selectedDate).getMonth() === new Date().getMonth() &&\n      new Date(selectedDate).getFullYear() === new Date().getFullYear() ? (\n        <View\n          style={{\n            position: 'absolute',\n            top: heightOffsetTop,\n            height: height * 0.005,\n            width,\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}\n        >\n          <Text style={{ color: 'red', zIndex: 2 }}>{currentTime}</Text>\n          <View\n            style={{\n              backgroundColor: 'red',\n              width: width * 0.914,\n              height: 6,\n              position: 'absolute',\n              right: 0,\n            }}\n          />\n        </View>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nfunction EventBlock({\n  event,\n  width,\n  height,\n  eventPane,\n  setEventPane,\n}: {\n  event: eventType;\n  width: number;\n  height: number;\n  eventPane: number[][];\n  setEventPane: (item: number[][]) => void;\n}) {\n  const EventHeight = computeEventHeight(\n    new Date(event.startTime),\n    new Date(event.endTime),\n    height,\n  );\n  const Offset = findTimeOffset(new Date(event.startTime), height);\n  const [horizontalShift, setHorizontalShift] = useState<number>(0);\n  function calculateHorizontalShift() {\n    let handeled = false;\n    for (\n      let horizontalCheck = 0;\n      horizontalCheck < eventPane.length;\n      horizontalCheck += 1\n    ) {\n      const beforeIndex = eventPane[horizontalCheck].findIndex(\n        e => e >= Offset,\n      );\n      if (beforeIndex !== -1) {\n        if (beforeIndex - 1 < eventPane[horizontalCheck].length) {\n          if (eventPane[horizontalCheck][beforeIndex - 1] <= Offset) {\n            // Fail Check Next Hoizontal Array\n            continue;\n          } else {\n            // Everything Checks Out\n            const afterIndex = eventPane[horizontalCheck].findIndex(\n              e => e >= Offset + EventHeight,\n            );\n            if (afterIndex !== -1) {\n              if (afterIndex - 1 < eventPane[horizontalCheck].length) {\n                if (\n                  eventPane[horizontalCheck][afterIndex - 1] <=\n                  Offset + EventHeight\n                ) {\n                  // Fails check next horizontal array\n                  continue;\n                } else {\n                  // All Good\n                  eventPane[horizontalCheck].push(Offset);\n                  eventPane[horizontalCheck].push(Offset + EventHeight);\n                  eventPane[horizontalCheck].sort();\n                  handeled = true;\n                  break;\n                }\n              } else {\n                // Error\n                continue;\n              }\n            } else {\n              // All Good\n              const newEvents: number[][] = eventPane;\n              newEvents[horizontalCheck].push(Offset);\n              newEvents[horizontalCheck].push(Offset + EventHeight);\n              // [...eventPane[horizontalCheck], Offset, Offset + EventHeight])\n              eventPane[horizontalCheck].sort();\n              handeled = true;\n              break;\n            }\n          }\n        } else {\n          // Error\n          continue;\n        }\n      } else {\n        eventPane[horizontalCheck].push(Offset);\n        eventPane[horizontalCheck].push(Offset + EventHeight);\n        eventPane[horizontalCheck].sort();\n        handeled = true;\n        break;\n      }\n    }\n\n    if (!handeled) {\n      eventPane.push([]);\n      eventPane[eventPane.length - 1].push(Offset);\n      eventPane[eventPane.length - 1].push(Offset + EventHeight);\n    }\n    setHorizontalShift(width * horizontalCheck);\n  }\n\n  useEffect(() => {\n    calculateHorizontalShift();\n  }, []);\n\n  return (\n    <View\n      key={`Event_${createUUID()}`}\n      style={{\n        width: width * 0.9,\n        height: EventHeight,\n        top: Offset,\n        position: 'absolute',\n        right: 0,\n        borderColor: Colors.maroon,\n        borderLeftWidth: 3,\n      }}\n    >\n      <View\n        style={{\n          width: width * 0.9,\n          height: EventHeight,\n          position: 'absolute',\n          backgroundColor: event.eventColor,\n          opacity: 0.3,\n          zIndex: -1,\n        }}\n      />\n      <Text style={{ opacity: 1 }}>{event.name}</Text>\n      <Text>\n        {new Date(event.startTime).toLocaleString('en-us', {\n          hour: 'numeric',\n          minute: 'numeric',\n        })}{' '}\n        to{' '}\n        {new Date(event.endTime).toLocaleString('en-us', {\n          hour: 'numeric',\n          minute: 'numeric',\n        })}\n      </Text>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport DayView from './DayView';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport { RootState } from '../../Redux/store';\nimport { selectedDateSlice } from '../../Redux/reducers/selectedDateReducer';\nimport { Colors } from '../../types';\nimport { ChevronLeft, ChevronRight } from '../../UI/Icons/Icons';\n\nexport default function Week({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const selectedDateRedux: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  const [daysOfWeek, setDaysOfWeek] = useState<Date[]>([]);\n  const dispatch = useDispatch();\n  function getDOW(selectedDate: Date) {\n    const week: Date[] = [];\n    // Starting Monday not Sunday\n    selectedDate.setDate(selectedDate.getDate() - selectedDate.getDay());\n    for (let i = 0; i < 7; i += 1) {\n      week.push(new Date(selectedDate));\n      selectedDate.setDate(selectedDate.getDate() + 1);\n    }\n    return week;\n  }\n  useEffect(() => {\n    setDaysOfWeek(getDOW(new Date(selectedDateRedux)));\n  }, [selectedDateRedux]);\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View>\n        {/* 768 TO DO get dimentiosn value */}\n        {false ? (\n          <View />\n        ) : (\n          <View>\n            <View\n              style={{\n                flexDirection: 'row',\n                height: width * 0.142857142857143,\n                width,\n              }}\n            >\n              <Pressable\n                style={{ margin: width * 0.01111111111111111 }}\n                onPress={() => {\n                  const d = new Date(selectedDateRedux);\n                  d.setDate(d.getDate() - 7);\n                  dispatch(\n                    selectedDateSlice.actions.setCurrentEventsLastCalled(\n                      d.toISOString(),\n                    ),\n                  );\n                }}\n              >\n                <ChevronLeft\n                  width={width * 0.08888888888888889}\n                  height={width * 0.08888888888888889}\n                />\n              </Pressable>\n              {daysOfWeek.map(day => (\n                <Pressable\n                  onPress={() => {\n                    dispatch(\n                      selectedDateSlice.actions.setCurrentEventsLastCalled(\n                        day.toISOString(),\n                      ),\n                    );\n                  }}\n                  key={`${day.getDay()}_${createUUID()}`}\n                  style={{\n                    width: width * 0.08888888888888889,\n                    height: width * 0.08888888888888889,\n                    margin: width * 0.01111111111111111,\n                    borderRadius: 50,\n                    backgroundColor: Colors.darkGray,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                    borderColor:\n                      day.getDate() === new Date(selectedDateRedux).getDate()\n                        ? 'black'\n                        : Colors.maroon,\n                    borderWidth:\n                      new Date().getDate() === day.getDate() ||\n                      day.getDate() === new Date(selectedDateRedux).getDate()\n                        ? 5\n                        : 0,\n                  }}\n                >\n                  <Text style={{ color: Colors.white }}>{day.getDate()}</Text>\n                </Pressable>\n              ))}\n              <Pressable\n                style={{ margin: width * 0.01111111111111111 }}\n                onPress={() => {\n                  const d = new Date(selectedDateRedux);\n                  d.setDate(d.getDate() + 7);\n                  dispatch(\n                    selectedDateSlice.actions.setCurrentEventsLastCalled(\n                      d.toISOString(),\n                    ),\n                  );\n                }}\n              >\n                <ChevronRight\n                  width={width * 0.08888888888888889}\n                  height={width * 0.08888888888888889}\n                />\n              </Pressable>\n            </View>\n          </View>\n        )}\n      </View>\n      <View\n        style={{\n          height: false ? height : height - width * 0.179,\n          width,\n          alignContent: 'center',\n          alignItems: 'center',\n          backgroundColor: Colors.white,\n        }}\n      >\n        <DayView\n          width={width * 0.95}\n          height={false ? height * 0.757 : height}\n        />\n      </View>\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport { RootState } from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\n\nexport default function SelectTimetable({\n  governmentMode,\n  onSelect,\n}: {\n  governmentMode: boolean;\n  onSelect?: (item: timetableStringType) => void;\n}) {\n  const { timetablesListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [loadedTimetables, setLoadedTimetables] = useState<\n    timetableStringType[]\n  >([]);\n  const navigate = useNavigate();\n\n  async function getTimetables() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${timetablesListId}/items?expand=fields`,\n    );\n    if (result.ok) {\n      const dataResult = await result.json();\n      if (\n        dataResult.value.length !== undefined &&\n        dataResult.value.length !== null\n      ) {\n        const newLoadedTimetables: timetableStringType[] = [];\n        for (let index = 0; index < dataResult.value.length; index += 1) {\n          try {\n            newLoadedTimetables.push({\n              name: dataResult.value[index].fields.timetableName,\n              id: dataResult.value[index].fields.timetableId,\n            });\n          } catch (e) {\n            // TO DO unimportant but this shouldn't be able to happen if this doesn't work most likly invalid data has somehow gotten into the schedule data column of the schedule list\n          }\n        }\n        setLoadedTimetables(newLoadedTimetables);\n        setLoadingState(loadingStateEnum.success);\n      }\n    } else {\n      setLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getTimetables();\n  }, []);\n\n  return (\n    <View>\n      {loadingState === loadingStateEnum.loading ? <Text>Loading</Text> : null}\n      {loadingState === loadingStateEnum.success ? (\n        <View>\n          {loadedTimetables.map(timetable => (\n            <Pressable\n              key={`Timetable_${timetable.id}`}\n              onPress={() => {\n                if (governmentMode) {\n                  navigate(\n                    `/profile/government/calendar/timetable/${timetable.id}`,\n                  );\n                } else if (onSelect !== undefined) {\n                  onSelect(timetable);\n                }\n              }}\n            >\n              <View>\n                <Text>{timetable.name}</Text>\n              </View>\n            </Pressable>\n          ))}\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.failed ? <Text>Failure</Text> : null}\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, ScrollView } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport {\n  getGraphEvents,\n  getTimetable,\n} from '../../Functions/calendar/calendarFunctionsGraph';\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport store, { RootState } from '../../Redux/store';\nimport { loadingStateEnum, semesters } from '../../types';\n\nenum pickSchoolDayMode {\n  schoolYear,\n  schoolDay,\n  schedule,\n  dressCode,\n  semester,\n  dressCodeIncentives,\n}\n\nexport default function SelectSchoolDayData({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const [schoolDayMode, setSchoolDayMode] = useState<pickSchoolDayMode>(\n    pickSchoolDayMode.schoolYear,\n  );\n  const [timetableState, setTimetableState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [timetable, setTimetable] = useState<timetableType | undefined>(\n    undefined,\n  );\n  const { selectedSchoolDayData, selectedSchoolYear } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const dispatch = useDispatch();\n\n  async function loadData(id: string) {\n    setTimetableState(loadingStateEnum.loading);\n    const result = await getTimetable(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.timetable !== undefined\n    ) {\n      setTimetable(result.timetable);\n      setTimetableState(loadingStateEnum.success);\n    } else {\n      setTimetableState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (\n      selectedSchoolYear !== undefined &&\n      timetable === undefined &&\n      selectedSchoolYear.paulyEventData !== undefined\n    ) {\n      loadData(selectedSchoolYear.paulyEventData);\n    }\n  }, [schoolDayMode, selectedSchoolYear]);\n\n  return (\n    <View style={{ width, height }}>\n      {schoolDayMode === pickSchoolDayMode.schoolYear ? (\n        <SchoolYearsSelect\n          onSelect={() => setSchoolDayMode(pickSchoolDayMode.schoolDay)}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.schoolDay ? (\n        <SchoolDaySelect\n          width={width}\n          height={height}\n          timetable={timetable}\n          loadingState={timetableState}\n          onSelect={() => {\n            setSchoolDayMode(pickSchoolDayMode.schedule);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schoolYear);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.schedule &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <ScheduleSelect\n          schedules={timetable.schedules}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: e,\n                dressCode: selectedSchoolDayData.dressCode,\n                semester: selectedSchoolDayData.semester,\n              }),\n            );\n            setSchoolDayMode(pickSchoolDayMode.dressCode);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schoolDay);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.dressCode &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <DressCodeSelect\n          dressCodeData={timetable.dressCode.dressCodeData}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: selectedSchoolDayData.schedule,\n                dressCode: e,\n                semester: selectedSchoolDayData.semester,\n              }),\n            );\n            setSchoolDayMode(pickSchoolDayMode.semester);\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.schedule);\n          }}\n        />\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.semester &&\n      selectedSchoolDayData !== undefined ? (\n        <View>\n          <Pressable\n            onPress={() => {\n              setSchoolDayMode(pickSchoolDayMode.dressCode);\n            }}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setSelectedSchoolDayData({\n                  schoolDay: selectedSchoolDayData.schoolDay,\n                  schedule: selectedSchoolDayData.schedule,\n                  dressCode: selectedSchoolDayData.dressCode,\n                  semester: semesters.semesterOne,\n                }),\n              );\n              setSchoolDayMode(pickSchoolDayMode.dressCodeIncentives);\n            }}\n          >\n            <Text>Semester One</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setSelectedSchoolDayData({\n                  schoolDay: selectedSchoolDayData.schoolDay,\n                  schedule: selectedSchoolDayData.schedule,\n                  dressCode: selectedSchoolDayData.dressCode,\n                  semester: semesters.semesterTwo,\n                }),\n              );\n              setSchoolDayMode(pickSchoolDayMode.dressCodeIncentives);\n            }}\n          >\n            <Text>Semester Two</Text>\n          </Pressable>\n        </View>\n      ) : null}\n      {schoolDayMode === pickSchoolDayMode.dressCodeIncentives &&\n      timetable !== undefined &&\n      selectedSchoolDayData !== undefined ? (\n        <DressCodeIncentivesSelect\n          dressCodeIncentivesData={timetable.dressCode.dressCodeIncentives}\n          onSelect={e => {\n            dispatch(\n              addEventSlice.actions.setSelectedSchoolDayData({\n                schoolDay: selectedSchoolDayData.schoolDay,\n                schedule: selectedSchoolDayData.schedule,\n                dressCode: selectedSchoolDayData.dressCode,\n                semester: selectedSchoolDayData.semester,\n                dressCodeIncentive: e,\n              }),\n            );\n          }}\n          onBack={() => {\n            setSchoolDayMode(pickSchoolDayMode.semester);\n          }}\n        />\n      ) : null}\n    </View>\n  );\n}\n\nfunction SchoolYearsSelect({ onSelect }: { onSelect: () => void }) {\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [currentEventsSchoolYear, setCurrentEventsSchoolYear] = useState<\n    eventType[]\n  >([]);\n  const dispatch = useDispatch();\n\n  async function getData() {\n    const result = await getGraphEvents(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20or%20id%20eq%20'${\n        store.getState().paulyList.eventDataExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20and%20ep/value%20eq%20'schoolYear')`,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.events !== undefined\n    ) {\n      let outputEvents: eventType[] = result.events;\n      let url: string = result.nextLink !== undefined ? result.nextLink : '';\n      let notFound: boolean = result.nextLink !== undefined;\n      while (notFound) {\n        const furtherResult = await getGraphEvents(url);\n        if (\n          furtherResult.result === loadingStateEnum.success &&\n          furtherResult.events !== undefined\n        ) {\n          outputEvents = [...outputEvents, ...furtherResult.events];\n          url =\n            furtherResult.nextLink !== undefined ? furtherResult.nextLink : '';\n          notFound = furtherResult.nextLink !== undefined;\n        } else {\n          notFound = false;\n        }\n      }\n      setCurrentEventsSchoolYear(outputEvents);\n      setLoadingState(loadingStateEnum.success);\n    } else {\n      setLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return (\n    <View>\n      <ScrollView>\n        {loadingState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {loadingState === loadingStateEnum.success ? (\n              <View>\n                {currentEventsSchoolYear.map(event => (\n                  <Pressable\n                    key={`School_Year_${createUUID()}`}\n                    onPress={() => {\n                      dispatch(\n                        addEventSlice.actions.setSelectedSchoolYear(event),\n                      );\n                      onSelect();\n                    }}\n                  >\n                    <View>\n                      <Text style={{ margin: 10 }}>{event.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction SchoolDaySelect({\n  width,\n  height,\n  timetable,\n  loadingState,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  timetable: timetableType | undefined;\n  loadingState: loadingStateEnum;\n  onSelect: () => void;\n  onBack: () => void;\n}) {\n  const dispatch = useDispatch();\n  return (\n    <View>\n      <Pressable\n        onPress={() => {\n          onBack();\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <ScrollView style={{ width, height }}>\n        {loadingState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <>\n            {loadingState === loadingStateEnum.success &&\n            timetable !== undefined ? (\n              <>\n                {timetable.days.map(day => (\n                  <Pressable\n                    key={`Day_${day.id}`}\n                    onPress={() => {\n                      onSelect();\n                      dispatch(\n                        addEventSlice.actions.setSelectedSchoolDayData({\n                          schoolDay: day,\n                          schedule: {\n                            properName: '',\n                            descriptiveName: '',\n                            periods: [],\n                            id: '',\n                            color: '',\n                          },\n                          dressCode: {\n                            name: '',\n                            description: '',\n                            id: '',\n                          },\n                          semester: semesters.semesterOne,\n                        }),\n                      );\n                    }}\n                  >\n                    <View>\n                      <Text>{day.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n\nfunction ScheduleSelect({\n  schedules,\n  onSelect,\n}: {\n  schedules: scheduleType[];\n  onSelect: (item: scheduleType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      {schedules.map(schedule => (\n        <Pressable\n          key={`Schedule_${schedule.id}`}\n          onPress={() => {\n            onSelect(schedule);\n          }}\n        >\n          <View>\n            <Text>{schedule.properName}</Text>\n          </View>\n        </Pressable>\n      ))}\n    </View>\n  );\n}\n\nfunction DressCodeSelect({\n  dressCodeData,\n  onSelect,\n  onBack,\n}: {\n  dressCodeData: dressCodeDataType[];\n  onSelect: (item: dressCodeDataType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      <Pressable\n        onPress={() => {\n          onBack();\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      {dressCodeData.map(data => (\n        <Pressable\n          onPress={() => {\n            onSelect(data);\n          }}\n        >\n          <Text>{data.name}</Text>\n        </Pressable>\n      ))}\n    </View>\n  );\n}\n\nfunction DressCodeIncentivesSelect({\n  dressCodeIncentivesData,\n}: {\n  dressCodeIncentivesData: dressCodeIncentiveType[];\n  onSelect: (item: dressCodeIncentiveType) => void;\n  onBack: () => void;\n}) {\n  return (\n    <View>\n      {dressCodeIncentivesData.map(incentive => (\n        <View>\n          <Text>{incentive.name}</Text>\n        </View>\n      ))}\n      <Text>None</Text>\n    </View>\n  );\n}\n","import { orgWideGroupID } from '../PaulyConfig';\nimport { addEventSlice } from '../Redux/reducers/addEventReducer';\nimport { currentEventsSlice } from '../Redux/reducers/currentEventReducer';\nimport store from '../Redux/store';\nimport { Colors, loadingStateEnum, paulyEventType } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport default async function createEvent(): Promise<undefined> {\n  if (store.getState().addEvent.selectedEventType === paulyEventType.personal) {\n    const data: any = {\n      subject: store.getState().addEvent.eventName,\n      start: {\n        dateTime: store.getState().addEvent.startDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n      end: {\n        dateTime: store.getState().addEvent.endDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n    };\n    if (store.getState().addEvent.allDay) {\n      data.start.dateTime = `${\n        store\n          .getState()\n          .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.end.dateTime = `${\n        store\n          .getState()\n          .addEvent.endDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.isAllDay = true;\n    }\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/me/events`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const dataOut = await result.json();\n      const resultEvent: eventType = {\n        id: dataOut.id,\n        name: dataOut.subject,\n        startTime: dataOut.start.dateTime,\n        endTime: dataOut.end.dateTime,\n        eventColor: Colors.white,\n        microsoftEvent: true,\n        microsoftReference: `https://graph.microsoft.com/v1.0/me/events/${dataOut.id}`,\n        allDay: false,\n      };\n      store.dispatch(currentEventsSlice.actions.pushEvent(resultEvent));\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.success),\n      );\n    } else {\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n      );\n    }\n  } else {\n    const data: any = {\n      subject: store.getState().addEvent.eventName,\n      start: {\n        dateTime: store.getState().addEvent.startDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n      end: {\n        dateTime: store.getState().addEvent.endDate.replace(/.\\d+Z$/g, 'Z'),\n        timeZone: 'Central America Standard Time',\n      },\n    };\n    const schoolDay = store.getState().addEvent.selectedSchoolDayData;\n    const schoolYearId = store.getState().addEvent.selectedSchoolYear?.id;\n    if (\n      store.getState().addEvent.selectedEventType === paulyEventType.schoolDay\n    ) {\n      if (schoolDay !== undefined) {\n        if (store.getState().addEvent.selectedSchoolDayData === undefined) {\n          store.dispatch(\n            addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n          );\n          return;\n        }\n        data.start.dateTime = `${\n          store\n            .getState()\n            .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n            .split(/[T ]/i, 1)[0]\n        }T00:00:00.0000000`;\n        const newEndDate = new Date(store.getState().addEvent.startDate);\n        newEndDate.setDate(\n          new Date(store.getState().addEvent.startDate).getDate() + 1,\n        );\n        data.end.dateTime = `${\n          newEndDate\n            .toISOString()\n            .replace(/.\\d+Z$/g, 'Z')\n            .split(/[T ]/i, 1)[0]\n        }T00:00:00.0000000`;\n        data.isAllDay = true;\n        data.subject = `${schoolDay.schoolDay.name} ${schoolDay.schedule.properName}`;\n      } else {\n        store.dispatch(\n          addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n        );\n      }\n    } else if (store.getState().addEvent.allDay) {\n      data.start.dateTime = `${\n        store\n          .getState()\n          .addEvent.startDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.end.dateTime = `${\n        store\n          .getState()\n          .addEvent.endDate.replace(/.\\d+Z$/g, 'Z')\n          .split(/[T ]/i, 1)[0]\n      }T00:00:00.0000000`;\n      data.isAllDay = true;\n    }\n    if (\n      store.getState().addEvent.selectedEventType === paulyEventType.schoolYear\n    ) {\n      data.singleValueExtendedProperties = [\n        {\n          id: store.getState().paulyList.eventTypeExtensionId,\n          value: 'schoolYear',\n        },\n        {\n          id: store.getState().paulyList.eventDataExtensionId,\n          value: store.getState().addEvent.selectedTimetable.id,\n        },\n      ];\n    } else if (\n      store.getState().addEvent.selectedEventType ===\n        paulyEventType.schoolDay &&\n      schoolDay !== undefined &&\n      schoolYearId !== undefined\n    ) {\n      const selectedSchoolDayDataCompressed: schoolDayDataCompressedType = {\n        schoolDayId: schoolDay.schoolDay.id,\n        scheduleId: schoolDay.schedule.id,\n        dressCodeId: schoolDay.dressCode.id,\n        semester: schoolDay.semester,\n        dressCodeIncentiveId:\n          schoolDay.dressCodeIncentive?.id === undefined\n            ? ''\n            : schoolDay.dressCodeIncentive?.id,\n        schoolYearEventId: schoolYearId,\n      };\n      data.singleValueExtendedProperties = [\n        {\n          id: store.getState().paulyList.eventTypeExtensionId,\n          value: 'schoolDay',\n        },\n        {\n          id: store.getState().paulyList.eventDataExtensionId,\n          value: JSON.stringify(selectedSchoolDayDataCompressed),\n        },\n      ];\n    }\n    if (store.getState().addEvent.recurringEvent) {\n    }\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const dataOut = await result.json();\n      const resultEvent: eventType = {\n        id: dataOut.id,\n        name: dataOut.subject,\n        startTime: dataOut.start.dateTime,\n        endTime: dataOut.end.dateTime,\n        eventColor: Colors.white,\n        paulyEventType:\n          store.getState().addEvent.selectedEventType ===\n          paulyEventType.schoolDay\n            ? 'schoolDay'\n            : store.getState().addEvent.selectedEventType ===\n              paulyEventType.schoolYear\n            ? 'schoolYear'\n            : undefined,\n        paulyEventData:\n          store.getState().addEvent.selectedEventType ===\n          paulyEventType.schoolDay\n            ? JSON.stringify(store.getState().addEvent.selectedSchoolDayData)\n            : store.getState().addEvent.selectedEventType ===\n              paulyEventType.schoolYear\n            ? store.getState().addEvent.selectedTimetable.id\n            : undefined,\n        microsoftEvent: true,\n        microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${dataOut.id}`,\n        allDay: false,\n      };\n      store.dispatch(currentEventsSlice.actions.pushEvent(resultEvent));\n      store.dispatch(addEventSlice.actions.setSelectedSchoolDayData(undefined));\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.success),\n      );\n    } else {\n      store.dispatch(\n        addEventSlice.actions.setCreateEventState(loadingStateEnum.failed),\n      );\n    }\n  }\n}\n","/*\n  Andrew Mainella\n  October 18 2023\n  Pauly\n  AddEvent.tsx\n*/\n\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { Pressable, View, Text, Switch, TextInput } from 'react-native';\nimport { TimePickerModal, DatePickerModal } from 'react-native-paper-dates';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../Redux/store';\nimport { currentEventsSlice } from '../../Redux/reducers/currentEventReducer';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport callMsGraph from '../../Functions/ultility/microsoftAssets';\nimport SelectTimetable from './SelectTimetable';\nimport SelectSchoolDayData from './SelectSchoolDayData';\nimport { Colors, loadingStateEnum, paulyEventType } from '../../types';\nimport PickerWrapper from '../../UI/Pickers/Picker';\nimport { CalendarIcon, CloseIcon, TimeIcon } from '../../UI/Icons/Icons';\nimport updateEvent from '../../Functions/updateEvent';\n\nexport default function AddEvent({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { selectedEventType, isEditing, selectedEvent, createEventState } =\n    useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (\n      selectedEventType === paulyEventType.schoolDay ||\n      selectedEventType === paulyEventType.schoolYear\n    ) {\n      dispatch(addEventSlice.actions.setAllDay(true));\n    }\n  }, [selectedEventType]);\n\n  async function deleteEvent() {\n    if (\n      selectedEvent !== undefined &&\n      selectedEvent.microsoftEvent &&\n      selectedEvent.microsoftReference !== undefined\n    ) {\n      const deleteEvent = await callMsGraph(\n        selectedEvent.microsoftReference,\n        'DELETE',\n      );\n      if (deleteEvent.ok) {\n        const index = currentEvents.findIndex(e => {\n          return e.id === selectedEvent.id;\n        });\n        dispatch(currentEventsSlice.actions.removeCurrentEvent(index));\n        dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n      } else {\n        // TO DO throw error\n      }\n    }\n  }\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View\n      style={{\n        backgroundColor: Colors.white,\n        width: width + 30,\n        height,\n        borderRadius: 5,\n        borderWidth: 5,\n      }}\n    >\n      <View style={{ margin: 10, width }}>\n        <Pressable\n          onPress={() => {\n            dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n            dispatch(\n              addEventSlice.actions.setCreateEventState(\n                loadingStateEnum.notStarted,\n              ),\n            );\n          }}\n        >\n          <CloseIcon width={10} height={10} />\n        </Pressable>\n        <Text style={{ fontFamily: 'BukhariScript' }}>Add Event</Text>\n        <DateAndTimeSection width={width} height={height} />\n        {isGovernmentMode ? (\n          <GovernmentCalendarOptions width={width} height={height} />\n        ) : null}\n        <View\n          style={{\n            width,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              dispatch(\n                addEventSlice.actions.setCreateEventState(\n                  loadingStateEnum.loading,\n                ),\n              );\n              updateEvent();\n            }}\n            style={{\n              width: 100,\n              height: 50,\n              backgroundColor: '#00a4db',\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 15,\n              shadowColor: '#000',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 2,\n            }}\n          >\n            <Text style={{ zIndex: -1 }}>\n              {isEditing\n                ? 'Save'\n                : createEventState === loadingStateEnum.notStarted\n                ? 'CREATE'\n                : createEventState === loadingStateEnum.loading\n                ? 'Loading'\n                : createEventState === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n        </View>\n        {isEditing ? (\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsShowingAddDate(false));\n              deleteEvent();\n            }}\n            style={{\n              width: 100,\n              height: 50,\n              backgroundColor: '#00a4db',\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              borderRadius: 15,\n              shadowColor: '#000',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 2,\n            }}\n          >\n            <Text style={{ zIndex: -1 }}>Delete</Text>\n          </Pressable>\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nfunction GovernmentCalendarOptions({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const {\n    selectedEventType,\n    selectedTimetable,\n    selectedSchoolDayData,\n    selectedSchoolYear,\n  } = useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <View>\n        <PickerWrapper\n          selectedIndex={selectedEventType}\n          onSetSelectedIndex={e => {\n            dispatch(addEventSlice.actions.setSelectedEventType(e));\n          }}\n          width={width}\n          height={height * 0.05}\n        >\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Personal\">\n            Personal\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Regular\">\n            Regular\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Day\">\n            School Day{' '}\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Year\">\n            School Year\n          </Text>\n          <Text numberOfLines={1} style={{ fontSize: 8 }} key=\"Council\">\n            Student Council\n          </Text>\n        </PickerWrapper>\n      </View>\n      {selectedEventType === paulyEventType.schoolDay ? (\n        <View style={{ width, height: 100 }}>\n          <Text>\n            Selected School Year:{' '}\n            {selectedSchoolYear ? selectedSchoolYear.name : 'None selected'}\n          </Text>\n          <SelectSchoolDayData width={width} height={100} />\n        </View>\n      ) : null}\n      {selectedEventType === paulyEventType.schoolYear ? (\n        <View>\n          <Text>\n            Selected Timetable:{' '}\n            {selectedTimetable ? selectedTimetable.name : 'Unselected'}\n          </Text>\n          <SelectTimetable\n            governmentMode={false}\n            onSelect={e => {\n              dispatch(addEventSlice.actions.setSelectedTimetable(e));\n            }}\n          />\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nfunction DateAndTimeSection({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const {\n    selectedEventType,\n    eventName,\n    allDay,\n    startDate,\n    endDate,\n    isPickingStartDate,\n    isPickingEndDate,\n  } = useSelector((state: RootState) => state.addEvent);\n  const dispatch = useDispatch();\n  const [endDatePickerVisable, setEndDatePickerVisable] =\n    useState<boolean>(false);\n  const [startDatePickerVisable, setStartDatePickerVisable] =\n    useState<boolean>(false);\n  return (\n    <View>\n      <DatePickerModal\n        locale=\"en\"\n        mode=\"single\"\n        label=\"Select Date\"\n        visible={isPickingStartDate}\n        onDismiss={() =>\n          dispatch(addEventSlice.actions.setIsPickingStartDate(false))\n        }\n        date={new Date(startDate)}\n        onConfirm={e => {\n          console.log(e.date);\n          if (e.date !== undefined) {\n            const oldDate = new Date(startDate);\n            dispatch(\n              addEventSlice.actions.setStartDate(\n                new Date(\n                  e.date.getFullYear(),\n                  e.date.getMonth(),\n                  e.date.getDate(),\n                  oldDate.getHours(),\n                  oldDate.getMinutes(),\n                ).toISOString(),\n              ),\n            );\n          }\n          dispatch(addEventSlice.actions.setIsPickingStartDate(false));\n        }}\n      />\n      <DatePickerModal\n        locale=\"\"\n        mode=\"single\"\n        label=\"Select Date\"\n        visible={isPickingEndDate}\n        onDismiss={() =>\n          dispatch(addEventSlice.actions.setIsPickingEndDate(false))\n        }\n        date={new Date(endDate)}\n        onConfirm={e => {\n          console.log(e.date);\n          if (e.date !== undefined) {\n            const oldDate = new Date(endDate);\n            const newDate = new Date(\n              e.date.getFullYear(),\n              e.date.getMonth(),\n              e.date.getDate(),\n              oldDate.getHours(),\n              oldDate.getMinutes(),\n            ).toISOString();\n            console.log(newDate);\n            dispatch(addEventSlice.actions.setEndDate(newDate));\n          }\n          dispatch(addEventSlice.actions.setIsPickingEndDate(false));\n        }}\n      />\n      {selectedEventType === paulyEventType.schoolDay ? null : (\n        <View>\n          <TextInput\n            value={eventName}\n            onChangeText={e => {\n              dispatch(addEventSlice.actions.setEventName(e));\n            }}\n            placeholder=\"Event Name\"\n            style={{\n              width: width * 0.8,\n              height: height * 0.05,\n              borderBottomColor: '#000000',\n              borderBottomWidth: 1,\n              marginLeft: width * 0.01,\n            }}\n          />\n          {selectedEventType !== paulyEventType.schoolYear ? (\n            <View\n              style={{ flexDirection: 'row', marginTop: 7, marginBottom: 7 }}\n            >\n              <Text>All Day</Text>\n              <Switch\n                trackColor={{ false: '#767577', true: '#81b0ff' }}\n                thumbColor={allDay ? '#f5dd4b' : '#f4f3f4'}\n                ios_backgroundColor=\"#3e3e3e\"\n                onValueChange={e => {\n                  dispatch(addEventSlice.actions.setAllDay(e));\n                }}\n                value={allDay}\n                style={{ marginLeft: 10 }}\n              />\n            </View>\n          ) : null}\n        </View>\n      )}\n      <Text>\n        {selectedEventType === paulyEventType.schoolDay ? '' : 'Start '}Date\n      </Text>\n      <View style={{ flexDirection: 'row' }}>\n        <View style={{ flexDirection: 'row', margin: 10 }}>\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsPickingStartDate(true));\n            }}\n          >\n            <Text>\n              {new Date(startDate).toLocaleString('en-us', { month: 'long' })}{' '}\n              {new Date(startDate).getDate()}{' '}\n              {new Date(startDate).getFullYear()}{' '}\n            </Text>\n          </Pressable>\n          {!allDay ? (\n            <Pressable\n              onPress={() => {\n                setStartDatePickerVisable(true);\n              }}\n            >\n              <Text>\n                {new Date(startDate).getHours() % 12 || 12}:\n                {new Date(startDate).getMinutes().toString().length === 1\n                  ? `0${new Date(startDate).getMinutes()}`\n                  : new Date(startDate).getMinutes()}{' '}\n                {new Date(startDate).getHours() >= 12 ? 'pm' : 'am'}\n              </Text>\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => {\n              dispatch(addEventSlice.actions.setIsPickingStartDate(true));\n            }}\n          >\n            <CalendarIcon width={24} height={15} />\n          </Pressable>\n        </View>\n        {allDay ? null : (\n          <View style={{ margin: 5 }}>\n            <Pressable\n              onPress={() => {\n                setStartDatePickerVisable(true);\n              }}\n              style={{\n                height: 26.4,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <TimeIcon width={15} height={15} />\n            </Pressable>\n            <TimePickerModal\n              hours={new Date(startDate).getHours()}\n              minutes={new Date(startDate).getMinutes()}\n              visible={startDatePickerVisable}\n              onDismiss={() => setStartDatePickerVisable(false)}\n              onConfirm={e => {\n                console.log(e);\n                const newDate = new Date(startDate);\n                newDate.setHours(e.hours);\n                newDate.setMinutes(e.minutes);\n                console.log(newDate);\n                dispatch(\n                  addEventSlice.actions.setStartDate(newDate.toISOString()),\n                );\n                setStartDatePickerVisable(false);\n              }}\n            />\n          </View>\n        )}\n      </View>\n      {selectedEventType === paulyEventType.schoolDay ? null : (\n        <View>\n          <Text>End Date</Text>\n          <View style={{ flexDirection: 'row' }}>\n            <View style={{ flexDirection: 'row', margin: 10 }}>\n              <Pressable\n                onPress={() => {\n                  dispatch(addEventSlice.actions.setIsPickingEndDate(true));\n                }}\n              >\n                <Text>\n                  {new Date(endDate).toLocaleString('en-us', { month: 'long' })}{' '}\n                  {new Date(endDate).getDate()}{' '}\n                  {new Date(endDate).getFullYear()}{' '}\n                </Text>\n              </Pressable>\n              {!allDay ? (\n                <Pressable\n                  onPress={() => {\n                    setEndDatePickerVisable(true);\n                  }}\n                >\n                  <Text>\n                    {new Date(endDate).getHours() % 12 || 12}:\n                    {new Date(endDate).getMinutes().toString().length === 1\n                      ? `0${new Date(endDate).getMinutes()}`\n                      : new Date(endDate).getMinutes()}{' '}\n                    {new Date(endDate).getHours() >= 12 ? 'pm' : 'am'}\n                  </Text>\n                </Pressable>\n              ) : null}\n              <Pressable\n                onPress={() => {\n                  dispatch(addEventSlice.actions.setIsPickingEndDate(true));\n                }}\n              >\n                <CalendarIcon width={24} height={15} />\n              </Pressable>\n            </View>\n            {allDay ? null : (\n              <View style={{ margin: 5 }}>\n                <Pressable\n                  onPress={() => {\n                    setEndDatePickerVisable(true);\n                  }}\n                  style={{\n                    height: 26.4,\n                    alignContent: 'center',\n                    alignItems: 'center',\n                    justifyContent: 'center',\n                  }}\n                >\n                  <TimeIcon width={15} height={15} />\n                </Pressable>\n                <TimePickerModal\n                  hours={new Date(endDate).getHours()}\n                  minutes={new Date(endDate).getMinutes()}\n                  visible={endDatePickerVisable}\n                  onDismiss={() => setEndDatePickerVisable(false)}\n                  onConfirm={e => {\n                    const newDate = new Date(endDate);\n                    newDate.setHours(e.hours);\n                    newDate.setMinutes(e.minutes);\n                    dispatch(\n                      addEventSlice.actions.setEndDate(newDate.toISOString()),\n                    );\n                    setEndDatePickerVisable(false);\n                  }}\n                />\n              </View>\n            )}\n          </View>\n        </View>\n      )}\n    </View>\n  );\n}\n\n{\n  /* <Text>Reocurring Event</Text>\n          <Switch\n            trackColor={{false: '#767577', true: '#81b0ff'}}\n            thumbColor={recurringEvent ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={(e) => {\n              dispatch(addEventSlice.actions.setRecurringEvent(e))\n            }}\n            value={recurringEvent}\n          />\n          { recurringEvent ?\n            <View style={{zIndex: 100}}>\n              <Dropdown onSetSelectedIndex={(item) => {\n                if (item >= 0 && item <= 3){\n                  dispatch(addEventSlice.actions.setSelectedRecurringType(item))\n                } \n              }} selectedIndex={selectedRecurringType} style={{height: height * 0.04}} expandedStyle={{height: height * 0.12, backgroundColor: Colors.white}}>\n                <View>\n                  <Text>Daily</Text>\n                </View>\n                <View>\n                  <Text>Weekly</Text>\n                </View>\n                <View>\n                  <Text>Monthly</Text>\n                </View>\n                <View>\n                  <Text>Yearly</Text>\n                </View>\n              </Dropdown>\n            </View>:null\n          } */\n}\n","import { View, Text, Animated, Pressable } from 'react-native';\nimport React, { useEffect, useRef, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { addEventSlice } from '../Redux/reducers/addEventReducer';\nimport { RootState } from '../Redux/store';\nimport { Colors } from '../types';\n\ninterface PickerWrapperProps {\n  width: number;\n  height: number;\n}\n\nenum calendarMode {\n  month,\n  week,\n  day,\n}\n\nexport default function CalendarTypePicker({\n  width,\n  height,\n}: PickerWrapperProps) {\n  const pan = useRef(new Animated.Value(0)).current;\n  const [compoentWidth, setComponentWidth] = useState(width / 3);\n  const { selectedCalendarMode } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const dispatch = useDispatch();\n\n  function fadeIn(id: number) {\n    // Will change fadeAnim value to 1 in 5 seconds\n    Animated.timing(pan, {\n      toValue: id * compoentWidth + compoentWidth * 0.005,\n      duration: 500,\n      useNativeDriver: true,\n    }).start();\n  }\n\n  useEffect(() => {\n    pan.setValue(selectedCalendarMode * compoentWidth + compoentWidth * 0.005);\n  }, []);\n\n  useEffect(() => {\n    setComponentWidth(width / 3);\n    pan.setValue(selectedCalendarMode * compoentWidth + compoentWidth * 0.005);\n  }, [width]);\n\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        height,\n        width,\n        backgroundColor: '#7d7d7d',\n        borderRadius: 20,\n        shadowColor: '#000',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 1,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.month),\n          );\n          fadeIn(0);\n        }}\n        style={{\n          position: 'absolute',\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Month\n        </Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.week),\n          );\n          fadeIn(1);\n        }}\n        style={{\n          position: 'absolute',\n          transform: [{ translateX: 1 * compoentWidth }],\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Week\n        </Text>\n      </Pressable>\n      <Pressable\n        onPress={() => {\n          dispatch(\n            addEventSlice.actions.setSelectedCalendarMode(calendarMode.day),\n          );\n          fadeIn(2);\n        }}\n        style={{\n          position: 'absolute',\n          transform: [{ translateX: 2 * compoentWidth }],\n          width: compoentWidth,\n          height,\n          alignItems: 'center',\n          alignContent: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            fontSize: Math.sqrt((compoentWidth * 0.8 * height) / 5),\n          }}\n        >\n          Day\n        </Text>\n      </Pressable>\n      <Animated.View style={{ transform: [{ translateX: pan }], zIndex: -1 }}>\n        <View\n          style={{\n            height: height * 0.95,\n            width: compoentWidth - compoentWidth * 0.01,\n            backgroundColor: Colors.white,\n            top: height * 0.025,\n            borderRadius: 20,\n            position: 'absolute',\n            zIndex: -1,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        />\n      </Animated.View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// Pauly\n// October 2 2023\n\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport { currentEventsSlice } from '../../Redux/reducers/currentEventReducer';\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport { getGraphEvents } from './calendarFunctionsGraph';\n\nexport default async function getEvents() {\n  // date the user picks\n  const selectedDate = new Date(store.getState().selectedDate);\n  // Start of month that the selected date is in\n  const startDate = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth(),\n    1,\n  );\n  // End of month that the selected date is in\n  const endDate = new Date(\n    selectedDate.getFullYear(),\n    selectedDate.getMonth() + 1,\n    1,\n  );\n\n  // Personal Calendar\n  let outputEvents: eventType[] = [];\n  // This code is pulled from add events School Years Select\n  let nextUrl: string = `https://graph.microsoft.com/v1.0/me/calendarView?startDateTime=${startDate.toISOString()}&endDateTime=${endDate.toISOString()}`;\n  while (nextUrl !== '') {\n    const furtherResult = await getGraphEvents(\n      nextUrl,\n      'https://graph.microsoft.com/v1.0/me/events/',\n    );\n    if (\n      furtherResult.result === loadingStateEnum.success &&\n      furtherResult.events !== undefined\n    ) {\n      outputEvents = [...outputEvents, ...furtherResult.events];\n      if (furtherResult.nextLink === undefined) {\n        nextUrl = '';\n        break;\n      } else {\n        nextUrl = furtherResult.nextLink;\n      }\n    } else {\n      nextUrl = '';\n      break;\n    }\n  }\n\n  // OrgWideEvents\n  // This code is pulled from add events School Years Select\n  let url: string = `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$filter=start/dateTime%20ge%20'${startDate.toISOString()}'%20and%20end/dateTime%20le%20'${endDate.toISOString()}'`;\n  while (url !== '') {\n    const furtherResult = await getGraphEvents(\n      url,\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/`,\n    );\n    if (\n      furtherResult.result === loadingStateEnum.success &&\n      furtherResult.events !== undefined\n    ) {\n      outputEvents = [...outputEvents, ...furtherResult.events];\n      url = furtherResult.nextLink !== undefined ? furtherResult.nextLink : '';\n    } else {\n      url = '';\n    }\n  }\n\n  store.dispatch(currentEventsSlice.actions.setCurrentEvents(outputEvents));\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  ScrollView,\n  useWindowDimensions,\n} from 'react-native';\nimport React, { useCallback, useEffect } from 'react';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { findFirstDayinMonth } from '../../Functions/calendar/calendarFunctions';\nimport createUUID from '../../Functions/ultility/createUUID';\nimport DayView from './DayView';\nimport Week from './Week';\nimport AddEvent from './AddEvent';\nimport CalendarTypePicker from '../../UI/CalendarTypePicker';\nimport { AddIcon, ChevronLeft, ChevronRight } from '../../UI/Icons/Icons';\nimport { RootState } from '../../Redux/store';\nimport { selectedDateSlice } from '../../Redux/reducers/selectedDateReducer';\nimport { Colors, calendarMode } from '../../types';\nimport { safeAreaColorsSlice } from '../../Redux/reducers/safeAreaColorsReducer';\nimport BackButton from '../../UI/BackButton';\nimport { addEventSlice } from '../../Redux/reducers/addEventReducer';\nimport { monthDataSlice } from '../../Redux/reducers/monthDataReducer';\nimport { getClasses } from '../../Functions/classesFunctions';\nimport getEvents from '../../Functions/calendar/getEvents';\n\nconst monthNames = [\n  'January',\n  'February',\n  'March',\n  'April',\n  'May',\n  'June',\n  'July',\n  'August',\n  'September',\n  'October',\n  'November',\n  'December',\n];\n\nexport default function Calendar() {\n  const { width, height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { selectedCalendarMode, isShowingAddDate } = useSelector(\n    (state: RootState) => state.addEvent,\n  );\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: Colors.white,\n      }),\n    );\n  }, []);\n\n  // This is the main (only) process that updates the events\n  // In the month view month data is calculate but the events come from this hook and the month view is a decendant of this view.\n  useEffect(() => {\n    getEvents();\n    getClasses();\n  }, [selectedDate]);\n\n  // Fonts\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <View>\n      <View style={{ height: height * 0.1, backgroundColor: Colors.darkGray }}>\n        {currentBreakPoint >= 1 ? null : (\n          <BackButton to=\"/\" style={{ zIndex: 100 }} />\n        )}\n        <TopView width={width} height={height * 0.1} />\n      </View>\n      <View style={{ height: height * 0.9 }}>\n        {selectedCalendarMode === calendarMode.month ? (\n          <View\n            style={{\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              backgroundColor: Colors.white,\n            }}\n          >\n            <MonthViewMain width={width * 0.9} height={height * 0.9} />\n          </View>\n        ) : null}\n        {selectedCalendarMode === calendarMode.week ? (\n          <Week width={width * 1.0} height={height * 0.9} />\n        ) : null}\n        {selectedCalendarMode === calendarMode.day ? (\n          <View\n            style={{\n              width,\n              height: height * 0.9,\n              alignItems: 'center',\n              alignContent: 'center',\n              justifyContent: 'center',\n              backgroundColor: Colors.white,\n            }}\n          >\n            <DayView width={width * 0.9} height={height * 0.9} />\n          </View>\n        ) : null}\n      </View>\n      {isShowingAddDate ? (\n        <View\n          style={{\n            zIndex: 2,\n            position: 'absolute',\n            left: width * 0.05 + (width >= 576 ? width * 0.3 : 0) / 2,\n            top: height * 0.1,\n          }}\n        >\n          <AddEvent\n            width={width * 0.9 - (width >= 576 ? width * 0.3 : 0)}\n            height={height * 0.8}\n          />\n        </View>\n      ) : null}\n    </View>\n  );\n}\n\nfunction MonthViewMain({ width, height }: { width: number; height: number }) {\n  const monthData = useSelector((state: RootState) => state.monthData);\n  const selectedDate: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  return (\n    <>\n      {/* Chosing between large mode with each day having expanded calendars and reduced mode with list of events on each day. */}\n      {width <= 519 ? (\n        <ScrollView\n          style={{\n            backgroundColor: Colors.white,\n            height,\n            width,\n          }}\n        >\n          <MonthView width={width} height={height * 0.8} />\n          {new Date(selectedDate).getDate() <= monthData.length ? (\n            <>\n              {monthData[new Date(selectedDate).getDate() - 1].events.map(\n                event => (\n                  <View key={event.id}>\n                    <Text>{event.name}</Text>\n                  </View>\n                ),\n              )}\n            </>\n          ) : null}\n        </ScrollView>\n      ) : (\n        <View\n          style={{\n            backgroundColor: Colors.white,\n            height,\n            width,\n          }}\n        >\n          <MonthView width={width} height={height} />\n        </View>\n      )}\n    </>\n  );\n}\n\nfunction MonthView({ width, height }: { width: number; height: number }) {\n  const daysInWeek: { DOW: string; id: string }[] = [\n    { DOW: 'Sun', id: createUUID() },\n    { DOW: 'Mon', id: createUUID() },\n    { DOW: 'Tue', id: createUUID() },\n    { DOW: 'Wen', id: createUUID() },\n    { DOW: 'Thu', id: createUUID() },\n    { DOW: 'Fri', id: createUUID() },\n    { DOW: 'Sat', id: createUUID() },\n  ];\n  const currentEvents = useSelector((state: RootState) => state.currentEvents);\n  const selectedDate: string = useSelector(\n    (state: RootState) => state.selectedDate,\n  );\n  const monthData = useSelector((state: RootState) => state.monthData);\n  const { fontScale } = useWindowDimensions();\n\n  const dispatch = useDispatch();\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  function getMonthData(selectedDate: Date) {\n    // Check if this month\n    const lastDay = new Date(\n      selectedDate.getFullYear(),\n      selectedDate.getMonth() + 1,\n      0,\n    );\n    const firstDayWeek = findFirstDayinMonth(selectedDate);\n    const monthDataResult: monthDataType[] = [];\n    for (let index = 0; index < 42; index += 1) {\n      if (index >= firstDayWeek && index - firstDayWeek < lastDay.getDate()) {\n        // In the current month\n        const events: eventType[] = []; // The result events of that day\n\n        // Check is the current date\n        const checkStart: Date = new Date(\n          selectedDate.getFullYear(),\n          selectedDate.getMonth(),\n          index - firstDayWeek + 1,\n          0,\n          0,\n        );\n        const checkEnd: Date = new Date(\n          selectedDate.getFullYear(),\n          selectedDate.getMonth(),\n          index - firstDayWeek + 2,\n          0,\n          0,\n        );\n        for (\n          let indexEvent = 0;\n          indexEvent < currentEvents.length;\n          indexEvent += 1\n        ) {\n          const event: eventType = currentEvents[indexEvent]; // Event to be checked\n\n          const startTimeDate = new Date(event.startTime); // String to date\n          const endTimeDate = new Date(event.endTime); // String to date\n\n          // First check if starts before date and ends after or on day\n          if (startTimeDate <= checkStart && endTimeDate > checkStart) {\n            events.push(event);\n          } else if (startTimeDate > checkStart && startTimeDate < checkEnd) {\n            // Second check if starts on day\n            events.push(event);\n          }\n        }\n        monthDataResult.push({\n          showing: true,\n          dayData: index - firstDayWeek + 1,\n          id: createUUID(),\n          events,\n        });\n      } else {\n        monthDataResult.push({\n          showing: false,\n          dayData: 0,\n          id: createUUID(),\n          events: [],\n        });\n      }\n    }\n    dispatch(monthDataSlice.actions.setMonthData(monthDataResult));\n  }\n\n  useEffect(() => {\n    getMonthData(new Date(selectedDate));\n  }, [selectedDate, currentEvents]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      <View\n        style={{\n          height: height / 8,\n          width,\n          justifyContent: 'center',\n          alignContent: 'center',\n        }}\n        key=\"Calendar_Header\"\n      >\n        <View style={{ flexDirection: 'row' }}>\n          <View\n            style={{\n              width: width * 0.6,\n              flexDirection: 'row',\n              marginRight: 'auto',\n            }}\n          >\n            <Text\n              numberOfLines={1}\n              adjustsFontSizeToFit\n              style={{ fontSize: 30 }}\n            >\n              {new Date(selectedDate).toLocaleString('en-us', {\n                month: 'long',\n              })}{' '}\n              {new Date(selectedDate).getFullYear()}\n            </Text>\n          </View>\n          <View>\n            {new Date(selectedDate).getFullYear() !==\n              new Date().getFullYear() ||\n            new Date(selectedDate).getMonth() != new Date().getMonth() ? (\n              <View style={{ width: width * 0.2 }}>\n                <Pressable\n                  onPress={() => {\n                    dispatch(\n                      selectedDateSlice.actions.setCurrentEventsLastCalled(\n                        new Date().toISOString(),\n                      ),\n                    );\n                  }}\n                >\n                  <Text style={{ color: 'black', fontSize: 12 / fontScale }}>\n                    Today\n                  </Text>\n                </Pressable>\n              </View>\n            ) : (\n              <View style={{ width: width * 0.2 }} />\n            )}\n          </View>\n          {/* This is left chevron */}\n          <Pressable\n            onPress={() => {\n              const d = new Date();\n              d.setFullYear(\n                new Date(selectedDate).getMonth() === 1\n                  ? new Date(selectedDate).getFullYear() - 1\n                  : new Date(selectedDate).getFullYear(),\n                new Date(selectedDate).getMonth() === 1\n                  ? 12\n                  : new Date(selectedDate).getMonth() - 1,\n                new Date(selectedDate).getDay(),\n              );\n              dispatch(\n                selectedDateSlice.actions.setCurrentEventsLastCalled(\n                  d.toISOString(),\n                ),\n              );\n            }}\n            style={{ marginTop: 'auto', marginBottom: 'auto' }}\n          >\n            <ChevronLeft width={14} height={14} />\n          </Pressable>\n          {/* This is right chevron */}\n          <Pressable\n            onPress={() => {\n              const d = new Date();\n              d.setFullYear(\n                new Date(selectedDate).getMonth() === 12\n                  ? new Date(selectedDate).getFullYear() + 1\n                  : new Date(selectedDate).getFullYear(),\n                new Date(selectedDate).getMonth() === 12\n                  ? 1\n                  : new Date(selectedDate).getMonth() + 1,\n                new Date(selectedDate).getDay(),\n              );\n              dispatch(\n                selectedDateSlice.actions.setCurrentEventsLastCalled(\n                  d.toISOString(),\n                ),\n              );\n            }}\n            style={{ marginTop: 'auto', marginBottom: 'auto' }}\n          >\n            <ChevronRight width={14} height={14} />\n          </Pressable>\n        </View>\n      </View>\n      <View style={{ width }} key=\"Calendar_Body\">\n        <View style={{ flexDirection: 'row' }}>\n          {daysInWeek.map(DOW => (\n            <View\n              key={`DOW_${DOW.id})}`}\n              style={{\n                width: width / 7,\n                height: height / 8,\n                alignItems: 'center',\n                alignContent: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Text style={{ color: 'black' }}>{DOW.DOW}</Text>\n            </View>\n          ))}\n        </View>\n        {['One', 'Two', 'Three', 'Four', 'Five', 'Six', 'Seven'].map(\n          (valueRow, index) => (\n            <View key={`Row_${valueRow}`} style={{ flexDirection: 'row' }}>\n              {monthData.map((value, id) => (\n                <View key={value.id}>\n                  {id >= index * 7 && id <= index * 7 + 6 ? (\n                    <>\n                      {value.showing ? (\n                        <Pressable\n                          onPress={() => {\n                            const d = new Date();\n                            d.setFullYear(\n                              new Date(selectedDate).getFullYear(),\n                              new Date(selectedDate).getMonth(),\n                              value.dayData,\n                            );\n                            dispatch(\n                              selectedDateSlice.actions.setCurrentEventsLastCalled(\n                                d.toISOString(),\n                              ),\n                            );\n                          }}\n                          key={`CalendarButton_${value.id}`}\n                        >\n                          <CalendarCardView\n                            width={width / 7}\n                            height={height / 8}\n                            value={value}\n                            calendarWidth={width}\n                          />\n                        </Pressable>\n                      ) : (\n                        <CalendarCardView\n                          width={width / 7}\n                          height={height / 8}\n                          value={value}\n                          calendarWidth={width}\n                          key={`CalendarButton_${value.id}`}\n                        />\n                      )}\n                    </>\n                  ) : null}\n                </View>\n              ))}\n            </View>\n          ),\n        )}\n      </View>\n    </>\n  );\n}\n\nfunction getBackgroundColor(selectedDate: string, dayData: number): string {\n  if (dayData === new Date(selectedDate).getDate()) {\n    return Colors.lightGray;\n  }\n  if (\n    dayData === new Date().getDate() &&\n    new Date(selectedDate).getMonth() === new Date().getMonth() &&\n    new Date(selectedDate).getFullYear() === new Date().getFullYear()\n  ) {\n    return Colors.darkGray;\n  }\n  return Colors.white;\n}\n\nfunction getTextBackgroundColor(selectedDate: string, dayData: number): string {\n  if (\n    dayData === new Date().getDate() &&\n    new Date(selectedDate).getMonth() === new Date().getMonth() &&\n    new Date(selectedDate).getFullYear() === new Date().getFullYear() &&\n    new Date(selectedDate).getDate() !== dayData\n  ) {\n    return Colors.white;\n  }\n  return Colors.black;\n}\n\nfunction CalendarCardView({\n  value,\n  width,\n  height,\n  calendarWidth,\n}: {\n  value: monthDataType;\n  width: number;\n  height: number;\n  calendarWidth: number;\n}) {\n  const selectedDate = useSelector((state: RootState) => state.selectedDate);\n  const dispatch = useDispatch();\n  return (\n    <>\n      {calendarWidth <= 519 ? (\n        <>\n          {value.showing ? (\n            <View\n              style={{\n                width,\n                height,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                borderRadius: height / 2,\n                backgroundColor: getBackgroundColor(\n                  selectedDate,\n                  value.dayData,\n                ),\n              }}\n            >\n              <Text\n                style={{\n                  color: getTextBackgroundColor(selectedDate, value.dayData),\n                }}\n              >\n                {value.dayData}\n              </Text>\n              {value.events.length >= 1 ? (\n                <View\n                  style={{\n                    backgroundColor: 'black',\n                    borderRadius: 50,\n                    width: width < height ? width * 0.25 : height * 0.25,\n                    height: width < height ? width * 0.25 : height * 0.25,\n                  }}\n                />\n              ) : (\n                <View\n                  style={{\n                    backgroundColor: 'transparent',\n                    borderRadius: 50,\n                    width: width < height ? width * 0.25 : height * 0.25,\n                    height: width < height ? width * 0.25 : height * 0.25,\n                  }}\n                />\n              )}\n            </View>\n          ) : (\n            <View style={{ width, height }} />\n          )}\n        </>\n      ) : (\n        <>\n          {value.showing ? (\n            <View style={{ width, height }}>\n              <View\n                style={{\n                  borderRadius: 50,\n                  width: 16,\n                  height: 16,\n                  backgroundColor:\n                    new Date().getDate() === value.dayData\n                      ? 'red'\n                      : 'transparent',\n                  alignContent: 'center',\n                  justifyContent: 'center',\n                  alignItems: 'center',\n                }}\n              >\n                <Text style={{ color: 'black' }}>{value.dayData}</Text>\n              </View>\n              <ScrollView style={{ width, height: height * 0.8 }}>\n                {value.events.map(event => (\n                  <Pressable\n                    key={`Calendar_Event_${event.id}`}\n                    onPress={() => {\n                      dispatch(addEventSlice.actions.setIsEditing(true));\n                      dispatch(addEventSlice.actions.setIsEditing(true));\n                      dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n                      dispatch(addEventSlice.actions.setSelectedEvent(event));\n                    }}\n                  >\n                    <Text style={{ fontSize: 10 }}>{event.name}</Text>\n                  </Pressable>\n                ))}\n              </ScrollView>\n            </View>\n          ) : (\n            <View style={{ width, height }} />\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction TopView({ width, height }: { width: number; height: number }) {\n  const dispatch = useDispatch();\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  return (\n    <View\n      style={{\n        flexDirection: 'row',\n        alignItems: 'center',\n        height,\n        width,\n      }}\n    >\n      <View\n        style={{\n          width:\n            width * 0.45 -\n            (width * 0.1 < height ? width * 0.15 : height + width * 0.025),\n          height,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        <Text\n          adjustsFontSizeToFit\n          numberOfLines={1}\n          style={{\n            fontFamily: 'BukhariScript',\n            fontSize: currentBreakPoint === 0 ? height * 0.35 : height * 0.7,\n            width: width * 0.4,\n            height: currentBreakPoint === 0 ? height * 0.5 : height * 0.9,\n            color: Colors.white,\n            textAlign: 'center',\n            verticalAlign: 'middle',\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          Calendar\n        </Text>\n      </View>\n      <View style={{ width: width * 0.55 }}>\n        <View style={{ marginLeft: width * 0.05 }}>\n          <CalendarTypePicker\n            width={width * 0.5}\n            height={width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6}\n          />\n        </View>\n      </View>\n      <View\n        style={{ width: width * 0.1 < height * 0.6 ? width * 0.15 : height }}\n      >\n        <Pressable\n          onPress={() => {\n            dispatch(addEventSlice.actions.setIsShowingAddDate(true));\n            dispatch(addEventSlice.actions.setIsEditing(false));\n            dispatch(addEventSlice.actions.setSelectedEvent(undefined));\n          }}\n          style={{\n            height: width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6,\n            width: width * 0.1 < height * 0.6 ? width * 0.1 : height * 0.6,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n            borderRadius: 50,\n            backgroundColor: '#7d7d7d',\n            shadowColor: '#000',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 1,\n            marginLeft: width * 0.025,\n            marginRight: width * 0.025,\n          }}\n        >\n          <AddIcon\n            width={width * 0.1 < height * 0.6 ? width * 0.05 : height * 0.4}\n            height={width * 0.1 < height * 0.6 ? width * 0.05 : height * 0.4}\n          />\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n","// Andrew Mainella\n// October 7 2023\n// Pauly get submissions for sports\n\nimport store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getSubmissions(): Promise<{\n  result: loadingStateEnum;\n  data?: mediaSubmissionType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsSubmissionsListId\n    }/items?expand=fields`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newMediaSubmissions: mediaSubmissionType[] = [];\n    if (data.value !== undefined) {\n      for (let index = 0; index < data.value.length; index += 1) {\n        newMediaSubmissions.push({\n          Title: data.value[index].fields.Title,\n          user: data.value[index].fields.User,\n          submissionId: data.value[index].fields.submissionId,\n          accepted: data.value[index].fields.accepted,\n          fileId: data.value[index].fields.fileId,\n          itemID: data.value[index].id,\n          selectedSportId: data.value[index].fields.selectedSportId,\n          selectedTeamId: data.value[index].fields.selectedTeamId,\n          reviewed: data.value[index].fields.reviewed,\n        });\n      }\n      return { result: loadingStateEnum.success, data: newMediaSubmissions };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","/*\n  Andrew Mainella\n  20 October 2023\n  Pauly\n  GovernmentHandleFileSubmissions.tsx\n*/\nimport React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useNavigate } from 'react-router-native';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport getSubmissions from '../../../../Functions/sports/getSubmissions';\nimport { loadingStateEnum } from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentHandleFileSubmissions({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const [currentMediaSubmissions, setCurrentMediaSubmissions] = useState<\n    mediaSubmissionType[]\n  >([]);\n  const [loadingSubmissionsState, setLoadingSubmissionsState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getSubmissions();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentMediaSubmissions(result.data);\n    }\n    setLoadingSubmissionsState(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n  return (\n    <>\n      {loadingSubmissionsState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            justifyContent: 'center',\n            alignItems: 'center',\n          }}\n        >\n          <ProgressView width={0} height={0} />\n          <Text>loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingSubmissionsState === loadingStateEnum.success ? (\n            <View style={{ width, height, overflow: 'hidden' }}>\n              <Text>HandleFileSubmissions</Text>\n              <FlatList\n                data={currentMediaSubmissions}\n                renderItem={item => (\n                  <Pressable\n                    key={`Submission_${\n                      item.item.submissionId\n                    }_${createUUID()}`}\n                    onPress={() =>\n                      navigate(\n                        `/profile/government/sports/post/review/${item.item.submissionId}`,\n                      )\n                    }\n                    style={{ borderColor: 'black', borderWidth: 2 }}\n                  >\n                    <Text>{item.item.Title}</Text>\n                    <Text>Accepted: {item.item.accepted ? 'Yes' : 'No'}</Text>\n                    <Text>Reviewed: {item.item.reviewed ? 'Yes' : 'No'}</Text>\n                    <Text>{item.item.user}</Text>\n                  </Pressable>\n                )}\n              />\n            </View>\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport GovernmentHandleFileSubmissions from './GovernmentHandleFileSubmissions';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getSports } from '../../../../Functions/sports/sportsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentSports() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [currentSports, setCurrentSports] = useState<sportType[]>([]);\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentSports(result.data);\n    }\n    setDataResult(result.result);\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Link to=\"/profile/government/\">\n          <Text>Back</Text>\n        </Link>\n        <Text>Government Sports</Text>\n      </View>\n      <View style={{ height: height * 0.4 }}>\n        {dataResult === loadingStateEnum.loading ? (\n          <View\n            style={{\n              height: height * 0.4,\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView\n              width={height * 0.4 < width ? height * 0.1 : width * 0.4}\n              height={height * 0.4 < width ? height * 0.1 : width * 0.4}\n            />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {dataResult === loadingStateEnum.success ? (\n              <View>\n                {currentSports.map(item => (\n                  <Pressable\n                    onPress={() => {\n                      navigate(\n                        `/profile/government/sports/team/${item.name}/${item.id}`,\n                      );\n                    }}\n                    key={item.id}\n                  >\n                    <View>\n                      <Text>{item.name}</Text>\n                    </View>\n                  </Pressable>\n                ))}\n              </View>\n            ) : (\n              <View>\n                <Text>Error</Text>\n              </View>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ height: height * 0.1, overflow: 'hidden' }}>\n        <Pressable\n          onPress={() => navigate('/profile/government/sports/create')}\n        >\n          <Text>Create Sport</Text>\n        </Pressable>\n        <Pressable\n          onPress={() => navigate('/profile/government/sports/post/create')}\n        >\n          <Text>Create Post</Text>\n        </Pressable>\n      </View>\n      <GovernmentHandleFileSubmissions width={width} height={height * 0.4} />\n    </View>\n  );\n}\n","import React, { useState } from 'react';\nimport { View, Text, TextInput, Pressable } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../../../../Redux/store';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport SVGXml from '../../../../UI/SVGXml/SVGXml';\n\nexport default function GovernmentCreateNewSport() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [sportName, setSportName] = useState<string>('');\n  const { siteId, sportsListId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const [svgData, setSvgData] = useState<string>(``);\n  const [createSportLoadingState, setCreateSportLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const navigate = useNavigate();\n\n  async function createSport() {\n    setCreateSportLoadingState(loadingStateEnum.loading);\n    const newSportID: string = createUUID();\n    const data = {\n      fields: {\n        Title: '',\n        sportName,\n        sportId: newSportID,\n        sportSvg: svgData,\n      },\n    };\n    const listData = {\n      displayName: newSportID,\n      columns: [\n        {\n          name: 'teamName',\n          text: {},\n          required: true,\n        },\n        {\n          name: 'season',\n          number: {},\n          required: true,\n        },\n        {\n          name: 'teamId',\n          text: {},\n          required: true,\n          indexed: true,\n          enforceUniqueValues: true,\n        },\n        {\n          name: 'microsoftTeamId',\n          text: {},\n        },\n      ],\n      list: {\n        template: ' genericList',\n      },\n    };\n    const resultList = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists`,\n      'POST',\n      JSON.stringify(listData),\n    );\n    if (resultList.ok) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${sportsListId}/items`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateSportLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateSportLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setCreateSportLoadingState(loadingStateEnum.failed);\n    }\n  }\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/sports');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Create New Sport</Text>\n      <Text>Sport Name</Text>\n      <TextInput value={sportName} onChangeText={setSportName} />\n      <TextInput\n        value={svgData}\n        onChangeText={e => {\n          setSvgData(e);\n        }}\n        multiline\n        numberOfLines={25}\n      />\n      <SVGXml xml={svgData} width={100} height={100} />\n      <Pressable\n        onPress={() => {\n          if (sportName !== '' && svgData !== '') {\n            createSport();\n          }\n        }}\n      >\n        <Text>\n          {createSportLoadingState === loadingStateEnum.notStarted\n            ? 'Create'\n            : createSportLoadingState === loadingStateEnum.loading\n            ? 'Loading'\n            : createSportLoadingState === loadingStateEnum.success\n            ? 'Created Sport!'\n            : 'Failed to create sport.'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getSport(\n  id: string,\n): Promise<{ result: loadingStateEnum; data?: sportType; listId?: string }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.sportsListId\n    }/items?$expand=fields&$filter=fields/sportId%20eq%20'${id}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    if (data.value.length === 1) {\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.value[0].fields.sportName,\n          id: data.value[0].fields.sportId,\n          svgData: data.value[0].fields.sportSvg,\n        },\n        listId: data.value[0].fields.id,\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable, Modal, TextInput } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { getSportsTeams } from '../../../../Functions/sports/sportsFunctions';\nimport { WarningIcon } from '../../../../UI/Icons/Icons';\nimport SVGXml from '../../../../UI/SVGXml/SVGXml';\nimport getSport from '../../../../Functions/sports/getSport';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nfunction SportsUpdateModel({\n  isPickingSvg,\n  setIsPickingSvg,\n  id,\n}: {\n  isPickingSvg: boolean;\n  setIsPickingSvg: (item: boolean) => void;\n  id: string;\n}) {\n  const [svgData, setSvgData] = useState<string>('');\n  const [listId, setListId] = useState<string>('');\n  const [getSportState, setGetSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [updateSportState, setUpdateSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  async function updateSport() {\n    setUpdateSportState(loadingStateEnum.loading);\n    const updateData = {\n      fields: {\n        sportSvg: svgData,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.sportsListId}/items/${listId}`,\n      'PATCH',\n      JSON.stringify(updateData),\n    );\n    if (result.ok) {\n      setUpdateSportState(loadingStateEnum.success);\n    } else {\n      const data = await result.json();\n      setUpdateSportState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadSport() {\n    const result = await getSport(id);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined &&\n      result.listId !== undefined\n    ) {\n      setListId(result.listId);\n      setSvgData(result.data.svgData);\n      setGetSportState(loadingStateEnum.success);\n    } else {\n      setGetSportState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadSport();\n  }, []);\n\n  return (\n    <Modal\n      visible={isPickingSvg}\n      animationType=\"slide\"\n      style={{ backgroundColor: Colors.white }}\n    >\n      {getSportState === loadingStateEnum.loading ? (\n        <View>\n          <Text>Loading</Text>\n          <Pressable onPress={() => setIsPickingSvg(false)}>\n            <Text>Dismiss</Text>\n          </Pressable>\n        </View>\n      ) : (\n        <>\n          {getSportState === loadingStateEnum.success ? (\n            <View>\n              <Text>Svg</Text>\n              <View style={{width: 100, height: 100, overflow: \"hidden\"}}>\n                <SVGXml xml={svgData} width={100} height={100} />\n              </View>\n              <TextInput\n                value={svgData}\n                onChangeText={e => {\n                  setSvgData(e);\n                }}\n                multiline\n                numberOfLines={25}\n              />\n              <Pressable onPress={() => updateSport()}>\n                <Text>\n                  {getTextState(updateSportState, { notStarted: 'Confirm' })}\n                </Text>\n              </Pressable>\n              <Pressable onPress={() => setIsPickingSvg(false)}>\n                <Text>Dismiss</Text>\n              </Pressable>\n            </View>\n          ) : (\n            <View>\n              <Text>Failed</Text>\n              <Pressable onPress={() => setIsPickingSvg(false)}>\n                <Text>Dismiss</Text>\n              </Pressable>\n            </View>\n          )}\n        </>\n      )}\n    </Modal>\n  );\n}\n\nexport default function GovernmentSportsTeams() {\n  const { sport, id } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [currentTeams, setCurrentTeams] = useState<sportTeamType[]>([]);\n  const [deleteSportState, setDeleteSportState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const [isPickingSvg, setIsPickingSvg] = useState<boolean>(false);\n\n  async function deleteSport() {\n    setDeleteSportState(loadingStateEnum.loading);\n    const listResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${id}`,\n      'DELETE',\n    );\n    if (listResult.ok) {\n      const getSportResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.sportsListId\n        }/items?$expand=fields&$filter=fields/sportId%20eq%20'${id}'&$select=id`,\n      );\n      if (getSportResult.ok) {\n        const getSportData = await getSportResult.json();\n        if (getSportData.value.length === 1) {\n          const itemDeleteResult = await callMsGraph(\n            `https://graph.microsoft.com/v1.0/sites/${\n              store.getState().paulyList.siteId\n            }/lists/${store.getState().paulyList.sportsListId}/items/${\n              getSportData.value[0].id\n            }`,\n            'DELETE',\n          );\n          if (itemDeleteResult.ok) {\n            setDeleteSportState(loadingStateEnum.success);\n          } else {\n            setDeleteSportState(loadingStateEnum.failed);\n          }\n        } else {\n          setDeleteSportState(loadingStateEnum.failed);\n        }\n      } else {\n        setDeleteSportState(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteSportState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadData() {\n    if (id !== undefined) {\n      const result = await getSportsTeams(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setCurrentTeams(result.data);\n      }\n      setDataResult(result.result);\n    } else {\n      setDataResult(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government/sports')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>{sport} Teams</Text>\n      <Pressable\n        style={{ borderRadius: 15, backgroundColor: 'red' }}\n        onPress={() => {\n          if (\n            deleteSportState === loadingStateEnum.notStarted ||\n            deleteSportState === loadingStateEnum.failed\n          ) {\n            deleteSport();\n          }\n        }}\n      >\n        <View style={{ flexDirection: 'row', margin: 10 }}>\n          <WarningIcon width={14} height={14} />\n          <Text>\n            {deleteSportState === loadingStateEnum.loading\n              ? 'Loading'\n              : deleteSportState === loadingStateEnum.notStarted\n              ? 'Delete Sport'\n              : deleteSportState === loadingStateEnum.success\n              ? 'Sport Deleted'\n              : 'Failed To Delete Sport'}\n          </Text>\n        </View>\n      </Pressable>\n      <Pressable onPress={() => setIsPickingSvg(true)}>\n        <Text>Pick Svg</Text>\n      </Pressable>\n      {id !== undefined ? (\n        <SportsUpdateModel\n          isPickingSvg={isPickingSvg}\n          setIsPickingSvg={setIsPickingSvg}\n          id={id}\n        />\n      ) : null}\n      <View>\n        {dataResult === loadingStateEnum.loading ? (\n          <View>\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {dataResult === loadingStateEnum.success ? (\n              <FlatList\n                data={currentTeams}\n                renderItem={item => (\n                  <Pressable\n                    key={`TeamBlock_${item.item.teamId}`}\n                    onPress={() =>\n                      navigate(\n                        `/profile/government/sports/team/${sport}/${id}/${item.item.teamId}`,\n                      )\n                    }\n                  >\n                    <Text style={{ margin: 10 }}>{item.item.teamName}</Text>\n                  </Pressable>\n                )}\n              />\n            ) : (\n              <View>\n                <Text>Error</Text>\n              </View>\n            )}\n          </>\n        )}\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate(`/profile/government/sports/team/${sport}/${id}/create`)\n        }\n      >\n        <Text>Create New Team</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { loadingStateEnum } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function getUserMicrosoftFiles(\n  path: string,\n): Promise<{ result: loadingStateEnum; data?: microsoftFileType[] }> {\n  const result = await callMsGraph(path);\n  if (result.ok) {\n    const data = await result.json();\n    const newFiles: microsoftFileType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      newFiles.push({\n        name: data.value[index].name,\n        id: data.value[index].id,\n        lastModified: data.value[index].lastModifiedDateTime,\n        folder: data.value[index].folder !== undefined,\n        parentDriveId: data.value[index].parentReference.driveId,\n        parentPath: data.value[index].parentReference.path,\n        itemGraphPath: data.value[index].folder === undefined ? path : 'FOLDER',\n        callPath: `https://graph.microsoft.com/v1.0/me/drives/${data.value[index].parentReference.driveId}/items/${data.value[index].id}`,\n        type:\n          data.value[index].folder === undefined\n            ? data.value[index].file.mimeType\n            : 'folder',\n      });\n    }\n    return { result: loadingStateEnum.success, data: newFiles };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function getUserTeams(): Promise<\n  | { result: loadingStateEnum.success; data: teamsGroupType[] }\n  | { result: loadingStateEnum.failed }\n> {\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/joinedTeams',\n  ); // TODO make sure this works on live tenancy\n  if (result.ok) {\n    const data = await result.json();\n    const newData: teamsGroupType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      if (data.value[index] !== undefined) {\n        newData.push({\n          teamName: data.value[index].displayName,\n          teamId: data.value[index].id,\n          teamDescription: data.value[index].description,\n        });\n      }\n    }\n    return { result: loadingStateEnum.success, data: newData };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import React, { useEffect, useState } from 'react';\nimport {\n  Pressable,\n  View,\n  Text,\n  TextInput,\n  ScrollView,\n  FlatList,\n} from 'react-native';\nimport Picker from './Pickers/Picker';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport MimeTypeIcon from './Icons/MimeTypeIcon';\nimport createUUID from '../Functions/ultility/createUUID';\nimport {\n  getUserMicrosoftFiles,\n  getUserTeams,\n} from '../Functions/microsoftFilePickerFunctions';\nimport { Colors, loadingStateEnum } from '../types';\nimport ProgressView from './ProgressView';\n\nenum MicrosoftUploadModeType {\n  ShareLink,\n  Personal,\n  Site,\n}\n\nexport default function ({\n  onSetIsShowingUpload,\n  onSetIsShowingMicrosoftUpload,\n  onSelectedFile,\n  height,\n  width,\n}: {\n  height: number;\n  width: number;\n  onSetIsShowingUpload?: (item: boolean) => void;\n  onSetIsShowingMicrosoftUpload?: (item: boolean) => void;\n  onSelectedFile: (item: microsoftFileType) => void;\n}) {\n  const [usersTeams, setUsersTeams] = useState<teamsGroupType[]>([]);\n  const [selectedMicrosoftUploadMode, setSelectedMicrosoftUploadMode] =\n    useState<MicrosoftUploadModeType>(MicrosoftUploadModeType.Personal);\n  const [shareLinkString, setShareLinkString] = useState<string>('');\n\n  async function loadUserTeams() {\n    const result = await getUserTeams();\n    if (result.result === loadingStateEnum.success) {\n      setUsersTeams(result.data);\n    } else {\n    }\n  }\n\n  useEffect(() => {\n    loadUserTeams();\n  }, []);\n\n  async function getShareFile(shareLink: string) {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/shares/${shareLink}/driveItem?$select=content.downloadUrl`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      onSelectedFile({\n        name: '',\n        id: '',\n        lastModified: '',\n        folder: false,\n        parentDriveId: '',\n        parentPath: '',\n        itemGraphPath: '',\n        callPath: '',\n        type: '',\n      });\n    }\n  }\n\n  return (\n    <View style={{ height, width }}>\n      <View style={{ flexDirection: 'row' }}>\n        <Text style={{ textAlign: 'left' }}>Upload File From Microsoft</Text>\n        {onSetIsShowingMicrosoftUpload === undefined ||\n        onSetIsShowingUpload === undefined ? null : (\n          <Pressable\n            onPress={() => {\n              onSetIsShowingUpload(false);\n              onSetIsShowingMicrosoftUpload(false);\n            }}\n          >\n            <View>\n              <Text>Back</Text>\n            </View>\n          </Pressable>\n        )}\n      </View>\n      <View>\n        <View style={{ width }}>\n          <Picker\n            selectedIndex={\n              selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal\n                ? 0\n                : selectedMicrosoftUploadMode ===\n                  MicrosoftUploadModeType.ShareLink\n                ? 1\n                : 2\n            }\n            onSetSelectedIndex={(item: number) => {\n              item === 0\n                ? setSelectedMicrosoftUploadMode(\n                    MicrosoftUploadModeType.Personal,\n                  )\n                : item === 1\n                ? setSelectedMicrosoftUploadMode(\n                    MicrosoftUploadModeType.ShareLink,\n                  )\n                : setSelectedMicrosoftUploadMode(MicrosoftUploadModeType.Site);\n            }}\n            width={width}\n            height={30}\n          >\n            <Text style={{ margin: 0, padding: 0 }}>Personal</Text>\n            <Text style={{ margin: 0, padding: 0 }}>Link</Text>\n            <Text style={{ margin: 0, padding: 0 }}>Teams</Text>\n          </Picker>\n        </View>\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.Personal ? (\n          <PersonalBlock\n            height={height}\n            width={width}\n            onSelectedFile={onSelectedFile}\n          />\n        ) : null}\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.ShareLink ? (\n          <View>\n            <View>\n              <Text>Share Link</Text>\n              <TextInput\n                placeholder=\"Share Link\"\n                value={shareLinkString}\n                onChangeText={e => {\n                  setShareLinkString(e);\n                }}\n              />\n            </View>\n            <Pressable\n              onPress={() => {\n                // TO DO make this work\n                let base64Value = btoa(shareLinkString);\n                base64Value.replace('/', '_');\n                base64Value.replace('+', '-');\n                base64Value.trimEnd();\n                base64Value = `u!${base64Value}`;\n                getShareFile(base64Value);\n              }}\n            >\n              <Text>Submit</Text>\n            </Pressable>\n          </View>\n        ) : null}\n        {selectedMicrosoftUploadMode === MicrosoftUploadModeType.Site ? (\n          <TeamsBlock userTeams={usersTeams} height={height} />\n        ) : null}\n      </View>\n    </View>\n  );\n}\n\nenum teamFileMode {\n  team,\n  channel,\n  file,\n}\n\nfunction TeamsBlock({\n  userTeams,\n  height,\n}: {\n  userTeams: teamsGroupType[];\n  height: number;\n}) {\n  const [selectedTeamFileMode, setSelectedTeamFileMode] =\n    useState<teamFileMode>(teamFileMode.team);\n  return (\n    <FlatList\n      data={userTeams}\n      renderItem={team => (\n        <View>\n          {team.item.teamName !== 'Student Password Policy' &&\n          team.item.teamName !== \"St Paul's High School\" &&\n          team.item.teamName !== 'Adobe_Student' &&\n          team.item.teamName !== 'O365 Student A3 License Assignment' &&\n          team.item.teamName !== 'Student' ? (\n            <View>\n              <Text>{team.item.teamName}</Text>\n            </View>\n          ) : null}\n        </View>\n      )}\n      style={{ height: height * 0.8 }}\n    />\n  );\n}\n\nfunction PersonalBlock({\n  height,\n  width,\n  onSelectedFile,\n}: {\n  height: number;\n  width: number;\n  onSelectedFile: (item: microsoftFileType) => void;\n}) {\n  const [usersFiles, setUsersFies] = useState<microsoftFileType[]>([]);\n  const [microsoftPath, setMicrosoftPath] = useState<string>(\n    'https://graph.microsoft.com/v1.0/me/drive/root/children',\n  );\n  const [fileBackAvaliable, setFilesBackAvaliable] = useState<boolean>(false);\n  const [getFilesState, setGetFilesState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadGetUserMicrosoftFiles(path: string) {\n    setGetFilesState(loadingStateEnum.loading);\n    const result = await getUserMicrosoftFiles(path);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setUsersFies(result.data);\n      setGetFilesState(loadingStateEnum.success);\n    } else {\n      setGetFilesState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadGetUserMicrosoftFiles(microsoftPath);\n  }, []);\n\n  return (\n    <ScrollView style={{ height: height - 20 }}>\n      {fileBackAvaliable ? (\n        <Pressable\n          onPress={() => {\n            const microsftPathArray = microsoftPath.split('/');\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            microsftPathArray.pop();\n            let outputString = '';\n            for (let index = 0; index < microsftPathArray.length; index += 11) {\n              outputString += `${microsftPathArray[index]}/`;\n            }\n            outputString += '/items/root/children';\n            setMicrosoftPath(outputString);\n            loadGetUserMicrosoftFiles(outputString);\n            setFilesBackAvaliable(false);\n          }}\n        >\n          <Text>Back</Text>\n        </Pressable>\n      ) : null}\n      <>\n        {getFilesState === loadingStateEnum.loading ? (\n          <View\n            style={{\n              width,\n              height,\n              backgroundColor: Colors.white,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView width={14} height={14} />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {getFilesState === loadingStateEnum.success ? (\n              <FlatList\n                data={usersFiles}\n                renderItem={file => (\n                  <Pressable\n                    onPress={() => {\n                      if (file.item.folder) {\n                        setMicrosoftPath(\n                          `https://graph.microsoft.com/v1.0/drives/${file.item.parentDriveId}/items/${file.item.id}/children`,\n                        );\n                        loadGetUserMicrosoftFiles(\n                          `https://graph.microsoft.com/v1.0/drives/${file.item.parentDriveId}/items/${file.item.id}/children`,\n                        );\n                        setFilesBackAvaliable(true);\n                      } else {\n                        onSelectedFile(file.item);\n                      }\n                    }}\n                    key={`Users_${file.item.id}_${createUUID()}`}\n                  >\n                    <View style={{ flexDirection: 'row', margin: 5 }}>\n                      <MimeTypeIcon\n                        width={20}\n                        height={20}\n                        mimeType={file.item.type}\n                      />\n                      <Text style={{ padding: 0, margin: 0 }}>\n                        {file.item.name}\n                      </Text>\n                    </View>\n                  </Pressable>\n                )}\n              />\n            ) : (\n              <Text>Failed to load</Text>\n            )}\n          </>\n        )}\n      </>\n    </ScrollView>\n  );\n}\n","import {\n  View,\n  Text,\n  TextInput,\n  Pressable,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList, ScrollView } from 'react-native-gesture-handler';\nimport { convertYearToSchoolYear } from '../../../../Functions/calendar/calendarFunctions';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n} from '../../../../types';\nimport store, { RootState } from '../../../../Redux/store';\nimport { getTeams } from '../../../../Functions/groupsData';\nimport ProgressView from '../../../../UI/ProgressView';\nimport MicrosoftFilePicker from '../../../../UI/MicrosoftFilePicker';\nimport { CloseIcon } from '../../../../UI/Icons/Icons';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\n\nexport default function GovernmentCreateNewTeam() {\n  const { sport, id, teamId } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const navigate = useNavigate();\n\n  const [createTeamLoadingState, setCreateTeamLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [teamDataState, setTeamDataState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [isCreatingTeam, setIsCreatingTeam] = useState<boolean>(true);\n\n  // Team Data\n  const [teamName, setTeamName] = useState<string>('');\n  const [season, setSeason] = useState<number>(new Date().getFullYear());\n  const [teamListItemId, setTeamListItemId] = useState<string>('');\n\n  const [teamsState, setTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [teams, setTeams] = useState<groupType[]>([]);\n  const [teamsNextLink, setTeamsNextLink] = useState<undefined | string>(\n    undefined,\n  );\n  const [selectedMicrosoftTeam, setSelectedMicrosoftTeam] = useState<\n    groupType | undefined\n  >(undefined);\n  const [isSelectingFile, setIsSelectingFile] = useState<boolean>(false);\n  const [selectedFile, setSelectedFile] = useState<string>('');\n\n  async function loadMicrosftTeams() {\n    const result = await getTeams(\n      \"https://graph.microsoft.com/v1.0/groups?$filter=resourceProvisioningOptions/Any(x:x%20eq%20'Team')\",\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setTeams(result.data);\n      setTeamsNextLink(result.nextLink);\n    }\n    setTeamsState(result.result);\n  }\n\n  async function updateTeam() {\n    // This function will also create a team\n    setCreateTeamLoadingState(loadingStateEnum.loading);\n    if (!isCreatingTeam) {\n      let data: object = {\n        fields: {\n          teamName,\n          season,\n        },\n      };\n      if (selectedMicrosoftTeam !== undefined) {\n        data = {\n          fields: {\n            teamName,\n            season,\n            microsoftTeamId: selectedMicrosoftTeam.id,\n          },\n        };\n      }\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items/${teamListItemId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateTeamLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTeamLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      const newTeamId = createUUID();\n      let data: object = {\n        fields: {\n          Title: '',\n          teamName,\n          season,\n          teamId: newTeamId,\n        },\n      };\n      if (selectedMicrosoftTeam !== undefined) {\n        data = {\n          fields: {\n            teamName,\n            season,\n            teamId: newTeamId,\n            microsoftTeamId: selectedMicrosoftTeam.id,\n          },\n        };\n      }\n      const listData = {\n        displayName: newTeamId,\n        columns: [\n          {\n            name: 'playerId', // This is any member of the rester\n            text: {},\n            required: true,\n            indexed: true,\n            enforceUniqueValues: true,\n          },\n          {\n            name: 'position',\n            text: {},\n          },\n          {\n            name: 'playerNumber',\n            text: {},\n          },\n          {\n            name: 'posts',\n            text: { allowMultipleLines: true },\n          },\n          {\n            name: 'imageShareId',\n            text: {},\n          },\n        ],\n        list: {\n          template: ' genericList',\n        },\n      };\n\n      const batchData = {\n        requests: [\n          {\n            id: '1',\n            method: 'POST',\n            url: `/sites/${siteId}/lists/${id}/items`,\n            body: data,\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n          {\n            id: '2',\n            method: 'POST',\n            dependsOn: ['1'],\n            url: `/sites/${siteId}/lists`,\n            body: listData,\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        ],\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/$batch`,\n        'POST',\n        JSON.stringify(batchData),\n      );\n      if (result.ok) {\n        setCreateTeamLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTeamLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function deleteTeam() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items/${teamListItemId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n    } else {\n    }\n  }\n\n  async function getMicrosoftTeam(\n    getMicrosoftTeamId: string,\n  ): Promise<{ result: loadingStateEnum; data?: groupType }> {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${getMicrosoftTeamId}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      return {\n        result: loadingStateEnum.success,\n        data: {\n          name: data.displayName,\n          id: data.id,\n        },\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n\n  async function getTeamData() {\n    setTeamDataState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items?expand=fields($select=teamId,teamName,season,microsoftTeamId)&$filter=fields/teamId%20eq%20'${teamId}'&$select=id`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length === 1) {\n        setTeamName(data.value[0].fields.teamName);\n        setSeason(data.value[0].fields.season);\n        setTeamListItemId(data.value[0].id);\n        if (data.value[0].fields.microsoftTeamId !== undefined) {\n          const teamResult = await getMicrosoftTeam(\n            data.value[0].fields.microsoftTeamId,\n          );\n          if (\n            teamResult.result === loadingStateEnum.success &&\n            teamResult.data !== undefined\n          ) {\n            setSelectedMicrosoftTeam(teamResult.data);\n            setTeamDataState(loadingStateEnum.success);\n          } else {\n            setTeamDataState(loadingStateEnum.failed);\n          }\n        } else {\n          setTeamDataState(loadingStateEnum.success);\n        }\n      } else {\n        setTeamDataState(loadingStateEnum.failed);\n      }\n    } else {\n      setTeamDataState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadMicrosftTeams();\n  }, []);\n\n  useEffect(() => {\n    if (teamId === 'create') {\n      setIsCreatingTeam(true);\n    } else {\n      setIsCreatingTeam(false);\n      getTeamData();\n    }\n  }, [teamId]);\n\n  return (\n    <>\n      {isCreatingTeam || teamDataState === loadingStateEnum.success ? (\n        <ScrollView\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() =>\n              navigate(`/profile/government/sports/team/${sport}/${id}`)\n            }\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <View>\n            <Text>\n              {isCreatingTeam\n                ? `Create a new ${sport} team`\n                : `Edit the ${teamName} ${sport} Team`}\n            </Text>\n          </View>\n          <View\n            style={{\n              margin: 10,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: '#FFFFFF',\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 5 }}>\n              <View style={{ flexDirection: 'row' }}>\n                <Text>Team Name:</Text>\n                <TextInput\n                  value={teamName}\n                  onChangeText={text => setTeamName(text)}\n                  placeholder=\"Team Name\"\n                />\n              </View>\n              <View>\n                <Text>Season</Text>\n                <Text>{convertYearToSchoolYear(season)}</Text>\n                <TextInput\n                  keyboardType=\"numeric\"\n                  onChangeText={text => {\n                    if (text === '') {\n                      setSeason(0);\n                    } else {\n                      setSeason(parseFloat(text));\n                    }\n                  }}\n                  value={season.toString()}\n                  maxLength={10} // setting limit of input\n                />\n              </View>\n            </View>\n          </View>\n          <View\n            style={{\n              height: height * 0.5,\n              margin: 10,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: '#FFFFFF',\n              borderRadius: 15,\n            }}\n          >\n            <View\n              style={{\n                margin: 10,\n                shadowColor: 'black',\n                shadowOffset: { width: 0, height: 1 },\n                shadowOpacity: 0.8,\n                shadowRadius: 10,\n                backgroundColor: '#FFFFFF',\n                borderRadius: 15,\n              }}\n            >\n              <View style={{ margin: 5 }}>\n                <Text>Selected Team</Text>\n                {selectedMicrosoftTeam !== undefined ? (\n                  <Pressable\n                    onPress={() => {\n                      setSelectedMicrosoftTeam(undefined);\n                    }}\n                  >\n                    <Text>{selectedMicrosoftTeam.name}</Text>\n                  </Pressable>\n                ) : (\n                  <Text>NO TEAM SELECTED</Text>\n                )}\n              </View>\n            </View>\n            <View style={{ marginLeft: 5, marginRight: 5 }}>\n              <FlatList\n                data={teams}\n                renderItem={team => (\n                  <>\n                    {team.item.id !== selectedMicrosoftTeam?.id ? (\n                      <Pressable\n                        key={`Team_${team.item.id}_${createUUID()}`}\n                        onPress={() => {\n                          setSelectedMicrosoftTeam(team.item);\n                        }}\n                      >\n                        <Text>{team.item.name}</Text>\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              />\n            </View>\n          </View>\n          {selectedMicrosoftTeam === undefined ? (\n            <View>\n              <Text>Select a team in order to get a roster</Text>\n            </View>\n          ) : (\n            <>\n              {isCreatingTeam || teamId === undefined ? (\n                <View>\n                  <Text>\n                    Please Create the team and return later to finish the roster\n                  </Text>\n                </View>\n              ) : (\n                <View>\n                  <Text>Roster</Text>\n                  <RosterBlock\n                    microsoftTeamId={selectedMicrosoftTeam.id}\n                    width={100}\n                    height={100}\n                    teamId={teamId}\n                    selectedFile={selectedFile}\n                    setIsSelectingFile={setIsSelectingFile}\n                    setSelectedFile={setSelectedFile}\n                    isSelectingFile={isSelectingFile}\n                  />\n                </View>\n              )}\n            </>\n          )}\n\n          <Pressable\n            style={{\n              margin: 10,\n              backgroundColor: 'red',\n              borderRadius: 15,\n              zIndex: -100,\n            }}\n            onPress={() => deleteTeam()}\n          >\n            <Text style={{ margin: 10 }}>Delete Team</Text>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              if (createTeamLoadingState === loadingStateEnum.notStarted) {\n                updateTeam();\n              } else if (createTeamLoadingState === loadingStateEnum.failed) {\n                setCreateTeamLoadingState(loadingStateEnum.notStarted);\n              }\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {createTeamLoadingState === loadingStateEnum.notStarted\n                ? isCreatingTeam\n                  ? 'CREATE TEAM'\n                  : 'UPDATE TEAM'\n                : createTeamLoadingState === loadingStateEnum.loading\n                ? 'LOADING'\n                : createTeamLoadingState === loadingStateEnum.success\n                ? 'SUCCESS'\n                : 'FAILED'}\n            </Text>\n          </Pressable>\n        </ScrollView>\n      ) : (\n        <>\n          {teamDataState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <ProgressView width={width * 0.1} height={height * 0.1} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              <Pressable\n                onPress={() => {\n                  navigate(`/profile/government/sports/team/${sport}/${id}`);\n                }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n      {isSelectingFile ? (\n        <RosterSelectFile\n          setIsSelectingFile={setIsSelectingFile}\n          setSelectedFile={setSelectedFile}\n        />\n      ) : null}\n    </>\n  );\n}\n\nfunction RosterBlock({\n  microsoftTeamId,\n  width,\n  height,\n  teamId,\n  setIsSelectingFile,\n  selectedFile,\n  isSelectingFile,\n  setSelectedFile,\n}: {\n  microsoftTeamId: string;\n  width: number;\n  height: number;\n  teamId: string;\n  selectedFile: string;\n  setSelectedFile: (item: string) => void;\n  isSelectingFile: boolean;\n  setIsSelectingFile: (item: boolean) => void;\n}) {\n  const [membersState, setMembersState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [members, setMembers] = useState<governmentRosterType[]>([]);\n\n  async function getMembers() {\n    const teamResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${teamId}/items?$expand=fields($select=playerId,position,playerNumber,posts,imageShareId)&$select=id`,\n    );\n    if (teamResult.ok) {\n      const teamResultData = await teamResult.json();\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/teams/${microsoftTeamId}/members`,\n      );\n      if (result.ok) {\n        const data = await result.json();\n        const users: microsoftUserType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          users.push({\n            id: data.value[index].userId,\n            displayName: data.value[index].displayName,\n          });\n        }\n        const rosters: governmentRosterType[] = [];\n        for (\n          let teamIndex = 0;\n          teamIndex < teamResultData.value.length;\n          teamIndex += 1\n        ) {\n          const userData = users.findIndex(e => {\n            return e.id === teamResultData.value[teamIndex].fields.playerId;\n          });\n          console.log(userData);\n          if (userData !== -1) {\n            rosters.push({\n              name: users[userData].displayName,\n              id: teamResultData.value[teamIndex].fields.playerId,\n              listItemId: teamResultData.value[teamIndex].id,\n              imageShareId: teamResultData.value[teamIndex].fields.imageShareId,\n              position: teamResultData.value[teamIndex].fields.position,\n              playerNumber: teamResultData.value[teamIndex].fields.playerNumber,\n              posts:\n                teamResultData.value[teamIndex].fields.posts !== undefined\n                  ? JSON.parse(\n                      teamResultData.value[teamIndex].fields.playerNumber,\n                    )\n                  : undefined,\n            });\n            const save = users[0];\n            users[0] = users[userData];\n            users[userData] = save;\n            users.shift();\n          }\n        }\n\n        for (let index = 0; index < users.length; index += 1) {\n          rosters.push({\n            name: users[index].displayName,\n            id: users[index].id,\n          });\n        }\n        setMembers(rosters);\n        setMembersState(loadingStateEnum.success);\n      } else {\n        setMembersState(loadingStateEnum.failed);\n      }\n    } else {\n      setMembersState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getMembers();\n  }, []);\n\n  return (\n    <>\n      {membersState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={width * 0.1} height={height * 0.1} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {membersState === loadingStateEnum.success ? (\n            <View>\n              <FlatList\n                data={members}\n                renderItem={member => (\n                  <RosterBlockItem\n                    members={members}\n                    setMembers={setMembers}\n                    member={member}\n                    teamId={teamId}\n                    selectedFile={selectedFile}\n                    setIsSelectingFile={setIsSelectingFile}\n                    setSelectedFile={setSelectedFile}\n                    isSelectingFile={isSelectingFile}\n                  />\n                )}\n              />\n            </View>\n          ) : (\n            <View>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction RosterBlockItem({\n  member,\n  members,\n  setMembers,\n  teamId,\n  setIsSelectingFile,\n  isSelectingFile,\n  selectedFile,\n  setSelectedFile,\n}: {\n  members: governmentRosterType[];\n  setMembers: (item: governmentRosterType[]) => void;\n  member: ListRenderItemInfo<governmentRosterType>;\n  teamId: string;\n  selectedFile: string;\n  setSelectedFile: (item: string) => void;\n  isSelectingFile: boolean;\n  setIsSelectingFile: (item: boolean) => void;\n}) {\n  const [rosterState, setRosterState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [callingSelectedFile, setIsCallingSelectedFile] =\n    useState<boolean>(false);\n  const [imageUrl, setImageUrl] = useState<string>('');\n\n  async function createMemberItem(member: governmentRosterType) {\n    const index = members.findIndex(e => {\n      return e.id === member.id;\n    });\n    if (index === -1) {\n      setRosterState(loadingStateEnum.failed);\n      return;\n    }\n    setRosterState(loadingStateEnum.loading);\n    const data = {\n      fields: {\n        playerNumber: member.playerNumber,\n        position: member.position,\n        playerId: member.id,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${teamId}/items`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      const save = members;\n      save[index].listItemId = data.id;\n      setMembers(save);\n      setRosterState(loadingStateEnum.success);\n    } else {\n      setRosterState(loadingStateEnum.failed);\n    }\n  }\n\n  async function updatePlayerData(member: governmentRosterType) {\n    if (member.listItemId !== undefined) {\n      setRosterState(loadingStateEnum.loading);\n      const data = {\n        fields: {\n          playerNumber: member.playerNumber,\n          position: member.position,\n          imageShareId: member.imageShareId,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${teamId}/items/${member.listItemId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setRosterState(loadingStateEnum.success);\n      } else {\n        setRosterState(loadingStateEnum.failed);\n      }\n    } else {\n      createMemberItem(member);\n    }\n  }\n\n  useEffect(() => {\n    if (callingSelectedFile) {\n      const save = members;\n      save[member.index].imageShareId = selectedFile;\n      setSelectedFile('');\n      setMembers(save);\n      updatePlayerData(save[member.index]);\n    }\n    if (isSelectingFile === false) {\n      setIsCallingSelectedFile(false);\n    }\n  }, [isSelectingFile, selectedFile]);\n\n  async function loadImage() {\n    if (member.item.imageShareId !== undefined) {\n      const result = await getFileWithShareID(member.item.imageShareId);\n      console.log(result);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.url &&\n        result.contentType === dataContentTypeOptions.image\n      ) {\n        setImageUrl(result.url);\n      } else {\n        setImageUrl('');\n      }\n    } else {\n      setImageUrl('');\n    }\n  }\n\n  useEffect(() => {\n    loadImage();\n  }, [member.item.imageShareId]);\n\n  return (\n    <View\n      key={`Member_${member.item.id}_${createUUID()}`}\n      style={{ margin: 5 }}\n    >\n      <View>\n        {rosterState === loadingStateEnum.loading ? (\n          <ProgressView width={14} height={14} />\n        ) : (\n          <>\n            {rosterState === loadingStateEnum.success ||\n            rosterState === loadingStateEnum.notStarted ? (\n              <View\n                style={{\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                  backgroundColor: 'green',\n                }}\n              />\n            ) : (\n              <View\n                style={{\n                  width: 14,\n                  height: 14,\n                  borderRadius: 7,\n                  backgroundColor: 'red',\n                }}\n              />\n            )}\n          </>\n        )}\n      </View>\n      <Text>{member.item.name}</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Player Number:</Text>\n        <TextInput\n          value={member.item.playerNumber}\n          onChangeText={e => {\n            const save = members;\n            save[member.index].playerNumber = e;\n            setMembers([...save]);\n          }}\n          onFocus={() => {}}\n          onBlur={() => {\n            updatePlayerData(member.item);\n          }}\n        />\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>Position:</Text>\n        <TextInput\n          value={member.item.position}\n          onChangeText={e => {\n            const save = members;\n            save[member.index].position = e;\n            setMembers([...save]);\n          }}\n          onBlur={() => {\n            updatePlayerData(member.item);\n          }}\n        />\n      </View>\n      {imageUrl !== '' ? (\n        <Image source={{ uri: imageUrl }} style={{ width: 100, height: 100 }} />\n      ) : null}\n      <Pressable\n        onPress={() => {\n          setIsSelectingFile(true);\n          setIsCallingSelectedFile(true);\n        }}\n      >\n        <Text>Choose Player Image</Text>\n      </Pressable>\n    </View>\n  );\n}\n\nfunction RosterSelectFile({\n  setIsSelectingFile,\n  setSelectedFile,\n}: {\n  setIsSelectingFile: (item: boolean) => void;\n  setSelectedFile: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: '#ededed',\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setIsSelectingFile(false);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <View\n        style={{\n          height: height * 0.8,\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          backgroundColor: Colors.white,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          <MicrosoftFilePicker\n            height={height * 0.8 - 5}\n            width={width * 0.8 - 5}\n            onSelectedFile={async file => {\n              const data = {\n                type: 'view',\n                scope: 'organization',\n              };\n              const result = await callMsGraph(\n                `${file.callPath}/createLink`,\n                'POST',\n                JSON.stringify(data),\n              );\n              if (result.ok) {\n                const data = await result.json();\n                if (data.shareId !== undefined) {\n                  setSelectedFile(data.shareId);\n                  setIsSelectingFile(false);\n                } else {\n                  setIsSelectingFile(false);\n                }\n              } else {\n                setIsSelectingFile(false);\n              }\n            }}\n          />\n        </View>\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport MicrosoftFilePicker from '../../../../UI/MicrosoftFilePicker';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport {\n  getSports,\n  getSportsTeams,\n} from '../../../../Functions/sports/sportsFunctions';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentSportsTeamAddPost() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [selectedShareID, setSelectedShareID] = useState<string>('');\n  const [postName, setPostName] = useState<string>('');\n  const [postSubmissionState, setPostSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const navigate = useNavigate();\n  const [selectedSportId, setSelectedSportId] = useState<string>('');\n  const [selectedTeamId, setSelectedTeamId] = useState<string>('');\n\n  async function getShareLink(item: microsoftFileType) {\n    const itemPathArray = item.itemGraphPath.split('/');\n    if (itemPathArray[itemPathArray.length - 1] === 'children') {\n      const data = {\n        type: 'view',\n        scope: 'organization',\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/drives/${item.parentDriveId}/items/${item.id}/createLink`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        const dataOut = await result.json();\n        setSelectedShareID(dataOut.shareId);\n      } else {\n      }\n    }\n  }\n  async function createFileSubmission(fileID: string) {\n    if (selectedShareID !== '' && selectedTeamId !== '') {\n      setPostSubmissionState(loadingStateEnum.loading);\n      const userIdResult = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/me',\n      );\n      if (userIdResult.ok) {\n        const userData = await userIdResult.json();\n        const submissionID = createUUID();\n        const data = {\n          fields: {\n            Title: postName,\n            fileId: fileID,\n            accepted: false,\n            user: userData.id,\n            timeCreated: new Date().toISOString(),\n            submissionId: submissionID,\n            reviewed: false,\n            selectedSportId,\n            selectedTeamId,\n          },\n        };\n        const result = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${\n            store.getState().paulyList.sportsSubmissionsListId\n          }/items`,\n          'POST',\n          JSON.stringify(data),\n        ); // TO DO fix id\n        if (result.ok) {\n          setPostSubmissionState(loadingStateEnum.success);\n        } else {\n          setPostSubmissionState(loadingStateEnum.failed);\n        }\n      } else {\n        setPostSubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/sports');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Add Sports Team Post</Text>\n      <TextInput\n        value={postName}\n        onChangeText={e => {\n          setPostName(e);\n        }}\n      />\n      <PickSportTeam\n        height={400}\n        width={width}\n        onSelect={e => {\n          setSelectedSportId(e.sportId);\n          setSelectedTeamId(e.teamId);\n        }}\n        onBack={() => {\n          setSelectedSportId('');\n          setSelectedTeamId('');\n        }}\n      />\n      <MicrosoftFilePicker\n        onSelectedFile={(item: microsoftFileType) => {\n          getShareLink(item);\n        }}\n        height={500}\n        width={width}\n      />\n      {selectedShareID !== '' ? (\n        <Pressable\n          onPress={() => {\n            if (\n              postSubmissionState === loadingStateEnum.notStarted &&\n              selectedShareID !== '' &&\n              selectedTeamId !== ''\n            ) {\n              createFileSubmission(selectedShareID);\n            }\n          }}\n        >\n          <Text>\n            {selectedShareID !== '' && selectedTeamId !== ''\n              ? 'Submit'\n              : 'Select Team'}\n          </Text>\n        </Pressable>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.failed ? (\n        <Text>Failure</Text>\n      ) : null}\n      {postSubmissionState === loadingStateEnum.success ? (\n        <Text>Success</Text>\n      ) : null}\n    </ScrollView>\n  );\n}\n\nfunction PickSportTeam({\n  width,\n  height,\n  onSelect,\n  onBack,\n}: {\n  width: number;\n  height: number;\n  onSelect: (item: { sportId: string; teamId: string }) => void;\n  onBack: () => void;\n}) {\n  const [currentSports, setCurrentSports] = useState<sportType[]>([]);\n  const [dataResult, setDataResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedSport, setSelectedSport] = useState<sportType | undefined>(\n    undefined,\n  );\n  const [sportsTeams, setSportTeams] = useState<sportTeamType[]>([]);\n  const [sportTeamState, setSportTeamState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadData() {\n    const result = await getSports();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setCurrentSports(result.data);\n    }\n    setDataResult(result.result);\n  }\n\n  async function loadTeams() {\n    if (selectedSport !== undefined) {\n      setSportTeamState(loadingStateEnum.loading);\n      const result = await getSportsTeams(selectedSport.id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setSportTeams(result.data);\n      }\n      setSportTeamState(result.result);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  useEffect(() => {\n    loadTeams();\n  }, [selectedSport]);\n\n  return (\n    <View style={{ width, height }}>\n      <>\n        {sportsTeams === undefined ||\n        sportTeamState === loadingStateEnum.notStarted ? (\n          <>\n            {dataResult === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.1 : height * 0.1}\n                  height={width < height ? width * 0.1 : height * 0.1}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {dataResult === loadingStateEnum.success ? (\n                  <>\n                    {currentSports.map((item, id) => (\n                      <Pressable\n                        key={id}\n                        onPress={() => setSelectedSport(item)}\n                      >\n                        <View>\n                          <Text>{item.name}</Text>\n                        </View>\n                      </Pressable>\n                    ))}\n                  </>\n                ) : (\n                  <View>\n                    <Text>Error</Text>\n                  </View>\n                )}\n              </>\n            )}\n          </>\n        ) : (\n          <>\n            {sportTeamState === loadingStateEnum.loading ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                }}\n              >\n                <ProgressView\n                  width={width < height ? width * 0.1 : height * 0.1}\n                  height={width < height ? width * 0.1 : height * 0.1}\n                />\n                <Text>Loading</Text>\n              </View>\n            ) : (\n              <>\n                {sportTeamState === loadingStateEnum.success &&\n                selectedSport !== undefined ? (\n                  <View>\n                    <Pressable\n                      onPress={() => {\n                        setSelectedSport(undefined);\n                        setSportTeamState(loadingStateEnum.notStarted);\n                        setSportTeams([]);\n                        onBack();\n                      }}\n                    >\n                      <Text>Back</Text>\n                    </Pressable>\n                    {sportsTeams.map((item, id) => (\n                      <Pressable\n                        key={id}\n                        onPress={() =>\n                          onSelect({\n                            sportId: selectedSport.id,\n                            teamId: item.teamId,\n                          })\n                        }\n                      >\n                        <View>\n                          <Text>{item.teamName}</Text>\n                        </View>\n                      </Pressable>\n                    ))}\n                  </View>\n                ) : (\n                  <View>\n                    <Text>Error</Text>\n                  </View>\n                )}\n              </>\n            )}\n          </>\n        )}\n      </>\n    </View>\n  );\n}\n","import { View, Text, Image, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { ResizeMode, Video } from 'expo-av';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport getFileWithShareID from '../../../../Functions/ultility/getFileWithShareID';\nimport store, { RootState } from '../../../../Redux/store';\nimport {\n  Colors,\n  dataContentTypeOptions,\n  loadingStateEnum,\n} from '../../../../types';\n// import Video from 'react-native-video';\n\nexport default function GovernmentReviewFileSubmission() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const { submissionID } = useParams();\n  const [dataURL, setDataURL] = useState<string>('');\n  const [dataContentType, setDataContentType] =\n    useState<dataContentTypeOptions>(dataContentTypeOptions.unknown);\n  const [currentSubmissionInfomration, setCurrentSubmissionInformation] =\n    useState<mediaSubmissionType | undefined>(undefined);\n  const navigate = useNavigate();\n\n  // Loading States\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [approveSubmissionState, setApproveSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [denySubmissionState, setDenySubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [deleteSubmissionState, setDeleteSubmissionState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function deleteSubmission(itemID: string) {\n    setDeleteSubmissionState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.sportsSubmissionsListId\n      }/items/${itemID}`,\n      'DELETE',\n    ); // TO DO fix list ids\n    if (result.ok) {\n      // TO DO Check if submission has been approved before\n      // Remove from approved submissions\n      setDeleteSubmissionState(loadingStateEnum.success);\n    } else {\n      setDeleteSubmissionState(loadingStateEnum.failed);\n    }\n  }\n\n  async function getSubmissionInformation() {\n    if (submissionID !== undefined) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.sportsSubmissionsListId\n        }/items?expand=fields&filter=fields/submissionId%20eq%20'${submissionID}'`,\n      );\n      if (result.ok) {\n        const data = await result.json();\n        if (data.value !== undefined) {\n          if (data.value.length === 1) {\n            // All things are working\n            setCurrentSubmissionInformation({\n              Title: data.value[0].fields.Title,\n              user: data.value[0].fields.user,\n              submissionId: data.value[0].fields.submissionID,\n              accepted: data.value[0].fields.accepted,\n              fileId: data.value[0].fields.fileId,\n              itemID: data.value[0].id,\n              selectedSportId: data.value[0].fields.selectedSportId,\n              selectedTeamId: data.value[0].fields.selectedTeamId,\n              reviewed: data.value[0].fields.reviewed,\n            });\n            setLoadingState(loadingStateEnum.success);\n          } else {\n            setLoadingState(loadingStateEnum.failed);\n          }\n        } else {\n          setLoadingState(loadingStateEnum.failed);\n        }\n      } else {\n        setLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function approveSubmission() {\n    if (currentSubmissionInfomration) {\n      setApproveSubmissionState(loadingStateEnum.loading);\n      const data = {\n        requests: [\n          {\n            id: '1',\n            method: 'POST',\n            url: `/sites/${store.getState().paulyList.siteId}/lists/${\n              store.getState().paulyList.sportsApprovedSubmissionsListId\n            }/items`,\n            body: {\n              fields: {\n                Title: currentSubmissionInfomration.Title,\n                fileId: currentSubmissionInfomration.fileId,\n                caption: currentSubmissionInfomration.Title,\n                submissionId: currentSubmissionInfomration.submissionId,\n                selectedSportId: currentSubmissionInfomration.selectedSportId,\n                selectedTeamId: currentSubmissionInfomration.selectedTeamId,\n              },\n            },\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n          {\n            id: '2',\n            method: 'PATCH',\n            url: `/sites/${store.getState().paulyList.siteId}/lists/${\n              store.getState().paulyList.sportsSubmissionsListId\n            }/items/${currentSubmissionInfomration.itemID}`,\n            body: {\n              fields: { accepted: true, reviewed: true },\n            },\n            headers: {\n              'Content-Type': 'application/json',\n            },\n          },\n        ],\n      };\n      const result = await callMsGraph(\n        'https://graph.microsoft.com/v1.0/$batch',\n        'POST',\n        JSON.stringify(data),\n        [{ key: 'Accept', value: 'application/json' }],\n      );\n      if (result.ok) {\n        const newInformation = currentSubmissionInfomration;\n        newInformation.accepted = true;\n        newInformation.reviewed = true;\n        setCurrentSubmissionInformation(currentSubmissionInfomration);\n        setApproveSubmissionState(loadingStateEnum.success);\n      } else {\n        setApproveSubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function denySubmission() {\n    if (currentSubmissionInfomration) {\n      const data = {\n        fields: {\n          accepted: false,\n          reviewed: true,\n        },\n      };\n      setDenySubmissionState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `/sites/${store.getState().paulyList.siteId}/lists/${\n          store.getState().paulyList.sportsSubmissionsListId\n        }/items/${currentSubmissionInfomration.itemID}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setDenySubmissionState(loadingStateEnum.success);\n      } else {\n        setDenySubmissionState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function loadFile() {\n    if (currentSubmissionInfomration !== undefined) {\n      const result = await getFileWithShareID(\n        currentSubmissionInfomration.fileId,\n      );\n      if (\n        result.result === loadingStateEnum.success &&\n        result.url !== undefined &&\n        result.contentType !== undefined\n      ) {\n        setDataURL(result.url);\n        setDataContentType(result.contentType);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (submissionID !== undefined) {\n      getSubmissionInformation();\n    }\n  }, [submissionID]);\n\n  useEffect(() => {\n    loadFile();\n  }, [currentSubmissionInfomration]);\n\n  return (\n    <>\n      {loadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {loadingState === loadingStateEnum.success &&\n          currentSubmissionInfomration !== undefined ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n              }}\n            >\n              <Pressable onPress={() => navigate('/profile/government/sports')}>\n                <Text>Back</Text>\n              </Pressable>\n              <Text>GovernmentReviewFileSubmission</Text>\n              {dataURL !== '' && (\n                <View>\n                  {dataContentType === dataContentTypeOptions.image ? (\n                    <Image\n                      height={100}\n                      style={{ height: 100 }}\n                      source={{ uri: dataURL }}\n                    />\n                  ) : null}\n                  {dataContentType === dataContentTypeOptions.video ? (\n                    <Video\n                      useNativeControls\n                      source={{ uri: dataURL }}\n                      resizeMode={ResizeMode.COVER}\n                      style={{\n                        width: width * 0.9,\n                        height: height * 0.4,\n                        alignSelf: 'stretch',\n                        marginLeft: width * 0.05,\n                        marginRight: width * 0.05,\n                      }}\n                      videoStyle={{ width: width * 0.9, height: height * 0.4 }}\n                    />\n                  ) : null}\n                </View>\n              )}\n              <Pressable\n                onPress={() => {\n                  if (currentSubmissionInfomration) {\n                    deleteSubmission(currentSubmissionInfomration.itemID);\n                  }\n                }}\n              >\n                <Text>Remove File Submission</Text>\n              </Pressable>\n              <Pressable\n                onPress={() => {\n                  approveSubmission();\n                }}\n              >\n                <Text>\n                  {approveSubmissionState === loadingStateEnum.loading\n                    ? 'Loading'\n                    : approveSubmissionState === loadingStateEnum.success ||\n                      approveSubmissionState === loadingStateEnum.notStarted\n                    ? currentSubmissionInfomration.reviewed\n                      ? currentSubmissionInfomration.accepted\n                        ? 'Submission Approved'\n                        : 'Approve'\n                      : 'Approve'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n              <Pressable onPress={() => denySubmission()}>\n                <Text>\n                  {denySubmissionState === loadingStateEnum.loading\n                    ? 'Loading'\n                    : deleteSubmissionState === loadingStateEnum.success ||\n                      deleteSubmissionState === loadingStateEnum.notStarted\n                    ? currentSubmissionInfomration.reviewed\n                      ? !currentSubmissionInfomration.accepted\n                        ? 'Submission Denied'\n                        : 'Deny'\n                      : 'Deny'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n            </View>\n          ) : (\n            <View style={{ width, height }}>\n              <Pressable onPress={() => navigate('/profile/government/sports')}>\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../Redux/store';\nimport { Colors } from '../../../../types';\n\nexport default function GovernmentCalendar() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  return (\n    <View\n      style={{\n        width,\n        height,\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable onPress={() => navigate('/profile/government/')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Government Calendar</Text>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/schedule')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Schedule</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/timetable')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Timetables</Text>\n      </Pressable>\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/dresscode')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          width: width - 20,\n          margin: 10,\n          borderRadius: 15,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Dress Code</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { he } from 'react-native-paper-dates';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport { getSchedules } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\nexport default function GovernmentSchedule() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [loadingState, setLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [loadedSchedules, setLoadedSchedules] = useState<scheduleType[]>([]);\n  const navigate = useNavigate();\n\n  async function loadSchedules() {\n    const result = await getSchedules();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setLoadedSchedules(result.data);\n    }\n    setLoadingState(result.result);\n  }\n\n  useEffect(() => {\n    loadSchedules();\n  }, []);\n  return (\n    <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government/calendar')}>\n          <Text>Back</Text>\n        </Pressable>\n        <View\n          style={{\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <Text>Schedules</Text>\n        </View>\n      </View>\n      {loadingState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height: height * 0.8,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={15} height={15} />\n          <Text>Loading</Text>\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.success ? (\n        <View style={{ height: height * 0.8 }}>\n          {loadedSchedules.length >= 1 ? (\n            <FlatList\n              data={loadedSchedules}\n              renderItem={schedule => (\n                <Pressable\n                  style={{\n                    backgroundColor: '#FFFFFF',\n                    shadowColor: 'black',\n                    shadowOffset: { width: 1, height: 1 },\n                    shadowOpacity: 1,\n                    shadowRadius: 5,\n                    margin: 10,\n                    marginBottom: 0,\n                    borderRadius: 15,\n                  }}\n                  onPress={() =>\n                    navigate(\n                      `/profile/government/calendar/schedule/${schedule.item.id}`,\n                    )\n                  }\n                  key={schedule.item.id}\n                >\n                  <Text style={{ margin: 10 }}>{schedule.item.properName}</Text>\n                </Pressable>\n              )}\n            />\n          ) : (\n            <Text>No Schedule</Text>\n          )}\n        </View>\n      ) : null}\n      {loadingState === loadingStateEnum.failed ? <Text>Failure</Text> : null}\n      <Pressable\n        onPress={() => navigate('/profile/government/calendar/schedule/create')}\n        style={{\n          backgroundColor: '#FFFFFF',\n          shadowColor: 'black',\n          shadowOffset: { width: 1, height: 1 },\n          shadowOpacity: 1,\n          shadowRadius: 5,\n          borderRadius: 15,\n          marginLeft: 5,\n          marginRight: 5,\n        }}\n      >\n        <Text style={{ margin: 10 }}>Create New</Text>\n      </Pressable>\n    </ScrollView>\n  );\n}\n","// Andrew Mainella\n// October 14 2023\n// Pauly\n// GovernmentTimetable.tsx\n//\n// An timetable selector that direcets to creating a new timetable or editing one.\n//\n\nimport { View, Text, Pressable } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport SelectTimetable from '../../../../Calendar/SelectTimetable';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors } from '../../../../../types';\n\nexport default function GovernmentTimetable() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Pressable onPress={() => navigate('/profile/government/calendar/')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Timetables</Text>\n      </View>\n      <View style={{ height: height * 0.85 }}>\n        <SelectTimetable governmentMode />\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate('/profile/government/calendar/timetable/create')\n        }\n      >\n        <Text>Create New</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, TextInput, Button, Pressable, Modal } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { TimePickerModal, he } from 'react-native-paper-dates';\nimport { ScrollView } from 'react-native-gesture-handler';\nimport Animated, {\n  interpolateColor,\n  useAnimatedStyle,\n} from 'react-native-reanimated';\nimport ColorPicker, {\n  Preview,\n  Panel1,\n  HueSlider,\n  OpacitySlider,\n  Swatches,\n  RenderThumbProps,\n  InputWidget,\n} from 'reanimated-color-picker';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport store, { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport { CloseIcon, WarningIcon } from '../../../../../UI/Icons/Icons';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport { getSchedule } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\nfunction isValidHexaCode(input: string) {\n  // Define the regular expression pattern for a valid hexadecimal color code\n  // It matches either a 6-character or 3-character code, preceded by a #\n  const hexaPattern = /^#(?:[0-9a-fA-F]{3,4}){1,2}$/;\n\n  // Test the input against the pattern using the test() method\n  return hexaPattern.test(input);\n}\n\n// NOTE: period length cannot be longer than 20\nexport default function GovernmentSchedule() {\n  const { id } = useParams();\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [scheduleListId, setScheduleListId] = useState<string | undefined>(\n    undefined,\n  );\n\n  const [scheduleProperName, setScheduleProperName] = useState<string>('');\n  const [scheduleDescriptiveName, setScheduleDescriptiveName] =\n    useState<string>('');\n  const [newPeriods, setNewPeriods] = useState<periodType[]>([]);\n  const [color, setColor] = useState<string>('#ffffff');\n\n  const [isPickingColor, setIsPickingColor] = useState<boolean>(false);\n  const [isCreatingSchedule, setIsCreatingSchedule] = useState<boolean>(false);\n\n  const [createScheduleLoadingState, setCreateScheduleLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n  const [loadScheduleState, setLoadScheduleState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [deleteState, setDeleteState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const navigate = useNavigate();\n  async function submitSchedule() {\n    setCreateScheduleLoadingState(loadingStateEnum.loading);\n    if (isCreatingSchedule) {\n      const data = {\n        fields: {\n          Title: scheduleProperName,\n          scheduleId: createUUID(),\n          scheduleProperName,\n          scheduleDescriptiveName,\n          scheduleColor: color,\n          scheduleData: JSON.stringify(newPeriods),\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.scheduleListId}/items`,\n        'POST',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateScheduleLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateScheduleLoadingState(loadingStateEnum.failed);\n      }\n    } else if (scheduleListId !== undefined) {\n      const data = {\n        fields: {\n          Title: scheduleProperName,\n          scheduleProperName,\n          scheduleDescriptiveName,\n          scheduleColor: color,\n          scheduleData: JSON.stringify(newPeriods),\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.scheduleListId\n        }/items/${scheduleListId}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setCreateScheduleLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateScheduleLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setCreateScheduleLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  async function deleteFunction() {\n    if (scheduleListId !== undefined) {\n      setDeleteState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.scheduleListId\n        }/items/${scheduleListId}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        setDeleteState(loadingStateEnum.success);\n      } else {\n        setDeleteState(loadingStateEnum.failed);\n      }\n    } else {\n      setDeleteState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadFunction() {\n    if (id !== undefined) {\n      const result = await getSchedule(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.schedule !== undefined\n      ) {\n        setScheduleProperName(result.schedule.properName);\n        setScheduleDescriptiveName(result.schedule.descriptiveName);\n        setColor(result.schedule.color);\n        setNewPeriods(result.schedule.periods);\n        setScheduleListId(result.listItemId);\n      }\n      setLoadScheduleState(result.result);\n    } else {\n      setLoadScheduleState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    if (id === 'create') {\n      setIsCreatingSchedule(true);\n    } else {\n      loadFunction();\n    }\n  }, []);\n\n  return (\n    <>\n      {(isCreatingSchedule || loadScheduleState === loadingStateEnum.success) &&\n      deleteState !== loadingStateEnum.success ? (\n        <ScrollView\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              navigate('/profile/government/calendar/schedule');\n            }}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <View\n            style={{\n              width,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <Text>{isCreatingSchedule ? 'Create' : 'Edit'} Schedule</Text>\n          </View>\n          <View style={{ height: height * 0.2 }}>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Proper Name:</Text>\n              <TextInput\n                style={{ width }}\n                value={scheduleProperName}\n                onChangeText={setScheduleProperName}\n                placeholder=\"Proper Name ex. Schedule One\"\n              />\n            </View>\n            <View style={{ flexDirection: 'row' }}>\n              <Text>Descriptive Name:</Text>\n              <TextInput\n                style={{ width }}\n                value={scheduleDescriptiveName}\n                onChangeText={setScheduleDescriptiveName}\n                placeholder=\"Descriptive Name ex. Regular Schedule\"\n              />\n            </View>\n            <View\n              style={{ margin: 5, borderRadius: 5, backgroundColor: '#FF6700' }}\n            >\n              <View style={{ margin: 10, flexDirection: 'row' }}>\n                <WarningIcon width={14} height={14} />\n                <Text>\n                  Keep descriptive name short as it is used in the calendar\n                  widget\n                </Text>\n              </View>\n            </View>\n          </View>\n          <Text>New Periods</Text>\n          <ScrollView style={{ height: height * 0.5 }}>\n            {newPeriods.map(period => (\n              <PeriodBlock\n                period={period}\n                periods={newPeriods}\n                onSetNewPeriods={out => {\n                  setNewPeriods([...out]);\n                }}\n              />\n            ))}\n          </ScrollView>\n          {newPeriods.length < 20 ? (\n            <Pressable\n              onPress={() => {\n                setNewPeriods([\n                  ...newPeriods,\n                  {\n                    startHour: new Date().getHours(),\n                    startMinute: new Date().getMinutes(),\n                    endHour: new Date().getHours(),\n                    endMinute: new Date().getMinutes(),\n                    id: createUUID(),\n                  },\n                ]);\n              }}\n            >\n              <Text>Add Period</Text>\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => setIsPickingColor(true)}\n            style={{\n              margin: 10,\n              backgroundColor: '#FFFFFF',\n              shadowColor: 'black',\n              shadowOffset: { width: 1, height: 1 },\n              shadowOpacity: 1,\n              shadowRadius: 5,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              <Text>Color</Text>\n              <View style={{ flexDirection: 'row', marginTop: 10 }}>\n                <View\n                  style={{\n                    width: 32.4,\n                    height: 32.4,\n                    backgroundColor: color,\n                    borderRadius: 7,\n                    borderWidth: 2,\n                    borderColor: Colors.black,\n                  }}\n                />\n                <Pressable style={{ marginLeft: 5 }}>\n                  <ColorPicker\n                    style={{ width: width - 77.4, height: 16.5 }}\n                    value={color}\n                    onComplete={e => setColor(e.hex)}\n                  >\n                    <InputWidget\n                      disableAlphaChannel\n                      defaultFormat=\"HEX\"\n                      formats={['HEX']}\n                      inputTitleStyle={{ display: 'none' }}\n                    />\n                  </ColorPicker>\n                </Pressable>\n                <Modal visible={isPickingColor} animationType=\"slide\">\n                  <View\n                    style={{\n                      alignContent: 'center',\n                      justifyContent: 'center',\n                      alignItems: 'center',\n                      width,\n                      height,\n                    }}\n                  >\n                    <Pressable\n                      onPress={() => setIsPickingColor(false)}\n                      style={{\n                        position: 'absolute',\n                        top: height * 0.1,\n                        left: width * 0.1,\n                      }}\n                    >\n                      <CloseIcon width={14} height={14} />\n                    </Pressable>\n                    <ColorPicker\n                      style={{ width: width * 0.7 }}\n                      value={color}\n                      onComplete={e => setColor(e.hex)}\n                    >\n                      <View style={{ flexDirection: 'row' }}>\n                        <Preview\n                          hideText\n                          hideInitialColor\n                          style={{\n                            width: width * 0.1,\n                            height: height * 0.5,\n                            borderTopRightRadius: 0,\n                            borderBottomRightRadius: 0,\n                          }}\n                        />\n                        <View\n                          style={{\n                            borderTopRightRadius: 5,\n                            borderBottomRightRadius: 5,\n                            overflow: 'hidden',\n                          }}\n                        >\n                          <Panel1\n                            style={{\n                              width: width * 0.6,\n                              height: height * 0.5,\n                              borderRadius: 0,\n                            }}\n                            renderThumb={e => (\n                              <CustomColorThumb e={e} diameter={15} />\n                            )}\n                          />\n                        </View>\n                      </View>\n                      <HueSlider\n                        renderThumb={e => <CustomColorThumb e={e} />}\n                        style={{ height: 30, marginTop: 10 }}\n                      />\n                    </ColorPicker>\n                    <Pressable\n                      style={{\n                        marginTop: 10,\n                        backgroundColor: Colors.darkGray,\n                        borderRadius: 15,\n                        width: width * 0.5,\n                        alignContent: 'center',\n                        alignItems: 'center',\n                        justifyContent: 'center',\n                      }}\n                      onPress={() => setIsPickingColor(false)}\n                    >\n                      <Text style={{ margin: 10, color: Colors.white }}>\n                        OK\n                      </Text>\n                    </Pressable>\n                  </View>\n                </Modal>\n              </View>\n            </View>\n          </Pressable>\n          <Pressable\n            onPress={() => {\n              if (\n                createScheduleLoadingState === loadingStateEnum.notStarted &&\n                isValidHexaCode(color)\n              ) {\n                submitSchedule();\n              }\n            }}\n            style={{\n              margin: 10,\n              backgroundColor: Colors.white,\n              shadowColor: 'black',\n              shadowOffset: { width: 1, height: 1 },\n              shadowOpacity: 1,\n              shadowRadius: 5,\n              borderRadius: 15,\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {!isValidHexaCode(color)\n                ? 'Cannot Start'\n                : createScheduleLoadingState === loadingStateEnum.notStarted\n                ? `${isCreatingSchedule ? 'Create' : 'Save'} Schedule`\n                : createScheduleLoadingState === loadingStateEnum.loading\n                ? 'Loading'\n                : createScheduleLoadingState === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {!isCreatingSchedule ? (\n            <Pressable\n              onPress={() => deleteFunction()}\n              style={{\n                margin: 10,\n                backgroundColor: Colors.danger,\n                borderRadius: 15,\n              }}\n            >\n              <Text style={{ margin: 10 }}>\n                {deleteState == loadingStateEnum.notStarted\n                  ? 'DELETE'\n                  : deleteState === loadingStateEnum.loading\n                  ? 'LOADING'\n                  : 'FAILED'}\n              </Text>\n            </Pressable>\n          ) : null}\n        </ScrollView>\n      ) : (\n        <>\n          {loadScheduleState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Pressable\n                onPress={() => {\n                  navigate('/profile/government/calendar/schedule');\n                }}\n                style={{ position: 'absolute', top: 0, left: 0 }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <ProgressView width={width * 0.1} height={height * 0.1} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {deleteState === loadingStateEnum.success ? (\n                <View\n                  style={{\n                    width,\n                    height,\n                    backgroundColor: Colors.white,\n                  }}\n                >\n                  <Pressable\n                    onPress={() => {\n                      navigate('/profile/government/calendar/schedule');\n                    }}\n                  >\n                    <Text>Back</Text>\n                  </Pressable>\n                  <Text>Schedule Deleted</Text>\n                </View>\n              ) : (\n                <View\n                  style={{\n                    width,\n                    height,\n                    backgroundColor: Colors.white,\n                  }}\n                >\n                  <Pressable\n                    onPress={() => {\n                      navigate('/profile/government/calendar/schedule');\n                    }}\n                  >\n                    <Text>Back</Text>\n                  </Pressable>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction PeriodBlock({\n  period,\n  periods,\n  onSetNewPeriods,\n}: {\n  period: periodType;\n  periods: periodType[];\n  onSetNewPeriods: (item: periodType[]) => void;\n}) {\n  const [isSelectingStartTime, setIsSelectingStartTime] =\n    useState<boolean>(false);\n  const [isSelectingEndTime, setIsSelectingEndTime] = useState<boolean>(false);\n\n  function deleteItem(period: periodType) {\n    const newNewPeriodsArray: periodType[] = periods;\n    if (newNewPeriodsArray.length === 1) {\n      newNewPeriodsArray.pop();\n      onSetNewPeriods(newNewPeriodsArray);\n    } else {\n      const indexToRemove = newNewPeriodsArray.findIndex(e => {\n        return e.id === period.id;\n      });\n      if (indexToRemove !== -1) {\n        newNewPeriodsArray.splice(indexToRemove, indexToRemove);\n      } else {\n        // TO DO something went wrong this should not be possible though\n      }\n      onSetNewPeriods(newNewPeriodsArray);\n    }\n  }\n  return (\n    <View\n      key={`Period_${period.id}_${createUUID()}`}\n      style={{\n        margin: 10,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n        marginLeft: 5,\n        marginRight: 5,\n      }}\n    >\n      <View style={{ margin: 10 }}>\n        <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n          <Text>\n            {period.startHour}:{period.startMinute}\n          </Text>\n          <Pressable onPress={() => setIsSelectingStartTime(true)}>\n            <Text>Pick start time</Text>\n          </Pressable>\n        </View>\n        <TimePickerModal\n          hours={period.startHour}\n          minutes={period.startMinute}\n          visible={isSelectingStartTime}\n          onDismiss={() => setIsSelectingStartTime(false)}\n          onConfirm={e => {\n            const newPeriods: periodType[] = periods;\n            const update = newPeriods.findIndex(e => {\n              return e.id === period.id;\n            });\n            if (update !== -1) {\n              newPeriods[update].startHour = e.hours;\n              newPeriods[update].startMinute = e.minutes;\n              onSetNewPeriods([...newPeriods]);\n              setIsSelectingStartTime(false);\n              console.log('all good');\n            } else {\n              // TO DO failed\n              console.log('failed');\n              setIsSelectingStartTime(false);\n            }\n          }}\n        />\n        <View style={{ flexDirection: 'row', marginBottom: 10 }}>\n          <Text>\n            {period.endHour}:{period.endMinute}\n          </Text>\n          <Pressable onPress={() => setIsSelectingEndTime(true)}>\n            <Text>Pick end time</Text>\n          </Pressable>\n        </View>\n        <TimePickerModal\n          hours={period.endHour}\n          minutes={period.endMinute}\n          visible={isSelectingEndTime}\n          onDismiss={() => setIsSelectingEndTime(false)}\n          onConfirm={e => {\n            const newPeriods: periodType[] = periods;\n            const update = newPeriods.findIndex(e => {\n              return e.id === period.id;\n            });\n            if (update !== -1) {\n              newPeriods[update].endHour = e.hours;\n              newPeriods[update].endMinute = e.minutes;\n              onSetNewPeriods([...newPeriods]);\n              setIsSelectingEndTime(false);\n            } else {\n              // TO DO failed\n              setIsSelectingEndTime(false);\n            }\n          }}\n        />\n        <Pressable\n          onPress={() => deleteItem(period)}\n          style={{ backgroundColor: 'red', borderRadius: 15 }}\n        >\n          <Text style={{ margin: 10 }}>Remove</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nfunction CustomColorThumb({\n  e,\n  diameter,\n}: {\n  e: RenderThumbProps;\n  diameter?: number;\n}) {\n  const animatedStyle = useAnimatedStyle(() => {\n    return {\n      backgroundColor: e.currentColor.value,\n    };\n  });\n\n  return (\n    <Animated.View\n      style={[\n        {\n          width: diameter || 35,\n          height: diameter || 35,\n          borderRadius: diameter ? diameter / 2 : 20,\n          borderWidth: 2,\n          borderColor: 'white',\n        },\n        animatedStyle,\n        e.positionStyle,\n      ]}\n    />\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, ScrollView, FlatList } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../../../../Redux/store';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum, semesters } from '../../../../types';\nimport ProgressView from '../../../../UI/ProgressView';\n\nexport default function GovernmentClasses() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [classState, setClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [classes, setClasses] = useState<classType[]>([]);\n\n  async function getClasses() {\n    const groupResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/groups',\n    );\n    if (groupResult.ok) {\n      const groupResultData = await groupResult.json();\n      if (groupResultData.value !== undefined) {\n        const outputData: classType[] = [];\n        for (let index = 0; index < groupResultData.value.length; index += 1) {\n          outputData.push({\n            name: groupResultData.value[index].displayName,\n            id: groupResultData.value[index].id,\n            periods: [],\n            room: {\n              name: '',\n              id: '',\n            },\n            schoolYearId: '',\n            semester: semesters.semesterOne,\n          });\n        }\n        setClasses(outputData);\n        setClassState(loadingStateEnum.success);\n      } else {\n        setClassState(loadingStateEnum.failed);\n      }\n    } else {\n      setClassState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getClasses();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View>\n        <Pressable onPress={() => navigate('/profile/government/')}>\n          <Text>Back</Text>\n        </Pressable>\n        <Text>Classes</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.85 }}>\n        <>\n          {classState === loadingStateEnum.loading ? (\n            <View>\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {classState === loadingStateEnum.success ? (\n                <FlatList\n                  data={classes}\n                  renderItem={classMap => (\n                    <Pressable\n                      key={`Class_${classMap.item.id}_${createUUID()}`}\n                      onPress={() => {\n                        navigate(\n                          `/profile/government/classes/edit/${classMap.item.id}`,\n                        );\n                      }}\n                      style={{\n                        backgroundColor: '#FFFFFF',\n                        shadowColor: 'black',\n                        shadowOffset: { width: 1, height: 1 },\n                        shadowOpacity: 1,\n                        shadowRadius: 5,\n                        borderRadius: 15,\n                        margin: 10,\n                      }}\n                    >\n                      <Text style={{ margin: 10 }}>{classMap.item.name}</Text>\n                    </Pressable>\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n        </>\n      </ScrollView>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room');\n        }}\n      >\n        <Text>Rooms</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { orgWideGroupID } from '../../PaulyConfig';\nimport store from '../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getSchoolYears(nextLink?: string): Promise<{\n  result: loadingStateEnum;\n  events?: eventType[];\n  nextLink?: string;\n}> {\n  const result = await callMsGraph(\n    nextLink ||\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events?$expand=singleValueExtendedProperties($filter=id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20or%20id%20eq%20'${\n        store.getState().paulyList.eventDataExtensionId\n      }')&$filter=singleValueExtendedProperties/Any(ep:%20ep/id%20eq%20'${\n        store.getState().paulyList.eventTypeExtensionId\n      }'%20and%20ep/value%20eq%20'schoolDay')`,\n    'GET',\n    undefined,\n    [\n      {\n        key: 'Prefer',\n        value: 'outlook.timezone=\"Central America Standard Time\"',\n      },\n    ],\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newEvents: eventType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const eventTypeExtensionID =\n        store.getState().paulyList.eventTypeExtensionId;\n      const eventDataExtensionID =\n        store.getState().paulyList.eventDataExtensionId;\n      if (data.value[index].singleValueExtendedProperties !== undefined) {\n        const eventData: { id: string; value: string }[] =\n          data.value[index].singleValueExtendedProperties;\n        if (\n          eventData.find(e => {\n            return e.id === eventTypeExtensionID;\n          })?.value === 'schoolYear'\n        ) {\n          newEvents.push({\n            id: data.value[index].id,\n            name: data.value[index].subject,\n            startTime: data.value[index].start.dateTime,\n            endTime: data.value[index].end.dateTime,\n            allDay: data.value[index].isAllDay,\n            eventColor: Colors.white,\n            paulyEventType:\n              eventData.find(e => {\n                return e.id === eventTypeExtensionID;\n              })?.value === 'schoolYear'\n                ? 'schoolYear'\n                : undefined,\n            paulyEventData: eventData.find(e => {\n              return e.id === eventDataExtensionID;\n            })?.value,\n            microsoftEvent: true,\n            microsoftReference: `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/calendar/events/${data.value[index].id}`,\n          });\n        }\n      }\n    }\n    return {\n      result: loadingStateEnum.success,\n      events: newEvents,\n      nextLink: data['@odata.nextLink'],\n    };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable, StyleProp, ViewStyle } from 'react-native';\nimport React, { ReactNode, useEffect, useState } from 'react';\n\n// On set selected index returns 0 for the first child that is passed down\n\nexport default function Dropdown({\n  children,\n  onSetSelectedIndex,\n  style,\n  selectedIndex,\n  expandedStyle,\n  options,\n  setExpanded,\n  expanded,\n}: {\n  children: ReactNode;\n  selectedIndex: number;\n  onSetSelectedIndex: (item: number) => void;\n  style?: StyleProp<ViewStyle>;\n  expandedStyle?: StyleProp<ViewStyle>;\n  options?: string[];\n  setExpanded?: (item: boolean) => void;\n  expanded?: boolean;\n}) {\n  const [isExpanded, setIsExpanded] = useState<boolean>(false);\n  useEffect(() => {\n    if (expanded !== undefined) {\n      setIsExpanded(expanded);\n    }\n  }, [expanded]);\n  return (\n    <>\n      {isExpanded ? (\n        <View style={[expandedStyle, { position: 'absolute' }]}>\n          {options ? (\n            <>\n              {options.map((option, index) => (\n                <Pressable\n                  key={`Option_${index}`}\n                  onPress={() => {\n                    onSetSelectedIndex(index);\n                    setIsExpanded(false);\n                    if (setExpanded) {\n                      setExpanded(false);\n                    }\n                  }}\n                >\n                  <Text>{option}</Text>\n                </Pressable>\n              ))}\n            </>\n          ) : (\n            <>\n              {React.Children.map(children, (child, index) => (\n                <Pressable\n                  key={`Option_${index}`}\n                  onPress={() => {\n                    onSetSelectedIndex(index);\n                    setIsExpanded(false);\n                    if (setExpanded) {\n                      setExpanded(true);\n                    }\n                  }}\n                >\n                  <>{child}</>\n                </Pressable>\n              ))}\n            </>\n          )}\n        </View>\n      ) : (\n        <Pressable\n          onPress={() => {\n            setIsExpanded(true);\n            if (setExpanded) {\n              setExpanded(true);\n            }\n          }}\n          style={style}\n        >\n          {options ? (\n            <Text>{options[selectedIndex]}</Text>\n          ) : (\n            <>{children[selectedIndex]}</>\n          )}\n        </Pressable>\n      )}\n    </>\n  );\n}\n","import { View, Text, TextInput, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-native';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum, semesters } from '../../../../types';\nimport getSchoolYears from '../../../../Functions/calendar/getSchoolYears';\nimport SegmentedPicker from '../../../../UI/Pickers/SegmentedPicker';\nimport {\n  getEvent,\n  getTimetable,\n} from '../../../../Functions/calendar/calendarFunctionsGraph';\nimport { CloseIcon, WarningIcon } from '../../../../UI/Icons/Icons';\nimport Dropdown from '../../../../UI/Dropdown';\nimport { getRoom, getRooms } from '../../../../Functions/classesFunctions';\n\nexport default function GovernmentClassesEdit() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [selectedSemester, setSelectedSemester] = useState<semesters>(\n    semesters.semesterOne,\n  );\n\n  const [className, setClassName] = useState<string>('');\n\n  // Rooms States\n  const [roomSearchText, setRoomSearchText] = useState<string>('');\n  const [roomsNextLink, setRoomsNextLink] = useState<string | undefined>(\n    undefined,\n  );\n  const [rooms, setRooms] = useState<roomType[]>([]);\n  const [roomsState, setRoomsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedRoom, setSelectedRoom] = useState<roomType | undefined>(\n    undefined,\n  );\n\n  // School Years State\n  const [schoolYearState, setSchoolYearState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [schoolYearNextLink, setSchoolYearNextLink] = useState<\n    string | undefined\n  >(undefined);\n  const [schoolYears, setSchoolYears] = useState<eventType[]>([]);\n  const [selectedSchoolYear, setSelectedSchoolYear] = useState<\n    eventType | undefined\n  >(undefined);\n\n  const [timetableState, setTimetableState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [selectedTimetable, setSelectedTimetable] = useState<\n    timetableType | undefined\n  >(undefined);\n\n  const [classState, setClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  const [updateClassState, setUpdateClassState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const [isShowingClassConfirmMenu, setIsShowingClassConfirmMenu] =\n    useState<boolean>(false);\n\n  const [periods, setPeriods] = useState<number[]>([]);\n\n  async function getClass() {\n    setClassState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}?$select=${\n        store.getState().paulyList.classExtensionId\n      },displayName`,\n    ); // TO DO change to class\n    if (result.ok) {\n      const data = await result.json();\n      const extensionData = data[store.getState().paulyList.classExtensionId];\n      if (extensionData !== undefined) {\n        setClassName(extensionData.className);\n        setSelectedSemester(parseInt(extensionData.semesterId));\n        setPeriods(JSON.parse(extensionData.periodData));\n        const eventResult = await getEvent(extensionData.schoolYearEventId);\n        const roomResult = await getRoom(extensionData.roomId);\n        if (\n          eventResult.result === loadingStateEnum.success &&\n          roomResult.result === loadingStateEnum.success &&\n          eventResult.data !== undefined &&\n          roomResult.data !== undefined\n        ) {\n          setSelectedRoom(roomResult.data);\n          setSelectedSchoolYear(eventResult.data);\n        } else {\n          setClassState(loadingStateEnum.failed);\n        }\n      } else {\n        setClassName(data.displayName);\n      }\n      setClassState(loadingStateEnum.success);\n    } else {\n      setClassState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadRooms() {\n    // TO DO figure out if there will be performance issuses in continually getting next page\n    const result = await getRooms(\n      roomsNextLink,\n      roomSearchText !== '' ? roomSearchText : undefined,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRooms(result.data);\n    }\n    setRoomsState(result.result);\n    setRoomsNextLink(result.nextLink);\n  }\n\n  async function loadSchoolYears() {\n    const result = await getSchoolYears(schoolYearNextLink);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.events !== undefined\n    ) {\n      setSchoolYears(result.events);\n    }\n    setSchoolYearState(result.result);\n    setSchoolYearNextLink(result.nextLink);\n  }\n\n  async function loadTimetable() {\n    if (\n      selectedSchoolYear !== undefined &&\n      selectedSchoolYear.paulyEventData !== undefined\n    ) {\n      setTimetableState(loadingStateEnum.loading);\n      const result = await getTimetable(selectedSchoolYear.paulyEventData);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.timetable !== undefined\n      ) {\n        if (result.timetable.days.length !== periods.length) {\n          const newArray = Array.from(Array(result.timetable.days.length));\n          newArray.fill(0, 0, newArray.length);\n          setPeriods(newArray);\n        }\n        setSelectedTimetable(result.timetable);\n      }\n      setTimetableState(result.result);\n    }\n  }\n\n  useEffect(() => {\n    loadTimetable();\n  }, [selectedSchoolYear]);\n\n  useEffect(() => {\n    getClass();\n  }, []);\n\n  async function updateClass() {\n    if (selectedRoom !== undefined && selectedSchoolYear !== undefined) {\n      setUpdateClassState(loadingStateEnum.loading);\n      const data = {};\n      Object.defineProperty(data, store.getState().paulyList.classExtensionId, {\n        value: {\n          className,\n          schoolYearEventId: selectedSchoolYear.id,\n          semesterId: selectedSemester.toString(),\n          roomId: selectedRoom.id,\n          periodData: JSON.stringify(periods),\n        },\n      });\n\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/groups/${id}`,\n        'PATCH',\n        JSON.stringify(data),\n      );\n      if (result.ok) {\n        setUpdateClassState(loadingStateEnum.success);\n      } else {\n        setUpdateClassState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  useEffect(() => {\n    loadRooms();\n  }, [roomSearchText]);\n\n  useEffect(() => {\n    loadSchoolYears();\n  }, []);\n\n  return (\n    <>\n      <ScrollView style={{ width, height, backgroundColor: Colors.white }}>\n        {classState === loadingStateEnum.loading ? (\n          <View>\n            <Pressable\n              onPress={() => {\n                navigate('/profile/government/classes');\n              }}\n            >\n              <Text>Back</Text>\n            </Pressable>\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <View>\n            {classState === loadingStateEnum.success ? (\n              <View\n                style={{\n                  width,\n                  height,\n                  backgroundColor: Colors.white,\n                }}\n              >\n                <Pressable\n                  onPress={() => {\n                    navigate('/profile/government/classes');\n                  }}\n                >\n                  <Text>Back</Text>\n                </Pressable>\n                <Text>Add Class Data</Text>\n                <View>\n                  <Text>Name:</Text>\n                  <TextInput value={className} onChangeText={setClassName} />\n                </View>\n                <Text>School Years</Text>\n                <View style={{ height: height * 0.3 }}>\n                  {schoolYearState === loadingStateEnum.loading ? (\n                    <Text>Loading</Text>\n                  ) : (\n                    <View>\n                      {schoolYearState === loadingStateEnum.success ? (\n                        <ScrollView style={{ height: height * 0.3 }}>\n                          {schoolYears.map(year => (\n                            <Pressable\n                              onPress={() => {\n                                setSelectedSchoolYear(year);\n                              }}\n                            >\n                              <Text>{year.name}</Text>\n                            </Pressable>\n                          ))}\n                        </ScrollView>\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <View\n                  style={{ height: height * 0.3, marginBottom: height * 0.1 }}\n                >\n                  <Text>Periods</Text>\n                  <Text>{periods.toString()}</Text>\n                  {timetableState === loadingStateEnum.notStarted ? (\n                    <Text>Please pick a school year</Text>\n                  ) : (\n                    <View>\n                      {timetableState === loadingStateEnum.loading ? (\n                        <Text>Loading</Text>\n                      ) : (\n                        <View style={{ zIndex: 100 }}>\n                          {timetableState === loadingStateEnum.success &&\n                          selectedTimetable?.days.length === periods.length ? (\n                            <ScrollView\n                              style={{ height: height * 0.3, zIndex: 100 }}\n                            >\n                              <>\n                                {selectedTimetable.days.map((day, dayIndex) => (\n                                  <DayBlock\n                                    day={day}\n                                    dayIndex={dayIndex}\n                                    periods={periods}\n                                    setPeriods={setPeriods}\n                                    selectedTimetable={selectedTimetable}\n                                  />\n                                ))}\n                              </>\n                            </ScrollView>\n                          ) : (\n                            <Text>Failed</Text>\n                          )}\n                        </View>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <SegmentedPicker\n                  selectedIndex={selectedSemester}\n                  setSelectedIndex={setSelectedSemester}\n                  options={['Semester One', 'Semester Two']}\n                  width={width * 0.85}\n                  height={height * 0.1}\n                />\n                <View style={{ flexDirection: 'row' }}>\n                  {selectedRoom === undefined ? (\n                    <WarningIcon width={12} height={12} outlineColor=\"red\" />\n                  ) : null}\n                  <Text>Select Room</Text>\n                </View>\n                <View style={{ height: height * 0.3 }}>\n                  {roomsState === loadingStateEnum.loading ? (\n                    <Text>Loading</Text>\n                  ) : (\n                    <View>\n                      {roomsState === loadingStateEnum.success ? (\n                        <ScrollView style={{ height: height * 0.3 }}>\n                          {rooms.map(room => (\n                            <Pressable\n                              onPress={() => {\n                                setSelectedRoom(room);\n                              }}\n                            >\n                              <Text>{room.name}</Text>\n                            </Pressable>\n                          ))}\n                        </ScrollView>\n                      ) : (\n                        <Text>Failed</Text>\n                      )}\n                    </View>\n                  )}\n                </View>\n                <Pressable\n                  onPress={() => {\n                    setIsShowingClassConfirmMenu(true);\n                  }}\n                >\n                  <Text>Create Class</Text>\n                </Pressable>\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n      {isShowingClassConfirmMenu ? (\n        <View\n          style={{\n            width: width * 0.8,\n            height: height * 0.8,\n            top: height * 0.1,\n            left: width * 0.1,\n            borderRadius: 15,\n            backgroundColor: Colors.white,\n            position: 'absolute',\n            shadowColor: 'black',\n            shadowOffset: { width: 0, height: 1 },\n            shadowOpacity: 0.8,\n            shadowRadius: 10,\n          }}\n        >\n          <Pressable\n            onPress={() => {\n              setIsShowingClassConfirmMenu(false);\n            }}\n          >\n            <CloseIcon width={14} height={14} />\n          </Pressable>\n          <Text>Create Class</Text>\n          <Text>Name: {className}</Text>\n          <Text>Room: {selectedRoom?.name}</Text>\n          <Text>School Year: {selectedSchoolYear?.name}</Text>\n          <Text>\n            Semester:{' '}\n            {selectedSemester === semesters.semesterOne ? 'One' : 'Two'}\n          </Text>\n          <Pressable\n            onPress={() => {\n              updateClass();\n            }}\n          >\n            <Text style={{ margin: 10 }}>\n              {updateClassState === loadingStateEnum.cannotStart\n                ? 'Cannot Update Class'\n                : updateClassState === loadingStateEnum.notStarted\n                ? 'Update Class'\n                : updateClassState === loadingStateEnum.loading\n                ? 'Loading'\n                : updateClassState === loadingStateEnum.success\n                ? 'Updated Class'\n                : 'Failed To Update Class'}\n            </Text>\n          </Pressable>\n        </View>\n      ) : null}\n    </>\n  );\n}\n\nfunction DayBlock({\n  day,\n  periods,\n  dayIndex,\n  setPeriods,\n  selectedTimetable,\n}: {\n  day: schoolDayType;\n  dayIndex: number;\n  periods: number[];\n  setPeriods: (item: number[]) => void;\n  selectedTimetable: timetableType;\n}) {\n  const [selected, setSelected] = useState<boolean>(false);\n  return (\n    <View\n      key={`Day_${day.id}`}\n      style={{ flexDirection: 'row', margin: 10, zIndex: selected ? 200 : 100 }}\n    >\n      <Text>{day.name}</Text>\n      <View>\n        {selectedTimetable?.schedules.length >= 1 &&\n        periods.length >= dayIndex ? (\n          <Dropdown\n            selectedIndex={periods[dayIndex]}\n            onSetSelectedIndex={index => {\n              if (periods.length >= dayIndex) {\n                const newPeriods = periods;\n                newPeriods[dayIndex] = index;\n                setPeriods([...newPeriods]);\n              }\n            }}\n            expanded={selected}\n            setExpanded={e => {\n              setSelected(e);\n            }}\n            style={{ backgroundColor: Colors.white, zIndex: -2 }}\n            expandedStyle={{\n              backgroundColor: 'blue',\n              zIndex: 101,\n              position: 'absolute',\n            }}\n            options={[\n              'unchosen',\n              ...Array.from(selectedTimetable.schedules[0].periods).flatMap(\n                (_item, index) => (index + 1).toString(),\n              ),\n            ]}\n            children=\"\"\n          />\n        ) : (\n          <Text>Something went wrong please reload the page.</Text>\n        )}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput, Button, Switch } from 'react-native';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../Functions/ultility/microsoftAssets';\nimport MicrosoftFilePicker from '../../../UI/MicrosoftFilePicker';\nimport store, { RootState } from '../../../Redux/store';\nimport getCurrentPaulyData from '../../../Functions/homepage/getCurrentPaulyData';\nimport { Colors, loadingStateEnum } from '../../../types';\n\nexport default function GovernmentHomePage() {\n  const { paulyDataListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  // Loading States\n  const [loadContentLoadingState, setLoadContentLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [newMessageState, setNewMessageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  // New Data\n  const [newMessageText, setNewMessageText] = useState(\n    store.getState().paulyData.message,\n  );\n  const [newAnimationSpeed, setNewAnnimationSpeed] = useState(\n    store.getState().paulyData.animationSpeed,\n  );\n  const [selectedPowerpoint, setSelectedPowerpoint] = useState<\n    microsoftFileType | undefined\n  >(undefined);\n  const [isAutoUpdatingText, setIsAutoUpdatingText] = useState<boolean>(false);\n\n  async function loadCurrentPaultData() {\n    const result = await getCurrentPaulyData();\n    setLoadContentLoadingState(loadingStateEnum.success);\n  }\n  async function createShareId(\n    item: microsoftFileType,\n  ): Promise<string | undefined> {\n    const data = {\n      type: 'view',\n      scope: 'organization',\n    };\n    const result = await callMsGraph(\n      `${item.callPath}/createLink`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const data = await result.json();\n      return data.shareId;\n    }\n    return undefined;\n  }\n  async function updatePaulyData(key: string, data: string) {\n    const dataOut: any = {};\n    dataOut[key] = data;\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${paulyDataListId}/items/1/fields`,\n      'PATCH',\n      JSON.stringify(dataOut),\n    ); // TO DO fix list ids\n    if (result.ok) {\n      setNewMessageState(loadingStateEnum.success);\n    } else {\n      setNewMessageState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    const storeText = newMessageText;\n    setTimeout(() => {\n      if (isAutoUpdatingText && newMessageText === storeText) {\n        updatePaulyData('message', newMessageText);\n      }\n    }, 2000);\n  }, [newMessageText]);\n\n  useEffect(() => {\n    loadCurrentPaultData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Link to=\"/profile/government/\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Home Page</Text>\n      <View>\n        <View style={{ flexDirection: 'row' }}>\n          <TextInput\n            value={newMessageText}\n            onChangeText={e => {\n              setNewMessageText(e);\n            }}\n          />\n        </View>\n        {isAutoUpdatingText ? null : (\n          <Pressable\n            onPress={() => {\n              updatePaulyData('message', newMessageText);\n            }}\n          >\n            <Text>Update Text</Text>\n          </Pressable>\n        )}\n        <View style={{ flexDirection: 'row' }}>\n          <Text>Is auto updating text: </Text>\n          <Switch\n            trackColor={{ false: '#767577', true: '#81b0ff' }}\n            thumbColor={isAutoUpdatingText ? '#f5dd4b' : '#f4f3f4'}\n            ios_backgroundColor=\"#3e3e3e\"\n            onValueChange={setIsAutoUpdatingText}\n            value={isAutoUpdatingText}\n          />\n        </View>\n      </View>\n      <View style={{ marginBottom: 20 }}>\n        <View>\n          <Text style={{ margin: 5 }}>\n            Select Powerpoint: {selectedPowerpoint?.name}\n          </Text>\n        </View>\n        <MicrosoftFilePicker\n          height={height * 0.6 - 15}\n          width={width}\n          onSelectedFile={selectedFile => {\n            setSelectedPowerpoint(selectedFile);\n          }}\n        />\n      </View>\n      <Pressable\n        onPress={async () => {\n          if (selectedPowerpoint !== undefined) {\n            const shareId = await createShareId(selectedPowerpoint);\n            if (shareId !== undefined) {\n              updatePaulyData('powerpointId', shareId);\n            }\n          }\n        }}\n      >\n        <Text>Save Changes</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import React, { ReactNode, useCallback, useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { Image, StyleSheet, View, Pressable, Text } from 'react-native';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport store, { RootState } from '../Redux/store';\nimport {\n  BookIcon,\n  CalendarIcon,\n  GovernmentIcon,\n  HomeIcon,\n  MedalIcon,\n  PersonIcon,\n  StudentSearchIcon,\n} from './Icons/Icons';\nimport { expandedModeSlice } from '../Redux/reducers/expandedModeReducer';\nimport { isShowingProfileBlockSlice } from '../Redux/reducers/isShowingProfileBlockReducer';\nimport { Colors } from '../types';\n\nfunction NavBarBlock({\n  des,\n  expandedMode,\n  blockLength,\n  children,\n  text,\n  width,\n  setIsExpandedMode,\n}: {\n  des: string;\n  expandedMode: boolean;\n  blockLength: number;\n  text: string;\n  children: ReactNode;\n  width: number;\n  setIsExpandedMode: () => void;\n}) {\n  const [isHover, setIsHover] = useState<boolean>(false);\n  const navigation = useNavigate();\n  return (\n    <Pressable\n      style={{\n        height: blockLength,\n        width: expandedMode ? width * 2.5 : width,\n        backgroundColor: isHover ? Colors.darkGray : 'transparent',\n        alignItems: 'center',\n      }}\n      onPress={() => {\n        navigation(des);\n      }}\n      onHoverIn={() => {\n        setIsHover(true);\n        setIsExpandedMode();\n      }}\n      onHoverOut={() => {\n        setIsHover(false);\n      }}\n    >\n      <View\n        style={[\n          styles.LinkStyle,\n          {\n            height: blockLength,\n            width: expandedMode ? blockLength * 2.5 : blockLength,\n            margin: 0,\n            position: expandedMode ? 'absolute' : 'relative',\n            left: expandedMode ? (width - blockLength) / 2 : undefined,\n            alignItems: 'center',\n          },\n        ]}\n      >\n        <View\n          id=\"ViewHigh\"\n          style={{\n            width: expandedMode ? blockLength * 2.5 : blockLength,\n            flexDirection: 'row',\n            margin: 'auto',\n            padding: 0,\n            alignItems: 'center',\n            alignContent: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <View\n            style={[\n              {\n                height: blockLength,\n                width: blockLength,\n                position: expandedMode ? 'absolute' : 'relative',\n                left: expandedMode ? 0 : undefined,\n                alignItems: 'center',\n                justifyContent: 'center',\n              },\n            ]}\n          >\n            <>{children}</>\n          </View>\n          {expandedMode ? (\n            <Text\n              style={{\n                position: 'absolute',\n                left: blockLength,\n                color: Colors.white,\n                marginLeft: 8,\n              }}\n            >\n              {text}\n            </Text>\n          ) : null}\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nexport default function NavBarComponent({\n  width,\n  height,\n}: {\n  width: number;\n  height: number;\n}) {\n  const { uri, displayName } = useSelector(\n    (state: RootState) => state.microsoftProfileData,\n  );\n  const expandedMode = useSelector((state: RootState) => state.expandedMode);\n  const [blockLength, setBlockLength] = useState<number>(0);\n  const [iconLength, setIconLength] = useState<number>(0);\n  const navigation = useNavigate();\n  const dispatch = useDispatch();\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n\n  useEffect(() => {\n    // checking to see if the width or the height is going to be the limiting factor.\n    if (width * 0.6 > (height * 0.6) / 8) {\n      setBlockLength((height * 0.6) / 8);\n    } else {\n      setBlockLength(width * 0.6);\n    }\n    if (width * 0.7 > (height * 0.7) / 8) {\n      setIconLength((height * 0.6) / 8);\n    } else {\n      setIconLength(width * 0.5);\n    }\n  }, [width, height]);\n\n  const [fontsLoaded] = useFonts({\n    'Gochi Hand': require('../../assets/fonts/GochiHand-Regular.ttf'),\n  });\n\n  const onLayoutRootView = useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <Pressable\n      id=\"Pressable\"\n      onHoverIn={() => {\n        dispatch(expandedModeSlice.actions.setExpandedMode(true));\n      }}\n      onHoverOut={() => {\n        dispatch(expandedModeSlice.actions.setExpandedMode(false));\n      }}\n    >\n      <View\n        id=\"Main\"\n        style={{\n          backgroundColor: Colors.maroon,\n          height,\n          overflow: 'hidden',\n          width: expandedMode ? width * 2.5 : width,\n          alignItems: 'center',\n        }}\n      >\n        <Pressable\n          style={[\n            styles.LinkStyle,\n            {\n              height: blockLength,\n              width: expandedMode ? width * 2.5 : width,\n              margin: 0,\n              marginTop: blockLength * 0.4,\n              marginBottom: blockLength * 0.4,\n            },\n          ]}\n          onPress={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(!expandedMode));\n          }}\n          onHoverIn={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <View\n            style={{\n              flexDirection: 'row',\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              height: blockLength,\n              position: expandedMode ? 'absolute' : 'relative',\n              left: expandedMode ? (width - blockLength) / 2 : undefined,\n            }}\n            pointerEvents=\"none\"\n          >\n            <View\n              style={{\n                position: expandedMode ? 'absolute' : 'relative',\n                left: expandedMode ? 0 : undefined,\n              }}\n            >\n              <Image\n                source={require('../../assets/images/PaulyLogo.png')}\n                resizeMode=\"contain\"\n                style={{ width: blockLength, height: blockLength }}\n              />\n            </View>\n            {expandedMode ? (\n              <Text\n                style={{\n                  fontFamily: 'Gochi Hand',\n                  color: Colors.white,\n                  position: 'absolute',\n                  top: blockLength * 0.3,\n                  left: blockLength * 0.65,\n                  fontSize: blockLength * 0.7,\n                  textShadowColor: 'rgba(0, 0, 0, 1)',\n                  textShadowOffset: { width: 4, height: 2 },\n                  textShadowRadius: 0,\n                }}\n                selectable={false}\n              >\n                auly\n              </Text>\n            ) : null}\n          </View>\n        </Pressable>\n        <NavBarBlock\n          des=\"/notifications\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Notifications\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <HomeIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/resources\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Resources\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <BookIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/commissions\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Commissions\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <MedalIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/calendar\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Calendar\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <CalendarIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/sports\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Sports\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <Image\n            source={require('../../assets/images/Football.png')}\n            resizeMode=\"contain\"\n            style={{ width: iconLength, height: iconLength }}\n          />\n        </NavBarBlock>\n        <NavBarBlock\n          des=\"/students\"\n          expandedMode={expandedMode}\n          blockLength={blockLength}\n          text=\"Students\"\n          width={width}\n          setIsExpandedMode={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n        >\n          <StudentSearchIcon width={iconLength} height={iconLength} />\n        </NavBarBlock>\n        {isGovernmentMode ? (\n          <NavBarBlock\n            des=\"/profile/government\"\n            expandedMode={expandedMode}\n            blockLength={blockLength}\n            text=\"Government\"\n            width={width}\n            setIsExpandedMode={() => {\n              dispatch(expandedModeSlice.actions.setExpandedMode(true));\n            }}\n          >\n            <GovernmentIcon width={iconLength} height={iconLength} />\n          </NavBarBlock>\n        ) : null}\n        <Pressable\n          onHoverIn={() => {\n            dispatch(expandedModeSlice.actions.setExpandedMode(true));\n          }}\n          onPress={() => {\n            dispatch(\n              isShowingProfileBlockSlice.actions.setIsShowingProfileBlock(\n                !store.getState().isShowingProfileBlock,\n              ),\n            );\n          }}\n          style={[\n            styles.LinkStyle,\n            {\n              height: blockLength,\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              margin: 0,\n              position: 'absolute',\n              left: expandedMode ? (width - blockLength) / 2 : undefined,\n              bottom: height * 0.05,\n            },\n          ]}\n        >\n          <View\n            style={{\n              width: expandedMode ? blockLength * 2.5 : blockLength,\n              height: iconLength,\n              position: expandedMode ? 'absolute' : 'relative',\n              left: expandedMode ? 0 : undefined,\n              flexDirection: 'row',\n            }}\n          >\n            {uri !== '' ? (\n              <Image\n                source={{ uri }}\n                style={{\n                  width: iconLength,\n                  height: iconLength,\n                  borderRadius: iconLength / 2,\n                }}\n              />\n            ) : (\n              <PersonIcon width={iconLength} height={iconLength} />\n            )}\n            <View\n              style={{\n                height: iconLength,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n                marginLeft: blockLength - iconLength,\n              }}\n            >\n              {expandedMode ? (\n                <Text\n                  adjustsFontSizeToFit\n                  numberOfLines={1}\n                  style={{\n                    color: Colors.white,\n                    marginLeft: 8,\n                    width: blockLength * 2.5,\n                  }}\n                  selectable={false}\n                >\n                  {displayName}\n                </Text>\n              ) : null}\n            </View>\n          </View>\n        </Pressable>\n      </View>\n    </Pressable>\n  );\n}\n\nconst styles = StyleSheet.create({\n  LinkStyle: {\n    display: 'flex',\n    justifyContent: 'center',\n    alignItems: 'center',\n    margin: 'auto',\n  },\n});\n","import React, { useState } from 'react';\nimport { View, Text, Pressable } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport { RootState } from '../Redux/store';\nimport { Colors } from '../types';\n\nexport default function PageNotFound() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [isBottonHover, setIsButtonHover] = useState<boolean>(false);\n  const navigate = useNavigate();\n  return (\n    <View\n      style={{\n        width,\n        height,\n        backgroundColor: Colors.white,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      <Text>Page Not Found</Text>\n      <Pressable\n        onPress={() => {\n          navigate('/');\n        }}\n        onHoverIn={() => {\n          setIsButtonHover(true);\n        }}\n        onHoverOut={() => {\n          setIsButtonHover(false);\n        }}\n        style={{\n          height: height * 0.09,\n          width: width * 0.5,\n          borderRadius: 50,\n          backgroundColor: isBottonHover ? Colors.darkGray : Colors.white,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n          shadowColor: isBottonHover ? Colors.white : 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          marginTop: width < height ? width * 0.1 : height * 0.1,\n        }}\n      >\n        <Text\n          style={{\n            textAlign: 'center',\n            color: isBottonHover ? Colors.white : 'black',\n            fontWeight: 'bold',\n          }}\n        >\n          RETURN HOME\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { clientId } from '../../PaulyConfig';\n\nexport const paulyListData = {\n  displayName: 'PaulyList',\n  // \"name\":\"PaulyList\",\n  columns: [\n    {\n      name: 'studentFilesListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'commissionListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'commissionSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'paulyDataListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsApprovedSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportsSubmissionsListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetablesListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'resourceListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'dressCodeListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'roomListId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'classExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'eventTypeExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'eventDataExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'resourceExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'userExtensionId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'noClassListId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const studentFilesData = {\n  displayName: 'StudentFiles',\n  columns: [\n    {\n      name: 'createdTime',\n      text: {},\n    },\n    {\n      name: 'itemId', // This is the item id not drive item id\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selected',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'userId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const commissionsData = {\n  displayName: 'Commissions',\n  columns: [\n    {\n      name: 'startDate',\n      text: {},\n    },\n    {\n      name: 'endDate',\n      text: {},\n    },\n    {\n      name: 'timed',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'points',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'hidden',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'maxNumberOfClaims',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'allowMultipleSubmissions',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'commissionID',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'value',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'coordinateLat',\n      number: {},\n    },\n    {\n      name: 'coordinateLng',\n      number: {},\n    },\n    {\n      name: 'proximity',\n      number: {},\n    },\n    {\n      name: 'qrCodeData',\n      text: { allowMultipleLines: true },\n    },\n    {\n      name: 'postTeamId',\n      text: {},\n    },\n    {\n      name: 'postChannelId',\n      text: {},\n    },\n    {\n      name: 'postId',\n      text: {},\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const commissionsSubmissionsData = {\n  displayName: 'CommissionsSubmissions',\n  columns: [\n    {\n      name: 'userId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submittedTime',\n      required: true,\n      text: {},\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'submissionApproved',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionReviewed',\n      boolean: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'commissionId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'submissionData',\n      text: { allowMultipleLines: true },\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const paulyDataData = {\n  displayName: 'PaulyData',\n  columns: [\n    {\n      name: 'animationSpeed',\n      number: {},\n      required: true,\n    },\n    {\n      name: 'message',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'powerpointId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const scheduleData = {\n  displayName: 'Schedule',\n  columns: [\n    {\n      name: 'scheduleId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'scheduleProperName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleDescriptiveName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'scheduleColor',\n      text: { maxLength: 9 },\n      required: true,\n    },\n    {\n      name: 'scheduleData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsData = {\n  displayName: 'Sports',\n  columns: [\n    {\n      name: 'sportName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'sportSvg',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'sportId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsApprovedSubmissionsData = {\n  displayName: 'SportsApprovedSubmissions',\n  columns: [\n    {\n      name: 'fileId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'caption',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedSportId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedTeamId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const sportsSubmissionsData = {\n  displayName: 'SportsSubmissions',\n  columns: [\n    {\n      name: 'accepted',\n      boolean: {},\n      required: true,\n    },\n    {\n      name: 'reviewed',\n      boolean: {},\n      indexed: true,\n      required: true,\n    },\n    {\n      name: 'user',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timeCreated',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'submissionId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'fileId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'selectedSportId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n    {\n      name: 'selectedTeamId',\n      text: {},\n      indexed: true,\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const timetablesData = {\n  displayName: 'Timetables',\n  columns: [\n    {\n      name: 'timetableName',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetableId',\n      text: {},\n      required: true,\n      indexed: true,\n      enforceUniqueValues: true,\n    },\n    {\n      name: 'timetableDataDays',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'timetableDataSchedules',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'timetableDefaultScheduleId',\n      text: {},\n      required: true,\n    },\n    {\n      name: 'timetableDressCodeId',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const resourceData = {\n  displayName: 'Resources',\n  columns: [\n    {\n      name: 'resourceGroupId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'resourceConversationId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const dressCodeData = {\n  displayName: 'DressCode',\n  columns: [\n    {\n      name: 'dressCodeId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'dressCodeName',\n      text: {},\n    },\n    {\n      name: 'dressCodeData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n    {\n      name: 'dressCodeIncentivesData',\n      text: { allowMultipleLines: true },\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const roomData = {\n  displayName: 'Rooms',\n  columns: [\n    {\n      name: 'roomId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'roomName',\n      text: {},\n      required: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\nexport const noClassData = {\n  displayName: 'No Class',\n  columns: [\n    {\n      name: 'classGroupId',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n    {\n      name: 'classDate',\n      text: {},\n      required: true,\n      indexed: true,\n    },\n  ],\n  list: {\n    template: 'genericList',\n  },\n};\n\n// Extensions\nexport const paulyClassExtensionData = {\n  id: 'paulyClass',\n  description: 'Pauly Class Data',\n  targetTypes: ['Group'],\n  owner: clientId,\n  properties: [\n    {\n      name: 'className', // This property will be optional in the future\n      type: 'String',\n    },\n    {\n      name: 'schoolYearEventId',\n      type: 'String',\n    },\n    {\n      name: 'semesterId',\n      type: 'String',\n    },\n    {\n      name: 'roomId',\n      type: 'String',\n    },\n    {\n      name: 'periodData',\n      type: 'String', // An Array as long as the number of days in the cycle\n    },\n  ],\n};\n\n// Add data array\nexport const addDataArray: addDataType[] = [\n  {\n    data: paulyClassExtensionData,\n    urlOne: 'https://graph.microsoft.com/v1.0/schemaExtensions',\n    id: 'classExtensionId',\n  },\n  {\n    data: studentFilesData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'studentFilesListId',\n  },\n  {\n    data: commissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'commissionListId',\n  },\n  {\n    data: commissionsSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'commissionSubmissionsListId',\n  },\n  {\n    data: scheduleData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'scheduleListId',\n  },\n  {\n    data: sportsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsListId',\n  },\n  {\n    data: sportsApprovedSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsApprovedSubmissionsListId',\n  },\n  {\n    data: sportsSubmissionsData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'sportsSubmissionsListId',\n  },\n  {\n    data: timetablesData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'timetablesListId',\n  },\n  {\n    data: resourceData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'resourceListId',\n  },\n  {\n    data: dressCodeData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'dressCodeListId',\n  },\n  {\n    data: roomData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'roomListId',\n  },\n  {\n    data: noClassData,\n    urlOne: 'https://graph.microsoft.com/v1.0/sites/',\n    urlTwo: '/lists',\n    id: 'noClassListId',\n  },\n];\n","import { loadingStateEnum } from '../../types';\nimport createUUID from '../ultility/createUUID';\nimport callMsGraph from '../ultility/microsoftAssets';\nimport {\n  paulyListData,\n  paulyDataData,\n  addDataArray,\n} from './initializePaulyData';\n\nexport async function initializePaulyPartOne(\n  secondUserId: string,\n): Promise<{ result: loadingStateEnum; groupId?: string }> {\n  const currentUsersIdResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me',\n    'GET',\n  );\n  if (currentUsersIdResult.ok) {\n    const currentUsersIdResultData = await currentUsersIdResult.json();\n    const createGroupData = {\n      description: \"Pauly's Team Containing all it's data\",\n      displayName: 'Pauly',\n      groupTypes: [\n        'Unified',\n        // , \"DynamicMembership\"\n      ],\n      mailEnabled: true,\n      mailNickname: 'pauly',\n      visibility: 'HiddenMembership',\n      // \"membershipRule\": \"(user.accountEnabled -eq true)\",\n      // \"membershipRuleProcessingState\": \"on\",\n      'owners@odata.bind': [\n        `https://graph.microsoft.com/v1.0/users/${currentUsersIdResultData.id}`,\n        `https://graph.microsoft.com/v1.0/users/${secondUserId}`,\n      ],\n      securityEnabled: false,\n    };\n    const createGroupResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/groups',\n      'POST',\n      JSON.stringify(createGroupData),\n    );\n    if (createGroupResult.ok) {\n      const createGroupResultData = await createGroupResult.json();\n      return {\n        result: loadingStateEnum.success,\n        groupId: createGroupResultData.id,\n      };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function initializePaulyPartTwo(\n  groupId: string,\n): Promise<loadingStateEnum> {\n  const teamsData = {\n    'template@odata.bind':\n      \"https://graph.microsoft.com/v1.0/teamsTemplates('standard')\",\n    'group@odata.bind': `https://graph.microsoft.com/v1.0/groups('${groupId}')`,\n  };\n  const createTeamResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/teams',\n    'POST',\n    JSON.stringify(teamsData),\n  );\n  if (createTeamResult.ok) {\n    return loadingStateEnum.success;\n  }\n  return loadingStateEnum.failed;\n}\n\nexport async function initializePaulyPartThree(\n  groupId: string,\n  update?: string[],\n): Promise<loadingStateEnum> {\n  const getTeam = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/teams/${groupId}`,\n  );\n  if (!getTeam.ok) {\n    return loadingStateEnum.failed;\n  }\n  const getTeamData = await getTeam.json();\n\n  const getRootSiteIdResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${getTeamData.id}/sites/root`,\n  );\n  if (!getRootSiteIdResult.ok) {\n    return loadingStateEnum.failed;\n  }\n  const getRootSiteIdResultData = await getRootSiteIdResult.json();\n\n  const paulyListNewData: { fields: any } = { fields: { Title: 'Main' } };\n\n  // Check if already data\n  let secondRun: boolean = false;\n  const getPaulyListResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items/1?expand=fields`,\n  );\n  if (!getPaulyListResult.ok && getPaulyListResult.status !== 404) {\n    console.log('second run failed');\n    return loadingStateEnum.failed;\n  }\n  const getPaulyListResultData = await getPaulyListResult.json();\n  if (getPaulyListResult.status !== 404) {\n    if (getPaulyListResultData.fields !== undefined) {\n      secondRun = true;\n      if (getPaulyListResultData.fields !== undefined) {\n        if (getPaulyListResultData.fields.paulyDataListId !== undefined) {\n          paulyListNewData.fields.paulyDataListId =\n            getPaulyListResultData.fields.paulyDataListId;\n        }\n      }\n    }\n  }\n\n  // TO DO think about 409 if only half  of list where created and then interuption\n  for (let index = 0; index < addDataArray.length; index += 1) {\n    const callData = addDataArray[index];\n    if (getPaulyListResultData.fields !== undefined) {\n      if (getPaulyListResultData.fields[callData.id] !== undefined) {\n        paulyListNewData.fields[callData.id] =\n          getPaulyListResultData.fields[callData.id];\n      }\n    }\n    if (\n      paulyListNewData.fields[callData.id] === undefined ||\n      update?.includes(callData.id)\n    ) {\n      const result = await callMsGraph(\n        callData.urlTwo !== undefined\n          ? callData.urlOne + getRootSiteIdResultData.id + callData.urlTwo\n          : callData.urlOne,\n        'POST',\n        JSON.stringify(callData.data),\n      );\n      if (!result.ok) {\n        return loadingStateEnum.failed;\n      }\n      const data = await result.json();\n      paulyListNewData.fields[callData.id] = data.id;\n    }\n  }\n  if (getPaulyListResultData.fields !== undefined) {\n    if (getPaulyListResultData.fields.eventTypeExtensionId !== undefined) {\n      paulyListNewData.fields.eventTypeExtensionId =\n        getPaulyListResultData.fields.eventTypeExtensionId;\n    } else {\n      paulyListNewData.fields.eventTypeExtensionId = `String {${createUUID()}} Name eventType`;\n    }\n  } else {\n    paulyListNewData.fields.eventTypeExtensionId = `String {${createUUID()}} Name eventType`;\n  }\n\n  if (getPaulyListResultData.fields !== undefined) {\n    if (getPaulyListResultData.fields.eventDataExtensionId !== undefined) {\n      paulyListNewData.fields.eventDataExtensionId =\n        getPaulyListResultData.fields.eventDataExtensionId;\n    } else {\n      paulyListNewData.fields.eventDataExtensionId = `String {${createUUID()}} Name eventData`;\n    }\n    if (getPaulyListResultData.fields.resourceExtensionId !== undefined) {\n      paulyListNewData.fields.resourceExtensionId =\n        getPaulyListResultData.fields.resourceExtensionId;\n    } else {\n      paulyListNewData.fields.resourceExtensionId = `String {${createUUID()}} Name resourceData`;\n    }\n  } else {\n    paulyListNewData.fields.eventDataExtensionId = `String {${createUUID()}} Name eventData`;\n    paulyListNewData.fields.resourceExtensionId = `String {${createUUID()}} Name resourceData`;\n  }\n\n  if (paulyListNewData.fields.paulyDataListId === undefined) {\n    const paulyDataResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists`,\n      'POST',\n      JSON.stringify(paulyDataData),\n    );\n    if (!paulyDataResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    const paulyDataResultData = await paulyDataResult.json();\n    const paulyDataNewData = {\n      fields: {\n        Title: 'Main',\n        animationSpeed: 10,\n        message: 'Pauly',\n        powerpointId: 'unset',\n      },\n    };\n    const setPaulyDataNewDataResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/${paulyDataResultData.id}/items`,\n      'POST',\n      JSON.stringify(paulyDataNewData),\n    );\n    if (!setPaulyDataNewDataResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    paulyListNewData.fields.paulyDataListId = paulyDataResultData.id;\n  }\n  if (secondRun === false) {\n    const paulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists`,\n      'POST',\n      JSON.stringify(paulyListData),\n    );\n    if (!paulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n    const addPaulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items`,\n      'POST',\n      JSON.stringify(paulyListNewData),\n    );\n    if (!addPaulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n  } else {\n    const addPaulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items/1`,\n      'PATCH',\n      JSON.stringify(paulyListNewData),\n    );\n    const ourData = await addPaulyListResult.json();\n    if (!addPaulyListResult.ok) {\n      return loadingStateEnum.failed;\n    }\n  }\n  return loadingStateEnum.success;\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, Text, Pressable, TextInput, FlatList } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { useNavigate } from 'react-router-native';\nimport {\n  initializePaulyPartOne,\n  initializePaulyPartThree,\n  initializePaulyPartTwo,\n} from '../../../../Functions/initializePauly/initializePauly';\nimport { RootState } from '../../../../Redux/store';\nimport { addDataArray } from '../../../../Functions/initializePauly/initializePaulyData';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\n\nenum initStage {\n  notStarted,\n  partOne,\n  partTwoLoad,\n  partTwo,\n  partThreeLoad,\n  partThree,\n  done,\n}\n\nexport default function GovernmentAdmin() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [selectedUser, setSelectedUser] = useState<\n    microsoftUserType | undefined\n  >(undefined);\n  const [timeLeft, setTimeLeft] = useState<string>('');\n  const [timeElapsed, setTimeElapsed] = useState<string>('Not Started');\n  const [createdGroupId, setCreatedGroupId] = useState<string>('');\n  const [selectedUpdates, setSelectedUpdates] = useState<string[]>([]);\n  const navigate = useNavigate();\n\n  // Start Times\n  const [startTime, setStartTime] = useState<Date>(new Date());\n  const [partOneStartTime, setPartOneStartTime] = useState<Date>(new Date());\n  const [partTwoStartTime, setPartTwoStartTime] = useState<Date>(new Date());\n\n  // Result\n  const [initResult, setInitResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [initTwoResult, setInitTwoResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [initThreeResult, setInitThreeResult] = useState<loadingStateEnum>(\n    loadingStateEnum.cannotStart,\n  );\n  const [currentInitStage, setCurrentInitStage] = useState<initStage>(\n    initStage.notStarted,\n  );\n\n  async function initializePauly() {\n    if (selectedUser !== undefined) {\n      setStartTime(new Date());\n      setCurrentInitStage(initStage.partOne);\n      setInitResult(loadingStateEnum.loading);\n      const partOneResult = await initializePaulyPartOne(selectedUser.id);\n      if (\n        partOneResult.result === loadingStateEnum.success &&\n        partOneResult.groupId !== undefined\n      ) {\n        setCreatedGroupId(partOneResult.groupId);\n        setCurrentInitStage(initStage.partTwoLoad);\n        setPartOneStartTime(new Date());\n        const partTwoResult = await new Promise<loadingStateEnum>(\n          (resolve, reject) => {\n            setTimeout(async () => {\n              if (partOneResult.groupId !== undefined) {\n                setCurrentInitStage(initStage.partTwo);\n                const secondResult = await initializePaulyPartTwo(\n                  partOneResult.groupId,\n                );\n                resolve(secondResult);\n              } else {\n                setCurrentInitStage(initStage.done);\n                setInitResult(loadingStateEnum.failed);\n                reject();\n              }\n            }, 900000);\n          },\n        );\n        if (partTwoResult === loadingStateEnum.success) {\n          setCurrentInitStage(initStage.partThreeLoad);\n          setPartTwoStartTime(new Date());\n          const partThreeResult = await new Promise<loadingStateEnum>(\n            (resolve, reject) => {\n              setTimeout(async () => {\n                if (partOneResult.groupId !== undefined) {\n                  setCurrentInitStage(initStage.partThree);\n                  const thirdResult = await initializePaulyPartThree(\n                    partOneResult.groupId,\n                  );\n                  resolve(thirdResult);\n                } else {\n                  setCurrentInitStage(initStage.done);\n                  setInitResult(loadingStateEnum.failed);\n                  reject();\n                }\n              }, 900000);\n            },\n          );\n          if (partThreeResult === loadingStateEnum.success) {\n            setInitResult(loadingStateEnum.success);\n            setCurrentInitStage(initStage.done);\n          } else {\n            setCurrentInitStage(initStage.done);\n            setInitResult(loadingStateEnum.failed);\n          }\n        } else {\n          setCurrentInitStage(initStage.done);\n          setInitResult(loadingStateEnum.failed);\n        }\n      } else {\n        setCurrentInitStage(initStage.done);\n        setInitResult(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function initializePaulyFromPartTwo() {\n    if (\n      createdGroupId !== '' &&\n      initTwoResult === loadingStateEnum.notStarted\n    ) {\n      setInitTwoResult(loadingStateEnum.loading);\n      const secondResult = await initializePaulyPartTwo(createdGroupId);\n      if (secondResult === loadingStateEnum.success) {\n        setInitTwoResult(loadingStateEnum.success);\n      } else {\n        setInitTwoResult(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function initializePaulyFromPartThree() {\n    if (\n      createdGroupId !== '' &&\n      initThreeResult === loadingStateEnum.notStarted\n    ) {\n      setStartTime(new Date());\n      setCurrentInitStage(initStage.partThree);\n      setInitThreeResult(loadingStateEnum.loading);\n      const result = await initializePaulyPartThree(\n        createdGroupId,\n        selectedUpdates,\n      );\n      if (result === loadingStateEnum.success) {\n        setInitThreeResult(loadingStateEnum.success);\n        setCurrentInitStage(initStage.done);\n      } else {\n        setInitThreeResult(loadingStateEnum.failed);\n        setCurrentInitStage(initStage.done);\n      }\n    }\n  }\n\n  useEffect(() => {\n    if (\n      currentInitStage === initStage.partTwoLoad ||\n      currentInitStage === initStage.partThreeLoad\n    ) {\n      const interval: ReturnType<typeof setInterval> = setInterval(() => {\n        let miliSecondsPassed = new Date().getTime() - startTime.getTime();\n        if (currentInitStage === initStage.partTwoLoad) {\n          miliSecondsPassed = new Date().getTime() - partOneStartTime.getTime();\n        } else if (currentInitStage === initStage.partThreeLoad) {\n          miliSecondsPassed = new Date().getTime() - partTwoStartTime.getTime();\n        }\n\n        const miliSecondsLeft = 900000 - miliSecondsPassed;\n        const totalSecondsLeft = miliSecondsLeft / 1000;\n        let minutesLeft: number = Math.floor(totalSecondsLeft / 60);\n        let secondsLeft: number = Math.ceil(totalSecondsLeft % 60);\n        if (secondsLeft === 60) {\n          minutesLeft += 1;\n          secondsLeft = 0;\n        }\n        let minutesLeftString: string = minutesLeft.toString();\n        let secondsLeftString: string = secondsLeft.toString();\n        if (minutesLeft <= 9) {\n          minutesLeftString = `0${minutesLeftString}`;\n        }\n        if (secondsLeft <= 9) {\n          secondsLeftString = `0${secondsLeft}`;\n        }\n        setTimeLeft(`${minutesLeftString}:${secondsLeftString}`);\n        if (minutesLeft <= -1) {\n          setTimeLeft('0:0');\n          return clearInterval(interval);\n        }\n      }, 1000);\n\n      return () => clearInterval(interval);\n    }\n  }, [currentInitStage]);\n\n  useEffect(() => {\n    if (currentInitStage !== initStage.notStarted) {\n      const interval = setInterval(() => {\n        const miliSecondsPast = new Date().getTime() - startTime.getTime();\n\n        const totalSecondsLeft = miliSecondsPast / 1000;\n        const totalMinutesPast: number = Math.floor(totalSecondsLeft / 60);\n        let minutesPast: number = Math.ceil(totalMinutesPast % 60);\n        const hoursPast: number = Math.floor(totalMinutesPast / 60);\n        let secondsPast: number = Math.ceil(totalSecondsLeft % 60);\n        if (secondsPast === 60) {\n          minutesPast += 1;\n          secondsPast = 0;\n        }\n        let hoursLeftString: string = hoursPast.toString();\n        let minutesLeftString: string = minutesPast.toString();\n        let secondsLeftString: string = secondsPast.toString();\n        if (minutesPast <= 9) {\n          minutesLeftString = `0${minutesLeftString}`;\n        }\n        if (secondsPast <= 9) {\n          secondsLeftString = `0${secondsPast}`;\n        }\n        if (hoursPast <= 9) {\n          hoursLeftString = `0${hoursLeftString}`;\n        }\n        setTimeElapsed(\n          `${hoursLeftString}:${minutesLeftString}:${secondsLeftString}`,\n        );\n      }, 1000);\n      if (currentInitStage === initStage.done) {\n        return clearInterval(interval);\n      }\n      return () => clearInterval(interval);\n    }\n  }, [currentInitStage]);\n\n  useEffect(() => {\n    if (\n      createdGroupId !== '' &&\n      (initResult === loadingStateEnum.notStarted ||\n        initResult === loadingStateEnum.cannotStart ||\n        initResult === loadingStateEnum.failed)\n    ) {\n      setInitTwoResult(loadingStateEnum.notStarted);\n      setInitThreeResult(loadingStateEnum.notStarted);\n    }\n  }, [createdGroupId, initResult]);\n\n  return (\n    <View style={{ height, width, backgroundColor: Colors.white }}>\n      <View>\n        <Pressable onPress={() => navigate('/profile/government')}>\n          <Text>Back</Text>\n        </Pressable>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        <View>\n          <View\n            style={{\n              height: height * 0.25,\n              width: height * 0.1,\n              alignContent: 'center',\n              justifyContent: 'center',\n              alignItems: 'center',\n            }}\n          >\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partOne ? 'blue' : 'black',\n                borderRadius: 50,\n              }}\n            />\n            <View\n              style={{\n                height: height * 0.025,\n                width: height * 0.05,\n                alignItems: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.025,\n                  width: height * 0.005,\n                  backgroundColor:\n                    currentInitStage === initStage.partTwoLoad\n                      ? 'blue'\n                      : 'black',\n                }}\n              />\n              {currentInitStage === initStage.partTwoLoad ? (\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: height * 0.03,\n                    top: height * 0.01,\n                  }}\n                >\n                  {timeLeft}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partTwo\n                    ? 'blue'\n                    : Colors.black,\n                borderRadius: 50,\n              }}\n            />\n            <View\n              style={{\n                height: height * 0.025,\n                width: height * 0.05,\n                alignItems: 'center',\n                justifyContent: 'center',\n                alignContent: 'center',\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.025,\n                  width: height * 0.005,\n                  backgroundColor:\n                    currentInitStage === initStage.partThreeLoad\n                      ? 'blue'\n                      : Colors.black,\n                }}\n              />\n              {currentInitStage === initStage.partThreeLoad ? (\n                <Text\n                  style={{\n                    position: 'absolute',\n                    left: height * 0.03,\n                    top: height * 0.01,\n                  }}\n                >\n                  {timeLeft}\n                </Text>\n              ) : null}\n            </View>\n            <View\n              style={{\n                height: height * 0.05,\n                width: height * 0.05,\n                backgroundColor:\n                  currentInitStage === initStage.partThree\n                    ? 'blue'\n                    : Colors.black,\n                borderRadius: 50,\n              }}\n            />\n          </View>\n        </View>\n        <View>\n          <UserBlock\n            setSelectedUser={setSelectedUser}\n            setInitResult={setInitResult}\n          />\n          <TextInput\n            value={createdGroupId}\n            onChangeText={setCreatedGroupId}\n            placeholder=\"Group Id\"\n          />\n          <Text>Time Elapsed: {timeElapsed}</Text>\n          <Pressable\n            onPress={() => {\n              if (initResult === loadingStateEnum.notStarted) {\n                initializePauly();\n              }\n            }}\n          >\n            <Text>\n              {initResult === loadingStateEnum.cannotStart\n                ? 'Please Pick a User'\n                : initResult === loadingStateEnum.notStarted\n                ? 'initialize Pauly on New Tenant'\n                : initResult === loadingStateEnum.loading\n                ? `Loading ${timeLeft}`\n                : initResult === loadingStateEnum.success\n                ? 'Success'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {initTwoResult !== loadingStateEnum.cannotStart ? (\n            <Pressable\n              onPress={() => {\n                initializePaulyFromPartTwo();\n              }}\n            >\n              <Text>\n                {initTwoResult === loadingStateEnum.notStarted\n                  ? 'Start From Part Two'\n                  : initTwoResult === loadingStateEnum.loading\n                  ? 'Loading'\n                  : initTwoResult === loadingStateEnum.success\n                  ? 'Success'\n                  : 'Failed'}\n              </Text>\n            </Pressable>\n          ) : null}\n          {initThreeResult !== loadingStateEnum.cannotStart ? (\n            <View>\n              {addDataArray.map(addData => (\n                <View key={`Add_Data_${addData.id}`}>\n                  {selectedUpdates.includes(addData.id) ? (\n                    <Pressable\n                      style={{\n                        width: width * 0.7,\n                        backgroundColor: Colors.lightGray,\n                      }}\n                      onPress={() => {\n                        const newSelectedUpdates = selectedUpdates;\n                        newSelectedUpdates.filter(e => {\n                          return e !== addData.id;\n                        });\n                        setSelectedUpdates([...newSelectedUpdates]);\n                      }}\n                    >\n                      <View style={{ margin: 5 }}>\n                        <Text>{addData.id}</Text>\n                      </View>\n                    </Pressable>\n                  ) : (\n                    <Pressable\n                      style={{\n                        width: width * 0.7,\n                        backgroundColor: Colors.white,\n                      }}\n                      onPress={() => {\n                        setSelectedUpdates([...selectedUpdates, addData.id]);\n                      }}\n                    >\n                      <View style={{ margin: 5 }}>\n                        <Text>{addData.id}</Text>\n                      </View>\n                    </Pressable>\n                  )}\n                </View>\n              ))}\n              <Pressable\n                onPress={() => {\n                  initializePaulyFromPartThree();\n                }}\n              >\n                <Text>\n                  {initThreeResult === loadingStateEnum.notStarted\n                    ? 'Start From Part Three'\n                    : initThreeResult === loadingStateEnum.loading\n                    ? 'Loading'\n                    : initThreeResult === loadingStateEnum.success\n                    ? 'Success'\n                    : 'Failed'}\n                </Text>\n              </Pressable>\n            </View>\n          ) : null}\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction UserBlock({\n  setSelectedUser,\n  setInitResult,\n}: {\n  setSelectedUser: (item: microsoftUserType) => void;\n  setInitResult: (item: loadingStateEnum) => void;\n}) {\n  const [currentUserId, setCurrentUserId] = useState<string>('');\n  const [loadedUsers, setLoadedUsers] = useState<microsoftUserType[]>([]);\n  const [loadUsersResult, setLoadUsersResult] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [nextLink, setNextLink] = useState<string | undefined>(undefined);\n  const { height } = useSelector((state: RootState) => state.dimentions);\n\n  async function getUserId() {\n    const result = await callMsGraph('https://graph.microsoft.com/v1.0/me');\n    if (result.ok) {\n      const data = await result.json();\n      setCurrentUserId(data.id);\n    }\n  }\n\n  async function getUsers(nextLink?: string) {\n    const result = await callMsGraph(\n      nextLink ||\n        'https://graph.microsoft.com/v1.0/users?$top=10&$select,id,displayName',\n    );\n    if (result.ok) {\n      const data = await result.json();\n      const newUsers: microsoftUserType[] = [];\n      for (let index = 0; index < data.value.length; index += 1) {\n        newUsers.push({\n          id: data.value[index].id,\n          displayName: data.value[index].displayName,\n        });\n      }\n      setNextLink(data['@odata.nextLink']);\n      if (nextLink) {\n        setLoadedUsers([...loadedUsers, ...newUsers]);\n      } else {\n        setLoadedUsers(newUsers);\n      }\n      setLoadUsersResult(loadingStateEnum.success);\n    } else {\n      setLoadUsersResult(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getUserId();\n    getUsers();\n  }, []);\n\n  return (\n    <View style={{ height: height * 0.6 }}>\n      {loadUsersResult === loadingStateEnum.loading ? (\n        <Text>Loading</Text>\n      ) : (\n        <>\n          {loadUsersResult === loadingStateEnum.success ? (\n            <FlatList\n              data={loadedUsers}\n              renderItem={user => (\n                <View key={`User_${user.item.id}`}>\n                  {user.item.id !== currentUserId ? (\n                    <Pressable\n                      onPress={() => {\n                        setSelectedUser(user.item);\n                        setInitResult(loadingStateEnum.notStarted);\n                      }}\n                    >\n                      <View>\n                        <Text>{user.item.displayName}</Text>\n                      </View>\n                    </Pressable>\n                  ) : null}\n                </View>\n              )}\n              onEndReached={() => {\n                if (nextLink !== undefined) {\n                  getUsers(nextLink);\n                }\n              }}\n            />\n          ) : (\n            <Text>Failed</Text>\n          )}\n        </>\n      )}\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { getRooms } from '../../../../Functions/classesFunctions';\n\nexport default function GovernmentRooms() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const navigate = useNavigate();\n  const [roomState, setRoomState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [rooms, setRooms] = useState<roomType[]>([]);\n\n  async function loadData() {\n    const result = await getRooms();\n    setRoomState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setRooms(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Rooms</Text>\n      <View>\n        {roomState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {roomState === loadingStateEnum.success ? (\n              <View>\n                {rooms.map(room => (\n                  <View key={`Room_${room.id}`}>\n                    <Text>{room.name}</Text>\n                  </View>\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room/create');\n        }}\n      >\n        <Text>Create Room</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable, TextInput } from 'react-native';\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport store, { RootState } from '../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { WarningIcon } from '../../../../UI/Icons/Icons';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../Functions/ultility/createUUID';\n\nexport default function GovermentRoomsCreate() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [createRoomState, setCreateRoomState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n  const navigate = useNavigate();\n  const [roomName, setRoomName] = useState<string>('');\n\n  async function createRoom() {\n    if (\n      roomName !== '' &&\n      (createRoomState === loadingStateEnum.notStarted ||\n        createRoomState === loadingStateEnum.failed ||\n        createRoomState === loadingStateEnum.success)\n    ) {\n      setCreateRoomState(loadingStateEnum.loading);\n      const id = createUUID();\n      const items = {\n        fields: {\n          Title: id,\n          roomId: id,\n          roomName,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.roomListId}/items?expand=fields`,\n        'POST',\n        JSON.stringify(items),\n      );\n      if (result.ok) {\n        setCreateRoomState(loadingStateEnum.success);\n      } else {\n        setCreateRoomState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable\n        onPress={() => {\n          navigate('/profile/government/classes/room');\n        }}\n      >\n        <Text>Back</Text>\n      </Pressable>\n      <View\n        style={{\n          justifyContent: 'center',\n          alignContent: 'center',\n          alignItems: 'center',\n        }}\n      >\n        <Text>Create Room</Text>\n      </View>\n      <View style={{ flexDirection: 'row' }}>\n        {roomName === '' ? (\n          <WarningIcon width={14} height={14} outlineColor=\"red\" />\n        ) : null}\n        <TextInput\n          value={roomName}\n          onChangeText={e => {\n            setRoomName(e);\n          }}\n          placeholder=\"Room Name\"\n        />\n      </View>\n      <Pressable\n        onPress={() => {\n          createRoom();\n        }}\n      >\n        <Text>\n          {createRoomState === loadingStateEnum.notStarted\n            ? 'Create Room'\n            : createRoomState === loadingStateEnum.loading\n            ? 'Loading'\n            : createRoomState === loadingStateEnum.success\n            ? 'Room Created'\n            : 'Failed to Create Room'}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Button, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate, useParams } from 'react-router-native';\nimport * as Clipboard from 'expo-clipboard';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { CopyIcon } from '../../../../UI/Icons/Icons';\nimport { RootState } from '../../../../Redux/store';\nimport { Colors } from '../../../../types';\n\nexport default function MicrosoftGraphEditList() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const [currentColumns, setCurrentColumns] = useState<listColumnType[]>([]);\n  const { id } = useParams();\n  const [isCoppiedToClipboard, setIsCoppiedToClipboard] =\n    useState<boolean>(false);\n\n  const navigate = useNavigate();\n\n  async function getListItems() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/items?expand=fields`,\n    );\n    if (result.ok) {\n      // const data = await result.json();\n    } else {\n    }\n  }\n  async function indexColumn(columnId: string) {\n    const data = {\n      indexed: 'true',\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/columns/${columnId}`,\n      'PATCH',\n      JSON.stringify(data),\n    ); // TO DO fix ids\n    if (result.ok) {\n      const data = await result.json();\n      const newColumnData: listColumnType[] = currentColumns;\n      const index = newColumnData.findIndex(e => {\n        e.id === columnId;\n      });\n      if (index !== -1) {\n        newColumnData[index].indexed = true;\n        setCurrentColumns(newColumnData);\n      } else {\n        // TO DO failed\n      }\n    }\n  }\n  async function getColumns() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${id}/columns`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length !== undefined) {\n        const newCurrentColumns: listColumnType[] = [];\n        for (let index = 0; index < data.value.length; index += 1) {\n          newCurrentColumns.push({\n            columnGroup: data.value[index].columnGroup,\n            description: data.value[index].description,\n            displayName: data.value[index].displayName,\n            enforceUniqueValues: data.value[index].enforceUniqueValues,\n            hidden: data.value[index].hidden,\n            id: data.value[index].id,\n            indexed: data.value[index].indexed,\n            name: data.value[index].name,\n            readOnly: data.value[index].readOnly,\n            required: data.value[index].required,\n          });\n        }\n        setCurrentColumns(newCurrentColumns);\n      }\n    } else {\n    }\n  }\n  useEffect(() => {\n    getListItems();\n    getColumns();\n  }, []);\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        width,\n        height,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Pressable onPress={() => navigate('/profile/government/graph/list')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text>Microsoft Graph Edit List</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>{id}</Text>\n        {isCoppiedToClipboard ? (\n          <Pressable\n            onPress={async () => {\n              await Clipboard.setStringAsync(id);\n            }}\n          >\n            <Text>Copied To Clipboard!</Text>\n          </Pressable>\n        ) : (\n          <Pressable\n            onPress={async () => {\n              await Clipboard.setStringAsync(id);\n              setIsCoppiedToClipboard(true);\n            }}\n          >\n            <CopyIcon width={14} height={14} />\n          </Pressable>\n        )}\n      </View>\n      <View\n        style={{\n          flexDirection: 'row',\n          overflow: 'scroll',\n          height: height * 0.4,\n        }}\n      >\n        {currentColumns.map(item => (\n          <View\n            style={{\n              width: width * 0.3,\n              height: height * 0.4,\n              borderColor: 'black',\n              borderWidth: 2,\n            }}\n          >\n            <Text>{item.displayName}</Text>\n            {item.indexed === false ? (\n              <Button\n                title=\"Index This Propertie\"\n                onPress={() => {\n                  indexColumn(item.id);\n                }}\n              />\n            ) : (\n              <Text>Already Indexed</Text>\n            )}\n          </View>\n        ))}\n      </View>\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport * as Clipboard from 'expo-clipboard';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { CopyIcon } from '../../../../UI/Icons/Icons';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nexport default function MicrosoftGraphEditGroup() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n\n  const { id } = useParams();\n\n  const [isCoppiedToClipboard, setIsCoppiedToClipboard] =\n    useState<boolean>(false);\n  const [groupLoadingState, setGroupLoadingState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  const [deleteGroupLoadingState, setDeleteGroupLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function getListItems() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      setGroupLoadingState(loadingStateEnum.success);\n    } else {\n      setGroupLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  async function deleteGroup() {\n    setDeleteGroupLoadingState(loadingStateEnum.loading);\n    const deleteGroupResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${id}`,\n      'DELETE',\n    );\n    if (deleteGroupResult.ok) {\n      setDeleteGroupLoadingState(loadingStateEnum.success);\n    } else {\n      setDeleteGroupLoadingState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    getListItems();\n  }, []);\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        height,\n        width,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to=\"/profile/government/graph/group\">\n        <Text>Back</Text>\n      </Link>\n      <Text>MicrosoftGraphEditList</Text>\n      <View style={{ flexDirection: 'row' }}>\n        <Text>{id}</Text>\n        {id !== undefined ? (\n          <>\n            {isCoppiedToClipboard ? (\n              <Pressable\n                onPress={async () => {\n                  await Clipboard.setStringAsync(id);\n                }}\n              >\n                <Text>Copied To Clipboard!</Text>\n              </Pressable>\n            ) : (\n              <Pressable\n                onPress={async () => {\n                  await Clipboard.setStringAsync(id);\n                  setIsCoppiedToClipboard(true);\n                }}\n              >\n                <CopyIcon width={14} height={14} />\n              </Pressable>\n            )}\n          </>\n        ) : null}\n      </View>\n      <Pressable\n        onPress={() => {\n          deleteGroup();\n        }}\n      >\n        <Text>\n          {getTextState(deleteGroupLoadingState, {\n            notStarted: 'Delete Group',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useState } from 'react';\nimport { Link, useParams } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum } from '../../../../types';\nimport { RootState } from '../../../../Redux/store';\nimport { getTextState } from '../../../../Functions/ultility/createUUID';\n\nexport default function MicrosoftGraphEditExtension() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { mode, id } = useParams();\n\n  const [extensionLoadingState, setExtensionLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.loading);\n  const [deleteExtensionLoadingState, setDeleteExtensionLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const [extensionDescription, setExtensionDescription] = useState<string>('');\n\n  async function getExtension() {\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/schemaExtensions?$filter=id%20eq%20'${id}'`,\n    );\n    if (result.ok) {\n      const data = await result.json();\n      if (data.value.length === 1) {\n        setExtensionDescription(data.value[0].description);\n        setExtensionLoadingState(loadingStateEnum.success);\n      } else {\n        setExtensionLoadingState(loadingStateEnum.failed);\n      }\n    } else {\n      setExtensionLoadingState(loadingStateEnum.failed);\n    }\n  }\n  async function deleteExtension() {\n    if (\n      deleteExtensionLoadingState === loadingStateEnum.notStarted ||\n      deleteExtensionLoadingState === loadingStateEnum.failed\n    ) {\n      setDeleteExtensionLoadingState(loadingStateEnum.loading);\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/schemaExtensions/${id}`,\n        'DELETE',\n      );\n      if (result.ok) {\n        setDeleteExtensionLoadingState(loadingStateEnum.success);\n      } else {\n        setDeleteExtensionLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n  return (\n    <View\n      style={{\n        overflow: 'hidden',\n        height,\n        width,\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to={`/profile/government/graph/${mode}`}>\n        <Text>Back</Text>\n      </Link>\n      <Text>MicrosoftGraphEditExtension</Text>\n      <View />\n      <Pressable\n        onPress={() => {\n          deleteExtension();\n        }}\n      >\n        <Text>\n          {getTextState(deleteExtensionLoadingState, {\n            notStarted: 'Delete Extension',\n            success: 'Successfully Deleted Extension',\n            failed: 'Failed To Delete Extension',\n          })}\n        </Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { View } from 'react-native';\nimport React from 'react';\nimport { useParams } from 'react-router-native';\nimport MicrosoftGraphEditList from './MicrosoftGraphEditList';\nimport MicrosoftGraphEditGroup from './MicrosoftGraphEditGroup';\nimport MicrosoftGraphEditExtension from './MicrosoftGraphEditExtension';\n\nexport default function MicrosoftGraphEdit() {\n  const { mode } = useParams();\n  return (\n    <View>\n      {mode === 'list' ? <MicrosoftGraphEditList /> : null}\n      {mode === 'group' ? <MicrosoftGraphEditGroup /> : null}\n      {mode === 'extension' ? <MicrosoftGraphEditExtension /> : null}\n    </View>\n  );\n}\n","import { View, Text, Pressable, Switch, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Link } from 'react-router-native';\nimport store, { RootState } from '../../../Redux/store';\nimport callMsGraph from '../../../Functions/ultility/microsoftAssets';\nimport { Colors, loadingStateEnum, resourceResponce } from '../../../types';\nimport ProgressView from '../../../UI/ProgressView';\nimport getResource from '../../../Functions/getResources';\n\ntype resourceGroupType = {\n  name: string;\n  id: string;\n  error: boolean;\n  channels: channelType[];\n};\n\nfunction ChannelBlock({\n  group,\n  groups,\n  groupIndex,\n  setGroups,\n  selectedGroup,\n  channel,\n  channelIndex,\n}: {\n  group: resourceGroupType;\n  groups: resourceGroupType[];\n  groupIndex: number;\n  setGroups: (item: resourceGroupType[]) => void;\n  selectedGroup: string;\n  channel: channelType;\n  channelIndex: number;\n}) {\n  const [isSelected, setIsSelected] = useState<boolean>(\n    group.channels[channelIndex].selected,\n  );\n  const [isLoading, setIsLoading] = useState<boolean>(\n    group.channels[channelIndex].loading,\n  );\n\n  async function addChannel() {\n    const data = {\n      fields: {\n        resourceGroupId: group.id,\n        resourceConversationId: channel.id,\n      },\n    };\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${store.getState().paulyList.resourceListId}/items`,\n      'POST',\n      JSON.stringify(data),\n    );\n    if (result.ok) {\n      const outGroups: resourceGroupType[] = groups;\n      outGroups[groupIndex].channels[channelIndex].selected = true;\n      outGroups[groupIndex].channels[channelIndex].loading = false;\n      setGroups(outGroups);\n      setIsSelected(true);\n      setIsLoading(false);\n    } else {\n      const outGroups: resourceGroupType[] = groups;\n      outGroups[groupIndex].channels[channelIndex].loading = false;\n      setGroups(outGroups);\n      setIsLoading(false);\n    }\n  }\n\n  async function removeChannel() {\n    const itemResult = await getResource(group.id, channel.id);\n    if (\n      itemResult.result === resourceResponce.found &&\n      itemResult.itemId !== undefined\n    ) {\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${store.getState().paulyList.resourceListId}/items/${\n          itemResult.itemId\n        }`,\n        'DELETE',\n      );\n      if (result.ok) {\n        const outGroups: resourceGroupType[] = groups;\n        outGroups[groupIndex].channels[channelIndex].selected = false;\n        outGroups[groupIndex].channels[channelIndex].loading = false;\n        setGroups(outGroups);\n        setIsSelected(false);\n        setIsLoading(false);\n      } else {\n        const outGroups: resourceGroupType[] = groups;\n        outGroups[groupIndex].channels[channelIndex].loading = false;\n        setGroups(outGroups);\n        setIsLoading(false);\n      }\n    } else {\n      const outGroups: resourceGroupType[] = groups;\n      outGroups[groupIndex].channels[channelIndex].loading = false;\n      setGroups(outGroups);\n      setIsLoading(false);\n    }\n  }\n\n  return (\n    <View\n      key={`Team_${group.id}Channel_${channel.id}`}\n      style={{ flexDirection: 'row' }}\n    >\n      {isLoading ? (\n        <ProgressView width={12} height={12} />\n      ) : (\n        <View>\n          {selectedGroup === group.id ? (\n            <Switch\n              trackColor={{ false: '#767577', true: '#81b0ff' }}\n              thumbColor={isSelected ? '#f5dd4b' : '#f4f3f4'}\n              ios_backgroundColor=\"#3e3e3e\"\n              onValueChange={e => {\n                const outGroups: resourceGroupType[] = groups;\n                outGroups[groupIndex].channels[channelIndex].loading = true;\n                setGroups(outGroups);\n                setIsLoading(true);\n                if (e === true) {\n                  addChannel();\n                } else {\n                  removeChannel();\n                }\n              }}\n              value={isSelected}\n            />\n          ) : (\n            <View\n              style={{\n                height: 12,\n                width: 12,\n                borderRadius: 50,\n                backgroundColor: channel.selected ? 'green' : 'blue',\n              }}\n            />\n          )}\n        </View>\n      )}\n      <Text>{channel.displayName}</Text>\n    </View>\n  );\n}\n\nfunction GroupBlock({\n  group,\n  groups,\n  groupIndex,\n  setGroups,\n  selectedGroup,\n  setSelectedGroup,\n}: {\n  group: resourceGroupType;\n  groups: resourceGroupType[];\n  groupIndex: number;\n  setGroups: (item: resourceGroupType[]) => void;\n  selectedGroup: string;\n  setSelectedGroup: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <Pressable\n      key={`Team_${group.id}`}\n      onPress={() => {\n        setSelectedGroup(group.id);\n      }}\n    >\n      <View\n        style={{\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n          marginLeft: width * 0.03,\n          marginRight: width * 0.03,\n          marginTop: height * 0.02,\n          marginBottom: height * 0.02,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          <Text>{group.name}</Text>\n          <Text>Channels</Text>\n          {group.channels !== undefined ? (\n            <View>\n              {group.channels.map((channel, channelIndex) => (\n                <ChannelBlock\n                  group={group}\n                  groups={groups}\n                  groupIndex={groupIndex}\n                  setGroups={setGroups}\n                  selectedGroup={selectedGroup}\n                  channel={channel}\n                  channelIndex={channelIndex}\n                />\n              ))}\n            </View>\n          ) : (\n            <Text>An Error Occurred: Could not get channels</Text>\n          )}\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nexport default function GovernmentResources() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [groups, setGroups] = useState<resourceGroupType[]>([]);\n  const [selectedGroup, setSelectedGroup] = useState<string>('');\n  const [getTeamsState, setGetTeamsState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n\n  async function getTeams() {\n    const result = await callMsGraph(\n      \"https://graph.microsoft.com/v1.0/groups?$filter=resourceProvisioningOptions/Any(x:x eq 'Team')\",\n    );\n    if (!result.ok) {\n      setGetTeamsState(loadingStateEnum.failed);\n      return;\n    }\n    const data = await result.json();\n    const resultGroups: resourceGroupType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const getResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/teams/${data.value[index].id}/allChannels`,\n      );\n      const channelResult: channelType[] = [];\n      if (getResult.ok) {\n        const getResultData = await getResult.json();\n        for (\n          let indexResult = 0;\n          indexResult < getResultData.value.length;\n          indexResult += 1\n        ) {\n          const channelGetResult = await getResource(\n            data.value[index].id,\n            getResultData.value[indexResult].id,\n          );\n          channelResult.push({\n            id: getResultData.value[indexResult].id,\n            selected: channelGetResult.result === resourceResponce.found,\n            loading: false,\n            displayName: getResultData.value[indexResult].displayName,\n            error: channelGetResult.result === resourceResponce.failed,\n          });\n        }\n      } else {\n        setGetTeamsState(loadingStateEnum.failed);\n        return;\n      }\n      resultGroups.push({\n        name: data.value[index].displayName,\n        id: data.value[index].id,\n        error: !!getResult.ok,\n        channels: channelResult,\n      });\n    }\n    setGetTeamsState(loadingStateEnum.success);\n    setGroups(resultGroups);\n  }\n  async function updateResources() {}\n  useEffect(() => {\n    getTeams();\n  }, []);\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <Link to=\"/profile/government\">\n          <Text>Back</Text>\n        </Link>\n        <Text>GovernmentResources</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.9 }}>\n        {getTeamsState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {getTeamsState === loadingStateEnum.success ? (\n              <View>\n                {groups.map((group, groupIndex) => (\n                  <GroupBlock\n                    group={group}\n                    groupIndex={groupIndex}\n                    groups={groups}\n                    selectedGroup={selectedGroup}\n                    setGroups={setGroups}\n                    setSelectedGroup={setSelectedGroup}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </ScrollView>\n    </View>\n  );\n}\n","import { View, Text, Pressable, ViewStyle } from 'react-native';\nimport React from 'react';\nimport { useNavigate } from 'react-router-native';\nimport createUUID from '../Functions/ultility/createUUID';\nimport { Colors } from '../types';\n\nexport default function ListItem({\n  to,\n  title,\n  width,\n  caption,\n  onPress,\n  style,\n}: {\n  title: string;\n  width: number;\n  caption?: string;\n  to?: string;\n  onPress?: () => void;\n  style?: ViewStyle;\n}) {\n  const navigate = useNavigate();\n  return (\n    <Pressable\n      onPress={() => {\n        if (to !== undefined) {\n          navigate(to);\n        }\n        if (onPress !== undefined) {\n          onPress();\n        }\n      }}\n      key={createUUID()}\n      style={[\n        {\n          shadowColor: Colors.black,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 15,\n          marginLeft: width * 0.03,\n          marginRight: width * 0.03,\n        },\n        style,\n      ]}\n    >\n      <View style={{ margin: 10 }}>\n        <Text style={{ fontSize: 16 }}>{title}</Text>\n        {caption !== undefined ? (\n          <Text style={{ fontSize: 12 }}>{caption}</Text>\n        ) : null}\n      </View>\n    </Pressable>\n  );\n}\n","import store from '../../Redux/store';\nimport { loadingStateEnum } from '../../types';\nimport callMsGraph from '../ultility/microsoftAssets';\n\nexport default async function getDressCodeData(): Promise<{\n  result: loadingStateEnum;\n  data?: dressCodeType[];\n}> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.dressCodeListId\n    }/items?expand=fields($select=dressCodeName,dressCodeId,dressCodeData)&$select=id`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const newDressCodes: dressCodeType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      try {\n        newDressCodes.push({\n          name: data.value[index].fields.dressCodeName,\n          id: data.value[index].fields.dressCodeId,\n          listId: data.value[index].id,\n          dressCodeData: JSON.parse(data.value[index].fields.dressCodeData),\n          dressCodeIncentives: [],\n        });\n      } catch {\n        continue;\n      }\n    }\n    return { result: loadingStateEnum.success, data: newDressCodes };\n  }\n  return { result: loadingStateEnum.failed };\n}\n","import { View, Text, Pressable } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport { RootState } from '../../../../../Redux/store';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport ListItem from '../../../../../UI/ListItem';\nimport getDressCodeData from '../../../../../Functions/homepage/getDressCodeData';\n\nexport default function GovernmentDressCode() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [getDressCodeState, setGetDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [dressCodes, setDressCodes] = useState<dressCodeType[]>([]);\n  const navigate = useNavigate();\n\n  async function loadData() {\n    const result = await getDressCodeData();\n    setGetDressCodeState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setDressCodes(result.data);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <Pressable onPress={() => navigate('/profile/government/calendar')}>\n        <Text>Back</Text>\n      </Pressable>\n      <Text style={{ marginLeft: 'auto', marginRight: 'auto' }}>\n        Dress Codes\n      </Text>\n      <View>\n        {getDressCodeState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {getDressCodeState === loadingStateEnum.success ? (\n              <View>\n                {dressCodes.map(dressCode => (\n                  <ListItem\n                    key={dressCode.id}\n                    to={`/profile/government/calendar/dresscode/${dressCode.id}`}\n                    title={dressCode.name}\n                    width={width}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Pressable\n        onPress={() =>\n          navigate('/profile/government/calendar/dresscode/create')\n        }\n      >\n        <Text>Create Dress Code</Text>\n      </Pressable>\n    </View>\n  );\n}\n","import { useSelector } from 'react-redux';\nimport { Pressable, View, Text, TextInput } from 'react-native';\nimport React from 'react';\nimport { RootState } from '../../../../../Redux/store';\nimport {\n  CloseIcon,\n  DownIcon,\n  UpIcon,\n  WarningIcon,\n} from '../../../../../UI/Icons/Icons';\n\nexport default function DressCodeBlock({\n  dressCode,\n  index,\n  dressCodeData,\n  setDressCodeData,\n  selectedDressCodeId,\n  setSelectedDressCodeId,\n}: {\n  dressCode: dressCodeDataType;\n  index: number;\n  dressCodeData: dressCodeDataType[];\n  setDressCodeData: (item: dressCodeDataType[]) => void;\n  selectedDressCodeId: string;\n  setSelectedDressCodeId: (item: string) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  return (\n    <Pressable\n      onPress={() => {\n        setSelectedDressCodeId(dressCode.id);\n      }}\n      style={{\n        shadowColor: 'black',\n        shadowOffset: { width: 0, height: 1 },\n        shadowOpacity: 0.8,\n        shadowRadius: 10,\n        borderRadius: 15,\n        marginLeft: width * 0.03,\n        marginRight: width * 0.03,\n        marginTop: height * 0.02,\n        marginBottom: height * 0.02,\n      }}\n    >\n      <View style={{ margin: 10, flexDirection: 'row' }}>\n        <View>\n          <View style={{ flexDirection: 'row' }}>\n            {dressCode.name === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>\n              Name: {selectedDressCodeId === dressCode.id ? '' : dressCode.name}\n            </Text>\n            {selectedDressCodeId === dressCode.id ? (\n              <TextInput\n                placeholder=\"Dress Code Name\"\n                value={dressCode.name}\n                onChangeText={e => {\n                  const newDressCodeData = dressCodeData;\n                  newDressCodeData[index].name = e;\n                  setDressCodeData([...newDressCodeData]);\n                }}\n              />\n            ) : null}\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {dressCode.description === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>\n              Description:{' '}\n              {selectedDressCodeId === dressCode.id\n                ? ''\n                : dressCode.description}\n            </Text>\n            {selectedDressCodeId === dressCode.id ? (\n              <TextInput\n                placeholder=\"Dress Code Description\"\n                value={dressCode.description}\n                onChangeText={e => {\n                  const newDressCodeData = dressCodeData;\n                  newDressCodeData[index].description = e;\n                  setDressCodeData([...newDressCodeData]);\n                }}\n              />\n            ) : null}\n          </View>\n        </View>\n        <View>\n          <UpIcon width={14} height={14} />\n          <DownIcon width={14} height={14} />\n          <CloseIcon width={14} height={14} />\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n","import { View, Text, TextInput, Pressable, ScrollView } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useNavigate, useParams } from 'react-router-native';\nimport store, { RootState } from '../../../../../Redux/store';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport DressCodeBlock from './DressCodeBlock';\nimport { createDressCode } from '../../../../../Functions/calendar/calendarFunctionsGraph';\nimport getDressCode from '../../../../../Functions/homepage/getDressCode';\nimport ProgressView from '../../../../../UI/ProgressView';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\n\nexport default function GovernmentDressCodeEdit() {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [dressCodeName, setDressCodeName] = useState<string>('');\n  const [dressCodeData, setDressCodeData] = useState<dressCodeDataType[]>([\n    { name: '', description: '', id: createUUID() },\n  ]);\n  const [selectedDressCodeId, setSelectedDressCodeId] = useState<string>('');\n  const [dressCodeListId, setDressCodeListId] = useState<string>('');\n\n  const [createDressCodeState, setCreateDressCodeState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  const navigate = useNavigate();\n\n  async function loadCreateDressCode() {\n    const result = await createDressCode(dressCodeName, dressCodeData);\n    setCreateDressCodeState(result);\n  }\n\n  const { id } = useParams();\n\n  const [getDressCodeState, setDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [isCreatingDressCode, setIsCreatingDressCode] =\n    useState<boolean>(false);\n  const [deleteDressCodeState, setDeleteDressCodeState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  async function deleteDressCode() {\n    setDeleteDressCodeState(loadingStateEnum.loading);\n    const result = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${\n        store.getState().paulyList.siteId\n      }/lists/${\n        store.getState().paulyList.dressCodeListId\n      }/items/${dressCodeListId}`,\n      'DELETE',\n    );\n    if (result.ok) {\n      setDeleteDressCodeState(loadingStateEnum.success);\n    } else {\n      setDeleteDressCodeState(loadingStateEnum.failed);\n    }\n  }\n\n  async function loadData() {\n    if (id !== undefined && id !== 'create') {\n      const result = await getDressCode(id);\n      if (\n        result.result === loadingStateEnum.success &&\n        result.data !== undefined\n      ) {\n        setDressCodeListId(result.data.listId);\n        setDressCodeName(result.data.name);\n        setDressCodeData(result.data.dressCodeData);\n        setIsCreatingDressCode(false);\n        setDressCodeState(loadingStateEnum.success);\n      } else {\n        setDressCodeState(loadingStateEnum.failed);\n      }\n    } else if (id === 'create') {\n      setIsCreatingDressCode(true);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, [id]);\n\n  return (\n    <>\n      {isCreatingDressCode || getDressCodeState === loadingStateEnum.success ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor: Colors.white,\n          }}\n        >\n          <Pressable\n            onPress={() => navigate('/profile/government/calendar/dresscode')}\n          >\n            <Text>Back</Text>\n          </Pressable>\n          <Text>Create Dress Code</Text>\n          <Text>Dress Code Name:</Text>\n          <TextInput\n            value={dressCodeName}\n            onChangeText={setDressCodeName}\n            placeholder=\"Dress Code Name\"\n          />\n          <ScrollView style={{ height: height * 0.7 }}>\n            {dressCodeData.map((dressCode, index) => (\n              <DressCodeBlock\n                dressCode={dressCode}\n                dressCodeData={dressCodeData}\n                index={index}\n                setDressCodeData={setDressCodeData}\n                selectedDressCodeId={selectedDressCodeId}\n                setSelectedDressCodeId={setSelectedDressCodeId}\n              />\n            ))}\n          </ScrollView>\n          <Pressable\n            onPress={() => {\n              setDressCodeData([\n                ...dressCodeData,\n                { name: '', description: '', id: createUUID() },\n              ]);\n            }}\n          >\n            <Text>Add</Text>\n          </Pressable>\n          <Pressable onPress={() => loadCreateDressCode()}>\n            <Text>\n              {createDressCodeState === loadingStateEnum.notStarted\n                ? 'Create Dress Code'\n                : createDressCodeState === loadingStateEnum.loading\n                ? 'Loading'\n                : createDressCodeState === loadingStateEnum.success\n                ? 'Created Dress Code'\n                : 'Failed'}\n            </Text>\n          </Pressable>\n          {!isCreatingDressCode ? (\n            <Pressable style={{ margin: 10 }} onPress={() => deleteDressCode()}>\n              <Text>\n                {deleteDressCodeState === loadingStateEnum.notStarted\n                  ? 'Delete'\n                  : deleteDressCodeState === loadingStateEnum.loading\n                  ? 'Loading'\n                  : deleteDressCodeState === loadingStateEnum.success\n                  ? 'Success'\n                  : 'Failed'}\n              </Text>\n            </Pressable>\n          ) : null}\n        </View>\n      ) : (\n        <>\n          {getDressCodeState === loadingStateEnum.loading ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor: Colors.white,\n                alignContent: 'center',\n                alignItems: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Pressable\n                onPress={() =>\n                  navigate('/profile/government/calendar/dresscode')\n                }\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <ProgressView width={14} height={14} />\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <View>\n              <Pressable\n                onPress={() =>\n                  navigate('/profile/government/calendar/dresscode')\n                }\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Failed</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n","import {\n  View,\n  Text,\n  TextInput,\n  Button,\n  Pressable,\n  ScrollView,\n} from 'react-native';\nimport React, { useContext, useEffect, useState } from 'react';\nimport { Link } from 'react-router-native';\nimport { useSelector } from 'react-redux';\nimport callMsGraph from '../../../../../Functions/ultility/microsoftAssets';\nimport createUUID from '../../../../../Functions/ultility/createUUID';\nimport { DownIcon, UpIcon, WarningIcon } from '../../../../../UI/Icons/Icons';\nimport { Colors, loadingStateEnum } from '../../../../../types';\nimport { RootState } from '../../../../../Redux/store';\nimport getDressCodeData from '../../../../../Functions/homepage/getDressCodeData';\nimport ListItem from '../../../../../UI/ListItem';\nimport { getSchedules } from '../../../../../Functions/calendar/calendarFunctionsGraph';\n\n// TO DO longest amount of school days is 20 make sure this is enforced\nexport default function GovernmentTimetableEdit() {\n  const { timetablesListId, siteId } = useSelector(\n    (state: RootState) => state.paulyList,\n  );\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n\n  // Loading States\n  const [dressCodeState, setDressCodeState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [createTimetableLoadingState, setCreateTimetableLoadingState] =\n    useState<loadingStateEnum>(loadingStateEnum.notStarted);\n\n  // New Table Data\n  const [timetableName, setTimetableName] = useState<string>('');\n  const [selectedSchedules, setSelectedSchedules] = useState<scheduleType[]>(\n    [],\n  );\n  const [dressCodes, setDressCodes] = useState<dressCodeType[]>([]);\n  const [selectedDressCode, setSelectedDressCode] = useState<\n    dressCodeType | undefined\n  >(undefined);\n  const [schoolDays, setSchoolDays] = useState<schoolDayType[]>([]);\n  const [selectedDefaultSchedule, setSelectedDefaultSchedule] = useState<\n    scheduleType | undefined\n  >(undefined);\n\n  async function createTimetable() {\n    if (\n      selectedDefaultSchedule !== undefined &&\n      selectedDressCode !== undefined\n    ) {\n      // Check to make sure all have the same number of periods\n      for (let index = 0; index < selectedSchedules.length; index += 1) {\n        if (\n          selectedSchedules[index].periods.length !==\n          selectedDefaultSchedule.periods.length\n        ) {\n          setCreateTimetableLoadingState(loadingStateEnum.failed);\n          return;\n        }\n      }\n\n      // Create Timetable\n      setCreateTimetableLoadingState(loadingStateEnum.loading);\n      const scheduals = [];\n      for (let index = 0; index < selectedSchedules.length; index += 1) {\n        scheduals.push(selectedSchedules[index].id);\n      }\n      const data = {\n        fields: {\n          Title: timetableName,\n          timetableName,\n          timetableId: createUUID(),\n          timetableDataSchedules: JSON.stringify(scheduals),\n          timetableDataDays: JSON.stringify(schoolDays),\n          timetableDefaultScheduleId: selectedDefaultSchedule.id,\n          timetableDressCodeId: selectedDressCode.id,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${siteId}/lists/${timetablesListId}/items?expand=fields`,\n        'POST',\n        JSON.stringify(data),\n      ); // TO DO fix site id\n      if (result.ok) {\n        setCreateTimetableLoadingState(loadingStateEnum.success);\n      } else {\n        setCreateTimetableLoadingState(loadingStateEnum.failed);\n      }\n    }\n  }\n\n  async function getDressCodes() {\n    const result = await getDressCodeData();\n    setDressCodeState(result.result);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setDressCodes(result.data);\n    }\n  }\n\n  useEffect(() => {\n    getDressCodes();\n  }, []);\n  return (\n    <View\n      style={{\n        height,\n        width,\n        overflow: 'scroll',\n        backgroundColor: Colors.white,\n      }}\n    >\n      <Link to=\"/profile/government/calendar/timetable/\">\n        <Text>Back</Text>\n      </Link>\n      <Text>Create Timetable</Text>\n      <View style={{ backgroundColor: '#FF6700', borderRadius: 15, margin: 5 }}>\n        <View style={{ margin: 10 }}>\n          <Text>\n            Warning: because of the way that timetables work some properties\n            cannot be edited.\n          </Text>\n          <Text>The dress code you pick cannot change</Text>\n          <Text>\n            Schedules can be added but they have to have the same number of\n            periods\n          </Text>\n          <Text>\n            The number of days in a schedule cannot go up or down only the order\n            and the name can be changed\n          </Text>\n        </View>\n      </View>\n      <View>\n        <TextInput\n          value={timetableName}\n          onChangeText={e => {\n            setTimetableName(e);\n          }}\n          placeholder=\"Timetable Name\"\n        />\n      </View>\n      <ScheduleBlock\n        selectedSchedules={selectedSchedules}\n        setSelectedSchedules={setSelectedSchedules}\n        selectedDefaultSchedule={selectedDefaultSchedule}\n        setSelectedDefaultSchedule={setSelectedDefaultSchedule}\n      />\n      <SchoolDays\n        height={height}\n        schoolDays={schoolDays}\n        setSchoolDays={setSchoolDays}\n      />\n      <Text>Dress Codes</Text>\n      <View>\n        {dressCodeState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : (\n          <View>\n            {dressCodeState === loadingStateEnum.success ? (\n              <View>\n                {dressCodes.map(dressCode => (\n                  <ListItem\n                    title={dressCode.name}\n                    width={width * 0.8}\n                    onPress={() => {\n                      setSelectedDressCode(dressCode);\n                    }}\n                    style={{\n                      backgroundColor:\n                        selectedDressCode?.id === dressCode.id\n                          ? 'blue'\n                          : Colors.white,\n                    }}\n                  />\n                ))}\n              </View>\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </View>\n        )}\n      </View>\n      <Button\n        title={\n          createTimetableLoadingState === loadingStateEnum.notStarted\n            ? 'Create Timetable'\n            : createTimetableLoadingState === loadingStateEnum.loading\n            ? 'Loading'\n            : createTimetableLoadingState === loadingStateEnum.success\n            ? 'Success'\n            : 'Failed'\n        }\n        onPress={() => {\n          if (createTimetableLoadingState === loadingStateEnum.notStarted) {\n            createTimetable();\n          }\n        }}\n      />\n    </View>\n  );\n}\n\nfunction SchoolDays({\n  height,\n  schoolDays,\n  setSchoolDays,\n}: {\n  height: number;\n  schoolDays: schoolDayType[];\n  setSchoolDays: (item: schoolDayType[]) => void;\n}) {\n  return (\n    <View>\n      <Text>School Days</Text>\n      <ScrollView style={{ height: height * 0.2 }}>\n        {schoolDays.map((item, index) => (\n          <SchoolDayItem\n            item={item}\n            index={index}\n            schoolDays={schoolDays}\n            setSchoolDays={setSchoolDays}\n          />\n        ))}\n      </ScrollView>\n      <Button\n        title=\"Add\"\n        onPress={() => {\n          setSchoolDays([\n            ...schoolDays,\n            {\n              name: '',\n              shorthand: '',\n              id: createUUID(),\n              order:\n                schoolDays.length === 0\n                  ? 0\n                  : schoolDays[schoolDays.length - 1].order + 1,\n            },\n          ]);\n        }}\n      />\n    </View>\n  );\n}\n\nfunction SchoolDayItem({\n  item,\n  index,\n  schoolDays,\n  setSchoolDays,\n}: {\n  item: schoolDayType;\n  index: number;\n  schoolDays: schoolDayType[];\n  setSchoolDays: (item: schoolDayType[]) => void;\n}) {\n  const [selected, setSelected] = useState<boolean>(false);\n  return (\n    <Pressable\n      style={{ flexDirection: 'row' }}\n      onHoverIn={() => {\n        setSelected(true);\n      }}\n      onHoverOut={() => {\n        setSelected(false);\n      }}\n    >\n      <View style={{ margin: 10, flexDirection: 'row' }}>\n        <View style={{ marginRight: 'auto' }}>\n          <View style={{ flexDirection: 'row' }}>\n            {item.name === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>Name: </Text>\n            {selected ? (\n              <TextInput\n                value={item.name}\n                onChangeText={e => {\n                  const newSchoolDays = schoolDays;\n                  newSchoolDays[index].name = e;\n                  setSchoolDays([...newSchoolDays]);\n                }}\n              />\n            ) : (\n              <Text>{item.name}</Text>\n            )}\n          </View>\n          <View style={{ flexDirection: 'row' }}>\n            {item.shorthand === '' ? (\n              <WarningIcon width={14} height={14} outlineColor=\"red\" />\n            ) : null}\n            <Text>Shorthand: </Text>\n            {selected ? (\n              <TextInput\n                maxLength={1}\n                value={item.shorthand}\n                onChangeText={e => {\n                  const newSchoolDays = schoolDays;\n                  newSchoolDays[index].shorthand = e;\n                  setSchoolDays([...newSchoolDays]);\n                }}\n              />\n            ) : (\n              <Text>{item.shorthand}</Text>\n            )}\n          </View>\n        </View>\n        <View>\n          {item.order !== 0 ? (\n            <Pressable\n              onPress={() => {\n                const newSchoolDays = schoolDays;\n                newSchoolDays[index].order = newSchoolDays[index].order - 1;\n                newSchoolDays[index - 1].order =\n                  newSchoolDays[index - 1].order + 1;\n                const saveCurrent = newSchoolDays[index];\n                newSchoolDays[index] = newSchoolDays[index - 1];\n                newSchoolDays[index - 1] = saveCurrent;\n                setSchoolDays([...newSchoolDays]);\n              }}\n            >\n              <UpIcon width={10} height={10} />\n            </Pressable>\n          ) : null}\n          {item.order + 1 < schoolDays.length ? (\n            <Pressable\n              onPress={() => {\n                const newSchoolDays = schoolDays;\n                newSchoolDays[index].order = newSchoolDays[index].order + 1;\n                newSchoolDays[index + 1].order =\n                  newSchoolDays[index + 1].order - 1;\n                const saveCurrent = newSchoolDays[index];\n                newSchoolDays[index] = newSchoolDays[index + 1];\n                newSchoolDays[index + 1] = saveCurrent;\n                setSchoolDays([...newSchoolDays]);\n              }}\n            >\n              <DownIcon width={10} height={10} />\n            </Pressable>\n          ) : null}\n          <Pressable\n            onPress={() => {\n              const newSchoolDays = schoolDays;\n              newSchoolDays.splice(index, 1);\n              setSchoolDays([...newSchoolDays]);\n            }}\n          >\n            <Text>X</Text>\n          </Pressable>\n        </View>\n      </View>\n    </Pressable>\n  );\n}\n\nfunction ScheduleBlock({\n  selectedSchedules,\n  setSelectedSchedules,\n  selectedDefaultSchedule,\n  setSelectedDefaultSchedule,\n}: {\n  selectedSchedules: scheduleType[];\n  setSelectedSchedules: (item: scheduleType[]) => void;\n  selectedDefaultSchedule: scheduleType | undefined;\n  setSelectedDefaultSchedule: (item: scheduleType) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [loadedSchedules, setLoadedSchedules] = useState<scheduleType[]>([]);\n  const [scheduleState, setScheduleState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  async function loadSchedules() {\n    const result = await getSchedules();\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setLoadedSchedules(result.data);\n    }\n    setScheduleState(result.result);\n  }\n  useEffect(() => {\n    loadSchedules();\n  }, []);\n  return (\n    <View>\n      <Text>Scheduals</Text>\n      <Text>Selected Schedules</Text>\n      <ScrollView style={{ height: height * 0.4 }}>\n        {selectedSchedules.map(item => (\n          <View\n            style={{ height: height * 0.03 + 16 }}\n            key={`SelectedSchedule_${item.id}`}\n          >\n            <Text>{item.properName}</Text>\n            {selectedDefaultSchedule?.id !== item.id ? (\n              <Pressable\n                onPress={() => {\n                  setSelectedDefaultSchedule(item);\n                }}\n                style={{ backgroundColor: 'blue', height: 16 }}\n              >\n                <Text>Select As Default</Text>\n              </Pressable>\n            ) : null}\n          </View>\n        ))}\n      </ScrollView>\n      <View style={{ alignItems: 'center' }}>\n        <Text>Other Schedules</Text>\n      </View>\n      <ScrollView style={{ height: height * 0.4 }}>\n        {scheduleState === loadingStateEnum.loading ? (\n          <Text>Loading</Text>\n        ) : null}\n        {scheduleState === loadingStateEnum.failed ? <Text>Failed</Text> : null}\n        {scheduleState === loadingStateEnum.success ? (\n          <>\n            {loadedSchedules.map((item, index) => (\n              <>\n                {selectedSchedules.length <= 0 ? (\n                  <Pressable\n                    key={`Timetable_${item.id}_${createUUID()}`}\n                    onPress={() => {\n                      setSelectedSchedules([...selectedSchedules, item]);\n                      const newLoadedSchedules = loadedSchedules.filter(e => {\n                        return e.id !== item.id;\n                      });\n                      setLoadedSchedules([...newLoadedSchedules]);\n                      if (selectedDefaultSchedule === undefined) {\n                        setSelectedDefaultSchedule(item);\n                      }\n                    }}\n                  >\n                    <Text>{item.properName}</Text>\n                  </Pressable>\n                ) : (\n                  <>\n                    {selectedSchedules[0].periods.length ===\n                    item.periods.length ? (\n                      <Pressable\n                        key={`Timetable_${item.id}_${createUUID()}`}\n                        onPress={() => {\n                          setSelectedSchedules([...selectedSchedules, item]);\n                          const newLoadedSchedules = loadedSchedules.filter(\n                            e => {\n                              return e.id !== item.id;\n                            },\n                          );\n                          setLoadedSchedules([...newLoadedSchedules]);\n                          if (selectedDefaultSchedule === undefined) {\n                            setSelectedDefaultSchedule(item);\n                          }\n                        }}\n                      >\n                        <Text>{item.properName}</Text>\n                      </Pressable>\n                    ) : null}\n                  </>\n                )}\n              </>\n            ))}\n          </>\n        ) : null}\n      </ScrollView>\n    </View>\n  );\n}\n","import { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { useMsal } from '@azure/msal-react';\nimport {\n  revokeAsync,\n  DiscoveryDocument,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport React from 'react';\nimport { Text, Platform, Pressable } from 'react-native';\nimport store from '../../Redux/store';\nimport { authenticationTokenSlice } from '../../Redux/reducers/authenticationTokenReducer';\nimport { tenantId } from '../../PaulyConfig';\nimport { Colors } from '../../types';\n\nexport default function ProfileBlock() {\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => signOut()}\n      style={{\n        position: 'absolute',\n        bottom: 0,\n        left: 0,\n        backgroundColor: Colors.white,\n        shadowColor: 'black',\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        margin: 5,\n        borderRadius: 15,\n      }}\n    >\n      <Text numberOfLines={1} style={{ fontSize: 20, margin: 10 }}>\n        Sign Out\n      </Text>\n    </Pressable>\n  );\n}\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n","import { loadingStateEnum } from '../types';\nimport { studentSearchSlice } from '../Redux/reducers/studentSearchReducer';\nimport store from '../Redux/store';\nimport largeBatch from './ultility/batchRequest';\nimport callMsGraph from './ultility/microsoftAssets';\nimport { domainName } from '../PaulyConfig';\n\nfunction checkIfStudent(role: string): {\n  result: boolean;\n  grade?: '9' | '10' | '11' | '12';\n} {\n  if (role.length >= 20) {\n    const reversed = role.split('').reverse().join('');\n    const slice = reversed.slice(0, domainName.length);\n    if (slice === domainName.split('').reverse().join('')) {\n      const getMonth = new Date().getMonth();\n      let schoolYear = new Date().getFullYear();\n      if (schoolYear.toString().length >= 4) {\n        if (getMonth > 6) {\n          schoolYear += 1;\n        }\n        const reverseYearTwelve = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearEleven = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearTen = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        schoolYear += 1;\n        const reverseYearNine = schoolYear\n          .toString()\n          .slice(2, 4)\n          .split('')\n          .reverse()\n          .join('');\n        if (reversed.slice(16, 17) === reverseYearTwelve) {\n          return { result: true, grade: '12' };\n        }\n        if (reversed.slice(16, 17) === reverseYearEleven) {\n          return { result: true, grade: '11' };\n        }\n        if (reversed.slice(16, 17) === reverseYearTen) {\n          return { result: true, grade: '10' };\n        }\n        if (reversed.slice(16, 17) === reverseYearNine) {\n          return { result: true, grade: '9' };\n        }\n        return { result: false };\n      }\n      return { result: false };\n    }\n    return { result: false };\n  }\n  return { result: false };\n}\n\nexport async function getUsers(url?: string, search?: string) {\n  const filter = search ? `&$search=\"displayName:${search}\"` : '';\n\n  const result = await callMsGraph(\n    url ||\n      `https://graph.microsoft.com/v1.0/users?$select=displayName,id,mail${filter}`,\n    'GET',\n    undefined,\n    search ? [{ key: 'ConsistencyLevel', value: 'eventual' }] : undefined,\n  );\n  if (result.ok) {\n    // Getting user Ids from result\n    const data = await result.json();\n    const userIds: string[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      userIds.push(data.value[index].id);\n    }\n\n    // Getting selected user images from student files list in a batch request.\n    const batchResult = await largeBatch(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/lists/${\n        store.getState().paulyList.studentFilesListId\n      }/items?$expand=fields&$filter=fields/userId%20eq%20'`,\n      secondUrl: \"'%20and%20fields/selected%20eq%20true\",\n      method: 'GET',\n      keys: { array: userIds },\n    });\n    const imagesIdsMap = new Map<string, string>(); // Key is userId, value is image data id\n    const imageIdsArray: string[] = [];\n    if (\n      batchResult.result === loadingStateEnum.success &&\n      batchResult.data !== undefined\n    ) {\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResult.data.length;\n        batchIndex += 1\n      ) {\n        if (batchResult.data[batchIndex].status === 200) {\n          // TO DO OK\n          if (batchResult.data[batchIndex].body.value.length === 1) {\n            // Checking to make suare only one item is selected\n            imagesIdsMap.set(\n              batchResult.data[batchIndex].body.value[0].fields.userId,\n              batchResult.data[batchIndex].body.value[0].fields.itemId,\n            );\n            imageIdsArray.push(\n              batchResult.data[batchIndex].body.value[0].fields.itemId,\n            );\n          }\n        } else {\n          // Batch Response Failed\n          store.dispatch(\n            studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n          );\n          return;\n        }\n      }\n    } else {\n      // Batch Failed\n      store.dispatch(\n        studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n      );\n      return;\n    }\n\n    // Getting downloadUrls for images\n    const batchResultDownloadUrls = await largeBatch(undefined, {\n      firstUrl: `/sites/${store.getState().paulyList.siteId}/drive/items/`,\n      secondUrl: '?$expand=thumbnails($select=c300x400_crop)&$select=id', // ?select=id,content.downloadUrl\n      method: 'GET',\n      keys: { array: imageIdsArray },\n    });\n    const imagesDownloadUrls = new Map<string, string>(); // Key is the item id on the sharepoint and value is the downlad url\n    if (\n      batchResultDownloadUrls.result === loadingStateEnum.success &&\n      batchResultDownloadUrls.data !== undefined\n    ) {\n      for (\n        let batchIndex = 0;\n        batchIndex < batchResultDownloadUrls.data.length;\n        batchIndex += 1\n      ) {\n        if (batchResultDownloadUrls.data[batchIndex].status === 200) {\n          // TO DO OK\n          imagesDownloadUrls.set(\n            batchResultDownloadUrls.data[batchIndex].body.id,\n            batchResultDownloadUrls.data[batchIndex].body.thumbnails[0]\n              .c300x400_crop.url,\n          );\n        } else {\n          // Get Image failed\n          store.dispatch(\n            studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n          );\n          return;\n        }\n      }\n    } else {\n      // Getting images batch failed\n      store.dispatch(\n        studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n      );\n      return;\n    }\n\n    const outputUsers: schoolUserType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      const imageId = imagesIdsMap.get(data.value[index].id);\n      if (imageId !== undefined) {\n        const imageDownloadUrl = imagesDownloadUrls.get(imageId);\n        if (imageDownloadUrl !== undefined) {\n          outputUsers.push({\n            name: data.value[index].displayName,\n            id: data.value[index].id,\n            mail: data.value[index].mail,\n            role: data.value[index].mail,\n            grade: checkIfStudent(data.value[index].mail).grade,\n            student: checkIfStudent(data.value[index].mail).result,\n            imageDownloadUrl,\n            imageState: loadingStateEnum.notStarted,\n          });\n        } else {\n          outputUsers.push({\n            name: data.value[index].displayName,\n            id: data.value[index].id,\n            mail: data.value[index].mail,\n            role: data.value[index].mail,\n            grade: checkIfStudent(data.value[index].mail).grade,\n            student: checkIfStudent(data.value[index].mail).result,\n            imageDownloadUrl: 'noImage',\n            imageState: loadingStateEnum.cannotStart,\n          });\n        }\n      } else {\n        outputUsers.push({\n          name: data.value[index].displayName,\n          id: data.value[index].id,\n          mail: data.value[index].mail,\n          role: data.value[index].mail,\n          grade: checkIfStudent(data.value[index].mail).grade,\n          student: checkIfStudent(data.value[index].mail).result,\n          imageDownloadUrl: 'noImage',\n          imageState: loadingStateEnum.cannotStart,\n        });\n      }\n    }\n    store.dispatch(studentSearchSlice.actions.setStudentUsers(outputUsers));\n    store.dispatch(\n      studentSearchSlice.actions.setNextLink(data['@odata.nextLink']),\n    );\n    store.dispatch(\n      studentSearchSlice.actions.setUsersState(loadingStateEnum.success),\n    );\n  } else {\n    // Getting users failed\n    store.dispatch(\n      studentSearchSlice.actions.setUsersState(loadingStateEnum.failed),\n    );\n  }\n}\n\nexport async function getStudentData(\n  userId: string,\n): Promise<{ result: loadingStateEnum; data?: studentInformationType[] }> {\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items?$expand=fields&$filter=fields/userId%20eq%20'${userId}'`,\n  );\n  if (result.ok) {\n    const data = await result.json();\n    const resultData: studentInformationType[] = [];\n    for (let index = 0; index < data.value.length; index += 1) {\n      resultData.push({\n        listId: data.value[index].fields.id,\n        driveId: data.value[index].fields.itemId,\n        selected: data.value[index].fields.selected,\n        createdTime: data.value[index].fields.createdTime,\n      });\n    }\n    return { result: loadingStateEnum.success, data: resultData };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function changeStudentSelection(\n  listItemId: string,\n  selectedFileListId: string,\n  fileData: studentInformationType[],\n  fileIndex: number,\n): Promise<{ result: loadingStateEnum; fileData?: studentInformationType[] }> {\n  if (selectedFileListId !== '') {\n    const unselectedIndex = fileData.findIndex(e => {\n      return e.listId === selectedFileListId;\n    });\n    if (unselectedIndex !== -1) {\n      const newFileData = fileData;\n      newFileData[fileIndex].selected = false;\n      const unselectListData = {\n        fields: {\n          selected: false,\n        },\n      };\n      const result = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/lists/${\n          store.getState().paulyList.studentFilesListId\n        }/items/${selectedFileListId}`,\n        'PATCH',\n        JSON.stringify(unselectListData),\n      );\n      if (result.ok) {\n        const selectListData = {\n          fields: {\n            selected: true,\n          },\n        };\n        const secondResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${\n            store.getState().paulyList.siteId\n          }/lists/${\n            store.getState().paulyList.studentFilesListId\n          }/items/${listItemId}`,\n          'PATCH',\n          JSON.stringify(selectListData),\n        );\n        if (secondResult.ok) {\n          newFileData[fileIndex].selected = true;\n          return { result: loadingStateEnum.success, fileData: newFileData };\n        }\n        return { result: loadingStateEnum.failed };\n      }\n      return { result: loadingStateEnum.failed, fileData: [...newFileData] };\n    }\n    return { result: loadingStateEnum.failed };\n  }\n  const selectListData = {\n    fields: {\n      selected: true,\n    },\n  };\n  const secondResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items/${listItemId}`,\n    'PATCH',\n    JSON.stringify(selectListData),\n  );\n  if (secondResult.ok) {\n    const newFileData = fileData;\n    newFileData[fileIndex].selected = true;\n    return { result: loadingStateEnum.success, fileData: [...newFileData] };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\nexport async function removeStudentSelection(\n  listItemId: string,\n  fileIndex: number,\n  fileData: studentInformationType[],\n): Promise<{ result: loadingStateEnum; fileData?: studentInformationType[] }> {\n  const selectListData = {\n    fields: {\n      selected: false,\n    },\n  };\n  const result = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/lists/${\n      store.getState().paulyList.studentFilesListId\n    }/items/${listItemId}`,\n    'PATCH',\n    JSON.stringify(selectListData),\n  );\n  if (result.ok) {\n    const newFileData = fileData;\n    newFileData[fileIndex].selected = false;\n    return { result: loadingStateEnum.success, fileData: [...newFileData] };\n  }\n  return { result: loadingStateEnum.failed };\n}\n\n// This is the number of blocks in a row in the student page.\nexport function getNumberOfBlocks(width: number) {\n  return Math.floor(width / 190) !== 0\n    ? Math.floor(width % 190 >= 0.75 ? width / 190 : (width + 190) / 190)\n    : 1;\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  TextInput,\n  ViewStyle,\n  Platform,\n  ListRenderItemInfo,\n  Image,\n} from 'react-native';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { FlatList } from 'react-native-gesture-handler';\nimport { useNavigate } from 'react-router-native';\nimport { useFonts } from 'expo-font';\nimport * as SplashScreen from 'expo-splash-screen';\nimport { Colors, loadingStateEnum } from '../types';\nimport store, { RootState } from '../Redux/store';\nimport ProgressView from '../UI/ProgressView';\nimport { PersonIcon, SearchIcon } from '../UI/Icons/Icons';\nimport { studentSearchSlice } from '../Redux/reducers/studentSearchReducer';\nimport BackButton from '../UI/BackButton';\nimport { getNumberOfBlocks, getUsers } from '../Functions/studentFunctions';\nimport callMsGraph from '../Functions/ultility/microsoftAssets';\nimport { safeAreaColorsSlice } from '../Redux/reducers/safeAreaColorsReducer';\nimport createUUID from '../Functions/ultility/createUUID';\n\nexport default function Students() {\n  const { height, width, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { usersState, users, nextLink } = useSelector(\n    (state: RootState) => state.studentSearch,\n  );\n\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  async function loadUsers() {\n    getUsers();\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  useEffect(() => {\n    dispatch(\n      safeAreaColorsSlice.actions.setSafeAreaColors({\n        top: Colors.darkGray,\n        bottom: currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n      }),\n    );\n  }, []);\n\n  const [fontsLoaded] = useFonts({\n    BukhariScript: require('../../assets/fonts/BukhariScript.ttf'),\n  });\n\n  useCallback(async () => {\n    if (fontsLoaded) {\n      await SplashScreen.hideAsync();\n    }\n  }, [fontsLoaded]);\n\n  if (!fontsLoaded) {\n    return null;\n  }\n\n  return (\n    <>\n      {usersState === loadingStateEnum.loading ? (\n        <View\n          style={{\n            width,\n            height,\n            backgroundColor:\n              currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n            alignContent: 'center',\n            alignItems: 'center',\n            justifyContent: 'center',\n          }}\n        >\n          <ProgressView width={14} height={14} />\n          <Text>Loading</Text>\n        </View>\n      ) : (\n        <>\n          {usersState === loadingStateEnum.success ? (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor:\n                  currentBreakPoint === 0 ? Colors.maroon : Colors.white,\n              }}\n            >\n              <View\n                style={{\n                  height: height * 0.15,\n                  width,\n                  alignContent: 'center',\n                  alignItems: 'center',\n                  justifyContent: 'center',\n                  backgroundColor: Colors.darkGray,\n                }}\n              >\n                <BackButton to=\"/profile\" />\n                <Text\n                  style={{ fontFamily: 'BukhariScript', color: Colors.white }}\n                >\n                  Students\n                </Text>\n              </View>\n              <SearchBox\n                getUsers={e => {\n                  if (e !== '') {\n                    getUsers(undefined, e);\n                    dispatch(studentSearchSlice.actions.setNextLink(undefined));\n                  } else {\n                    getUsers();\n                  }\n                }}\n              />\n              <FlatList\n                key={`Students_${createUUID()}`}\n                data={users}\n                renderItem={user => <StudentBlock user={user} />}\n                keyExtractor={item => item.id}\n                numColumns={getNumberOfBlocks(width)}\n                onEndReached={() => {\n                  if (nextLink !== undefined) {\n                    getUsers(nextLink);\n                  }\n                }}\n                style={{ height: height * 0.825 }}\n              />\n            </View>\n          ) : (\n            <View\n              style={{\n                width,\n                height,\n                backgroundColor:\n                  currentBreakPoint === 0 ? Colors.maroon : '#FFFFFF',\n              }}\n            >\n              <Pressable\n                onPress={() => {\n                  navigate('/');\n                }}\n              >\n                <Text>Back</Text>\n              </Pressable>\n              <Text>Something went wrong</Text>\n            </View>\n          )}\n        </>\n      )}\n    </>\n  );\n}\n\nfunction StudentBlock({ user }: { user: ListRenderItemInfo<schoolUserType> }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  async function getImage() {\n    const newUser: any = {};\n    Object.assign(newUser, user.item);\n    if (\n      user.item.imageDownloadUrl !== 'noImage' &&\n      user.item.imageState !== loadingStateEnum.success &&\n      user.item.imageState !== loadingStateEnum.failed &&\n      user.item.imageState !== loadingStateEnum.loading\n    ) {\n      const updateStateUser: any = {};\n      Object.assign(updateStateUser, user.item);\n      updateStateUser.imageState = loadingStateEnum.loading;\n      store.dispatch(\n        studentSearchSlice.actions.setStudentUserByIndex({\n          index: user.index,\n          user: updateStateUser,\n        }),\n      );\n      const result = await callMsGraph(user.item.imageDownloadUrl);\n      if (result.ok) {\n        const data = await result.blob();\n        const urlOut = URL.createObjectURL(data);\n        newUser.imageState = loadingStateEnum.success;\n        newUser.imageDataUrl = urlOut;\n        store.dispatch(\n          studentSearchSlice.actions.setStudentUserByIndex({\n            index: user.index,\n            user: newUser,\n          }),\n        );\n      } else {\n        newUser.imageState = loadingStateEnum.failed;\n        store.dispatch(\n          studentSearchSlice.actions.setStudentUserByIndex({\n            index: user.index,\n            user: newUser,\n          }),\n        );\n      }\n    }\n  }\n\n  useEffect(() => {\n    getImage();\n  }, []);\n\n  function calculateMarginEnds(widthIn: number, side: 'L' | 'R'): number {\n    const numberOfBlocks = getNumberOfBlocks(width);\n    if (user.index % numberOfBlocks === 0) {\n      const widthRemaining = widthIn - (numberOfBlocks - 1) * 190 - 150;\n      if (widthRemaining / 2 >= 120 || side === 'R') {\n        return 20;\n      }\n      return widthRemaining / 2;\n    }\n    if ((user.index + 1) % numberOfBlocks === 0) {\n      const widthRemaining = widthIn - (numberOfBlocks - 1) * 190 - 150;\n      if (widthRemaining / 2 >= 120 || side === 'L') {\n        return 20;\n      }\n      return widthRemaining / 2;\n    }\n    return 20;\n  }\n\n  return (\n    <View\n      key={`StudentBlock_${user.item.id}`}\n      style={{\n        height: 175,\n        width: 150,\n        marginTop: user.index <= getNumberOfBlocks(width) ? height * 0.04 : 25,\n        marginBottom: 25,\n        marginLeft: calculateMarginEnds(width, 'L'),\n        marginRight: calculateMarginEnds(width, 'R'),\n        backgroundColor: Colors.white,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        borderRadius: 15,\n      }}\n    >\n      <View\n        style={{\n          height: 150,\n          width: 150,\n          alignContent: 'center',\n          alignItems: 'center',\n          justifyContent: 'center',\n        }}\n      >\n        {user.item.imageState === loadingStateEnum.loading ? (\n          <>\n            <ProgressView width={14} height={14} />\n            <Text>Loading</Text>\n          </>\n        ) : (\n          <>\n            {user.item.imageState === loadingStateEnum.success &&\n            user.item.imageDataUrl !== undefined ? (\n              <Image\n                source={{ uri: user.item.imageDataUrl }}\n                style={{ width: 150, height: 150, borderRadius: 5 }}\n              />\n            ) : (\n              <PersonIcon width={150} height={150} />\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ flexDirection: 'row', height: 14 }}>\n        <Text style={{ marginLeft: 5, marginTop: 2 }}>{user.item.name}</Text>\n        {user.item.student ? <Text>{user.item.grade}</Text> : null}\n      </View>\n    </View>\n  );\n}\n\nfunction SearchBox({ getUsers }: { getUsers: (item: string) => void }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { searchText } = useSelector((state: RootState) => state.studentSearch);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const style: ViewStyle =\n    Platform.OS === 'web' ? { outlineStyle: 'none' } : {};\n  const [mounted, setMounted] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (mounted) {\n      const searchValueSave = searchText;\n      setTimeout(() => {\n        if (store.getState().studentSearch.searchText === searchValueSave) {\n          getUsers(store.getState().studentSearch.searchText);\n        }\n      }, 1500);\n    } else {\n      setMounted(true);\n    }\n  }, [searchText]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.15 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: Colors.black,\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchText}\n            onChangeText={e => {\n              dispatch(studentSearchSlice.actions.setStudentSearch(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchText}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n","import store from '../Redux/store';\nimport { loadingStateEnum } from '../types';\nimport callMsGraph from './ultility/microsoftAssets';\n\n// https://stackoverflow.com/questions/3583724/how-do-i-add-a-delay-in-a-javascript-loop\nconst timer = (ms: number | undefined) =>\n  new Promise(res => setTimeout(res, ms));\n\nexport default async function addImage(\n  userId: string,\n  selectedFile: microsoftFileType,\n): Promise<loadingStateEnum> {\n  // Get Site Root Dirve\n  // b!SovCQ5jf4Ui7t--wIofkuw46Zg0l6rlIr721G-0tZtCdr1HAMwtmTJEU9ay20bf2\n  const siteResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/sites/${\n      store.getState().paulyList.siteId\n    }/drive/root`,\n  );\n  if (siteResult.ok) {\n    const siteData = await siteResult.json();\n    const copyPayload = {\n      parentReference: {\n        driveId: siteData.parentReference.driveId,\n        id: siteData.id,\n      },\n    };\n    const copyResult = await callMsGraph(\n      `${selectedFile.callPath}/copy?@microsoft.graph.conflictBehavior=rename`,\n      'POST',\n      JSON.stringify(copyPayload),\n    );\n    if (copyResult.ok) {\n      const copyData = await copyResult.headers.get('Location');\n\n      let notComplete = true;\n      let resourceId = '';\n\n      while (notComplete) {\n        if (copyData !== null) {\n          const copyFetch = await fetch(copyData);\n          if (copyFetch.ok) {\n            const copyFetchData = await copyFetch.json();\n            if (copyFetchData.status === 'completed') {\n              resourceId = copyFetchData.resourceId;\n              notComplete = false;\n              break;\n            }\n          } else {\n            return loadingStateEnum.failed;\n          }\n        } else {\n          return loadingStateEnum.failed;\n        }\n        await timer(3000);\n      }\n\n      const getItemResult = await callMsGraph(\n        `https://graph.microsoft.com/v1.0/sites/${\n          store.getState().paulyList.siteId\n        }/drive/items/${resourceId}`,\n      );\n      if (getItemResult.ok) {\n        const getItemData = await getItemResult.json();\n        const studentData = {\n          fields: {\n            createdTime: new Date().toISOString(),\n            itemId: getItemData.id,\n            userId,\n            selected: false,\n          },\n        };\n        const studentListResult = await callMsGraph(\n          `https://graph.microsoft.com/v1.0/sites/${\n            store.getState().paulyList.siteId\n          }/lists/${store.getState().paulyList.studentFilesListId}/items`,\n          'POST',\n          JSON.stringify(studentData),\n        );\n        if (studentListResult.ok) {\n          return loadingStateEnum.success;\n        }\n        const data = await studentListResult.json();\n        return loadingStateEnum.failed;\n      }\n      return loadingStateEnum.failed;\n    }\n    return loadingStateEnum.failed;\n  }\n  return loadingStateEnum.failed;\n\n  // let userExtensionData: any = {}\n  // userExtensionData[store.getState().paulyList.userExtensionId] = {\n  //   \"imageId\":\"\"\n  // }\n  // const data = {\n  //   \"requests\": [\n  //     {\n  //       \"id\":\"1\",\n  //       \"method\":\"POST\",\n  //       \"url\":`/sites/${store.getState().paulyList.siteId}/lists/${store.getState().paulyList.studentFilesListId}/items`,\n  //       \"body\":JSON.stringify({\n  //         \"fields\": {\n  //           \"createdTime\":new Date().toISOString(),\n  //           \"\":\"\"\n  //         }\n  //       }),\n  //       \"headers\":{\n  //         \"Content-Type\": \"application/json\"\n  //       }\n  //     },\n  //     {\n  //       \"id\":\"2\",\n  //       \"method\":\"POST\",\n  //       \"url\":`/sites/${store.getState().paulyList.siteId}/drive/root`,\n  //       \"dependsOn\":[\"1\"],\n  //       \"body\":\"\",\n  //       \"headers\":{\n  //         \"Content-Type\": \"application/json\"\n  //       }\n  //     }\n  //   ]\n  // }\n  // const result = await callMsGraph(\"https://graph.microsoft.com/v1.0/$batch\", \"POST\", undefined, JSON.stringify(data))\n  // if (result.ok) {\n  //   const data = await result.json()\n  // } else {\n\n  // }\n  // {\n  //   \"id\":\"3\",\n  //   \"method\":\"PATCH\",\n  //   \"url\":`/users/${userId}`,\n  //   \"headers\":{\n  //     \"Content-Type\": \"application/json\"\n  //   },\n  //   \"dependsOn\":[\"1\",\"2\"],\n  //   \"body\":JSON.stringify({}),\n  // }\n}\n","import {\n  View,\n  Text,\n  Pressable,\n  ViewStyle,\n  Platform,\n  TextInput,\n  Modal,\n  FlatList,\n  ListRenderItemInfo,\n} from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport BackButton from '../../../UI/BackButton';\nimport MicrosoftFilePicker from '../../../UI/MicrosoftFilePicker';\nimport store, { RootState } from '../../../Redux/store';\nimport {\n  changeStudentSelection,\n  getStudentData,\n  getUsers,\n  removeStudentSelection,\n} from '../../../Functions/studentFunctions';\nimport { CloseIcon, SearchIcon } from '../../../UI/Icons/Icons';\nimport { studentSearchSlice } from '../../../Redux/reducers/studentSearchReducer';\nimport { Colors, loadingStateEnum } from '../../../types';\nimport ProgressView from '../../../UI/ProgressView';\nimport addImage from '../../../Functions/addImage';\nimport { getTextState } from '../../../Functions/ultility/createUUID';\n\nfunction SelectMainFile({\n  userId,\n  setFilePickingMode,\n}: {\n  userId: string;\n  setFilePickingMode: (item: filePickingModeEnum) => void;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [fileData, setFileData] = useState<studentInformationType[]>([]);\n  const [fileState, setFileState] = useState<loadingStateEnum>(\n    loadingStateEnum.loading,\n  );\n  const [selectedFileListId, setSelectedFileListId] = useState<string>('');\n\n  async function loadData() {\n    const result = await getStudentData(userId);\n    if (\n      result.result === loadingStateEnum.success &&\n      result.data !== undefined\n    ) {\n      setFileState(loadingStateEnum.success);\n      setFileData(result.data);\n      const selectedFileList = result.data.find(e => {\n        return e.selected;\n      });\n      if (selectedFileList !== undefined) {\n        setSelectedFileListId(selectedFileList.listId);\n      }\n    } else {\n      setFileState(loadingStateEnum.failed);\n    }\n  }\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        right: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.notStarted);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <View\n        style={{\n          height: height * 0.8,\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          backgroundColor: Colors.white,\n          borderRadius: 15,\n        }}\n      >\n        <View style={{ margin: 10 }}>\n          {fileState === loadingStateEnum.loading ? (\n            <View>\n              <Text>Loading</Text>\n            </View>\n          ) : (\n            <>\n              {fileState === loadingStateEnum.success ? (\n                <FlatList\n                  data={fileData}\n                  renderItem={file => (\n                    <StudentSelectFileBlock\n                      key={`${file.item.listId}_${file.item.createdTime}`}\n                      file={file}\n                      setFileData={setFileData}\n                      fileData={fileData}\n                      selectedFileListId={selectedFileListId}\n                      setSelectedFileListId={setSelectedFileListId}\n                    />\n                  )}\n                />\n              ) : (\n                <View>\n                  <Text>Failed</Text>\n                </View>\n              )}\n            </>\n          )}\n          <Pressable\n            onPress={() => setFilePickingMode(filePickingModeEnum.create)}\n          >\n            <Text>Create</Text>\n          </Pressable>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction StudentSelectFileBlock({\n  file,\n  selectedFileListId,\n  setSelectedFileListId,\n  fileData,\n  setFileData,\n}: {\n  file: ListRenderItemInfo<studentInformationType>;\n  setFileData: (item: studentInformationType[]) => void;\n  fileData: studentInformationType[];\n  selectedFileListId: string;\n  setSelectedFileListId: (item: string) => void;\n}) {\n  const [updateState, setUpdateState] = useState(loadingStateEnum.notStarted);\n\n  async function callRemoveSelection() {\n    setUpdateState(loadingStateEnum.loading);\n    const result = await removeStudentSelection(\n      file.item.listId,\n      file.index,\n      fileData,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.fileData !== undefined\n    ) {\n      setSelectedFileListId('');\n      setFileData(result.fileData);\n      setUpdateState(loadingStateEnum.success);\n    } else {\n      setUpdateState(loadingStateEnum.failed);\n    }\n  }\n\n  async function callChangeSelection() {\n    setUpdateState(loadingStateEnum.loading);\n    const result = await changeStudentSelection(\n      file.item.listId,\n      selectedFileListId,\n      fileData,\n      file.index,\n    );\n    if (\n      result.result === loadingStateEnum.success &&\n      result.fileData !== undefined\n    ) {\n      setUpdateState(loadingStateEnum.success);\n      setFileData(result.fileData);\n    } else {\n      setUpdateState(loadingStateEnum.failed);\n    }\n  }\n\n  return (\n    <Pressable\n      onPress={() => {\n        if (file.item.selected) {\n          callRemoveSelection();\n        } else {\n          callChangeSelection();\n        }\n      }}\n      style={{\n        backgroundColor: file.item.selected ? Colors.lightGray : Colors.white,\n        borderRadius: 15,\n        shadowColor: Colors.black,\n        shadowOffset: { width: 1, height: 1 },\n        shadowOpacity: 1,\n        shadowRadius: 5,\n        flexDirection: 'row',\n      }}\n    >\n      <>\n        {updateState === loadingStateEnum.loading ? (\n          <ProgressView width={14} height={14} />\n        ) : (\n          <View\n            style={{\n              width: 14,\n              height: 14,\n              backgroundColor:\n                updateState === loadingStateEnum.success ||\n                loadingStateEnum.notStarted\n                  ? 'green'\n                  : Colors.danger,\n              borderRadius: 7,\n            }}\n          />\n        )}\n      </>\n      <Text style={{ margin: 10 }}>\n        {new Date(file.item.createdTime).toLocaleDateString()}\n      </Text>\n    </Pressable>\n  );\n}\n\nexport default function GovernmentStudents() {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const { usersState, users } = useSelector(\n    (state: RootState) => state.studentSearch,\n  );\n\n  async function loadUsers() {\n    getUsers();\n  }\n\n  useEffect(() => {\n    loadUsers();\n  }, []);\n\n  return (\n    <View style={{ width, height, backgroundColor: Colors.white }}>\n      <View style={{ height: height * 0.1 }}>\n        <BackButton to=\"/profile/government/\" />\n        <Text style={{ marginTop: 14 }}>Government Students</Text>\n      </View>\n      <SearchBox\n        getUsers={() => {\n          loadUsers();\n        }}\n      />\n      <View style={{ width, height: height * 0.05 }} />\n      <View style={{ height: height * 0.75 }}>\n        {usersState === loadingStateEnum.loading ? (\n          <View\n            style={{\n              width,\n              height: height * 0.8,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n            }}\n          >\n            <ProgressView width={12} height={12} />\n            <Text>Loading</Text>\n          </View>\n        ) : (\n          <>\n            {usersState === loadingStateEnum.success ? (\n              <FlatList data={users} renderItem={e => <StudentItem e={e} />} />\n            ) : (\n              <Text>Failed</Text>\n            )}\n          </>\n        )}\n      </View>\n      <View style={{ flexDirection: 'row', height: height * 0.1 }}>\n        <Pressable>\n          <Text>Select Folder</Text>\n        </Pressable>\n        <Pressable>\n          <Text>Select Maping Keys</Text>\n        </Pressable>\n      </View>\n    </View>\n  );\n}\n\nenum filePickingModeEnum {\n  notStarted,\n  select,\n  create,\n}\n\nfunction StudentItem({ e }: { e: ListRenderItemInfo<schoolUserType> }) {\n  const { height, width } = useSelector((state: RootState) => state.dimentions);\n  const [filePickingMode, setFilePickingMode] = useState<filePickingModeEnum>(\n    filePickingModeEnum.notStarted,\n  );\n  return (\n    <View style={{ flexDirection: 'row', margin: 5 }}>\n      <Text>{e.item.name}</Text>\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.select);\n        }}\n        style={{marginLeft: 2}}\n      >\n        <Text style={{margin: 2}}>Choose File</Text>\n      </Pressable>\n      <Modal\n        visible={filePickingMode !== filePickingModeEnum.notStarted}\n        animationType=\"slide\"\n        transparent\n        style={{ width: width * 0.8 }}\n        onRequestClose={() =>\n          setFilePickingMode(filePickingModeEnum.notStarted)\n        }\n      >\n        <Pressable\n          onPress={() => setFilePickingMode(filePickingModeEnum.notStarted)}\n          style={{\n            position: 'absolute',\n            left: 0,\n            height,\n            zIndex: -1,\n            width,\n          }}\n        />\n        <>\n          {filePickingMode === filePickingModeEnum.create ? (\n            <StudentsSelectFile\n              setFilePickingMode={setFilePickingMode}\n              userId={e.item.id}\n            />\n          ) : (\n            <SelectMainFile\n              userId={e.item.id}\n              setFilePickingMode={setFilePickingMode}\n            />\n          )}\n        </>\n      </Modal>\n    </View>\n  );\n}\n\nfunction SearchBox({ getUsers }: { getUsers: (item: string) => void }) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const { searchText } = useSelector((state: RootState) => state.studentSearch);\n  const [isOverflowing, setIsOverflowing] = useState<boolean>(false);\n  const style: ViewStyle =\n    Platform.OS === 'web' ? { outlineStyle: 'none' } : {};\n  const [mounted, setMounted] = useState<boolean>(false);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    if (mounted) {\n      const searchValueSave = searchText;\n      setTimeout(() => {\n        if (store.getState().studentSearch.searchText === searchValueSave) {\n          getUsers(store.getState().studentSearch.searchText);\n        }\n      }, 1500);\n    } else {\n      setMounted(true);\n    }\n  }, [searchText]);\n\n  return (\n    <View\n      key=\"Search_View_Top\"\n      style={{\n        width,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position: 'absolute',\n        top: height * 0.1 - 19,\n        zIndex: 2,\n      }}\n    >\n      <View\n        key=\"Search_View_Mid\"\n        style={{\n          width: width * 0.8,\n          shadowColor: 'black',\n          shadowOffset: { width: 0, height: 1 },\n          shadowOpacity: 0.8,\n          shadowRadius: 10,\n          borderRadius: 25,\n          flexDirection: 'row',\n          backgroundColor: Colors.white,\n        }}\n      >\n        {isOverflowing ? null : (\n          <View\n            key=\"Search_View_Search_Icon\"\n            style={{\n              width: 20,\n              height: 40,\n              alignContent: 'center',\n              alignItems: 'center',\n              justifyContent: 'center',\n              marginLeft: 10,\n            }}\n          >\n            <SearchIcon key=\"Search_Icon\" width={15} height={15} />\n          </View>\n        )}\n        <View key=\"Search_View_Input\">\n          <TextInput\n            key=\"Search_TextInput\"\n            placeholder=\"Search\"\n            placeholderTextColor=\"black\"\n            value={searchText}\n            onChangeText={e => {\n              dispatch(studentSearchSlice.actions.setStudentSearch(e));\n            }}\n            style={[\n              {\n                width: isOverflowing ? width * 0.8 - 20 : width * 0.8 - 50,\n                height: 20,\n                margin: 10,\n                borderWidth: 0,\n              },\n              style,\n            ]}\n            enterKeyHint=\"search\"\n            inputMode=\"search\"\n          />\n          <View\n            style={{ height: 0, alignSelf: 'flex-start', overflow: 'hidden' }}\n            onLayout={e => {\n              if (e.nativeEvent.layout.width > width * 0.8 - 20) {\n                setIsOverflowing(true);\n              } else {\n                setIsOverflowing(false);\n              }\n            }}\n            key=\"Search_View_Text\"\n          >\n            <Text style={{ color: 'white' }}>{searchText}</Text>\n          </View>\n        </View>\n      </View>\n    </View>\n  );\n}\n\nfunction StudentsSelectFile({\n  setFilePickingMode,\n  userId,\n}: {\n  setFilePickingMode: (item: filePickingModeEnum) => void;\n  userId: string;\n}) {\n  const { width, height } = useSelector((state: RootState) => state.dimentions);\n  const [isReviewing, setIsReviewing] = useState<boolean>(false);\n  const [selectedFile, setSelectedFile] = useState<\n    microsoftFileType | undefined\n  >(undefined);\n  const [addImageState, setAddImageState] = useState<loadingStateEnum>(\n    loadingStateEnum.notStarted,\n  );\n\n  async function loadAddImage() {\n    if (selectedFile !== undefined) {\n      setAddImageState(loadingStateEnum.loading);\n      const result = await addImage(userId, selectedFile);\n      setAddImageState(result);\n    }\n  }\n\n  return (\n    <View\n      style={{\n        height,\n        width,\n        position: 'absolute',\n        zIndex: 200,\n        top: 0,\n        right: 0,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n        backgroundColor: Colors.lightGray,\n      }}\n    >\n      <Pressable\n        onPress={() => {\n          setFilePickingMode(filePickingModeEnum.select);\n        }}\n        style={{\n          position: 'absolute',\n          top: height * 0.05,\n          left: height * 0.05,\n        }}\n      >\n        <CloseIcon width={20} height={20} />\n      </Pressable>\n      <>\n        {!isReviewing ? (\n          <View\n            style={{\n              height: height * 0.8,\n              width: width * 0.8,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: Colors.white,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              <MicrosoftFilePicker\n                height={height * 0.8 - 5}\n                width={width * 0.8 - 5}\n                onSelectedFile={file => {\n                  setIsReviewing(true);\n                  setSelectedFile(file);\n                }}\n              />\n            </View>\n          </View>\n        ) : (\n          <View\n            style={{\n              height: height * 0.8,\n              width: width * 0.8,\n              shadowColor: 'black',\n              shadowOffset: { width: 0, height: 1 },\n              shadowOpacity: 0.8,\n              shadowRadius: 10,\n              backgroundColor: Colors.white,\n              borderRadius: 15,\n            }}\n          >\n            <View style={{ margin: 10 }}>\n              {selectedFile !== undefined ? (\n                <Pressable\n                  onPress={() => {\n                    loadAddImage();\n                  }}\n                >\n                  <Text>\n                    {getTextState(addImageState, { notStarted: 'Confirm' })}\n                  </Text>\n                </Pressable>\n              ) : null}\n            </View>\n          </View>\n        )}\n      </>\n    </View>\n  );\n}\n","import { View, Text, Platform, Pressable } from 'react-native';\nimport * as Network from 'expo-network';\nimport React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  DiscoveryDocument,\n  revokeAsync,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport { useMsal } from '@azure/msal-react';\nimport { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport { authenticationTokenSlice } from '../Redux/reducers/authenticationTokenReducer';\nimport store, { RootState } from '../Redux/store';\nimport ProgressView from '../UI/ProgressView';\nimport { Colors } from '../types';\nimport { tenantId } from '../PaulyConfig';\nimport { OfflineIcon } from '../UI/Icons/Icons';\n\nfunction signOutNative(discovery: DiscoveryDocument) {\n  revokeAsync({ token: store.getState().authenticationToken }, discovery);\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n}\n\nfunction signOutWeb(instance: IPublicClientApplication, account?: AccountInfo) {\n  store.dispatch(authenticationTokenSlice.actions.setAuthenticationToken(''));\n  instance.logoutPopup({\n    account,\n  });\n}\n\nexport default function LoadingView({\n  setOveride,\n  width,\n}: {\n  setOveride: (item: boolean) => void;\n  width: number;\n}) {\n  const isGovernmentMode = useSelector(\n    (state: RootState) => state.isGovernmentMode,\n  );\n  const { height } = useSelector((state: RootState) => state.dimentions);\n  const insets = useSafeAreaInsets();\n  const [isShowingLogout, setIsShowingLogout] = useState<boolean>(false);\n  const [isConnected, setIsConnected] = useState<boolean>(true);\n\n  const discovery = useAutoDiscovery(\n    `https://login.microsoftonline.com/${tenantId}/v2.0`,\n  );\n  const { instance } = useMsal();\n\n  function signOut() {\n    if (Platform.OS === 'web') {\n      const account = instance.getActiveAccount();\n      if (account !== null) {\n        signOutWeb(instance, account);\n      } else {\n        signOutWeb(instance);\n      }\n    } else if (discovery !== null) {\n      signOutNative(discovery);\n    }\n  }\n\n  async function checkIfConnected() {\n    const result = await Network.getNetworkStateAsync();\n    if (result.isInternetReachable) {\n      // Internet reachable\n      setIsConnected(true);\n    } else {\n      setIsConnected(false);\n    }\n  }\n\n  useEffect(() => {\n    const intervalId = setInterval(() => {\n      // assign interval to a variable to clear it.\n      checkIfConnected();\n    }, 5000); // 5s\n\n    return () => clearInterval(intervalId);\n  }, []);\n\n  useEffect(() => {\n    setTimeout(() => {\n      setIsShowingLogout(true);\n    }, 10000);\n  }, []);\n\n  return (\n    <View\n      style={{\n        width,\n        top: -insets.top,\n        height,\n        alignContent: 'center',\n        alignItems: 'center',\n        justifyContent: 'center',\n      }}\n    >\n      {isConnected ? (\n        <>\n          <ProgressView width={14} height={14} />\n          <Text style={{ color: Colors.white }}>Loading</Text>\n          {isGovernmentMode ? (\n            <Pressable\n              onPress={() => {\n                setOveride(true);\n              }}\n              style={{ margin: 5 }}\n            >\n              <Text style={{ color: Colors.white }}>Overide</Text>\n            </Pressable>\n          ) : null}\n          {isShowingLogout ? (\n            <Pressable\n              onPress={() => {\n                signOut();\n              }}\n              style={{ margin: 5 }}\n            >\n              <Text style={{ color: Colors.white }}>Logout</Text>\n            </Pressable>\n          ) : null}\n        </>\n      ) : (\n        <OfflineIcon width={50} height={50} />\n      )}\n    </View>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { View, ScaledSize, Text, Pressable, Platform } from 'react-native';\nimport { useSelector } from 'react-redux';\nimport { NativeRouter, Route, Routes } from 'react-router-native';\n\nimport { useSafeAreaInsets } from 'react-native-safe-area-context';\nimport {\n  DiscoveryDocument,\n  revokeAsync,\n  useAutoDiscovery,\n} from 'expo-auth-session';\nimport { useMsal } from '@azure/msal-react';\nimport { AccountInfo, IPublicClientApplication } from '@azure/msal-browser';\nimport HomePage from './HomePage';\nimport Commissions from './Commissions/Commissions';\nimport Notifications from './Notifications';\nimport Resources from './Resources';\nimport Settings from './Profile/Settings';\nimport Government from './Profile/Government/Government';\nimport MicrosoftGraphOverview from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphOverview';\nimport MicrosoftGraphCreateList from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphCreateList';\nimport GovernmentCommissions from './Profile/Government/GovernmentCommissions/GovernmentCommissions';\nimport GovernmentEditCommission from './Profile/Government/GovernmentCommissions/GovernmentEditCommission';\nimport Sports from './Sports';\nimport Calendar from './Calendar/Calendar';\nimport GovernmentSports from './Profile/Government/GovernmentSports/GovernmentSports';\nimport GovernmentCreateNewSport from './Profile/Government/GovernmentSports/GovernmentCreateNewSport';\nimport GovernmentSportsTeams from './Profile/Government/GovernmentSports/GovernmentSportsTeams';\nimport GovernmentSportTeamEdit from './Profile/Government/GovernmentSports/GovernmentSportTeamEdit';\nimport GovernmentSportsTeamAddPost from './Profile/Government/GovernmentSports/GovernmentSportsTeamAddPost';\nimport GovernmentReviewFileSubmission from './Profile/Government/GovernmentSports/GovernmentReviewFileSubmission';\nimport GovernmentCalendar from './Profile/Government/GovernmentCalendar/GovernmentCalendar';\nimport GovernmentSchedual from './Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentSchedule';\nimport GovernmentTimetable from './Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetable';\nimport GovernmentScheduleEdit from './Profile/Government/GovernmentCalendar/GovernmentSchedule/GovernmentScheduleEdit';\nimport GovernmentClasses from './Profile/Government/GovernmentClasses/GovernmentClasses';\nimport GovernmentClassesEdit from './Profile/Government/GovernmentClasses/GovernmentClassesEdit';\nimport GovernmentHomePage from './Profile/Government/GovernmentHomePage';\nimport NavBarComponent from '../UI/NavComponent';\nimport PageNotFound from './404Page';\nimport GovernmentAdmin from './Profile/Government/GovernmentAdminCenter/GovernmentAdmin';\nimport GovernmentRooms from './Profile/Government/GovernmentClasses/GovernmentRooms';\nimport GovernmentRoomsCreate from './Profile/Government/GovernmentClasses/GovermentRoomsCreate';\nimport MicrosoftGraphEdit from './Profile/Government/MicrosoftGraphLists/MicrosoftGraphEdit';\nimport GovernmentResources from './Profile/Government/GovernmentResources';\nimport GovernmentDressCodeCreate from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit';\nimport GovernmentDressCode from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCode';\nimport GovernmentDressCodeEdit from './Profile/Government/GovernmentCalendar/GovernmentDressCode/GovernmentDressCodeEdit';\nimport GovernmentTimetableEdit from './Profile/Government/GovernmentCalendar/GovernmentTimetable/GovernmentTimetableEdit';\nimport store, { RootState } from '../Redux/store';\nimport ProfileBlock from './Profile/ProfileBlock';\nimport ProgressView from '../UI/ProgressView';\nimport Students from './Students';\nimport GovernmentStudents from './Profile/Government/GovernmentStudents';\nimport { Colors } from '../types';\nimport { authenticationTokenSlice } from '../Redux/reducers/authenticationTokenReducer';\nimport { tenantId } from '../PaulyConfig';\nimport LoadingScreen from './LoadingScreen';\n\nexport default function AuthenticatedView({\n  dimensions,\n  width,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n  width: number;\n}) {\n  const { height, currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const { siteId } = useSelector((state: RootState) => state.paulyList);\n  const authenticationToken = useSelector(\n    (state: RootState) => state.authenticationToken,\n  );\n  const isShowingProfileBlock = useSelector(\n    (state: RootState) => state.isShowingProfileBlock,\n  );\n  const insets = useSafeAreaInsets();\n  const [overide, setOveride] = useState<boolean>(false);\n  return (\n    <>\n      {(siteId !== '' || overide) && authenticationToken !== '' ? (\n        <View style={{ width, top: -insets.top }}>\n          <NativeRouter>\n            <View style={{ flexDirection: 'row', width }}>\n              {currentBreakPoint >= 1 ? (\n                <NavBarComponent\n                  width={width * 0.1}\n                  height={dimensions.window.height}\n                />\n              ) : null}\n              <View\n                style={{\n                  width: currentBreakPoint >= 1 ? width * 0.9 : width,\n                  height,\n                  backgroundColor: Colors.maroon,\n                }}\n              >\n                <Routes>\n                  <Route path=\"/\" element={<HomePage />} />\n                  <Route path=\"/sports\" element={<Sports />} />\n                  <Route path=\"/notifications\" element={<Notifications />} />\n                  <Route path=\"/calendar\" element={<Calendar />} />\n                  <Route path=\"/resources\" element={<Resources />} />\n                  <Route path=\"/commissions\" element={<Commissions />} />\n                  <Route path=\"/profile\" element={<Settings />} />\n                  <Route path=\"/students\" element={<Students />} />\n                  <Route path=\"/profile/government\" element={<Government />} />\n                  <Route\n                    path=\"/profile/government/resources\"\n                    element={<GovernmentResources />}\n                  />\n                  <Route\n                    path=\"/profile/government/admin\"\n                    element={<GovernmentAdmin />}\n                  />\n                  <Route\n                    path=\"/profile/government/graph/:mode\"\n                    element={<MicrosoftGraphOverview />}\n                  />\n                  <Route\n                    path=\"/profile/government/graph/:mode/edit/:id\"\n                    element={<MicrosoftGraphEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/graph/:mode/create\"\n                    element={<MicrosoftGraphCreateList />}\n                  />\n                  <Route\n                    path=\"/profile/government/commissions\"\n                    element={<GovernmentCommissions />}\n                  />\n                  <Route\n                    path=\"/profile/government/commissions/:id\"\n                    element={<GovernmentEditCommission />}\n                  />\n                  <Route\n                    path=\"/profile/government/homepage\"\n                    element={<GovernmentHomePage />}\n                  />\n                  <Route\n                    path=\"/profile/government/students\"\n                    element={<GovernmentStudents />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes\"\n                    element={<GovernmentClasses />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes/edit/:id\"\n                    element={<GovernmentClassesEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes/room\"\n                    element={<GovernmentRooms />}\n                  />\n                  <Route\n                    path=\"/profile/government/classes/room/create\"\n                    element={<GovernmentRoomsCreate />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar\"\n                    element={<GovernmentCalendar />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/schedule\"\n                    element={<GovernmentSchedual />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/schedule/:id\"\n                    element={<GovernmentScheduleEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/timetable\"\n                    element={<GovernmentTimetable />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/timetable/:id\"\n                    element={<GovernmentTimetableEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/dresscode\"\n                    element={<GovernmentDressCode />}\n                  />\n                  <Route\n                    path=\"/profile/government/calendar/dresscode/:id\"\n                    element={<GovernmentDressCodeEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports\"\n                    element={<GovernmentSports />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/create\"\n                    element={<GovernmentCreateNewSport />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/team/:sport/:id\"\n                    element={<GovernmentSportsTeams />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/team/:sport/:id/:teamId\"\n                    element={<GovernmentSportTeamEdit />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/post/create\"\n                    element={<GovernmentSportsTeamAddPost />}\n                  />\n                  <Route\n                    path=\"/profile/government/sports/post/review/:submissionID\"\n                    element={<GovernmentReviewFileSubmission />}\n                  />\n                  <Route path=\"*\" element={<PageNotFound />} />\n                </Routes>\n                {currentBreakPoint >= 1 && isShowingProfileBlock ? (\n                  <ProfileBlock />\n                ) : null}\n              </View>\n            </View>\n          </NativeRouter>\n        </View>\n      ) : (\n        <LoadingScreen setOveride={setOveride} width={width} />\n      )}\n    </>\n  );\n}\n","import callMsGraph from './microsoftAssets';\nimport { orgWideGroupID } from '../../PaulyConfig';\nimport store from '../../Redux/store';\nimport { paulyListSlice } from '../../Redux/reducers/paulyListReducer';\n\nexport default async function getPaulyLists() {\n  const getRootSiteIdResult = await callMsGraph(\n    `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/sites/root?$select=id`,\n    'GET',\n  );\n  if (getRootSiteIdResult.ok) {\n    const getRootSiteIdResultData = await getRootSiteIdResult.json();\n    const paulyListResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/sites/${getRootSiteIdResultData.id}/lists/PaulyList/items?expand=fields&$select=id`,\n      'GET',\n    );\n    if (paulyListResult.ok) {\n      const paulyListResultData = await paulyListResult.json();\n      // TO DO make the value secure meaning that others cannot add to the pauly list\n      // store.dispatch(paulyListSlice.actions.setPaulyList({siteId: getRootSiteIdResultData[\"id\"], commissionListId: paulyListResultData[\"fields\"][\"commissionListId\"], paulyDataListId: paulyListResultData[\"fields\"][\"paulyDataListId\"], scheduleListId: paulyListResultData[\"fields\"][\"scheduleListId\"], sportsListId: paulyListResultData[\"fields\"][\"sportsListId\"], sportsApprovedSubmissionsListId: paulyListResultData[\"fields\"][\"sportsApprovedSubmissionsListId\"], sportsSubmissionsListId: paulyListResultData[\"fields\"][\"sportsSubmissionsListId\"], timetablesListId: paulyListResultData[\"fields\"][\"timetablesListId\"]}))\n      store.dispatch(\n        paulyListSlice.actions.setPaulyList({\n          siteId: getRootSiteIdResultData.id,\n          studentFilesListId:\n            paulyListResultData.value[0].fields.studentFilesListId,\n          commissionListId:\n            paulyListResultData.value[0].fields.commissionListId,\n          commissionSubmissionsListId:\n            paulyListResultData.value[0].fields.commissionSubmissionsListId,\n          paulyDataListId: paulyListResultData.value[0].fields.paulyDataListId,\n          scheduleListId: paulyListResultData.value[0].fields.scheduleListId,\n          sportsListId: paulyListResultData.value[0].fields.sportsListId,\n          sportsApprovedSubmissionsListId:\n            paulyListResultData.value[0].fields.sportsApprovedSubmissionsListId,\n          sportsSubmissionsListId:\n            paulyListResultData.value[0].fields.sportsSubmissionsListId,\n          timetablesListId:\n            paulyListResultData.value[0].fields.timetablesListId,\n          resourceListId: paulyListResultData.value[0].fields.resourceListId,\n          dressCodeListId: paulyListResultData.value[0].fields.dressCodeListId,\n          eventTypeExtensionId:\n            paulyListResultData.value[0].fields.eventTypeExtensionId,\n          eventDataExtensionId:\n            paulyListResultData.value[0].fields.eventDataExtensionId,\n          classExtensionId:\n            paulyListResultData.value[0].fields.classExtensionId,\n          resourceExtensionId:\n            paulyListResultData.value[0].fields.resourceExtensionId,\n          roomListId: paulyListResultData.value[0].fields.roomListId,\n        }),\n      );\n    } else {\n      // TO DO THIS IS A BIG PROBLEM SHUT DOWN APP BC most of it don't work lost connection to server\n    }\n  } else {\n    // TO DO THIS IS A BIG PROBLEM SHUT DOWN APP BC most of it don't work lost connection to server\n  }\n}\n","import { microsoftProfileDataSlice } from '../../Redux/reducers/microsoftProfileDataReducer';\nimport store from '../../Redux/store';\nimport callMsGraph from './microsoftAssets';\n\nexport default async function getUserProfile() {\n  const result = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me/photo/$value',\n    'GET',\n  );\n  // TO DO return error\n  if (result.ok) {\n    const dataBlob = await result.blob();\n    const urlOut = URL.createObjectURL(dataBlob);\n    const profileResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/me',\n      'GET',\n    );\n    if (profileResult.ok) {\n      const profileData = await profileResult.json();\n      store.dispatch(\n        microsoftProfileDataSlice.actions.setMicrosoftProfileData({\n          uri: urlOut,\n          displayName: profileData.displayName,\n          id: profileData.id,\n        }),\n      );\n    }\n  } else {\n    const profileResult = await callMsGraph(\n      'https://graph.microsoft.com/v1.0/me',\n      'GET',\n    );\n    if (profileResult.ok) {\n      const profileData = await profileResult.json();\n      store.dispatch(\n        microsoftProfileDataSlice.actions.setMicrosoftProfileData({\n          uri: '',\n          displayName: profileData.displayName,\n          id: profileData.id,\n        }),\n      );\n    }\n  }\n}\n","import AsyncStorage from '@react-native-async-storage/async-storage';\nimport { orgWideGroupID } from '../PaulyConfig';\nimport { isGovernmentModeSlice } from '../Redux/reducers/isGovernmentModeReducer';\nimport store from '../Redux/store';\nimport callMsGraph from './ultility/microsoftAssets';\n\nexport async function validateGovernmentMode() {\n  const userResult = await callMsGraph(\n    'https://graph.microsoft.com/v1.0/me?$select=id',\n  );\n  if (userResult.ok) {\n    const userData = await userResult.json();\n    const teamsResult = await callMsGraph(\n      `https://graph.microsoft.com/v1.0/groups/${orgWideGroupID}/owners?$filter=id%20eq%20'${userData.id}'`,\n    );\n    if (teamsResult.ok) {\n      const teamsData = await teamsResult.json();\n      if (teamsData.value.length === 1) {\n        if (teamsData.value[0].id === userData.id) {\n          try {\n            await AsyncStorage.setItem(\n              'paulyGovernmentMode',\n              JSON.stringify(true),\n            );\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(true),\n            );\n          } catch (e) {\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          }\n        } else {\n          try {\n            await AsyncStorage.setItem(\n              'paulyGovernmentMode',\n              JSON.stringify(false),\n            );\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          } catch (e) {\n            store.dispatch(\n              isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n            );\n          }\n        }\n      } else {\n        try {\n          await AsyncStorage.setItem(\n            'paulyGovernmentMode',\n            JSON.stringify(false),\n          );\n          store.dispatch(\n            isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n          );\n        } catch (e) {\n          store.dispatch(\n            isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n          );\n        }\n      }\n    } else if (teamsResult.status === 404) {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(true));\n    } else {\n      try {\n        await AsyncStorage.setItem(\n          'paulyGovernmentMode',\n          JSON.stringify(false),\n        );\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      } catch (e) {\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      }\n    }\n  } else {\n    try {\n      await AsyncStorage.setItem('paulyGovernmentMode', JSON.stringify(false));\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    } catch (e) {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    }\n  }\n}\n\nexport async function checkIfGovernmentMode() {\n  try {\n    const value = await AsyncStorage.getItem('paulyGovernmentMode');\n    if (value !== null) {\n      // value previously stored\n      const governmentMode = JSON.parse(value);\n      if (governmentMode) {\n        store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(true));\n      } else {\n        store.dispatch(\n          isGovernmentModeSlice.actions.setIsGovernmentMode(false),\n        );\n      }\n    } else {\n      store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n    }\n  } catch (e) {\n    // error reading value\n    store.dispatch(isGovernmentModeSlice.actions.setIsGovernmentMode(false));\n  }\n}\n\nexport async function setWantGovernment(value: boolean) {\n  if (value) {\n    try {\n      await AsyncStorage.setItem(\n        'paulyWantGovernmentMode',\n        JSON.stringify(true),\n      );\n    } catch (e) {\n      // TO DO deal with error\n    }\n  } else {\n    try {\n      await AsyncStorage.setItem(\n        'paulyWantGovernmentMode',\n        JSON.stringify(false),\n      );\n    } catch (e) {\n      // TO DO deal with error\n    }\n  }\n}\n\nexport async function getWantGovernment(): Promise<boolean> {\n  try {\n    const value = await AsyncStorage.getItem('paulyWantGovernmentMode');\n    if (value !== null) {\n      const result = JSON.parse(value);\n      if (result) {\n        return true;\n      }\n      return false;\n    }\n    return false;\n  } catch {\n    return false;\n    // TO DO deal with error\n  }\n}\n","import { SafeAreaView, ScaledSize } from 'react-native';\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { EventType, PublicClientApplication } from '@azure/msal-browser';\nimport {\n  AuthenticatedTemplate,\n  MsalProvider,\n  UnauthenticatedTemplate,\n  useMsal,\n} from '@azure/msal-react';\nimport Login from '../src/login';\nimport AuthenticatedViewMain from '../src/AuthenticatedView/AuthenticatedViewMain';\nimport { clientId, scopes, tenantId } from '../src/PaulyConfig';\nimport getPaulyLists from '../src/Functions/ultility/getPaulyLists';\nimport getUserProfile from '../src/Functions/ultility/getUserProfile';\nimport { authenticationTokenSlice } from '../src/Redux/reducers/authenticationTokenReducer';\nimport { isGovernmentModeSlice } from '../src/Redux/reducers/isGovernmentModeReducer';\nimport { authenticationApiTokenSlice } from '../src/Redux/reducers/authenticationApiToken';\nimport {\n  checkIfGovernmentMode,\n  getWantGovernment,\n  setWantGovernment,\n  validateGovernmentMode,\n} from '../src/Functions/handleGovernmentLogin';\nimport { RootState } from '../src/Redux/store';\n\n// This is for the microsoft authentication.\nconst pca = new PublicClientApplication({\n  auth: {\n    clientId,\n    authority: `https://login.microsoftonline.com/${tenantId}/`,\n    redirectUri: window.location.href, // TODO change prod\n  },\n});\n\nexport default function AppMain({\n  dimensions,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n}) {\n  return (\n    <MsalProvider instance={pca}>\n      <SafeAreaView\n        style={{\n          width: dimensions.window.width,\n          height: dimensions.window.height,\n          zIndex: 2,\n          position: 'absolute',\n          left: 0,\n          top: 0,\n        }}\n      >\n        <AuthDeep dimensions={dimensions} />\n      </SafeAreaView>\n    </MsalProvider>\n  );\n}\n\nfunction AuthDeep({\n  dimensions,\n}: {\n  dimensions: { window: ScaledSize; screen: ScaledSize };\n}) {\n  const { instance } = useMsal();\n  const dispatch = useDispatch();\n  const authenticationCall = useSelector(\n    (state: RootState) => state.authenticationCall,\n  );\n\n  async function getAuthToken(userInitated: boolean, government?: boolean) {\n    // Account selection logic is app dependent. Adjust as needed for different use cases.\n    // Set active acccount on page load\n    if (government !== undefined) {\n      setWantGovernment(government);\n    }\n\n    const accounts = instance.getAllAccounts();\n    if (accounts.length > 0) {\n      instance.setActiveAccount(accounts[0]);\n      const accountResult = await instance.getActiveAccount();\n      if (accountResult !== null) {\n        const result = await instance.acquireTokenSilent({\n          scopes,\n        });\n        dispatch(\n          authenticationTokenSlice.actions.setAuthenticationToken(\n            result.accessToken,\n          ),\n        );\n        getPaulyLists();\n        getUserProfile();\n        if (await getWantGovernment()) {\n          checkIfGovernmentMode();\n        }\n      } else {\n      }\n    }\n\n    instance.addEventCallback((event: any) => {\n      // set active account after redirect\n      if (\n        event.eventType === EventType.LOGIN_SUCCESS &&\n        event.payload.account\n      ) {\n        const { account } = event.payload;\n        instance.setActiveAccount(account);\n      }\n    });\n\n    // handle auth redired/do all initial setup for msal\n    instance\n      .handleRedirectPromise()\n      .then(async authResult => {\n        // Check if user signed in\n        const account = instance.getActiveAccount();\n        if (!account && userInitated) {\n          // redirect anonymous user to login page\n          instance.loginRedirect({\n            scopes,\n          });\n        } else if (account) {\n          if (authResult !== undefined && authResult !== null) {\n            dispatch(\n              authenticationTokenSlice.actions.setAuthenticationToken(\n                authResult.accessToken,\n              ),\n            );\n            if (await getWantGovernment()) {\n              validateGovernmentMode();\n            }\n            getPaulyLists();\n            getUserProfile();\n          }\n        }\n      })\n      .catch(async err => {\n        // TODO: Handle errors\n        try {\n          const result = await instance.acquireTokenSilent({\n            scopes,\n          });\n          dispatch(\n            authenticationTokenSlice.actions.setAuthenticationToken(\n              result.accessToken,\n            ),\n          );\n          if (await getWantGovernment()) {\n            validateGovernmentMode();\n          }\n          getPaulyLists();\n          getUserProfile();\n        } catch (e) {}\n      });\n  }\n\n  useEffect(() => {\n    getAuthToken(false);\n  }, []);\n\n  async function refreshToken() {\n    const result = await instance.acquireTokenSilent({\n      scopes,\n    });\n    dispatch(\n      authenticationTokenSlice.actions.setAuthenticationToken(\n        result.accessToken,\n      ),\n    );\n  }\n\n  useEffect(() => {\n    refreshToken();\n  }, [authenticationCall]);\n\n  return (\n    <SafeAreaView\n      style={{\n        width: dimensions.window.width,\n        height: dimensions.window.height,\n        zIndex: 2,\n        position: 'absolute',\n        left: 0,\n        top: 0,\n      }}\n    >\n      <AuthenticatedTemplate>\n        <AuthenticatedViewMain\n          dimensions={dimensions}\n          width={dimensions.window.width}\n        />\n      </AuthenticatedTemplate>\n      <UnauthenticatedTemplate>\n        <Login\n          onGetAuthToken={() => {\n            getAuthToken(true, false);\n          }}\n          onGetGovernmentAuthToken={() => {\n            getAuthToken(true, true);\n          }}\n          width={dimensions.window.width}\n        />\n      </UnauthenticatedTemplate>\n    </SafeAreaView>\n  );\n}\n","/**\n * Pauly React Native App\n * https://github.com/facebook/react-native\n *\n * @format\n */\n\nimport React, { useEffect, useState } from 'react';\nimport { Dimensions, View } from 'react-native';\nimport { DefaultTheme, PaperProvider } from 'react-native-paper';\nimport { GestureHandlerRootView } from 'react-native-gesture-handler';\nimport { Provider, useSelector } from 'react-redux';\n\nimport {\n  SafeAreaProvider,\n  SafeAreaView,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport store, { RootState } from './src/Redux/store';\nimport { dimentionsSlice } from './src/Redux/reducers/dimentionsReducer';\nimport AppMain from './AppMain/AppMain';\nimport { Colors, breakPointMode } from './src/types';\n\nconst windowDimensions = Dimensions.get('window');\nconst screenDimensions = Dimensions.get('screen');\n\nfunction AppCore() {\n  // Dimentions\n  const safeAreaColors = useSelector(\n    (state: RootState) => state.safeAreaColors,\n  );\n  const expandedMode = useSelector((state: RootState) => state.expandedMode);\n  const { currentBreakPoint } = useSelector(\n    (state: RootState) => state.dimentions,\n  );\n  const [dimensions, setDimensions] = useState({\n    window: windowDimensions,\n    screen: screenDimensions,\n  });\n  const insets = useSafeAreaInsets();\n\n  useEffect(() => {\n    const subscription = Dimensions.addEventListener(\n      'change',\n      ({ window, screen }) => {\n        setDimensions({ window, screen });\n      },\n    );\n    return () => subscription?.remove();\n  });\n\n  useEffect(() => {\n    const width = dimensions.window.width - insets.left - insets.right;\n    if (width >= 576) {\n      if (expandedMode) {\n        store.dispatch(\n          dimentionsSlice.actions.setDimentionsWidth(width * 0.75),\n        );\n      } else {\n        store.dispatch(dimentionsSlice.actions.setDimentionsWidth(width * 0.9));\n      }\n    }\n  }, [expandedMode]);\n\n  useEffect(() => {\n    const oldWidth = store.getState().dimentions.width;\n    const { height } = store.getState().dimentions;\n    const newWidth = dimensions.window.width - insets.left - insets.right;\n    const newHeight = dimensions.window.height - insets.bottom - insets.top;\n    if (oldWidth !== newWidth) {\n      const oldCurrentBreakPointMode: breakPointMode =\n        store.getState().dimentions.currentBreakPoint;\n      let currentBreakPoint: breakPointMode = breakPointMode.xSmall;\n      if (newWidth >= 1200) {\n        // extraLarge ≥1200px\n        currentBreakPoint = breakPointMode.xLarge;\n      } else if (newWidth >= 992) {\n        // large, ≥992px\n        currentBreakPoint = breakPointMode.large;\n      } else if (newWidth >= 768) {\n        // medium, ≥768px\n        currentBreakPoint = breakPointMode.medium;\n      } else if (newWidth >= 576) {\n        // small, ≥576px\n        currentBreakPoint = breakPointMode.small;\n      } else if (newWidth < 576) {\n        // xSmall,\t<576px\n        currentBreakPoint = breakPointMode.xSmall;\n      }\n      if (oldCurrentBreakPointMode !== currentBreakPoint) {\n        if (newWidth >= 576) {\n          if (expandedMode) {\n            store.dispatch(\n              dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n                width: newWidth * 0.75,\n                currentBreakPoint,\n              }),\n            );\n          } else {\n            store.dispatch(\n              dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n                width: newWidth * 0.9,\n                currentBreakPoint,\n              }),\n            );\n          }\n        } else {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidthCurrentBreakPoint({\n              width: newWidth,\n              currentBreakPoint,\n            }),\n          );\n        }\n      } else if (newWidth >= 576) {\n        if (expandedMode) {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidth(newWidth * 0.75),\n          );\n        } else {\n          store.dispatch(\n            dimentionsSlice.actions.setDimentionsWidth(newWidth * 0.9),\n          );\n        }\n      } else {\n        store.dispatch(dimentionsSlice.actions.setDimentionsWidth(newWidth));\n      }\n    }\n    if (height !== newHeight) {\n      store.dispatch(dimentionsSlice.actions.setDimentionsHeight(newHeight));\n    }\n  }, [dimensions]);\n\n  return (\n    <>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: insets.top,\n          backgroundColor: safeAreaColors.top,\n        }}\n      />\n      <SafeAreaView\n        style={{\n          backgroundColor: safeAreaColors.bottom,\n          width: dimensions.window.width,\n          height: dimensions.window.height - (insets.top + insets.bottom),\n          zIndex: 10,\n          top: insets.top,\n          position: 'absolute',\n        }}\n      >\n        <AppMain dimensions={dimensions} />\n      </SafeAreaView>\n      <View\n        style={{\n          width: dimensions.window.width,\n          height: insets.bottom,\n          backgroundColor: safeAreaColors.bottom,\n          position: 'absolute',\n          bottom: 0,\n        }}\n      />\n      {currentBreakPoint >= 1 ? (\n        <View\n          style={{\n            height: dimensions.window.height,\n            width: expandedMode\n              ? dimensions.window.width * 0.25\n              : dimensions.window.width * 0.1,\n            backgroundColor: '#793033',\n            position: 'absolute',\n            top: 0,\n            left: 0,\n          }}\n        />\n      ) : null}\n    </>\n  );\n}\n\nconst theme = {\n  ...DefaultTheme,\n  roundness: 2,\n  colors: {\n    // Primary\n    primary: Colors.darkGray, // ALL G\n    primaryContainer: Colors.maroon, // Selected Am Mode\n    onPrimary: Colors.black, // This is special Text\n    onPrimaryContainer: Colors.black,\n    inversePrimary: Colors.white,\n\n    secondary: Colors.black,\n    secondaryContainer: Colors.lightGray, // Back box of selected time or hour\n    onSecondary: Colors.black, // text like if hour or minute is selected\n    onSecondaryContainer: Colors.black,\n\n    // Tertiary\n    tertiary: Colors.darkGray,\n    tertiaryContainer: Colors.darkGray,\n    onTertiary: Colors.darkGray,\n\n    // Background\n    surface: Colors.white, // ALL G\n    surfaceVariant: Colors.lightGray, // ALL G this is the circle\n    onSurfaceVariant: Colors.black, // This is am pm and title text\n    background: Colors.lightGray,\n    onSurface: Colors.black, // This is most text\n    onBackground: Colors.black,\n    backdrop: 'rgba(237, 237, 237, 0.77)',\n\n    outline: Colors.black, // ALL G\n    outlineVariant: Colors.black,\n\n    shadow: Colors.black,\n    scrim: Colors.black,\n  },\n};\n\nfunction App() {\n  return (\n    <Provider store={store}>\n      <PaperProvider theme={theme}>\n        <SafeAreaProvider>\n          <GestureHandlerRootView style={{ flex: 1 }}>\n            <AppCore />\n          </GestureHandlerRootView>\n        </SafeAreaProvider>\n      </PaperProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [202], () => (__webpack_require__(6271)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["monthDataSlice","createSlice","name","initialState","reducers","setMonthData","_state","action","payload","setResourcesLastCalled","breakPointMode","loadingStateEnum","dataContentTypeOptions","taskImportanceEnum","taskStatusEnum","resourceResponce","commissionTypeEnum","paulyEventType","recurringType","semesters","submissionTypeEnum","locationStateEnum","calendarMode","resourceMode","Colors","_createClass","_classCallCheck","white","maroon","lightGray","darkGray","black","danger","initalState","top","bottom","safeAreaColorsSlice","setSafeAreaColors","setSafeAreaColorTop","state","_objectSpread","setSafeAreaColorBottom","microsoftProfileDataSlice","uri","displayName","id","setMicrosoftProfileData","currentEventsSlice","setCurrentEvents","_toConsumableArray","pushEvent","concat","removeCurrentEvent","slice","setCurrentEventsLastCalled","Date","toISOString","selectedDateSlice","paulyListSlice","siteId","studentFilesListId","commissionListId","commissionSubmissionsListId","paulyDataListId","scheduleListId","sportsListId","sportsApprovedSubmissionsListId","sportsSubmissionsListId","timetablesListId","resourceListId","eventTypeExtensionId","eventDataExtensionId","classExtensionId","resourceExtensionId","dressCodeListId","roomListId","setPaulyList","authenticationTokenSlice","setAuthenticationToken","setAuthenticationRefreshToken","dimentionsSlice","width","height","currentBreakPoint","setDimentionsWidth","setDimentionsWidthCurrentBreakPoint","setDimentionsHeight","setAuthenticationApiToken","taskDeltaSlice","setTaskDeltaLink","tasksDeltaReducer","reducer","tasksReducer","message","animationSpeed","powerpointBlob","powerpointShare","paulyDataState","loading","paulyDataSlice","setPaulyData","setPaulyDataState","initalResourcesState","resources","loadingState","searchValue","resourceFollow","selectedResourceMode","home","resourcesSlice","setResourceData","pushResource","push","setResources","setResourcesState","setSearchValue","setResourceFollow","setSelectedResourceMode","eventName","createEventState","notStarted","isPickingStartDate","isPickingEndDate","allDay","isGovernmentEvent","selectedTimetable","selectedSchoolDayData","undefined","selectedSchoolYear","selectedEventType","personal","recurringEvent","selectedRecurringType","daily","startDate","endDate","isShowingAddDate","isEditing","selectedCalendarMode","month","selectedEvent","addEventSlice","setEventName","setCreateEventState","setIsPickingStartDate","setIsPickingEndDate","setAllDay","setIsGovernmentEvent","setSelectedTimetable","setSelectedSchoolDayData","setSelectedSchoolYear","setSelectedEventType","setRecurringEvent","setSelectedRecurringType","setStartDate","setEndDate","setIsShowingAddDate","setIsEditing","setSelectedCalendarMode","setSelectedEvent","taskState","userState","trendingState","userData","trendingData","userTasks","importance","normal","status","excess","schoolDayData","startTime","isShowingCompleteTasks","homepageDataSlice","setTaskState","setUserState","setTrendingState","setUserData","setTrendingData","setUserTasks","updateUserTask","index","length","task","unshiftUserTask","unshift","popUserTask","splice","setSchoolDayData","setStartTime","setIsShowingCompletedTasks","expandedModeSlice","setExpandedMode","isShowingProfileBlockSlice","setIsShowingProfileBlock","isGovernmentModeSlice","setIsGovernmentMode","commissionsState","points","currentCommissions","selectedCommission","commissionNextLink","commissionsSlice","setCommissionsState","setPoints","setCurrentCommissions","setSelectedCommission","setCommissionNextLink","pdfDataSlice","inject","images","pageNumber","setInject","addImage","setImages","setPageNumber","increasePageNumber","decreasePageNumber","monthViewSlice","setMonthViewData","authenticationCallSlice","setAuthenticationCallIncrement","searchText","users","usersState","nextLink","studentSearchSlice","setStudentSearch","setStudentUsers","setUsersState","setNextLink","setStudentUserByIndex","user","setStudentUserById","findIndex","e","configureStore","addEvent","addEventReducer","authenticationToken","authenticationTokenReducer","authenticationApiToken","authenticationApiTokenReducer","authenticationRefreshToken","authenticationRefreshTokenReducer","authenticationCall","authenticationCallReducer","commissions","commissionsReducer","currentEvents","currentEventsReducer","currentEventsLastCalled","currentEventsLastCalledReducer","dimentions","dimentionsReducer","expandedMode","expandedModeReducer","homepageData","homepageDataReducer","isGovernmentMode","isGovernmentModeReducer","isShowingProfileBlock","isShowingProfileBlockReducer","microsoftProfileData","microsoftProfileDataReducer","monthData","monthDataReducer","monthView","monthViewReducer","paulyData","paulyDataReducer","paulyList","paulyListReducer","pdfData","pdfDataReducer","resourcesReducer","resourcesLastCalled","resourcesLastCallReducer","safeAreaColors","safeAreaColorsReducer","tasks","tasksDeltaLink","selectedDate","selectedDateReducer","studentSearch","studentSearchReducer","CalendarIcon","_ref","style","_jsx","View","children","_jsxs","Svg","viewBox","fill","Path","d","fillRule","clipRule","MedalIcon","_ref2","G","strokeWidth","strokeLinecap","strokeLinejoin","Polygon","BookIcon","_ref3","GovernmentIcon","_ref4","HomeIcon","_ref5","UpIcon","_ref6","DownIcon","_ref7","AddIcon","_ref8","CloseIcon","_ref9","props","ChevronLeft","_ref10","ChevronRight","_ref11","FolderIcon","_ref12","stroke","DocumentIcon","_ref13","Rect","x","y","CopyIcon","_ref14","PersonIcon","_ref15","GearIcon","_ref16","GraduationHatIcon","_ref17","WarningIcon","_ref18","outlineColor","Circle","cx","cy","r","SearchIcon","_ref19","WordIcon","_ref20","Defs","LinearGradient","x1","y1","x2","y2","gradientTransform","gradientUnits","Stop","offset","stopColor","opacity","PowerpointIcon","_ref21","ExcelIcon","_ref22","VideoIcon","_ref23","PDFIcon","_ref24","ImageIcon","_ref25","AudioIcon","_ref26","OneNoteIcon","_ref27","fillOpacity","rx","GraphAPILogo","_ref28","ClipPath","clipPath","StudentSearchIcon","_ref29","TimeIcon","_ref30","TrashIcon","_ref31","color","OfflineIcon","_ref32","Login","onGetAuthToken","onGetGovernmentAuthToken","useSelector","_useState","useState","_useState2","_slicedToArray","isBottonHover","setIsButtonHover","_useState3","_useState4","isGovernmentHover","setIsGovernmentHover","_useState5","_useState6","fontSize","setFontSize","_useState7","_useState8","isShowingGovernmentLogin","setIsShowingGovernmentLogin","insets","useSafeAreaInsets","dispatch","useDispatch","useCallback","_setSafeAreaColors","_asyncToGenerator","actions","apply","arguments","useEffect","_useFonts","useFonts","BukhariScript","require","fontsLoaded","SplashScreen","Pressable","backgroundColor","alignContent","alignItems","justifyContent","overflow","onLongPress","delayLongPress","flexDirection","Image","source","resizeMode","position","left","Text","fontFamily","textShadowColor","textShadowOffset","textShadowRadius","selectable","marginTop","onPress","onHoverIn","onHoverOut","borderRadius","shadowColor","shadowOffset","shadowOpacity","shadowRadius","textAlign","fontWeight","findFirstDayinMonth","currentTime","year","getFullYear","getMonth","getDay","calculateIfShowing","value","Time","dateToCheck","today","getDate","isDateToday","hourInt","getHours","minuiteInt","getMinutes","resepctiveTime","toString","findTimeOffset","time","minutieWidth","orgWideGroupID","tenantId","clientId","domainName","paulyDomain","scopes","callMsGraph","_x","_x2","_x3","_x4","_x5","_callMsGraph","url","method","body","headersIn","secondAuth","headers","Headers","bearer","store","getState","append","headerIndex","key","options","outUrl","Platform","OS","urlArray","split","response","fetch","previousValue","Promise","resolve","unsubscribe","subscribe","result","largeBatch","_largeBatch","defaultBatchData","createData","data","failed","batchIndex","keys","array","createDataIndex","firstUrl","secondUrl","map","forEach","output","batchData","requests","JSON","stringify","ok","batchResultData","json","responses","success","createUUID","dt","getTime","replace","c","Math","random","floor","getTextState","labels","cannotStart","offline","getDressCode","_getDressCode","dressCodeId","dressCodeData","parse","fields","dressCodeIncentivesData","dressCodeName","listId","dressCodeIncentives","getGraphEvents","_getGraphEvents","referenceUrl","newEvents","_loop","_singleValueExtendedP","_singleValueExtendedP2","eventTypeExtensionID","eventDataExtensionID","singleValueExtendedProperties","eventType","find","eventData","subject","start","dateTime","endTime","end","isAllDay","eventColor","paulyEventData","microsoftEvent","microsoftReference","events","getEvent","_getEvent","event","_eventData$find","_eventData$find2","getSchedule","_getSchedule","resultSchedule","properName","scheduleProperName","descriptiveName","scheduleDescriptiveName","periods","scheduleData","scheduleId","scheduleColor","schedule","listItemId","getSchedules","_getSchedules","dataResult","newLoadedSchedules","_unused","getTimetable","_getTimetable","timetableId","timetableDataSchedules","newSchedules","dressCodeResult","timetableDressCodeId","resultingTimetable","timetableName","schedules","days","timetableDataDays","dressCode","timetable","_getSchoolDay","UTC","_ret","_loop2","_eventData$find3","_eventData$find4","_eventData$find5","v","_getSchoolDays","date","firstDay","lastDay","scheduleIds","Map","schoolYearIds","outputIds","set","schoolYearEventId","batchRequestResultSchedule","batchRequest","scheudleIndex","resultScheduleData","scheduleResponseData","_unused2","timetableResult","_x8","_x9","_getTimetablesFromSchoolYears","getTimetablesFromSchoolYears","_ret2","schoolDaysResult","_loop3","get","schoolDay","schoolDayId","semester","dressCodeIncentiveId","batchRequestResultSchoolYear","timetableIds","schoolYearIndex","schoolYearData","perviousTimetable","_unused3","batchRequestResultTimetable","dressCodeIds","responseIndex","_unused4","batchRequestResultDressCode","dressCodes","dressCodeIndex","_batchRequestResultDr","_batchRequestResultDr2","_unused5","timetables","timetableIndex","resultTimetableData","timetableData","timetableSchedules","scheduleIndex","newSchedule","outputTimetables","timetablesArray","item","_createDressCode","Title","MonthBlock","_getDay","daySelected","textval","startdate","let1","day","monthViewData","borderColor","borderWidth","_Fragment","right","shorthand","zIndex","MonthView","Count","input","setFullYear","getDaysInMonth","StartDate","thirtyValue","Array","_loadData","_x7","getSchoolDays","loadData","flexWrap","numberOfLines","getCurrentPaulyData","_getCurrentPaulyData","powerpointId","fileResult","dataBlob","blob","outputResult","URL","createObjectURL","AnimatedPath","Animated","_worklet_9513762084135_init_data","code","location","ChipView","progress","useSharedValue","withDelay","withRepeat","withTiming","duration","animatedProp","useAnimatedProps","_f","interpolateColor","_closure","__initData","__workletHash","translate","animatedProps","ProgressView","path","StyleSheet","create","box","ScrollingTextAnimation","text","pan","useRef","Value","current","childWidth","setChildWidth","loop","sequence","timing","toValue","delay","easing","Easing","linear","useNativeDriver","mainLoop","GochiHand","transform","translateX","ScrollView","horizontal","onLayout","nativeEvent","layout","adjustsFontSizeToFit","HomePage","navigate","useNavigate","_useSelector2","_useSelector3","borderTopColor","borderTopWidth","borderBottomColor","borderBottomWidth","margin","aspectRatio","_getUsersLocation","commission","Location","requestForegroundPermissionsAsync","permissionDenied","getCurrentPositionAsync","mocked","mockedLocation","coordinateLat","coordinateLng","proximity","getDistance","lat","coords","latitude","lng","longitude","latCoordinate","lngCoordinate","notCloseEnough","_b64toBlob","b64Data","_addImage","base64","fileBlob","b64toBlob","types","type","rootIdResult","rootIdData","imageUUID","resumableSessionData","deferCommit","resumableSessionResult","resumableSessionResultData","uploadUrl","nextExpectedRanges","nextExpectedRange","remaining","size","uploaded","uploadBlob","uploadResult","uploadCompleteResult","uploadCompleteResultData","createLinkResult","scope","createLinkData","shareId","claimCommissionPost","_x6","_claimCommissionPost","auth","commissionId","imageShare","outResult","Authorization","CommissionClaim","imageData","claimCommissionState","setClaimCommissionState","instance","useMsal","_claimCommission","apiResult","acquireTokenSilent","outImageUrl","ImageLocation","outImage","locationResult","getUsersLocation","accessToken","claimCommission","marginLeft","marginRight","getCommission","_getCommission","itemId","title","hidden","commissionID","postData","teamId","postTeamId","channelId","postChannelId","postId","timed","maxNumberOfClaims","allowMultipleSubmissions","submissionsCount","claimCount","reviewedCount","WebViewCross","html","setHeight","WebView","automaticallyAdjustContentInsets","javaScriptEnabled","injectedJavaScript","onMessage","parseFloat","dangerouslySetInnerHTML","__html","CameraResult","CommissionsView","onClose","_useSelector","commissionData","setCommissionData","commissionState","setCommissionState","setMessageState","messageData","setMessageData","_useState9","_useState10","imageUri","setImageUri","_useState11","_useState12","takeImageState","setTakeImageState","_useState13","_useState14","pickImageState","setPickerImageState","_useState15","_useState16","isOverflowing","setIsOverflowing","_useState17","_useState18","evaluatedOverflow","setEvaluatedOverflow","_useState19","_useState20","imageHeight","setImageHeight","_getPost","messageId","content","_getCommissionInformation","_result$data","getPost","_pickImage","ImagePicker","launchImageLibraryAsync","allowsMultipleSelection","allowsEditing","mediaTypes","Images","canceled","assets","getSize","imageMeasureWidth","imageMeasureHeight","_ImagePicker$useCamer","useCameraPermissions","_ImagePicker$useCamer2","requestPermission","takeImage","_takeImage","GRANTED","launchCameraAsync","canAskAgain","granted","goToSettings","getCommissionInformation","paddingLeft","pickImage","marginBottom","getPointsBatch","_getPointsBatch","outputRequests","pointsResult","requestIndex","_getPoints","nextUrl","submissionResultClaimed","submissionResultClaimedData","submissionApproved","batchResult","_getSubmissions","commissionIds","outputMap","requestData","dataIndex","respone","valueIndex","has","mapData","subApproved","subReviewed","submissionReviewed","getCommissions","_getCommissions","claimed","_getUnclaimedCommissions","getUnclaimedCommissions","filter","getFilter","commissionsIds","submissions","getSubmissions","resultCommissions","submissionData","getCommissionsBatch","_getCommissionsBatch","commissionsResult","parseInt","commissionsMap","count","commissionsBatchData","outCommissions","BackButton","to","Commissions","_useSelector4","isHoverPicker","setIsHoverPicker","pointResult","getPoints","loadCommissionData","_loadCommissionData","FlatList","renderItem","elevation","toLocaleDateString","minute","keyExtractor","onEndReachedThreshold","onEndReached","initialNumToRender","showsHorizontalScrollIndicator","PickerPiece","_useSelector5","isSelected","setIsSelected","getUsersTasks","_getUsersTasks","deltaRunAgain","deltaMode","tasksResult","taskData","resultTasks","high","low","inProgress","completed","waitingOnOthers","deferred","_getInsightData","usedResult","userOutData","webUrl","resourceReference","resourceVisualization","trendingResult","trendingOutData","_worklet_17468625320245_init_data","AnimatedCheckMarkPath","checkMarkColor","checked","checkMarkAnimation","strokeDashoffset","strokeDasharray","strokeMiterlimit","_worklet_8732131500673_init_data","CustomCheckBox","useDerivedValue","inOut","bezierFn","PDFJS","workerSrc","_worklet_7922200678359_init_data","_worklet_4482853661007_init_data","_worklet_11315627200092_init_data","PDFView","_convertPdfToImages","file","Blob","docInitParams","pdf","promise","canvas","document","createElement","i","numPages","page","getPage","viewport","getViewport","scale","context","getContext","render","canvasContext","toDataURL","remove","convertPdfToImages","singleTap","Gesture","Tap","onEnd","_event","doubleTap","numberOfTaps","taps","Exclusive","fling","Fling","compound","Simultaneous","heightPerWidth","console","log","GestureDetector","gesture","wordTypes","excelTypes","powerpointTypes","MimeTypeIcon","mimeType","includes","getRooms","_getRooms","search","resultArray","roomName","roomId","_getRoom","feilds","ro0mId","getClasses","_getClasses","classQuery","batchDataRequests","classResult","classData","classes","periodData","room","schoolYearId","semesterOne","_getClassEvents","scheduleResult","outputEvents","order","period","setHours","startHour","setMinutes","startMinute","setSeconds","endHour","endMinute","sort","a","b","getClassEventsFromDay","_getClassEventsFromDay","getSchoolDay","_eventResult$data","eventResult","dressCodeIncentive","getClassEvents","startTimeDate","hourTime","monthTime","Notifications","insightResult","getInsightData","taskResult","WidgetView","BoardBlock","TaskBlock","InsightsBlock","_useSelector6","_useSelector7","Switch","trackColor","false","true","thumbColor","ios_backgroundColor","onValueChange","TaskItem","DeleteTask","onDelete","paddingRight","setChecked","setUpdateTaskState","_useSelector9","currentText","setCurrentText","mounted","setMounted","updateTaskStatus","_updateTaskStatus","newItem","Object","assign","_updateText","_deleteTask","_checkUpdateText","taskNameSave","setTimeout","updateText","checkUpdateText","Swipeable","renderRightActions","deleteTask","paddingTop","paddingBottom","TextInput","onChangeText","newTask","multiline","_useSelector10","_useSelector11","_useSelector12","TrendingFiles","PopularFiles","_useSelector13","_useSelector14","Linking","openURL","_useSelector15","_useSelector16","convertResourceModeString","convert","sports","advancement","schoolEvents","annoucments","fitness","_getResourceFollows","resourceGroupId","resourceConversationId","_getResources","category","getResourceFollows","categoryString","batchCount","resourceRsp","resourceResponceData","responceIndex","attachments","attachmentIndex","contentType","attachmentResult","channelIdentity","attachmentData","attachmentGetResult","parentReference","driveId","attachmentGetResultData","outputData","conversationId","_getResourcesSearch","searchPayload","entityTypes","query","queryString","from","enableTopResults","searchResult","searchData","hitsContainers","hits","resource","getResource","_getResource","groupId","found","notFound","checkIfResourceDataJustAttachment","Resources","isShowingCategoryView","setIsShowingCategoryView","selectedPost","setSelectedPost","getResources","SearchBox","attachment","files","GovernmentCategoryView","categoryState","setCategoryState","selectedCategory","setSelectedCategory","_addCategory","addCategory","outlineStyle","searchValueSave","getResourcesSearch","placeholder","placeholderTextColor","enterKeyHint","inputMode","alignSelf","signOutWeb","account","logoutPopup","Settings","imageLoadState","setImageLoadState","discovery","useAutoDiscovery","signOut","getActiveAccount","revokeAsync","token","signOutNative","onError","error","Block","imageSource","Government","mainWidth","setMainWidth","fivePercent","textAlignVertical","verticalAlign","rowGap","columnGap","selectedIndex","onSetSelectedIndex","compoentWidth","Children","setValue","React","child","getTeams","_getTeams","groupResult","groupResultData","_getChannels","selected","_getPosts","graphMode","MicrosoftGraphOverview","lists","setLists","groups","setGroups","extensions","setExtensions","applicationExtensions","setApplicationExtensions","list","selectedGraphMode","setSelectedGraphMode","mode","useParams","groupLoadingState","setGroupLoadingState","listLoadingState","setListLoadingState","schemaLoadingState","setSchemaLoadingState","_getLists","incomingLists","_getExtensions","schemaExtensionsUrl","resultData","description","applicationResult","applicationData","group","extension","getLists","getExtensions","Link","PickerWrapper","MicrosoftGraphCreateList","columns","setColumns","listName","setListName","isListHidden","setIsListHidden","isShowingTypeWindow","setIsShowingTypeWindow","selectedColumnType","setSelectedColumnType","isHidden","setIsHidden","newColumnName","setNewColumnName","_createList","columnData","newData","listData","contentTypesEnabled","template","Button","allowMultipleLines","appendChangesToExistingText","linesForEditing","maxLength","textType","newColumn","createList","submissionType","approved","unApproved","unReviewed","convertSubmissionTypeToFilter","batchRequests","userId","defineProperty","userName","submissionTime","submittedTime","submissionId","reviewed","submissionImage","GovernmentCommissions","setCommissions","CommissionBlock","unclaimedState","setUnclaimedState","unclaimedCount","setUnclaimedCount","_loadData2","SegmentedPicker","setSelectedIndex","setComponentWidth","option","center","MapWeb","onSetSelectedPositionIn","selectedPositionIn","isLoaded","useJsApiLoader","googleMapsApiKey","selectedPosition","setSelectedPosition","containerStyle","setContainerStyle","GoogleMap","mapContainerStyle","zoom","onClick","ev","latLng","Marker","radius","styles","container","flex","Box","containerWidth","valueRef","currentValue","containerWidthRef","lastValue","panResponder","PanResponder","onStartShouldSetPanResponder","onMoveShouldSetPanResponder","onPanResponderMove","evt","gestureState","dx","valueRead","adding","newValue","onPanResponderRelease","panHandlers","Slider","getFileWithShareID","_getFileWithShareID","shareID","image","video","_updateCommission","isCreating","commissionName","isTimed","selectedCommissionType","selectedPostId","selectedTeamId","selectedChannelId","commissionItemId","QRCode","qrCodeData","datePickingMode","GovernmentEditCommission","submitCommissionState","setSubmitCommissionState","Issued","setSelectedCommissionType","setCommissionName","setProximity","none","currentDatePickingMode","setCurrentDatePickingMode","setSelectedPositionIn","_useState21","_useState22","setMaxNumberOfClaims","_useState23","_useState24","setAllowMultipleSubmissions","_useState25","_useState26","setIsTimed","_useState27","_useState28","setCommissionItemId","_useState29","_useState30","setGetCommissionResult","_useState31","_useState32","deleteCommissionResult","setDeleteCommissionResult","_useState33","_useState34","setSelectedTeamId","_useState35","_useState36","setSelectedChannelId","_useState37","_useState38","setSelectedPostId","_useState39","_useState40","setIsCreating","_deleteCommission","_loadUpdateCommission","_x10","_x11","_x12","_x13","_x14","_x15","_x16","_x17","updateCommission","keyboardType","TimePickerModal","hours","minutes","visible","onDismiss","onConfirm","newDate","DatePickerModal","locale","label","oldDate","PostSelectionContainer","CommissionSubmissions","loadUpdateCommission","deleteCommission","postPickingMode","_useState41","team","_useState42","currentPostPickingMode","setCurrentPostPickingMode","GroupSelection","onSelect","channel","ChannelSelection","post","onBack","PostSelection","_useState43","_useState44","_useState45","_useState46","_useState47","_useState48","groupsState","setGroupsState","_useState49","_useState50","_useState51","_useState52","_useState53","_useState54","_useState55","_useState56","channelState","setChannelState","_useState57","_useState58","channels","setChannels","_loadData3","getChannels","_useState59","_useState60","_useState61","_useState62","_useState63","_useState64","postsState","setPostsState","_useState65","_useState66","posts","setPosts","_loadData4","getPosts","padding","_useState67","_useState68","submissiosState","setSubmissionsState","_useState69","_useState70","setSubmissions","_useState71","_useState72","selectedSubmissionMode","setSelectedSubmissionMode","_useState73","_useState74","selectedSubmission","setSelectedSubmisson","_loadData5","secondResult","all","submission","weekday","hour","second","SubmissionView","setSubmissionData","_useState75","_useState76","changeState","setChangeState","_useState77","_useState78","imageState","setImageState","_useState79","_useState80","_useState81","_useState82","_changeSubmissionApproved","_loadImage","shareResult","loadImage","changeSubmissionApproved","_getSportsContent","newSportsPosts","shareResultsPromise","fileId","shareResults","fileType","caption","fileID","getSports","_getSports","sportName","sportId","svgData","sportSvg","getSportsTeams","_getSportsTeams","teamName","season","_getRoster","playerId","outUsers","outputRosters","_index2","imageShareId","playerNumber","SVGXml","xml","Sports","sportsPosts","setSportsPosts","loadingResult","setLoadingResult","sportsState","setSportsState","setTeamsState","selectedSport","setSelectedSport","selectedTeam","setSelectedTeam","isShowingTeams","setIsShowingTeams","setSports","isShowingRoster","setIsShowingRoster","sportsTeams","setSportsTeams","sportsSelectHeight","setSportsSelectHeight","_loadSports","_loadTeams","sport","_loadSportsContent","getSportsContent","loadSports","loadSportsContent","loadTeams","RosterView","Video","useNativeControls","ResizeMode","COVER","videoStyle","rosterLoadingState","setRosterLoadingState","roster","setRoster","_loadRoster","getRoster","loadRoster","_useFonts3","RosterImage","imageUrl","setImageUrl","imageId","DayView","colorScheme","useColorScheme","heightOffsetTop","setHeightOffsetTop","currentMinuteInt","setCurrentMinuteInt","setCurrentTime","isShowingTime","hourLength","setHourLength","mainScrollRef","eventsPane","setEventsPane","setSchoolEvents","setCurrentTimeFunction","minuite","_getClassesEvents","interval","setInterval","updateOnTimeChange","clearInterval","_mainScrollRef$curren","currentDate","resultHeightTopOffset","scrollTo","animated","loadCalendarContent","getClassesEvents","ref","EventBlock","eventPane","setEventPane","EventHeight","fromDate","toDate","delta","computeEventHeight","Offset","setHorizontalShift","handeled","horizontalCheck","beforeIndex","afterIndex","calculateHorizontalShift","borderLeftWidth","toLocaleString","Week","selectedDateRedux","daysOfWeek","setDaysOfWeek","week","setDate","getDOW","SelectTimetable","governmentMode","setLoadingState","loadedTimetables","setLoadedTimetables","_getTimetables","newLoadedTimetables","getTimetables","pickSchoolDayMode","SelectSchoolDayData","schoolYear","schoolDayMode","setSchoolDayMode","timetableState","setTimetableState","setTimetable","SchoolYearsSelect","SchoolDaySelect","ScheduleSelect","DressCodeSelect","semesterTwo","DressCodeIncentivesSelect","currentEventsSchoolYear","setCurrentEventsSchoolYear","_getData","furtherResult","getData","incentive","_createEvent","timeZone","dataOut","resultEvent","_store$getState$addEv","newEndDate","_schoolDay$dressCodeI","_schoolDay$dressCodeI2","selectedSchoolDayDataCompressed","AddEvent","_deleteEvent","DateAndTimeSection","GovernmentCalendarOptions","updateEvent","deleteEvent","endDatePickerVisable","setEndDatePickerVisable","startDatePickerVisable","setStartDatePickerVisable","CalendarTypePicker","fadeIn","sqrt","_getEvents","Calendar","getEvents","TopView","MonthViewMain","daysInWeek","DOW","fontScale","useWindowDimensions","firstDayWeek","monthDataResult","checkStart","checkEnd","indexEvent","endTimeDate","showing","dayData","getMonthData","valueRow","CalendarCardView","calendarWidth","getBackgroundColor","getTextBackgroundColor","newMediaSubmissions","User","accepted","itemID","selectedSportId","GovernmentHandleFileSubmissions","currentMediaSubmissions","setCurrentMediaSubmissions","loadingSubmissionsState","setLoadingSubmissionsState","GovernmentSports","currentSports","setCurrentSports","setDataResult","GovernmentCreateNewSport","setSportName","setSvgData","createSportLoadingState","setCreateSportLoadingState","_createSport","newSportID","required","number","indexed","enforceUniqueValues","createSport","_getSport","SportsUpdateModel","isPickingSvg","setIsPickingSvg","setListId","getSportState","setGetSportState","updateSportState","setUpdateSportState","_updateSport","updateData","_loadSport","getSport","loadSport","Modal","animationType","updateSport","GovernmentSportsTeams","_useParams","currentTeams","setCurrentTeams","deleteSportState","setDeleteSportState","_deleteSport","getSportResult","getSportData","deleteSport","_getUserMicrosoftFiles","newFiles","lastModified","lastModifiedDateTime","folder","parentDriveId","parentPath","itemGraphPath","callPath","_getUserTeams","teamDescription","MicrosoftUploadModeType","onSetIsShowingUpload","onSetIsShowingMicrosoftUpload","onSelectedFile","usersTeams","setUsersTeams","Personal","selectedMicrosoftUploadMode","setSelectedMicrosoftUploadMode","shareLinkString","setShareLinkString","_loadUserTeams","getUserTeams","_getShareFile","shareLink","loadUserTeams","Picker","ShareLink","Site","PersonalBlock","base64Value","btoa","trimEnd","getShareFile","TeamsBlock","userTeams","teamFileMode","usersFiles","setUsersFies","microsoftPath","setMicrosoftPath","fileBackAvaliable","setFilesBackAvaliable","getFilesState","setGetFilesState","loadGetUserMicrosoftFiles","_loadGetUserMicrosoftFiles","getUserMicrosoftFiles","microsftPathArray","pop","outputString","GovernmentCreateNewTeam","createTeamLoadingState","setCreateTeamLoadingState","teamDataState","setTeamDataState","isCreatingTeam","setIsCreatingTeam","setTeamName","setSeason","teamListItemId","setTeamListItemId","teams","setTeams","setTeamsNextLink","selectedMicrosoftTeam","setSelectedMicrosoftTeam","isSelectingFile","setIsSelectingFile","selectedFile","setSelectedFile","_loadMicrosftTeams","_updateTeam","newTeamId","microsoftTeamId","dependsOn","_deleteTeam","_getMicrosoftTeam","getMicrosoftTeamId","_getTeamData","teamResult","getMicrosoftTeam","loadMicrosftTeams","getTeamData","RosterBlock","deleteTeam","updateTeam","RosterSelectFile","membersState","setMembersState","members","setMembers","_getMembers","teamResultData","rosters","teamIndex","save","shift","getMembers","member","RosterBlockItem","rosterState","setRosterState","callingSelectedFile","setIsCallingSelectedFile","_createMemberItem","updatePlayerData","_updatePlayerData","createMemberItem","onFocus","onBlur","MicrosoftFilePicker","GovernmentSportsTeamAddPost","selectedShareID","setSelectedShareID","postName","setPostName","postSubmissionState","setPostSubmissionState","setSelectedSportId","_getShareLink","itemPathArray","_createFileSubmission","userIdResult","submissionID","timeCreated","PickSportTeam","getShareLink","createFileSubmission","setSportTeams","sportTeamState","setSportTeamState","GovernmentReviewFileSubmission","dataURL","setDataURL","unknown","dataContentType","setDataContentType","currentSubmissionInfomration","setCurrentSubmissionInformation","approveSubmissionState","setApproveSubmissionState","denySubmissionState","setDenySubmissionState","deleteSubmissionState","setDeleteSubmissionState","_deleteSubmission","_getSubmissionInformation","_approveSubmission","newInformation","_denySubmission","_loadFile","getSubmissionInformation","loadFile","deleteSubmission","approveSubmission","denySubmission","GovernmentCalendar","GovernmentSchedule","loadedSchedules","setLoadedSchedules","_loadSchedules","loadSchedules","GovernmentTimetable","isValidHexaCode","test","setScheduleListId","setScheduleProperName","setScheduleDescriptiveName","newPeriods","setNewPeriods","setColor","isPickingColor","setIsPickingColor","isCreatingSchedule","setIsCreatingSchedule","createScheduleLoadingState","setCreateScheduleLoadingState","loadScheduleState","setLoadScheduleState","deleteState","setDeleteState","_submitSchedule","_deleteFunction","_loadFunction","loadFunction","PeriodBlock","onSetNewPeriods","out","ColorPicker","onComplete","hex","InputWidget","disableAlphaChannel","defaultFormat","formats","inputTitleStyle","display","Preview","hideText","hideInitialColor","borderTopRightRadius","borderBottomRightRadius","Panel1","renderThumb","CustomColorThumb","diameter","HueSlider","submitSchedule","deleteFunction","isSelectingStartTime","setIsSelectingStartTime","isSelectingEndTime","setIsSelectingEndTime","update","newNewPeriodsArray","indexToRemove","deleteItem","_worklet_11564229163699_init_data","animatedStyle","useAnimatedStyle","currentColor","positionStyle","GovernmentClasses","classState","setClassState","setClasses","classMap","_getSchoolYears","Dropdown","expandedStyle","setExpanded","expanded","isExpanded","setIsExpanded","GovernmentClassesEdit","selectedSemester","setSelectedSemester","className","setClassName","roomSearchText","roomsNextLink","setRoomsNextLink","rooms","setRooms","roomsState","setRoomsState","selectedRoom","setSelectedRoom","schoolYearState","setSchoolYearState","schoolYearNextLink","setSchoolYearNextLink","schoolYears","setSchoolYears","updateClassState","setUpdateClassState","isShowingClassConfirmMenu","setIsShowingClassConfirmMenu","setPeriods","_getClass","extensionData","semesterId","roomResult","getRoom","_loadRooms","_loadSchoolYears","getSchoolYears","_loadTimetable","newArray","_updateClass","loadTimetable","getClass","loadRooms","loadSchoolYears","dayIndex","DayBlock","updateClass","setSelected","flatMap","_item","GovernmentHomePage","setLoadContentLoadingState","setNewMessageState","newMessageText","setNewMessageText","selectedPowerpoint","setSelectedPowerpoint","isAutoUpdatingText","setIsAutoUpdatingText","_loadCurrentPaultData","_createShareId","updatePaulyData","_updatePaulyData","storeText","loadCurrentPaultData","createShareId","NavBarBlock","des","blockLength","setIsExpandedMode","isHover","setIsHover","navigation","LinkStyle","NavBarComponent","setBlockLength","iconLength","setIconLength","pointerEvents","PageNotFound","paulyListData","paulyDataData","addDataArray","targetTypes","owner","properties","urlOne","boolean","urlTwo","_initializePaulyPartOne","secondUserId","currentUsersIdResult","createGroupData","groupTypes","mailEnabled","mailNickname","visibility","securityEnabled","createGroupResult","createGroupResultData","initializePaulyPartTwo","_initializePaulyPartTwo","teamsData","initializePaulyPartThree","_initializePaulyPartThree","getTeam","getRootSiteIdResult","getRootSiteIdResultData","paulyListNewData","secondRun","getPaulyListResult","getPaulyListResultData","callData","paulyDataResult","paulyDataResultData","addPaulyListResult","initStage","GovernmentAdmin","selectedUser","setSelectedUser","timeLeft","setTimeLeft","timeElapsed","setTimeElapsed","createdGroupId","setCreatedGroupId","selectedUpdates","setSelectedUpdates","partOneStartTime","setPartOneStartTime","partTwoStartTime","setPartTwoStartTime","initResult","setInitResult","initTwoResult","setInitTwoResult","initThreeResult","setInitThreeResult","currentInitStage","setCurrentInitStage","_initializePauly","partOne","partOneResult","initializePaulyPartOne","partTwoLoad","reject","partTwo","done","partThreeLoad","partThree","thirdResult","_initializePaulyFromPartTwo","_initializePaulyFromPartThree","miliSecondsPassed","totalSecondsLeft","minutesLeft","secondsLeft","ceil","minutesLeftString","secondsLeftString","totalMinutesPast","minutesPast","hoursPast","secondsPast","hoursLeftString","UserBlock","initializePauly","initializePaulyFromPartTwo","addData","newSelectedUpdates","initializePaulyFromPartThree","currentUserId","setCurrentUserId","loadedUsers","setLoadedUsers","loadUsersResult","setLoadUsersResult","_getUserId","getUsers","_getUsers","newUsers","getUserId","GovernmentRooms","roomState","setRoomState","GovermentRoomsCreate","createRoomState","setCreateRoomState","setRoomName","_createRoom","items","createRoom","MicrosoftGraphEditList","currentColumns","setCurrentColumns","isCoppiedToClipboard","setIsCoppiedToClipboard","_getListItems","_indexColumn","columnId","newColumnData","_getColumns","newCurrentColumns","columnGroup","readOnly","getListItems","getColumns","Clipboard","setStringAsync","indexColumn","MicrosoftGraphEditGroup","deleteGroupLoadingState","setDeleteGroupLoadingState","_deleteGroup","deleteGroup","MicrosoftGraphEditExtension","deleteExtensionLoadingState","setDeleteExtensionLoadingState","_deleteExtension","deleteExtension","MicrosoftGraphEdit","ChannelBlock","groupIndex","selectedGroup","channelIndex","isLoading","setIsLoading","_addChannel","outGroups","_removeChannel","itemResult","addChannel","removeChannel","GroupBlock","setSelectedGroup","GovernmentResources","getTeamsState","setGetTeamsState","resultGroups","getResult","channelResult","getResultData","indexResult","channelGetResult","ListItem","getDressCodeData","_getDressCodeData","newDressCodes","GovernmentDressCode","getDressCodeState","setGetDressCodeState","setDressCodes","DressCodeBlock","setDressCodeData","selectedDressCodeId","setSelectedDressCodeId","newDressCodeData","GovernmentDressCodeEdit","setDressCodeName","setDressCodeListId","createDressCodeState","setCreateDressCodeState","_loadCreateDressCode","createDressCode","setDressCodeState","isCreatingDressCode","setIsCreatingDressCode","deleteDressCodeState","setDeleteDressCodeState","_deleteDressCode","loadCreateDressCode","deleteDressCode","GovernmentTimetableEdit","dressCodeState","createTimetableLoadingState","setCreateTimetableLoadingState","setTimetableName","selectedSchedules","setSelectedSchedules","selectedDressCode","setSelectedDressCode","schoolDays","setSchoolDays","selectedDefaultSchedule","setSelectedDefaultSchedule","_createTimetable","scheduals","timetableDefaultScheduleId","_getDressCodes","getDressCodes","ScheduleBlock","SchoolDays","createTimetable","SchoolDayItem","newSchoolDays","saveCurrent","scheduleState","setScheduleState","ProfileBlock","checkIfStudent","role","reversed","reverse","join","reverseYearTwelve","reverseYearEleven","reverseYearTen","reverseYearNine","grade","userIds","imagesIdsMap","imageIdsArray","batchResultDownloadUrls","imagesDownloadUrls","thumbnails","c300x400_crop","outputUsers","imageDownloadUrl","mail","student","_getStudentData","createdTime","_changeStudentSelection","selectedFileListId","fileData","fileIndex","newFileData","_removeStudentSelection","getNumberOfBlocks","Students","_loadUsers","loadUsers","StudentBlock","numColumns","_getImage","newUser","updateStateUser","urlOut","imageDataUrl","calculateMarginEnds","widthIn","side","numberOfBlocks","widthRemaining","getImage","timer","ms","res","siteResult","siteData","copyPayload","copyResult","copyData","notComplete","resourceId","copyFetch","copyFetchData","getItemResult","getItemData","studentData","studentListResult","SelectMainFile","setFilePickingMode","setFileData","fileState","setFileState","setSelectedFileListId","getStudentData","selectedFileList","filePickingModeEnum","StudentSelectFileBlock","updateState","setUpdateState","_callRemoveSelection","removeStudentSelection","_callChangeSelection","changeStudentSelection","callRemoveSelection","callChangeSelection","GovernmentStudents","StudentItem","filePickingMode","select","transparent","onRequestClose","StudentsSelectFile","isReviewing","setIsReviewing","addImageState","setAddImageState","_loadAddImage","loadAddImage","LoadingView","setOveride","isShowingLogout","setIsShowingLogout","isConnected","setIsConnected","_checkIfConnected","Network","getNetworkStateAsync","isInternetReachable","intervalId","checkIfConnected","AuthenticatedView","dimensions","overide","LoadingScreen","NativeRouter","window","Routes","Route","element","GovernmentRoomsCreate","GovernmentSchedual","GovernmentScheduleEdit","GovernmentSportTeamEdit","getPaulyLists","_getPaulyLists","paulyListResult","paulyListResultData","getUserProfile","_getUserProfile","profileResult","profileData","validateGovernmentMode","_validateGovernmentMode","userResult","teamsResult","AsyncStorage","setItem","_checkIfGovernmentMode","getItem","_setWantGovernment","getWantGovernment","_getWantGovernment","pca","PublicClientApplication","authority","redirectUri","href","AppMain","MsalProvider","SafeAreaView","AuthDeep","getAuthToken","_getAuthToken","userInitated","government","setWantGovernment","accounts","getAllAccounts","setActiveAccount","checkIfGovernmentMode","addEventCallback","EventType","LOGIN_SUCCESS","handleRedirectPromise","then","authResult","loginRedirect","catch","err","_refreshToken","refreshToken","AuthenticatedTemplate","AuthenticatedViewMain","UnauthenticatedTemplate","windowDimensions","Dimensions","screenDimensions","AppCore","screen","setDimensions","subscription","addEventListener","oldWidth","newWidth","newHeight","oldCurrentBreakPointMode","xSmall","xLarge","large","medium","small","theme","DefaultTheme","roundness","colors","primary","primaryContainer","onPrimary","onPrimaryContainer","inversePrimary","secondary","secondaryContainer","onSecondary","onSecondaryContainer","tertiary","tertiaryContainer","onTertiary","surface","surfaceVariant","onSurfaceVariant","background","onSurface","onBackground","backdrop","outline","outlineVariant","shadow","scrim","Provider","PaperProvider","SafeAreaProvider","GestureHandlerRootView","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","loaded","__webpack_modules__","call","m","O","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","n","getter","__esModule","leafPrototypes","getProto","getPrototypeOf","obj","t","this","ns","def","indexOf","getOwnPropertyNames","definition","o","enumerable","g","globalThis","Function","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","p","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","bind","__webpack_exports__"],"sourceRoot":""}